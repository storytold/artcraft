import { jsx as q, jsxs as Pe, Fragment as Vt } from "react/jsx-runtime";
import * as Y from "react";
import ce, { createContext as Br, useState as _e, useRef as ie, useEffect as Ne, isValidElement as Dl, cloneElement as Ll, useContext as Ut, useMemo as Yt, useLayoutEffect as Ri, forwardRef as Pd, useCallback as et, Fragment as ar, createElement as N1, version as dZ, useReducer as uF, createRef as Rx, useId as Bg, useSyncExternalStore as pZ } from "react";
import * as ld from "react-dom";
import YE, { unstable_batchedUpdates as fF, createPortal as mZ } from "react-dom";
function jl(e, t, { checkForDefaultPrevented: r = !0 } = {}) {
  return function(n) {
    if (e == null || e(n), r === !1 || !n.defaultPrevented)
      return t == null ? void 0 : t(n);
  };
}
function rA(e, t) {
  if (typeof e == "function")
    return e(t);
  e != null && (e.current = t);
}
function dF(...e) {
  return (t) => {
    let r = !1;
    const n = e.map((o) => {
      const a = rA(o, t);
      return !r && typeof a == "function" && (r = !0), a;
    });
    if (r)
      return () => {
        for (let o = 0; o < n.length; o++) {
          const a = n[o];
          typeof a == "function" ? a() : rA(e[o], null);
        }
      };
  };
}
function Tu(...e) {
  return Y.useCallback(dF(...e), e);
}
function gZ(e, t) {
  const r = Y.createContext(t), n = (a) => {
    const { children: i, ...s } = a, l = Y.useMemo(() => s, Object.values(s));
    return /* @__PURE__ */ q(r.Provider, { value: l, children: i });
  };
  n.displayName = e + "Provider";
  function o(a) {
    const i = Y.useContext(r);
    if (i) return i;
    if (t !== void 0) return t;
    throw new Error(`\`${a}\` must be used within \`${e}\``);
  }
  return [n, o];
}
function hZ(e, t = []) {
  let r = [];
  function n(a, i) {
    const s = Y.createContext(i), l = r.length;
    r = [...r, i];
    const c = (f) => {
      var p;
      const { scope: v, children: x, ...b } = f, m = ((p = v == null ? void 0 : v[e]) == null ? void 0 : p[l]) || s, w = Y.useMemo(() => b, Object.values(b));
      return /* @__PURE__ */ q(m.Provider, { value: w, children: x });
    };
    c.displayName = a + "Provider";
    function u(f, p) {
      var v;
      const x = ((v = p == null ? void 0 : p[e]) == null ? void 0 : v[l]) || s, b = Y.useContext(x);
      if (b) return b;
      if (i !== void 0) return i;
      throw new Error(`\`${f}\` must be used within \`${a}\``);
    }
    return [c, u];
  }
  const o = () => {
    const a = r.map((i) => Y.createContext(i));
    return function(i) {
      const s = (i == null ? void 0 : i[e]) || a;
      return Y.useMemo(
        () => ({ [`__scope${e}`]: { ...i, [e]: s } }),
        [i, s]
      );
    };
  };
  return o.scopeName = e, [n, bZ(o, ...t)];
}
function bZ(...e) {
  const t = e[0];
  if (e.length === 1) return t;
  const r = () => {
    const n = e.map((o) => ({
      useScope: o(),
      scopeName: o.scopeName
    }));
    return function(o) {
      const a = n.reduce((i, { useScope: s, scopeName: l }) => {
        const c = s(o)[`__scope${l}`];
        return { ...i, ...c };
      }, {});
      return Y.useMemo(() => ({ [`__scope${t.scopeName}`]: a }), [a]);
    };
  };
  return r.scopeName = t.scopeName, r;
}
var Xg = globalThis != null && globalThis.document ? Y.useLayoutEffect : () => {
}, yZ = Y[" useId ".trim().toString()] || (() => {
}), vZ = 0;
function zx(e) {
  const [t, r] = Y.useState(yZ());
  return Xg(() => {
    r((n) => n ?? String(vZ++));
  }, [e]), e || (t ? `radix-${t}` : "");
}
var xZ = Y[" useInsertionEffect ".trim().toString()] || Xg;
function wZ({
  prop: e,
  defaultProp: t,
  onChange: r = () => {
  },
  caller: n
}) {
  const [o, a, i] = kZ({
    defaultProp: t,
    onChange: r
  }), s = e !== void 0, l = s ? e : o;
  {
    const u = Y.useRef(e !== void 0);
    Y.useEffect(() => {
      const f = u.current;
      f !== s && console.warn(
        `${n} is changing from ${f ? "controlled" : "uncontrolled"} to ${s ? "controlled" : "uncontrolled"}. Components should not switch from controlled to uncontrolled (or vice versa). Decide between using a controlled or uncontrolled value for the lifetime of the component.`
      ), u.current = s;
    }, [s, n]);
  }
  const c = Y.useCallback(
    (u) => {
      var f;
      if (s) {
        const p = $Z(u) ? u(e) : u;
        p !== e && ((f = i.current) == null || f.call(i, p));
      } else
        a(u);
    },
    [s, e, a, i]
  );
  return [l, c];
}
function kZ({
  defaultProp: e,
  onChange: t
}) {
  const [r, n] = Y.useState(e), o = Y.useRef(r), a = Y.useRef(t);
  return xZ(() => {
    a.current = t;
  }, [t]), Y.useEffect(() => {
    var i;
    o.current !== r && ((i = a.current) == null || i.call(a, r), o.current = r);
  }, [r, o]), [r, n, a];
}
function $Z(e) {
  return typeof e == "function";
}
// @__NO_SIDE_EFFECTS__
function pF(e) {
  const t = /* @__PURE__ */ OZ(e), r = Y.forwardRef((n, o) => {
    const { children: a, ...i } = n, s = Y.Children.toArray(a), l = s.find(SZ);
    if (l) {
      const c = l.props.children, u = s.map((f) => f === l ? Y.Children.count(c) > 1 ? Y.Children.only(null) : Y.isValidElement(c) ? c.props.children : null : f);
      return /* @__PURE__ */ q(t, { ...i, ref: o, children: Y.isValidElement(c) ? Y.cloneElement(c, void 0, u) : null });
    }
    return /* @__PURE__ */ q(t, { ...i, ref: o, children: a });
  });
  return r.displayName = `${e}.Slot`, r;
}
// @__NO_SIDE_EFFECTS__
function OZ(e) {
  const t = Y.forwardRef((r, n) => {
    const { children: o, ...a } = r;
    if (Y.isValidElement(o)) {
      const i = CZ(o), s = PZ(a, o.props);
      return o.type !== Y.Fragment && (s.ref = n ? dF(n, i) : i), Y.cloneElement(o, s);
    }
    return Y.Children.count(o) > 1 ? Y.Children.only(null) : null;
  });
  return t.displayName = `${e}.SlotClone`, t;
}
var EZ = Symbol("radix.slottable");
function SZ(e) {
  return Y.isValidElement(e) && typeof e.type == "function" && "__radixId" in e.type && e.type.__radixId === EZ;
}
function PZ(e, t) {
  const r = { ...t };
  for (const n in t) {
    const o = e[n], a = t[n];
    /^on[A-Z]/.test(n) ? o && a ? r[n] = (...i) => {
      const s = a(...i);
      return o(...i), s;
    } : o && (r[n] = o) : n === "style" ? r[n] = { ...o, ...a } : n === "className" && (r[n] = [o, a].filter(Boolean).join(" "));
  }
  return { ...e, ...r };
}
function CZ(e) {
  var t, r;
  let n = (t = Object.getOwnPropertyDescriptor(e.props, "ref")) == null ? void 0 : t.get, o = n && "isReactWarning" in n && n.isReactWarning;
  return o ? e.ref : (n = (r = Object.getOwnPropertyDescriptor(e, "ref")) == null ? void 0 : r.get, o = n && "isReactWarning" in n && n.isReactWarning, o ? e.props.ref : e.props.ref || e.ref);
}
var AZ = [
  "a",
  "button",
  "div",
  "form",
  "h2",
  "h3",
  "img",
  "input",
  "label",
  "li",
  "nav",
  "ol",
  "p",
  "select",
  "span",
  "svg",
  "ul"
], Ta = AZ.reduce((e, t) => {
  const r = /* @__PURE__ */ pF(`Primitive.${t}`), n = Y.forwardRef((o, a) => {
    const { asChild: i, ...s } = o, l = i ? r : t;
    return typeof window < "u" && (window[Symbol.for("radix-ui")] = !0), /* @__PURE__ */ q(l, { ...s, ref: a });
  });
  return n.displayName = `Primitive.${t}`, { ...e, [t]: n };
}, {});
function _Z(e, t) {
  e && ld.flushSync(() => e.dispatchEvent(t));
}
function Kg(e) {
  const t = Y.useRef(e);
  return Y.useEffect(() => {
    t.current = e;
  }), Y.useMemo(() => (...r) => {
    var n;
    return (n = t.current) == null ? void 0 : n.call(t, ...r);
  }, []);
}
function NZ(e, t = globalThis == null ? void 0 : globalThis.document) {
  const r = Kg(e);
  Y.useEffect(() => {
    const n = (o) => {
      o.key === "Escape" && r(o);
    };
    return t.addEventListener("keydown", n, { capture: !0 }), () => t.removeEventListener("keydown", n, { capture: !0 });
  }, [r, t]);
}
var jZ = "DismissableLayer", I$ = "dismissableLayer.update", IZ = "dismissableLayer.pointerDownOutside", TZ = "dismissableLayer.focusOutside", nA, mF = Y.createContext({
  layers: /* @__PURE__ */ new Set(),
  layersWithOutsidePointerEventsDisabled: /* @__PURE__ */ new Set(),
  branches: /* @__PURE__ */ new Set()
}), gF = Y.forwardRef(
  (e, t) => {
    const {
      disableOutsidePointerEvents: r = !1,
      onEscapeKeyDown: n,
      onPointerDownOutside: o,
      onFocusOutside: a,
      onInteractOutside: i,
      onDismiss: s,
      ...l
    } = e, c = Y.useContext(mF), [u, f] = Y.useState(null), p = (u == null ? void 0 : u.ownerDocument) ?? (globalThis == null ? void 0 : globalThis.document), [, v] = Y.useState({}), x = Tu(t, (G) => f(G)), b = Array.from(c.layers), [m] = [...c.layersWithOutsidePointerEventsDisabled].slice(-1), w = b.indexOf(m), $ = u ? b.indexOf(u) : -1, E = c.layersWithOutsidePointerEventsDisabled.size > 0, S = $ >= w, h = zZ((G) => {
      const Q = G.target, Z = [...c.branches].some((X) => X.contains(Q));
      !S || Z || (o == null || o(G), i == null || i(G), G.defaultPrevented || s == null || s());
    }, p), U = FZ((G) => {
      const Q = G.target;
      [...c.branches].some((Z) => Z.contains(Q)) || (a == null || a(G), i == null || i(G), G.defaultPrevented || s == null || s());
    }, p);
    return NZ((G) => {
      $ === c.layers.size - 1 && (n == null || n(G), !G.defaultPrevented && s && (G.preventDefault(), s()));
    }, p), Y.useEffect(() => {
      if (u)
        return r && (c.layersWithOutsidePointerEventsDisabled.size === 0 && (nA = p.body.style.pointerEvents, p.body.style.pointerEvents = "none"), c.layersWithOutsidePointerEventsDisabled.add(u)), c.layers.add(u), oA(), () => {
          r && c.layersWithOutsidePointerEventsDisabled.size === 1 && (p.body.style.pointerEvents = nA);
        };
    }, [u, p, r, c]), Y.useEffect(() => () => {
      u && (c.layers.delete(u), c.layersWithOutsidePointerEventsDisabled.delete(u), oA());
    }, [u, c]), Y.useEffect(() => {
      const G = () => v({});
      return document.addEventListener(I$, G), () => document.removeEventListener(I$, G);
    }, []), /* @__PURE__ */ q(
      Ta.div,
      {
        ...l,
        ref: x,
        style: {
          pointerEvents: E ? S ? "auto" : "none" : void 0,
          ...e.style
        },
        onFocusCapture: jl(e.onFocusCapture, U.onFocusCapture),
        onBlurCapture: jl(e.onBlurCapture, U.onBlurCapture),
        onPointerDownCapture: jl(
          e.onPointerDownCapture,
          h.onPointerDownCapture
        )
      }
    );
  }
);
gF.displayName = jZ;
var MZ = "DismissableLayerBranch", RZ = Y.forwardRef((e, t) => {
  const r = Y.useContext(mF), n = Y.useRef(null), o = Tu(t, n);
  return Y.useEffect(() => {
    const a = n.current;
    if (a)
      return r.branches.add(a), () => {
        r.branches.delete(a);
      };
  }, [r.branches]), /* @__PURE__ */ q(Ta.div, { ...e, ref: o });
});
RZ.displayName = MZ;
function zZ(e, t = globalThis == null ? void 0 : globalThis.document) {
  const r = Kg(e), n = Y.useRef(!1), o = Y.useRef(() => {
  });
  return Y.useEffect(() => {
    const a = (s) => {
      if (s.target && !n.current) {
        let l = function() {
          hF(
            IZ,
            r,
            c,
            { discrete: !0 }
          );
        };
        const c = { originalEvent: s };
        s.pointerType === "touch" ? (t.removeEventListener("click", o.current), o.current = l, t.addEventListener("click", o.current, { once: !0 })) : l();
      } else
        t.removeEventListener("click", o.current);
      n.current = !1;
    }, i = window.setTimeout(() => {
      t.addEventListener("pointerdown", a);
    }, 0);
    return () => {
      window.clearTimeout(i), t.removeEventListener("pointerdown", a), t.removeEventListener("click", o.current);
    };
  }, [t, r]), {
    // ensures we check React component tree (not just DOM tree)
    onPointerDownCapture: () => n.current = !0
  };
}
function FZ(e, t = globalThis == null ? void 0 : globalThis.document) {
  const r = Kg(e), n = Y.useRef(!1);
  return Y.useEffect(() => {
    const o = (a) => {
      a.target && !n.current && hF(TZ, r, { originalEvent: a }, {
        discrete: !1
      });
    };
    return t.addEventListener("focusin", o), () => t.removeEventListener("focusin", o);
  }, [t, r]), {
    onFocusCapture: () => n.current = !0,
    onBlurCapture: () => n.current = !1
  };
}
function oA() {
  const e = new CustomEvent(I$);
  document.dispatchEvent(e);
}
function hF(e, t, r, { discrete: n }) {
  const o = r.originalEvent.target, a = new CustomEvent(e, { bubbles: !1, cancelable: !0, detail: r });
  t && o.addEventListener(e, t, { once: !0 }), n ? _Z(o, a) : o.dispatchEvent(a);
}
var Fx = "focusScope.autoFocusOnMount", Dx = "focusScope.autoFocusOnUnmount", aA = { bubbles: !1, cancelable: !0 }, DZ = "FocusScope", bF = Y.forwardRef((e, t) => {
  const {
    loop: r = !1,
    trapped: n = !1,
    onMountAutoFocus: o,
    onUnmountAutoFocus: a,
    ...i
  } = e, [s, l] = Y.useState(null), c = Kg(o), u = Kg(a), f = Y.useRef(null), p = Tu(t, (b) => l(b)), v = Y.useRef({
    paused: !1,
    pause() {
      this.paused = !0;
    },
    resume() {
      this.paused = !1;
    }
  }).current;
  Y.useEffect(() => {
    if (n) {
      let b = function(E) {
        if (v.paused || !s) return;
        const S = E.target;
        s.contains(S) ? f.current = S : vl(f.current, { select: !0 });
      }, m = function(E) {
        if (v.paused || !s) return;
        const S = E.relatedTarget;
        S !== null && (s.contains(S) || vl(f.current, { select: !0 }));
      }, w = function(E) {
        if (document.activeElement === document.body)
          for (const S of E)
            S.removedNodes.length > 0 && vl(s);
      };
      document.addEventListener("focusin", b), document.addEventListener("focusout", m);
      const $ = new MutationObserver(w);
      return s && $.observe(s, { childList: !0, subtree: !0 }), () => {
        document.removeEventListener("focusin", b), document.removeEventListener("focusout", m), $.disconnect();
      };
    }
  }, [n, s, v.paused]), Y.useEffect(() => {
    if (s) {
      sA.add(v);
      const b = document.activeElement;
      if (!s.contains(b)) {
        const m = new CustomEvent(Fx, aA);
        s.addEventListener(Fx, c), s.dispatchEvent(m), m.defaultPrevented || (LZ(HZ(yF(s)), { select: !0 }), document.activeElement === b && vl(s));
      }
      return () => {
        s.removeEventListener(Fx, c), setTimeout(() => {
          const m = new CustomEvent(Dx, aA);
          s.addEventListener(Dx, u), s.dispatchEvent(m), m.defaultPrevented || vl(b ?? document.body, { select: !0 }), s.removeEventListener(Dx, u), sA.remove(v);
        }, 0);
      };
    }
  }, [s, c, u, v]);
  const x = Y.useCallback(
    (b) => {
      if (!r && !n || v.paused) return;
      const m = b.key === "Tab" && !b.altKey && !b.ctrlKey && !b.metaKey, w = document.activeElement;
      if (m && w) {
        const $ = b.currentTarget, [E, S] = VZ($);
        E && S ? !b.shiftKey && w === S ? (b.preventDefault(), r && vl(E, { select: !0 })) : b.shiftKey && w === E && (b.preventDefault(), r && vl(S, { select: !0 })) : w === $ && b.preventDefault();
      }
    },
    [r, n, v.paused]
  );
  return /* @__PURE__ */ q(Ta.div, { tabIndex: -1, ...i, ref: p, onKeyDown: x });
});
bF.displayName = DZ;
function LZ(e, { select: t = !1 } = {}) {
  const r = document.activeElement;
  for (const n of e)
    if (vl(n, { select: t }), document.activeElement !== r) return;
}
function VZ(e) {
  const t = yF(e), r = iA(t, e), n = iA(t.reverse(), e);
  return [r, n];
}
function yF(e) {
  const t = [], r = document.createTreeWalker(e, NodeFilter.SHOW_ELEMENT, {
    acceptNode: (n) => {
      const o = n.tagName === "INPUT" && n.type === "hidden";
      return n.disabled || n.hidden || o ? NodeFilter.FILTER_SKIP : n.tabIndex >= 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;
    }
  });
  for (; r.nextNode(); ) t.push(r.currentNode);
  return t;
}
function iA(e, t) {
  for (const r of e)
    if (!WZ(r, { upTo: t })) return r;
}
function WZ(e, { upTo: t }) {
  if (getComputedStyle(e).visibility === "hidden") return !0;
  for (; e; ) {
    if (t !== void 0 && e === t) return !1;
    if (getComputedStyle(e).display === "none") return !0;
    e = e.parentElement;
  }
  return !1;
}
function UZ(e) {
  return e instanceof HTMLInputElement && "select" in e;
}
function vl(e, { select: t = !1 } = {}) {
  if (e && e.focus) {
    const r = document.activeElement;
    e.focus({ preventScroll: !0 }), e !== r && UZ(e) && t && e.select();
  }
}
var sA = YZ();
function YZ() {
  let e = [];
  return {
    add(t) {
      const r = e[0];
      t !== r && (r == null || r.pause()), e = lA(e, t), e.unshift(t);
    },
    remove(t) {
      var r;
      e = lA(e, t), (r = e[0]) == null || r.resume();
    }
  };
}
function lA(e, t) {
  const r = [...e], n = r.indexOf(t);
  return n !== -1 && r.splice(n, 1), r;
}
function HZ(e) {
  return e.filter((t) => t.tagName !== "A");
}
var GZ = "Portal", vF = Y.forwardRef((e, t) => {
  var r;
  const { container: n, ...o } = e, [a, i] = Y.useState(!1);
  Xg(() => i(!0), []);
  const s = n || a && ((r = globalThis == null ? void 0 : globalThis.document) == null ? void 0 : r.body);
  return s ? YE.createPortal(/* @__PURE__ */ q(Ta.div, { ...o, ref: t }), s) : null;
});
vF.displayName = GZ;
function qZ(e, t) {
  return Y.useReducer((r, n) => t[r][n] ?? r, e);
}
var j1 = (e) => {
  const { present: t, children: r } = e, n = BZ(t), o = typeof r == "function" ? r({ present: n.isPresent }) : Y.Children.only(r), a = Tu(n.ref, XZ(o));
  return typeof r == "function" || n.isPresent ? Y.cloneElement(o, { ref: a }) : null;
};
j1.displayName = "Presence";
function BZ(e) {
  const [t, r] = Y.useState(), n = Y.useRef(null), o = Y.useRef(e), a = Y.useRef("none"), i = e ? "mounted" : "unmounted", [s, l] = qZ(i, {
    mounted: {
      UNMOUNT: "unmounted",
      ANIMATION_OUT: "unmountSuspended"
    },
    unmountSuspended: {
      MOUNT: "mounted",
      ANIMATION_END: "unmounted"
    },
    unmounted: {
      MOUNT: "mounted"
    }
  });
  return Y.useEffect(() => {
    const c = Cb(n.current);
    a.current = s === "mounted" ? c : "none";
  }, [s]), Xg(() => {
    const c = n.current, u = o.current;
    if (u !== e) {
      const f = a.current, p = Cb(c);
      e ? l("MOUNT") : p === "none" || (c == null ? void 0 : c.display) === "none" ? l("UNMOUNT") : l(u && f !== p ? "ANIMATION_OUT" : "UNMOUNT"), o.current = e;
    }
  }, [e, l]), Xg(() => {
    if (t) {
      let c;
      const u = t.ownerDocument.defaultView ?? window, f = (v) => {
        const x = Cb(n.current).includes(v.animationName);
        if (v.target === t && x && (l("ANIMATION_END"), !o.current)) {
          const b = t.style.animationFillMode;
          t.style.animationFillMode = "forwards", c = u.setTimeout(() => {
            t.style.animationFillMode === "forwards" && (t.style.animationFillMode = b);
          });
        }
      }, p = (v) => {
        v.target === t && (a.current = Cb(n.current));
      };
      return t.addEventListener("animationstart", p), t.addEventListener("animationcancel", f), t.addEventListener("animationend", f), () => {
        u.clearTimeout(c), t.removeEventListener("animationstart", p), t.removeEventListener("animationcancel", f), t.removeEventListener("animationend", f);
      };
    } else
      l("ANIMATION_END");
  }, [t, l]), {
    isPresent: ["mounted", "unmountSuspended"].includes(s),
    ref: Y.useCallback((c) => {
      n.current = c ? getComputedStyle(c) : null, r(c);
    }, [])
  };
}
function Cb(e) {
  return (e == null ? void 0 : e.animationName) || "none";
}
function XZ(e) {
  var t, r;
  let n = (t = Object.getOwnPropertyDescriptor(e.props, "ref")) == null ? void 0 : t.get, o = n && "isReactWarning" in n && n.isReactWarning;
  return o ? e.ref : (n = (r = Object.getOwnPropertyDescriptor(e, "ref")) == null ? void 0 : r.get, o = n && "isReactWarning" in n && n.isReactWarning, o ? e.props.ref : e.props.ref || e.ref);
}
var Lx = 0;
function KZ() {
  Y.useEffect(() => {
    const e = document.querySelectorAll("[data-radix-focus-guard]");
    return document.body.insertAdjacentElement("afterbegin", e[0] ?? cA()), document.body.insertAdjacentElement("beforeend", e[1] ?? cA()), Lx++, () => {
      Lx === 1 && document.querySelectorAll("[data-radix-focus-guard]").forEach((t) => t.remove()), Lx--;
    };
  }, []);
}
function cA() {
  const e = document.createElement("span");
  return e.setAttribute("data-radix-focus-guard", ""), e.tabIndex = 0, e.style.outline = "none", e.style.opacity = "0", e.style.position = "fixed", e.style.pointerEvents = "none", e;
}
var oa = function() {
  return oa = Object.assign || function(e) {
    for (var t, r = 1, n = arguments.length; r < n; r++) {
      t = arguments[r];
      for (var o in t) Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o]);
    }
    return e;
  }, oa.apply(this, arguments);
};
function xF(e, t) {
  var r = {};
  for (var n in e) Object.prototype.hasOwnProperty.call(e, n) && t.indexOf(n) < 0 && (r[n] = e[n]);
  if (e != null && typeof Object.getOwnPropertySymbols == "function")
    for (var o = 0, n = Object.getOwnPropertySymbols(e); o < n.length; o++)
      t.indexOf(n[o]) < 0 && Object.prototype.propertyIsEnumerable.call(e, n[o]) && (r[n[o]] = e[n[o]]);
  return r;
}
function JZ(e, t, r) {
  for (var n = 0, o = t.length, a; n < o; n++)
    (a || !(n in t)) && (a || (a = Array.prototype.slice.call(t, 0, n)), a[n] = t[n]);
  return e.concat(a || Array.prototype.slice.call(t));
}
var zy = "right-scroll-bar-position", Fy = "width-before-scroll-bar", QZ = "with-scroll-bars-hidden", ZZ = "--removed-body-scroll-bar-size";
function Vx(e, t) {
  return typeof e == "function" ? e(t) : e && (e.current = t), e;
}
function eee(e, t) {
  var r = _e(function() {
    return {
      // value
      value: e,
      // last callback
      callback: t,
      // "memoized" public interface
      facade: {
        get current() {
          return r.value;
        },
        set current(n) {
          var o = r.value;
          o !== n && (r.value = n, r.callback(n, o));
        }
      }
    };
  })[0];
  return r.callback = t, r.facade;
}
var tee = typeof window < "u" ? Y.useLayoutEffect : Y.useEffect, uA = /* @__PURE__ */ new WeakMap();
function ree(e, t) {
  var r = eee(null, function(n) {
    return e.forEach(function(o) {
      return Vx(o, n);
    });
  });
  return tee(function() {
    var n = uA.get(r);
    if (n) {
      var o = new Set(n), a = new Set(e), i = r.current;
      o.forEach(function(s) {
        a.has(s) || Vx(s, null);
      }), a.forEach(function(s) {
        o.has(s) || Vx(s, i);
      });
    }
    uA.set(r, e);
  }, [e]), r;
}
function nee(e) {
  return e;
}
function oee(e, t) {
  t === void 0 && (t = nee);
  var r = [], n = !1, o = {
    read: function() {
      if (n)
        throw new Error("Sidecar: could not `read` from an `assigned` medium. `read` could be used only with `useMedium`.");
      return r.length ? r[r.length - 1] : e;
    },
    useMedium: function(a) {
      var i = t(a, n);
      return r.push(i), function() {
        r = r.filter(function(s) {
          return s !== i;
        });
      };
    },
    assignSyncMedium: function(a) {
      for (n = !0; r.length; ) {
        var i = r;
        r = [], i.forEach(a);
      }
      r = {
        push: function(s) {
          return a(s);
        },
        filter: function() {
          return r;
        }
      };
    },
    assignMedium: function(a) {
      n = !0;
      var i = [];
      if (r.length) {
        var s = r;
        r = [], s.forEach(a), i = r;
      }
      var l = function() {
        var u = i;
        i = [], u.forEach(a);
      }, c = function() {
        return Promise.resolve().then(l);
      };
      c(), r = {
        push: function(u) {
          i.push(u), c();
        },
        filter: function(u) {
          return i = i.filter(u), r;
        }
      };
    }
  };
  return o;
}
function aee(e) {
  e === void 0 && (e = {});
  var t = oee(null);
  return t.options = oa({ async: !0, ssr: !1 }, e), t;
}
var wF = function(e) {
  var t = e.sideCar, r = xF(e, ["sideCar"]);
  if (!t)
    throw new Error("Sidecar: please provide `sideCar` property to import the right car");
  var n = t.read();
  if (!n)
    throw new Error("Sidecar medium not found");
  return Y.createElement(n, oa({}, r));
};
wF.isSideCarExport = !0;
function iee(e, t) {
  return e.useMedium(t), wF;
}
var kF = aee(), Wx = function() {
}, I1 = Y.forwardRef(function(e, t) {
  var r = Y.useRef(null), n = Y.useState({
    onScrollCapture: Wx,
    onWheelCapture: Wx,
    onTouchMoveCapture: Wx
  }), o = n[0], a = n[1], i = e.forwardProps, s = e.children, l = e.className, c = e.removeScrollBar, u = e.enabled, f = e.shards, p = e.sideCar, v = e.noRelative, x = e.noIsolation, b = e.inert, m = e.allowPinchZoom, w = e.as, $ = w === void 0 ? "div" : w, E = e.gapMode, S = xF(e, ["forwardProps", "children", "className", "removeScrollBar", "enabled", "shards", "sideCar", "noRelative", "noIsolation", "inert", "allowPinchZoom", "as", "gapMode"]), h = p, U = ree([r, t]), G = oa(oa({}, S), o);
  return Y.createElement(
    Y.Fragment,
    null,
    u && Y.createElement(h, { sideCar: kF, removeScrollBar: c, shards: f, noRelative: v, noIsolation: x, inert: b, setCallbacks: a, allowPinchZoom: !!m, lockRef: r, gapMode: E }),
    i ? Y.cloneElement(Y.Children.only(s), oa(oa({}, G), { ref: U })) : Y.createElement($, oa({}, G, { className: l, ref: U }), s)
  );
});
I1.defaultProps = {
  enabled: !0,
  removeScrollBar: !0,
  inert: !1
};
I1.classNames = {
  fullWidth: Fy,
  zeroRight: zy
};
var see = function() {
  if (typeof __webpack_nonce__ < "u")
    return __webpack_nonce__;
};
function lee() {
  if (!document)
    return null;
  var e = document.createElement("style");
  e.type = "text/css";
  var t = see();
  return t && e.setAttribute("nonce", t), e;
}
function cee(e, t) {
  e.styleSheet ? e.styleSheet.cssText = t : e.appendChild(document.createTextNode(t));
}
function uee(e) {
  var t = document.head || document.getElementsByTagName("head")[0];
  t.appendChild(e);
}
var fee = function() {
  var e = 0, t = null;
  return {
    add: function(r) {
      e == 0 && (t = lee()) && (cee(t, r), uee(t)), e++;
    },
    remove: function() {
      e--, !e && t && (t.parentNode && t.parentNode.removeChild(t), t = null);
    }
  };
}, dee = function() {
  var e = fee();
  return function(t, r) {
    Y.useEffect(function() {
      return e.add(t), function() {
        e.remove();
      };
    }, [t && r]);
  };
}, $F = function() {
  var e = dee(), t = function(r) {
    var n = r.styles, o = r.dynamic;
    return e(n, o), null;
  };
  return t;
}, pee = {
  left: 0,
  top: 0,
  right: 0,
  gap: 0
}, Ux = function(e) {
  return parseInt(e || "", 10) || 0;
}, mee = function(e) {
  var t = window.getComputedStyle(document.body), r = t[e === "padding" ? "paddingLeft" : "marginLeft"], n = t[e === "padding" ? "paddingTop" : "marginTop"], o = t[e === "padding" ? "paddingRight" : "marginRight"];
  return [Ux(r), Ux(n), Ux(o)];
}, gee = function(e) {
  if (e === void 0 && (e = "margin"), typeof window > "u")
    return pee;
  var t = mee(e), r = document.documentElement.clientWidth, n = window.innerWidth;
  return {
    left: t[0],
    top: t[1],
    right: t[2],
    gap: Math.max(0, n - r + t[2] - t[0])
  };
}, hee = $F(), Ef = "data-scroll-locked", bee = function(e, t, r, n) {
  var o = e.left, a = e.top, i = e.right, s = e.gap;
  return r === void 0 && (r = "margin"), `
  .`.concat(QZ, ` {
   overflow: hidden `).concat(n, `;
   padding-right: `).concat(s, "px ").concat(n, `;
  }
  body[`).concat(Ef, `] {
    overflow: hidden `).concat(n, `;
    overscroll-behavior: contain;
    `).concat([
    t && "position: relative ".concat(n, ";"),
    r === "margin" && `
    padding-left: `.concat(o, `px;
    padding-top: `).concat(a, `px;
    padding-right: `).concat(i, `px;
    margin-left:0;
    margin-top:0;
    margin-right: `).concat(s, "px ").concat(n, `;
    `),
    r === "padding" && "padding-right: ".concat(s, "px ").concat(n, ";")
  ].filter(Boolean).join(""), `
  }
  
  .`).concat(zy, ` {
    right: `).concat(s, "px ").concat(n, `;
  }
  
  .`).concat(Fy, ` {
    margin-right: `).concat(s, "px ").concat(n, `;
  }
  
  .`).concat(zy, " .").concat(zy, ` {
    right: 0 `).concat(n, `;
  }
  
  .`).concat(Fy, " .").concat(Fy, ` {
    margin-right: 0 `).concat(n, `;
  }
  
  body[`).concat(Ef, `] {
    `).concat(ZZ, ": ").concat(s, `px;
  }
`);
}, fA = function() {
  var e = parseInt(document.body.getAttribute(Ef) || "0", 10);
  return isFinite(e) ? e : 0;
}, yee = function() {
  Y.useEffect(function() {
    return document.body.setAttribute(Ef, (fA() + 1).toString()), function() {
      var e = fA() - 1;
      e <= 0 ? document.body.removeAttribute(Ef) : document.body.setAttribute(Ef, e.toString());
    };
  }, []);
}, vee = function(e) {
  var t = e.noRelative, r = e.noImportant, n = e.gapMode, o = n === void 0 ? "margin" : n;
  yee();
  var a = Y.useMemo(function() {
    return gee(o);
  }, [o]);
  return Y.createElement(hee, { styles: bee(a, !t, o, r ? "" : "!important") });
}, T$ = !1;
if (typeof window < "u")
  try {
    var Ab = Object.defineProperty({}, "passive", {
      get: function() {
        return T$ = !0, !0;
      }
    });
    window.addEventListener("test", Ab, Ab), window.removeEventListener("test", Ab, Ab);
  } catch {
    T$ = !1;
  }
var zu = T$ ? { passive: !1 } : !1, xee = function(e) {
  return e.tagName === "TEXTAREA";
}, OF = function(e, t) {
  if (!(e instanceof Element))
    return !1;
  var r = window.getComputedStyle(e);
  return (
    // not-not-scrollable
    r[t] !== "hidden" && // contains scroll inside self
    !(r.overflowY === r.overflowX && !xee(e) && r[t] === "visible")
  );
}, wee = function(e) {
  return OF(e, "overflowY");
}, kee = function(e) {
  return OF(e, "overflowX");
}, dA = function(e, t) {
  var r = t.ownerDocument, n = t;
  do {
    typeof ShadowRoot < "u" && n instanceof ShadowRoot && (n = n.host);
    var o = EF(e, n);
    if (o) {
      var a = SF(e, n), i = a[1], s = a[2];
      if (i > s)
        return !0;
    }
    n = n.parentNode;
  } while (n && n !== r.body);
  return !1;
}, $ee = function(e) {
  var t = e.scrollTop, r = e.scrollHeight, n = e.clientHeight;
  return [
    t,
    r,
    n
  ];
}, Oee = function(e) {
  var t = e.scrollLeft, r = e.scrollWidth, n = e.clientWidth;
  return [
    t,
    r,
    n
  ];
}, EF = function(e, t) {
  return e === "v" ? wee(t) : kee(t);
}, SF = function(e, t) {
  return e === "v" ? $ee(t) : Oee(t);
}, Eee = function(e, t) {
  return e === "h" && t === "rtl" ? -1 : 1;
}, See = function(e, t, r, n, o) {
  var a = Eee(e, window.getComputedStyle(t).direction), i = a * n, s = r.target, l = t.contains(s), c = !1, u = i > 0, f = 0, p = 0;
  do {
    if (!s)
      break;
    var v = SF(e, s), x = v[0], b = v[1], m = v[2], w = b - m - a * x;
    (x || w) && EF(e, s) && (f += w, p += x);
    var $ = s.parentNode;
    s = $ && $.nodeType === Node.DOCUMENT_FRAGMENT_NODE ? $.host : $;
  } while (
    // portaled content
    !l && s !== document.body || // self content
    l && (t.contains(s) || t === s)
  );
  return (u && Math.abs(f) < 1 || !u && Math.abs(p) < 1) && (c = !0), c;
}, _b = function(e) {
  return "changedTouches" in e ? [e.changedTouches[0].clientX, e.changedTouches[0].clientY] : [0, 0];
}, pA = function(e) {
  return [e.deltaX, e.deltaY];
}, mA = function(e) {
  return e && "current" in e ? e.current : e;
}, Pee = function(e, t) {
  return e[0] === t[0] && e[1] === t[1];
}, Cee = function(e) {
  return `
  .block-interactivity-`.concat(e, ` {pointer-events: none;}
  .allow-interactivity-`).concat(e, ` {pointer-events: all;}
`);
}, Aee = 0, Fu = [];
function _ee(e) {
  var t = Y.useRef([]), r = Y.useRef([0, 0]), n = Y.useRef(), o = Y.useState(Aee++)[0], a = Y.useState($F)[0], i = Y.useRef(e);
  Y.useEffect(function() {
    i.current = e;
  }, [e]), Y.useEffect(function() {
    if (e.inert) {
      document.body.classList.add("block-interactivity-".concat(o));
      var b = JZ([e.lockRef.current], (e.shards || []).map(mA)).filter(Boolean);
      return b.forEach(function(m) {
        return m.classList.add("allow-interactivity-".concat(o));
      }), function() {
        document.body.classList.remove("block-interactivity-".concat(o)), b.forEach(function(m) {
          return m.classList.remove("allow-interactivity-".concat(o));
        });
      };
    }
  }, [e.inert, e.lockRef.current, e.shards]);
  var s = Y.useCallback(function(b, m) {
    if ("touches" in b && b.touches.length === 2 || b.type === "wheel" && b.ctrlKey)
      return !i.current.allowPinchZoom;
    var w = _b(b), $ = r.current, E = "deltaX" in b ? b.deltaX : $[0] - w[0], S = "deltaY" in b ? b.deltaY : $[1] - w[1], h, U = b.target, G = Math.abs(E) > Math.abs(S) ? "h" : "v";
    if ("touches" in b && G === "h" && U.type === "range")
      return !1;
    var Q = dA(G, U);
    if (!Q)
      return !0;
    if (Q ? h = G : (h = G === "v" ? "h" : "v", Q = dA(G, U)), !Q)
      return !1;
    if (!n.current && "changedTouches" in b && (E || S) && (n.current = h), !h)
      return !0;
    var Z = n.current || h;
    return See(Z, m, b, Z === "h" ? E : S);
  }, []), l = Y.useCallback(function(b) {
    var m = b;
    if (!(!Fu.length || Fu[Fu.length - 1] !== a)) {
      var w = "deltaY" in m ? pA(m) : _b(m), $ = t.current.filter(function(h) {
        return h.name === m.type && (h.target === m.target || m.target === h.shadowParent) && Pee(h.delta, w);
      })[0];
      if ($ && $.should) {
        m.cancelable && m.preventDefault();
        return;
      }
      if (!$) {
        var E = (i.current.shards || []).map(mA).filter(Boolean).filter(function(h) {
          return h.contains(m.target);
        }), S = E.length > 0 ? s(m, E[0]) : !i.current.noIsolation;
        S && m.cancelable && m.preventDefault();
      }
    }
  }, []), c = Y.useCallback(function(b, m, w, $) {
    var E = { name: b, delta: m, target: w, should: $, shadowParent: Nee(w) };
    t.current.push(E), setTimeout(function() {
      t.current = t.current.filter(function(S) {
        return S !== E;
      });
    }, 1);
  }, []), u = Y.useCallback(function(b) {
    r.current = _b(b), n.current = void 0;
  }, []), f = Y.useCallback(function(b) {
    c(b.type, pA(b), b.target, s(b, e.lockRef.current));
  }, []), p = Y.useCallback(function(b) {
    c(b.type, _b(b), b.target, s(b, e.lockRef.current));
  }, []);
  Y.useEffect(function() {
    return Fu.push(a), e.setCallbacks({
      onScrollCapture: f,
      onWheelCapture: f,
      onTouchMoveCapture: p
    }), document.addEventListener("wheel", l, zu), document.addEventListener("touchmove", l, zu), document.addEventListener("touchstart", u, zu), function() {
      Fu = Fu.filter(function(b) {
        return b !== a;
      }), document.removeEventListener("wheel", l, zu), document.removeEventListener("touchmove", l, zu), document.removeEventListener("touchstart", u, zu);
    };
  }, []);
  var v = e.removeScrollBar, x = e.inert;
  return Y.createElement(
    Y.Fragment,
    null,
    x ? Y.createElement(a, { styles: Cee(o) }) : null,
    v ? Y.createElement(vee, { noRelative: e.noRelative, gapMode: e.gapMode }) : null
  );
}
function Nee(e) {
  for (var t = null; e !== null; )
    e instanceof ShadowRoot && (t = e.host, e = e.host), e = e.parentNode;
  return t;
}
const jee = iee(kF, _ee);
var PF = Y.forwardRef(function(e, t) {
  return Y.createElement(I1, oa({}, e, { ref: t, sideCar: jee }));
});
PF.classNames = I1.classNames;
var Iee = function(e) {
  if (typeof document > "u")
    return null;
  var t = Array.isArray(e) ? e[0] : e;
  return t.ownerDocument.body;
}, Du = /* @__PURE__ */ new WeakMap(), Nb = /* @__PURE__ */ new WeakMap(), jb = {}, Yx = 0, CF = function(e) {
  return e && (e.host || CF(e.parentNode));
}, Tee = function(e, t) {
  return t.map(function(r) {
    if (e.contains(r))
      return r;
    var n = CF(r);
    return n && e.contains(n) ? n : (console.error("aria-hidden", r, "in not contained inside", e, ". Doing nothing"), null);
  }).filter(function(r) {
    return !!r;
  });
}, Mee = function(e, t, r, n) {
  var o = Tee(t, Array.isArray(e) ? e : [e]);
  jb[r] || (jb[r] = /* @__PURE__ */ new WeakMap());
  var a = jb[r], i = [], s = /* @__PURE__ */ new Set(), l = new Set(o), c = function(f) {
    !f || s.has(f) || (s.add(f), c(f.parentNode));
  };
  o.forEach(c);
  var u = function(f) {
    !f || l.has(f) || Array.prototype.forEach.call(f.children, function(p) {
      if (s.has(p))
        u(p);
      else
        try {
          var v = p.getAttribute(n), x = v !== null && v !== "false", b = (Du.get(p) || 0) + 1, m = (a.get(p) || 0) + 1;
          Du.set(p, b), a.set(p, m), i.push(p), b === 1 && x && Nb.set(p, !0), m === 1 && p.setAttribute(r, "true"), x || p.setAttribute(n, "true");
        } catch (w) {
          console.error("aria-hidden: cannot operate on ", p, w);
        }
    });
  };
  return u(t), s.clear(), Yx++, function() {
    i.forEach(function(f) {
      var p = Du.get(f) - 1, v = a.get(f) - 1;
      Du.set(f, p), a.set(f, v), p || (Nb.has(f) || f.removeAttribute(n), Nb.delete(f)), v || f.removeAttribute(r);
    }), Yx--, Yx || (Du = /* @__PURE__ */ new WeakMap(), Du = /* @__PURE__ */ new WeakMap(), Nb = /* @__PURE__ */ new WeakMap(), jb = {});
  };
}, Ree = function(e, t, r) {
  r === void 0 && (r = "data-aria-hidden");
  var n = Array.from(Array.isArray(e) ? e : [e]), o = Iee(e);
  return o ? (n.push.apply(n, Array.from(o.querySelectorAll("[aria-live], script"))), Mee(n, o, r, "aria-hidden")) : function() {
    return null;
  };
}, T1 = "Dialog", [AF, ZVe] = hZ(T1), [zee, Lo] = AF(T1), _F = (e) => {
  const {
    __scopeDialog: t,
    children: r,
    open: n,
    defaultOpen: o,
    onOpenChange: a,
    modal: i = !0
  } = e, s = Y.useRef(null), l = Y.useRef(null), [c, u] = wZ({
    prop: n,
    defaultProp: o ?? !1,
    onChange: a,
    caller: T1
  });
  return /* @__PURE__ */ q(
    zee,
    {
      scope: t,
      triggerRef: s,
      contentRef: l,
      contentId: zx(),
      titleId: zx(),
      descriptionId: zx(),
      open: c,
      onOpenChange: u,
      onOpenToggle: Y.useCallback(() => u((f) => !f), [u]),
      modal: i,
      children: r
    }
  );
};
_F.displayName = T1;
var NF = "DialogTrigger", Fee = Y.forwardRef(
  (e, t) => {
    const { __scopeDialog: r, ...n } = e, o = Lo(NF, r), a = Tu(t, o.triggerRef);
    return /* @__PURE__ */ q(
      Ta.button,
      {
        type: "button",
        "aria-haspopup": "dialog",
        "aria-expanded": o.open,
        "aria-controls": o.contentId,
        "data-state": qE(o.open),
        ...n,
        ref: a,
        onClick: jl(e.onClick, o.onOpenToggle)
      }
    );
  }
);
Fee.displayName = NF;
var HE = "DialogPortal", [Dee, jF] = AF(HE, {
  forceMount: void 0
}), IF = (e) => {
  const { __scopeDialog: t, forceMount: r, children: n, container: o } = e, a = Lo(HE, t);
  return /* @__PURE__ */ q(Dee, { scope: t, forceMount: r, children: Y.Children.map(n, (i) => /* @__PURE__ */ q(j1, { present: r || a.open, children: /* @__PURE__ */ q(vF, { asChild: !0, container: o, children: i }) })) });
};
IF.displayName = HE;
var Pv = "DialogOverlay", TF = Y.forwardRef(
  (e, t) => {
    const r = jF(Pv, e.__scopeDialog), { forceMount: n = r.forceMount, ...o } = e, a = Lo(Pv, e.__scopeDialog);
    return a.modal ? /* @__PURE__ */ q(j1, { present: n || a.open, children: /* @__PURE__ */ q(Vee, { ...o, ref: t }) }) : null;
  }
);
TF.displayName = Pv;
var Lee = /* @__PURE__ */ pF("DialogOverlay.RemoveScroll"), Vee = Y.forwardRef(
  (e, t) => {
    const { __scopeDialog: r, ...n } = e, o = Lo(Pv, r);
    return (
      // Make sure `Content` is scrollable even when it doesn't live inside `RemoveScroll`
      // ie. when `Overlay` and `Content` are siblings
      /* @__PURE__ */ q(PF, { as: Lee, allowPinchZoom: !0, shards: [o.contentRef], children: /* @__PURE__ */ q(
        Ta.div,
        {
          "data-state": qE(o.open),
          ...n,
          ref: t,
          style: { pointerEvents: "auto", ...n.style }
        }
      ) })
    );
  }
), ru = "DialogContent", MF = Y.forwardRef(
  (e, t) => {
    const r = jF(ru, e.__scopeDialog), { forceMount: n = r.forceMount, ...o } = e, a = Lo(ru, e.__scopeDialog);
    return /* @__PURE__ */ q(j1, { present: n || a.open, children: a.modal ? /* @__PURE__ */ q(Wee, { ...o, ref: t }) : /* @__PURE__ */ q(Uee, { ...o, ref: t }) });
  }
);
MF.displayName = ru;
var Wee = Y.forwardRef(
  (e, t) => {
    const r = Lo(ru, e.__scopeDialog), n = Y.useRef(null), o = Tu(t, r.contentRef, n);
    return Y.useEffect(() => {
      const a = n.current;
      if (a) return Ree(a);
    }, []), /* @__PURE__ */ q(
      RF,
      {
        ...e,
        ref: o,
        trapFocus: r.open,
        disableOutsidePointerEvents: !0,
        onCloseAutoFocus: jl(e.onCloseAutoFocus, (a) => {
          var i;
          a.preventDefault(), (i = r.triggerRef.current) == null || i.focus();
        }),
        onPointerDownOutside: jl(e.onPointerDownOutside, (a) => {
          const i = a.detail.originalEvent, s = i.button === 0 && i.ctrlKey === !0;
          (i.button === 2 || s) && a.preventDefault();
        }),
        onFocusOutside: jl(
          e.onFocusOutside,
          (a) => a.preventDefault()
        )
      }
    );
  }
), Uee = Y.forwardRef(
  (e, t) => {
    const r = Lo(ru, e.__scopeDialog), n = Y.useRef(!1), o = Y.useRef(!1);
    return /* @__PURE__ */ q(
      RF,
      {
        ...e,
        ref: t,
        trapFocus: !1,
        disableOutsidePointerEvents: !1,
        onCloseAutoFocus: (a) => {
          var i, s;
          (i = e.onCloseAutoFocus) == null || i.call(e, a), a.defaultPrevented || (n.current || (s = r.triggerRef.current) == null || s.focus(), a.preventDefault()), n.current = !1, o.current = !1;
        },
        onInteractOutside: (a) => {
          var i, s;
          (i = e.onInteractOutside) == null || i.call(e, a), a.defaultPrevented || (n.current = !0, a.detail.originalEvent.type === "pointerdown" && (o.current = !0));
          const l = a.target;
          (s = r.triggerRef.current) != null && s.contains(l) && a.preventDefault(), a.detail.originalEvent.type === "focusin" && o.current && a.preventDefault();
        }
      }
    );
  }
), RF = Y.forwardRef(
  (e, t) => {
    const { __scopeDialog: r, trapFocus: n, onOpenAutoFocus: o, onCloseAutoFocus: a, ...i } = e, s = Lo(ru, r), l = Y.useRef(null), c = Tu(t, l);
    return KZ(), /* @__PURE__ */ Pe(Vt, { children: [
      /* @__PURE__ */ q(
        bF,
        {
          asChild: !0,
          loop: !0,
          trapped: n,
          onMountAutoFocus: o,
          onUnmountAutoFocus: a,
          children: /* @__PURE__ */ q(
            gF,
            {
              role: "dialog",
              id: s.contentId,
              "aria-describedby": s.descriptionId,
              "aria-labelledby": s.titleId,
              "data-state": qE(s.open),
              ...i,
              ref: c,
              onDismiss: () => s.onOpenChange(!1)
            }
          )
        }
      ),
      /* @__PURE__ */ Pe(Vt, { children: [
        /* @__PURE__ */ q(Hee, { titleId: s.titleId }),
        /* @__PURE__ */ q(qee, { contentRef: l, descriptionId: s.descriptionId })
      ] })
    ] });
  }
), GE = "DialogTitle", zF = Y.forwardRef(
  (e, t) => {
    const { __scopeDialog: r, ...n } = e, o = Lo(GE, r);
    return /* @__PURE__ */ q(Ta.h2, { id: o.titleId, ...n, ref: t });
  }
);
zF.displayName = GE;
var FF = "DialogDescription", DF = Y.forwardRef(
  (e, t) => {
    const { __scopeDialog: r, ...n } = e, o = Lo(FF, r);
    return /* @__PURE__ */ q(Ta.p, { id: o.descriptionId, ...n, ref: t });
  }
);
DF.displayName = FF;
var LF = "DialogClose", Yee = Y.forwardRef(
  (e, t) => {
    const { __scopeDialog: r, ...n } = e, o = Lo(LF, r);
    return /* @__PURE__ */ q(
      Ta.button,
      {
        type: "button",
        ...n,
        ref: t,
        onClick: jl(e.onClick, () => o.onOpenChange(!1))
      }
    );
  }
);
Yee.displayName = LF;
function qE(e) {
  return e ? "open" : "closed";
}
var VF = "DialogTitleWarning", [eWe, WF] = gZ(VF, {
  contentName: ru,
  titleName: GE,
  docsSlug: "dialog"
}), Hee = ({ titleId: e }) => {
  const t = WF(VF), r = `\`${t.contentName}\` requires a \`${t.titleName}\` for the component to be accessible for screen reader users.

If you want to hide the \`${t.titleName}\`, you can wrap it with our VisuallyHidden component.

For more information, see https://radix-ui.com/primitives/docs/components/${t.docsSlug}`;
  return Y.useEffect(() => {
    e && (document.getElementById(e) || console.error(r));
  }, [r, e]), null;
}, Gee = "DialogDescriptionWarning", qee = ({ contentRef: e, descriptionId: t }) => {
  const r = `Warning: Missing \`Description\` or \`aria-describedby={undefined}\` for {${WF(Gee).contentName}}.`;
  return Y.useEffect(() => {
    var n;
    const o = (n = e.current) == null ? void 0 : n.getAttribute("aria-describedby");
    t && o && (document.getElementById(t) || console.warn(r));
  }, [r, e, t]), null;
}, Bee = _F, Xee = IF, Kee = TF, Jee = MF, gA = zF, Qee = DF;
const BE = "-", Zee = (e) => {
  const t = tte(e), {
    conflictingClassGroups: r,
    conflictingClassGroupModifiers: n
  } = e;
  return {
    getClassGroupId: (o) => {
      const a = o.split(BE);
      return a[0] === "" && a.length !== 1 && a.shift(), UF(a, t) || ete(o);
    },
    getConflictingClassGroupIds: (o, a) => {
      const i = r[o] || [];
      return a && n[o] ? [...i, ...n[o]] : i;
    }
  };
}, UF = (e, t) => {
  var r;
  if (e.length === 0)
    return t.classGroupId;
  const n = e[0], o = t.nextPart.get(n), a = o ? UF(e.slice(1), o) : void 0;
  if (a)
    return a;
  if (t.validators.length === 0)
    return;
  const i = e.join(BE);
  return (r = t.validators.find(({
    validator: s
  }) => s(i))) == null ? void 0 : r.classGroupId;
}, hA = /^\[(.+)\]$/, ete = (e) => {
  if (hA.test(e)) {
    const t = hA.exec(e)[1], r = t == null ? void 0 : t.substring(0, t.indexOf(":"));
    if (r)
      return "arbitrary.." + r;
  }
}, tte = (e) => {
  const {
    theme: t,
    prefix: r
  } = e, n = {
    nextPart: /* @__PURE__ */ new Map(),
    validators: []
  };
  return nte(Object.entries(e.classGroups), r).forEach(([o, a]) => {
    M$(a, n, o, t);
  }), n;
}, M$ = (e, t, r, n) => {
  e.forEach((o) => {
    if (typeof o == "string") {
      const a = o === "" ? t : bA(t, o);
      a.classGroupId = r;
      return;
    }
    if (typeof o == "function") {
      if (rte(o)) {
        M$(o(n), t, r, n);
        return;
      }
      t.validators.push({
        validator: o,
        classGroupId: r
      });
      return;
    }
    Object.entries(o).forEach(([a, i]) => {
      M$(i, bA(t, a), r, n);
    });
  });
}, bA = (e, t) => {
  let r = e;
  return t.split(BE).forEach((n) => {
    r.nextPart.has(n) || r.nextPart.set(n, {
      nextPart: /* @__PURE__ */ new Map(),
      validators: []
    }), r = r.nextPart.get(n);
  }), r;
}, rte = (e) => e.isThemeGetter, nte = (e, t) => t ? e.map(([r, n]) => {
  const o = n.map((a) => typeof a == "string" ? t + a : typeof a == "object" ? Object.fromEntries(Object.entries(a).map(([i, s]) => [t + i, s])) : a);
  return [r, o];
}) : e, ote = (e) => {
  if (e < 1)
    return {
      get: () => {
      },
      set: () => {
      }
    };
  let t = 0, r = /* @__PURE__ */ new Map(), n = /* @__PURE__ */ new Map();
  const o = (a, i) => {
    r.set(a, i), t++, t > e && (t = 0, n = r, r = /* @__PURE__ */ new Map());
  };
  return {
    get(a) {
      let i = r.get(a);
      if (i !== void 0)
        return i;
      if ((i = n.get(a)) !== void 0)
        return o(a, i), i;
    },
    set(a, i) {
      r.has(a) ? r.set(a, i) : o(a, i);
    }
  };
}, YF = "!", ate = (e) => {
  const {
    separator: t,
    experimentalParseClassName: r
  } = e, n = t.length === 1, o = t[0], a = t.length, i = (s) => {
    const l = [];
    let c = 0, u = 0, f;
    for (let m = 0; m < s.length; m++) {
      let w = s[m];
      if (c === 0) {
        if (w === o && (n || s.slice(m, m + a) === t)) {
          l.push(s.slice(u, m)), u = m + a;
          continue;
        }
        if (w === "/") {
          f = m;
          continue;
        }
      }
      w === "[" ? c++ : w === "]" && c--;
    }
    const p = l.length === 0 ? s : s.substring(u), v = p.startsWith(YF), x = v ? p.substring(1) : p, b = f && f > u ? f - u : void 0;
    return {
      modifiers: l,
      hasImportantModifier: v,
      baseClassName: x,
      maybePostfixModifierPosition: b
    };
  };
  return r ? (s) => r({
    className: s,
    parseClassName: i
  }) : i;
}, ite = (e) => {
  if (e.length <= 1)
    return e;
  const t = [];
  let r = [];
  return e.forEach((n) => {
    n[0] === "[" ? (t.push(...r.sort(), n), r = []) : r.push(n);
  }), t.push(...r.sort()), t;
}, ste = (e) => ({
  cache: ote(e.cacheSize),
  parseClassName: ate(e),
  ...Zee(e)
}), lte = /\s+/, cte = (e, t) => {
  const {
    parseClassName: r,
    getClassGroupId: n,
    getConflictingClassGroupIds: o
  } = t, a = [], i = e.trim().split(lte);
  let s = "";
  for (let l = i.length - 1; l >= 0; l -= 1) {
    const c = i[l], {
      modifiers: u,
      hasImportantModifier: f,
      baseClassName: p,
      maybePostfixModifierPosition: v
    } = r(c);
    let x = !!v, b = n(x ? p.substring(0, v) : p);
    if (!b) {
      if (!x) {
        s = c + (s.length > 0 ? " " + s : s);
        continue;
      }
      if (b = n(p), !b) {
        s = c + (s.length > 0 ? " " + s : s);
        continue;
      }
      x = !1;
    }
    const m = ite(u).join(":"), w = f ? m + YF : m, $ = w + b;
    if (a.includes($))
      continue;
    a.push($);
    const E = o(b, x);
    for (let S = 0; S < E.length; ++S) {
      const h = E[S];
      a.push(w + h);
    }
    s = c + (s.length > 0 ? " " + s : s);
  }
  return s;
};
function ute() {
  let e = 0, t, r, n = "";
  for (; e < arguments.length; )
    (t = arguments[e++]) && (r = HF(t)) && (n && (n += " "), n += r);
  return n;
}
const HF = (e) => {
  if (typeof e == "string")
    return e;
  let t, r = "";
  for (let n = 0; n < e.length; n++)
    e[n] && (t = HF(e[n])) && (r && (r += " "), r += t);
  return r;
};
function fte(e, ...t) {
  let r, n, o, a = i;
  function i(l) {
    const c = t.reduce((u, f) => f(u), e());
    return r = ste(c), n = r.cache.get, o = r.cache.set, a = s, s(l);
  }
  function s(l) {
    const c = n(l);
    if (c)
      return c;
    const u = cte(l, r);
    return o(l, u), u;
  }
  return function() {
    return a(ute.apply(null, arguments));
  };
}
const vr = (e) => {
  const t = (r) => r[e] || [];
  return t.isThemeGetter = !0, t;
}, GF = /^\[(?:([a-z-]+):)?(.+)\]$/i, dte = /^\d+\/\d+$/, pte = /* @__PURE__ */ new Set(["px", "full", "screen"]), mte = /^(\d+(\.\d+)?)?(xs|sm|md|lg|xl)$/, gte = /\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\b(calc|min|max|clamp)\(.+\)|^0$/, hte = /^(rgba?|hsla?|hwb|(ok)?(lab|lch))\(.+\)$/, bte = /^(inset_)?-?((\d+)?\.?(\d+)[a-z]+|0)_-?((\d+)?\.?(\d+)[a-z]+|0)/, yte = /^(url|image|image-set|cross-fade|element|(repeating-)?(linear|radial|conic)-gradient)\(.+\)$/, Fa = (e) => Sf(e) || pte.has(e) || dte.test(e), Os = (e) => Cd(e, "length", Ste), Sf = (e) => !!e && !Number.isNaN(Number(e)), Hx = (e) => Cd(e, "number", Sf), rm = (e) => !!e && Number.isInteger(Number(e)), vte = (e) => e.endsWith("%") && Sf(e.slice(0, -1)), at = (e) => GF.test(e), Es = (e) => mte.test(e), xte = /* @__PURE__ */ new Set(["length", "size", "percentage"]), wte = (e) => Cd(e, xte, qF), kte = (e) => Cd(e, "position", qF), $te = /* @__PURE__ */ new Set(["image", "url"]), Ote = (e) => Cd(e, $te, Cte), Ete = (e) => Cd(e, "", Pte), nm = () => !0, Cd = (e, t, r) => {
  const n = GF.exec(e);
  return n ? n[1] ? typeof t == "string" ? n[1] === t : t.has(n[1]) : r(n[2]) : !1;
}, Ste = (e) => (
  // `colorFunctionRegex` check is necessary because color functions can have percentages in them which which would be incorrectly classified as lengths.
  // For example, `hsl(0 0% 0%)` would be classified as a length without this check.
  // I could also use lookbehind assertion in `lengthUnitRegex` but that isn't supported widely enough.
  gte.test(e) && !hte.test(e)
), qF = () => !1, Pte = (e) => bte.test(e), Cte = (e) => yte.test(e), Ate = () => {
  const e = vr("colors"), t = vr("spacing"), r = vr("blur"), n = vr("brightness"), o = vr("borderColor"), a = vr("borderRadius"), i = vr("borderSpacing"), s = vr("borderWidth"), l = vr("contrast"), c = vr("grayscale"), u = vr("hueRotate"), f = vr("invert"), p = vr("gap"), v = vr("gradientColorStops"), x = vr("gradientColorStopPositions"), b = vr("inset"), m = vr("margin"), w = vr("opacity"), $ = vr("padding"), E = vr("saturate"), S = vr("scale"), h = vr("sepia"), U = vr("skew"), G = vr("space"), Q = vr("translate"), Z = () => ["auto", "contain", "none"], X = () => ["auto", "hidden", "clip", "visible", "scroll"], J = () => ["auto", at, t], I = () => [at, t], te = () => ["", Fa, Os], V = () => ["auto", Sf, at], D = () => ["bottom", "center", "left", "left-bottom", "left-top", "right", "right-bottom", "right-top", "top"], F = () => ["solid", "dashed", "dotted", "double", "none"], R = () => ["normal", "multiply", "screen", "overlay", "darken", "lighten", "color-dodge", "color-burn", "hard-light", "soft-light", "difference", "exclusion", "hue", "saturation", "color", "luminosity"], H = () => ["start", "end", "center", "between", "around", "evenly", "stretch"], B = () => ["", "0", at], g = () => ["auto", "avoid", "all", "avoid-page", "page", "left", "right", "column"], d = () => [Sf, at];
  return {
    cacheSize: 500,
    separator: ":",
    theme: {
      colors: [nm],
      spacing: [Fa, Os],
      blur: ["none", "", Es, at],
      brightness: d(),
      borderColor: [e],
      borderRadius: ["none", "", "full", Es, at],
      borderSpacing: I(),
      borderWidth: te(),
      contrast: d(),
      grayscale: B(),
      hueRotate: d(),
      invert: B(),
      gap: I(),
      gradientColorStops: [e],
      gradientColorStopPositions: [vte, Os],
      inset: J(),
      margin: J(),
      opacity: d(),
      padding: I(),
      saturate: d(),
      scale: d(),
      sepia: B(),
      skew: d(),
      space: I(),
      translate: I()
    },
    classGroups: {
      // Layout
      /**
       * Aspect Ratio
       * @see https://tailwindcss.com/docs/aspect-ratio
       */
      aspect: [{
        aspect: ["auto", "square", "video", at]
      }],
      /**
       * Container
       * @see https://tailwindcss.com/docs/container
       */
      container: ["container"],
      /**
       * Columns
       * @see https://tailwindcss.com/docs/columns
       */
      columns: [{
        columns: [Es]
      }],
      /**
       * Break After
       * @see https://tailwindcss.com/docs/break-after
       */
      "break-after": [{
        "break-after": g()
      }],
      /**
       * Break Before
       * @see https://tailwindcss.com/docs/break-before
       */
      "break-before": [{
        "break-before": g()
      }],
      /**
       * Break Inside
       * @see https://tailwindcss.com/docs/break-inside
       */
      "break-inside": [{
        "break-inside": ["auto", "avoid", "avoid-page", "avoid-column"]
      }],
      /**
       * Box Decoration Break
       * @see https://tailwindcss.com/docs/box-decoration-break
       */
      "box-decoration": [{
        "box-decoration": ["slice", "clone"]
      }],
      /**
       * Box Sizing
       * @see https://tailwindcss.com/docs/box-sizing
       */
      box: [{
        box: ["border", "content"]
      }],
      /**
       * Display
       * @see https://tailwindcss.com/docs/display
       */
      display: ["block", "inline-block", "inline", "flex", "inline-flex", "table", "inline-table", "table-caption", "table-cell", "table-column", "table-column-group", "table-footer-group", "table-header-group", "table-row-group", "table-row", "flow-root", "grid", "inline-grid", "contents", "list-item", "hidden"],
      /**
       * Floats
       * @see https://tailwindcss.com/docs/float
       */
      float: [{
        float: ["right", "left", "none", "start", "end"]
      }],
      /**
       * Clear
       * @see https://tailwindcss.com/docs/clear
       */
      clear: [{
        clear: ["left", "right", "both", "none", "start", "end"]
      }],
      /**
       * Isolation
       * @see https://tailwindcss.com/docs/isolation
       */
      isolation: ["isolate", "isolation-auto"],
      /**
       * Object Fit
       * @see https://tailwindcss.com/docs/object-fit
       */
      "object-fit": [{
        object: ["contain", "cover", "fill", "none", "scale-down"]
      }],
      /**
       * Object Position
       * @see https://tailwindcss.com/docs/object-position
       */
      "object-position": [{
        object: [...D(), at]
      }],
      /**
       * Overflow
       * @see https://tailwindcss.com/docs/overflow
       */
      overflow: [{
        overflow: X()
      }],
      /**
       * Overflow X
       * @see https://tailwindcss.com/docs/overflow
       */
      "overflow-x": [{
        "overflow-x": X()
      }],
      /**
       * Overflow Y
       * @see https://tailwindcss.com/docs/overflow
       */
      "overflow-y": [{
        "overflow-y": X()
      }],
      /**
       * Overscroll Behavior
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      overscroll: [{
        overscroll: Z()
      }],
      /**
       * Overscroll Behavior X
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      "overscroll-x": [{
        "overscroll-x": Z()
      }],
      /**
       * Overscroll Behavior Y
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      "overscroll-y": [{
        "overscroll-y": Z()
      }],
      /**
       * Position
       * @see https://tailwindcss.com/docs/position
       */
      position: ["static", "fixed", "absolute", "relative", "sticky"],
      /**
       * Top / Right / Bottom / Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      inset: [{
        inset: [b]
      }],
      /**
       * Right / Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      "inset-x": [{
        "inset-x": [b]
      }],
      /**
       * Top / Bottom
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      "inset-y": [{
        "inset-y": [b]
      }],
      /**
       * Start
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      start: [{
        start: [b]
      }],
      /**
       * End
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      end: [{
        end: [b]
      }],
      /**
       * Top
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      top: [{
        top: [b]
      }],
      /**
       * Right
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      right: [{
        right: [b]
      }],
      /**
       * Bottom
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      bottom: [{
        bottom: [b]
      }],
      /**
       * Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      left: [{
        left: [b]
      }],
      /**
       * Visibility
       * @see https://tailwindcss.com/docs/visibility
       */
      visibility: ["visible", "invisible", "collapse"],
      /**
       * Z-Index
       * @see https://tailwindcss.com/docs/z-index
       */
      z: [{
        z: ["auto", rm, at]
      }],
      // Flexbox and Grid
      /**
       * Flex Basis
       * @see https://tailwindcss.com/docs/flex-basis
       */
      basis: [{
        basis: J()
      }],
      /**
       * Flex Direction
       * @see https://tailwindcss.com/docs/flex-direction
       */
      "flex-direction": [{
        flex: ["row", "row-reverse", "col", "col-reverse"]
      }],
      /**
       * Flex Wrap
       * @see https://tailwindcss.com/docs/flex-wrap
       */
      "flex-wrap": [{
        flex: ["wrap", "wrap-reverse", "nowrap"]
      }],
      /**
       * Flex
       * @see https://tailwindcss.com/docs/flex
       */
      flex: [{
        flex: ["1", "auto", "initial", "none", at]
      }],
      /**
       * Flex Grow
       * @see https://tailwindcss.com/docs/flex-grow
       */
      grow: [{
        grow: B()
      }],
      /**
       * Flex Shrink
       * @see https://tailwindcss.com/docs/flex-shrink
       */
      shrink: [{
        shrink: B()
      }],
      /**
       * Order
       * @see https://tailwindcss.com/docs/order
       */
      order: [{
        order: ["first", "last", "none", rm, at]
      }],
      /**
       * Grid Template Columns
       * @see https://tailwindcss.com/docs/grid-template-columns
       */
      "grid-cols": [{
        "grid-cols": [nm]
      }],
      /**
       * Grid Column Start / End
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-start-end": [{
        col: ["auto", {
          span: ["full", rm, at]
        }, at]
      }],
      /**
       * Grid Column Start
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-start": [{
        "col-start": V()
      }],
      /**
       * Grid Column End
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-end": [{
        "col-end": V()
      }],
      /**
       * Grid Template Rows
       * @see https://tailwindcss.com/docs/grid-template-rows
       */
      "grid-rows": [{
        "grid-rows": [nm]
      }],
      /**
       * Grid Row Start / End
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-start-end": [{
        row: ["auto", {
          span: [rm, at]
        }, at]
      }],
      /**
       * Grid Row Start
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-start": [{
        "row-start": V()
      }],
      /**
       * Grid Row End
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-end": [{
        "row-end": V()
      }],
      /**
       * Grid Auto Flow
       * @see https://tailwindcss.com/docs/grid-auto-flow
       */
      "grid-flow": [{
        "grid-flow": ["row", "col", "dense", "row-dense", "col-dense"]
      }],
      /**
       * Grid Auto Columns
       * @see https://tailwindcss.com/docs/grid-auto-columns
       */
      "auto-cols": [{
        "auto-cols": ["auto", "min", "max", "fr", at]
      }],
      /**
       * Grid Auto Rows
       * @see https://tailwindcss.com/docs/grid-auto-rows
       */
      "auto-rows": [{
        "auto-rows": ["auto", "min", "max", "fr", at]
      }],
      /**
       * Gap
       * @see https://tailwindcss.com/docs/gap
       */
      gap: [{
        gap: [p]
      }],
      /**
       * Gap X
       * @see https://tailwindcss.com/docs/gap
       */
      "gap-x": [{
        "gap-x": [p]
      }],
      /**
       * Gap Y
       * @see https://tailwindcss.com/docs/gap
       */
      "gap-y": [{
        "gap-y": [p]
      }],
      /**
       * Justify Content
       * @see https://tailwindcss.com/docs/justify-content
       */
      "justify-content": [{
        justify: ["normal", ...H()]
      }],
      /**
       * Justify Items
       * @see https://tailwindcss.com/docs/justify-items
       */
      "justify-items": [{
        "justify-items": ["start", "end", "center", "stretch"]
      }],
      /**
       * Justify Self
       * @see https://tailwindcss.com/docs/justify-self
       */
      "justify-self": [{
        "justify-self": ["auto", "start", "end", "center", "stretch"]
      }],
      /**
       * Align Content
       * @see https://tailwindcss.com/docs/align-content
       */
      "align-content": [{
        content: ["normal", ...H(), "baseline"]
      }],
      /**
       * Align Items
       * @see https://tailwindcss.com/docs/align-items
       */
      "align-items": [{
        items: ["start", "end", "center", "baseline", "stretch"]
      }],
      /**
       * Align Self
       * @see https://tailwindcss.com/docs/align-self
       */
      "align-self": [{
        self: ["auto", "start", "end", "center", "stretch", "baseline"]
      }],
      /**
       * Place Content
       * @see https://tailwindcss.com/docs/place-content
       */
      "place-content": [{
        "place-content": [...H(), "baseline"]
      }],
      /**
       * Place Items
       * @see https://tailwindcss.com/docs/place-items
       */
      "place-items": [{
        "place-items": ["start", "end", "center", "baseline", "stretch"]
      }],
      /**
       * Place Self
       * @see https://tailwindcss.com/docs/place-self
       */
      "place-self": [{
        "place-self": ["auto", "start", "end", "center", "stretch"]
      }],
      // Spacing
      /**
       * Padding
       * @see https://tailwindcss.com/docs/padding
       */
      p: [{
        p: [$]
      }],
      /**
       * Padding X
       * @see https://tailwindcss.com/docs/padding
       */
      px: [{
        px: [$]
      }],
      /**
       * Padding Y
       * @see https://tailwindcss.com/docs/padding
       */
      py: [{
        py: [$]
      }],
      /**
       * Padding Start
       * @see https://tailwindcss.com/docs/padding
       */
      ps: [{
        ps: [$]
      }],
      /**
       * Padding End
       * @see https://tailwindcss.com/docs/padding
       */
      pe: [{
        pe: [$]
      }],
      /**
       * Padding Top
       * @see https://tailwindcss.com/docs/padding
       */
      pt: [{
        pt: [$]
      }],
      /**
       * Padding Right
       * @see https://tailwindcss.com/docs/padding
       */
      pr: [{
        pr: [$]
      }],
      /**
       * Padding Bottom
       * @see https://tailwindcss.com/docs/padding
       */
      pb: [{
        pb: [$]
      }],
      /**
       * Padding Left
       * @see https://tailwindcss.com/docs/padding
       */
      pl: [{
        pl: [$]
      }],
      /**
       * Margin
       * @see https://tailwindcss.com/docs/margin
       */
      m: [{
        m: [m]
      }],
      /**
       * Margin X
       * @see https://tailwindcss.com/docs/margin
       */
      mx: [{
        mx: [m]
      }],
      /**
       * Margin Y
       * @see https://tailwindcss.com/docs/margin
       */
      my: [{
        my: [m]
      }],
      /**
       * Margin Start
       * @see https://tailwindcss.com/docs/margin
       */
      ms: [{
        ms: [m]
      }],
      /**
       * Margin End
       * @see https://tailwindcss.com/docs/margin
       */
      me: [{
        me: [m]
      }],
      /**
       * Margin Top
       * @see https://tailwindcss.com/docs/margin
       */
      mt: [{
        mt: [m]
      }],
      /**
       * Margin Right
       * @see https://tailwindcss.com/docs/margin
       */
      mr: [{
        mr: [m]
      }],
      /**
       * Margin Bottom
       * @see https://tailwindcss.com/docs/margin
       */
      mb: [{
        mb: [m]
      }],
      /**
       * Margin Left
       * @see https://tailwindcss.com/docs/margin
       */
      ml: [{
        ml: [m]
      }],
      /**
       * Space Between X
       * @see https://tailwindcss.com/docs/space
       */
      "space-x": [{
        "space-x": [G]
      }],
      /**
       * Space Between X Reverse
       * @see https://tailwindcss.com/docs/space
       */
      "space-x-reverse": ["space-x-reverse"],
      /**
       * Space Between Y
       * @see https://tailwindcss.com/docs/space
       */
      "space-y": [{
        "space-y": [G]
      }],
      /**
       * Space Between Y Reverse
       * @see https://tailwindcss.com/docs/space
       */
      "space-y-reverse": ["space-y-reverse"],
      // Sizing
      /**
       * Width
       * @see https://tailwindcss.com/docs/width
       */
      w: [{
        w: ["auto", "min", "max", "fit", "svw", "lvw", "dvw", at, t]
      }],
      /**
       * Min-Width
       * @see https://tailwindcss.com/docs/min-width
       */
      "min-w": [{
        "min-w": [at, t, "min", "max", "fit"]
      }],
      /**
       * Max-Width
       * @see https://tailwindcss.com/docs/max-width
       */
      "max-w": [{
        "max-w": [at, t, "none", "full", "min", "max", "fit", "prose", {
          screen: [Es]
        }, Es]
      }],
      /**
       * Height
       * @see https://tailwindcss.com/docs/height
       */
      h: [{
        h: [at, t, "auto", "min", "max", "fit", "svh", "lvh", "dvh"]
      }],
      /**
       * Min-Height
       * @see https://tailwindcss.com/docs/min-height
       */
      "min-h": [{
        "min-h": [at, t, "min", "max", "fit", "svh", "lvh", "dvh"]
      }],
      /**
       * Max-Height
       * @see https://tailwindcss.com/docs/max-height
       */
      "max-h": [{
        "max-h": [at, t, "min", "max", "fit", "svh", "lvh", "dvh"]
      }],
      /**
       * Size
       * @see https://tailwindcss.com/docs/size
       */
      size: [{
        size: [at, t, "auto", "min", "max", "fit"]
      }],
      // Typography
      /**
       * Font Size
       * @see https://tailwindcss.com/docs/font-size
       */
      "font-size": [{
        text: ["base", Es, Os]
      }],
      /**
       * Font Smoothing
       * @see https://tailwindcss.com/docs/font-smoothing
       */
      "font-smoothing": ["antialiased", "subpixel-antialiased"],
      /**
       * Font Style
       * @see https://tailwindcss.com/docs/font-style
       */
      "font-style": ["italic", "not-italic"],
      /**
       * Font Weight
       * @see https://tailwindcss.com/docs/font-weight
       */
      "font-weight": [{
        font: ["thin", "extralight", "light", "normal", "medium", "semibold", "bold", "extrabold", "black", Hx]
      }],
      /**
       * Font Family
       * @see https://tailwindcss.com/docs/font-family
       */
      "font-family": [{
        font: [nm]
      }],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-normal": ["normal-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-ordinal": ["ordinal"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-slashed-zero": ["slashed-zero"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-figure": ["lining-nums", "oldstyle-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-spacing": ["proportional-nums", "tabular-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-fraction": ["diagonal-fractions", "stacked-fractions"],
      /**
       * Letter Spacing
       * @see https://tailwindcss.com/docs/letter-spacing
       */
      tracking: [{
        tracking: ["tighter", "tight", "normal", "wide", "wider", "widest", at]
      }],
      /**
       * Line Clamp
       * @see https://tailwindcss.com/docs/line-clamp
       */
      "line-clamp": [{
        "line-clamp": ["none", Sf, Hx]
      }],
      /**
       * Line Height
       * @see https://tailwindcss.com/docs/line-height
       */
      leading: [{
        leading: ["none", "tight", "snug", "normal", "relaxed", "loose", Fa, at]
      }],
      /**
       * List Style Image
       * @see https://tailwindcss.com/docs/list-style-image
       */
      "list-image": [{
        "list-image": ["none", at]
      }],
      /**
       * List Style Type
       * @see https://tailwindcss.com/docs/list-style-type
       */
      "list-style-type": [{
        list: ["none", "disc", "decimal", at]
      }],
      /**
       * List Style Position
       * @see https://tailwindcss.com/docs/list-style-position
       */
      "list-style-position": [{
        list: ["inside", "outside"]
      }],
      /**
       * Placeholder Color
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/placeholder-color
       */
      "placeholder-color": [{
        placeholder: [e]
      }],
      /**
       * Placeholder Opacity
       * @see https://tailwindcss.com/docs/placeholder-opacity
       */
      "placeholder-opacity": [{
        "placeholder-opacity": [w]
      }],
      /**
       * Text Alignment
       * @see https://tailwindcss.com/docs/text-align
       */
      "text-alignment": [{
        text: ["left", "center", "right", "justify", "start", "end"]
      }],
      /**
       * Text Color
       * @see https://tailwindcss.com/docs/text-color
       */
      "text-color": [{
        text: [e]
      }],
      /**
       * Text Opacity
       * @see https://tailwindcss.com/docs/text-opacity
       */
      "text-opacity": [{
        "text-opacity": [w]
      }],
      /**
       * Text Decoration
       * @see https://tailwindcss.com/docs/text-decoration
       */
      "text-decoration": ["underline", "overline", "line-through", "no-underline"],
      /**
       * Text Decoration Style
       * @see https://tailwindcss.com/docs/text-decoration-style
       */
      "text-decoration-style": [{
        decoration: [...F(), "wavy"]
      }],
      /**
       * Text Decoration Thickness
       * @see https://tailwindcss.com/docs/text-decoration-thickness
       */
      "text-decoration-thickness": [{
        decoration: ["auto", "from-font", Fa, Os]
      }],
      /**
       * Text Underline Offset
       * @see https://tailwindcss.com/docs/text-underline-offset
       */
      "underline-offset": [{
        "underline-offset": ["auto", Fa, at]
      }],
      /**
       * Text Decoration Color
       * @see https://tailwindcss.com/docs/text-decoration-color
       */
      "text-decoration-color": [{
        decoration: [e]
      }],
      /**
       * Text Transform
       * @see https://tailwindcss.com/docs/text-transform
       */
      "text-transform": ["uppercase", "lowercase", "capitalize", "normal-case"],
      /**
       * Text Overflow
       * @see https://tailwindcss.com/docs/text-overflow
       */
      "text-overflow": ["truncate", "text-ellipsis", "text-clip"],
      /**
       * Text Wrap
       * @see https://tailwindcss.com/docs/text-wrap
       */
      "text-wrap": [{
        text: ["wrap", "nowrap", "balance", "pretty"]
      }],
      /**
       * Text Indent
       * @see https://tailwindcss.com/docs/text-indent
       */
      indent: [{
        indent: I()
      }],
      /**
       * Vertical Alignment
       * @see https://tailwindcss.com/docs/vertical-align
       */
      "vertical-align": [{
        align: ["baseline", "top", "middle", "bottom", "text-top", "text-bottom", "sub", "super", at]
      }],
      /**
       * Whitespace
       * @see https://tailwindcss.com/docs/whitespace
       */
      whitespace: [{
        whitespace: ["normal", "nowrap", "pre", "pre-line", "pre-wrap", "break-spaces"]
      }],
      /**
       * Word Break
       * @see https://tailwindcss.com/docs/word-break
       */
      break: [{
        break: ["normal", "words", "all", "keep"]
      }],
      /**
       * Hyphens
       * @see https://tailwindcss.com/docs/hyphens
       */
      hyphens: [{
        hyphens: ["none", "manual", "auto"]
      }],
      /**
       * Content
       * @see https://tailwindcss.com/docs/content
       */
      content: [{
        content: ["none", at]
      }],
      // Backgrounds
      /**
       * Background Attachment
       * @see https://tailwindcss.com/docs/background-attachment
       */
      "bg-attachment": [{
        bg: ["fixed", "local", "scroll"]
      }],
      /**
       * Background Clip
       * @see https://tailwindcss.com/docs/background-clip
       */
      "bg-clip": [{
        "bg-clip": ["border", "padding", "content", "text"]
      }],
      /**
       * Background Opacity
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/background-opacity
       */
      "bg-opacity": [{
        "bg-opacity": [w]
      }],
      /**
       * Background Origin
       * @see https://tailwindcss.com/docs/background-origin
       */
      "bg-origin": [{
        "bg-origin": ["border", "padding", "content"]
      }],
      /**
       * Background Position
       * @see https://tailwindcss.com/docs/background-position
       */
      "bg-position": [{
        bg: [...D(), kte]
      }],
      /**
       * Background Repeat
       * @see https://tailwindcss.com/docs/background-repeat
       */
      "bg-repeat": [{
        bg: ["no-repeat", {
          repeat: ["", "x", "y", "round", "space"]
        }]
      }],
      /**
       * Background Size
       * @see https://tailwindcss.com/docs/background-size
       */
      "bg-size": [{
        bg: ["auto", "cover", "contain", wte]
      }],
      /**
       * Background Image
       * @see https://tailwindcss.com/docs/background-image
       */
      "bg-image": [{
        bg: ["none", {
          "gradient-to": ["t", "tr", "r", "br", "b", "bl", "l", "tl"]
        }, Ote]
      }],
      /**
       * Background Color
       * @see https://tailwindcss.com/docs/background-color
       */
      "bg-color": [{
        bg: [e]
      }],
      /**
       * Gradient Color Stops From Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-from-pos": [{
        from: [x]
      }],
      /**
       * Gradient Color Stops Via Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-via-pos": [{
        via: [x]
      }],
      /**
       * Gradient Color Stops To Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-to-pos": [{
        to: [x]
      }],
      /**
       * Gradient Color Stops From
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-from": [{
        from: [v]
      }],
      /**
       * Gradient Color Stops Via
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-via": [{
        via: [v]
      }],
      /**
       * Gradient Color Stops To
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-to": [{
        to: [v]
      }],
      // Borders
      /**
       * Border Radius
       * @see https://tailwindcss.com/docs/border-radius
       */
      rounded: [{
        rounded: [a]
      }],
      /**
       * Border Radius Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-s": [{
        "rounded-s": [a]
      }],
      /**
       * Border Radius End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-e": [{
        "rounded-e": [a]
      }],
      /**
       * Border Radius Top
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-t": [{
        "rounded-t": [a]
      }],
      /**
       * Border Radius Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-r": [{
        "rounded-r": [a]
      }],
      /**
       * Border Radius Bottom
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-b": [{
        "rounded-b": [a]
      }],
      /**
       * Border Radius Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-l": [{
        "rounded-l": [a]
      }],
      /**
       * Border Radius Start Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-ss": [{
        "rounded-ss": [a]
      }],
      /**
       * Border Radius Start End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-se": [{
        "rounded-se": [a]
      }],
      /**
       * Border Radius End End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-ee": [{
        "rounded-ee": [a]
      }],
      /**
       * Border Radius End Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-es": [{
        "rounded-es": [a]
      }],
      /**
       * Border Radius Top Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-tl": [{
        "rounded-tl": [a]
      }],
      /**
       * Border Radius Top Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-tr": [{
        "rounded-tr": [a]
      }],
      /**
       * Border Radius Bottom Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-br": [{
        "rounded-br": [a]
      }],
      /**
       * Border Radius Bottom Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-bl": [{
        "rounded-bl": [a]
      }],
      /**
       * Border Width
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w": [{
        border: [s]
      }],
      /**
       * Border Width X
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-x": [{
        "border-x": [s]
      }],
      /**
       * Border Width Y
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-y": [{
        "border-y": [s]
      }],
      /**
       * Border Width Start
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-s": [{
        "border-s": [s]
      }],
      /**
       * Border Width End
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-e": [{
        "border-e": [s]
      }],
      /**
       * Border Width Top
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-t": [{
        "border-t": [s]
      }],
      /**
       * Border Width Right
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-r": [{
        "border-r": [s]
      }],
      /**
       * Border Width Bottom
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-b": [{
        "border-b": [s]
      }],
      /**
       * Border Width Left
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-l": [{
        "border-l": [s]
      }],
      /**
       * Border Opacity
       * @see https://tailwindcss.com/docs/border-opacity
       */
      "border-opacity": [{
        "border-opacity": [w]
      }],
      /**
       * Border Style
       * @see https://tailwindcss.com/docs/border-style
       */
      "border-style": [{
        border: [...F(), "hidden"]
      }],
      /**
       * Divide Width X
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-x": [{
        "divide-x": [s]
      }],
      /**
       * Divide Width X Reverse
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-x-reverse": ["divide-x-reverse"],
      /**
       * Divide Width Y
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-y": [{
        "divide-y": [s]
      }],
      /**
       * Divide Width Y Reverse
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-y-reverse": ["divide-y-reverse"],
      /**
       * Divide Opacity
       * @see https://tailwindcss.com/docs/divide-opacity
       */
      "divide-opacity": [{
        "divide-opacity": [w]
      }],
      /**
       * Divide Style
       * @see https://tailwindcss.com/docs/divide-style
       */
      "divide-style": [{
        divide: F()
      }],
      /**
       * Border Color
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color": [{
        border: [o]
      }],
      /**
       * Border Color X
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-x": [{
        "border-x": [o]
      }],
      /**
       * Border Color Y
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-y": [{
        "border-y": [o]
      }],
      /**
       * Border Color S
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-s": [{
        "border-s": [o]
      }],
      /**
       * Border Color E
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-e": [{
        "border-e": [o]
      }],
      /**
       * Border Color Top
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-t": [{
        "border-t": [o]
      }],
      /**
       * Border Color Right
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-r": [{
        "border-r": [o]
      }],
      /**
       * Border Color Bottom
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-b": [{
        "border-b": [o]
      }],
      /**
       * Border Color Left
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-l": [{
        "border-l": [o]
      }],
      /**
       * Divide Color
       * @see https://tailwindcss.com/docs/divide-color
       */
      "divide-color": [{
        divide: [o]
      }],
      /**
       * Outline Style
       * @see https://tailwindcss.com/docs/outline-style
       */
      "outline-style": [{
        outline: ["", ...F()]
      }],
      /**
       * Outline Offset
       * @see https://tailwindcss.com/docs/outline-offset
       */
      "outline-offset": [{
        "outline-offset": [Fa, at]
      }],
      /**
       * Outline Width
       * @see https://tailwindcss.com/docs/outline-width
       */
      "outline-w": [{
        outline: [Fa, Os]
      }],
      /**
       * Outline Color
       * @see https://tailwindcss.com/docs/outline-color
       */
      "outline-color": [{
        outline: [e]
      }],
      /**
       * Ring Width
       * @see https://tailwindcss.com/docs/ring-width
       */
      "ring-w": [{
        ring: te()
      }],
      /**
       * Ring Width Inset
       * @see https://tailwindcss.com/docs/ring-width
       */
      "ring-w-inset": ["ring-inset"],
      /**
       * Ring Color
       * @see https://tailwindcss.com/docs/ring-color
       */
      "ring-color": [{
        ring: [e]
      }],
      /**
       * Ring Opacity
       * @see https://tailwindcss.com/docs/ring-opacity
       */
      "ring-opacity": [{
        "ring-opacity": [w]
      }],
      /**
       * Ring Offset Width
       * @see https://tailwindcss.com/docs/ring-offset-width
       */
      "ring-offset-w": [{
        "ring-offset": [Fa, Os]
      }],
      /**
       * Ring Offset Color
       * @see https://tailwindcss.com/docs/ring-offset-color
       */
      "ring-offset-color": [{
        "ring-offset": [e]
      }],
      // Effects
      /**
       * Box Shadow
       * @see https://tailwindcss.com/docs/box-shadow
       */
      shadow: [{
        shadow: ["", "inner", "none", Es, Ete]
      }],
      /**
       * Box Shadow Color
       * @see https://tailwindcss.com/docs/box-shadow-color
       */
      "shadow-color": [{
        shadow: [nm]
      }],
      /**
       * Opacity
       * @see https://tailwindcss.com/docs/opacity
       */
      opacity: [{
        opacity: [w]
      }],
      /**
       * Mix Blend Mode
       * @see https://tailwindcss.com/docs/mix-blend-mode
       */
      "mix-blend": [{
        "mix-blend": [...R(), "plus-lighter", "plus-darker"]
      }],
      /**
       * Background Blend Mode
       * @see https://tailwindcss.com/docs/background-blend-mode
       */
      "bg-blend": [{
        "bg-blend": R()
      }],
      // Filters
      /**
       * Filter
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/filter
       */
      filter: [{
        filter: ["", "none"]
      }],
      /**
       * Blur
       * @see https://tailwindcss.com/docs/blur
       */
      blur: [{
        blur: [r]
      }],
      /**
       * Brightness
       * @see https://tailwindcss.com/docs/brightness
       */
      brightness: [{
        brightness: [n]
      }],
      /**
       * Contrast
       * @see https://tailwindcss.com/docs/contrast
       */
      contrast: [{
        contrast: [l]
      }],
      /**
       * Drop Shadow
       * @see https://tailwindcss.com/docs/drop-shadow
       */
      "drop-shadow": [{
        "drop-shadow": ["", "none", Es, at]
      }],
      /**
       * Grayscale
       * @see https://tailwindcss.com/docs/grayscale
       */
      grayscale: [{
        grayscale: [c]
      }],
      /**
       * Hue Rotate
       * @see https://tailwindcss.com/docs/hue-rotate
       */
      "hue-rotate": [{
        "hue-rotate": [u]
      }],
      /**
       * Invert
       * @see https://tailwindcss.com/docs/invert
       */
      invert: [{
        invert: [f]
      }],
      /**
       * Saturate
       * @see https://tailwindcss.com/docs/saturate
       */
      saturate: [{
        saturate: [E]
      }],
      /**
       * Sepia
       * @see https://tailwindcss.com/docs/sepia
       */
      sepia: [{
        sepia: [h]
      }],
      /**
       * Backdrop Filter
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/backdrop-filter
       */
      "backdrop-filter": [{
        "backdrop-filter": ["", "none"]
      }],
      /**
       * Backdrop Blur
       * @see https://tailwindcss.com/docs/backdrop-blur
       */
      "backdrop-blur": [{
        "backdrop-blur": [r]
      }],
      /**
       * Backdrop Brightness
       * @see https://tailwindcss.com/docs/backdrop-brightness
       */
      "backdrop-brightness": [{
        "backdrop-brightness": [n]
      }],
      /**
       * Backdrop Contrast
       * @see https://tailwindcss.com/docs/backdrop-contrast
       */
      "backdrop-contrast": [{
        "backdrop-contrast": [l]
      }],
      /**
       * Backdrop Grayscale
       * @see https://tailwindcss.com/docs/backdrop-grayscale
       */
      "backdrop-grayscale": [{
        "backdrop-grayscale": [c]
      }],
      /**
       * Backdrop Hue Rotate
       * @see https://tailwindcss.com/docs/backdrop-hue-rotate
       */
      "backdrop-hue-rotate": [{
        "backdrop-hue-rotate": [u]
      }],
      /**
       * Backdrop Invert
       * @see https://tailwindcss.com/docs/backdrop-invert
       */
      "backdrop-invert": [{
        "backdrop-invert": [f]
      }],
      /**
       * Backdrop Opacity
       * @see https://tailwindcss.com/docs/backdrop-opacity
       */
      "backdrop-opacity": [{
        "backdrop-opacity": [w]
      }],
      /**
       * Backdrop Saturate
       * @see https://tailwindcss.com/docs/backdrop-saturate
       */
      "backdrop-saturate": [{
        "backdrop-saturate": [E]
      }],
      /**
       * Backdrop Sepia
       * @see https://tailwindcss.com/docs/backdrop-sepia
       */
      "backdrop-sepia": [{
        "backdrop-sepia": [h]
      }],
      // Tables
      /**
       * Border Collapse
       * @see https://tailwindcss.com/docs/border-collapse
       */
      "border-collapse": [{
        border: ["collapse", "separate"]
      }],
      /**
       * Border Spacing
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing": [{
        "border-spacing": [i]
      }],
      /**
       * Border Spacing X
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing-x": [{
        "border-spacing-x": [i]
      }],
      /**
       * Border Spacing Y
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing-y": [{
        "border-spacing-y": [i]
      }],
      /**
       * Table Layout
       * @see https://tailwindcss.com/docs/table-layout
       */
      "table-layout": [{
        table: ["auto", "fixed"]
      }],
      /**
       * Caption Side
       * @see https://tailwindcss.com/docs/caption-side
       */
      caption: [{
        caption: ["top", "bottom"]
      }],
      // Transitions and Animation
      /**
       * Tranisition Property
       * @see https://tailwindcss.com/docs/transition-property
       */
      transition: [{
        transition: ["none", "all", "", "colors", "opacity", "shadow", "transform", at]
      }],
      /**
       * Transition Duration
       * @see https://tailwindcss.com/docs/transition-duration
       */
      duration: [{
        duration: d()
      }],
      /**
       * Transition Timing Function
       * @see https://tailwindcss.com/docs/transition-timing-function
       */
      ease: [{
        ease: ["linear", "in", "out", "in-out", at]
      }],
      /**
       * Transition Delay
       * @see https://tailwindcss.com/docs/transition-delay
       */
      delay: [{
        delay: d()
      }],
      /**
       * Animation
       * @see https://tailwindcss.com/docs/animation
       */
      animate: [{
        animate: ["none", "spin", "ping", "pulse", "bounce", at]
      }],
      // Transforms
      /**
       * Transform
       * @see https://tailwindcss.com/docs/transform
       */
      transform: [{
        transform: ["", "gpu", "none"]
      }],
      /**
       * Scale
       * @see https://tailwindcss.com/docs/scale
       */
      scale: [{
        scale: [S]
      }],
      /**
       * Scale X
       * @see https://tailwindcss.com/docs/scale
       */
      "scale-x": [{
        "scale-x": [S]
      }],
      /**
       * Scale Y
       * @see https://tailwindcss.com/docs/scale
       */
      "scale-y": [{
        "scale-y": [S]
      }],
      /**
       * Rotate
       * @see https://tailwindcss.com/docs/rotate
       */
      rotate: [{
        rotate: [rm, at]
      }],
      /**
       * Translate X
       * @see https://tailwindcss.com/docs/translate
       */
      "translate-x": [{
        "translate-x": [Q]
      }],
      /**
       * Translate Y
       * @see https://tailwindcss.com/docs/translate
       */
      "translate-y": [{
        "translate-y": [Q]
      }],
      /**
       * Skew X
       * @see https://tailwindcss.com/docs/skew
       */
      "skew-x": [{
        "skew-x": [U]
      }],
      /**
       * Skew Y
       * @see https://tailwindcss.com/docs/skew
       */
      "skew-y": [{
        "skew-y": [U]
      }],
      /**
       * Transform Origin
       * @see https://tailwindcss.com/docs/transform-origin
       */
      "transform-origin": [{
        origin: ["center", "top", "top-right", "right", "bottom-right", "bottom", "bottom-left", "left", "top-left", at]
      }],
      // Interactivity
      /**
       * Accent Color
       * @see https://tailwindcss.com/docs/accent-color
       */
      accent: [{
        accent: ["auto", e]
      }],
      /**
       * Appearance
       * @see https://tailwindcss.com/docs/appearance
       */
      appearance: [{
        appearance: ["none", "auto"]
      }],
      /**
       * Cursor
       * @see https://tailwindcss.com/docs/cursor
       */
      cursor: [{
        cursor: ["auto", "default", "pointer", "wait", "text", "move", "help", "not-allowed", "none", "context-menu", "progress", "cell", "crosshair", "vertical-text", "alias", "copy", "no-drop", "grab", "grabbing", "all-scroll", "col-resize", "row-resize", "n-resize", "e-resize", "s-resize", "w-resize", "ne-resize", "nw-resize", "se-resize", "sw-resize", "ew-resize", "ns-resize", "nesw-resize", "nwse-resize", "zoom-in", "zoom-out", at]
      }],
      /**
       * Caret Color
       * @see https://tailwindcss.com/docs/just-in-time-mode#caret-color-utilities
       */
      "caret-color": [{
        caret: [e]
      }],
      /**
       * Pointer Events
       * @see https://tailwindcss.com/docs/pointer-events
       */
      "pointer-events": [{
        "pointer-events": ["none", "auto"]
      }],
      /**
       * Resize
       * @see https://tailwindcss.com/docs/resize
       */
      resize: [{
        resize: ["none", "y", "x", ""]
      }],
      /**
       * Scroll Behavior
       * @see https://tailwindcss.com/docs/scroll-behavior
       */
      "scroll-behavior": [{
        scroll: ["auto", "smooth"]
      }],
      /**
       * Scroll Margin
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-m": [{
        "scroll-m": I()
      }],
      /**
       * Scroll Margin X
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mx": [{
        "scroll-mx": I()
      }],
      /**
       * Scroll Margin Y
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-my": [{
        "scroll-my": I()
      }],
      /**
       * Scroll Margin Start
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-ms": [{
        "scroll-ms": I()
      }],
      /**
       * Scroll Margin End
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-me": [{
        "scroll-me": I()
      }],
      /**
       * Scroll Margin Top
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mt": [{
        "scroll-mt": I()
      }],
      /**
       * Scroll Margin Right
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mr": [{
        "scroll-mr": I()
      }],
      /**
       * Scroll Margin Bottom
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mb": [{
        "scroll-mb": I()
      }],
      /**
       * Scroll Margin Left
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-ml": [{
        "scroll-ml": I()
      }],
      /**
       * Scroll Padding
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-p": [{
        "scroll-p": I()
      }],
      /**
       * Scroll Padding X
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-px": [{
        "scroll-px": I()
      }],
      /**
       * Scroll Padding Y
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-py": [{
        "scroll-py": I()
      }],
      /**
       * Scroll Padding Start
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-ps": [{
        "scroll-ps": I()
      }],
      /**
       * Scroll Padding End
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pe": [{
        "scroll-pe": I()
      }],
      /**
       * Scroll Padding Top
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pt": [{
        "scroll-pt": I()
      }],
      /**
       * Scroll Padding Right
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pr": [{
        "scroll-pr": I()
      }],
      /**
       * Scroll Padding Bottom
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pb": [{
        "scroll-pb": I()
      }],
      /**
       * Scroll Padding Left
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pl": [{
        "scroll-pl": I()
      }],
      /**
       * Scroll Snap Align
       * @see https://tailwindcss.com/docs/scroll-snap-align
       */
      "snap-align": [{
        snap: ["start", "end", "center", "align-none"]
      }],
      /**
       * Scroll Snap Stop
       * @see https://tailwindcss.com/docs/scroll-snap-stop
       */
      "snap-stop": [{
        snap: ["normal", "always"]
      }],
      /**
       * Scroll Snap Type
       * @see https://tailwindcss.com/docs/scroll-snap-type
       */
      "snap-type": [{
        snap: ["none", "x", "y", "both"]
      }],
      /**
       * Scroll Snap Type Strictness
       * @see https://tailwindcss.com/docs/scroll-snap-type
       */
      "snap-strictness": [{
        snap: ["mandatory", "proximity"]
      }],
      /**
       * Touch Action
       * @see https://tailwindcss.com/docs/touch-action
       */
      touch: [{
        touch: ["auto", "none", "manipulation"]
      }],
      /**
       * Touch Action X
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-x": [{
        "touch-pan": ["x", "left", "right"]
      }],
      /**
       * Touch Action Y
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-y": [{
        "touch-pan": ["y", "up", "down"]
      }],
      /**
       * Touch Action Pinch Zoom
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-pz": ["touch-pinch-zoom"],
      /**
       * User Select
       * @see https://tailwindcss.com/docs/user-select
       */
      select: [{
        select: ["none", "text", "all", "auto"]
      }],
      /**
       * Will Change
       * @see https://tailwindcss.com/docs/will-change
       */
      "will-change": [{
        "will-change": ["auto", "scroll", "contents", "transform", at]
      }],
      // SVG
      /**
       * Fill
       * @see https://tailwindcss.com/docs/fill
       */
      fill: [{
        fill: [e, "none"]
      }],
      /**
       * Stroke Width
       * @see https://tailwindcss.com/docs/stroke-width
       */
      "stroke-w": [{
        stroke: [Fa, Os, Hx]
      }],
      /**
       * Stroke
       * @see https://tailwindcss.com/docs/stroke
       */
      stroke: [{
        stroke: [e, "none"]
      }],
      // Accessibility
      /**
       * Screen Readers
       * @see https://tailwindcss.com/docs/screen-readers
       */
      sr: ["sr-only", "not-sr-only"],
      /**
       * Forced Color Adjust
       * @see https://tailwindcss.com/docs/forced-color-adjust
       */
      "forced-color-adjust": [{
        "forced-color-adjust": ["auto", "none"]
      }]
    },
    conflictingClassGroups: {
      overflow: ["overflow-x", "overflow-y"],
      overscroll: ["overscroll-x", "overscroll-y"],
      inset: ["inset-x", "inset-y", "start", "end", "top", "right", "bottom", "left"],
      "inset-x": ["right", "left"],
      "inset-y": ["top", "bottom"],
      flex: ["basis", "grow", "shrink"],
      gap: ["gap-x", "gap-y"],
      p: ["px", "py", "ps", "pe", "pt", "pr", "pb", "pl"],
      px: ["pr", "pl"],
      py: ["pt", "pb"],
      m: ["mx", "my", "ms", "me", "mt", "mr", "mb", "ml"],
      mx: ["mr", "ml"],
      my: ["mt", "mb"],
      size: ["w", "h"],
      "font-size": ["leading"],
      "fvn-normal": ["fvn-ordinal", "fvn-slashed-zero", "fvn-figure", "fvn-spacing", "fvn-fraction"],
      "fvn-ordinal": ["fvn-normal"],
      "fvn-slashed-zero": ["fvn-normal"],
      "fvn-figure": ["fvn-normal"],
      "fvn-spacing": ["fvn-normal"],
      "fvn-fraction": ["fvn-normal"],
      "line-clamp": ["display", "overflow"],
      rounded: ["rounded-s", "rounded-e", "rounded-t", "rounded-r", "rounded-b", "rounded-l", "rounded-ss", "rounded-se", "rounded-ee", "rounded-es", "rounded-tl", "rounded-tr", "rounded-br", "rounded-bl"],
      "rounded-s": ["rounded-ss", "rounded-es"],
      "rounded-e": ["rounded-se", "rounded-ee"],
      "rounded-t": ["rounded-tl", "rounded-tr"],
      "rounded-r": ["rounded-tr", "rounded-br"],
      "rounded-b": ["rounded-br", "rounded-bl"],
      "rounded-l": ["rounded-tl", "rounded-bl"],
      "border-spacing": ["border-spacing-x", "border-spacing-y"],
      "border-w": ["border-w-s", "border-w-e", "border-w-t", "border-w-r", "border-w-b", "border-w-l"],
      "border-w-x": ["border-w-r", "border-w-l"],
      "border-w-y": ["border-w-t", "border-w-b"],
      "border-color": ["border-color-s", "border-color-e", "border-color-t", "border-color-r", "border-color-b", "border-color-l"],
      "border-color-x": ["border-color-r", "border-color-l"],
      "border-color-y": ["border-color-t", "border-color-b"],
      "scroll-m": ["scroll-mx", "scroll-my", "scroll-ms", "scroll-me", "scroll-mt", "scroll-mr", "scroll-mb", "scroll-ml"],
      "scroll-mx": ["scroll-mr", "scroll-ml"],
      "scroll-my": ["scroll-mt", "scroll-mb"],
      "scroll-p": ["scroll-px", "scroll-py", "scroll-ps", "scroll-pe", "scroll-pt", "scroll-pr", "scroll-pb", "scroll-pl"],
      "scroll-px": ["scroll-pr", "scroll-pl"],
      "scroll-py": ["scroll-pt", "scroll-pb"],
      touch: ["touch-x", "touch-y", "touch-pz"],
      "touch-x": ["touch"],
      "touch-y": ["touch"],
      "touch-pz": ["touch"]
    },
    conflictingClassGroupModifiers: {
      "font-size": ["leading"]
    }
  };
}, fg = /* @__PURE__ */ fte(Ate);
/*!
 * Font Awesome Free 6.7.2 by @fontawesome - https://fontawesome.com
 * License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License)
 * Copyright 2024 Fonticons, Inc.
 */
function _te(e, t, r) {
  return (t = jte(t)) in e ? Object.defineProperty(e, t, {
    value: r,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : e[t] = r, e;
}
function yA(e, t) {
  var r = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var n = Object.getOwnPropertySymbols(e);
    t && (n = n.filter(function(o) {
      return Object.getOwnPropertyDescriptor(e, o).enumerable;
    })), r.push.apply(r, n);
  }
  return r;
}
function pe(e) {
  for (var t = 1; t < arguments.length; t++) {
    var r = arguments[t] != null ? arguments[t] : {};
    t % 2 ? yA(Object(r), !0).forEach(function(n) {
      _te(e, n, r[n]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : yA(Object(r)).forEach(function(n) {
      Object.defineProperty(e, n, Object.getOwnPropertyDescriptor(r, n));
    });
  }
  return e;
}
function Nte(e, t) {
  if (typeof e != "object" || !e) return e;
  var r = e[Symbol.toPrimitive];
  if (r !== void 0) {
    var n = r.call(e, t);
    if (typeof n != "object") return n;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (t === "string" ? String : Number)(e);
}
function jte(e) {
  var t = Nte(e, "string");
  return typeof t == "symbol" ? t : t + "";
}
const vA = () => {
};
let XE = {}, BF = {}, XF = null, KF = {
  mark: vA,
  measure: vA
};
try {
  typeof window < "u" && (XE = window), typeof document < "u" && (BF = document), typeof MutationObserver < "u" && (XF = MutationObserver), typeof performance < "u" && (KF = performance);
} catch {
}
const {
  userAgent: xA = ""
} = XE.navigator || {}, Vl = XE, Rr = BF, wA = XF, Ib = KF;
Vl.document;
const zi = !!Rr.documentElement && !!Rr.head && typeof Rr.addEventListener == "function" && typeof Rr.createElement == "function", JF = ~xA.indexOf("MSIE") || ~xA.indexOf("Trident/");
var Ite = /fa(s|r|l|t|d|dr|dl|dt|b|k|kd|ss|sr|sl|st|sds|sdr|sdl|sdt)?[\-\ ]/, Tte = /Font ?Awesome ?([56 ]*)(Solid|Regular|Light|Thin|Duotone|Brands|Free|Pro|Sharp Duotone|Sharp|Kit)?.*/i, QF = {
  classic: {
    fa: "solid",
    fas: "solid",
    "fa-solid": "solid",
    far: "regular",
    "fa-regular": "regular",
    fal: "light",
    "fa-light": "light",
    fat: "thin",
    "fa-thin": "thin",
    fab: "brands",
    "fa-brands": "brands"
  },
  duotone: {
    fa: "solid",
    fad: "solid",
    "fa-solid": "solid",
    "fa-duotone": "solid",
    fadr: "regular",
    "fa-regular": "regular",
    fadl: "light",
    "fa-light": "light",
    fadt: "thin",
    "fa-thin": "thin"
  },
  sharp: {
    fa: "solid",
    fass: "solid",
    "fa-solid": "solid",
    fasr: "regular",
    "fa-regular": "regular",
    fasl: "light",
    "fa-light": "light",
    fast: "thin",
    "fa-thin": "thin"
  },
  "sharp-duotone": {
    fa: "solid",
    fasds: "solid",
    "fa-solid": "solid",
    fasdr: "regular",
    "fa-regular": "regular",
    fasdl: "light",
    "fa-light": "light",
    fasdt: "thin",
    "fa-thin": "thin"
  }
}, Mte = {
  GROUP: "duotone-group",
  PRIMARY: "primary",
  SECONDARY: "secondary"
}, ZF = ["fa-classic", "fa-duotone", "fa-sharp", "fa-sharp-duotone"], fn = "classic", M1 = "duotone", Rte = "sharp", zte = "sharp-duotone", eD = [fn, M1, Rte, zte], Fte = {
  classic: {
    900: "fas",
    400: "far",
    normal: "far",
    300: "fal",
    100: "fat"
  },
  duotone: {
    900: "fad",
    400: "fadr",
    300: "fadl",
    100: "fadt"
  },
  sharp: {
    900: "fass",
    400: "fasr",
    300: "fasl",
    100: "fast"
  },
  "sharp-duotone": {
    900: "fasds",
    400: "fasdr",
    300: "fasdl",
    100: "fasdt"
  }
}, Dte = {
  "Font Awesome 6 Free": {
    900: "fas",
    400: "far"
  },
  "Font Awesome 6 Pro": {
    900: "fas",
    400: "far",
    normal: "far",
    300: "fal",
    100: "fat"
  },
  "Font Awesome 6 Brands": {
    400: "fab",
    normal: "fab"
  },
  "Font Awesome 6 Duotone": {
    900: "fad",
    400: "fadr",
    normal: "fadr",
    300: "fadl",
    100: "fadt"
  },
  "Font Awesome 6 Sharp": {
    900: "fass",
    400: "fasr",
    normal: "fasr",
    300: "fasl",
    100: "fast"
  },
  "Font Awesome 6 Sharp Duotone": {
    900: "fasds",
    400: "fasdr",
    normal: "fasdr",
    300: "fasdl",
    100: "fasdt"
  }
}, Lte = /* @__PURE__ */ new Map([["classic", {
  defaultShortPrefixId: "fas",
  defaultStyleId: "solid",
  styleIds: ["solid", "regular", "light", "thin", "brands"],
  futureStyleIds: [],
  defaultFontWeight: 900
}], ["sharp", {
  defaultShortPrefixId: "fass",
  defaultStyleId: "solid",
  styleIds: ["solid", "regular", "light", "thin"],
  futureStyleIds: [],
  defaultFontWeight: 900
}], ["duotone", {
  defaultShortPrefixId: "fad",
  defaultStyleId: "solid",
  styleIds: ["solid", "regular", "light", "thin"],
  futureStyleIds: [],
  defaultFontWeight: 900
}], ["sharp-duotone", {
  defaultShortPrefixId: "fasds",
  defaultStyleId: "solid",
  styleIds: ["solid", "regular", "light", "thin"],
  futureStyleIds: [],
  defaultFontWeight: 900
}]]), Vte = {
  classic: {
    solid: "fas",
    regular: "far",
    light: "fal",
    thin: "fat",
    brands: "fab"
  },
  duotone: {
    solid: "fad",
    regular: "fadr",
    light: "fadl",
    thin: "fadt"
  },
  sharp: {
    solid: "fass",
    regular: "fasr",
    light: "fasl",
    thin: "fast"
  },
  "sharp-duotone": {
    solid: "fasds",
    regular: "fasdr",
    light: "fasdl",
    thin: "fasdt"
  }
}, Wte = ["fak", "fa-kit", "fakd", "fa-kit-duotone"], kA = {
  kit: {
    fak: "kit",
    "fa-kit": "kit"
  },
  "kit-duotone": {
    fakd: "kit-duotone",
    "fa-kit-duotone": "kit-duotone"
  }
}, Ute = ["kit"], Yte = {
  kit: {
    "fa-kit": "fak"
  }
}, Hte = ["fak", "fakd"], Gte = {
  kit: {
    fak: "fa-kit"
  }
}, $A = {
  kit: {
    kit: "fak"
  },
  "kit-duotone": {
    "kit-duotone": "fakd"
  }
}, Tb = {
  GROUP: "duotone-group",
  SWAP_OPACITY: "swap-opacity",
  PRIMARY: "primary",
  SECONDARY: "secondary"
}, qte = ["fa-classic", "fa-duotone", "fa-sharp", "fa-sharp-duotone"], Bte = ["fak", "fa-kit", "fakd", "fa-kit-duotone"], Xte = {
  "Font Awesome Kit": {
    400: "fak",
    normal: "fak"
  },
  "Font Awesome Kit Duotone": {
    400: "fakd",
    normal: "fakd"
  }
}, Kte = {
  classic: {
    "fa-brands": "fab",
    "fa-duotone": "fad",
    "fa-light": "fal",
    "fa-regular": "far",
    "fa-solid": "fas",
    "fa-thin": "fat"
  },
  duotone: {
    "fa-regular": "fadr",
    "fa-light": "fadl",
    "fa-thin": "fadt"
  },
  sharp: {
    "fa-solid": "fass",
    "fa-regular": "fasr",
    "fa-light": "fasl",
    "fa-thin": "fast"
  },
  "sharp-duotone": {
    "fa-solid": "fasds",
    "fa-regular": "fasdr",
    "fa-light": "fasdl",
    "fa-thin": "fasdt"
  }
}, Jte = {
  classic: ["fas", "far", "fal", "fat", "fad"],
  duotone: ["fadr", "fadl", "fadt"],
  sharp: ["fass", "fasr", "fasl", "fast"],
  "sharp-duotone": ["fasds", "fasdr", "fasdl", "fasdt"]
}, R$ = {
  classic: {
    fab: "fa-brands",
    fad: "fa-duotone",
    fal: "fa-light",
    far: "fa-regular",
    fas: "fa-solid",
    fat: "fa-thin"
  },
  duotone: {
    fadr: "fa-regular",
    fadl: "fa-light",
    fadt: "fa-thin"
  },
  sharp: {
    fass: "fa-solid",
    fasr: "fa-regular",
    fasl: "fa-light",
    fast: "fa-thin"
  },
  "sharp-duotone": {
    fasds: "fa-solid",
    fasdr: "fa-regular",
    fasdl: "fa-light",
    fasdt: "fa-thin"
  }
}, Qte = ["fa-solid", "fa-regular", "fa-light", "fa-thin", "fa-duotone", "fa-brands"], z$ = ["fa", "fas", "far", "fal", "fat", "fad", "fadr", "fadl", "fadt", "fab", "fass", "fasr", "fasl", "fast", "fasds", "fasdr", "fasdl", "fasdt", ...qte, ...Qte], Zte = ["solid", "regular", "light", "thin", "duotone", "brands"], tD = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], ere = tD.concat([11, 12, 13, 14, 15, 16, 17, 18, 19, 20]), tre = [...Object.keys(Jte), ...Zte, "2xs", "xs", "sm", "lg", "xl", "2xl", "beat", "border", "fade", "beat-fade", "bounce", "flip-both", "flip-horizontal", "flip-vertical", "flip", "fw", "inverse", "layers-counter", "layers-text", "layers", "li", "pull-left", "pull-right", "pulse", "rotate-180", "rotate-270", "rotate-90", "rotate-by", "shake", "spin-pulse", "spin-reverse", "spin", "stack-1x", "stack-2x", "stack", "ul", Tb.GROUP, Tb.SWAP_OPACITY, Tb.PRIMARY, Tb.SECONDARY].concat(tD.map((e) => "".concat(e, "x"))).concat(ere.map((e) => "w-".concat(e))), rre = {
  "Font Awesome 5 Free": {
    900: "fas",
    400: "far"
  },
  "Font Awesome 5 Pro": {
    900: "fas",
    400: "far",
    normal: "far",
    300: "fal"
  },
  "Font Awesome 5 Brands": {
    400: "fab",
    normal: "fab"
  },
  "Font Awesome 5 Duotone": {
    900: "fad"
  }
};
const ui = "___FONT_AWESOME___", F$ = 16, rD = "fa", nD = "svg-inline--fa", nu = "data-fa-i2svg", D$ = "data-fa-pseudo-element", nre = "data-fa-pseudo-element-pending", KE = "data-prefix", JE = "data-icon", OA = "fontawesome-i2svg", ore = "async", are = ["HTML", "HEAD", "STYLE", "SCRIPT"], oD = (() => {
  try {
    return process.env.NODE_ENV === "production";
  } catch {
    return !1;
  }
})();
function Gh(e) {
  return new Proxy(e, {
    get(t, r) {
      return r in t ? t[r] : t[fn];
    }
  });
}
const aD = pe({}, QF);
aD[fn] = pe(pe(pe(pe({}, {
  "fa-duotone": "duotone"
}), QF[fn]), kA.kit), kA["kit-duotone"]);
const ire = Gh(aD), L$ = pe({}, Vte);
L$[fn] = pe(pe(pe(pe({}, {
  duotone: "fad"
}), L$[fn]), $A.kit), $A["kit-duotone"]);
const EA = Gh(L$), V$ = pe({}, R$);
V$[fn] = pe(pe({}, V$[fn]), Gte.kit);
const QE = Gh(V$), W$ = pe({}, Kte);
W$[fn] = pe(pe({}, W$[fn]), Yte.kit);
Gh(W$);
const sre = Ite, iD = "fa-layers-text", lre = Tte, cre = pe({}, Fte);
Gh(cre);
const ure = ["class", "data-prefix", "data-icon", "data-fa-transform", "data-fa-mask"], Gx = Mte, fre = [...Ute, ...tre], dg = Vl.FontAwesomeConfig || {};
function dre(e) {
  var t = Rr.querySelector("script[" + e + "]");
  if (t)
    return t.getAttribute(e);
}
function pre(e) {
  return e === "" ? !0 : e === "false" ? !1 : e === "true" ? !0 : e;
}
Rr && typeof Rr.querySelector == "function" && [["data-family-prefix", "familyPrefix"], ["data-css-prefix", "cssPrefix"], ["data-family-default", "familyDefault"], ["data-style-default", "styleDefault"], ["data-replacement-class", "replacementClass"], ["data-auto-replace-svg", "autoReplaceSvg"], ["data-auto-add-css", "autoAddCss"], ["data-auto-a11y", "autoA11y"], ["data-search-pseudo-elements", "searchPseudoElements"], ["data-observe-mutations", "observeMutations"], ["data-mutate-approach", "mutateApproach"], ["data-keep-original-source", "keepOriginalSource"], ["data-measure-performance", "measurePerformance"], ["data-show-missing-icons", "showMissingIcons"]].forEach((e) => {
  let [t, r] = e;
  const n = pre(dre(t));
  n != null && (dg[r] = n);
});
const sD = {
  styleDefault: "solid",
  familyDefault: fn,
  cssPrefix: rD,
  replacementClass: nD,
  autoReplaceSvg: !0,
  autoAddCss: !0,
  autoA11y: !0,
  searchPseudoElements: !1,
  observeMutations: !0,
  mutateApproach: "async",
  keepOriginalSource: !0,
  measurePerformance: !1,
  showMissingIcons: !0
};
dg.familyPrefix && (dg.cssPrefix = dg.familyPrefix);
const cd = pe(pe({}, sD), dg);
cd.autoReplaceSvg || (cd.observeMutations = !1);
const De = {};
Object.keys(sD).forEach((e) => {
  Object.defineProperty(De, e, {
    enumerable: !0,
    set: function(t) {
      cd[e] = t, pg.forEach((r) => r(De));
    },
    get: function() {
      return cd[e];
    }
  });
});
Object.defineProperty(De, "familyPrefix", {
  enumerable: !0,
  set: function(e) {
    cd.cssPrefix = e, pg.forEach((t) => t(De));
  },
  get: function() {
    return cd.cssPrefix;
  }
});
Vl.FontAwesomeConfig = De;
const pg = [];
function mre(e) {
  return pg.push(e), () => {
    pg.splice(pg.indexOf(e), 1);
  };
}
const Ss = F$, ia = {
  size: 16,
  x: 0,
  y: 0,
  rotate: 0,
  flipX: !1,
  flipY: !1
};
function gre(e) {
  if (!e || !zi)
    return;
  const t = Rr.createElement("style");
  t.setAttribute("type", "text/css"), t.innerHTML = e;
  const r = Rr.head.childNodes;
  let n = null;
  for (let o = r.length - 1; o > -1; o--) {
    const a = r[o], i = (a.tagName || "").toUpperCase();
    ["STYLE", "LINK"].indexOf(i) > -1 && (n = a);
  }
  return Rr.head.insertBefore(t, n), e;
}
const hre = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
function Jg() {
  let e = 12, t = "";
  for (; e-- > 0; )
    t += hre[Math.random() * 62 | 0];
  return t;
}
function Ad(e) {
  const t = [];
  for (let r = (e || []).length >>> 0; r--; )
    t[r] = e[r];
  return t;
}
function ZE(e) {
  return e.classList ? Ad(e.classList) : (e.getAttribute("class") || "").split(" ").filter((t) => t);
}
function lD(e) {
  return "".concat(e).replace(/&/g, "&amp;").replace(/"/g, "&quot;").replace(/'/g, "&#39;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
}
function bre(e) {
  return Object.keys(e || {}).reduce((t, r) => t + "".concat(r, '="').concat(lD(e[r]), '" '), "").trim();
}
function R1(e) {
  return Object.keys(e || {}).reduce((t, r) => t + "".concat(r, ": ").concat(e[r].trim(), ";"), "");
}
function eS(e) {
  return e.size !== ia.size || e.x !== ia.x || e.y !== ia.y || e.rotate !== ia.rotate || e.flipX || e.flipY;
}
function yre(e) {
  let {
    transform: t,
    containerWidth: r,
    iconWidth: n
  } = e;
  const o = {
    transform: "translate(".concat(r / 2, " 256)")
  }, a = "translate(".concat(t.x * 32, ", ").concat(t.y * 32, ") "), i = "scale(".concat(t.size / 16 * (t.flipX ? -1 : 1), ", ").concat(t.size / 16 * (t.flipY ? -1 : 1), ") "), s = "rotate(".concat(t.rotate, " 0 0)"), l = {
    transform: "".concat(a, " ").concat(i, " ").concat(s)
  }, c = {
    transform: "translate(".concat(n / 2 * -1, " -256)")
  };
  return {
    outer: o,
    inner: l,
    path: c
  };
}
function vre(e) {
  let {
    transform: t,
    width: r = F$,
    height: n = F$,
    startCentered: o = !1
  } = e, a = "";
  return o && JF ? a += "translate(".concat(t.x / Ss - r / 2, "em, ").concat(t.y / Ss - n / 2, "em) ") : o ? a += "translate(calc(-50% + ".concat(t.x / Ss, "em), calc(-50% + ").concat(t.y / Ss, "em)) ") : a += "translate(".concat(t.x / Ss, "em, ").concat(t.y / Ss, "em) "), a += "scale(".concat(t.size / Ss * (t.flipX ? -1 : 1), ", ").concat(t.size / Ss * (t.flipY ? -1 : 1), ") "), a += "rotate(".concat(t.rotate, "deg) "), a;
}
var xre = `:root, :host {
  --fa-font-solid: normal 900 1em/1 "Font Awesome 6 Free";
  --fa-font-regular: normal 400 1em/1 "Font Awesome 6 Free";
  --fa-font-light: normal 300 1em/1 "Font Awesome 6 Pro";
  --fa-font-thin: normal 100 1em/1 "Font Awesome 6 Pro";
  --fa-font-duotone: normal 900 1em/1 "Font Awesome 6 Duotone";
  --fa-font-duotone-regular: normal 400 1em/1 "Font Awesome 6 Duotone";
  --fa-font-duotone-light: normal 300 1em/1 "Font Awesome 6 Duotone";
  --fa-font-duotone-thin: normal 100 1em/1 "Font Awesome 6 Duotone";
  --fa-font-brands: normal 400 1em/1 "Font Awesome 6 Brands";
  --fa-font-sharp-solid: normal 900 1em/1 "Font Awesome 6 Sharp";
  --fa-font-sharp-regular: normal 400 1em/1 "Font Awesome 6 Sharp";
  --fa-font-sharp-light: normal 300 1em/1 "Font Awesome 6 Sharp";
  --fa-font-sharp-thin: normal 100 1em/1 "Font Awesome 6 Sharp";
  --fa-font-sharp-duotone-solid: normal 900 1em/1 "Font Awesome 6 Sharp Duotone";
  --fa-font-sharp-duotone-regular: normal 400 1em/1 "Font Awesome 6 Sharp Duotone";
  --fa-font-sharp-duotone-light: normal 300 1em/1 "Font Awesome 6 Sharp Duotone";
  --fa-font-sharp-duotone-thin: normal 100 1em/1 "Font Awesome 6 Sharp Duotone";
}

svg:not(:root).svg-inline--fa, svg:not(:host).svg-inline--fa {
  overflow: visible;
  box-sizing: content-box;
}

.svg-inline--fa {
  display: var(--fa-display, inline-block);
  height: 1em;
  overflow: visible;
  vertical-align: -0.125em;
}
.svg-inline--fa.fa-2xs {
  vertical-align: 0.1em;
}
.svg-inline--fa.fa-xs {
  vertical-align: 0em;
}
.svg-inline--fa.fa-sm {
  vertical-align: -0.0714285705em;
}
.svg-inline--fa.fa-lg {
  vertical-align: -0.2em;
}
.svg-inline--fa.fa-xl {
  vertical-align: -0.25em;
}
.svg-inline--fa.fa-2xl {
  vertical-align: -0.3125em;
}
.svg-inline--fa.fa-pull-left {
  margin-right: var(--fa-pull-margin, 0.3em);
  width: auto;
}
.svg-inline--fa.fa-pull-right {
  margin-left: var(--fa-pull-margin, 0.3em);
  width: auto;
}
.svg-inline--fa.fa-li {
  width: var(--fa-li-width, 2em);
  top: 0.25em;
}
.svg-inline--fa.fa-fw {
  width: var(--fa-fw-width, 1.25em);
}

.fa-layers svg.svg-inline--fa {
  bottom: 0;
  left: 0;
  margin: auto;
  position: absolute;
  right: 0;
  top: 0;
}

.fa-layers-counter, .fa-layers-text {
  display: inline-block;
  position: absolute;
  text-align: center;
}

.fa-layers {
  display: inline-block;
  height: 1em;
  position: relative;
  text-align: center;
  vertical-align: -0.125em;
  width: 1em;
}
.fa-layers svg.svg-inline--fa {
  transform-origin: center center;
}

.fa-layers-text {
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  transform-origin: center center;
}

.fa-layers-counter {
  background-color: var(--fa-counter-background-color, #ff253a);
  border-radius: var(--fa-counter-border-radius, 1em);
  box-sizing: border-box;
  color: var(--fa-inverse, #fff);
  line-height: var(--fa-counter-line-height, 1);
  max-width: var(--fa-counter-max-width, 5em);
  min-width: var(--fa-counter-min-width, 1.5em);
  overflow: hidden;
  padding: var(--fa-counter-padding, 0.25em 0.5em);
  right: var(--fa-right, 0);
  text-overflow: ellipsis;
  top: var(--fa-top, 0);
  transform: scale(var(--fa-counter-scale, 0.25));
  transform-origin: top right;
}

.fa-layers-bottom-right {
  bottom: var(--fa-bottom, 0);
  right: var(--fa-right, 0);
  top: auto;
  transform: scale(var(--fa-layers-scale, 0.25));
  transform-origin: bottom right;
}

.fa-layers-bottom-left {
  bottom: var(--fa-bottom, 0);
  left: var(--fa-left, 0);
  right: auto;
  top: auto;
  transform: scale(var(--fa-layers-scale, 0.25));
  transform-origin: bottom left;
}

.fa-layers-top-right {
  top: var(--fa-top, 0);
  right: var(--fa-right, 0);
  transform: scale(var(--fa-layers-scale, 0.25));
  transform-origin: top right;
}

.fa-layers-top-left {
  left: var(--fa-left, 0);
  right: auto;
  top: var(--fa-top, 0);
  transform: scale(var(--fa-layers-scale, 0.25));
  transform-origin: top left;
}

.fa-1x {
  font-size: 1em;
}

.fa-2x {
  font-size: 2em;
}

.fa-3x {
  font-size: 3em;
}

.fa-4x {
  font-size: 4em;
}

.fa-5x {
  font-size: 5em;
}

.fa-6x {
  font-size: 6em;
}

.fa-7x {
  font-size: 7em;
}

.fa-8x {
  font-size: 8em;
}

.fa-9x {
  font-size: 9em;
}

.fa-10x {
  font-size: 10em;
}

.fa-2xs {
  font-size: 0.625em;
  line-height: 0.1em;
  vertical-align: 0.225em;
}

.fa-xs {
  font-size: 0.75em;
  line-height: 0.0833333337em;
  vertical-align: 0.125em;
}

.fa-sm {
  font-size: 0.875em;
  line-height: 0.0714285718em;
  vertical-align: 0.0535714295em;
}

.fa-lg {
  font-size: 1.25em;
  line-height: 0.05em;
  vertical-align: -0.075em;
}

.fa-xl {
  font-size: 1.5em;
  line-height: 0.0416666682em;
  vertical-align: -0.125em;
}

.fa-2xl {
  font-size: 2em;
  line-height: 0.03125em;
  vertical-align: -0.1875em;
}

.fa-fw {
  text-align: center;
  width: 1.25em;
}

.fa-ul {
  list-style-type: none;
  margin-left: var(--fa-li-margin, 2.5em);
  padding-left: 0;
}
.fa-ul > li {
  position: relative;
}

.fa-li {
  left: calc(-1 * var(--fa-li-width, 2em));
  position: absolute;
  text-align: center;
  width: var(--fa-li-width, 2em);
  line-height: inherit;
}

.fa-border {
  border-color: var(--fa-border-color, #eee);
  border-radius: var(--fa-border-radius, 0.1em);
  border-style: var(--fa-border-style, solid);
  border-width: var(--fa-border-width, 0.08em);
  padding: var(--fa-border-padding, 0.2em 0.25em 0.15em);
}

.fa-pull-left {
  float: left;
  margin-right: var(--fa-pull-margin, 0.3em);
}

.fa-pull-right {
  float: right;
  margin-left: var(--fa-pull-margin, 0.3em);
}

.fa-beat {
  animation-name: fa-beat;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, ease-in-out);
}

.fa-bounce {
  animation-name: fa-bounce;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.28, 0.84, 0.42, 1));
}

.fa-fade {
  animation-name: fa-fade;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));
}

.fa-beat-fade {
  animation-name: fa-beat-fade;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));
}

.fa-flip {
  animation-name: fa-flip;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, ease-in-out);
}

.fa-shake {
  animation-name: fa-shake;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, linear);
}

.fa-spin {
  animation-name: fa-spin;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 2s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, linear);
}

.fa-spin-reverse {
  --fa-animation-direction: reverse;
}

.fa-pulse,
.fa-spin-pulse {
  animation-name: fa-spin;
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, steps(8));
}

@media (prefers-reduced-motion: reduce) {
  .fa-beat,
.fa-bounce,
.fa-fade,
.fa-beat-fade,
.fa-flip,
.fa-pulse,
.fa-shake,
.fa-spin,
.fa-spin-pulse {
    animation-delay: -1ms;
    animation-duration: 1ms;
    animation-iteration-count: 1;
    transition-delay: 0s;
    transition-duration: 0s;
  }
}
@keyframes fa-beat {
  0%, 90% {
    transform: scale(1);
  }
  45% {
    transform: scale(var(--fa-beat-scale, 1.25));
  }
}
@keyframes fa-bounce {
  0% {
    transform: scale(1, 1) translateY(0);
  }
  10% {
    transform: scale(var(--fa-bounce-start-scale-x, 1.1), var(--fa-bounce-start-scale-y, 0.9)) translateY(0);
  }
  30% {
    transform: scale(var(--fa-bounce-jump-scale-x, 0.9), var(--fa-bounce-jump-scale-y, 1.1)) translateY(var(--fa-bounce-height, -0.5em));
  }
  50% {
    transform: scale(var(--fa-bounce-land-scale-x, 1.05), var(--fa-bounce-land-scale-y, 0.95)) translateY(0);
  }
  57% {
    transform: scale(1, 1) translateY(var(--fa-bounce-rebound, -0.125em));
  }
  64% {
    transform: scale(1, 1) translateY(0);
  }
  100% {
    transform: scale(1, 1) translateY(0);
  }
}
@keyframes fa-fade {
  50% {
    opacity: var(--fa-fade-opacity, 0.4);
  }
}
@keyframes fa-beat-fade {
  0%, 100% {
    opacity: var(--fa-beat-fade-opacity, 0.4);
    transform: scale(1);
  }
  50% {
    opacity: 1;
    transform: scale(var(--fa-beat-fade-scale, 1.125));
  }
}
@keyframes fa-flip {
  50% {
    transform: rotate3d(var(--fa-flip-x, 0), var(--fa-flip-y, 1), var(--fa-flip-z, 0), var(--fa-flip-angle, -180deg));
  }
}
@keyframes fa-shake {
  0% {
    transform: rotate(-15deg);
  }
  4% {
    transform: rotate(15deg);
  }
  8%, 24% {
    transform: rotate(-18deg);
  }
  12%, 28% {
    transform: rotate(18deg);
  }
  16% {
    transform: rotate(-22deg);
  }
  20% {
    transform: rotate(22deg);
  }
  32% {
    transform: rotate(-12deg);
  }
  36% {
    transform: rotate(12deg);
  }
  40%, 100% {
    transform: rotate(0deg);
  }
}
@keyframes fa-spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
.fa-rotate-90 {
  transform: rotate(90deg);
}

.fa-rotate-180 {
  transform: rotate(180deg);
}

.fa-rotate-270 {
  transform: rotate(270deg);
}

.fa-flip-horizontal {
  transform: scale(-1, 1);
}

.fa-flip-vertical {
  transform: scale(1, -1);
}

.fa-flip-both,
.fa-flip-horizontal.fa-flip-vertical {
  transform: scale(-1, -1);
}

.fa-rotate-by {
  transform: rotate(var(--fa-rotate-angle, 0));
}

.fa-stack {
  display: inline-block;
  vertical-align: middle;
  height: 2em;
  position: relative;
  width: 2.5em;
}

.fa-stack-1x,
.fa-stack-2x {
  bottom: 0;
  left: 0;
  margin: auto;
  position: absolute;
  right: 0;
  top: 0;
  z-index: var(--fa-stack-z-index, auto);
}

.svg-inline--fa.fa-stack-1x {
  height: 1em;
  width: 1.25em;
}
.svg-inline--fa.fa-stack-2x {
  height: 2em;
  width: 2.5em;
}

.fa-inverse {
  color: var(--fa-inverse, #fff);
}

.sr-only,
.fa-sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.sr-only-focusable:not(:focus),
.fa-sr-only-focusable:not(:focus) {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.svg-inline--fa .fa-primary {
  fill: var(--fa-primary-color, currentColor);
  opacity: var(--fa-primary-opacity, 1);
}

.svg-inline--fa .fa-secondary {
  fill: var(--fa-secondary-color, currentColor);
  opacity: var(--fa-secondary-opacity, 0.4);
}

.svg-inline--fa.fa-swap-opacity .fa-primary {
  opacity: var(--fa-secondary-opacity, 0.4);
}

.svg-inline--fa.fa-swap-opacity .fa-secondary {
  opacity: var(--fa-primary-opacity, 1);
}

.svg-inline--fa mask .fa-primary,
.svg-inline--fa mask .fa-secondary {
  fill: black;
}`;
function cD() {
  const e = rD, t = nD, r = De.cssPrefix, n = De.replacementClass;
  let o = xre;
  if (r !== e || n !== t) {
    const a = new RegExp("\\.".concat(e, "\\-"), "g"), i = new RegExp("\\--".concat(e, "\\-"), "g"), s = new RegExp("\\.".concat(t), "g");
    o = o.replace(a, ".".concat(r, "-")).replace(i, "--".concat(r, "-")).replace(s, ".".concat(n));
  }
  return o;
}
let SA = !1;
function qx() {
  De.autoAddCss && !SA && (gre(cD()), SA = !0);
}
var wre = {
  mixout() {
    return {
      dom: {
        css: cD,
        insertCss: qx
      }
    };
  },
  hooks() {
    return {
      beforeDOMElementCreation() {
        qx();
      },
      beforeI2svg() {
        qx();
      }
    };
  }
};
const fi = Vl || {};
fi[ui] || (fi[ui] = {});
fi[ui].styles || (fi[ui].styles = {});
fi[ui].hooks || (fi[ui].hooks = {});
fi[ui].shims || (fi[ui].shims = []);
var sa = fi[ui];
const uD = [], fD = function() {
  Rr.removeEventListener("DOMContentLoaded", fD), Cv = 1, uD.map((e) => e());
};
let Cv = !1;
zi && (Cv = (Rr.documentElement.doScroll ? /^loaded|^c/ : /^loaded|^i|^c/).test(Rr.readyState), Cv || Rr.addEventListener("DOMContentLoaded", fD));
function kre(e) {
  zi && (Cv ? setTimeout(e, 0) : uD.push(e));
}
function qh(e) {
  const {
    tag: t,
    attributes: r = {},
    children: n = []
  } = e;
  return typeof e == "string" ? lD(e) : "<".concat(t, " ").concat(bre(r), ">").concat(n.map(qh).join(""), "</").concat(t, ">");
}
function PA(e, t, r) {
  if (e && e[t] && e[t][r])
    return {
      prefix: t,
      iconName: r,
      icon: e[t][r]
    };
}
var Bx = function(e, t, r, n) {
  var o = Object.keys(e), a = o.length, i = t, s, l, c;
  for (r === void 0 ? (s = 1, c = e[o[0]]) : (s = 0, c = r); s < a; s++)
    l = o[s], c = i(c, e[l], l, e);
  return c;
};
function $re(e) {
  const t = [];
  let r = 0;
  const n = e.length;
  for (; r < n; ) {
    const o = e.charCodeAt(r++);
    if (o >= 55296 && o <= 56319 && r < n) {
      const a = e.charCodeAt(r++);
      (a & 64512) == 56320 ? t.push(((o & 1023) << 10) + (a & 1023) + 65536) : (t.push(o), r--);
    } else
      t.push(o);
  }
  return t;
}
function dD(e) {
  const t = $re(e);
  return t.length === 1 ? t[0].toString(16) : null;
}
function Ore(e, t) {
  const r = e.length;
  let n = e.charCodeAt(t), o;
  return n >= 55296 && n <= 56319 && r > t + 1 && (o = e.charCodeAt(t + 1), o >= 56320 && o <= 57343) ? (n - 55296) * 1024 + o - 56320 + 65536 : n;
}
function CA(e) {
  return Object.keys(e).reduce((t, r) => {
    const n = e[r];
    return n.icon ? t[n.iconName] = n.icon : t[r] = n, t;
  }, {});
}
function U$(e, t) {
  let r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
  const {
    skipHooks: n = !1
  } = r, o = CA(t);
  typeof sa.hooks.addPack == "function" && !n ? sa.hooks.addPack(e, CA(t)) : sa.styles[e] = pe(pe({}, sa.styles[e] || {}), o), e === "fas" && U$("fa", t);
}
const {
  styles: Qg,
  shims: Ere
} = sa, pD = Object.keys(QE), Sre = pD.reduce((e, t) => (e[t] = Object.keys(QE[t]), e), {});
let tS = null, mD = {}, gD = {}, hD = {}, bD = {}, yD = {};
function Pre(e) {
  return ~fre.indexOf(e);
}
function Cre(e, t) {
  const r = t.split("-"), n = r[0], o = r.slice(1).join("-");
  return n === e && o !== "" && !Pre(o) ? o : null;
}
const vD = () => {
  const e = (n) => Bx(Qg, (o, a, i) => (o[i] = Bx(a, n, {}), o), {});
  mD = e((n, o, a) => (o[3] && (n[o[3]] = a), o[2] && o[2].filter((i) => typeof i == "number").forEach((i) => {
    n[i.toString(16)] = a;
  }), n)), gD = e((n, o, a) => (n[a] = a, o[2] && o[2].filter((i) => typeof i == "string").forEach((i) => {
    n[i] = a;
  }), n)), yD = e((n, o, a) => {
    const i = o[2];
    return n[a] = a, i.forEach((s) => {
      n[s] = a;
    }), n;
  });
  const t = "far" in Qg || De.autoFetchSvg, r = Bx(Ere, (n, o) => {
    const a = o[0];
    let i = o[1];
    const s = o[2];
    return i === "far" && !t && (i = "fas"), typeof a == "string" && (n.names[a] = {
      prefix: i,
      iconName: s
    }), typeof a == "number" && (n.unicodes[a.toString(16)] = {
      prefix: i,
      iconName: s
    }), n;
  }, {
    names: {},
    unicodes: {}
  });
  hD = r.names, bD = r.unicodes, tS = z1(De.styleDefault, {
    family: De.familyDefault
  });
};
mre((e) => {
  tS = z1(e.styleDefault, {
    family: De.familyDefault
  });
});
vD();
function rS(e, t) {
  return (mD[e] || {})[t];
}
function Are(e, t) {
  return (gD[e] || {})[t];
}
function Mc(e, t) {
  return (yD[e] || {})[t];
}
function xD(e) {
  return hD[e] || {
    prefix: null,
    iconName: null
  };
}
function _re(e) {
  const t = bD[e], r = rS("fas", e);
  return t || (r ? {
    prefix: "fas",
    iconName: r
  } : null) || {
    prefix: null,
    iconName: null
  };
}
function Wl() {
  return tS;
}
const wD = () => ({
  prefix: null,
  iconName: null,
  rest: []
});
function Nre(e) {
  let t = fn;
  const r = pD.reduce((n, o) => (n[o] = "".concat(De.cssPrefix, "-").concat(o), n), {});
  return eD.forEach((n) => {
    (e.includes(r[n]) || e.some((o) => Sre[n].includes(o))) && (t = n);
  }), t;
}
function z1(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  const {
    family: r = fn
  } = t, n = ire[r][e];
  if (r === M1 && !e)
    return "fad";
  const o = EA[r][e] || EA[r][n], a = e in sa.styles ? e : null;
  return o || a || null;
}
function jre(e) {
  let t = [], r = null;
  return e.forEach((n) => {
    const o = Cre(De.cssPrefix, n);
    o ? r = o : n && t.push(n);
  }), {
    iconName: r,
    rest: t
  };
}
function AA(e) {
  return e.sort().filter((t, r, n) => n.indexOf(t) === r);
}
function F1(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  const {
    skipLookups: r = !1
  } = t;
  let n = null;
  const o = z$.concat(Bte), a = AA(e.filter((f) => o.includes(f))), i = AA(e.filter((f) => !z$.includes(f))), s = a.filter((f) => (n = f, !ZF.includes(f))), [l = null] = s, c = Nre(a), u = pe(pe({}, jre(i)), {}, {
    prefix: z1(l, {
      family: c
    })
  });
  return pe(pe(pe({}, u), Rre({
    values: e,
    family: c,
    styles: Qg,
    config: De,
    canonical: u,
    givenPrefix: n
  })), Ire(r, n, u));
}
function Ire(e, t, r) {
  let {
    prefix: n,
    iconName: o
  } = r;
  if (e || !n || !o)
    return {
      prefix: n,
      iconName: o
    };
  const a = t === "fa" ? xD(o) : {}, i = Mc(n, o);
  return o = a.iconName || i || o, n = a.prefix || n, n === "far" && !Qg.far && Qg.fas && !De.autoFetchSvg && (n = "fas"), {
    prefix: n,
    iconName: o
  };
}
const Tre = eD.filter((e) => e !== fn || e !== M1), Mre = Object.keys(R$).filter((e) => e !== fn).map((e) => Object.keys(R$[e])).flat();
function Rre(e) {
  const {
    values: t,
    family: r,
    canonical: n,
    givenPrefix: o = "",
    styles: a = {},
    config: i = {}
  } = e, s = r === M1, l = t.includes("fa-duotone") || t.includes("fad"), c = i.familyDefault === "duotone", u = n.prefix === "fad" || n.prefix === "fa-duotone";
  if (!s && (l || c || u) && (n.prefix = "fad"), (t.includes("fa-brands") || t.includes("fab")) && (n.prefix = "fab"), !n.prefix && Tre.includes(r) && (Object.keys(a).find((f) => Mre.includes(f)) || i.autoFetchSvg)) {
    const f = Lte.get(r).defaultShortPrefixId;
    n.prefix = f, n.iconName = Mc(n.prefix, n.iconName) || n.iconName;
  }
  return (n.prefix === "fa" || o === "fa") && (n.prefix = Wl() || "fas"), n;
}
let zre = class {
  constructor() {
    this.definitions = {};
  }
  add() {
    for (var t = arguments.length, r = new Array(t), n = 0; n < t; n++)
      r[n] = arguments[n];
    const o = r.reduce(this._pullDefinitions, {});
    Object.keys(o).forEach((a) => {
      this.definitions[a] = pe(pe({}, this.definitions[a] || {}), o[a]), U$(a, o[a]);
      const i = QE[fn][a];
      i && U$(i, o[a]), vD();
    });
  }
  reset() {
    this.definitions = {};
  }
  _pullDefinitions(t, r) {
    const n = r.prefix && r.iconName && r.icon ? {
      0: r
    } : r;
    return Object.keys(n).map((o) => {
      const {
        prefix: a,
        iconName: i,
        icon: s
      } = n[o], l = s[2];
      t[a] || (t[a] = {}), l.length > 0 && l.forEach((c) => {
        typeof c == "string" && (t[a][c] = s);
      }), t[a][i] = s;
    }), t;
  }
}, _A = [], Qu = {};
const Pf = {}, Fre = Object.keys(Pf);
function Dre(e, t) {
  let {
    mixoutsTo: r
  } = t;
  return _A = e, Qu = {}, Object.keys(Pf).forEach((n) => {
    Fre.indexOf(n) === -1 && delete Pf[n];
  }), _A.forEach((n) => {
    const o = n.mixout ? n.mixout() : {};
    if (Object.keys(o).forEach((a) => {
      typeof o[a] == "function" && (r[a] = o[a]), typeof o[a] == "object" && Object.keys(o[a]).forEach((i) => {
        r[a] || (r[a] = {}), r[a][i] = o[a][i];
      });
    }), n.hooks) {
      const a = n.hooks();
      Object.keys(a).forEach((i) => {
        Qu[i] || (Qu[i] = []), Qu[i].push(a[i]);
      });
    }
    n.provides && n.provides(Pf);
  }), r;
}
function Y$(e, t) {
  for (var r = arguments.length, n = new Array(r > 2 ? r - 2 : 0), o = 2; o < r; o++)
    n[o - 2] = arguments[o];
  return (Qu[e] || []).forEach((a) => {
    t = a.apply(null, [t, ...n]);
  }), t;
}
function ou(e) {
  for (var t = arguments.length, r = new Array(t > 1 ? t - 1 : 0), n = 1; n < t; n++)
    r[n - 1] = arguments[n];
  (Qu[e] || []).forEach((o) => {
    o.apply(null, r);
  });
}
function Ul() {
  const e = arguments[0], t = Array.prototype.slice.call(arguments, 1);
  return Pf[e] ? Pf[e].apply(null, t) : void 0;
}
function H$(e) {
  e.prefix === "fa" && (e.prefix = "fas");
  let {
    iconName: t
  } = e;
  const r = e.prefix || Wl();
  if (t)
    return t = Mc(r, t) || t, PA(kD.definitions, r, t) || PA(sa.styles, r, t);
}
const kD = new zre(), Lre = () => {
  De.autoReplaceSvg = !1, De.observeMutations = !1, ou("noAuto");
}, Vre = {
  i2svg: function() {
    let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    return zi ? (ou("beforeI2svg", e), Ul("pseudoElements2svg", e), Ul("i2svg", e)) : Promise.reject(new Error("Operation requires a DOM of some kind."));
  },
  watch: function() {
    let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    const {
      autoReplaceSvgRoot: t
    } = e;
    De.autoReplaceSvg === !1 && (De.autoReplaceSvg = !0), De.observeMutations = !0, kre(() => {
      Ure({
        autoReplaceSvgRoot: t
      }), ou("watch", e);
    });
  }
}, Wre = {
  icon: (e) => {
    if (e === null)
      return null;
    if (typeof e == "object" && e.prefix && e.iconName)
      return {
        prefix: e.prefix,
        iconName: Mc(e.prefix, e.iconName) || e.iconName
      };
    if (Array.isArray(e) && e.length === 2) {
      const t = e[1].indexOf("fa-") === 0 ? e[1].slice(3) : e[1], r = z1(e[0]);
      return {
        prefix: r,
        iconName: Mc(r, t) || t
      };
    }
    if (typeof e == "string" && (e.indexOf("".concat(De.cssPrefix, "-")) > -1 || e.match(sre))) {
      const t = F1(e.split(" "), {
        skipLookups: !0
      });
      return {
        prefix: t.prefix || Wl(),
        iconName: Mc(t.prefix, t.iconName) || t.iconName
      };
    }
    if (typeof e == "string") {
      const t = Wl();
      return {
        prefix: t,
        iconName: Mc(t, e) || e
      };
    }
  }
}, Xn = {
  noAuto: Lre,
  config: De,
  dom: Vre,
  parse: Wre,
  library: kD,
  findIconDefinition: H$,
  toHtml: qh
}, Ure = function() {
  let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  const {
    autoReplaceSvgRoot: t = Rr
  } = e;
  (Object.keys(sa.styles).length > 0 || De.autoFetchSvg) && zi && De.autoReplaceSvg && Xn.dom.i2svg({
    node: t
  });
};
function D1(e, t) {
  return Object.defineProperty(e, "abstract", {
    get: t
  }), Object.defineProperty(e, "html", {
    get: function() {
      return e.abstract.map((r) => qh(r));
    }
  }), Object.defineProperty(e, "node", {
    get: function() {
      if (!zi) return;
      const r = Rr.createElement("div");
      return r.innerHTML = e.html, r.children;
    }
  }), e;
}
function Yre(e) {
  let {
    children: t,
    main: r,
    mask: n,
    attributes: o,
    styles: a,
    transform: i
  } = e;
  if (eS(i) && r.found && !n.found) {
    const {
      width: s,
      height: l
    } = r, c = {
      x: s / l / 2,
      y: 0.5
    };
    o.style = R1(pe(pe({}, a), {}, {
      "transform-origin": "".concat(c.x + i.x / 16, "em ").concat(c.y + i.y / 16, "em")
    }));
  }
  return [{
    tag: "svg",
    attributes: o,
    children: t
  }];
}
function Hre(e) {
  let {
    prefix: t,
    iconName: r,
    children: n,
    attributes: o,
    symbol: a
  } = e;
  const i = a === !0 ? "".concat(t, "-").concat(De.cssPrefix, "-").concat(r) : a;
  return [{
    tag: "svg",
    attributes: {
      style: "display: none;"
    },
    children: [{
      tag: "symbol",
      attributes: pe(pe({}, o), {}, {
        id: i
      }),
      children: n
    }]
  }];
}
function nS(e) {
  const {
    icons: {
      main: t,
      mask: r
    },
    prefix: n,
    iconName: o,
    transform: a,
    symbol: i,
    title: s,
    maskId: l,
    titleId: c,
    extra: u,
    watchable: f = !1
  } = e, {
    width: p,
    height: v
  } = r.found ? r : t, x = Hte.includes(n), b = [De.replacementClass, o ? "".concat(De.cssPrefix, "-").concat(o) : ""].filter((h) => u.classes.indexOf(h) === -1).filter((h) => h !== "" || !!h).concat(u.classes).join(" ");
  let m = {
    children: [],
    attributes: pe(pe({}, u.attributes), {}, {
      "data-prefix": n,
      "data-icon": o,
      class: b,
      role: u.attributes.role || "img",
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 ".concat(p, " ").concat(v)
    })
  };
  const w = x && !~u.classes.indexOf("fa-fw") ? {
    width: "".concat(p / v * 16 * 0.0625, "em")
  } : {};
  f && (m.attributes[nu] = ""), s && (m.children.push({
    tag: "title",
    attributes: {
      id: m.attributes["aria-labelledby"] || "title-".concat(c || Jg())
    },
    children: [s]
  }), delete m.attributes.title);
  const $ = pe(pe({}, m), {}, {
    prefix: n,
    iconName: o,
    main: t,
    mask: r,
    maskId: l,
    transform: a,
    symbol: i,
    styles: pe(pe({}, w), u.styles)
  }), {
    children: E,
    attributes: S
  } = r.found && t.found ? Ul("generateAbstractMask", $) || {
    children: [],
    attributes: {}
  } : Ul("generateAbstractIcon", $) || {
    children: [],
    attributes: {}
  };
  return $.children = E, $.attributes = S, i ? Hre($) : Yre($);
}
function NA(e) {
  const {
    content: t,
    width: r,
    height: n,
    transform: o,
    title: a,
    extra: i,
    watchable: s = !1
  } = e, l = pe(pe(pe({}, i.attributes), a ? {
    title: a
  } : {}), {}, {
    class: i.classes.join(" ")
  });
  s && (l[nu] = "");
  const c = pe({}, i.styles);
  eS(o) && (c.transform = vre({
    transform: o,
    startCentered: !0,
    width: r,
    height: n
  }), c["-webkit-transform"] = c.transform);
  const u = R1(c);
  u.length > 0 && (l.style = u);
  const f = [];
  return f.push({
    tag: "span",
    attributes: l,
    children: [t]
  }), a && f.push({
    tag: "span",
    attributes: {
      class: "sr-only"
    },
    children: [a]
  }), f;
}
function Gre(e) {
  const {
    content: t,
    title: r,
    extra: n
  } = e, o = pe(pe(pe({}, n.attributes), r ? {
    title: r
  } : {}), {}, {
    class: n.classes.join(" ")
  }), a = R1(n.styles);
  a.length > 0 && (o.style = a);
  const i = [];
  return i.push({
    tag: "span",
    attributes: o,
    children: [t]
  }), r && i.push({
    tag: "span",
    attributes: {
      class: "sr-only"
    },
    children: [r]
  }), i;
}
const {
  styles: Xx
} = sa;
function G$(e) {
  const t = e[0], r = e[1], [n] = e.slice(4);
  let o = null;
  return Array.isArray(n) ? o = {
    tag: "g",
    attributes: {
      class: "".concat(De.cssPrefix, "-").concat(Gx.GROUP)
    },
    children: [{
      tag: "path",
      attributes: {
        class: "".concat(De.cssPrefix, "-").concat(Gx.SECONDARY),
        fill: "currentColor",
        d: n[0]
      }
    }, {
      tag: "path",
      attributes: {
        class: "".concat(De.cssPrefix, "-").concat(Gx.PRIMARY),
        fill: "currentColor",
        d: n[1]
      }
    }]
  } : o = {
    tag: "path",
    attributes: {
      fill: "currentColor",
      d: n
    }
  }, {
    found: !0,
    width: t,
    height: r,
    icon: o
  };
}
const qre = {
  found: !1,
  width: 512,
  height: 512
};
function Bre(e, t) {
  !oD && !De.showMissingIcons && e && console.error('Icon with name "'.concat(e, '" and prefix "').concat(t, '" is missing.'));
}
function q$(e, t) {
  let r = t;
  return t === "fa" && De.styleDefault !== null && (t = Wl()), new Promise((n, o) => {
    if (r === "fa") {
      const a = xD(e) || {};
      e = a.iconName || e, t = a.prefix || t;
    }
    if (e && t && Xx[t] && Xx[t][e]) {
      const a = Xx[t][e];
      return n(G$(a));
    }
    Bre(e, t), n(pe(pe({}, qre), {}, {
      icon: De.showMissingIcons && e ? Ul("missingIconAbstract") || {} : {}
    }));
  });
}
const jA = () => {
}, B$ = De.measurePerformance && Ib && Ib.mark && Ib.measure ? Ib : {
  mark: jA,
  measure: jA
}, Xm = 'FA "6.7.2"', Xre = (e) => (B$.mark("".concat(Xm, " ").concat(e, " begins")), () => $D(e)), $D = (e) => {
  B$.mark("".concat(Xm, " ").concat(e, " ends")), B$.measure("".concat(Xm, " ").concat(e), "".concat(Xm, " ").concat(e, " begins"), "".concat(Xm, " ").concat(e, " ends"));
};
var oS = {
  begin: Xre,
  end: $D
};
const Dy = () => {
};
function IA(e) {
  return typeof (e.getAttribute ? e.getAttribute(nu) : null) == "string";
}
function Kre(e) {
  const t = e.getAttribute ? e.getAttribute(KE) : null, r = e.getAttribute ? e.getAttribute(JE) : null;
  return t && r;
}
function Jre(e) {
  return e && e.classList && e.classList.contains && e.classList.contains(De.replacementClass);
}
function Qre() {
  return De.autoReplaceSvg === !0 ? Ly.replace : Ly[De.autoReplaceSvg] || Ly.replace;
}
function Zre(e) {
  return Rr.createElementNS("http://www.w3.org/2000/svg", e);
}
function ene(e) {
  return Rr.createElement(e);
}
function OD(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  const {
    ceFn: r = e.tag === "svg" ? Zre : ene
  } = t;
  if (typeof e == "string")
    return Rr.createTextNode(e);
  const n = r(e.tag);
  return Object.keys(e.attributes || []).forEach(function(o) {
    n.setAttribute(o, e.attributes[o]);
  }), (e.children || []).forEach(function(o) {
    n.appendChild(OD(o, {
      ceFn: r
    }));
  }), n;
}
function tne(e) {
  let t = " ".concat(e.outerHTML, " ");
  return t = "".concat(t, "Font Awesome fontawesome.com "), t;
}
const Ly = {
  replace: function(e) {
    const t = e[0];
    if (t.parentNode)
      if (e[1].forEach((r) => {
        t.parentNode.insertBefore(OD(r), t);
      }), t.getAttribute(nu) === null && De.keepOriginalSource) {
        let r = Rr.createComment(tne(t));
        t.parentNode.replaceChild(r, t);
      } else
        t.remove();
  },
  nest: function(e) {
    const t = e[0], r = e[1];
    if (~ZE(t).indexOf(De.replacementClass))
      return Ly.replace(e);
    const n = new RegExp("".concat(De.cssPrefix, "-.*"));
    if (delete r[0].attributes.id, r[0].attributes.class) {
      const a = r[0].attributes.class.split(" ").reduce((i, s) => (s === De.replacementClass || s.match(n) ? i.toSvg.push(s) : i.toNode.push(s), i), {
        toNode: [],
        toSvg: []
      });
      r[0].attributes.class = a.toSvg.join(" "), a.toNode.length === 0 ? t.removeAttribute("class") : t.setAttribute("class", a.toNode.join(" "));
    }
    const o = r.map((a) => qh(a)).join(`
`);
    t.setAttribute(nu, ""), t.innerHTML = o;
  }
};
function TA(e) {
  e();
}
function ED(e, t) {
  const r = typeof t == "function" ? t : Dy;
  if (e.length === 0)
    r();
  else {
    let n = TA;
    De.mutateApproach === ore && (n = Vl.requestAnimationFrame || TA), n(() => {
      const o = Qre(), a = oS.begin("mutate");
      e.map(o), a(), r();
    });
  }
}
let aS = !1;
function SD() {
  aS = !0;
}
function X$() {
  aS = !1;
}
let Av = null;
function MA(e) {
  if (!wA || !De.observeMutations)
    return;
  const {
    treeCallback: t = Dy,
    nodeCallback: r = Dy,
    pseudoElementsCallback: n = Dy,
    observeMutationsRoot: o = Rr
  } = e;
  Av = new wA((a) => {
    if (aS) return;
    const i = Wl();
    Ad(a).forEach((s) => {
      if (s.type === "childList" && s.addedNodes.length > 0 && !IA(s.addedNodes[0]) && (De.searchPseudoElements && n(s.target), t(s.target)), s.type === "attributes" && s.target.parentNode && De.searchPseudoElements && n(s.target.parentNode), s.type === "attributes" && IA(s.target) && ~ure.indexOf(s.attributeName))
        if (s.attributeName === "class" && Kre(s.target)) {
          const {
            prefix: l,
            iconName: c
          } = F1(ZE(s.target));
          s.target.setAttribute(KE, l || i), c && s.target.setAttribute(JE, c);
        } else Jre(s.target) && r(s.target);
    });
  }), zi && Av.observe(o, {
    childList: !0,
    attributes: !0,
    characterData: !0,
    subtree: !0
  });
}
function rne() {
  Av && Av.disconnect();
}
function nne(e) {
  const t = e.getAttribute("style");
  let r = [];
  return t && (r = t.split(";").reduce((n, o) => {
    const a = o.split(":"), i = a[0], s = a.slice(1);
    return i && s.length > 0 && (n[i] = s.join(":").trim()), n;
  }, {})), r;
}
function one(e) {
  const t = e.getAttribute("data-prefix"), r = e.getAttribute("data-icon"), n = e.innerText !== void 0 ? e.innerText.trim() : "";
  let o = F1(ZE(e));
  return o.prefix || (o.prefix = Wl()), t && r && (o.prefix = t, o.iconName = r), o.iconName && o.prefix || (o.prefix && n.length > 0 && (o.iconName = Are(o.prefix, e.innerText) || rS(o.prefix, dD(e.innerText))), !o.iconName && De.autoFetchSvg && e.firstChild && e.firstChild.nodeType === Node.TEXT_NODE && (o.iconName = e.firstChild.data)), o;
}
function ane(e) {
  const t = Ad(e.attributes).reduce((o, a) => (o.name !== "class" && o.name !== "style" && (o[a.name] = a.value), o), {}), r = e.getAttribute("title"), n = e.getAttribute("data-fa-title-id");
  return De.autoA11y && (r ? t["aria-labelledby"] = "".concat(De.replacementClass, "-title-").concat(n || Jg()) : (t["aria-hidden"] = "true", t.focusable = "false")), t;
}
function ine() {
  return {
    iconName: null,
    title: null,
    titleId: null,
    prefix: null,
    transform: ia,
    symbol: !1,
    mask: {
      iconName: null,
      prefix: null,
      rest: []
    },
    maskId: null,
    extra: {
      classes: [],
      styles: {},
      attributes: {}
    }
  };
}
function RA(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {
    styleParser: !0
  };
  const {
    iconName: r,
    prefix: n,
    rest: o
  } = one(e), a = ane(e), i = Y$("parseNodeAttributes", {}, e);
  let s = t.styleParser ? nne(e) : [];
  return pe({
    iconName: r,
    title: e.getAttribute("title"),
    titleId: e.getAttribute("data-fa-title-id"),
    prefix: n,
    transform: ia,
    mask: {
      iconName: null,
      prefix: null,
      rest: []
    },
    maskId: null,
    symbol: !1,
    extra: {
      classes: o,
      styles: s,
      attributes: a
    }
  }, i);
}
const {
  styles: sne
} = sa;
function PD(e) {
  const t = De.autoReplaceSvg === "nest" ? RA(e, {
    styleParser: !1
  }) : RA(e);
  return ~t.extra.classes.indexOf(iD) ? Ul("generateLayersText", e, t) : Ul("generateSvgReplacementMutation", e, t);
}
function lne() {
  return [...Wte, ...z$];
}
function zA(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
  if (!zi) return Promise.resolve();
  const r = Rr.documentElement.classList, n = (u) => r.add("".concat(OA, "-").concat(u)), o = (u) => r.remove("".concat(OA, "-").concat(u)), a = De.autoFetchSvg ? lne() : ZF.concat(Object.keys(sne));
  a.includes("fa") || a.push("fa");
  const i = [".".concat(iD, ":not([").concat(nu, "])")].concat(a.map((u) => ".".concat(u, ":not([").concat(nu, "])"))).join(", ");
  if (i.length === 0)
    return Promise.resolve();
  let s = [];
  try {
    s = Ad(e.querySelectorAll(i));
  } catch {
  }
  if (s.length > 0)
    n("pending"), o("complete");
  else
    return Promise.resolve();
  const l = oS.begin("onTree"), c = s.reduce((u, f) => {
    try {
      const p = PD(f);
      p && u.push(p);
    } catch (p) {
      oD || p.name === "MissingIcon" && console.error(p);
    }
    return u;
  }, []);
  return new Promise((u, f) => {
    Promise.all(c).then((p) => {
      ED(p, () => {
        n("active"), n("complete"), o("pending"), typeof t == "function" && t(), l(), u();
      });
    }).catch((p) => {
      l(), f(p);
    });
  });
}
function cne(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
  PD(e).then((r) => {
    r && ED([r], t);
  });
}
function une(e) {
  return function(t) {
    let r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    const n = (t || {}).icon ? t : H$(t || {});
    let {
      mask: o
    } = r;
    return o && (o = (o || {}).icon ? o : H$(o || {})), e(n, pe(pe({}, r), {}, {
      mask: o
    }));
  };
}
const fne = function(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  const {
    transform: r = ia,
    symbol: n = !1,
    mask: o = null,
    maskId: a = null,
    title: i = null,
    titleId: s = null,
    classes: l = [],
    attributes: c = {},
    styles: u = {}
  } = t;
  if (!e) return;
  const {
    prefix: f,
    iconName: p,
    icon: v
  } = e;
  return D1(pe({
    type: "icon"
  }, e), () => (ou("beforeDOMElementCreation", {
    iconDefinition: e,
    params: t
  }), De.autoA11y && (i ? c["aria-labelledby"] = "".concat(De.replacementClass, "-title-").concat(s || Jg()) : (c["aria-hidden"] = "true", c.focusable = "false")), nS({
    icons: {
      main: G$(v),
      mask: o ? G$(o.icon) : {
        found: !1,
        width: null,
        height: null,
        icon: {}
      }
    },
    prefix: f,
    iconName: p,
    transform: pe(pe({}, ia), r),
    symbol: n,
    title: i,
    maskId: a,
    titleId: s,
    extra: {
      attributes: c,
      styles: u,
      classes: l
    }
  })));
};
var dne = {
  mixout() {
    return {
      icon: une(fne)
    };
  },
  hooks() {
    return {
      mutationObserverCallbacks(e) {
        return e.treeCallback = zA, e.nodeCallback = cne, e;
      }
    };
  },
  provides(e) {
    e.i2svg = function(t) {
      const {
        node: r = Rr,
        callback: n = () => {
        }
      } = t;
      return zA(r, n);
    }, e.generateSvgReplacementMutation = function(t, r) {
      const {
        iconName: n,
        title: o,
        titleId: a,
        prefix: i,
        transform: s,
        symbol: l,
        mask: c,
        maskId: u,
        extra: f
      } = r;
      return new Promise((p, v) => {
        Promise.all([q$(n, i), c.iconName ? q$(c.iconName, c.prefix) : Promise.resolve({
          found: !1,
          width: 512,
          height: 512,
          icon: {}
        })]).then((x) => {
          let [b, m] = x;
          p([t, nS({
            icons: {
              main: b,
              mask: m
            },
            prefix: i,
            iconName: n,
            transform: s,
            symbol: l,
            maskId: u,
            title: o,
            titleId: a,
            extra: f,
            watchable: !0
          })]);
        }).catch(v);
      });
    }, e.generateAbstractIcon = function(t) {
      let {
        children: r,
        attributes: n,
        main: o,
        transform: a,
        styles: i
      } = t;
      const s = R1(i);
      s.length > 0 && (n.style = s);
      let l;
      return eS(a) && (l = Ul("generateAbstractTransformGrouping", {
        main: o,
        transform: a,
        containerWidth: o.width,
        iconWidth: o.width
      })), r.push(l || o.icon), {
        children: r,
        attributes: n
      };
    };
  }
}, pne = {
  mixout() {
    return {
      layer(e) {
        let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        const {
          classes: r = []
        } = t;
        return D1({
          type: "layer"
        }, () => {
          ou("beforeDOMElementCreation", {
            assembler: e,
            params: t
          });
          let n = [];
          return e((o) => {
            Array.isArray(o) ? o.map((a) => {
              n = n.concat(a.abstract);
            }) : n = n.concat(o.abstract);
          }), [{
            tag: "span",
            attributes: {
              class: ["".concat(De.cssPrefix, "-layers"), ...r].join(" ")
            },
            children: n
          }];
        });
      }
    };
  }
}, mne = {
  mixout() {
    return {
      counter(e) {
        let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        const {
          title: r = null,
          classes: n = [],
          attributes: o = {},
          styles: a = {}
        } = t;
        return D1({
          type: "counter",
          content: e
        }, () => (ou("beforeDOMElementCreation", {
          content: e,
          params: t
        }), Gre({
          content: e.toString(),
          title: r,
          extra: {
            attributes: o,
            styles: a,
            classes: ["".concat(De.cssPrefix, "-layers-counter"), ...n]
          }
        })));
      }
    };
  }
}, gne = {
  mixout() {
    return {
      text(e) {
        let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        const {
          transform: r = ia,
          title: n = null,
          classes: o = [],
          attributes: a = {},
          styles: i = {}
        } = t;
        return D1({
          type: "text",
          content: e
        }, () => (ou("beforeDOMElementCreation", {
          content: e,
          params: t
        }), NA({
          content: e,
          transform: pe(pe({}, ia), r),
          title: n,
          extra: {
            attributes: a,
            styles: i,
            classes: ["".concat(De.cssPrefix, "-layers-text"), ...o]
          }
        })));
      }
    };
  },
  provides(e) {
    e.generateLayersText = function(t, r) {
      const {
        title: n,
        transform: o,
        extra: a
      } = r;
      let i = null, s = null;
      if (JF) {
        const l = parseInt(getComputedStyle(t).fontSize, 10), c = t.getBoundingClientRect();
        i = c.width / l, s = c.height / l;
      }
      return De.autoA11y && !n && (a.attributes["aria-hidden"] = "true"), Promise.resolve([t, NA({
        content: t.innerHTML,
        width: i,
        height: s,
        transform: o,
        title: n,
        extra: a,
        watchable: !0
      })]);
    };
  }
};
const hne = new RegExp('"', "ug"), FA = [1105920, 1112319], DA = pe(pe(pe(pe({}, {
  FontAwesome: {
    normal: "fas",
    400: "fas"
  }
}), Dte), rre), Xte), K$ = Object.keys(DA).reduce((e, t) => (e[t.toLowerCase()] = DA[t], e), {}), bne = Object.keys(K$).reduce((e, t) => {
  const r = K$[t];
  return e[t] = r[900] || [...Object.entries(r)][0][1], e;
}, {});
function yne(e) {
  const t = e.replace(hne, ""), r = Ore(t, 0), n = r >= FA[0] && r <= FA[1], o = t.length === 2 ? t[0] === t[1] : !1;
  return {
    value: dD(o ? t[0] : t),
    isSecondary: n || o
  };
}
function vne(e, t) {
  const r = e.replace(/^['"]|['"]$/g, "").toLowerCase(), n = parseInt(t), o = isNaN(n) ? "normal" : n;
  return (K$[r] || {})[o] || bne[r];
}
function LA(e, t) {
  const r = "".concat(nre).concat(t.replace(":", "-"));
  return new Promise((n, o) => {
    if (e.getAttribute(r) !== null)
      return n();
    const a = Ad(e.children).filter((f) => f.getAttribute(D$) === t)[0], i = Vl.getComputedStyle(e, t), s = i.getPropertyValue("font-family"), l = s.match(lre), c = i.getPropertyValue("font-weight"), u = i.getPropertyValue("content");
    if (a && !l)
      return e.removeChild(a), n();
    if (l && u !== "none" && u !== "") {
      const f = i.getPropertyValue("content");
      let p = vne(s, c);
      const {
        value: v,
        isSecondary: x
      } = yne(f), b = l[0].startsWith("FontAwesome");
      let m = rS(p, v), w = m;
      if (b) {
        const $ = _re(v);
        $.iconName && $.prefix && (m = $.iconName, p = $.prefix);
      }
      if (m && !x && (!a || a.getAttribute(KE) !== p || a.getAttribute(JE) !== w)) {
        e.setAttribute(r, w), a && e.removeChild(a);
        const $ = ine(), {
          extra: E
        } = $;
        E.attributes[D$] = t, q$(m, p).then((S) => {
          const h = nS(pe(pe({}, $), {}, {
            icons: {
              main: S,
              mask: wD()
            },
            prefix: p,
            iconName: w,
            extra: E,
            watchable: !0
          })), U = Rr.createElementNS("http://www.w3.org/2000/svg", "svg");
          t === "::before" ? e.insertBefore(U, e.firstChild) : e.appendChild(U), U.outerHTML = h.map((G) => qh(G)).join(`
`), e.removeAttribute(r), n();
        }).catch(o);
      } else
        n();
    } else
      n();
  });
}
function xne(e) {
  return Promise.all([LA(e, "::before"), LA(e, "::after")]);
}
function wne(e) {
  return e.parentNode !== document.head && !~are.indexOf(e.tagName.toUpperCase()) && !e.getAttribute(D$) && (!e.parentNode || e.parentNode.tagName !== "svg");
}
function VA(e) {
  if (zi)
    return new Promise((t, r) => {
      const n = Ad(e.querySelectorAll("*")).filter(wne).map(xne), o = oS.begin("searchPseudoElements");
      SD(), Promise.all(n).then(() => {
        o(), X$(), t();
      }).catch(() => {
        o(), X$(), r();
      });
    });
}
var kne = {
  hooks() {
    return {
      mutationObserverCallbacks(e) {
        return e.pseudoElementsCallback = VA, e;
      }
    };
  },
  provides(e) {
    e.pseudoElements2svg = function(t) {
      const {
        node: r = Rr
      } = t;
      De.searchPseudoElements && VA(r);
    };
  }
};
let WA = !1;
var $ne = {
  mixout() {
    return {
      dom: {
        unwatch() {
          SD(), WA = !0;
        }
      }
    };
  },
  hooks() {
    return {
      bootstrap() {
        MA(Y$("mutationObserverCallbacks", {}));
      },
      noAuto() {
        rne();
      },
      watch(e) {
        const {
          observeMutationsRoot: t
        } = e;
        WA ? X$() : MA(Y$("mutationObserverCallbacks", {
          observeMutationsRoot: t
        }));
      }
    };
  }
};
const UA = (e) => {
  let t = {
    size: 16,
    x: 0,
    y: 0,
    flipX: !1,
    flipY: !1,
    rotate: 0
  };
  return e.toLowerCase().split(" ").reduce((r, n) => {
    const o = n.toLowerCase().split("-"), a = o[0];
    let i = o.slice(1).join("-");
    if (a && i === "h")
      return r.flipX = !0, r;
    if (a && i === "v")
      return r.flipY = !0, r;
    if (i = parseFloat(i), isNaN(i))
      return r;
    switch (a) {
      case "grow":
        r.size = r.size + i;
        break;
      case "shrink":
        r.size = r.size - i;
        break;
      case "left":
        r.x = r.x - i;
        break;
      case "right":
        r.x = r.x + i;
        break;
      case "up":
        r.y = r.y - i;
        break;
      case "down":
        r.y = r.y + i;
        break;
      case "rotate":
        r.rotate = r.rotate + i;
        break;
    }
    return r;
  }, t);
};
var One = {
  mixout() {
    return {
      parse: {
        transform: (e) => UA(e)
      }
    };
  },
  hooks() {
    return {
      parseNodeAttributes(e, t) {
        const r = t.getAttribute("data-fa-transform");
        return r && (e.transform = UA(r)), e;
      }
    };
  },
  provides(e) {
    e.generateAbstractTransformGrouping = function(t) {
      let {
        main: r,
        transform: n,
        containerWidth: o,
        iconWidth: a
      } = t;
      const i = {
        transform: "translate(".concat(o / 2, " 256)")
      }, s = "translate(".concat(n.x * 32, ", ").concat(n.y * 32, ") "), l = "scale(".concat(n.size / 16 * (n.flipX ? -1 : 1), ", ").concat(n.size / 16 * (n.flipY ? -1 : 1), ") "), c = "rotate(".concat(n.rotate, " 0 0)"), u = {
        transform: "".concat(s, " ").concat(l, " ").concat(c)
      }, f = {
        transform: "translate(".concat(a / 2 * -1, " -256)")
      }, p = {
        outer: i,
        inner: u,
        path: f
      };
      return {
        tag: "g",
        attributes: pe({}, p.outer),
        children: [{
          tag: "g",
          attributes: pe({}, p.inner),
          children: [{
            tag: r.icon.tag,
            children: r.icon.children,
            attributes: pe(pe({}, r.icon.attributes), p.path)
          }]
        }]
      };
    };
  }
};
const Kx = {
  x: 0,
  y: 0,
  width: "100%",
  height: "100%"
};
function YA(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0;
  return e.attributes && (e.attributes.fill || t) && (e.attributes.fill = "black"), e;
}
function Ene(e) {
  return e.tag === "g" ? e.children : [e];
}
var Sne = {
  hooks() {
    return {
      parseNodeAttributes(e, t) {
        const r = t.getAttribute("data-fa-mask"), n = r ? F1(r.split(" ").map((o) => o.trim())) : wD();
        return n.prefix || (n.prefix = Wl()), e.mask = n, e.maskId = t.getAttribute("data-fa-mask-id"), e;
      }
    };
  },
  provides(e) {
    e.generateAbstractMask = function(t) {
      let {
        children: r,
        attributes: n,
        main: o,
        mask: a,
        maskId: i,
        transform: s
      } = t;
      const {
        width: l,
        icon: c
      } = o, {
        width: u,
        icon: f
      } = a, p = yre({
        transform: s,
        containerWidth: u,
        iconWidth: l
      }), v = {
        tag: "rect",
        attributes: pe(pe({}, Kx), {}, {
          fill: "white"
        })
      }, x = c.children ? {
        children: c.children.map(YA)
      } : {}, b = {
        tag: "g",
        attributes: pe({}, p.inner),
        children: [YA(pe({
          tag: c.tag,
          attributes: pe(pe({}, c.attributes), p.path)
        }, x))]
      }, m = {
        tag: "g",
        attributes: pe({}, p.outer),
        children: [b]
      }, w = "mask-".concat(i || Jg()), $ = "clip-".concat(i || Jg()), E = {
        tag: "mask",
        attributes: pe(pe({}, Kx), {}, {
          id: w,
          maskUnits: "userSpaceOnUse",
          maskContentUnits: "userSpaceOnUse"
        }),
        children: [v, m]
      }, S = {
        tag: "defs",
        children: [{
          tag: "clipPath",
          attributes: {
            id: $
          },
          children: Ene(f)
        }, E]
      };
      return r.push(S, {
        tag: "rect",
        attributes: pe({
          fill: "currentColor",
          "clip-path": "url(#".concat($, ")"),
          mask: "url(#".concat(w, ")")
        }, Kx)
      }), {
        children: r,
        attributes: n
      };
    };
  }
}, Pne = {
  provides(e) {
    let t = !1;
    Vl.matchMedia && (t = Vl.matchMedia("(prefers-reduced-motion: reduce)").matches), e.missingIconAbstract = function() {
      const r = [], n = {
        fill: "currentColor"
      }, o = {
        attributeType: "XML",
        repeatCount: "indefinite",
        dur: "2s"
      };
      r.push({
        tag: "path",
        attributes: pe(pe({}, n), {}, {
          d: "M156.5,447.7l-12.6,29.5c-18.7-9.5-35.9-21.2-51.5-34.9l22.7-22.7C127.6,430.5,141.5,440,156.5,447.7z M40.6,272H8.5 c1.4,21.2,5.4,41.7,11.7,61.1L50,321.2C45.1,305.5,41.8,289,40.6,272z M40.6,240c1.4-18.8,5.2-37,11.1-54.1l-29.5-12.6 C14.7,194.3,10,216.7,8.5,240H40.6z M64.3,156.5c7.8-14.9,17.2-28.8,28.1-41.5L69.7,92.3c-13.7,15.6-25.5,32.8-34.9,51.5 L64.3,156.5z M397,419.6c-13.9,12-29.4,22.3-46.1,30.4l11.9,29.8c20.7-9.9,39.8-22.6,56.9-37.6L397,419.6z M115,92.4 c13.9-12,29.4-22.3,46.1-30.4l-11.9-29.8c-20.7,9.9-39.8,22.6-56.8,37.6L115,92.4z M447.7,355.5c-7.8,14.9-17.2,28.8-28.1,41.5 l22.7,22.7c13.7-15.6,25.5-32.9,34.9-51.5L447.7,355.5z M471.4,272c-1.4,18.8-5.2,37-11.1,54.1l29.5,12.6 c7.5-21.1,12.2-43.5,13.6-66.8H471.4z M321.2,462c-15.7,5-32.2,8.2-49.2,9.4v32.1c21.2-1.4,41.7-5.4,61.1-11.7L321.2,462z M240,471.4c-18.8-1.4-37-5.2-54.1-11.1l-12.6,29.5c21.1,7.5,43.5,12.2,66.8,13.6V471.4z M462,190.8c5,15.7,8.2,32.2,9.4,49.2h32.1 c-1.4-21.2-5.4-41.7-11.7-61.1L462,190.8z M92.4,397c-12-13.9-22.3-29.4-30.4-46.1l-29.8,11.9c9.9,20.7,22.6,39.8,37.6,56.9 L92.4,397z M272,40.6c18.8,1.4,36.9,5.2,54.1,11.1l12.6-29.5C317.7,14.7,295.3,10,272,8.5V40.6z M190.8,50 c15.7-5,32.2-8.2,49.2-9.4V8.5c-21.2,1.4-41.7,5.4-61.1,11.7L190.8,50z M442.3,92.3L419.6,115c12,13.9,22.3,29.4,30.5,46.1 l29.8-11.9C470,128.5,457.3,109.4,442.3,92.3z M397,92.4l22.7-22.7c-15.6-13.7-32.8-25.5-51.5-34.9l-12.6,29.5 C370.4,72.1,384.4,81.5,397,92.4z"
        })
      });
      const a = pe(pe({}, o), {}, {
        attributeName: "opacity"
      }), i = {
        tag: "circle",
        attributes: pe(pe({}, n), {}, {
          cx: "256",
          cy: "364",
          r: "28"
        }),
        children: []
      };
      return t || i.children.push({
        tag: "animate",
        attributes: pe(pe({}, o), {}, {
          attributeName: "r",
          values: "28;14;28;28;14;28;"
        })
      }, {
        tag: "animate",
        attributes: pe(pe({}, a), {}, {
          values: "1;0;1;1;0;1;"
        })
      }), r.push(i), r.push({
        tag: "path",
        attributes: pe(pe({}, n), {}, {
          opacity: "1",
          d: "M263.7,312h-16c-6.6,0-12-5.4-12-12c0-71,77.4-63.9,77.4-107.8c0-20-17.8-40.2-57.4-40.2c-29.1,0-44.3,9.6-59.2,28.7 c-3.9,5-11.1,6-16.2,2.4l-13.1-9.2c-5.6-3.9-6.9-11.8-2.6-17.2c21.2-27.2,46.4-44.7,91.2-44.7c52.3,0,97.4,29.8,97.4,80.2 c0,67.6-77.4,63.5-77.4,107.8C275.7,306.6,270.3,312,263.7,312z"
        }),
        children: t ? [] : [{
          tag: "animate",
          attributes: pe(pe({}, a), {}, {
            values: "1;0;0;0;0;1;"
          })
        }]
      }), t || r.push({
        tag: "path",
        attributes: pe(pe({}, n), {}, {
          opacity: "0",
          d: "M232.5,134.5l7,168c0.3,6.4,5.6,11.5,12,11.5h9c6.4,0,11.7-5.1,12-11.5l7-168c0.3-6.8-5.2-12.5-12-12.5h-23 C237.7,122,232.2,127.7,232.5,134.5z"
        }),
        children: [{
          tag: "animate",
          attributes: pe(pe({}, a), {}, {
            values: "0;0;1;1;0;0;"
          })
        }]
      }), {
        tag: "g",
        attributes: {
          class: "missing"
        },
        children: r
      };
    };
  }
}, Cne = {
  hooks() {
    return {
      parseNodeAttributes(e, t) {
        const r = t.getAttribute("data-fa-symbol"), n = r === null ? !1 : r === "" ? !0 : r;
        return e.symbol = n, e;
      }
    };
  }
}, Ane = [wre, dne, pne, mne, gne, kne, $ne, One, Sne, Pne, Cne];
Dre(Ane, {
  mixoutsTo: Xn
});
Xn.noAuto;
Xn.config;
Xn.library;
Xn.dom;
const J$ = Xn.parse;
Xn.findIconDefinition;
Xn.toHtml;
const _ne = Xn.icon;
Xn.layer;
Xn.text;
Xn.counter;
function Nne(e) {
  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e;
}
var Mb = { exports: {} }, Jx = { exports: {} }, Gt = {};
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var HA;
function jne() {
  if (HA) return Gt;
  HA = 1;
  var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, r = e ? Symbol.for("react.portal") : 60106, n = e ? Symbol.for("react.fragment") : 60107, o = e ? Symbol.for("react.strict_mode") : 60108, a = e ? Symbol.for("react.profiler") : 60114, i = e ? Symbol.for("react.provider") : 60109, s = e ? Symbol.for("react.context") : 60110, l = e ? Symbol.for("react.async_mode") : 60111, c = e ? Symbol.for("react.concurrent_mode") : 60111, u = e ? Symbol.for("react.forward_ref") : 60112, f = e ? Symbol.for("react.suspense") : 60113, p = e ? Symbol.for("react.suspense_list") : 60120, v = e ? Symbol.for("react.memo") : 60115, x = e ? Symbol.for("react.lazy") : 60116, b = e ? Symbol.for("react.block") : 60121, m = e ? Symbol.for("react.fundamental") : 60117, w = e ? Symbol.for("react.responder") : 60118, $ = e ? Symbol.for("react.scope") : 60119;
  function E(h) {
    if (typeof h == "object" && h !== null) {
      var U = h.$$typeof;
      switch (U) {
        case t:
          switch (h = h.type, h) {
            case l:
            case c:
            case n:
            case a:
            case o:
            case f:
              return h;
            default:
              switch (h = h && h.$$typeof, h) {
                case s:
                case u:
                case x:
                case v:
                case i:
                  return h;
                default:
                  return U;
              }
          }
        case r:
          return U;
      }
    }
  }
  function S(h) {
    return E(h) === c;
  }
  return Gt.AsyncMode = l, Gt.ConcurrentMode = c, Gt.ContextConsumer = s, Gt.ContextProvider = i, Gt.Element = t, Gt.ForwardRef = u, Gt.Fragment = n, Gt.Lazy = x, Gt.Memo = v, Gt.Portal = r, Gt.Profiler = a, Gt.StrictMode = o, Gt.Suspense = f, Gt.isAsyncMode = function(h) {
    return S(h) || E(h) === l;
  }, Gt.isConcurrentMode = S, Gt.isContextConsumer = function(h) {
    return E(h) === s;
  }, Gt.isContextProvider = function(h) {
    return E(h) === i;
  }, Gt.isElement = function(h) {
    return typeof h == "object" && h !== null && h.$$typeof === t;
  }, Gt.isForwardRef = function(h) {
    return E(h) === u;
  }, Gt.isFragment = function(h) {
    return E(h) === n;
  }, Gt.isLazy = function(h) {
    return E(h) === x;
  }, Gt.isMemo = function(h) {
    return E(h) === v;
  }, Gt.isPortal = function(h) {
    return E(h) === r;
  }, Gt.isProfiler = function(h) {
    return E(h) === a;
  }, Gt.isStrictMode = function(h) {
    return E(h) === o;
  }, Gt.isSuspense = function(h) {
    return E(h) === f;
  }, Gt.isValidElementType = function(h) {
    return typeof h == "string" || typeof h == "function" || h === n || h === c || h === a || h === o || h === f || h === p || typeof h == "object" && h !== null && (h.$$typeof === x || h.$$typeof === v || h.$$typeof === i || h.$$typeof === s || h.$$typeof === u || h.$$typeof === m || h.$$typeof === w || h.$$typeof === $ || h.$$typeof === b);
  }, Gt.typeOf = E, Gt;
}
var ir = {};
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var GA;
function Ine() {
  return GA || (GA = 1, process.env.NODE_ENV !== "production" && function() {
    var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, r = e ? Symbol.for("react.portal") : 60106, n = e ? Symbol.for("react.fragment") : 60107, o = e ? Symbol.for("react.strict_mode") : 60108, a = e ? Symbol.for("react.profiler") : 60114, i = e ? Symbol.for("react.provider") : 60109, s = e ? Symbol.for("react.context") : 60110, l = e ? Symbol.for("react.async_mode") : 60111, c = e ? Symbol.for("react.concurrent_mode") : 60111, u = e ? Symbol.for("react.forward_ref") : 60112, f = e ? Symbol.for("react.suspense") : 60113, p = e ? Symbol.for("react.suspense_list") : 60120, v = e ? Symbol.for("react.memo") : 60115, x = e ? Symbol.for("react.lazy") : 60116, b = e ? Symbol.for("react.block") : 60121, m = e ? Symbol.for("react.fundamental") : 60117, w = e ? Symbol.for("react.responder") : 60118, $ = e ? Symbol.for("react.scope") : 60119;
    function E(k) {
      return typeof k == "string" || typeof k == "function" || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
      k === n || k === c || k === a || k === o || k === f || k === p || typeof k == "object" && k !== null && (k.$$typeof === x || k.$$typeof === v || k.$$typeof === i || k.$$typeof === s || k.$$typeof === u || k.$$typeof === m || k.$$typeof === w || k.$$typeof === $ || k.$$typeof === b);
    }
    function S(k) {
      if (typeof k == "object" && k !== null) {
        var oe = k.$$typeof;
        switch (oe) {
          case t:
            var Ce = k.type;
            switch (Ce) {
              case l:
              case c:
              case n:
              case a:
              case o:
              case f:
                return Ce;
              default:
                var Ze = Ce && Ce.$$typeof;
                switch (Ze) {
                  case s:
                  case u:
                  case x:
                  case v:
                  case i:
                    return Ze;
                  default:
                    return oe;
                }
            }
          case r:
            return oe;
        }
      }
    }
    var h = l, U = c, G = s, Q = i, Z = t, X = u, J = n, I = x, te = v, V = r, D = a, F = o, R = f, H = !1;
    function B(k) {
      return H || (H = !0, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.")), g(k) || S(k) === l;
    }
    function g(k) {
      return S(k) === c;
    }
    function d(k) {
      return S(k) === s;
    }
    function O(k) {
      return S(k) === i;
    }
    function C(k) {
      return typeof k == "object" && k !== null && k.$$typeof === t;
    }
    function A(k) {
      return S(k) === u;
    }
    function N(k) {
      return S(k) === n;
    }
    function j(k) {
      return S(k) === x;
    }
    function _(k) {
      return S(k) === v;
    }
    function T(k) {
      return S(k) === r;
    }
    function M(k) {
      return S(k) === a;
    }
    function z(k) {
      return S(k) === o;
    }
    function ee(k) {
      return S(k) === f;
    }
    ir.AsyncMode = h, ir.ConcurrentMode = U, ir.ContextConsumer = G, ir.ContextProvider = Q, ir.Element = Z, ir.ForwardRef = X, ir.Fragment = J, ir.Lazy = I, ir.Memo = te, ir.Portal = V, ir.Profiler = D, ir.StrictMode = F, ir.Suspense = R, ir.isAsyncMode = B, ir.isConcurrentMode = g, ir.isContextConsumer = d, ir.isContextProvider = O, ir.isElement = C, ir.isForwardRef = A, ir.isFragment = N, ir.isLazy = j, ir.isMemo = _, ir.isPortal = T, ir.isProfiler = M, ir.isStrictMode = z, ir.isSuspense = ee, ir.isValidElementType = E, ir.typeOf = S;
  }()), ir;
}
var qA;
function CD() {
  return qA || (qA = 1, process.env.NODE_ENV === "production" ? Jx.exports = jne() : Jx.exports = Ine()), Jx.exports;
}
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
var Qx, BA;
function Tne() {
  if (BA) return Qx;
  BA = 1;
  var e = Object.getOwnPropertySymbols, t = Object.prototype.hasOwnProperty, r = Object.prototype.propertyIsEnumerable;
  function n(a) {
    if (a == null)
      throw new TypeError("Object.assign cannot be called with null or undefined");
    return Object(a);
  }
  function o() {
    try {
      if (!Object.assign)
        return !1;
      var a = new String("abc");
      if (a[5] = "de", Object.getOwnPropertyNames(a)[0] === "5")
        return !1;
      for (var i = {}, s = 0; s < 10; s++)
        i["_" + String.fromCharCode(s)] = s;
      var l = Object.getOwnPropertyNames(i).map(function(u) {
        return i[u];
      });
      if (l.join("") !== "0123456789")
        return !1;
      var c = {};
      return "abcdefghijklmnopqrst".split("").forEach(function(u) {
        c[u] = u;
      }), Object.keys(Object.assign({}, c)).join("") === "abcdefghijklmnopqrst";
    } catch {
      return !1;
    }
  }
  return Qx = o() ? Object.assign : function(a, i) {
    for (var s, l = n(a), c, u = 1; u < arguments.length; u++) {
      s = Object(arguments[u]);
      for (var f in s)
        t.call(s, f) && (l[f] = s[f]);
      if (e) {
        c = e(s);
        for (var p = 0; p < c.length; p++)
          r.call(s, c[p]) && (l[c[p]] = s[c[p]]);
      }
    }
    return l;
  }, Qx;
}
var Zx, XA;
function iS() {
  if (XA) return Zx;
  XA = 1;
  var e = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
  return Zx = e, Zx;
}
var KA, JA;
function AD() {
  return JA || (JA = 1, KA = Function.call.bind(Object.prototype.hasOwnProperty)), KA;
}
var ew, QA;
function Mne() {
  if (QA) return ew;
  QA = 1;
  var e = function() {
  };
  if (process.env.NODE_ENV !== "production") {
    var t = /* @__PURE__ */ iS(), r = {}, n = /* @__PURE__ */ AD();
    e = function(a) {
      var i = "Warning: " + a;
      typeof console < "u" && console.error(i);
      try {
        throw new Error(i);
      } catch {
      }
    };
  }
  function o(a, i, s, l, c) {
    if (process.env.NODE_ENV !== "production") {
      for (var u in a)
        if (n(a, u)) {
          var f;
          try {
            if (typeof a[u] != "function") {
              var p = Error(
                (l || "React class") + ": " + s + " type `" + u + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof a[u] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`."
              );
              throw p.name = "Invariant Violation", p;
            }
            f = a[u](i, u, l, s, null, t);
          } catch (x) {
            f = x;
          }
          if (f && !(f instanceof Error) && e(
            (l || "React class") + ": type specification of " + s + " `" + u + "` is invalid; the type checker function must return `null` or an `Error` but returned a " + typeof f + ". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument)."
          ), f instanceof Error && !(f.message in r)) {
            r[f.message] = !0;
            var v = c ? c() : "";
            e(
              "Failed " + s + " type: " + f.message + (v ?? "")
            );
          }
        }
    }
  }
  return o.resetWarningCache = function() {
    process.env.NODE_ENV !== "production" && (r = {});
  }, ew = o, ew;
}
var tw, ZA;
function Rne() {
  if (ZA) return tw;
  ZA = 1;
  var e = CD(), t = Tne(), r = /* @__PURE__ */ iS(), n = /* @__PURE__ */ AD(), o = /* @__PURE__ */ Mne(), a = function() {
  };
  process.env.NODE_ENV !== "production" && (a = function(s) {
    var l = "Warning: " + s;
    typeof console < "u" && console.error(l);
    try {
      throw new Error(l);
    } catch {
    }
  });
  function i() {
    return null;
  }
  return tw = function(s, l) {
    var c = typeof Symbol == "function" && Symbol.iterator, u = "@@iterator";
    function f(g) {
      var d = g && (c && g[c] || g[u]);
      if (typeof d == "function")
        return d;
    }
    var p = "<<anonymous>>", v = {
      array: w("array"),
      bigint: w("bigint"),
      bool: w("boolean"),
      func: w("function"),
      number: w("number"),
      object: w("object"),
      string: w("string"),
      symbol: w("symbol"),
      any: $(),
      arrayOf: E,
      element: S(),
      elementType: h(),
      instanceOf: U,
      node: X(),
      objectOf: Q,
      oneOf: G,
      oneOfType: Z,
      shape: I,
      exact: te
    };
    function x(g, d) {
      return g === d ? g !== 0 || 1 / g === 1 / d : g !== g && d !== d;
    }
    function b(g, d) {
      this.message = g, this.data = d && typeof d == "object" ? d : {}, this.stack = "";
    }
    b.prototype = Error.prototype;
    function m(g) {
      if (process.env.NODE_ENV !== "production")
        var d = {}, O = 0;
      function C(N, j, _, T, M, z, ee) {
        if (T = T || p, z = z || _, ee !== r) {
          if (l) {
            var k = new Error(
              "Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types"
            );
            throw k.name = "Invariant Violation", k;
          } else if (process.env.NODE_ENV !== "production" && typeof console < "u") {
            var oe = T + ":" + _;
            !d[oe] && // Avoid spamming the console because they are often not actionable except for lib authors
            O < 3 && (a(
              "You are manually calling a React.PropTypes validation function for the `" + z + "` prop on `" + T + "`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details."
            ), d[oe] = !0, O++);
          }
        }
        return j[_] == null ? N ? j[_] === null ? new b("The " + M + " `" + z + "` is marked as required " + ("in `" + T + "`, but its value is `null`.")) : new b("The " + M + " `" + z + "` is marked as required in " + ("`" + T + "`, but its value is `undefined`.")) : null : g(j, _, T, M, z);
      }
      var A = C.bind(null, !1);
      return A.isRequired = C.bind(null, !0), A;
    }
    function w(g) {
      function d(O, C, A, N, j, _) {
        var T = O[C], M = F(T);
        if (M !== g) {
          var z = R(T);
          return new b(
            "Invalid " + N + " `" + j + "` of type " + ("`" + z + "` supplied to `" + A + "`, expected ") + ("`" + g + "`."),
            { expectedType: g }
          );
        }
        return null;
      }
      return m(d);
    }
    function $() {
      return m(i);
    }
    function E(g) {
      function d(O, C, A, N, j) {
        if (typeof g != "function")
          return new b("Property `" + j + "` of component `" + A + "` has invalid PropType notation inside arrayOf.");
        var _ = O[C];
        if (!Array.isArray(_)) {
          var T = F(_);
          return new b("Invalid " + N + " `" + j + "` of type " + ("`" + T + "` supplied to `" + A + "`, expected an array."));
        }
        for (var M = 0; M < _.length; M++) {
          var z = g(_, M, A, N, j + "[" + M + "]", r);
          if (z instanceof Error)
            return z;
        }
        return null;
      }
      return m(d);
    }
    function S() {
      function g(d, O, C, A, N) {
        var j = d[O];
        if (!s(j)) {
          var _ = F(j);
          return new b("Invalid " + A + " `" + N + "` of type " + ("`" + _ + "` supplied to `" + C + "`, expected a single ReactElement."));
        }
        return null;
      }
      return m(g);
    }
    function h() {
      function g(d, O, C, A, N) {
        var j = d[O];
        if (!e.isValidElementType(j)) {
          var _ = F(j);
          return new b("Invalid " + A + " `" + N + "` of type " + ("`" + _ + "` supplied to `" + C + "`, expected a single ReactElement type."));
        }
        return null;
      }
      return m(g);
    }
    function U(g) {
      function d(O, C, A, N, j) {
        if (!(O[C] instanceof g)) {
          var _ = g.name || p, T = B(O[C]);
          return new b("Invalid " + N + " `" + j + "` of type " + ("`" + T + "` supplied to `" + A + "`, expected ") + ("instance of `" + _ + "`."));
        }
        return null;
      }
      return m(d);
    }
    function G(g) {
      if (!Array.isArray(g))
        return process.env.NODE_ENV !== "production" && (arguments.length > 1 ? a(
          "Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z])."
        ) : a("Invalid argument supplied to oneOf, expected an array.")), i;
      function d(O, C, A, N, j) {
        for (var _ = O[C], T = 0; T < g.length; T++)
          if (x(_, g[T]))
            return null;
        var M = JSON.stringify(g, function(z, ee) {
          var k = R(ee);
          return k === "symbol" ? String(ee) : ee;
        });
        return new b("Invalid " + N + " `" + j + "` of value `" + String(_) + "` " + ("supplied to `" + A + "`, expected one of " + M + "."));
      }
      return m(d);
    }
    function Q(g) {
      function d(O, C, A, N, j) {
        if (typeof g != "function")
          return new b("Property `" + j + "` of component `" + A + "` has invalid PropType notation inside objectOf.");
        var _ = O[C], T = F(_);
        if (T !== "object")
          return new b("Invalid " + N + " `" + j + "` of type " + ("`" + T + "` supplied to `" + A + "`, expected an object."));
        for (var M in _)
          if (n(_, M)) {
            var z = g(_, M, A, N, j + "." + M, r);
            if (z instanceof Error)
              return z;
          }
        return null;
      }
      return m(d);
    }
    function Z(g) {
      if (!Array.isArray(g))
        return process.env.NODE_ENV !== "production" && a("Invalid argument supplied to oneOfType, expected an instance of array."), i;
      for (var d = 0; d < g.length; d++) {
        var O = g[d];
        if (typeof O != "function")
          return a(
            "Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + H(O) + " at index " + d + "."
          ), i;
      }
      function C(A, N, j, _, T) {
        for (var M = [], z = 0; z < g.length; z++) {
          var ee = g[z], k = ee(A, N, j, _, T, r);
          if (k == null)
            return null;
          k.data && n(k.data, "expectedType") && M.push(k.data.expectedType);
        }
        var oe = M.length > 0 ? ", expected one of type [" + M.join(", ") + "]" : "";
        return new b("Invalid " + _ + " `" + T + "` supplied to " + ("`" + j + "`" + oe + "."));
      }
      return m(C);
    }
    function X() {
      function g(d, O, C, A, N) {
        return V(d[O]) ? null : new b("Invalid " + A + " `" + N + "` supplied to " + ("`" + C + "`, expected a ReactNode."));
      }
      return m(g);
    }
    function J(g, d, O, C, A) {
      return new b(
        (g || "React class") + ": " + d + " type `" + O + "." + C + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + A + "`."
      );
    }
    function I(g) {
      function d(O, C, A, N, j) {
        var _ = O[C], T = F(_);
        if (T !== "object")
          return new b("Invalid " + N + " `" + j + "` of type `" + T + "` " + ("supplied to `" + A + "`, expected `object`."));
        for (var M in g) {
          var z = g[M];
          if (typeof z != "function")
            return J(A, N, j, M, R(z));
          var ee = z(_, M, A, N, j + "." + M, r);
          if (ee)
            return ee;
        }
        return null;
      }
      return m(d);
    }
    function te(g) {
      function d(O, C, A, N, j) {
        var _ = O[C], T = F(_);
        if (T !== "object")
          return new b("Invalid " + N + " `" + j + "` of type `" + T + "` " + ("supplied to `" + A + "`, expected `object`."));
        var M = t({}, O[C], g);
        for (var z in M) {
          var ee = g[z];
          if (n(g, z) && typeof ee != "function")
            return J(A, N, j, z, R(ee));
          if (!ee)
            return new b(
              "Invalid " + N + " `" + j + "` key `" + z + "` supplied to `" + A + "`.\nBad object: " + JSON.stringify(O[C], null, "  ") + `
Valid keys: ` + JSON.stringify(Object.keys(g), null, "  ")
            );
          var k = ee(_, z, A, N, j + "." + z, r);
          if (k)
            return k;
        }
        return null;
      }
      return m(d);
    }
    function V(g) {
      switch (typeof g) {
        case "number":
        case "string":
        case "undefined":
          return !0;
        case "boolean":
          return !g;
        case "object":
          if (Array.isArray(g))
            return g.every(V);
          if (g === null || s(g))
            return !0;
          var d = f(g);
          if (d) {
            var O = d.call(g), C;
            if (d !== g.entries) {
              for (; !(C = O.next()).done; )
                if (!V(C.value))
                  return !1;
            } else
              for (; !(C = O.next()).done; ) {
                var A = C.value;
                if (A && !V(A[1]))
                  return !1;
              }
          } else
            return !1;
          return !0;
        default:
          return !1;
      }
    }
    function D(g, d) {
      return g === "symbol" ? !0 : d ? d["@@toStringTag"] === "Symbol" || typeof Symbol == "function" && d instanceof Symbol : !1;
    }
    function F(g) {
      var d = typeof g;
      return Array.isArray(g) ? "array" : g instanceof RegExp ? "object" : D(d, g) ? "symbol" : d;
    }
    function R(g) {
      if (typeof g > "u" || g === null)
        return "" + g;
      var d = F(g);
      if (d === "object") {
        if (g instanceof Date)
          return "date";
        if (g instanceof RegExp)
          return "regexp";
      }
      return d;
    }
    function H(g) {
      var d = R(g);
      switch (d) {
        case "array":
        case "object":
          return "an " + d;
        case "boolean":
        case "date":
        case "regexp":
          return "a " + d;
        default:
          return d;
      }
    }
    function B(g) {
      return !g.constructor || !g.constructor.name ? p : g.constructor.name;
    }
    return v.checkPropTypes = o, v.resetWarningCache = o.resetWarningCache, v.PropTypes = v, v;
  }, tw;
}
var rw, e_;
function zne() {
  if (e_) return rw;
  e_ = 1;
  var e = /* @__PURE__ */ iS();
  function t() {
  }
  function r() {
  }
  return r.resetWarningCache = t, rw = function() {
    function n(i, s, l, c, u, f) {
      if (f !== e) {
        var p = new Error(
          "Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types"
        );
        throw p.name = "Invariant Violation", p;
      }
    }
    n.isRequired = n;
    function o() {
      return n;
    }
    var a = {
      array: n,
      bigint: n,
      bool: n,
      func: n,
      number: n,
      object: n,
      string: n,
      symbol: n,
      any: n,
      arrayOf: o,
      element: n,
      elementType: n,
      instanceOf: o,
      node: n,
      objectOf: o,
      oneOf: o,
      oneOfType: o,
      shape: o,
      exact: o,
      checkPropTypes: r,
      resetWarningCache: t
    };
    return a.PropTypes = a, a;
  }, rw;
}
var t_;
function Fne() {
  if (t_) return Mb.exports;
  if (t_ = 1, process.env.NODE_ENV !== "production") {
    var e = CD(), t = !0;
    Mb.exports = /* @__PURE__ */ Rne()(e.isElement, t);
  } else
    Mb.exports = /* @__PURE__ */ zne()();
  return Mb.exports;
}
var Dne = /* @__PURE__ */ Fne();
const At = /* @__PURE__ */ Nne(Dne);
function r_(e, t) {
  var r = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var n = Object.getOwnPropertySymbols(e);
    t && (n = n.filter(function(o) {
      return Object.getOwnPropertyDescriptor(e, o).enumerable;
    })), r.push.apply(r, n);
  }
  return r;
}
function Go(e) {
  for (var t = 1; t < arguments.length; t++) {
    var r = arguments[t] != null ? arguments[t] : {};
    t % 2 ? r_(Object(r), !0).forEach(function(n) {
      Zu(e, n, r[n]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : r_(Object(r)).forEach(function(n) {
      Object.defineProperty(e, n, Object.getOwnPropertyDescriptor(r, n));
    });
  }
  return e;
}
function _v(e) {
  "@babel/helpers - typeof";
  return _v = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t) {
    return typeof t;
  } : function(t) {
    return t && typeof Symbol == "function" && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
  }, _v(e);
}
function Zu(e, t, r) {
  return t in e ? Object.defineProperty(e, t, {
    value: r,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : e[t] = r, e;
}
function Lne(e, t) {
  if (e == null) return {};
  var r = {}, n = Object.keys(e), o, a;
  for (a = 0; a < n.length; a++)
    o = n[a], !(t.indexOf(o) >= 0) && (r[o] = e[o]);
  return r;
}
function Vne(e, t) {
  if (e == null) return {};
  var r = Lne(e, t), n, o;
  if (Object.getOwnPropertySymbols) {
    var a = Object.getOwnPropertySymbols(e);
    for (o = 0; o < a.length; o++)
      n = a[o], !(t.indexOf(n) >= 0) && Object.prototype.propertyIsEnumerable.call(e, n) && (r[n] = e[n]);
  }
  return r;
}
function Q$(e) {
  return Wne(e) || Une(e) || Yne(e) || Hne();
}
function Wne(e) {
  if (Array.isArray(e)) return Z$(e);
}
function Une(e) {
  if (typeof Symbol < "u" && e[Symbol.iterator] != null || e["@@iterator"] != null) return Array.from(e);
}
function Yne(e, t) {
  if (e) {
    if (typeof e == "string") return Z$(e, t);
    var r = Object.prototype.toString.call(e).slice(8, -1);
    if (r === "Object" && e.constructor && (r = e.constructor.name), r === "Map" || r === "Set") return Array.from(e);
    if (r === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return Z$(e, t);
  }
}
function Z$(e, t) {
  (t == null || t > e.length) && (t = e.length);
  for (var r = 0, n = new Array(t); r < t; r++) n[r] = e[r];
  return n;
}
function Hne() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function Gne(e) {
  var t, r = e.beat, n = e.fade, o = e.beatFade, a = e.bounce, i = e.shake, s = e.flash, l = e.spin, c = e.spinPulse, u = e.spinReverse, f = e.pulse, p = e.fixedWidth, v = e.inverse, x = e.border, b = e.listItem, m = e.flip, w = e.size, $ = e.rotation, E = e.pull, S = (t = {
    "fa-beat": r,
    "fa-fade": n,
    "fa-beat-fade": o,
    "fa-bounce": a,
    "fa-shake": i,
    "fa-flash": s,
    "fa-spin": l,
    "fa-spin-reverse": u,
    "fa-spin-pulse": c,
    "fa-pulse": f,
    "fa-fw": p,
    "fa-inverse": v,
    "fa-border": x,
    "fa-li": b,
    "fa-flip": m === !0,
    "fa-flip-horizontal": m === "horizontal" || m === "both",
    "fa-flip-vertical": m === "vertical" || m === "both"
  }, Zu(t, "fa-".concat(w), typeof w < "u" && w !== null), Zu(t, "fa-rotate-".concat($), typeof $ < "u" && $ !== null && $ !== 0), Zu(t, "fa-pull-".concat(E), typeof E < "u" && E !== null), Zu(t, "fa-swap-opacity", e.swapOpacity), t);
  return Object.keys(S).map(function(h) {
    return S[h] ? h : null;
  }).filter(function(h) {
    return h;
  });
}
function qne(e) {
  return e = e - 0, e === e;
}
function _D(e) {
  return qne(e) ? e : (e = e.replace(/[\-_\s]+(.)?/g, function(t, r) {
    return r ? r.toUpperCase() : "";
  }), e.substr(0, 1).toLowerCase() + e.substr(1));
}
var Bne = ["style"];
function Xne(e) {
  return e.charAt(0).toUpperCase() + e.slice(1);
}
function Kne(e) {
  return e.split(";").map(function(t) {
    return t.trim();
  }).filter(function(t) {
    return t;
  }).reduce(function(t, r) {
    var n = r.indexOf(":"), o = _D(r.slice(0, n)), a = r.slice(n + 1).trim();
    return o.startsWith("webkit") ? t[Xne(o)] = a : t[o] = a, t;
  }, {});
}
function ND(e, t) {
  var r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
  if (typeof t == "string")
    return t;
  var n = (t.children || []).map(function(l) {
    return ND(e, l);
  }), o = Object.keys(t.attributes || {}).reduce(function(l, c) {
    var u = t.attributes[c];
    switch (c) {
      case "class":
        l.attrs.className = u, delete t.attributes.class;
        break;
      case "style":
        l.attrs.style = Kne(u);
        break;
      default:
        c.indexOf("aria-") === 0 || c.indexOf("data-") === 0 ? l.attrs[c.toLowerCase()] = u : l.attrs[_D(c)] = u;
    }
    return l;
  }, {
    attrs: {}
  }), a = r.style, i = a === void 0 ? {} : a, s = Vne(r, Bne);
  return o.attrs.style = Go(Go({}, o.attrs.style), i), e.apply(void 0, [t.tag, Go(Go({}, o.attrs), s)].concat(Q$(n)));
}
var jD = !1;
try {
  jD = process.env.NODE_ENV === "production";
} catch {
}
function Jne() {
  if (!jD && console && typeof console.error == "function") {
    var e;
    (e = console).error.apply(e, arguments);
  }
}
function n_(e) {
  if (e && _v(e) === "object" && e.prefix && e.iconName && e.icon)
    return e;
  if (J$.icon)
    return J$.icon(e);
  if (e === null)
    return null;
  if (e && _v(e) === "object" && e.prefix && e.iconName)
    return e;
  if (Array.isArray(e) && e.length === 2)
    return {
      prefix: e[0],
      iconName: e[1]
    };
  if (typeof e == "string")
    return {
      prefix: "fas",
      iconName: e
    };
}
function nw(e, t) {
  return Array.isArray(t) && t.length > 0 || !Array.isArray(t) && t ? Zu({}, e, t) : {};
}
var o_ = {
  border: !1,
  className: "",
  mask: null,
  maskId: null,
  fixedWidth: !1,
  inverse: !1,
  flip: !1,
  icon: null,
  listItem: !1,
  pull: null,
  pulse: !1,
  rotation: null,
  size: null,
  spin: !1,
  spinPulse: !1,
  spinReverse: !1,
  beat: !1,
  fade: !1,
  beatFade: !1,
  bounce: !1,
  shake: !1,
  symbol: !1,
  title: "",
  titleId: null,
  transform: null,
  swapOpacity: !1
}, Zg = /* @__PURE__ */ ce.forwardRef(function(e, t) {
  var r = Go(Go({}, o_), e), n = r.icon, o = r.mask, a = r.symbol, i = r.className, s = r.title, l = r.titleId, c = r.maskId, u = n_(n), f = nw("classes", [].concat(Q$(Gne(r)), Q$((i || "").split(" ")))), p = nw("transform", typeof r.transform == "string" ? J$.transform(r.transform) : r.transform), v = nw("mask", n_(o)), x = _ne(u, Go(Go(Go(Go({}, f), p), v), {}, {
    symbol: a,
    title: s,
    titleId: l,
    maskId: c
  }));
  if (!x)
    return Jne("Could not find icon", u), null;
  var b = x.abstract, m = {
    ref: t
  };
  return Object.keys(r).forEach(function(w) {
    o_.hasOwnProperty(w) || (m[w] = r[w]);
  }), Qne(b[0], m);
});
Zg.displayName = "FontAwesomeIcon";
Zg.propTypes = {
  beat: At.bool,
  border: At.bool,
  beatFade: At.bool,
  bounce: At.bool,
  className: At.string,
  fade: At.bool,
  flash: At.bool,
  mask: At.oneOfType([At.object, At.array, At.string]),
  maskId: At.string,
  fixedWidth: At.bool,
  inverse: At.bool,
  flip: At.oneOf([!0, !1, "horizontal", "vertical", "both"]),
  icon: At.oneOfType([At.object, At.array, At.string]),
  listItem: At.bool,
  pull: At.oneOf(["right", "left"]),
  pulse: At.bool,
  rotation: At.oneOf([0, 90, 180, 270]),
  shake: At.bool,
  size: At.oneOf(["2xs", "xs", "sm", "lg", "xl", "2xl", "1x", "2x", "3x", "4x", "5x", "6x", "7x", "8x", "9x", "10x"]),
  spin: At.bool,
  spinPulse: At.bool,
  spinReverse: At.bool,
  symbol: At.oneOfType([At.bool, At.string]),
  title: At.string,
  titleId: At.string,
  transform: At.oneOfType([At.string, At.object]),
  swapOpacity: At.bool
};
var Qne = ND.bind(null, ce.createElement);
/*!
 * Font Awesome Pro 6.7.2 by @fontawesome - https://fontawesome.com
 * License - https://fontawesome.com/license (Commercial License)
 * Copyright 2024 Fonticons, Inc.
 */
const Zne = {
  prefix: "fas",
  iconName: "xmark",
  icon: [384, 512, [128473, 10005, 10006, 10060, 215, "close", "multiply", "remove", "times"], "f00d", "M342.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L192 210.7 86.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L146.7 256 41.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L192 301.3 297.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L237.3 256 342.6 150.6z"]
};
/*!
 * Font Awesome Free 6.7.2 by @fontawesome - https://fontawesome.com
 * License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License)
 * Copyright 2024 Fonticons, Inc.
 */
function eoe(e, t, r) {
  return (t = roe(t)) in e ? Object.defineProperty(e, t, {
    value: r,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : e[t] = r, e;
}
function a_(e, t) {
  var r = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var n = Object.getOwnPropertySymbols(e);
    t && (n = n.filter(function(o) {
      return Object.getOwnPropertyDescriptor(e, o).enumerable;
    })), r.push.apply(r, n);
  }
  return r;
}
function me(e) {
  for (var t = 1; t < arguments.length; t++) {
    var r = arguments[t] != null ? arguments[t] : {};
    t % 2 ? a_(Object(r), !0).forEach(function(n) {
      eoe(e, n, r[n]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : a_(Object(r)).forEach(function(n) {
      Object.defineProperty(e, n, Object.getOwnPropertyDescriptor(r, n));
    });
  }
  return e;
}
function toe(e, t) {
  if (typeof e != "object" || !e) return e;
  var r = e[Symbol.toPrimitive];
  if (r !== void 0) {
    var n = r.call(e, t);
    if (typeof n != "object") return n;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (t === "string" ? String : Number)(e);
}
function roe(e) {
  var t = toe(e, "string");
  return typeof t == "symbol" ? t : t + "";
}
const i_ = () => {
};
let sS = {}, ID = {}, TD = null, MD = {
  mark: i_,
  measure: i_
};
try {
  typeof window < "u" && (sS = window), typeof document < "u" && (ID = document), typeof MutationObserver < "u" && (TD = MutationObserver), typeof performance < "u" && (MD = performance);
} catch {
}
const {
  userAgent: s_ = ""
} = sS.navigator || {}, Yl = sS, zr = ID, l_ = TD, Rb = MD;
Yl.document;
const Fi = !!zr.documentElement && !!zr.head && typeof zr.addEventListener == "function" && typeof zr.createElement == "function", RD = ~s_.indexOf("MSIE") || ~s_.indexOf("Trident/");
var noe = /fa(s|r|l|t|d|dr|dl|dt|b|k|kd|ss|sr|sl|st|sds|sdr|sdl|sdt)?[\-\ ]/, ooe = /Font ?Awesome ?([56 ]*)(Solid|Regular|Light|Thin|Duotone|Brands|Free|Pro|Sharp Duotone|Sharp|Kit)?.*/i, zD = {
  classic: {
    fa: "solid",
    fas: "solid",
    "fa-solid": "solid",
    far: "regular",
    "fa-regular": "regular",
    fal: "light",
    "fa-light": "light",
    fat: "thin",
    "fa-thin": "thin",
    fab: "brands",
    "fa-brands": "brands"
  },
  duotone: {
    fa: "solid",
    fad: "solid",
    "fa-solid": "solid",
    "fa-duotone": "solid",
    fadr: "regular",
    "fa-regular": "regular",
    fadl: "light",
    "fa-light": "light",
    fadt: "thin",
    "fa-thin": "thin"
  },
  sharp: {
    fa: "solid",
    fass: "solid",
    "fa-solid": "solid",
    fasr: "regular",
    "fa-regular": "regular",
    fasl: "light",
    "fa-light": "light",
    fast: "thin",
    "fa-thin": "thin"
  },
  "sharp-duotone": {
    fa: "solid",
    fasds: "solid",
    "fa-solid": "solid",
    fasdr: "regular",
    "fa-regular": "regular",
    fasdl: "light",
    "fa-light": "light",
    fasdt: "thin",
    "fa-thin": "thin"
  }
}, aoe = {
  GROUP: "duotone-group",
  PRIMARY: "primary",
  SECONDARY: "secondary"
}, FD = ["fa-classic", "fa-duotone", "fa-sharp", "fa-sharp-duotone"], dn = "classic", L1 = "duotone", ioe = "sharp", soe = "sharp-duotone", DD = [dn, L1, ioe, soe], loe = {
  classic: {
    900: "fas",
    400: "far",
    normal: "far",
    300: "fal",
    100: "fat"
  },
  duotone: {
    900: "fad",
    400: "fadr",
    300: "fadl",
    100: "fadt"
  },
  sharp: {
    900: "fass",
    400: "fasr",
    300: "fasl",
    100: "fast"
  },
  "sharp-duotone": {
    900: "fasds",
    400: "fasdr",
    300: "fasdl",
    100: "fasdt"
  }
}, coe = {
  "Font Awesome 6 Free": {
    900: "fas",
    400: "far"
  },
  "Font Awesome 6 Pro": {
    900: "fas",
    400: "far",
    normal: "far",
    300: "fal",
    100: "fat"
  },
  "Font Awesome 6 Brands": {
    400: "fab",
    normal: "fab"
  },
  "Font Awesome 6 Duotone": {
    900: "fad",
    400: "fadr",
    normal: "fadr",
    300: "fadl",
    100: "fadt"
  },
  "Font Awesome 6 Sharp": {
    900: "fass",
    400: "fasr",
    normal: "fasr",
    300: "fasl",
    100: "fast"
  },
  "Font Awesome 6 Sharp Duotone": {
    900: "fasds",
    400: "fasdr",
    normal: "fasdr",
    300: "fasdl",
    100: "fasdt"
  }
}, uoe = /* @__PURE__ */ new Map([["classic", {
  defaultShortPrefixId: "fas",
  defaultStyleId: "solid",
  styleIds: ["solid", "regular", "light", "thin", "brands"],
  futureStyleIds: [],
  defaultFontWeight: 900
}], ["sharp", {
  defaultShortPrefixId: "fass",
  defaultStyleId: "solid",
  styleIds: ["solid", "regular", "light", "thin"],
  futureStyleIds: [],
  defaultFontWeight: 900
}], ["duotone", {
  defaultShortPrefixId: "fad",
  defaultStyleId: "solid",
  styleIds: ["solid", "regular", "light", "thin"],
  futureStyleIds: [],
  defaultFontWeight: 900
}], ["sharp-duotone", {
  defaultShortPrefixId: "fasds",
  defaultStyleId: "solid",
  styleIds: ["solid", "regular", "light", "thin"],
  futureStyleIds: [],
  defaultFontWeight: 900
}]]), foe = {
  classic: {
    solid: "fas",
    regular: "far",
    light: "fal",
    thin: "fat",
    brands: "fab"
  },
  duotone: {
    solid: "fad",
    regular: "fadr",
    light: "fadl",
    thin: "fadt"
  },
  sharp: {
    solid: "fass",
    regular: "fasr",
    light: "fasl",
    thin: "fast"
  },
  "sharp-duotone": {
    solid: "fasds",
    regular: "fasdr",
    light: "fasdl",
    thin: "fasdt"
  }
}, doe = ["fak", "fa-kit", "fakd", "fa-kit-duotone"], c_ = {
  kit: {
    fak: "kit",
    "fa-kit": "kit"
  },
  "kit-duotone": {
    fakd: "kit-duotone",
    "fa-kit-duotone": "kit-duotone"
  }
}, poe = ["kit"], moe = {
  kit: {
    "fa-kit": "fak"
  }
}, goe = ["fak", "fakd"], hoe = {
  kit: {
    fak: "fa-kit"
  }
}, u_ = {
  kit: {
    kit: "fak"
  },
  "kit-duotone": {
    "kit-duotone": "fakd"
  }
}, zb = {
  GROUP: "duotone-group",
  SWAP_OPACITY: "swap-opacity",
  PRIMARY: "primary",
  SECONDARY: "secondary"
}, boe = ["fa-classic", "fa-duotone", "fa-sharp", "fa-sharp-duotone"], yoe = ["fak", "fa-kit", "fakd", "fa-kit-duotone"], voe = {
  "Font Awesome Kit": {
    400: "fak",
    normal: "fak"
  },
  "Font Awesome Kit Duotone": {
    400: "fakd",
    normal: "fakd"
  }
}, xoe = {
  classic: {
    "fa-brands": "fab",
    "fa-duotone": "fad",
    "fa-light": "fal",
    "fa-regular": "far",
    "fa-solid": "fas",
    "fa-thin": "fat"
  },
  duotone: {
    "fa-regular": "fadr",
    "fa-light": "fadl",
    "fa-thin": "fadt"
  },
  sharp: {
    "fa-solid": "fass",
    "fa-regular": "fasr",
    "fa-light": "fasl",
    "fa-thin": "fast"
  },
  "sharp-duotone": {
    "fa-solid": "fasds",
    "fa-regular": "fasdr",
    "fa-light": "fasdl",
    "fa-thin": "fasdt"
  }
}, woe = {
  classic: ["fas", "far", "fal", "fat", "fad"],
  duotone: ["fadr", "fadl", "fadt"],
  sharp: ["fass", "fasr", "fasl", "fast"],
  "sharp-duotone": ["fasds", "fasdr", "fasdl", "fasdt"]
}, e5 = {
  classic: {
    fab: "fa-brands",
    fad: "fa-duotone",
    fal: "fa-light",
    far: "fa-regular",
    fas: "fa-solid",
    fat: "fa-thin"
  },
  duotone: {
    fadr: "fa-regular",
    fadl: "fa-light",
    fadt: "fa-thin"
  },
  sharp: {
    fass: "fa-solid",
    fasr: "fa-regular",
    fasl: "fa-light",
    fast: "fa-thin"
  },
  "sharp-duotone": {
    fasds: "fa-solid",
    fasdr: "fa-regular",
    fasdl: "fa-light",
    fasdt: "fa-thin"
  }
}, koe = ["fa-solid", "fa-regular", "fa-light", "fa-thin", "fa-duotone", "fa-brands"], t5 = ["fa", "fas", "far", "fal", "fat", "fad", "fadr", "fadl", "fadt", "fab", "fass", "fasr", "fasl", "fast", "fasds", "fasdr", "fasdl", "fasdt", ...boe, ...koe], $oe = ["solid", "regular", "light", "thin", "duotone", "brands"], LD = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], Ooe = LD.concat([11, 12, 13, 14, 15, 16, 17, 18, 19, 20]), Eoe = [...Object.keys(woe), ...$oe, "2xs", "xs", "sm", "lg", "xl", "2xl", "beat", "border", "fade", "beat-fade", "bounce", "flip-both", "flip-horizontal", "flip-vertical", "flip", "fw", "inverse", "layers-counter", "layers-text", "layers", "li", "pull-left", "pull-right", "pulse", "rotate-180", "rotate-270", "rotate-90", "rotate-by", "shake", "spin-pulse", "spin-reverse", "spin", "stack-1x", "stack-2x", "stack", "ul", zb.GROUP, zb.SWAP_OPACITY, zb.PRIMARY, zb.SECONDARY].concat(LD.map((e) => "".concat(e, "x"))).concat(Ooe.map((e) => "w-".concat(e))), Soe = {
  "Font Awesome 5 Free": {
    900: "fas",
    400: "far"
  },
  "Font Awesome 5 Pro": {
    900: "fas",
    400: "far",
    normal: "far",
    300: "fal"
  },
  "Font Awesome 5 Brands": {
    400: "fab",
    normal: "fab"
  },
  "Font Awesome 5 Duotone": {
    900: "fad"
  }
};
const di = "___FONT_AWESOME___", r5 = 16, VD = "fa", WD = "svg-inline--fa", au = "data-fa-i2svg", n5 = "data-fa-pseudo-element", Poe = "data-fa-pseudo-element-pending", lS = "data-prefix", cS = "data-icon", f_ = "fontawesome-i2svg", Coe = "async", Aoe = ["HTML", "HEAD", "STYLE", "SCRIPT"], UD = (() => {
  try {
    return process.env.NODE_ENV === "production";
  } catch {
    return !1;
  }
})();
function Bh(e) {
  return new Proxy(e, {
    get(t, r) {
      return r in t ? t[r] : t[dn];
    }
  });
}
const YD = me({}, zD);
YD[dn] = me(me(me(me({}, {
  "fa-duotone": "duotone"
}), zD[dn]), c_.kit), c_["kit-duotone"]);
const _oe = Bh(YD), o5 = me({}, foe);
o5[dn] = me(me(me(me({}, {
  duotone: "fad"
}), o5[dn]), u_.kit), u_["kit-duotone"]);
const d_ = Bh(o5), a5 = me({}, e5);
a5[dn] = me(me({}, a5[dn]), hoe.kit);
const uS = Bh(a5), i5 = me({}, xoe);
i5[dn] = me(me({}, i5[dn]), moe.kit);
Bh(i5);
const Noe = noe, HD = "fa-layers-text", joe = ooe, Ioe = me({}, loe);
Bh(Ioe);
const Toe = ["class", "data-prefix", "data-icon", "data-fa-transform", "data-fa-mask"], ow = aoe, Moe = [...poe, ...Eoe], mg = Yl.FontAwesomeConfig || {};
function Roe(e) {
  var t = zr.querySelector("script[" + e + "]");
  if (t)
    return t.getAttribute(e);
}
function zoe(e) {
  return e === "" ? !0 : e === "false" ? !1 : e === "true" ? !0 : e;
}
zr && typeof zr.querySelector == "function" && [["data-family-prefix", "familyPrefix"], ["data-css-prefix", "cssPrefix"], ["data-family-default", "familyDefault"], ["data-style-default", "styleDefault"], ["data-replacement-class", "replacementClass"], ["data-auto-replace-svg", "autoReplaceSvg"], ["data-auto-add-css", "autoAddCss"], ["data-auto-a11y", "autoA11y"], ["data-search-pseudo-elements", "searchPseudoElements"], ["data-observe-mutations", "observeMutations"], ["data-mutate-approach", "mutateApproach"], ["data-keep-original-source", "keepOriginalSource"], ["data-measure-performance", "measurePerformance"], ["data-show-missing-icons", "showMissingIcons"]].forEach((e) => {
  let [t, r] = e;
  const n = zoe(Roe(t));
  n != null && (mg[r] = n);
});
const GD = {
  styleDefault: "solid",
  familyDefault: dn,
  cssPrefix: VD,
  replacementClass: WD,
  autoReplaceSvg: !0,
  autoAddCss: !0,
  autoA11y: !0,
  searchPseudoElements: !1,
  observeMutations: !0,
  mutateApproach: "async",
  keepOriginalSource: !0,
  measurePerformance: !1,
  showMissingIcons: !0
};
mg.familyPrefix && (mg.cssPrefix = mg.familyPrefix);
const ud = me(me({}, GD), mg);
ud.autoReplaceSvg || (ud.observeMutations = !1);
const Le = {};
Object.keys(GD).forEach((e) => {
  Object.defineProperty(Le, e, {
    enumerable: !0,
    set: function(t) {
      ud[e] = t, gg.forEach((r) => r(Le));
    },
    get: function() {
      return ud[e];
    }
  });
});
Object.defineProperty(Le, "familyPrefix", {
  enumerable: !0,
  set: function(e) {
    ud.cssPrefix = e, gg.forEach((t) => t(Le));
  },
  get: function() {
    return ud.cssPrefix;
  }
});
Yl.FontAwesomeConfig = Le;
const gg = [];
function Foe(e) {
  return gg.push(e), () => {
    gg.splice(gg.indexOf(e), 1);
  };
}
const Ps = r5, la = {
  size: 16,
  x: 0,
  y: 0,
  rotate: 0,
  flipX: !1,
  flipY: !1
};
function Doe(e) {
  if (!e || !Fi)
    return;
  const t = zr.createElement("style");
  t.setAttribute("type", "text/css"), t.innerHTML = e;
  const r = zr.head.childNodes;
  let n = null;
  for (let o = r.length - 1; o > -1; o--) {
    const a = r[o], i = (a.tagName || "").toUpperCase();
    ["STYLE", "LINK"].indexOf(i) > -1 && (n = a);
  }
  return zr.head.insertBefore(t, n), e;
}
const Loe = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
function eh() {
  let e = 12, t = "";
  for (; e-- > 0; )
    t += Loe[Math.random() * 62 | 0];
  return t;
}
function _d(e) {
  const t = [];
  for (let r = (e || []).length >>> 0; r--; )
    t[r] = e[r];
  return t;
}
function fS(e) {
  return e.classList ? _d(e.classList) : (e.getAttribute("class") || "").split(" ").filter((t) => t);
}
function qD(e) {
  return "".concat(e).replace(/&/g, "&amp;").replace(/"/g, "&quot;").replace(/'/g, "&#39;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
}
function Voe(e) {
  return Object.keys(e || {}).reduce((t, r) => t + "".concat(r, '="').concat(qD(e[r]), '" '), "").trim();
}
function V1(e) {
  return Object.keys(e || {}).reduce((t, r) => t + "".concat(r, ": ").concat(e[r].trim(), ";"), "");
}
function dS(e) {
  return e.size !== la.size || e.x !== la.x || e.y !== la.y || e.rotate !== la.rotate || e.flipX || e.flipY;
}
function Woe(e) {
  let {
    transform: t,
    containerWidth: r,
    iconWidth: n
  } = e;
  const o = {
    transform: "translate(".concat(r / 2, " 256)")
  }, a = "translate(".concat(t.x * 32, ", ").concat(t.y * 32, ") "), i = "scale(".concat(t.size / 16 * (t.flipX ? -1 : 1), ", ").concat(t.size / 16 * (t.flipY ? -1 : 1), ") "), s = "rotate(".concat(t.rotate, " 0 0)"), l = {
    transform: "".concat(a, " ").concat(i, " ").concat(s)
  }, c = {
    transform: "translate(".concat(n / 2 * -1, " -256)")
  };
  return {
    outer: o,
    inner: l,
    path: c
  };
}
function Uoe(e) {
  let {
    transform: t,
    width: r = r5,
    height: n = r5,
    startCentered: o = !1
  } = e, a = "";
  return o && RD ? a += "translate(".concat(t.x / Ps - r / 2, "em, ").concat(t.y / Ps - n / 2, "em) ") : o ? a += "translate(calc(-50% + ".concat(t.x / Ps, "em), calc(-50% + ").concat(t.y / Ps, "em)) ") : a += "translate(".concat(t.x / Ps, "em, ").concat(t.y / Ps, "em) "), a += "scale(".concat(t.size / Ps * (t.flipX ? -1 : 1), ", ").concat(t.size / Ps * (t.flipY ? -1 : 1), ") "), a += "rotate(".concat(t.rotate, "deg) "), a;
}
var Yoe = `:root, :host {
  --fa-font-solid: normal 900 1em/1 "Font Awesome 6 Free";
  --fa-font-regular: normal 400 1em/1 "Font Awesome 6 Free";
  --fa-font-light: normal 300 1em/1 "Font Awesome 6 Pro";
  --fa-font-thin: normal 100 1em/1 "Font Awesome 6 Pro";
  --fa-font-duotone: normal 900 1em/1 "Font Awesome 6 Duotone";
  --fa-font-duotone-regular: normal 400 1em/1 "Font Awesome 6 Duotone";
  --fa-font-duotone-light: normal 300 1em/1 "Font Awesome 6 Duotone";
  --fa-font-duotone-thin: normal 100 1em/1 "Font Awesome 6 Duotone";
  --fa-font-brands: normal 400 1em/1 "Font Awesome 6 Brands";
  --fa-font-sharp-solid: normal 900 1em/1 "Font Awesome 6 Sharp";
  --fa-font-sharp-regular: normal 400 1em/1 "Font Awesome 6 Sharp";
  --fa-font-sharp-light: normal 300 1em/1 "Font Awesome 6 Sharp";
  --fa-font-sharp-thin: normal 100 1em/1 "Font Awesome 6 Sharp";
  --fa-font-sharp-duotone-solid: normal 900 1em/1 "Font Awesome 6 Sharp Duotone";
  --fa-font-sharp-duotone-regular: normal 400 1em/1 "Font Awesome 6 Sharp Duotone";
  --fa-font-sharp-duotone-light: normal 300 1em/1 "Font Awesome 6 Sharp Duotone";
  --fa-font-sharp-duotone-thin: normal 100 1em/1 "Font Awesome 6 Sharp Duotone";
}

svg:not(:root).svg-inline--fa, svg:not(:host).svg-inline--fa {
  overflow: visible;
  box-sizing: content-box;
}

.svg-inline--fa {
  display: var(--fa-display, inline-block);
  height: 1em;
  overflow: visible;
  vertical-align: -0.125em;
}
.svg-inline--fa.fa-2xs {
  vertical-align: 0.1em;
}
.svg-inline--fa.fa-xs {
  vertical-align: 0em;
}
.svg-inline--fa.fa-sm {
  vertical-align: -0.0714285705em;
}
.svg-inline--fa.fa-lg {
  vertical-align: -0.2em;
}
.svg-inline--fa.fa-xl {
  vertical-align: -0.25em;
}
.svg-inline--fa.fa-2xl {
  vertical-align: -0.3125em;
}
.svg-inline--fa.fa-pull-left {
  margin-right: var(--fa-pull-margin, 0.3em);
  width: auto;
}
.svg-inline--fa.fa-pull-right {
  margin-left: var(--fa-pull-margin, 0.3em);
  width: auto;
}
.svg-inline--fa.fa-li {
  width: var(--fa-li-width, 2em);
  top: 0.25em;
}
.svg-inline--fa.fa-fw {
  width: var(--fa-fw-width, 1.25em);
}

.fa-layers svg.svg-inline--fa {
  bottom: 0;
  left: 0;
  margin: auto;
  position: absolute;
  right: 0;
  top: 0;
}

.fa-layers-counter, .fa-layers-text {
  display: inline-block;
  position: absolute;
  text-align: center;
}

.fa-layers {
  display: inline-block;
  height: 1em;
  position: relative;
  text-align: center;
  vertical-align: -0.125em;
  width: 1em;
}
.fa-layers svg.svg-inline--fa {
  transform-origin: center center;
}

.fa-layers-text {
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  transform-origin: center center;
}

.fa-layers-counter {
  background-color: var(--fa-counter-background-color, #ff253a);
  border-radius: var(--fa-counter-border-radius, 1em);
  box-sizing: border-box;
  color: var(--fa-inverse, #fff);
  line-height: var(--fa-counter-line-height, 1);
  max-width: var(--fa-counter-max-width, 5em);
  min-width: var(--fa-counter-min-width, 1.5em);
  overflow: hidden;
  padding: var(--fa-counter-padding, 0.25em 0.5em);
  right: var(--fa-right, 0);
  text-overflow: ellipsis;
  top: var(--fa-top, 0);
  transform: scale(var(--fa-counter-scale, 0.25));
  transform-origin: top right;
}

.fa-layers-bottom-right {
  bottom: var(--fa-bottom, 0);
  right: var(--fa-right, 0);
  top: auto;
  transform: scale(var(--fa-layers-scale, 0.25));
  transform-origin: bottom right;
}

.fa-layers-bottom-left {
  bottom: var(--fa-bottom, 0);
  left: var(--fa-left, 0);
  right: auto;
  top: auto;
  transform: scale(var(--fa-layers-scale, 0.25));
  transform-origin: bottom left;
}

.fa-layers-top-right {
  top: var(--fa-top, 0);
  right: var(--fa-right, 0);
  transform: scale(var(--fa-layers-scale, 0.25));
  transform-origin: top right;
}

.fa-layers-top-left {
  left: var(--fa-left, 0);
  right: auto;
  top: var(--fa-top, 0);
  transform: scale(var(--fa-layers-scale, 0.25));
  transform-origin: top left;
}

.fa-1x {
  font-size: 1em;
}

.fa-2x {
  font-size: 2em;
}

.fa-3x {
  font-size: 3em;
}

.fa-4x {
  font-size: 4em;
}

.fa-5x {
  font-size: 5em;
}

.fa-6x {
  font-size: 6em;
}

.fa-7x {
  font-size: 7em;
}

.fa-8x {
  font-size: 8em;
}

.fa-9x {
  font-size: 9em;
}

.fa-10x {
  font-size: 10em;
}

.fa-2xs {
  font-size: 0.625em;
  line-height: 0.1em;
  vertical-align: 0.225em;
}

.fa-xs {
  font-size: 0.75em;
  line-height: 0.0833333337em;
  vertical-align: 0.125em;
}

.fa-sm {
  font-size: 0.875em;
  line-height: 0.0714285718em;
  vertical-align: 0.0535714295em;
}

.fa-lg {
  font-size: 1.25em;
  line-height: 0.05em;
  vertical-align: -0.075em;
}

.fa-xl {
  font-size: 1.5em;
  line-height: 0.0416666682em;
  vertical-align: -0.125em;
}

.fa-2xl {
  font-size: 2em;
  line-height: 0.03125em;
  vertical-align: -0.1875em;
}

.fa-fw {
  text-align: center;
  width: 1.25em;
}

.fa-ul {
  list-style-type: none;
  margin-left: var(--fa-li-margin, 2.5em);
  padding-left: 0;
}
.fa-ul > li {
  position: relative;
}

.fa-li {
  left: calc(-1 * var(--fa-li-width, 2em));
  position: absolute;
  text-align: center;
  width: var(--fa-li-width, 2em);
  line-height: inherit;
}

.fa-border {
  border-color: var(--fa-border-color, #eee);
  border-radius: var(--fa-border-radius, 0.1em);
  border-style: var(--fa-border-style, solid);
  border-width: var(--fa-border-width, 0.08em);
  padding: var(--fa-border-padding, 0.2em 0.25em 0.15em);
}

.fa-pull-left {
  float: left;
  margin-right: var(--fa-pull-margin, 0.3em);
}

.fa-pull-right {
  float: right;
  margin-left: var(--fa-pull-margin, 0.3em);
}

.fa-beat {
  animation-name: fa-beat;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, ease-in-out);
}

.fa-bounce {
  animation-name: fa-bounce;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.28, 0.84, 0.42, 1));
}

.fa-fade {
  animation-name: fa-fade;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));
}

.fa-beat-fade {
  animation-name: fa-beat-fade;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));
}

.fa-flip {
  animation-name: fa-flip;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, ease-in-out);
}

.fa-shake {
  animation-name: fa-shake;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, linear);
}

.fa-spin {
  animation-name: fa-spin;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 2s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, linear);
}

.fa-spin-reverse {
  --fa-animation-direction: reverse;
}

.fa-pulse,
.fa-spin-pulse {
  animation-name: fa-spin;
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, steps(8));
}

@media (prefers-reduced-motion: reduce) {
  .fa-beat,
.fa-bounce,
.fa-fade,
.fa-beat-fade,
.fa-flip,
.fa-pulse,
.fa-shake,
.fa-spin,
.fa-spin-pulse {
    animation-delay: -1ms;
    animation-duration: 1ms;
    animation-iteration-count: 1;
    transition-delay: 0s;
    transition-duration: 0s;
  }
}
@keyframes fa-beat {
  0%, 90% {
    transform: scale(1);
  }
  45% {
    transform: scale(var(--fa-beat-scale, 1.25));
  }
}
@keyframes fa-bounce {
  0% {
    transform: scale(1, 1) translateY(0);
  }
  10% {
    transform: scale(var(--fa-bounce-start-scale-x, 1.1), var(--fa-bounce-start-scale-y, 0.9)) translateY(0);
  }
  30% {
    transform: scale(var(--fa-bounce-jump-scale-x, 0.9), var(--fa-bounce-jump-scale-y, 1.1)) translateY(var(--fa-bounce-height, -0.5em));
  }
  50% {
    transform: scale(var(--fa-bounce-land-scale-x, 1.05), var(--fa-bounce-land-scale-y, 0.95)) translateY(0);
  }
  57% {
    transform: scale(1, 1) translateY(var(--fa-bounce-rebound, -0.125em));
  }
  64% {
    transform: scale(1, 1) translateY(0);
  }
  100% {
    transform: scale(1, 1) translateY(0);
  }
}
@keyframes fa-fade {
  50% {
    opacity: var(--fa-fade-opacity, 0.4);
  }
}
@keyframes fa-beat-fade {
  0%, 100% {
    opacity: var(--fa-beat-fade-opacity, 0.4);
    transform: scale(1);
  }
  50% {
    opacity: 1;
    transform: scale(var(--fa-beat-fade-scale, 1.125));
  }
}
@keyframes fa-flip {
  50% {
    transform: rotate3d(var(--fa-flip-x, 0), var(--fa-flip-y, 1), var(--fa-flip-z, 0), var(--fa-flip-angle, -180deg));
  }
}
@keyframes fa-shake {
  0% {
    transform: rotate(-15deg);
  }
  4% {
    transform: rotate(15deg);
  }
  8%, 24% {
    transform: rotate(-18deg);
  }
  12%, 28% {
    transform: rotate(18deg);
  }
  16% {
    transform: rotate(-22deg);
  }
  20% {
    transform: rotate(22deg);
  }
  32% {
    transform: rotate(-12deg);
  }
  36% {
    transform: rotate(12deg);
  }
  40%, 100% {
    transform: rotate(0deg);
  }
}
@keyframes fa-spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
.fa-rotate-90 {
  transform: rotate(90deg);
}

.fa-rotate-180 {
  transform: rotate(180deg);
}

.fa-rotate-270 {
  transform: rotate(270deg);
}

.fa-flip-horizontal {
  transform: scale(-1, 1);
}

.fa-flip-vertical {
  transform: scale(1, -1);
}

.fa-flip-both,
.fa-flip-horizontal.fa-flip-vertical {
  transform: scale(-1, -1);
}

.fa-rotate-by {
  transform: rotate(var(--fa-rotate-angle, 0));
}

.fa-stack {
  display: inline-block;
  vertical-align: middle;
  height: 2em;
  position: relative;
  width: 2.5em;
}

.fa-stack-1x,
.fa-stack-2x {
  bottom: 0;
  left: 0;
  margin: auto;
  position: absolute;
  right: 0;
  top: 0;
  z-index: var(--fa-stack-z-index, auto);
}

.svg-inline--fa.fa-stack-1x {
  height: 1em;
  width: 1.25em;
}
.svg-inline--fa.fa-stack-2x {
  height: 2em;
  width: 2.5em;
}

.fa-inverse {
  color: var(--fa-inverse, #fff);
}

.sr-only,
.fa-sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.sr-only-focusable:not(:focus),
.fa-sr-only-focusable:not(:focus) {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.svg-inline--fa .fa-primary {
  fill: var(--fa-primary-color, currentColor);
  opacity: var(--fa-primary-opacity, 1);
}

.svg-inline--fa .fa-secondary {
  fill: var(--fa-secondary-color, currentColor);
  opacity: var(--fa-secondary-opacity, 0.4);
}

.svg-inline--fa.fa-swap-opacity .fa-primary {
  opacity: var(--fa-secondary-opacity, 0.4);
}

.svg-inline--fa.fa-swap-opacity .fa-secondary {
  opacity: var(--fa-primary-opacity, 1);
}

.svg-inline--fa mask .fa-primary,
.svg-inline--fa mask .fa-secondary {
  fill: black;
}`;
function BD() {
  const e = VD, t = WD, r = Le.cssPrefix, n = Le.replacementClass;
  let o = Yoe;
  if (r !== e || n !== t) {
    const a = new RegExp("\\.".concat(e, "\\-"), "g"), i = new RegExp("\\--".concat(e, "\\-"), "g"), s = new RegExp("\\.".concat(t), "g");
    o = o.replace(a, ".".concat(r, "-")).replace(i, "--".concat(r, "-")).replace(s, ".".concat(n));
  }
  return o;
}
let p_ = !1;
function aw() {
  Le.autoAddCss && !p_ && (Doe(BD()), p_ = !0);
}
var Hoe = {
  mixout() {
    return {
      dom: {
        css: BD,
        insertCss: aw
      }
    };
  },
  hooks() {
    return {
      beforeDOMElementCreation() {
        aw();
      },
      beforeI2svg() {
        aw();
      }
    };
  }
};
const pi = Yl || {};
pi[di] || (pi[di] = {});
pi[di].styles || (pi[di].styles = {});
pi[di].hooks || (pi[di].hooks = {});
pi[di].shims || (pi[di].shims = []);
var ca = pi[di];
const XD = [], KD = function() {
  zr.removeEventListener("DOMContentLoaded", KD), Nv = 1, XD.map((e) => e());
};
let Nv = !1;
Fi && (Nv = (zr.documentElement.doScroll ? /^loaded|^c/ : /^loaded|^i|^c/).test(zr.readyState), Nv || zr.addEventListener("DOMContentLoaded", KD));
function Goe(e) {
  Fi && (Nv ? setTimeout(e, 0) : XD.push(e));
}
function Xh(e) {
  const {
    tag: t,
    attributes: r = {},
    children: n = []
  } = e;
  return typeof e == "string" ? qD(e) : "<".concat(t, " ").concat(Voe(r), ">").concat(n.map(Xh).join(""), "</").concat(t, ">");
}
function m_(e, t, r) {
  if (e && e[t] && e[t][r])
    return {
      prefix: t,
      iconName: r,
      icon: e[t][r]
    };
}
var iw = function(e, t, r, n) {
  var o = Object.keys(e), a = o.length, i = t, s, l, c;
  for (r === void 0 ? (s = 1, c = e[o[0]]) : (s = 0, c = r); s < a; s++)
    l = o[s], c = i(c, e[l], l, e);
  return c;
};
function qoe(e) {
  const t = [];
  let r = 0;
  const n = e.length;
  for (; r < n; ) {
    const o = e.charCodeAt(r++);
    if (o >= 55296 && o <= 56319 && r < n) {
      const a = e.charCodeAt(r++);
      (a & 64512) == 56320 ? t.push(((o & 1023) << 10) + (a & 1023) + 65536) : (t.push(o), r--);
    } else
      t.push(o);
  }
  return t;
}
function JD(e) {
  const t = qoe(e);
  return t.length === 1 ? t[0].toString(16) : null;
}
function Boe(e, t) {
  const r = e.length;
  let n = e.charCodeAt(t), o;
  return n >= 55296 && n <= 56319 && r > t + 1 && (o = e.charCodeAt(t + 1), o >= 56320 && o <= 57343) ? (n - 55296) * 1024 + o - 56320 + 65536 : n;
}
function g_(e) {
  return Object.keys(e).reduce((t, r) => {
    const n = e[r];
    return n.icon ? t[n.iconName] = n.icon : t[r] = n, t;
  }, {});
}
function s5(e, t) {
  let r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
  const {
    skipHooks: n = !1
  } = r, o = g_(t);
  typeof ca.hooks.addPack == "function" && !n ? ca.hooks.addPack(e, g_(t)) : ca.styles[e] = me(me({}, ca.styles[e] || {}), o), e === "fas" && s5("fa", t);
}
const {
  styles: th,
  shims: Xoe
} = ca, QD = Object.keys(uS), Koe = QD.reduce((e, t) => (e[t] = Object.keys(uS[t]), e), {});
let pS = null, ZD = {}, eL = {}, tL = {}, rL = {}, nL = {};
function Joe(e) {
  return ~Moe.indexOf(e);
}
function Qoe(e, t) {
  const r = t.split("-"), n = r[0], o = r.slice(1).join("-");
  return n === e && o !== "" && !Joe(o) ? o : null;
}
const oL = () => {
  const e = (n) => iw(th, (o, a, i) => (o[i] = iw(a, n, {}), o), {});
  ZD = e((n, o, a) => (o[3] && (n[o[3]] = a), o[2] && o[2].filter((i) => typeof i == "number").forEach((i) => {
    n[i.toString(16)] = a;
  }), n)), eL = e((n, o, a) => (n[a] = a, o[2] && o[2].filter((i) => typeof i == "string").forEach((i) => {
    n[i] = a;
  }), n)), nL = e((n, o, a) => {
    const i = o[2];
    return n[a] = a, i.forEach((s) => {
      n[s] = a;
    }), n;
  });
  const t = "far" in th || Le.autoFetchSvg, r = iw(Xoe, (n, o) => {
    const a = o[0];
    let i = o[1];
    const s = o[2];
    return i === "far" && !t && (i = "fas"), typeof a == "string" && (n.names[a] = {
      prefix: i,
      iconName: s
    }), typeof a == "number" && (n.unicodes[a.toString(16)] = {
      prefix: i,
      iconName: s
    }), n;
  }, {
    names: {},
    unicodes: {}
  });
  tL = r.names, rL = r.unicodes, pS = W1(Le.styleDefault, {
    family: Le.familyDefault
  });
};
Foe((e) => {
  pS = W1(e.styleDefault, {
    family: Le.familyDefault
  });
});
oL();
function mS(e, t) {
  return (ZD[e] || {})[t];
}
function Zoe(e, t) {
  return (eL[e] || {})[t];
}
function Rc(e, t) {
  return (nL[e] || {})[t];
}
function aL(e) {
  return tL[e] || {
    prefix: null,
    iconName: null
  };
}
function eae(e) {
  const t = rL[e], r = mS("fas", e);
  return t || (r ? {
    prefix: "fas",
    iconName: r
  } : null) || {
    prefix: null,
    iconName: null
  };
}
function Hl() {
  return pS;
}
const iL = () => ({
  prefix: null,
  iconName: null,
  rest: []
});
function tae(e) {
  let t = dn;
  const r = QD.reduce((n, o) => (n[o] = "".concat(Le.cssPrefix, "-").concat(o), n), {});
  return DD.forEach((n) => {
    (e.includes(r[n]) || e.some((o) => Koe[n].includes(o))) && (t = n);
  }), t;
}
function W1(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  const {
    family: r = dn
  } = t, n = _oe[r][e];
  if (r === L1 && !e)
    return "fad";
  const o = d_[r][e] || d_[r][n], a = e in ca.styles ? e : null;
  return o || a || null;
}
function rae(e) {
  let t = [], r = null;
  return e.forEach((n) => {
    const o = Qoe(Le.cssPrefix, n);
    o ? r = o : n && t.push(n);
  }), {
    iconName: r,
    rest: t
  };
}
function h_(e) {
  return e.sort().filter((t, r, n) => n.indexOf(t) === r);
}
function U1(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  const {
    skipLookups: r = !1
  } = t;
  let n = null;
  const o = t5.concat(yoe), a = h_(e.filter((f) => o.includes(f))), i = h_(e.filter((f) => !t5.includes(f))), s = a.filter((f) => (n = f, !FD.includes(f))), [l = null] = s, c = tae(a), u = me(me({}, rae(i)), {}, {
    prefix: W1(l, {
      family: c
    })
  });
  return me(me(me({}, u), iae({
    values: e,
    family: c,
    styles: th,
    config: Le,
    canonical: u,
    givenPrefix: n
  })), nae(r, n, u));
}
function nae(e, t, r) {
  let {
    prefix: n,
    iconName: o
  } = r;
  if (e || !n || !o)
    return {
      prefix: n,
      iconName: o
    };
  const a = t === "fa" ? aL(o) : {}, i = Rc(n, o);
  return o = a.iconName || i || o, n = a.prefix || n, n === "far" && !th.far && th.fas && !Le.autoFetchSvg && (n = "fas"), {
    prefix: n,
    iconName: o
  };
}
const oae = DD.filter((e) => e !== dn || e !== L1), aae = Object.keys(e5).filter((e) => e !== dn).map((e) => Object.keys(e5[e])).flat();
function iae(e) {
  const {
    values: t,
    family: r,
    canonical: n,
    givenPrefix: o = "",
    styles: a = {},
    config: i = {}
  } = e, s = r === L1, l = t.includes("fa-duotone") || t.includes("fad"), c = i.familyDefault === "duotone", u = n.prefix === "fad" || n.prefix === "fa-duotone";
  if (!s && (l || c || u) && (n.prefix = "fad"), (t.includes("fa-brands") || t.includes("fab")) && (n.prefix = "fab"), !n.prefix && oae.includes(r) && (Object.keys(a).find((f) => aae.includes(f)) || i.autoFetchSvg)) {
    const f = uoe.get(r).defaultShortPrefixId;
    n.prefix = f, n.iconName = Rc(n.prefix, n.iconName) || n.iconName;
  }
  return (n.prefix === "fa" || o === "fa") && (n.prefix = Hl() || "fas"), n;
}
let sae = class {
  constructor() {
    this.definitions = {};
  }
  add() {
    for (var t = arguments.length, r = new Array(t), n = 0; n < t; n++)
      r[n] = arguments[n];
    const o = r.reduce(this._pullDefinitions, {});
    Object.keys(o).forEach((a) => {
      this.definitions[a] = me(me({}, this.definitions[a] || {}), o[a]), s5(a, o[a]);
      const i = uS[dn][a];
      i && s5(i, o[a]), oL();
    });
  }
  reset() {
    this.definitions = {};
  }
  _pullDefinitions(t, r) {
    const n = r.prefix && r.iconName && r.icon ? {
      0: r
    } : r;
    return Object.keys(n).map((o) => {
      const {
        prefix: a,
        iconName: i,
        icon: s
      } = n[o], l = s[2];
      t[a] || (t[a] = {}), l.length > 0 && l.forEach((c) => {
        typeof c == "string" && (t[a][c] = s);
      }), t[a][i] = s;
    }), t;
  }
}, b_ = [], ef = {};
const Cf = {}, lae = Object.keys(Cf);
function cae(e, t) {
  let {
    mixoutsTo: r
  } = t;
  return b_ = e, ef = {}, Object.keys(Cf).forEach((n) => {
    lae.indexOf(n) === -1 && delete Cf[n];
  }), b_.forEach((n) => {
    const o = n.mixout ? n.mixout() : {};
    if (Object.keys(o).forEach((a) => {
      typeof o[a] == "function" && (r[a] = o[a]), typeof o[a] == "object" && Object.keys(o[a]).forEach((i) => {
        r[a] || (r[a] = {}), r[a][i] = o[a][i];
      });
    }), n.hooks) {
      const a = n.hooks();
      Object.keys(a).forEach((i) => {
        ef[i] || (ef[i] = []), ef[i].push(a[i]);
      });
    }
    n.provides && n.provides(Cf);
  }), r;
}
function l5(e, t) {
  for (var r = arguments.length, n = new Array(r > 2 ? r - 2 : 0), o = 2; o < r; o++)
    n[o - 2] = arguments[o];
  return (ef[e] || []).forEach((a) => {
    t = a.apply(null, [t, ...n]);
  }), t;
}
function iu(e) {
  for (var t = arguments.length, r = new Array(t > 1 ? t - 1 : 0), n = 1; n < t; n++)
    r[n - 1] = arguments[n];
  (ef[e] || []).forEach((o) => {
    o.apply(null, r);
  });
}
function Gl() {
  const e = arguments[0], t = Array.prototype.slice.call(arguments, 1);
  return Cf[e] ? Cf[e].apply(null, t) : void 0;
}
function c5(e) {
  e.prefix === "fa" && (e.prefix = "fas");
  let {
    iconName: t
  } = e;
  const r = e.prefix || Hl();
  if (t)
    return t = Rc(r, t) || t, m_(sL.definitions, r, t) || m_(ca.styles, r, t);
}
const sL = new sae(), uae = () => {
  Le.autoReplaceSvg = !1, Le.observeMutations = !1, iu("noAuto");
}, fae = {
  i2svg: function() {
    let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    return Fi ? (iu("beforeI2svg", e), Gl("pseudoElements2svg", e), Gl("i2svg", e)) : Promise.reject(new Error("Operation requires a DOM of some kind."));
  },
  watch: function() {
    let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    const {
      autoReplaceSvgRoot: t
    } = e;
    Le.autoReplaceSvg === !1 && (Le.autoReplaceSvg = !0), Le.observeMutations = !0, Goe(() => {
      pae({
        autoReplaceSvgRoot: t
      }), iu("watch", e);
    });
  }
}, dae = {
  icon: (e) => {
    if (e === null)
      return null;
    if (typeof e == "object" && e.prefix && e.iconName)
      return {
        prefix: e.prefix,
        iconName: Rc(e.prefix, e.iconName) || e.iconName
      };
    if (Array.isArray(e) && e.length === 2) {
      const t = e[1].indexOf("fa-") === 0 ? e[1].slice(3) : e[1], r = W1(e[0]);
      return {
        prefix: r,
        iconName: Rc(r, t) || t
      };
    }
    if (typeof e == "string" && (e.indexOf("".concat(Le.cssPrefix, "-")) > -1 || e.match(Noe))) {
      const t = U1(e.split(" "), {
        skipLookups: !0
      });
      return {
        prefix: t.prefix || Hl(),
        iconName: Rc(t.prefix, t.iconName) || t.iconName
      };
    }
    if (typeof e == "string") {
      const t = Hl();
      return {
        prefix: t,
        iconName: Rc(t, e) || e
      };
    }
  }
}, Kn = {
  noAuto: uae,
  config: Le,
  dom: fae,
  parse: dae,
  library: sL,
  findIconDefinition: c5,
  toHtml: Xh
}, pae = function() {
  let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  const {
    autoReplaceSvgRoot: t = zr
  } = e;
  (Object.keys(ca.styles).length > 0 || Le.autoFetchSvg) && Fi && Le.autoReplaceSvg && Kn.dom.i2svg({
    node: t
  });
};
function Y1(e, t) {
  return Object.defineProperty(e, "abstract", {
    get: t
  }), Object.defineProperty(e, "html", {
    get: function() {
      return e.abstract.map((r) => Xh(r));
    }
  }), Object.defineProperty(e, "node", {
    get: function() {
      if (!Fi) return;
      const r = zr.createElement("div");
      return r.innerHTML = e.html, r.children;
    }
  }), e;
}
function mae(e) {
  let {
    children: t,
    main: r,
    mask: n,
    attributes: o,
    styles: a,
    transform: i
  } = e;
  if (dS(i) && r.found && !n.found) {
    const {
      width: s,
      height: l
    } = r, c = {
      x: s / l / 2,
      y: 0.5
    };
    o.style = V1(me(me({}, a), {}, {
      "transform-origin": "".concat(c.x + i.x / 16, "em ").concat(c.y + i.y / 16, "em")
    }));
  }
  return [{
    tag: "svg",
    attributes: o,
    children: t
  }];
}
function gae(e) {
  let {
    prefix: t,
    iconName: r,
    children: n,
    attributes: o,
    symbol: a
  } = e;
  const i = a === !0 ? "".concat(t, "-").concat(Le.cssPrefix, "-").concat(r) : a;
  return [{
    tag: "svg",
    attributes: {
      style: "display: none;"
    },
    children: [{
      tag: "symbol",
      attributes: me(me({}, o), {}, {
        id: i
      }),
      children: n
    }]
  }];
}
function gS(e) {
  const {
    icons: {
      main: t,
      mask: r
    },
    prefix: n,
    iconName: o,
    transform: a,
    symbol: i,
    title: s,
    maskId: l,
    titleId: c,
    extra: u,
    watchable: f = !1
  } = e, {
    width: p,
    height: v
  } = r.found ? r : t, x = goe.includes(n), b = [Le.replacementClass, o ? "".concat(Le.cssPrefix, "-").concat(o) : ""].filter((h) => u.classes.indexOf(h) === -1).filter((h) => h !== "" || !!h).concat(u.classes).join(" ");
  let m = {
    children: [],
    attributes: me(me({}, u.attributes), {}, {
      "data-prefix": n,
      "data-icon": o,
      class: b,
      role: u.attributes.role || "img",
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 ".concat(p, " ").concat(v)
    })
  };
  const w = x && !~u.classes.indexOf("fa-fw") ? {
    width: "".concat(p / v * 16 * 0.0625, "em")
  } : {};
  f && (m.attributes[au] = ""), s && (m.children.push({
    tag: "title",
    attributes: {
      id: m.attributes["aria-labelledby"] || "title-".concat(c || eh())
    },
    children: [s]
  }), delete m.attributes.title);
  const $ = me(me({}, m), {}, {
    prefix: n,
    iconName: o,
    main: t,
    mask: r,
    maskId: l,
    transform: a,
    symbol: i,
    styles: me(me({}, w), u.styles)
  }), {
    children: E,
    attributes: S
  } = r.found && t.found ? Gl("generateAbstractMask", $) || {
    children: [],
    attributes: {}
  } : Gl("generateAbstractIcon", $) || {
    children: [],
    attributes: {}
  };
  return $.children = E, $.attributes = S, i ? gae($) : mae($);
}
function y_(e) {
  const {
    content: t,
    width: r,
    height: n,
    transform: o,
    title: a,
    extra: i,
    watchable: s = !1
  } = e, l = me(me(me({}, i.attributes), a ? {
    title: a
  } : {}), {}, {
    class: i.classes.join(" ")
  });
  s && (l[au] = "");
  const c = me({}, i.styles);
  dS(o) && (c.transform = Uoe({
    transform: o,
    startCentered: !0,
    width: r,
    height: n
  }), c["-webkit-transform"] = c.transform);
  const u = V1(c);
  u.length > 0 && (l.style = u);
  const f = [];
  return f.push({
    tag: "span",
    attributes: l,
    children: [t]
  }), a && f.push({
    tag: "span",
    attributes: {
      class: "sr-only"
    },
    children: [a]
  }), f;
}
function hae(e) {
  const {
    content: t,
    title: r,
    extra: n
  } = e, o = me(me(me({}, n.attributes), r ? {
    title: r
  } : {}), {}, {
    class: n.classes.join(" ")
  }), a = V1(n.styles);
  a.length > 0 && (o.style = a);
  const i = [];
  return i.push({
    tag: "span",
    attributes: o,
    children: [t]
  }), r && i.push({
    tag: "span",
    attributes: {
      class: "sr-only"
    },
    children: [r]
  }), i;
}
const {
  styles: sw
} = ca;
function u5(e) {
  const t = e[0], r = e[1], [n] = e.slice(4);
  let o = null;
  return Array.isArray(n) ? o = {
    tag: "g",
    attributes: {
      class: "".concat(Le.cssPrefix, "-").concat(ow.GROUP)
    },
    children: [{
      tag: "path",
      attributes: {
        class: "".concat(Le.cssPrefix, "-").concat(ow.SECONDARY),
        fill: "currentColor",
        d: n[0]
      }
    }, {
      tag: "path",
      attributes: {
        class: "".concat(Le.cssPrefix, "-").concat(ow.PRIMARY),
        fill: "currentColor",
        d: n[1]
      }
    }]
  } : o = {
    tag: "path",
    attributes: {
      fill: "currentColor",
      d: n
    }
  }, {
    found: !0,
    width: t,
    height: r,
    icon: o
  };
}
const bae = {
  found: !1,
  width: 512,
  height: 512
};
function yae(e, t) {
  !UD && !Le.showMissingIcons && e && console.error('Icon with name "'.concat(e, '" and prefix "').concat(t, '" is missing.'));
}
function f5(e, t) {
  let r = t;
  return t === "fa" && Le.styleDefault !== null && (t = Hl()), new Promise((n, o) => {
    if (r === "fa") {
      const a = aL(e) || {};
      e = a.iconName || e, t = a.prefix || t;
    }
    if (e && t && sw[t] && sw[t][e]) {
      const a = sw[t][e];
      return n(u5(a));
    }
    yae(e, t), n(me(me({}, bae), {}, {
      icon: Le.showMissingIcons && e ? Gl("missingIconAbstract") || {} : {}
    }));
  });
}
const v_ = () => {
}, d5 = Le.measurePerformance && Rb && Rb.mark && Rb.measure ? Rb : {
  mark: v_,
  measure: v_
}, Km = 'FA "6.7.2"', vae = (e) => (d5.mark("".concat(Km, " ").concat(e, " begins")), () => lL(e)), lL = (e) => {
  d5.mark("".concat(Km, " ").concat(e, " ends")), d5.measure("".concat(Km, " ").concat(e), "".concat(Km, " ").concat(e, " begins"), "".concat(Km, " ").concat(e, " ends"));
};
var hS = {
  begin: vae,
  end: lL
};
const Vy = () => {
};
function x_(e) {
  return typeof (e.getAttribute ? e.getAttribute(au) : null) == "string";
}
function xae(e) {
  const t = e.getAttribute ? e.getAttribute(lS) : null, r = e.getAttribute ? e.getAttribute(cS) : null;
  return t && r;
}
function wae(e) {
  return e && e.classList && e.classList.contains && e.classList.contains(Le.replacementClass);
}
function kae() {
  return Le.autoReplaceSvg === !0 ? Wy.replace : Wy[Le.autoReplaceSvg] || Wy.replace;
}
function $ae(e) {
  return zr.createElementNS("http://www.w3.org/2000/svg", e);
}
function Oae(e) {
  return zr.createElement(e);
}
function cL(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  const {
    ceFn: r = e.tag === "svg" ? $ae : Oae
  } = t;
  if (typeof e == "string")
    return zr.createTextNode(e);
  const n = r(e.tag);
  return Object.keys(e.attributes || []).forEach(function(o) {
    n.setAttribute(o, e.attributes[o]);
  }), (e.children || []).forEach(function(o) {
    n.appendChild(cL(o, {
      ceFn: r
    }));
  }), n;
}
function Eae(e) {
  let t = " ".concat(e.outerHTML, " ");
  return t = "".concat(t, "Font Awesome fontawesome.com "), t;
}
const Wy = {
  replace: function(e) {
    const t = e[0];
    if (t.parentNode)
      if (e[1].forEach((r) => {
        t.parentNode.insertBefore(cL(r), t);
      }), t.getAttribute(au) === null && Le.keepOriginalSource) {
        let r = zr.createComment(Eae(t));
        t.parentNode.replaceChild(r, t);
      } else
        t.remove();
  },
  nest: function(e) {
    const t = e[0], r = e[1];
    if (~fS(t).indexOf(Le.replacementClass))
      return Wy.replace(e);
    const n = new RegExp("".concat(Le.cssPrefix, "-.*"));
    if (delete r[0].attributes.id, r[0].attributes.class) {
      const a = r[0].attributes.class.split(" ").reduce((i, s) => (s === Le.replacementClass || s.match(n) ? i.toSvg.push(s) : i.toNode.push(s), i), {
        toNode: [],
        toSvg: []
      });
      r[0].attributes.class = a.toSvg.join(" "), a.toNode.length === 0 ? t.removeAttribute("class") : t.setAttribute("class", a.toNode.join(" "));
    }
    const o = r.map((a) => Xh(a)).join(`
`);
    t.setAttribute(au, ""), t.innerHTML = o;
  }
};
function w_(e) {
  e();
}
function uL(e, t) {
  const r = typeof t == "function" ? t : Vy;
  if (e.length === 0)
    r();
  else {
    let n = w_;
    Le.mutateApproach === Coe && (n = Yl.requestAnimationFrame || w_), n(() => {
      const o = kae(), a = hS.begin("mutate");
      e.map(o), a(), r();
    });
  }
}
let bS = !1;
function fL() {
  bS = !0;
}
function p5() {
  bS = !1;
}
let jv = null;
function k_(e) {
  if (!l_ || !Le.observeMutations)
    return;
  const {
    treeCallback: t = Vy,
    nodeCallback: r = Vy,
    pseudoElementsCallback: n = Vy,
    observeMutationsRoot: o = zr
  } = e;
  jv = new l_((a) => {
    if (bS) return;
    const i = Hl();
    _d(a).forEach((s) => {
      if (s.type === "childList" && s.addedNodes.length > 0 && !x_(s.addedNodes[0]) && (Le.searchPseudoElements && n(s.target), t(s.target)), s.type === "attributes" && s.target.parentNode && Le.searchPseudoElements && n(s.target.parentNode), s.type === "attributes" && x_(s.target) && ~Toe.indexOf(s.attributeName))
        if (s.attributeName === "class" && xae(s.target)) {
          const {
            prefix: l,
            iconName: c
          } = U1(fS(s.target));
          s.target.setAttribute(lS, l || i), c && s.target.setAttribute(cS, c);
        } else wae(s.target) && r(s.target);
    });
  }), Fi && jv.observe(o, {
    childList: !0,
    attributes: !0,
    characterData: !0,
    subtree: !0
  });
}
function Sae() {
  jv && jv.disconnect();
}
function Pae(e) {
  const t = e.getAttribute("style");
  let r = [];
  return t && (r = t.split(";").reduce((n, o) => {
    const a = o.split(":"), i = a[0], s = a.slice(1);
    return i && s.length > 0 && (n[i] = s.join(":").trim()), n;
  }, {})), r;
}
function Cae(e) {
  const t = e.getAttribute("data-prefix"), r = e.getAttribute("data-icon"), n = e.innerText !== void 0 ? e.innerText.trim() : "";
  let o = U1(fS(e));
  return o.prefix || (o.prefix = Hl()), t && r && (o.prefix = t, o.iconName = r), o.iconName && o.prefix || (o.prefix && n.length > 0 && (o.iconName = Zoe(o.prefix, e.innerText) || mS(o.prefix, JD(e.innerText))), !o.iconName && Le.autoFetchSvg && e.firstChild && e.firstChild.nodeType === Node.TEXT_NODE && (o.iconName = e.firstChild.data)), o;
}
function Aae(e) {
  const t = _d(e.attributes).reduce((o, a) => (o.name !== "class" && o.name !== "style" && (o[a.name] = a.value), o), {}), r = e.getAttribute("title"), n = e.getAttribute("data-fa-title-id");
  return Le.autoA11y && (r ? t["aria-labelledby"] = "".concat(Le.replacementClass, "-title-").concat(n || eh()) : (t["aria-hidden"] = "true", t.focusable = "false")), t;
}
function _ae() {
  return {
    iconName: null,
    title: null,
    titleId: null,
    prefix: null,
    transform: la,
    symbol: !1,
    mask: {
      iconName: null,
      prefix: null,
      rest: []
    },
    maskId: null,
    extra: {
      classes: [],
      styles: {},
      attributes: {}
    }
  };
}
function $_(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {
    styleParser: !0
  };
  const {
    iconName: r,
    prefix: n,
    rest: o
  } = Cae(e), a = Aae(e), i = l5("parseNodeAttributes", {}, e);
  let s = t.styleParser ? Pae(e) : [];
  return me({
    iconName: r,
    title: e.getAttribute("title"),
    titleId: e.getAttribute("data-fa-title-id"),
    prefix: n,
    transform: la,
    mask: {
      iconName: null,
      prefix: null,
      rest: []
    },
    maskId: null,
    symbol: !1,
    extra: {
      classes: o,
      styles: s,
      attributes: a
    }
  }, i);
}
const {
  styles: Nae
} = ca;
function dL(e) {
  const t = Le.autoReplaceSvg === "nest" ? $_(e, {
    styleParser: !1
  }) : $_(e);
  return ~t.extra.classes.indexOf(HD) ? Gl("generateLayersText", e, t) : Gl("generateSvgReplacementMutation", e, t);
}
function jae() {
  return [...doe, ...t5];
}
function O_(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
  if (!Fi) return Promise.resolve();
  const r = zr.documentElement.classList, n = (u) => r.add("".concat(f_, "-").concat(u)), o = (u) => r.remove("".concat(f_, "-").concat(u)), a = Le.autoFetchSvg ? jae() : FD.concat(Object.keys(Nae));
  a.includes("fa") || a.push("fa");
  const i = [".".concat(HD, ":not([").concat(au, "])")].concat(a.map((u) => ".".concat(u, ":not([").concat(au, "])"))).join(", ");
  if (i.length === 0)
    return Promise.resolve();
  let s = [];
  try {
    s = _d(e.querySelectorAll(i));
  } catch {
  }
  if (s.length > 0)
    n("pending"), o("complete");
  else
    return Promise.resolve();
  const l = hS.begin("onTree"), c = s.reduce((u, f) => {
    try {
      const p = dL(f);
      p && u.push(p);
    } catch (p) {
      UD || p.name === "MissingIcon" && console.error(p);
    }
    return u;
  }, []);
  return new Promise((u, f) => {
    Promise.all(c).then((p) => {
      uL(p, () => {
        n("active"), n("complete"), o("pending"), typeof t == "function" && t(), l(), u();
      });
    }).catch((p) => {
      l(), f(p);
    });
  });
}
function Iae(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
  dL(e).then((r) => {
    r && uL([r], t);
  });
}
function Tae(e) {
  return function(t) {
    let r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    const n = (t || {}).icon ? t : c5(t || {});
    let {
      mask: o
    } = r;
    return o && (o = (o || {}).icon ? o : c5(o || {})), e(n, me(me({}, r), {}, {
      mask: o
    }));
  };
}
const Mae = function(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  const {
    transform: r = la,
    symbol: n = !1,
    mask: o = null,
    maskId: a = null,
    title: i = null,
    titleId: s = null,
    classes: l = [],
    attributes: c = {},
    styles: u = {}
  } = t;
  if (!e) return;
  const {
    prefix: f,
    iconName: p,
    icon: v
  } = e;
  return Y1(me({
    type: "icon"
  }, e), () => (iu("beforeDOMElementCreation", {
    iconDefinition: e,
    params: t
  }), Le.autoA11y && (i ? c["aria-labelledby"] = "".concat(Le.replacementClass, "-title-").concat(s || eh()) : (c["aria-hidden"] = "true", c.focusable = "false")), gS({
    icons: {
      main: u5(v),
      mask: o ? u5(o.icon) : {
        found: !1,
        width: null,
        height: null,
        icon: {}
      }
    },
    prefix: f,
    iconName: p,
    transform: me(me({}, la), r),
    symbol: n,
    title: i,
    maskId: a,
    titleId: s,
    extra: {
      attributes: c,
      styles: u,
      classes: l
    }
  })));
};
var Rae = {
  mixout() {
    return {
      icon: Tae(Mae)
    };
  },
  hooks() {
    return {
      mutationObserverCallbacks(e) {
        return e.treeCallback = O_, e.nodeCallback = Iae, e;
      }
    };
  },
  provides(e) {
    e.i2svg = function(t) {
      const {
        node: r = zr,
        callback: n = () => {
        }
      } = t;
      return O_(r, n);
    }, e.generateSvgReplacementMutation = function(t, r) {
      const {
        iconName: n,
        title: o,
        titleId: a,
        prefix: i,
        transform: s,
        symbol: l,
        mask: c,
        maskId: u,
        extra: f
      } = r;
      return new Promise((p, v) => {
        Promise.all([f5(n, i), c.iconName ? f5(c.iconName, c.prefix) : Promise.resolve({
          found: !1,
          width: 512,
          height: 512,
          icon: {}
        })]).then((x) => {
          let [b, m] = x;
          p([t, gS({
            icons: {
              main: b,
              mask: m
            },
            prefix: i,
            iconName: n,
            transform: s,
            symbol: l,
            maskId: u,
            title: o,
            titleId: a,
            extra: f,
            watchable: !0
          })]);
        }).catch(v);
      });
    }, e.generateAbstractIcon = function(t) {
      let {
        children: r,
        attributes: n,
        main: o,
        transform: a,
        styles: i
      } = t;
      const s = V1(i);
      s.length > 0 && (n.style = s);
      let l;
      return dS(a) && (l = Gl("generateAbstractTransformGrouping", {
        main: o,
        transform: a,
        containerWidth: o.width,
        iconWidth: o.width
      })), r.push(l || o.icon), {
        children: r,
        attributes: n
      };
    };
  }
}, zae = {
  mixout() {
    return {
      layer(e) {
        let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        const {
          classes: r = []
        } = t;
        return Y1({
          type: "layer"
        }, () => {
          iu("beforeDOMElementCreation", {
            assembler: e,
            params: t
          });
          let n = [];
          return e((o) => {
            Array.isArray(o) ? o.map((a) => {
              n = n.concat(a.abstract);
            }) : n = n.concat(o.abstract);
          }), [{
            tag: "span",
            attributes: {
              class: ["".concat(Le.cssPrefix, "-layers"), ...r].join(" ")
            },
            children: n
          }];
        });
      }
    };
  }
}, Fae = {
  mixout() {
    return {
      counter(e) {
        let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        const {
          title: r = null,
          classes: n = [],
          attributes: o = {},
          styles: a = {}
        } = t;
        return Y1({
          type: "counter",
          content: e
        }, () => (iu("beforeDOMElementCreation", {
          content: e,
          params: t
        }), hae({
          content: e.toString(),
          title: r,
          extra: {
            attributes: o,
            styles: a,
            classes: ["".concat(Le.cssPrefix, "-layers-counter"), ...n]
          }
        })));
      }
    };
  }
}, Dae = {
  mixout() {
    return {
      text(e) {
        let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        const {
          transform: r = la,
          title: n = null,
          classes: o = [],
          attributes: a = {},
          styles: i = {}
        } = t;
        return Y1({
          type: "text",
          content: e
        }, () => (iu("beforeDOMElementCreation", {
          content: e,
          params: t
        }), y_({
          content: e,
          transform: me(me({}, la), r),
          title: n,
          extra: {
            attributes: a,
            styles: i,
            classes: ["".concat(Le.cssPrefix, "-layers-text"), ...o]
          }
        })));
      }
    };
  },
  provides(e) {
    e.generateLayersText = function(t, r) {
      const {
        title: n,
        transform: o,
        extra: a
      } = r;
      let i = null, s = null;
      if (RD) {
        const l = parseInt(getComputedStyle(t).fontSize, 10), c = t.getBoundingClientRect();
        i = c.width / l, s = c.height / l;
      }
      return Le.autoA11y && !n && (a.attributes["aria-hidden"] = "true"), Promise.resolve([t, y_({
        content: t.innerHTML,
        width: i,
        height: s,
        transform: o,
        title: n,
        extra: a,
        watchable: !0
      })]);
    };
  }
};
const Lae = new RegExp('"', "ug"), E_ = [1105920, 1112319], S_ = me(me(me(me({}, {
  FontAwesome: {
    normal: "fas",
    400: "fas"
  }
}), coe), Soe), voe), m5 = Object.keys(S_).reduce((e, t) => (e[t.toLowerCase()] = S_[t], e), {}), Vae = Object.keys(m5).reduce((e, t) => {
  const r = m5[t];
  return e[t] = r[900] || [...Object.entries(r)][0][1], e;
}, {});
function Wae(e) {
  const t = e.replace(Lae, ""), r = Boe(t, 0), n = r >= E_[0] && r <= E_[1], o = t.length === 2 ? t[0] === t[1] : !1;
  return {
    value: JD(o ? t[0] : t),
    isSecondary: n || o
  };
}
function Uae(e, t) {
  const r = e.replace(/^['"]|['"]$/g, "").toLowerCase(), n = parseInt(t), o = isNaN(n) ? "normal" : n;
  return (m5[r] || {})[o] || Vae[r];
}
function P_(e, t) {
  const r = "".concat(Poe).concat(t.replace(":", "-"));
  return new Promise((n, o) => {
    if (e.getAttribute(r) !== null)
      return n();
    const a = _d(e.children).filter((f) => f.getAttribute(n5) === t)[0], i = Yl.getComputedStyle(e, t), s = i.getPropertyValue("font-family"), l = s.match(joe), c = i.getPropertyValue("font-weight"), u = i.getPropertyValue("content");
    if (a && !l)
      return e.removeChild(a), n();
    if (l && u !== "none" && u !== "") {
      const f = i.getPropertyValue("content");
      let p = Uae(s, c);
      const {
        value: v,
        isSecondary: x
      } = Wae(f), b = l[0].startsWith("FontAwesome");
      let m = mS(p, v), w = m;
      if (b) {
        const $ = eae(v);
        $.iconName && $.prefix && (m = $.iconName, p = $.prefix);
      }
      if (m && !x && (!a || a.getAttribute(lS) !== p || a.getAttribute(cS) !== w)) {
        e.setAttribute(r, w), a && e.removeChild(a);
        const $ = _ae(), {
          extra: E
        } = $;
        E.attributes[n5] = t, f5(m, p).then((S) => {
          const h = gS(me(me({}, $), {}, {
            icons: {
              main: S,
              mask: iL()
            },
            prefix: p,
            iconName: w,
            extra: E,
            watchable: !0
          })), U = zr.createElementNS("http://www.w3.org/2000/svg", "svg");
          t === "::before" ? e.insertBefore(U, e.firstChild) : e.appendChild(U), U.outerHTML = h.map((G) => Xh(G)).join(`
`), e.removeAttribute(r), n();
        }).catch(o);
      } else
        n();
    } else
      n();
  });
}
function Yae(e) {
  return Promise.all([P_(e, "::before"), P_(e, "::after")]);
}
function Hae(e) {
  return e.parentNode !== document.head && !~Aoe.indexOf(e.tagName.toUpperCase()) && !e.getAttribute(n5) && (!e.parentNode || e.parentNode.tagName !== "svg");
}
function C_(e) {
  if (Fi)
    return new Promise((t, r) => {
      const n = _d(e.querySelectorAll("*")).filter(Hae).map(Yae), o = hS.begin("searchPseudoElements");
      fL(), Promise.all(n).then(() => {
        o(), p5(), t();
      }).catch(() => {
        o(), p5(), r();
      });
    });
}
var Gae = {
  hooks() {
    return {
      mutationObserverCallbacks(e) {
        return e.pseudoElementsCallback = C_, e;
      }
    };
  },
  provides(e) {
    e.pseudoElements2svg = function(t) {
      const {
        node: r = zr
      } = t;
      Le.searchPseudoElements && C_(r);
    };
  }
};
let A_ = !1;
var qae = {
  mixout() {
    return {
      dom: {
        unwatch() {
          fL(), A_ = !0;
        }
      }
    };
  },
  hooks() {
    return {
      bootstrap() {
        k_(l5("mutationObserverCallbacks", {}));
      },
      noAuto() {
        Sae();
      },
      watch(e) {
        const {
          observeMutationsRoot: t
        } = e;
        A_ ? p5() : k_(l5("mutationObserverCallbacks", {
          observeMutationsRoot: t
        }));
      }
    };
  }
};
const __ = (e) => {
  let t = {
    size: 16,
    x: 0,
    y: 0,
    flipX: !1,
    flipY: !1,
    rotate: 0
  };
  return e.toLowerCase().split(" ").reduce((r, n) => {
    const o = n.toLowerCase().split("-"), a = o[0];
    let i = o.slice(1).join("-");
    if (a && i === "h")
      return r.flipX = !0, r;
    if (a && i === "v")
      return r.flipY = !0, r;
    if (i = parseFloat(i), isNaN(i))
      return r;
    switch (a) {
      case "grow":
        r.size = r.size + i;
        break;
      case "shrink":
        r.size = r.size - i;
        break;
      case "left":
        r.x = r.x - i;
        break;
      case "right":
        r.x = r.x + i;
        break;
      case "up":
        r.y = r.y - i;
        break;
      case "down":
        r.y = r.y + i;
        break;
      case "rotate":
        r.rotate = r.rotate + i;
        break;
    }
    return r;
  }, t);
};
var Bae = {
  mixout() {
    return {
      parse: {
        transform: (e) => __(e)
      }
    };
  },
  hooks() {
    return {
      parseNodeAttributes(e, t) {
        const r = t.getAttribute("data-fa-transform");
        return r && (e.transform = __(r)), e;
      }
    };
  },
  provides(e) {
    e.generateAbstractTransformGrouping = function(t) {
      let {
        main: r,
        transform: n,
        containerWidth: o,
        iconWidth: a
      } = t;
      const i = {
        transform: "translate(".concat(o / 2, " 256)")
      }, s = "translate(".concat(n.x * 32, ", ").concat(n.y * 32, ") "), l = "scale(".concat(n.size / 16 * (n.flipX ? -1 : 1), ", ").concat(n.size / 16 * (n.flipY ? -1 : 1), ") "), c = "rotate(".concat(n.rotate, " 0 0)"), u = {
        transform: "".concat(s, " ").concat(l, " ").concat(c)
      }, f = {
        transform: "translate(".concat(a / 2 * -1, " -256)")
      }, p = {
        outer: i,
        inner: u,
        path: f
      };
      return {
        tag: "g",
        attributes: me({}, p.outer),
        children: [{
          tag: "g",
          attributes: me({}, p.inner),
          children: [{
            tag: r.icon.tag,
            children: r.icon.children,
            attributes: me(me({}, r.icon.attributes), p.path)
          }]
        }]
      };
    };
  }
};
const lw = {
  x: 0,
  y: 0,
  width: "100%",
  height: "100%"
};
function N_(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0;
  return e.attributes && (e.attributes.fill || t) && (e.attributes.fill = "black"), e;
}
function Xae(e) {
  return e.tag === "g" ? e.children : [e];
}
var Kae = {
  hooks() {
    return {
      parseNodeAttributes(e, t) {
        const r = t.getAttribute("data-fa-mask"), n = r ? U1(r.split(" ").map((o) => o.trim())) : iL();
        return n.prefix || (n.prefix = Hl()), e.mask = n, e.maskId = t.getAttribute("data-fa-mask-id"), e;
      }
    };
  },
  provides(e) {
    e.generateAbstractMask = function(t) {
      let {
        children: r,
        attributes: n,
        main: o,
        mask: a,
        maskId: i,
        transform: s
      } = t;
      const {
        width: l,
        icon: c
      } = o, {
        width: u,
        icon: f
      } = a, p = Woe({
        transform: s,
        containerWidth: u,
        iconWidth: l
      }), v = {
        tag: "rect",
        attributes: me(me({}, lw), {}, {
          fill: "white"
        })
      }, x = c.children ? {
        children: c.children.map(N_)
      } : {}, b = {
        tag: "g",
        attributes: me({}, p.inner),
        children: [N_(me({
          tag: c.tag,
          attributes: me(me({}, c.attributes), p.path)
        }, x))]
      }, m = {
        tag: "g",
        attributes: me({}, p.outer),
        children: [b]
      }, w = "mask-".concat(i || eh()), $ = "clip-".concat(i || eh()), E = {
        tag: "mask",
        attributes: me(me({}, lw), {}, {
          id: w,
          maskUnits: "userSpaceOnUse",
          maskContentUnits: "userSpaceOnUse"
        }),
        children: [v, m]
      }, S = {
        tag: "defs",
        children: [{
          tag: "clipPath",
          attributes: {
            id: $
          },
          children: Xae(f)
        }, E]
      };
      return r.push(S, {
        tag: "rect",
        attributes: me({
          fill: "currentColor",
          "clip-path": "url(#".concat($, ")"),
          mask: "url(#".concat(w, ")")
        }, lw)
      }), {
        children: r,
        attributes: n
      };
    };
  }
}, Jae = {
  provides(e) {
    let t = !1;
    Yl.matchMedia && (t = Yl.matchMedia("(prefers-reduced-motion: reduce)").matches), e.missingIconAbstract = function() {
      const r = [], n = {
        fill: "currentColor"
      }, o = {
        attributeType: "XML",
        repeatCount: "indefinite",
        dur: "2s"
      };
      r.push({
        tag: "path",
        attributes: me(me({}, n), {}, {
          d: "M156.5,447.7l-12.6,29.5c-18.7-9.5-35.9-21.2-51.5-34.9l22.7-22.7C127.6,430.5,141.5,440,156.5,447.7z M40.6,272H8.5 c1.4,21.2,5.4,41.7,11.7,61.1L50,321.2C45.1,305.5,41.8,289,40.6,272z M40.6,240c1.4-18.8,5.2-37,11.1-54.1l-29.5-12.6 C14.7,194.3,10,216.7,8.5,240H40.6z M64.3,156.5c7.8-14.9,17.2-28.8,28.1-41.5L69.7,92.3c-13.7,15.6-25.5,32.8-34.9,51.5 L64.3,156.5z M397,419.6c-13.9,12-29.4,22.3-46.1,30.4l11.9,29.8c20.7-9.9,39.8-22.6,56.9-37.6L397,419.6z M115,92.4 c13.9-12,29.4-22.3,46.1-30.4l-11.9-29.8c-20.7,9.9-39.8,22.6-56.8,37.6L115,92.4z M447.7,355.5c-7.8,14.9-17.2,28.8-28.1,41.5 l22.7,22.7c13.7-15.6,25.5-32.9,34.9-51.5L447.7,355.5z M471.4,272c-1.4,18.8-5.2,37-11.1,54.1l29.5,12.6 c7.5-21.1,12.2-43.5,13.6-66.8H471.4z M321.2,462c-15.7,5-32.2,8.2-49.2,9.4v32.1c21.2-1.4,41.7-5.4,61.1-11.7L321.2,462z M240,471.4c-18.8-1.4-37-5.2-54.1-11.1l-12.6,29.5c21.1,7.5,43.5,12.2,66.8,13.6V471.4z M462,190.8c5,15.7,8.2,32.2,9.4,49.2h32.1 c-1.4-21.2-5.4-41.7-11.7-61.1L462,190.8z M92.4,397c-12-13.9-22.3-29.4-30.4-46.1l-29.8,11.9c9.9,20.7,22.6,39.8,37.6,56.9 L92.4,397z M272,40.6c18.8,1.4,36.9,5.2,54.1,11.1l12.6-29.5C317.7,14.7,295.3,10,272,8.5V40.6z M190.8,50 c15.7-5,32.2-8.2,49.2-9.4V8.5c-21.2,1.4-41.7,5.4-61.1,11.7L190.8,50z M442.3,92.3L419.6,115c12,13.9,22.3,29.4,30.5,46.1 l29.8-11.9C470,128.5,457.3,109.4,442.3,92.3z M397,92.4l22.7-22.7c-15.6-13.7-32.8-25.5-51.5-34.9l-12.6,29.5 C370.4,72.1,384.4,81.5,397,92.4z"
        })
      });
      const a = me(me({}, o), {}, {
        attributeName: "opacity"
      }), i = {
        tag: "circle",
        attributes: me(me({}, n), {}, {
          cx: "256",
          cy: "364",
          r: "28"
        }),
        children: []
      };
      return t || i.children.push({
        tag: "animate",
        attributes: me(me({}, o), {}, {
          attributeName: "r",
          values: "28;14;28;28;14;28;"
        })
      }, {
        tag: "animate",
        attributes: me(me({}, a), {}, {
          values: "1;0;1;1;0;1;"
        })
      }), r.push(i), r.push({
        tag: "path",
        attributes: me(me({}, n), {}, {
          opacity: "1",
          d: "M263.7,312h-16c-6.6,0-12-5.4-12-12c0-71,77.4-63.9,77.4-107.8c0-20-17.8-40.2-57.4-40.2c-29.1,0-44.3,9.6-59.2,28.7 c-3.9,5-11.1,6-16.2,2.4l-13.1-9.2c-5.6-3.9-6.9-11.8-2.6-17.2c21.2-27.2,46.4-44.7,91.2-44.7c52.3,0,97.4,29.8,97.4,80.2 c0,67.6-77.4,63.5-77.4,107.8C275.7,306.6,270.3,312,263.7,312z"
        }),
        children: t ? [] : [{
          tag: "animate",
          attributes: me(me({}, a), {}, {
            values: "1;0;0;0;0;1;"
          })
        }]
      }), t || r.push({
        tag: "path",
        attributes: me(me({}, n), {}, {
          opacity: "0",
          d: "M232.5,134.5l7,168c0.3,6.4,5.6,11.5,12,11.5h9c6.4,0,11.7-5.1,12-11.5l7-168c0.3-6.8-5.2-12.5-12-12.5h-23 C237.7,122,232.2,127.7,232.5,134.5z"
        }),
        children: [{
          tag: "animate",
          attributes: me(me({}, a), {}, {
            values: "0;0;1;1;0;0;"
          })
        }]
      }), {
        tag: "g",
        attributes: {
          class: "missing"
        },
        children: r
      };
    };
  }
}, Qae = {
  hooks() {
    return {
      parseNodeAttributes(e, t) {
        const r = t.getAttribute("data-fa-symbol"), n = r === null ? !1 : r === "" ? !0 : r;
        return e.symbol = n, e;
      }
    };
  }
}, Zae = [Hoe, Rae, zae, Fae, Dae, Gae, qae, Bae, Kae, Jae, Qae];
cae(Zae, {
  mixoutsTo: Kn
});
Kn.noAuto;
Kn.config;
Kn.library;
Kn.dom;
const g5 = Kn.parse;
Kn.findIconDefinition;
Kn.toHtml;
const eie = Kn.icon;
Kn.layer;
Kn.text;
Kn.counter;
function tie(e) {
  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e;
}
var Fb = { exports: {} }, cw = { exports: {} }, qt = {};
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var j_;
function rie() {
  if (j_) return qt;
  j_ = 1;
  var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, r = e ? Symbol.for("react.portal") : 60106, n = e ? Symbol.for("react.fragment") : 60107, o = e ? Symbol.for("react.strict_mode") : 60108, a = e ? Symbol.for("react.profiler") : 60114, i = e ? Symbol.for("react.provider") : 60109, s = e ? Symbol.for("react.context") : 60110, l = e ? Symbol.for("react.async_mode") : 60111, c = e ? Symbol.for("react.concurrent_mode") : 60111, u = e ? Symbol.for("react.forward_ref") : 60112, f = e ? Symbol.for("react.suspense") : 60113, p = e ? Symbol.for("react.suspense_list") : 60120, v = e ? Symbol.for("react.memo") : 60115, x = e ? Symbol.for("react.lazy") : 60116, b = e ? Symbol.for("react.block") : 60121, m = e ? Symbol.for("react.fundamental") : 60117, w = e ? Symbol.for("react.responder") : 60118, $ = e ? Symbol.for("react.scope") : 60119;
  function E(h) {
    if (typeof h == "object" && h !== null) {
      var U = h.$$typeof;
      switch (U) {
        case t:
          switch (h = h.type, h) {
            case l:
            case c:
            case n:
            case a:
            case o:
            case f:
              return h;
            default:
              switch (h = h && h.$$typeof, h) {
                case s:
                case u:
                case x:
                case v:
                case i:
                  return h;
                default:
                  return U;
              }
          }
        case r:
          return U;
      }
    }
  }
  function S(h) {
    return E(h) === c;
  }
  return qt.AsyncMode = l, qt.ConcurrentMode = c, qt.ContextConsumer = s, qt.ContextProvider = i, qt.Element = t, qt.ForwardRef = u, qt.Fragment = n, qt.Lazy = x, qt.Memo = v, qt.Portal = r, qt.Profiler = a, qt.StrictMode = o, qt.Suspense = f, qt.isAsyncMode = function(h) {
    return S(h) || E(h) === l;
  }, qt.isConcurrentMode = S, qt.isContextConsumer = function(h) {
    return E(h) === s;
  }, qt.isContextProvider = function(h) {
    return E(h) === i;
  }, qt.isElement = function(h) {
    return typeof h == "object" && h !== null && h.$$typeof === t;
  }, qt.isForwardRef = function(h) {
    return E(h) === u;
  }, qt.isFragment = function(h) {
    return E(h) === n;
  }, qt.isLazy = function(h) {
    return E(h) === x;
  }, qt.isMemo = function(h) {
    return E(h) === v;
  }, qt.isPortal = function(h) {
    return E(h) === r;
  }, qt.isProfiler = function(h) {
    return E(h) === a;
  }, qt.isStrictMode = function(h) {
    return E(h) === o;
  }, qt.isSuspense = function(h) {
    return E(h) === f;
  }, qt.isValidElementType = function(h) {
    return typeof h == "string" || typeof h == "function" || h === n || h === c || h === a || h === o || h === f || h === p || typeof h == "object" && h !== null && (h.$$typeof === x || h.$$typeof === v || h.$$typeof === i || h.$$typeof === s || h.$$typeof === u || h.$$typeof === m || h.$$typeof === w || h.$$typeof === $ || h.$$typeof === b);
  }, qt.typeOf = E, qt;
}
var sr = {};
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var I_;
function nie() {
  return I_ || (I_ = 1, process.env.NODE_ENV !== "production" && function() {
    var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, r = e ? Symbol.for("react.portal") : 60106, n = e ? Symbol.for("react.fragment") : 60107, o = e ? Symbol.for("react.strict_mode") : 60108, a = e ? Symbol.for("react.profiler") : 60114, i = e ? Symbol.for("react.provider") : 60109, s = e ? Symbol.for("react.context") : 60110, l = e ? Symbol.for("react.async_mode") : 60111, c = e ? Symbol.for("react.concurrent_mode") : 60111, u = e ? Symbol.for("react.forward_ref") : 60112, f = e ? Symbol.for("react.suspense") : 60113, p = e ? Symbol.for("react.suspense_list") : 60120, v = e ? Symbol.for("react.memo") : 60115, x = e ? Symbol.for("react.lazy") : 60116, b = e ? Symbol.for("react.block") : 60121, m = e ? Symbol.for("react.fundamental") : 60117, w = e ? Symbol.for("react.responder") : 60118, $ = e ? Symbol.for("react.scope") : 60119;
    function E(k) {
      return typeof k == "string" || typeof k == "function" || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
      k === n || k === c || k === a || k === o || k === f || k === p || typeof k == "object" && k !== null && (k.$$typeof === x || k.$$typeof === v || k.$$typeof === i || k.$$typeof === s || k.$$typeof === u || k.$$typeof === m || k.$$typeof === w || k.$$typeof === $ || k.$$typeof === b);
    }
    function S(k) {
      if (typeof k == "object" && k !== null) {
        var oe = k.$$typeof;
        switch (oe) {
          case t:
            var Ce = k.type;
            switch (Ce) {
              case l:
              case c:
              case n:
              case a:
              case o:
              case f:
                return Ce;
              default:
                var Ze = Ce && Ce.$$typeof;
                switch (Ze) {
                  case s:
                  case u:
                  case x:
                  case v:
                  case i:
                    return Ze;
                  default:
                    return oe;
                }
            }
          case r:
            return oe;
        }
      }
    }
    var h = l, U = c, G = s, Q = i, Z = t, X = u, J = n, I = x, te = v, V = r, D = a, F = o, R = f, H = !1;
    function B(k) {
      return H || (H = !0, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.")), g(k) || S(k) === l;
    }
    function g(k) {
      return S(k) === c;
    }
    function d(k) {
      return S(k) === s;
    }
    function O(k) {
      return S(k) === i;
    }
    function C(k) {
      return typeof k == "object" && k !== null && k.$$typeof === t;
    }
    function A(k) {
      return S(k) === u;
    }
    function N(k) {
      return S(k) === n;
    }
    function j(k) {
      return S(k) === x;
    }
    function _(k) {
      return S(k) === v;
    }
    function T(k) {
      return S(k) === r;
    }
    function M(k) {
      return S(k) === a;
    }
    function z(k) {
      return S(k) === o;
    }
    function ee(k) {
      return S(k) === f;
    }
    sr.AsyncMode = h, sr.ConcurrentMode = U, sr.ContextConsumer = G, sr.ContextProvider = Q, sr.Element = Z, sr.ForwardRef = X, sr.Fragment = J, sr.Lazy = I, sr.Memo = te, sr.Portal = V, sr.Profiler = D, sr.StrictMode = F, sr.Suspense = R, sr.isAsyncMode = B, sr.isConcurrentMode = g, sr.isContextConsumer = d, sr.isContextProvider = O, sr.isElement = C, sr.isForwardRef = A, sr.isFragment = N, sr.isLazy = j, sr.isMemo = _, sr.isPortal = T, sr.isProfiler = M, sr.isStrictMode = z, sr.isSuspense = ee, sr.isValidElementType = E, sr.typeOf = S;
  }()), sr;
}
var T_;
function pL() {
  return T_ || (T_ = 1, process.env.NODE_ENV === "production" ? cw.exports = rie() : cw.exports = nie()), cw.exports;
}
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
var uw, M_;
function oie() {
  if (M_) return uw;
  M_ = 1;
  var e = Object.getOwnPropertySymbols, t = Object.prototype.hasOwnProperty, r = Object.prototype.propertyIsEnumerable;
  function n(a) {
    if (a == null)
      throw new TypeError("Object.assign cannot be called with null or undefined");
    return Object(a);
  }
  function o() {
    try {
      if (!Object.assign)
        return !1;
      var a = new String("abc");
      if (a[5] = "de", Object.getOwnPropertyNames(a)[0] === "5")
        return !1;
      for (var i = {}, s = 0; s < 10; s++)
        i["_" + String.fromCharCode(s)] = s;
      var l = Object.getOwnPropertyNames(i).map(function(u) {
        return i[u];
      });
      if (l.join("") !== "0123456789")
        return !1;
      var c = {};
      return "abcdefghijklmnopqrst".split("").forEach(function(u) {
        c[u] = u;
      }), Object.keys(Object.assign({}, c)).join("") === "abcdefghijklmnopqrst";
    } catch {
      return !1;
    }
  }
  return uw = o() ? Object.assign : function(a, i) {
    for (var s, l = n(a), c, u = 1; u < arguments.length; u++) {
      s = Object(arguments[u]);
      for (var f in s)
        t.call(s, f) && (l[f] = s[f]);
      if (e) {
        c = e(s);
        for (var p = 0; p < c.length; p++)
          r.call(s, c[p]) && (l[c[p]] = s[c[p]]);
      }
    }
    return l;
  }, uw;
}
var fw, R_;
function yS() {
  if (R_) return fw;
  R_ = 1;
  var e = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
  return fw = e, fw;
}
var z_, F_;
function mL() {
  return F_ || (F_ = 1, z_ = Function.call.bind(Object.prototype.hasOwnProperty)), z_;
}
var dw, D_;
function aie() {
  if (D_) return dw;
  D_ = 1;
  var e = function() {
  };
  if (process.env.NODE_ENV !== "production") {
    var t = /* @__PURE__ */ yS(), r = {}, n = /* @__PURE__ */ mL();
    e = function(a) {
      var i = "Warning: " + a;
      typeof console < "u" && console.error(i);
      try {
        throw new Error(i);
      } catch {
      }
    };
  }
  function o(a, i, s, l, c) {
    if (process.env.NODE_ENV !== "production") {
      for (var u in a)
        if (n(a, u)) {
          var f;
          try {
            if (typeof a[u] != "function") {
              var p = Error(
                (l || "React class") + ": " + s + " type `" + u + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof a[u] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`."
              );
              throw p.name = "Invariant Violation", p;
            }
            f = a[u](i, u, l, s, null, t);
          } catch (x) {
            f = x;
          }
          if (f && !(f instanceof Error) && e(
            (l || "React class") + ": type specification of " + s + " `" + u + "` is invalid; the type checker function must return `null` or an `Error` but returned a " + typeof f + ". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument)."
          ), f instanceof Error && !(f.message in r)) {
            r[f.message] = !0;
            var v = c ? c() : "";
            e(
              "Failed " + s + " type: " + f.message + (v ?? "")
            );
          }
        }
    }
  }
  return o.resetWarningCache = function() {
    process.env.NODE_ENV !== "production" && (r = {});
  }, dw = o, dw;
}
var pw, L_;
function iie() {
  if (L_) return pw;
  L_ = 1;
  var e = pL(), t = oie(), r = /* @__PURE__ */ yS(), n = /* @__PURE__ */ mL(), o = /* @__PURE__ */ aie(), a = function() {
  };
  process.env.NODE_ENV !== "production" && (a = function(s) {
    var l = "Warning: " + s;
    typeof console < "u" && console.error(l);
    try {
      throw new Error(l);
    } catch {
    }
  });
  function i() {
    return null;
  }
  return pw = function(s, l) {
    var c = typeof Symbol == "function" && Symbol.iterator, u = "@@iterator";
    function f(g) {
      var d = g && (c && g[c] || g[u]);
      if (typeof d == "function")
        return d;
    }
    var p = "<<anonymous>>", v = {
      array: w("array"),
      bigint: w("bigint"),
      bool: w("boolean"),
      func: w("function"),
      number: w("number"),
      object: w("object"),
      string: w("string"),
      symbol: w("symbol"),
      any: $(),
      arrayOf: E,
      element: S(),
      elementType: h(),
      instanceOf: U,
      node: X(),
      objectOf: Q,
      oneOf: G,
      oneOfType: Z,
      shape: I,
      exact: te
    };
    function x(g, d) {
      return g === d ? g !== 0 || 1 / g === 1 / d : g !== g && d !== d;
    }
    function b(g, d) {
      this.message = g, this.data = d && typeof d == "object" ? d : {}, this.stack = "";
    }
    b.prototype = Error.prototype;
    function m(g) {
      if (process.env.NODE_ENV !== "production")
        var d = {}, O = 0;
      function C(N, j, _, T, M, z, ee) {
        if (T = T || p, z = z || _, ee !== r) {
          if (l) {
            var k = new Error(
              "Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types"
            );
            throw k.name = "Invariant Violation", k;
          } else if (process.env.NODE_ENV !== "production" && typeof console < "u") {
            var oe = T + ":" + _;
            !d[oe] && // Avoid spamming the console because they are often not actionable except for lib authors
            O < 3 && (a(
              "You are manually calling a React.PropTypes validation function for the `" + z + "` prop on `" + T + "`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details."
            ), d[oe] = !0, O++);
          }
        }
        return j[_] == null ? N ? j[_] === null ? new b("The " + M + " `" + z + "` is marked as required " + ("in `" + T + "`, but its value is `null`.")) : new b("The " + M + " `" + z + "` is marked as required in " + ("`" + T + "`, but its value is `undefined`.")) : null : g(j, _, T, M, z);
      }
      var A = C.bind(null, !1);
      return A.isRequired = C.bind(null, !0), A;
    }
    function w(g) {
      function d(O, C, A, N, j, _) {
        var T = O[C], M = F(T);
        if (M !== g) {
          var z = R(T);
          return new b(
            "Invalid " + N + " `" + j + "` of type " + ("`" + z + "` supplied to `" + A + "`, expected ") + ("`" + g + "`."),
            { expectedType: g }
          );
        }
        return null;
      }
      return m(d);
    }
    function $() {
      return m(i);
    }
    function E(g) {
      function d(O, C, A, N, j) {
        if (typeof g != "function")
          return new b("Property `" + j + "` of component `" + A + "` has invalid PropType notation inside arrayOf.");
        var _ = O[C];
        if (!Array.isArray(_)) {
          var T = F(_);
          return new b("Invalid " + N + " `" + j + "` of type " + ("`" + T + "` supplied to `" + A + "`, expected an array."));
        }
        for (var M = 0; M < _.length; M++) {
          var z = g(_, M, A, N, j + "[" + M + "]", r);
          if (z instanceof Error)
            return z;
        }
        return null;
      }
      return m(d);
    }
    function S() {
      function g(d, O, C, A, N) {
        var j = d[O];
        if (!s(j)) {
          var _ = F(j);
          return new b("Invalid " + A + " `" + N + "` of type " + ("`" + _ + "` supplied to `" + C + "`, expected a single ReactElement."));
        }
        return null;
      }
      return m(g);
    }
    function h() {
      function g(d, O, C, A, N) {
        var j = d[O];
        if (!e.isValidElementType(j)) {
          var _ = F(j);
          return new b("Invalid " + A + " `" + N + "` of type " + ("`" + _ + "` supplied to `" + C + "`, expected a single ReactElement type."));
        }
        return null;
      }
      return m(g);
    }
    function U(g) {
      function d(O, C, A, N, j) {
        if (!(O[C] instanceof g)) {
          var _ = g.name || p, T = B(O[C]);
          return new b("Invalid " + N + " `" + j + "` of type " + ("`" + T + "` supplied to `" + A + "`, expected ") + ("instance of `" + _ + "`."));
        }
        return null;
      }
      return m(d);
    }
    function G(g) {
      if (!Array.isArray(g))
        return process.env.NODE_ENV !== "production" && (arguments.length > 1 ? a(
          "Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z])."
        ) : a("Invalid argument supplied to oneOf, expected an array.")), i;
      function d(O, C, A, N, j) {
        for (var _ = O[C], T = 0; T < g.length; T++)
          if (x(_, g[T]))
            return null;
        var M = JSON.stringify(g, function(z, ee) {
          var k = R(ee);
          return k === "symbol" ? String(ee) : ee;
        });
        return new b("Invalid " + N + " `" + j + "` of value `" + String(_) + "` " + ("supplied to `" + A + "`, expected one of " + M + "."));
      }
      return m(d);
    }
    function Q(g) {
      function d(O, C, A, N, j) {
        if (typeof g != "function")
          return new b("Property `" + j + "` of component `" + A + "` has invalid PropType notation inside objectOf.");
        var _ = O[C], T = F(_);
        if (T !== "object")
          return new b("Invalid " + N + " `" + j + "` of type " + ("`" + T + "` supplied to `" + A + "`, expected an object."));
        for (var M in _)
          if (n(_, M)) {
            var z = g(_, M, A, N, j + "." + M, r);
            if (z instanceof Error)
              return z;
          }
        return null;
      }
      return m(d);
    }
    function Z(g) {
      if (!Array.isArray(g))
        return process.env.NODE_ENV !== "production" && a("Invalid argument supplied to oneOfType, expected an instance of array."), i;
      for (var d = 0; d < g.length; d++) {
        var O = g[d];
        if (typeof O != "function")
          return a(
            "Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + H(O) + " at index " + d + "."
          ), i;
      }
      function C(A, N, j, _, T) {
        for (var M = [], z = 0; z < g.length; z++) {
          var ee = g[z], k = ee(A, N, j, _, T, r);
          if (k == null)
            return null;
          k.data && n(k.data, "expectedType") && M.push(k.data.expectedType);
        }
        var oe = M.length > 0 ? ", expected one of type [" + M.join(", ") + "]" : "";
        return new b("Invalid " + _ + " `" + T + "` supplied to " + ("`" + j + "`" + oe + "."));
      }
      return m(C);
    }
    function X() {
      function g(d, O, C, A, N) {
        return V(d[O]) ? null : new b("Invalid " + A + " `" + N + "` supplied to " + ("`" + C + "`, expected a ReactNode."));
      }
      return m(g);
    }
    function J(g, d, O, C, A) {
      return new b(
        (g || "React class") + ": " + d + " type `" + O + "." + C + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + A + "`."
      );
    }
    function I(g) {
      function d(O, C, A, N, j) {
        var _ = O[C], T = F(_);
        if (T !== "object")
          return new b("Invalid " + N + " `" + j + "` of type `" + T + "` " + ("supplied to `" + A + "`, expected `object`."));
        for (var M in g) {
          var z = g[M];
          if (typeof z != "function")
            return J(A, N, j, M, R(z));
          var ee = z(_, M, A, N, j + "." + M, r);
          if (ee)
            return ee;
        }
        return null;
      }
      return m(d);
    }
    function te(g) {
      function d(O, C, A, N, j) {
        var _ = O[C], T = F(_);
        if (T !== "object")
          return new b("Invalid " + N + " `" + j + "` of type `" + T + "` " + ("supplied to `" + A + "`, expected `object`."));
        var M = t({}, O[C], g);
        for (var z in M) {
          var ee = g[z];
          if (n(g, z) && typeof ee != "function")
            return J(A, N, j, z, R(ee));
          if (!ee)
            return new b(
              "Invalid " + N + " `" + j + "` key `" + z + "` supplied to `" + A + "`.\nBad object: " + JSON.stringify(O[C], null, "  ") + `
Valid keys: ` + JSON.stringify(Object.keys(g), null, "  ")
            );
          var k = ee(_, z, A, N, j + "." + z, r);
          if (k)
            return k;
        }
        return null;
      }
      return m(d);
    }
    function V(g) {
      switch (typeof g) {
        case "number":
        case "string":
        case "undefined":
          return !0;
        case "boolean":
          return !g;
        case "object":
          if (Array.isArray(g))
            return g.every(V);
          if (g === null || s(g))
            return !0;
          var d = f(g);
          if (d) {
            var O = d.call(g), C;
            if (d !== g.entries) {
              for (; !(C = O.next()).done; )
                if (!V(C.value))
                  return !1;
            } else
              for (; !(C = O.next()).done; ) {
                var A = C.value;
                if (A && !V(A[1]))
                  return !1;
              }
          } else
            return !1;
          return !0;
        default:
          return !1;
      }
    }
    function D(g, d) {
      return g === "symbol" ? !0 : d ? d["@@toStringTag"] === "Symbol" || typeof Symbol == "function" && d instanceof Symbol : !1;
    }
    function F(g) {
      var d = typeof g;
      return Array.isArray(g) ? "array" : g instanceof RegExp ? "object" : D(d, g) ? "symbol" : d;
    }
    function R(g) {
      if (typeof g > "u" || g === null)
        return "" + g;
      var d = F(g);
      if (d === "object") {
        if (g instanceof Date)
          return "date";
        if (g instanceof RegExp)
          return "regexp";
      }
      return d;
    }
    function H(g) {
      var d = R(g);
      switch (d) {
        case "array":
        case "object":
          return "an " + d;
        case "boolean":
        case "date":
        case "regexp":
          return "a " + d;
        default:
          return d;
      }
    }
    function B(g) {
      return !g.constructor || !g.constructor.name ? p : g.constructor.name;
    }
    return v.checkPropTypes = o, v.resetWarningCache = o.resetWarningCache, v.PropTypes = v, v;
  }, pw;
}
var mw, V_;
function sie() {
  if (V_) return mw;
  V_ = 1;
  var e = /* @__PURE__ */ yS();
  function t() {
  }
  function r() {
  }
  return r.resetWarningCache = t, mw = function() {
    function n(i, s, l, c, u, f) {
      if (f !== e) {
        var p = new Error(
          "Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types"
        );
        throw p.name = "Invariant Violation", p;
      }
    }
    n.isRequired = n;
    function o() {
      return n;
    }
    var a = {
      array: n,
      bigint: n,
      bool: n,
      func: n,
      number: n,
      object: n,
      string: n,
      symbol: n,
      any: n,
      arrayOf: o,
      element: n,
      elementType: n,
      instanceOf: o,
      node: n,
      objectOf: o,
      oneOf: o,
      oneOfType: o,
      shape: o,
      exact: o,
      checkPropTypes: r,
      resetWarningCache: t
    };
    return a.PropTypes = a, a;
  }, mw;
}
var W_;
function lie() {
  if (W_) return Fb.exports;
  if (W_ = 1, process.env.NODE_ENV !== "production") {
    var e = pL(), t = !0;
    Fb.exports = /* @__PURE__ */ iie()(e.isElement, t);
  } else
    Fb.exports = /* @__PURE__ */ sie()();
  return Fb.exports;
}
var cie = /* @__PURE__ */ lie();
const _t = /* @__PURE__ */ tie(cie);
function U_(e, t) {
  var r = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var n = Object.getOwnPropertySymbols(e);
    t && (n = n.filter(function(o) {
      return Object.getOwnPropertyDescriptor(e, o).enumerable;
    })), r.push.apply(r, n);
  }
  return r;
}
function qo(e) {
  for (var t = 1; t < arguments.length; t++) {
    var r = arguments[t] != null ? arguments[t] : {};
    t % 2 ? U_(Object(r), !0).forEach(function(n) {
      tf(e, n, r[n]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : U_(Object(r)).forEach(function(n) {
      Object.defineProperty(e, n, Object.getOwnPropertyDescriptor(r, n));
    });
  }
  return e;
}
function Iv(e) {
  "@babel/helpers - typeof";
  return Iv = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t) {
    return typeof t;
  } : function(t) {
    return t && typeof Symbol == "function" && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
  }, Iv(e);
}
function tf(e, t, r) {
  return t in e ? Object.defineProperty(e, t, {
    value: r,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : e[t] = r, e;
}
function uie(e, t) {
  if (e == null) return {};
  var r = {}, n = Object.keys(e), o, a;
  for (a = 0; a < n.length; a++)
    o = n[a], !(t.indexOf(o) >= 0) && (r[o] = e[o]);
  return r;
}
function fie(e, t) {
  if (e == null) return {};
  var r = uie(e, t), n, o;
  if (Object.getOwnPropertySymbols) {
    var a = Object.getOwnPropertySymbols(e);
    for (o = 0; o < a.length; o++)
      n = a[o], !(t.indexOf(n) >= 0) && Object.prototype.propertyIsEnumerable.call(e, n) && (r[n] = e[n]);
  }
  return r;
}
function h5(e) {
  return die(e) || pie(e) || mie(e) || gie();
}
function die(e) {
  if (Array.isArray(e)) return b5(e);
}
function pie(e) {
  if (typeof Symbol < "u" && e[Symbol.iterator] != null || e["@@iterator"] != null) return Array.from(e);
}
function mie(e, t) {
  if (e) {
    if (typeof e == "string") return b5(e, t);
    var r = Object.prototype.toString.call(e).slice(8, -1);
    if (r === "Object" && e.constructor && (r = e.constructor.name), r === "Map" || r === "Set") return Array.from(e);
    if (r === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return b5(e, t);
  }
}
function b5(e, t) {
  (t == null || t > e.length) && (t = e.length);
  for (var r = 0, n = new Array(t); r < t; r++) n[r] = e[r];
  return n;
}
function gie() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function hie(e) {
  var t, r = e.beat, n = e.fade, o = e.beatFade, a = e.bounce, i = e.shake, s = e.flash, l = e.spin, c = e.spinPulse, u = e.spinReverse, f = e.pulse, p = e.fixedWidth, v = e.inverse, x = e.border, b = e.listItem, m = e.flip, w = e.size, $ = e.rotation, E = e.pull, S = (t = {
    "fa-beat": r,
    "fa-fade": n,
    "fa-beat-fade": o,
    "fa-bounce": a,
    "fa-shake": i,
    "fa-flash": s,
    "fa-spin": l,
    "fa-spin-reverse": u,
    "fa-spin-pulse": c,
    "fa-pulse": f,
    "fa-fw": p,
    "fa-inverse": v,
    "fa-border": x,
    "fa-li": b,
    "fa-flip": m === !0,
    "fa-flip-horizontal": m === "horizontal" || m === "both",
    "fa-flip-vertical": m === "vertical" || m === "both"
  }, tf(t, "fa-".concat(w), typeof w < "u" && w !== null), tf(t, "fa-rotate-".concat($), typeof $ < "u" && $ !== null && $ !== 0), tf(t, "fa-pull-".concat(E), typeof E < "u" && E !== null), tf(t, "fa-swap-opacity", e.swapOpacity), t);
  return Object.keys(S).map(function(h) {
    return S[h] ? h : null;
  }).filter(function(h) {
    return h;
  });
}
function bie(e) {
  return e = e - 0, e === e;
}
function gL(e) {
  return bie(e) ? e : (e = e.replace(/[\-_\s]+(.)?/g, function(t, r) {
    return r ? r.toUpperCase() : "";
  }), e.substr(0, 1).toLowerCase() + e.substr(1));
}
var yie = ["style"];
function vie(e) {
  return e.charAt(0).toUpperCase() + e.slice(1);
}
function xie(e) {
  return e.split(";").map(function(t) {
    return t.trim();
  }).filter(function(t) {
    return t;
  }).reduce(function(t, r) {
    var n = r.indexOf(":"), o = gL(r.slice(0, n)), a = r.slice(n + 1).trim();
    return o.startsWith("webkit") ? t[vie(o)] = a : t[o] = a, t;
  }, {});
}
function hL(e, t) {
  var r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
  if (typeof t == "string")
    return t;
  var n = (t.children || []).map(function(l) {
    return hL(e, l);
  }), o = Object.keys(t.attributes || {}).reduce(function(l, c) {
    var u = t.attributes[c];
    switch (c) {
      case "class":
        l.attrs.className = u, delete t.attributes.class;
        break;
      case "style":
        l.attrs.style = xie(u);
        break;
      default:
        c.indexOf("aria-") === 0 || c.indexOf("data-") === 0 ? l.attrs[c.toLowerCase()] = u : l.attrs[gL(c)] = u;
    }
    return l;
  }, {
    attrs: {}
  }), a = r.style, i = a === void 0 ? {} : a, s = fie(r, yie);
  return o.attrs.style = qo(qo({}, o.attrs.style), i), e.apply(void 0, [t.tag, qo(qo({}, o.attrs), s)].concat(h5(n)));
}
var bL = !1;
try {
  bL = process.env.NODE_ENV === "production";
} catch {
}
function wie() {
  if (!bL && console && typeof console.error == "function") {
    var e;
    (e = console).error.apply(e, arguments);
  }
}
function Y_(e) {
  if (e && Iv(e) === "object" && e.prefix && e.iconName && e.icon)
    return e;
  if (g5.icon)
    return g5.icon(e);
  if (e === null)
    return null;
  if (e && Iv(e) === "object" && e.prefix && e.iconName)
    return e;
  if (Array.isArray(e) && e.length === 2)
    return {
      prefix: e[0],
      iconName: e[1]
    };
  if (typeof e == "string")
    return {
      prefix: "fas",
      iconName: e
    };
}
function gw(e, t) {
  return Array.isArray(t) && t.length > 0 || !Array.isArray(t) && t ? tf({}, e, t) : {};
}
var H_ = {
  border: !1,
  className: "",
  mask: null,
  maskId: null,
  fixedWidth: !1,
  inverse: !1,
  flip: !1,
  icon: null,
  listItem: !1,
  pull: null,
  pulse: !1,
  rotation: null,
  size: null,
  spin: !1,
  spinPulse: !1,
  spinReverse: !1,
  beat: !1,
  fade: !1,
  beatFade: !1,
  bounce: !1,
  shake: !1,
  symbol: !1,
  title: "",
  titleId: null,
  transform: null,
  swapOpacity: !1
}, vS = /* @__PURE__ */ ce.forwardRef(function(e, t) {
  var r = qo(qo({}, H_), e), n = r.icon, o = r.mask, a = r.symbol, i = r.className, s = r.title, l = r.titleId, c = r.maskId, u = Y_(n), f = gw("classes", [].concat(h5(hie(r)), h5((i || "").split(" ")))), p = gw("transform", typeof r.transform == "string" ? g5.transform(r.transform) : r.transform), v = gw("mask", Y_(o)), x = eie(u, qo(qo(qo(qo({}, f), p), v), {}, {
    symbol: a,
    title: s,
    titleId: l,
    maskId: c
  }));
  if (!x)
    return wie("Could not find icon", u), null;
  var b = x.abstract, m = {
    ref: t
  };
  return Object.keys(r).forEach(function(w) {
    H_.hasOwnProperty(w) || (m[w] = r[w]);
  }), kie(b[0], m);
});
vS.displayName = "FontAwesomeIcon";
vS.propTypes = {
  beat: _t.bool,
  border: _t.bool,
  beatFade: _t.bool,
  bounce: _t.bool,
  className: _t.string,
  fade: _t.bool,
  flash: _t.bool,
  mask: _t.oneOfType([_t.object, _t.array, _t.string]),
  maskId: _t.string,
  fixedWidth: _t.bool,
  inverse: _t.bool,
  flip: _t.oneOf([!0, !1, "horizontal", "vertical", "both"]),
  icon: _t.oneOfType([_t.object, _t.array, _t.string]),
  listItem: _t.bool,
  pull: _t.oneOf(["right", "left"]),
  pulse: _t.bool,
  rotation: _t.oneOf([0, 90, 180, 270]),
  shake: _t.bool,
  size: _t.oneOf(["2xs", "xs", "sm", "lg", "xl", "2xl", "1x", "2x", "3x", "4x", "5x", "6x", "7x", "8x", "9x", "10x"]),
  spin: _t.bool,
  spinPulse: _t.bool,
  spinReverse: _t.bool,
  symbol: _t.oneOfType([_t.bool, _t.string]),
  title: _t.string,
  titleId: _t.string,
  transform: _t.oneOfType([_t.string, _t.object]),
  swapOpacity: _t.bool
};
var kie = hL.bind(null, ce.createElement);
const xS = "-", $ie = (e) => {
  const t = Eie(e), {
    conflictingClassGroups: r,
    conflictingClassGroupModifiers: n
  } = e;
  return {
    getClassGroupId: (o) => {
      const a = o.split(xS);
      return a[0] === "" && a.length !== 1 && a.shift(), yL(a, t) || Oie(o);
    },
    getConflictingClassGroupIds: (o, a) => {
      const i = r[o] || [];
      return a && n[o] ? [...i, ...n[o]] : i;
    }
  };
}, yL = (e, t) => {
  var r;
  if (e.length === 0)
    return t.classGroupId;
  const n = e[0], o = t.nextPart.get(n), a = o ? yL(e.slice(1), o) : void 0;
  if (a)
    return a;
  if (t.validators.length === 0)
    return;
  const i = e.join(xS);
  return (r = t.validators.find(({
    validator: s
  }) => s(i))) == null ? void 0 : r.classGroupId;
}, G_ = /^\[(.+)\]$/, Oie = (e) => {
  if (G_.test(e)) {
    const t = G_.exec(e)[1], r = t == null ? void 0 : t.substring(0, t.indexOf(":"));
    if (r)
      return "arbitrary.." + r;
  }
}, Eie = (e) => {
  const {
    theme: t,
    prefix: r
  } = e, n = {
    nextPart: /* @__PURE__ */ new Map(),
    validators: []
  };
  return Pie(Object.entries(e.classGroups), r).forEach(([o, a]) => {
    y5(a, n, o, t);
  }), n;
}, y5 = (e, t, r, n) => {
  e.forEach((o) => {
    if (typeof o == "string") {
      const a = o === "" ? t : q_(t, o);
      a.classGroupId = r;
      return;
    }
    if (typeof o == "function") {
      if (Sie(o)) {
        y5(o(n), t, r, n);
        return;
      }
      t.validators.push({
        validator: o,
        classGroupId: r
      });
      return;
    }
    Object.entries(o).forEach(([a, i]) => {
      y5(i, q_(t, a), r, n);
    });
  });
}, q_ = (e, t) => {
  let r = e;
  return t.split(xS).forEach((n) => {
    r.nextPart.has(n) || r.nextPart.set(n, {
      nextPart: /* @__PURE__ */ new Map(),
      validators: []
    }), r = r.nextPart.get(n);
  }), r;
}, Sie = (e) => e.isThemeGetter, Pie = (e, t) => t ? e.map(([r, n]) => {
  const o = n.map((a) => typeof a == "string" ? t + a : typeof a == "object" ? Object.fromEntries(Object.entries(a).map(([i, s]) => [t + i, s])) : a);
  return [r, o];
}) : e, Cie = (e) => {
  if (e < 1)
    return {
      get: () => {
      },
      set: () => {
      }
    };
  let t = 0, r = /* @__PURE__ */ new Map(), n = /* @__PURE__ */ new Map();
  const o = (a, i) => {
    r.set(a, i), t++, t > e && (t = 0, n = r, r = /* @__PURE__ */ new Map());
  };
  return {
    get(a) {
      let i = r.get(a);
      if (i !== void 0)
        return i;
      if ((i = n.get(a)) !== void 0)
        return o(a, i), i;
    },
    set(a, i) {
      r.has(a) ? r.set(a, i) : o(a, i);
    }
  };
}, vL = "!", Aie = (e) => {
  const {
    separator: t,
    experimentalParseClassName: r
  } = e, n = t.length === 1, o = t[0], a = t.length, i = (s) => {
    const l = [];
    let c = 0, u = 0, f;
    for (let m = 0; m < s.length; m++) {
      let w = s[m];
      if (c === 0) {
        if (w === o && (n || s.slice(m, m + a) === t)) {
          l.push(s.slice(u, m)), u = m + a;
          continue;
        }
        if (w === "/") {
          f = m;
          continue;
        }
      }
      w === "[" ? c++ : w === "]" && c--;
    }
    const p = l.length === 0 ? s : s.substring(u), v = p.startsWith(vL), x = v ? p.substring(1) : p, b = f && f > u ? f - u : void 0;
    return {
      modifiers: l,
      hasImportantModifier: v,
      baseClassName: x,
      maybePostfixModifierPosition: b
    };
  };
  return r ? (s) => r({
    className: s,
    parseClassName: i
  }) : i;
}, _ie = (e) => {
  if (e.length <= 1)
    return e;
  const t = [];
  let r = [];
  return e.forEach((n) => {
    n[0] === "[" ? (t.push(...r.sort(), n), r = []) : r.push(n);
  }), t.push(...r.sort()), t;
}, Nie = (e) => ({
  cache: Cie(e.cacheSize),
  parseClassName: Aie(e),
  ...$ie(e)
}), jie = /\s+/, Iie = (e, t) => {
  const {
    parseClassName: r,
    getClassGroupId: n,
    getConflictingClassGroupIds: o
  } = t, a = [], i = e.trim().split(jie);
  let s = "";
  for (let l = i.length - 1; l >= 0; l -= 1) {
    const c = i[l], {
      modifiers: u,
      hasImportantModifier: f,
      baseClassName: p,
      maybePostfixModifierPosition: v
    } = r(c);
    let x = !!v, b = n(x ? p.substring(0, v) : p);
    if (!b) {
      if (!x) {
        s = c + (s.length > 0 ? " " + s : s);
        continue;
      }
      if (b = n(p), !b) {
        s = c + (s.length > 0 ? " " + s : s);
        continue;
      }
      x = !1;
    }
    const m = _ie(u).join(":"), w = f ? m + vL : m, $ = w + b;
    if (a.includes($))
      continue;
    a.push($);
    const E = o(b, x);
    for (let S = 0; S < E.length; ++S) {
      const h = E[S];
      a.push(w + h);
    }
    s = c + (s.length > 0 ? " " + s : s);
  }
  return s;
};
function Tie() {
  let e = 0, t, r, n = "";
  for (; e < arguments.length; )
    (t = arguments[e++]) && (r = xL(t)) && (n && (n += " "), n += r);
  return n;
}
const xL = (e) => {
  if (typeof e == "string")
    return e;
  let t, r = "";
  for (let n = 0; n < e.length; n++)
    e[n] && (t = xL(e[n])) && (r && (r += " "), r += t);
  return r;
};
function Mie(e, ...t) {
  let r, n, o, a = i;
  function i(l) {
    const c = t.reduce((u, f) => f(u), e());
    return r = Nie(c), n = r.cache.get, o = r.cache.set, a = s, s(l);
  }
  function s(l) {
    const c = n(l);
    if (c)
      return c;
    const u = Iie(l, r);
    return o(l, u), u;
  }
  return function() {
    return a(Tie.apply(null, arguments));
  };
}
const xr = (e) => {
  const t = (r) => r[e] || [];
  return t.isThemeGetter = !0, t;
}, wL = /^\[(?:([a-z-]+):)?(.+)\]$/i, Rie = /^\d+\/\d+$/, zie = /* @__PURE__ */ new Set(["px", "full", "screen"]), Fie = /^(\d+(\.\d+)?)?(xs|sm|md|lg|xl)$/, Die = /\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\b(calc|min|max|clamp)\(.+\)|^0$/, Lie = /^(rgba?|hsla?|hwb|(ok)?(lab|lch))\(.+\)$/, Vie = /^(inset_)?-?((\d+)?\.?(\d+)[a-z]+|0)_-?((\d+)?\.?(\d+)[a-z]+|0)/, Wie = /^(url|image|image-set|cross-fade|element|(repeating-)?(linear|radial|conic)-gradient)\(.+\)$/, Da = (e) => Af(e) || zie.has(e) || Rie.test(e), Cs = (e) => Nd(e, "length", Kie), Af = (e) => !!e && !Number.isNaN(Number(e)), hw = (e) => Nd(e, "number", Af), om = (e) => !!e && Number.isInteger(Number(e)), Uie = (e) => e.endsWith("%") && Af(e.slice(0, -1)), it = (e) => wL.test(e), As = (e) => Fie.test(e), Yie = /* @__PURE__ */ new Set(["length", "size", "percentage"]), Hie = (e) => Nd(e, Yie, kL), Gie = (e) => Nd(e, "position", kL), qie = /* @__PURE__ */ new Set(["image", "url"]), Bie = (e) => Nd(e, qie, Qie), Xie = (e) => Nd(e, "", Jie), am = () => !0, Nd = (e, t, r) => {
  const n = wL.exec(e);
  return n ? n[1] ? typeof t == "string" ? n[1] === t : t.has(n[1]) : r(n[2]) : !1;
}, Kie = (e) => (
  // `colorFunctionRegex` check is necessary because color functions can have percentages in them which which would be incorrectly classified as lengths.
  // For example, `hsl(0 0% 0%)` would be classified as a length without this check.
  // I could also use lookbehind assertion in `lengthUnitRegex` but that isn't supported widely enough.
  Die.test(e) && !Lie.test(e)
), kL = () => !1, Jie = (e) => Vie.test(e), Qie = (e) => Wie.test(e), Zie = () => {
  const e = xr("colors"), t = xr("spacing"), r = xr("blur"), n = xr("brightness"), o = xr("borderColor"), a = xr("borderRadius"), i = xr("borderSpacing"), s = xr("borderWidth"), l = xr("contrast"), c = xr("grayscale"), u = xr("hueRotate"), f = xr("invert"), p = xr("gap"), v = xr("gradientColorStops"), x = xr("gradientColorStopPositions"), b = xr("inset"), m = xr("margin"), w = xr("opacity"), $ = xr("padding"), E = xr("saturate"), S = xr("scale"), h = xr("sepia"), U = xr("skew"), G = xr("space"), Q = xr("translate"), Z = () => ["auto", "contain", "none"], X = () => ["auto", "hidden", "clip", "visible", "scroll"], J = () => ["auto", it, t], I = () => [it, t], te = () => ["", Da, Cs], V = () => ["auto", Af, it], D = () => ["bottom", "center", "left", "left-bottom", "left-top", "right", "right-bottom", "right-top", "top"], F = () => ["solid", "dashed", "dotted", "double", "none"], R = () => ["normal", "multiply", "screen", "overlay", "darken", "lighten", "color-dodge", "color-burn", "hard-light", "soft-light", "difference", "exclusion", "hue", "saturation", "color", "luminosity"], H = () => ["start", "end", "center", "between", "around", "evenly", "stretch"], B = () => ["", "0", it], g = () => ["auto", "avoid", "all", "avoid-page", "page", "left", "right", "column"], d = () => [Af, it];
  return {
    cacheSize: 500,
    separator: ":",
    theme: {
      colors: [am],
      spacing: [Da, Cs],
      blur: ["none", "", As, it],
      brightness: d(),
      borderColor: [e],
      borderRadius: ["none", "", "full", As, it],
      borderSpacing: I(),
      borderWidth: te(),
      contrast: d(),
      grayscale: B(),
      hueRotate: d(),
      invert: B(),
      gap: I(),
      gradientColorStops: [e],
      gradientColorStopPositions: [Uie, Cs],
      inset: J(),
      margin: J(),
      opacity: d(),
      padding: I(),
      saturate: d(),
      scale: d(),
      sepia: B(),
      skew: d(),
      space: I(),
      translate: I()
    },
    classGroups: {
      // Layout
      /**
       * Aspect Ratio
       * @see https://tailwindcss.com/docs/aspect-ratio
       */
      aspect: [{
        aspect: ["auto", "square", "video", it]
      }],
      /**
       * Container
       * @see https://tailwindcss.com/docs/container
       */
      container: ["container"],
      /**
       * Columns
       * @see https://tailwindcss.com/docs/columns
       */
      columns: [{
        columns: [As]
      }],
      /**
       * Break After
       * @see https://tailwindcss.com/docs/break-after
       */
      "break-after": [{
        "break-after": g()
      }],
      /**
       * Break Before
       * @see https://tailwindcss.com/docs/break-before
       */
      "break-before": [{
        "break-before": g()
      }],
      /**
       * Break Inside
       * @see https://tailwindcss.com/docs/break-inside
       */
      "break-inside": [{
        "break-inside": ["auto", "avoid", "avoid-page", "avoid-column"]
      }],
      /**
       * Box Decoration Break
       * @see https://tailwindcss.com/docs/box-decoration-break
       */
      "box-decoration": [{
        "box-decoration": ["slice", "clone"]
      }],
      /**
       * Box Sizing
       * @see https://tailwindcss.com/docs/box-sizing
       */
      box: [{
        box: ["border", "content"]
      }],
      /**
       * Display
       * @see https://tailwindcss.com/docs/display
       */
      display: ["block", "inline-block", "inline", "flex", "inline-flex", "table", "inline-table", "table-caption", "table-cell", "table-column", "table-column-group", "table-footer-group", "table-header-group", "table-row-group", "table-row", "flow-root", "grid", "inline-grid", "contents", "list-item", "hidden"],
      /**
       * Floats
       * @see https://tailwindcss.com/docs/float
       */
      float: [{
        float: ["right", "left", "none", "start", "end"]
      }],
      /**
       * Clear
       * @see https://tailwindcss.com/docs/clear
       */
      clear: [{
        clear: ["left", "right", "both", "none", "start", "end"]
      }],
      /**
       * Isolation
       * @see https://tailwindcss.com/docs/isolation
       */
      isolation: ["isolate", "isolation-auto"],
      /**
       * Object Fit
       * @see https://tailwindcss.com/docs/object-fit
       */
      "object-fit": [{
        object: ["contain", "cover", "fill", "none", "scale-down"]
      }],
      /**
       * Object Position
       * @see https://tailwindcss.com/docs/object-position
       */
      "object-position": [{
        object: [...D(), it]
      }],
      /**
       * Overflow
       * @see https://tailwindcss.com/docs/overflow
       */
      overflow: [{
        overflow: X()
      }],
      /**
       * Overflow X
       * @see https://tailwindcss.com/docs/overflow
       */
      "overflow-x": [{
        "overflow-x": X()
      }],
      /**
       * Overflow Y
       * @see https://tailwindcss.com/docs/overflow
       */
      "overflow-y": [{
        "overflow-y": X()
      }],
      /**
       * Overscroll Behavior
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      overscroll: [{
        overscroll: Z()
      }],
      /**
       * Overscroll Behavior X
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      "overscroll-x": [{
        "overscroll-x": Z()
      }],
      /**
       * Overscroll Behavior Y
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      "overscroll-y": [{
        "overscroll-y": Z()
      }],
      /**
       * Position
       * @see https://tailwindcss.com/docs/position
       */
      position: ["static", "fixed", "absolute", "relative", "sticky"],
      /**
       * Top / Right / Bottom / Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      inset: [{
        inset: [b]
      }],
      /**
       * Right / Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      "inset-x": [{
        "inset-x": [b]
      }],
      /**
       * Top / Bottom
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      "inset-y": [{
        "inset-y": [b]
      }],
      /**
       * Start
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      start: [{
        start: [b]
      }],
      /**
       * End
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      end: [{
        end: [b]
      }],
      /**
       * Top
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      top: [{
        top: [b]
      }],
      /**
       * Right
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      right: [{
        right: [b]
      }],
      /**
       * Bottom
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      bottom: [{
        bottom: [b]
      }],
      /**
       * Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      left: [{
        left: [b]
      }],
      /**
       * Visibility
       * @see https://tailwindcss.com/docs/visibility
       */
      visibility: ["visible", "invisible", "collapse"],
      /**
       * Z-Index
       * @see https://tailwindcss.com/docs/z-index
       */
      z: [{
        z: ["auto", om, it]
      }],
      // Flexbox and Grid
      /**
       * Flex Basis
       * @see https://tailwindcss.com/docs/flex-basis
       */
      basis: [{
        basis: J()
      }],
      /**
       * Flex Direction
       * @see https://tailwindcss.com/docs/flex-direction
       */
      "flex-direction": [{
        flex: ["row", "row-reverse", "col", "col-reverse"]
      }],
      /**
       * Flex Wrap
       * @see https://tailwindcss.com/docs/flex-wrap
       */
      "flex-wrap": [{
        flex: ["wrap", "wrap-reverse", "nowrap"]
      }],
      /**
       * Flex
       * @see https://tailwindcss.com/docs/flex
       */
      flex: [{
        flex: ["1", "auto", "initial", "none", it]
      }],
      /**
       * Flex Grow
       * @see https://tailwindcss.com/docs/flex-grow
       */
      grow: [{
        grow: B()
      }],
      /**
       * Flex Shrink
       * @see https://tailwindcss.com/docs/flex-shrink
       */
      shrink: [{
        shrink: B()
      }],
      /**
       * Order
       * @see https://tailwindcss.com/docs/order
       */
      order: [{
        order: ["first", "last", "none", om, it]
      }],
      /**
       * Grid Template Columns
       * @see https://tailwindcss.com/docs/grid-template-columns
       */
      "grid-cols": [{
        "grid-cols": [am]
      }],
      /**
       * Grid Column Start / End
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-start-end": [{
        col: ["auto", {
          span: ["full", om, it]
        }, it]
      }],
      /**
       * Grid Column Start
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-start": [{
        "col-start": V()
      }],
      /**
       * Grid Column End
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-end": [{
        "col-end": V()
      }],
      /**
       * Grid Template Rows
       * @see https://tailwindcss.com/docs/grid-template-rows
       */
      "grid-rows": [{
        "grid-rows": [am]
      }],
      /**
       * Grid Row Start / End
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-start-end": [{
        row: ["auto", {
          span: [om, it]
        }, it]
      }],
      /**
       * Grid Row Start
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-start": [{
        "row-start": V()
      }],
      /**
       * Grid Row End
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-end": [{
        "row-end": V()
      }],
      /**
       * Grid Auto Flow
       * @see https://tailwindcss.com/docs/grid-auto-flow
       */
      "grid-flow": [{
        "grid-flow": ["row", "col", "dense", "row-dense", "col-dense"]
      }],
      /**
       * Grid Auto Columns
       * @see https://tailwindcss.com/docs/grid-auto-columns
       */
      "auto-cols": [{
        "auto-cols": ["auto", "min", "max", "fr", it]
      }],
      /**
       * Grid Auto Rows
       * @see https://tailwindcss.com/docs/grid-auto-rows
       */
      "auto-rows": [{
        "auto-rows": ["auto", "min", "max", "fr", it]
      }],
      /**
       * Gap
       * @see https://tailwindcss.com/docs/gap
       */
      gap: [{
        gap: [p]
      }],
      /**
       * Gap X
       * @see https://tailwindcss.com/docs/gap
       */
      "gap-x": [{
        "gap-x": [p]
      }],
      /**
       * Gap Y
       * @see https://tailwindcss.com/docs/gap
       */
      "gap-y": [{
        "gap-y": [p]
      }],
      /**
       * Justify Content
       * @see https://tailwindcss.com/docs/justify-content
       */
      "justify-content": [{
        justify: ["normal", ...H()]
      }],
      /**
       * Justify Items
       * @see https://tailwindcss.com/docs/justify-items
       */
      "justify-items": [{
        "justify-items": ["start", "end", "center", "stretch"]
      }],
      /**
       * Justify Self
       * @see https://tailwindcss.com/docs/justify-self
       */
      "justify-self": [{
        "justify-self": ["auto", "start", "end", "center", "stretch"]
      }],
      /**
       * Align Content
       * @see https://tailwindcss.com/docs/align-content
       */
      "align-content": [{
        content: ["normal", ...H(), "baseline"]
      }],
      /**
       * Align Items
       * @see https://tailwindcss.com/docs/align-items
       */
      "align-items": [{
        items: ["start", "end", "center", "baseline", "stretch"]
      }],
      /**
       * Align Self
       * @see https://tailwindcss.com/docs/align-self
       */
      "align-self": [{
        self: ["auto", "start", "end", "center", "stretch", "baseline"]
      }],
      /**
       * Place Content
       * @see https://tailwindcss.com/docs/place-content
       */
      "place-content": [{
        "place-content": [...H(), "baseline"]
      }],
      /**
       * Place Items
       * @see https://tailwindcss.com/docs/place-items
       */
      "place-items": [{
        "place-items": ["start", "end", "center", "baseline", "stretch"]
      }],
      /**
       * Place Self
       * @see https://tailwindcss.com/docs/place-self
       */
      "place-self": [{
        "place-self": ["auto", "start", "end", "center", "stretch"]
      }],
      // Spacing
      /**
       * Padding
       * @see https://tailwindcss.com/docs/padding
       */
      p: [{
        p: [$]
      }],
      /**
       * Padding X
       * @see https://tailwindcss.com/docs/padding
       */
      px: [{
        px: [$]
      }],
      /**
       * Padding Y
       * @see https://tailwindcss.com/docs/padding
       */
      py: [{
        py: [$]
      }],
      /**
       * Padding Start
       * @see https://tailwindcss.com/docs/padding
       */
      ps: [{
        ps: [$]
      }],
      /**
       * Padding End
       * @see https://tailwindcss.com/docs/padding
       */
      pe: [{
        pe: [$]
      }],
      /**
       * Padding Top
       * @see https://tailwindcss.com/docs/padding
       */
      pt: [{
        pt: [$]
      }],
      /**
       * Padding Right
       * @see https://tailwindcss.com/docs/padding
       */
      pr: [{
        pr: [$]
      }],
      /**
       * Padding Bottom
       * @see https://tailwindcss.com/docs/padding
       */
      pb: [{
        pb: [$]
      }],
      /**
       * Padding Left
       * @see https://tailwindcss.com/docs/padding
       */
      pl: [{
        pl: [$]
      }],
      /**
       * Margin
       * @see https://tailwindcss.com/docs/margin
       */
      m: [{
        m: [m]
      }],
      /**
       * Margin X
       * @see https://tailwindcss.com/docs/margin
       */
      mx: [{
        mx: [m]
      }],
      /**
       * Margin Y
       * @see https://tailwindcss.com/docs/margin
       */
      my: [{
        my: [m]
      }],
      /**
       * Margin Start
       * @see https://tailwindcss.com/docs/margin
       */
      ms: [{
        ms: [m]
      }],
      /**
       * Margin End
       * @see https://tailwindcss.com/docs/margin
       */
      me: [{
        me: [m]
      }],
      /**
       * Margin Top
       * @see https://tailwindcss.com/docs/margin
       */
      mt: [{
        mt: [m]
      }],
      /**
       * Margin Right
       * @see https://tailwindcss.com/docs/margin
       */
      mr: [{
        mr: [m]
      }],
      /**
       * Margin Bottom
       * @see https://tailwindcss.com/docs/margin
       */
      mb: [{
        mb: [m]
      }],
      /**
       * Margin Left
       * @see https://tailwindcss.com/docs/margin
       */
      ml: [{
        ml: [m]
      }],
      /**
       * Space Between X
       * @see https://tailwindcss.com/docs/space
       */
      "space-x": [{
        "space-x": [G]
      }],
      /**
       * Space Between X Reverse
       * @see https://tailwindcss.com/docs/space
       */
      "space-x-reverse": ["space-x-reverse"],
      /**
       * Space Between Y
       * @see https://tailwindcss.com/docs/space
       */
      "space-y": [{
        "space-y": [G]
      }],
      /**
       * Space Between Y Reverse
       * @see https://tailwindcss.com/docs/space
       */
      "space-y-reverse": ["space-y-reverse"],
      // Sizing
      /**
       * Width
       * @see https://tailwindcss.com/docs/width
       */
      w: [{
        w: ["auto", "min", "max", "fit", "svw", "lvw", "dvw", it, t]
      }],
      /**
       * Min-Width
       * @see https://tailwindcss.com/docs/min-width
       */
      "min-w": [{
        "min-w": [it, t, "min", "max", "fit"]
      }],
      /**
       * Max-Width
       * @see https://tailwindcss.com/docs/max-width
       */
      "max-w": [{
        "max-w": [it, t, "none", "full", "min", "max", "fit", "prose", {
          screen: [As]
        }, As]
      }],
      /**
       * Height
       * @see https://tailwindcss.com/docs/height
       */
      h: [{
        h: [it, t, "auto", "min", "max", "fit", "svh", "lvh", "dvh"]
      }],
      /**
       * Min-Height
       * @see https://tailwindcss.com/docs/min-height
       */
      "min-h": [{
        "min-h": [it, t, "min", "max", "fit", "svh", "lvh", "dvh"]
      }],
      /**
       * Max-Height
       * @see https://tailwindcss.com/docs/max-height
       */
      "max-h": [{
        "max-h": [it, t, "min", "max", "fit", "svh", "lvh", "dvh"]
      }],
      /**
       * Size
       * @see https://tailwindcss.com/docs/size
       */
      size: [{
        size: [it, t, "auto", "min", "max", "fit"]
      }],
      // Typography
      /**
       * Font Size
       * @see https://tailwindcss.com/docs/font-size
       */
      "font-size": [{
        text: ["base", As, Cs]
      }],
      /**
       * Font Smoothing
       * @see https://tailwindcss.com/docs/font-smoothing
       */
      "font-smoothing": ["antialiased", "subpixel-antialiased"],
      /**
       * Font Style
       * @see https://tailwindcss.com/docs/font-style
       */
      "font-style": ["italic", "not-italic"],
      /**
       * Font Weight
       * @see https://tailwindcss.com/docs/font-weight
       */
      "font-weight": [{
        font: ["thin", "extralight", "light", "normal", "medium", "semibold", "bold", "extrabold", "black", hw]
      }],
      /**
       * Font Family
       * @see https://tailwindcss.com/docs/font-family
       */
      "font-family": [{
        font: [am]
      }],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-normal": ["normal-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-ordinal": ["ordinal"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-slashed-zero": ["slashed-zero"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-figure": ["lining-nums", "oldstyle-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-spacing": ["proportional-nums", "tabular-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-fraction": ["diagonal-fractions", "stacked-fractions"],
      /**
       * Letter Spacing
       * @see https://tailwindcss.com/docs/letter-spacing
       */
      tracking: [{
        tracking: ["tighter", "tight", "normal", "wide", "wider", "widest", it]
      }],
      /**
       * Line Clamp
       * @see https://tailwindcss.com/docs/line-clamp
       */
      "line-clamp": [{
        "line-clamp": ["none", Af, hw]
      }],
      /**
       * Line Height
       * @see https://tailwindcss.com/docs/line-height
       */
      leading: [{
        leading: ["none", "tight", "snug", "normal", "relaxed", "loose", Da, it]
      }],
      /**
       * List Style Image
       * @see https://tailwindcss.com/docs/list-style-image
       */
      "list-image": [{
        "list-image": ["none", it]
      }],
      /**
       * List Style Type
       * @see https://tailwindcss.com/docs/list-style-type
       */
      "list-style-type": [{
        list: ["none", "disc", "decimal", it]
      }],
      /**
       * List Style Position
       * @see https://tailwindcss.com/docs/list-style-position
       */
      "list-style-position": [{
        list: ["inside", "outside"]
      }],
      /**
       * Placeholder Color
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/placeholder-color
       */
      "placeholder-color": [{
        placeholder: [e]
      }],
      /**
       * Placeholder Opacity
       * @see https://tailwindcss.com/docs/placeholder-opacity
       */
      "placeholder-opacity": [{
        "placeholder-opacity": [w]
      }],
      /**
       * Text Alignment
       * @see https://tailwindcss.com/docs/text-align
       */
      "text-alignment": [{
        text: ["left", "center", "right", "justify", "start", "end"]
      }],
      /**
       * Text Color
       * @see https://tailwindcss.com/docs/text-color
       */
      "text-color": [{
        text: [e]
      }],
      /**
       * Text Opacity
       * @see https://tailwindcss.com/docs/text-opacity
       */
      "text-opacity": [{
        "text-opacity": [w]
      }],
      /**
       * Text Decoration
       * @see https://tailwindcss.com/docs/text-decoration
       */
      "text-decoration": ["underline", "overline", "line-through", "no-underline"],
      /**
       * Text Decoration Style
       * @see https://tailwindcss.com/docs/text-decoration-style
       */
      "text-decoration-style": [{
        decoration: [...F(), "wavy"]
      }],
      /**
       * Text Decoration Thickness
       * @see https://tailwindcss.com/docs/text-decoration-thickness
       */
      "text-decoration-thickness": [{
        decoration: ["auto", "from-font", Da, Cs]
      }],
      /**
       * Text Underline Offset
       * @see https://tailwindcss.com/docs/text-underline-offset
       */
      "underline-offset": [{
        "underline-offset": ["auto", Da, it]
      }],
      /**
       * Text Decoration Color
       * @see https://tailwindcss.com/docs/text-decoration-color
       */
      "text-decoration-color": [{
        decoration: [e]
      }],
      /**
       * Text Transform
       * @see https://tailwindcss.com/docs/text-transform
       */
      "text-transform": ["uppercase", "lowercase", "capitalize", "normal-case"],
      /**
       * Text Overflow
       * @see https://tailwindcss.com/docs/text-overflow
       */
      "text-overflow": ["truncate", "text-ellipsis", "text-clip"],
      /**
       * Text Wrap
       * @see https://tailwindcss.com/docs/text-wrap
       */
      "text-wrap": [{
        text: ["wrap", "nowrap", "balance", "pretty"]
      }],
      /**
       * Text Indent
       * @see https://tailwindcss.com/docs/text-indent
       */
      indent: [{
        indent: I()
      }],
      /**
       * Vertical Alignment
       * @see https://tailwindcss.com/docs/vertical-align
       */
      "vertical-align": [{
        align: ["baseline", "top", "middle", "bottom", "text-top", "text-bottom", "sub", "super", it]
      }],
      /**
       * Whitespace
       * @see https://tailwindcss.com/docs/whitespace
       */
      whitespace: [{
        whitespace: ["normal", "nowrap", "pre", "pre-line", "pre-wrap", "break-spaces"]
      }],
      /**
       * Word Break
       * @see https://tailwindcss.com/docs/word-break
       */
      break: [{
        break: ["normal", "words", "all", "keep"]
      }],
      /**
       * Hyphens
       * @see https://tailwindcss.com/docs/hyphens
       */
      hyphens: [{
        hyphens: ["none", "manual", "auto"]
      }],
      /**
       * Content
       * @see https://tailwindcss.com/docs/content
       */
      content: [{
        content: ["none", it]
      }],
      // Backgrounds
      /**
       * Background Attachment
       * @see https://tailwindcss.com/docs/background-attachment
       */
      "bg-attachment": [{
        bg: ["fixed", "local", "scroll"]
      }],
      /**
       * Background Clip
       * @see https://tailwindcss.com/docs/background-clip
       */
      "bg-clip": [{
        "bg-clip": ["border", "padding", "content", "text"]
      }],
      /**
       * Background Opacity
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/background-opacity
       */
      "bg-opacity": [{
        "bg-opacity": [w]
      }],
      /**
       * Background Origin
       * @see https://tailwindcss.com/docs/background-origin
       */
      "bg-origin": [{
        "bg-origin": ["border", "padding", "content"]
      }],
      /**
       * Background Position
       * @see https://tailwindcss.com/docs/background-position
       */
      "bg-position": [{
        bg: [...D(), Gie]
      }],
      /**
       * Background Repeat
       * @see https://tailwindcss.com/docs/background-repeat
       */
      "bg-repeat": [{
        bg: ["no-repeat", {
          repeat: ["", "x", "y", "round", "space"]
        }]
      }],
      /**
       * Background Size
       * @see https://tailwindcss.com/docs/background-size
       */
      "bg-size": [{
        bg: ["auto", "cover", "contain", Hie]
      }],
      /**
       * Background Image
       * @see https://tailwindcss.com/docs/background-image
       */
      "bg-image": [{
        bg: ["none", {
          "gradient-to": ["t", "tr", "r", "br", "b", "bl", "l", "tl"]
        }, Bie]
      }],
      /**
       * Background Color
       * @see https://tailwindcss.com/docs/background-color
       */
      "bg-color": [{
        bg: [e]
      }],
      /**
       * Gradient Color Stops From Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-from-pos": [{
        from: [x]
      }],
      /**
       * Gradient Color Stops Via Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-via-pos": [{
        via: [x]
      }],
      /**
       * Gradient Color Stops To Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-to-pos": [{
        to: [x]
      }],
      /**
       * Gradient Color Stops From
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-from": [{
        from: [v]
      }],
      /**
       * Gradient Color Stops Via
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-via": [{
        via: [v]
      }],
      /**
       * Gradient Color Stops To
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-to": [{
        to: [v]
      }],
      // Borders
      /**
       * Border Radius
       * @see https://tailwindcss.com/docs/border-radius
       */
      rounded: [{
        rounded: [a]
      }],
      /**
       * Border Radius Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-s": [{
        "rounded-s": [a]
      }],
      /**
       * Border Radius End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-e": [{
        "rounded-e": [a]
      }],
      /**
       * Border Radius Top
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-t": [{
        "rounded-t": [a]
      }],
      /**
       * Border Radius Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-r": [{
        "rounded-r": [a]
      }],
      /**
       * Border Radius Bottom
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-b": [{
        "rounded-b": [a]
      }],
      /**
       * Border Radius Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-l": [{
        "rounded-l": [a]
      }],
      /**
       * Border Radius Start Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-ss": [{
        "rounded-ss": [a]
      }],
      /**
       * Border Radius Start End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-se": [{
        "rounded-se": [a]
      }],
      /**
       * Border Radius End End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-ee": [{
        "rounded-ee": [a]
      }],
      /**
       * Border Radius End Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-es": [{
        "rounded-es": [a]
      }],
      /**
       * Border Radius Top Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-tl": [{
        "rounded-tl": [a]
      }],
      /**
       * Border Radius Top Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-tr": [{
        "rounded-tr": [a]
      }],
      /**
       * Border Radius Bottom Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-br": [{
        "rounded-br": [a]
      }],
      /**
       * Border Radius Bottom Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-bl": [{
        "rounded-bl": [a]
      }],
      /**
       * Border Width
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w": [{
        border: [s]
      }],
      /**
       * Border Width X
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-x": [{
        "border-x": [s]
      }],
      /**
       * Border Width Y
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-y": [{
        "border-y": [s]
      }],
      /**
       * Border Width Start
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-s": [{
        "border-s": [s]
      }],
      /**
       * Border Width End
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-e": [{
        "border-e": [s]
      }],
      /**
       * Border Width Top
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-t": [{
        "border-t": [s]
      }],
      /**
       * Border Width Right
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-r": [{
        "border-r": [s]
      }],
      /**
       * Border Width Bottom
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-b": [{
        "border-b": [s]
      }],
      /**
       * Border Width Left
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-l": [{
        "border-l": [s]
      }],
      /**
       * Border Opacity
       * @see https://tailwindcss.com/docs/border-opacity
       */
      "border-opacity": [{
        "border-opacity": [w]
      }],
      /**
       * Border Style
       * @see https://tailwindcss.com/docs/border-style
       */
      "border-style": [{
        border: [...F(), "hidden"]
      }],
      /**
       * Divide Width X
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-x": [{
        "divide-x": [s]
      }],
      /**
       * Divide Width X Reverse
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-x-reverse": ["divide-x-reverse"],
      /**
       * Divide Width Y
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-y": [{
        "divide-y": [s]
      }],
      /**
       * Divide Width Y Reverse
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-y-reverse": ["divide-y-reverse"],
      /**
       * Divide Opacity
       * @see https://tailwindcss.com/docs/divide-opacity
       */
      "divide-opacity": [{
        "divide-opacity": [w]
      }],
      /**
       * Divide Style
       * @see https://tailwindcss.com/docs/divide-style
       */
      "divide-style": [{
        divide: F()
      }],
      /**
       * Border Color
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color": [{
        border: [o]
      }],
      /**
       * Border Color X
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-x": [{
        "border-x": [o]
      }],
      /**
       * Border Color Y
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-y": [{
        "border-y": [o]
      }],
      /**
       * Border Color S
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-s": [{
        "border-s": [o]
      }],
      /**
       * Border Color E
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-e": [{
        "border-e": [o]
      }],
      /**
       * Border Color Top
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-t": [{
        "border-t": [o]
      }],
      /**
       * Border Color Right
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-r": [{
        "border-r": [o]
      }],
      /**
       * Border Color Bottom
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-b": [{
        "border-b": [o]
      }],
      /**
       * Border Color Left
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-l": [{
        "border-l": [o]
      }],
      /**
       * Divide Color
       * @see https://tailwindcss.com/docs/divide-color
       */
      "divide-color": [{
        divide: [o]
      }],
      /**
       * Outline Style
       * @see https://tailwindcss.com/docs/outline-style
       */
      "outline-style": [{
        outline: ["", ...F()]
      }],
      /**
       * Outline Offset
       * @see https://tailwindcss.com/docs/outline-offset
       */
      "outline-offset": [{
        "outline-offset": [Da, it]
      }],
      /**
       * Outline Width
       * @see https://tailwindcss.com/docs/outline-width
       */
      "outline-w": [{
        outline: [Da, Cs]
      }],
      /**
       * Outline Color
       * @see https://tailwindcss.com/docs/outline-color
       */
      "outline-color": [{
        outline: [e]
      }],
      /**
       * Ring Width
       * @see https://tailwindcss.com/docs/ring-width
       */
      "ring-w": [{
        ring: te()
      }],
      /**
       * Ring Width Inset
       * @see https://tailwindcss.com/docs/ring-width
       */
      "ring-w-inset": ["ring-inset"],
      /**
       * Ring Color
       * @see https://tailwindcss.com/docs/ring-color
       */
      "ring-color": [{
        ring: [e]
      }],
      /**
       * Ring Opacity
       * @see https://tailwindcss.com/docs/ring-opacity
       */
      "ring-opacity": [{
        "ring-opacity": [w]
      }],
      /**
       * Ring Offset Width
       * @see https://tailwindcss.com/docs/ring-offset-width
       */
      "ring-offset-w": [{
        "ring-offset": [Da, Cs]
      }],
      /**
       * Ring Offset Color
       * @see https://tailwindcss.com/docs/ring-offset-color
       */
      "ring-offset-color": [{
        "ring-offset": [e]
      }],
      // Effects
      /**
       * Box Shadow
       * @see https://tailwindcss.com/docs/box-shadow
       */
      shadow: [{
        shadow: ["", "inner", "none", As, Xie]
      }],
      /**
       * Box Shadow Color
       * @see https://tailwindcss.com/docs/box-shadow-color
       */
      "shadow-color": [{
        shadow: [am]
      }],
      /**
       * Opacity
       * @see https://tailwindcss.com/docs/opacity
       */
      opacity: [{
        opacity: [w]
      }],
      /**
       * Mix Blend Mode
       * @see https://tailwindcss.com/docs/mix-blend-mode
       */
      "mix-blend": [{
        "mix-blend": [...R(), "plus-lighter", "plus-darker"]
      }],
      /**
       * Background Blend Mode
       * @see https://tailwindcss.com/docs/background-blend-mode
       */
      "bg-blend": [{
        "bg-blend": R()
      }],
      // Filters
      /**
       * Filter
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/filter
       */
      filter: [{
        filter: ["", "none"]
      }],
      /**
       * Blur
       * @see https://tailwindcss.com/docs/blur
       */
      blur: [{
        blur: [r]
      }],
      /**
       * Brightness
       * @see https://tailwindcss.com/docs/brightness
       */
      brightness: [{
        brightness: [n]
      }],
      /**
       * Contrast
       * @see https://tailwindcss.com/docs/contrast
       */
      contrast: [{
        contrast: [l]
      }],
      /**
       * Drop Shadow
       * @see https://tailwindcss.com/docs/drop-shadow
       */
      "drop-shadow": [{
        "drop-shadow": ["", "none", As, it]
      }],
      /**
       * Grayscale
       * @see https://tailwindcss.com/docs/grayscale
       */
      grayscale: [{
        grayscale: [c]
      }],
      /**
       * Hue Rotate
       * @see https://tailwindcss.com/docs/hue-rotate
       */
      "hue-rotate": [{
        "hue-rotate": [u]
      }],
      /**
       * Invert
       * @see https://tailwindcss.com/docs/invert
       */
      invert: [{
        invert: [f]
      }],
      /**
       * Saturate
       * @see https://tailwindcss.com/docs/saturate
       */
      saturate: [{
        saturate: [E]
      }],
      /**
       * Sepia
       * @see https://tailwindcss.com/docs/sepia
       */
      sepia: [{
        sepia: [h]
      }],
      /**
       * Backdrop Filter
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/backdrop-filter
       */
      "backdrop-filter": [{
        "backdrop-filter": ["", "none"]
      }],
      /**
       * Backdrop Blur
       * @see https://tailwindcss.com/docs/backdrop-blur
       */
      "backdrop-blur": [{
        "backdrop-blur": [r]
      }],
      /**
       * Backdrop Brightness
       * @see https://tailwindcss.com/docs/backdrop-brightness
       */
      "backdrop-brightness": [{
        "backdrop-brightness": [n]
      }],
      /**
       * Backdrop Contrast
       * @see https://tailwindcss.com/docs/backdrop-contrast
       */
      "backdrop-contrast": [{
        "backdrop-contrast": [l]
      }],
      /**
       * Backdrop Grayscale
       * @see https://tailwindcss.com/docs/backdrop-grayscale
       */
      "backdrop-grayscale": [{
        "backdrop-grayscale": [c]
      }],
      /**
       * Backdrop Hue Rotate
       * @see https://tailwindcss.com/docs/backdrop-hue-rotate
       */
      "backdrop-hue-rotate": [{
        "backdrop-hue-rotate": [u]
      }],
      /**
       * Backdrop Invert
       * @see https://tailwindcss.com/docs/backdrop-invert
       */
      "backdrop-invert": [{
        "backdrop-invert": [f]
      }],
      /**
       * Backdrop Opacity
       * @see https://tailwindcss.com/docs/backdrop-opacity
       */
      "backdrop-opacity": [{
        "backdrop-opacity": [w]
      }],
      /**
       * Backdrop Saturate
       * @see https://tailwindcss.com/docs/backdrop-saturate
       */
      "backdrop-saturate": [{
        "backdrop-saturate": [E]
      }],
      /**
       * Backdrop Sepia
       * @see https://tailwindcss.com/docs/backdrop-sepia
       */
      "backdrop-sepia": [{
        "backdrop-sepia": [h]
      }],
      // Tables
      /**
       * Border Collapse
       * @see https://tailwindcss.com/docs/border-collapse
       */
      "border-collapse": [{
        border: ["collapse", "separate"]
      }],
      /**
       * Border Spacing
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing": [{
        "border-spacing": [i]
      }],
      /**
       * Border Spacing X
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing-x": [{
        "border-spacing-x": [i]
      }],
      /**
       * Border Spacing Y
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing-y": [{
        "border-spacing-y": [i]
      }],
      /**
       * Table Layout
       * @see https://tailwindcss.com/docs/table-layout
       */
      "table-layout": [{
        table: ["auto", "fixed"]
      }],
      /**
       * Caption Side
       * @see https://tailwindcss.com/docs/caption-side
       */
      caption: [{
        caption: ["top", "bottom"]
      }],
      // Transitions and Animation
      /**
       * Tranisition Property
       * @see https://tailwindcss.com/docs/transition-property
       */
      transition: [{
        transition: ["none", "all", "", "colors", "opacity", "shadow", "transform", it]
      }],
      /**
       * Transition Duration
       * @see https://tailwindcss.com/docs/transition-duration
       */
      duration: [{
        duration: d()
      }],
      /**
       * Transition Timing Function
       * @see https://tailwindcss.com/docs/transition-timing-function
       */
      ease: [{
        ease: ["linear", "in", "out", "in-out", it]
      }],
      /**
       * Transition Delay
       * @see https://tailwindcss.com/docs/transition-delay
       */
      delay: [{
        delay: d()
      }],
      /**
       * Animation
       * @see https://tailwindcss.com/docs/animation
       */
      animate: [{
        animate: ["none", "spin", "ping", "pulse", "bounce", it]
      }],
      // Transforms
      /**
       * Transform
       * @see https://tailwindcss.com/docs/transform
       */
      transform: [{
        transform: ["", "gpu", "none"]
      }],
      /**
       * Scale
       * @see https://tailwindcss.com/docs/scale
       */
      scale: [{
        scale: [S]
      }],
      /**
       * Scale X
       * @see https://tailwindcss.com/docs/scale
       */
      "scale-x": [{
        "scale-x": [S]
      }],
      /**
       * Scale Y
       * @see https://tailwindcss.com/docs/scale
       */
      "scale-y": [{
        "scale-y": [S]
      }],
      /**
       * Rotate
       * @see https://tailwindcss.com/docs/rotate
       */
      rotate: [{
        rotate: [om, it]
      }],
      /**
       * Translate X
       * @see https://tailwindcss.com/docs/translate
       */
      "translate-x": [{
        "translate-x": [Q]
      }],
      /**
       * Translate Y
       * @see https://tailwindcss.com/docs/translate
       */
      "translate-y": [{
        "translate-y": [Q]
      }],
      /**
       * Skew X
       * @see https://tailwindcss.com/docs/skew
       */
      "skew-x": [{
        "skew-x": [U]
      }],
      /**
       * Skew Y
       * @see https://tailwindcss.com/docs/skew
       */
      "skew-y": [{
        "skew-y": [U]
      }],
      /**
       * Transform Origin
       * @see https://tailwindcss.com/docs/transform-origin
       */
      "transform-origin": [{
        origin: ["center", "top", "top-right", "right", "bottom-right", "bottom", "bottom-left", "left", "top-left", it]
      }],
      // Interactivity
      /**
       * Accent Color
       * @see https://tailwindcss.com/docs/accent-color
       */
      accent: [{
        accent: ["auto", e]
      }],
      /**
       * Appearance
       * @see https://tailwindcss.com/docs/appearance
       */
      appearance: [{
        appearance: ["none", "auto"]
      }],
      /**
       * Cursor
       * @see https://tailwindcss.com/docs/cursor
       */
      cursor: [{
        cursor: ["auto", "default", "pointer", "wait", "text", "move", "help", "not-allowed", "none", "context-menu", "progress", "cell", "crosshair", "vertical-text", "alias", "copy", "no-drop", "grab", "grabbing", "all-scroll", "col-resize", "row-resize", "n-resize", "e-resize", "s-resize", "w-resize", "ne-resize", "nw-resize", "se-resize", "sw-resize", "ew-resize", "ns-resize", "nesw-resize", "nwse-resize", "zoom-in", "zoom-out", it]
      }],
      /**
       * Caret Color
       * @see https://tailwindcss.com/docs/just-in-time-mode#caret-color-utilities
       */
      "caret-color": [{
        caret: [e]
      }],
      /**
       * Pointer Events
       * @see https://tailwindcss.com/docs/pointer-events
       */
      "pointer-events": [{
        "pointer-events": ["none", "auto"]
      }],
      /**
       * Resize
       * @see https://tailwindcss.com/docs/resize
       */
      resize: [{
        resize: ["none", "y", "x", ""]
      }],
      /**
       * Scroll Behavior
       * @see https://tailwindcss.com/docs/scroll-behavior
       */
      "scroll-behavior": [{
        scroll: ["auto", "smooth"]
      }],
      /**
       * Scroll Margin
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-m": [{
        "scroll-m": I()
      }],
      /**
       * Scroll Margin X
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mx": [{
        "scroll-mx": I()
      }],
      /**
       * Scroll Margin Y
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-my": [{
        "scroll-my": I()
      }],
      /**
       * Scroll Margin Start
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-ms": [{
        "scroll-ms": I()
      }],
      /**
       * Scroll Margin End
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-me": [{
        "scroll-me": I()
      }],
      /**
       * Scroll Margin Top
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mt": [{
        "scroll-mt": I()
      }],
      /**
       * Scroll Margin Right
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mr": [{
        "scroll-mr": I()
      }],
      /**
       * Scroll Margin Bottom
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mb": [{
        "scroll-mb": I()
      }],
      /**
       * Scroll Margin Left
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-ml": [{
        "scroll-ml": I()
      }],
      /**
       * Scroll Padding
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-p": [{
        "scroll-p": I()
      }],
      /**
       * Scroll Padding X
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-px": [{
        "scroll-px": I()
      }],
      /**
       * Scroll Padding Y
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-py": [{
        "scroll-py": I()
      }],
      /**
       * Scroll Padding Start
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-ps": [{
        "scroll-ps": I()
      }],
      /**
       * Scroll Padding End
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pe": [{
        "scroll-pe": I()
      }],
      /**
       * Scroll Padding Top
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pt": [{
        "scroll-pt": I()
      }],
      /**
       * Scroll Padding Right
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pr": [{
        "scroll-pr": I()
      }],
      /**
       * Scroll Padding Bottom
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pb": [{
        "scroll-pb": I()
      }],
      /**
       * Scroll Padding Left
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pl": [{
        "scroll-pl": I()
      }],
      /**
       * Scroll Snap Align
       * @see https://tailwindcss.com/docs/scroll-snap-align
       */
      "snap-align": [{
        snap: ["start", "end", "center", "align-none"]
      }],
      /**
       * Scroll Snap Stop
       * @see https://tailwindcss.com/docs/scroll-snap-stop
       */
      "snap-stop": [{
        snap: ["normal", "always"]
      }],
      /**
       * Scroll Snap Type
       * @see https://tailwindcss.com/docs/scroll-snap-type
       */
      "snap-type": [{
        snap: ["none", "x", "y", "both"]
      }],
      /**
       * Scroll Snap Type Strictness
       * @see https://tailwindcss.com/docs/scroll-snap-type
       */
      "snap-strictness": [{
        snap: ["mandatory", "proximity"]
      }],
      /**
       * Touch Action
       * @see https://tailwindcss.com/docs/touch-action
       */
      touch: [{
        touch: ["auto", "none", "manipulation"]
      }],
      /**
       * Touch Action X
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-x": [{
        "touch-pan": ["x", "left", "right"]
      }],
      /**
       * Touch Action Y
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-y": [{
        "touch-pan": ["y", "up", "down"]
      }],
      /**
       * Touch Action Pinch Zoom
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-pz": ["touch-pinch-zoom"],
      /**
       * User Select
       * @see https://tailwindcss.com/docs/user-select
       */
      select: [{
        select: ["none", "text", "all", "auto"]
      }],
      /**
       * Will Change
       * @see https://tailwindcss.com/docs/will-change
       */
      "will-change": [{
        "will-change": ["auto", "scroll", "contents", "transform", it]
      }],
      // SVG
      /**
       * Fill
       * @see https://tailwindcss.com/docs/fill
       */
      fill: [{
        fill: [e, "none"]
      }],
      /**
       * Stroke Width
       * @see https://tailwindcss.com/docs/stroke-width
       */
      "stroke-w": [{
        stroke: [Da, Cs, hw]
      }],
      /**
       * Stroke
       * @see https://tailwindcss.com/docs/stroke
       */
      stroke: [{
        stroke: [e, "none"]
      }],
      // Accessibility
      /**
       * Screen Readers
       * @see https://tailwindcss.com/docs/screen-readers
       */
      sr: ["sr-only", "not-sr-only"],
      /**
       * Forced Color Adjust
       * @see https://tailwindcss.com/docs/forced-color-adjust
       */
      "forced-color-adjust": [{
        "forced-color-adjust": ["auto", "none"]
      }]
    },
    conflictingClassGroups: {
      overflow: ["overflow-x", "overflow-y"],
      overscroll: ["overscroll-x", "overscroll-y"],
      inset: ["inset-x", "inset-y", "start", "end", "top", "right", "bottom", "left"],
      "inset-x": ["right", "left"],
      "inset-y": ["top", "bottom"],
      flex: ["basis", "grow", "shrink"],
      gap: ["gap-x", "gap-y"],
      p: ["px", "py", "ps", "pe", "pt", "pr", "pb", "pl"],
      px: ["pr", "pl"],
      py: ["pt", "pb"],
      m: ["mx", "my", "ms", "me", "mt", "mr", "mb", "ml"],
      mx: ["mr", "ml"],
      my: ["mt", "mb"],
      size: ["w", "h"],
      "font-size": ["leading"],
      "fvn-normal": ["fvn-ordinal", "fvn-slashed-zero", "fvn-figure", "fvn-spacing", "fvn-fraction"],
      "fvn-ordinal": ["fvn-normal"],
      "fvn-slashed-zero": ["fvn-normal"],
      "fvn-figure": ["fvn-normal"],
      "fvn-spacing": ["fvn-normal"],
      "fvn-fraction": ["fvn-normal"],
      "line-clamp": ["display", "overflow"],
      rounded: ["rounded-s", "rounded-e", "rounded-t", "rounded-r", "rounded-b", "rounded-l", "rounded-ss", "rounded-se", "rounded-ee", "rounded-es", "rounded-tl", "rounded-tr", "rounded-br", "rounded-bl"],
      "rounded-s": ["rounded-ss", "rounded-es"],
      "rounded-e": ["rounded-se", "rounded-ee"],
      "rounded-t": ["rounded-tl", "rounded-tr"],
      "rounded-r": ["rounded-tr", "rounded-br"],
      "rounded-b": ["rounded-br", "rounded-bl"],
      "rounded-l": ["rounded-tl", "rounded-bl"],
      "border-spacing": ["border-spacing-x", "border-spacing-y"],
      "border-w": ["border-w-s", "border-w-e", "border-w-t", "border-w-r", "border-w-b", "border-w-l"],
      "border-w-x": ["border-w-r", "border-w-l"],
      "border-w-y": ["border-w-t", "border-w-b"],
      "border-color": ["border-color-s", "border-color-e", "border-color-t", "border-color-r", "border-color-b", "border-color-l"],
      "border-color-x": ["border-color-r", "border-color-l"],
      "border-color-y": ["border-color-t", "border-color-b"],
      "scroll-m": ["scroll-mx", "scroll-my", "scroll-ms", "scroll-me", "scroll-mt", "scroll-mr", "scroll-mb", "scroll-ml"],
      "scroll-mx": ["scroll-mr", "scroll-ml"],
      "scroll-my": ["scroll-mt", "scroll-mb"],
      "scroll-p": ["scroll-px", "scroll-py", "scroll-ps", "scroll-pe", "scroll-pt", "scroll-pr", "scroll-pb", "scroll-pl"],
      "scroll-px": ["scroll-pr", "scroll-pl"],
      "scroll-py": ["scroll-pt", "scroll-pb"],
      touch: ["touch-x", "touch-y", "touch-pz"],
      "touch-x": ["touch"],
      "touch-y": ["touch"],
      "touch-pz": ["touch"]
    },
    conflictingClassGroupModifiers: {
      "font-size": ["leading"]
    }
  };
}, ese = /* @__PURE__ */ Mie(Zie), tse = ({
  onClick: e,
  className: t,
  size: r = "md"
}) => /* @__PURE__ */ q(
  "button",
  {
    onClick: e,
    className: ese(
      "flex items-center justify-center rounded-full bg-black/40 text-white/60 transition-all hover:bg-black/70 hover:text-white",
      {
        sm: "h-5 w-5 text-sm",
        md: "h-7 w-7 text-md",
        lg: "h-9 w-9 text-xl"
      }[r],
      t
    ),
    children: /* @__PURE__ */ q(vS, { icon: Zne })
  }
);
var wS = Jh(), nt = (e) => Kh(e, wS), kS = Jh();
nt.write = (e) => Kh(e, kS);
var H1 = Jh();
nt.onStart = (e) => Kh(e, H1);
var $S = Jh();
nt.onFrame = (e) => Kh(e, $S);
var OS = Jh();
nt.onFinish = (e) => Kh(e, OS);
var _f = [];
nt.setTimeout = (e, t) => {
  const r = nt.now() + t, n = () => {
    const a = _f.findIndex((i) => i.cancel == n);
    ~a && _f.splice(a, 1), Ol -= ~a ? 1 : 0;
  }, o = { time: r, handler: e, cancel: n };
  return _f.splice($L(r), 0, o), Ol += 1, OL(), o;
};
var $L = (e) => ~(~_f.findIndex((t) => t.time > e) || ~_f.length);
nt.cancel = (e) => {
  H1.delete(e), $S.delete(e), OS.delete(e), wS.delete(e), kS.delete(e);
};
nt.sync = (e) => {
  v5 = !0, nt.batchedUpdates(e), v5 = !1;
};
nt.throttle = (e) => {
  let t;
  function r() {
    try {
      e(...t);
    } finally {
      t = null;
    }
  }
  function n(...o) {
    t = o, nt.onStart(r);
  }
  return n.handler = e, n.cancel = () => {
    H1.delete(r), t = null;
  }, n;
};
var ES = typeof window < "u" ? window.requestAnimationFrame : (
  // eslint-disable-next-line @typescript-eslint/no-empty-function
  () => {
  }
);
nt.use = (e) => ES = e;
nt.now = typeof performance < "u" ? () => performance.now() : Date.now;
nt.batchedUpdates = (e) => e();
nt.catch = console.error;
nt.frameLoop = "always";
nt.advance = () => {
  nt.frameLoop !== "demand" ? console.warn(
    "Cannot call the manual advancement of rafz whilst frameLoop is not set as demand"
  ) : SL();
};
var $l = -1, Ol = 0, v5 = !1;
function Kh(e, t) {
  v5 ? (t.delete(e), e(0)) : (t.add(e), OL());
}
function OL() {
  $l < 0 && ($l = 0, nt.frameLoop !== "demand" && ES(EL));
}
function rse() {
  $l = -1;
}
function EL() {
  ~$l && (ES(EL), nt.batchedUpdates(SL));
}
function SL() {
  const e = $l;
  $l = nt.now();
  const t = $L($l);
  if (t && (PL(_f.splice(0, t), (r) => r.handler()), Ol -= t), !Ol) {
    rse();
    return;
  }
  H1.flush(), wS.flush(e ? Math.min(64, $l - e) : 16.667), $S.flush(), kS.flush(), OS.flush();
}
function Jh() {
  let e = /* @__PURE__ */ new Set(), t = e;
  return {
    add(r) {
      Ol += t == e && !e.has(r) ? 1 : 0, e.add(r);
    },
    delete(r) {
      return Ol -= t == e && e.has(r) ? 1 : 0, e.delete(r);
    },
    flush(r) {
      t.size && (e = /* @__PURE__ */ new Set(), Ol -= t.size, PL(t, (n) => n(r) && e.add(n)), Ol += e.size, t = e);
    }
  };
}
function PL(e, t) {
  e.forEach((r) => {
    try {
      t(r);
    } catch (n) {
      nt.catch(n);
    }
  });
}
var nse = Object.defineProperty, ose = (e, t) => {
  for (var r in t)
    nse(e, r, { get: t[r], enumerable: !0 });
}, Ro = {};
ose(Ro, {
  assign: () => ise,
  colors: () => Il,
  createStringInterpolator: () => PS,
  skipAnimation: () => AL,
  to: () => CL,
  willAdvance: () => CS
});
function x5() {
}
var ase = (e, t, r) => Object.defineProperty(e, t, { value: r, writable: !0, configurable: !0 }), Ee = {
  arr: Array.isArray,
  obj: (e) => !!e && e.constructor.name === "Object",
  fun: (e) => typeof e == "function",
  str: (e) => typeof e == "string",
  num: (e) => typeof e == "number",
  und: (e) => e === void 0
};
function ni(e, t) {
  if (Ee.arr(e)) {
    if (!Ee.arr(t) || e.length !== t.length) return !1;
    for (let r = 0; r < e.length; r++)
      if (e[r] !== t[r]) return !1;
    return !0;
  }
  return e === t;
}
var kt = (e, t) => e.forEach(t);
function Na(e, t, r) {
  if (Ee.arr(e)) {
    for (let n = 0; n < e.length; n++)
      t.call(r, e[n], `${n}`);
    return;
  }
  for (const n in e)
    e.hasOwnProperty(n) && t.call(r, e[n], n);
}
var On = (e) => Ee.und(e) ? [] : Ee.arr(e) ? e : [e];
function hg(e, t) {
  if (e.size) {
    const r = Array.from(e);
    e.clear(), kt(r, t);
  }
}
var Jm = (e, ...t) => hg(e, (r) => r(...t)), SS = () => typeof window > "u" || !window.navigator || /ServerSideRendering|^Deno\//.test(window.navigator.userAgent), PS, CL, Il = null, AL = !1, CS = x5, ise = (e) => {
  e.to && (CL = e.to), e.now && (nt.now = e.now), e.colors !== void 0 && (Il = e.colors), e.skipAnimation != null && (AL = e.skipAnimation), e.createStringInterpolator && (PS = e.createStringInterpolator), e.requestAnimationFrame && nt.use(e.requestAnimationFrame), e.batchedUpdates && (nt.batchedUpdates = e.batchedUpdates), e.willAdvance && (CS = e.willAdvance), e.frameLoop && (nt.frameLoop = e.frameLoop);
}, bg = /* @__PURE__ */ new Set(), bo = [], bw = [], Tv = 0, G1 = {
  get idle() {
    return !bg.size && !bo.length;
  },
  /** Advance the given animation on every frame until idle. */
  start(e) {
    Tv > e.priority ? (bg.add(e), nt.onStart(sse)) : (_L(e), nt(w5));
  },
  /** Advance all animations by the given time. */
  advance: w5,
  /** Call this when an animation's priority changes. */
  sort(e) {
    if (Tv)
      nt.onFrame(() => G1.sort(e));
    else {
      const t = bo.indexOf(e);
      ~t && (bo.splice(t, 1), NL(e));
    }
  },
  /**
   * Clear all animations. For testing purposes.
   *
   * ☠️ Never call this from within the frameloop.
   */
  clear() {
    bo = [], bg.clear();
  }
};
function sse() {
  bg.forEach(_L), bg.clear(), nt(w5);
}
function _L(e) {
  bo.includes(e) || NL(e);
}
function NL(e) {
  bo.splice(
    lse(bo, (t) => t.priority > e.priority),
    0,
    e
  );
}
function w5(e) {
  const t = bw;
  for (let r = 0; r < bo.length; r++) {
    const n = bo[r];
    Tv = n.priority, n.idle || (CS(n), n.advance(e), n.idle || t.push(n));
  }
  return Tv = 0, bw = bo, bw.length = 0, bo = t, bo.length > 0;
}
function lse(e, t) {
  const r = e.findIndex(t);
  return r < 0 ? e.length : r;
}
var cse = {
  transparent: 0,
  aliceblue: 4042850303,
  antiquewhite: 4209760255,
  aqua: 16777215,
  aquamarine: 2147472639,
  azure: 4043309055,
  beige: 4126530815,
  bisque: 4293182719,
  black: 255,
  blanchedalmond: 4293643775,
  blue: 65535,
  blueviolet: 2318131967,
  brown: 2771004159,
  burlywood: 3736635391,
  burntsienna: 3934150143,
  cadetblue: 1604231423,
  chartreuse: 2147418367,
  chocolate: 3530104575,
  coral: 4286533887,
  cornflowerblue: 1687547391,
  cornsilk: 4294499583,
  crimson: 3692313855,
  cyan: 16777215,
  darkblue: 35839,
  darkcyan: 9145343,
  darkgoldenrod: 3095792639,
  darkgray: 2846468607,
  darkgreen: 6553855,
  darkgrey: 2846468607,
  darkkhaki: 3182914559,
  darkmagenta: 2332068863,
  darkolivegreen: 1433087999,
  darkorange: 4287365375,
  darkorchid: 2570243327,
  darkred: 2332033279,
  darksalmon: 3918953215,
  darkseagreen: 2411499519,
  darkslateblue: 1211993087,
  darkslategray: 793726975,
  darkslategrey: 793726975,
  darkturquoise: 13554175,
  darkviolet: 2483082239,
  deeppink: 4279538687,
  deepskyblue: 12582911,
  dimgray: 1768516095,
  dimgrey: 1768516095,
  dodgerblue: 512819199,
  firebrick: 2988581631,
  floralwhite: 4294635775,
  forestgreen: 579543807,
  fuchsia: 4278255615,
  gainsboro: 3705462015,
  ghostwhite: 4177068031,
  gold: 4292280575,
  goldenrod: 3668254975,
  gray: 2155905279,
  green: 8388863,
  greenyellow: 2919182335,
  grey: 2155905279,
  honeydew: 4043305215,
  hotpink: 4285117695,
  indianred: 3445382399,
  indigo: 1258324735,
  ivory: 4294963455,
  khaki: 4041641215,
  lavender: 3873897215,
  lavenderblush: 4293981695,
  lawngreen: 2096890111,
  lemonchiffon: 4294626815,
  lightblue: 2916673279,
  lightcoral: 4034953471,
  lightcyan: 3774873599,
  lightgoldenrodyellow: 4210742015,
  lightgray: 3553874943,
  lightgreen: 2431553791,
  lightgrey: 3553874943,
  lightpink: 4290167295,
  lightsalmon: 4288707327,
  lightseagreen: 548580095,
  lightskyblue: 2278488831,
  lightslategray: 2005441023,
  lightslategrey: 2005441023,
  lightsteelblue: 2965692159,
  lightyellow: 4294959359,
  lime: 16711935,
  limegreen: 852308735,
  linen: 4210091775,
  magenta: 4278255615,
  maroon: 2147483903,
  mediumaquamarine: 1724754687,
  mediumblue: 52735,
  mediumorchid: 3126187007,
  mediumpurple: 2473647103,
  mediumseagreen: 1018393087,
  mediumslateblue: 2070474495,
  mediumspringgreen: 16423679,
  mediumturquoise: 1221709055,
  mediumvioletred: 3340076543,
  midnightblue: 421097727,
  mintcream: 4127193855,
  mistyrose: 4293190143,
  moccasin: 4293178879,
  navajowhite: 4292783615,
  navy: 33023,
  oldlace: 4260751103,
  olive: 2155872511,
  olivedrab: 1804477439,
  orange: 4289003775,
  orangered: 4282712319,
  orchid: 3664828159,
  palegoldenrod: 4008225535,
  palegreen: 2566625535,
  paleturquoise: 2951671551,
  palevioletred: 3681588223,
  papayawhip: 4293907967,
  peachpuff: 4292524543,
  peru: 3448061951,
  pink: 4290825215,
  plum: 3718307327,
  powderblue: 2967529215,
  purple: 2147516671,
  rebeccapurple: 1714657791,
  red: 4278190335,
  rosybrown: 3163525119,
  royalblue: 1097458175,
  saddlebrown: 2336560127,
  salmon: 4202722047,
  sandybrown: 4104413439,
  seagreen: 780883967,
  seashell: 4294307583,
  sienna: 2689740287,
  silver: 3233857791,
  skyblue: 2278484991,
  slateblue: 1784335871,
  slategray: 1887473919,
  slategrey: 1887473919,
  snow: 4294638335,
  springgreen: 16744447,
  steelblue: 1182971135,
  tan: 3535047935,
  teal: 8421631,
  thistle: 3636451583,
  tomato: 4284696575,
  turquoise: 1088475391,
  violet: 4001558271,
  wheat: 4125012991,
  white: 4294967295,
  whitesmoke: 4126537215,
  yellow: 4294902015,
  yellowgreen: 2597139199
}, To = "[-+]?\\d*\\.?\\d+", Mv = To + "%";
function q1(...e) {
  return "\\(\\s*(" + e.join(")\\s*,\\s*(") + ")\\s*\\)";
}
var use = new RegExp("rgb" + q1(To, To, To)), fse = new RegExp("rgba" + q1(To, To, To, To)), dse = new RegExp("hsl" + q1(To, Mv, Mv)), pse = new RegExp(
  "hsla" + q1(To, Mv, Mv, To)
), mse = /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/, gse = /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/, hse = /^#([0-9a-fA-F]{6})$/, bse = /^#([0-9a-fA-F]{8})$/;
function yse(e) {
  let t;
  return typeof e == "number" ? e >>> 0 === e && e >= 0 && e <= 4294967295 ? e : null : (t = hse.exec(e)) ? parseInt(t[1] + "ff", 16) >>> 0 : Il && Il[e] !== void 0 ? Il[e] : (t = use.exec(e)) ? (Lu(t[1]) << 24 | // r
  Lu(t[2]) << 16 | // g
  Lu(t[3]) << 8 | // b
  255) >>> // a
  0 : (t = fse.exec(e)) ? (Lu(t[1]) << 24 | // r
  Lu(t[2]) << 16 | // g
  Lu(t[3]) << 8 | // b
  K_(t[4])) >>> // a
  0 : (t = mse.exec(e)) ? parseInt(
    t[1] + t[1] + // r
    t[2] + t[2] + // g
    t[3] + t[3] + // b
    "ff",
    // a
    16
  ) >>> 0 : (t = bse.exec(e)) ? parseInt(t[1], 16) >>> 0 : (t = gse.exec(e)) ? parseInt(
    t[1] + t[1] + // r
    t[2] + t[2] + // g
    t[3] + t[3] + // b
    t[4] + t[4],
    // a
    16
  ) >>> 0 : (t = dse.exec(e)) ? (B_(
    X_(t[1]),
    // h
    Db(t[2]),
    // s
    Db(t[3])
    // l
  ) | 255) >>> // a
  0 : (t = pse.exec(e)) ? (B_(
    X_(t[1]),
    // h
    Db(t[2]),
    // s
    Db(t[3])
    // l
  ) | K_(t[4])) >>> // a
  0 : null;
}
function yw(e, t, r) {
  return r < 0 && (r += 1), r > 1 && (r -= 1), r < 1 / 6 ? e + (t - e) * 6 * r : r < 1 / 2 ? t : r < 2 / 3 ? e + (t - e) * (2 / 3 - r) * 6 : e;
}
function B_(e, t, r) {
  const n = r < 0.5 ? r * (1 + t) : r + t - r * t, o = 2 * r - n, a = yw(o, n, e + 1 / 3), i = yw(o, n, e), s = yw(o, n, e - 1 / 3);
  return Math.round(a * 255) << 24 | Math.round(i * 255) << 16 | Math.round(s * 255) << 8;
}
function Lu(e) {
  const t = parseInt(e, 10);
  return t < 0 ? 0 : t > 255 ? 255 : t;
}
function X_(e) {
  return (parseFloat(e) % 360 + 360) % 360 / 360;
}
function K_(e) {
  const t = parseFloat(e);
  return t < 0 ? 0 : t > 1 ? 255 : Math.round(t * 255);
}
function Db(e) {
  const t = parseFloat(e);
  return t < 0 ? 0 : t > 100 ? 1 : t / 100;
}
function J_(e) {
  let t = yse(e);
  if (t === null) return e;
  t = t || 0;
  const r = (t & 4278190080) >>> 24, n = (t & 16711680) >>> 16, o = (t & 65280) >>> 8, a = (t & 255) / 255;
  return `rgba(${r}, ${n}, ${o}, ${a})`;
}
var rh = (e, t, r) => {
  if (Ee.fun(e))
    return e;
  if (Ee.arr(e))
    return rh({
      range: e,
      output: t,
      extrapolate: r
    });
  if (Ee.str(e.output[0]))
    return PS(e);
  const n = e, o = n.output, a = n.range || [0, 1], i = n.extrapolateLeft || n.extrapolate || "extend", s = n.extrapolateRight || n.extrapolate || "extend", l = n.easing || ((c) => c);
  return (c) => {
    const u = xse(c, a);
    return vse(
      c,
      a[u],
      a[u + 1],
      o[u],
      o[u + 1],
      l,
      i,
      s,
      n.map
    );
  };
};
function vse(e, t, r, n, o, a, i, s, l) {
  let c = l ? l(e) : e;
  if (c < t) {
    if (i === "identity") return c;
    i === "clamp" && (c = t);
  }
  if (c > r) {
    if (s === "identity") return c;
    s === "clamp" && (c = r);
  }
  return n === o ? n : t === r ? e <= t ? n : o : (t === -1 / 0 ? c = -c : r === 1 / 0 ? c = c - t : c = (c - t) / (r - t), c = a(c), n === -1 / 0 ? c = -c : o === 1 / 0 ? c = c + n : c = c * (o - n) + n, c);
}
function xse(e, t) {
  for (var r = 1; r < t.length - 1 && !(t[r] >= e); ++r)
    ;
  return r - 1;
}
var wse = {
  linear: (e) => e
}, nh = Symbol.for("FluidValue.get"), fd = Symbol.for("FluidValue.observers"), mo = (e) => !!(e && e[nh]), Vn = (e) => e && e[nh] ? e[nh]() : e, Q_ = (e) => e[fd] || null;
function kse(e, t) {
  e.eventObserved ? e.eventObserved(t) : e(t);
}
function oh(e, t) {
  const r = e[fd];
  r && r.forEach((n) => {
    kse(n, t);
  });
}
var jL = class {
  constructor(t) {
    if (!t && !(t = this.get))
      throw Error("Unknown getter");
    $se(this, t);
  }
}, $se = (e, t) => IL(e, nh, t);
function jd(e, t) {
  if (e[nh]) {
    let r = e[fd];
    r || IL(e, fd, r = /* @__PURE__ */ new Set()), r.has(t) || (r.add(t), e.observerAdded && e.observerAdded(r.size, t));
  }
  return t;
}
function ah(e, t) {
  const r = e[fd];
  if (r && r.has(t)) {
    const n = r.size - 1;
    n ? r.delete(t) : e[fd] = null, e.observerRemoved && e.observerRemoved(n, t);
  }
}
var IL = (e, t, r) => Object.defineProperty(e, t, {
  value: r,
  writable: !0,
  configurable: !0
}), Uy = /[+\-]?(?:0|[1-9]\d*)(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, Ose = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\((-?\d+%?[,\s]+){2,3}\s*[\d\.]+%?\))/gi, Z_ = new RegExp(`(${Uy.source})(%|[a-z]+)`, "i"), Ese = /rgba\(([0-9\.-]+), ([0-9\.-]+), ([0-9\.-]+), ([0-9\.-]+)\)/gi, B1 = /var\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\)/, TL = (e) => {
  const [t, r] = Sse(e);
  if (!t || SS())
    return e;
  const n = window.getComputedStyle(document.documentElement).getPropertyValue(t);
  return n ? n.trim() : r && r.startsWith("--") ? window.getComputedStyle(document.documentElement).getPropertyValue(r) || e : r && B1.test(r) ? TL(r) : r || e;
}, Sse = (e) => {
  const t = B1.exec(e);
  if (!t) return [,];
  const [, r, n] = t;
  return [r, n];
}, vw, Pse = (e, t, r, n, o) => `rgba(${Math.round(t)}, ${Math.round(r)}, ${Math.round(n)}, ${o})`, ML = (e) => {
  vw || (vw = Il ? (
    // match color names, ignore partial matches
    new RegExp(`(${Object.keys(Il).join("|")})(?!\\w)`, "g")
  ) : (
    // never match
    /^\b$/
  ));
  const t = e.output.map((o) => Vn(o).replace(B1, TL).replace(Ose, J_).replace(vw, J_)), r = t.map((o) => o.match(Uy).map(Number)), n = r[0].map(
    (o, a) => r.map((i) => {
      if (!(a in i))
        throw Error('The arity of each "output" value must be equal');
      return i[a];
    })
  ).map(
    (o) => rh({ ...e, output: o })
  );
  return (o) => {
    var a;
    const i = !Z_.test(t[0]) && ((a = t.find((l) => Z_.test(l))) == null ? void 0 : a.replace(Uy, ""));
    let s = 0;
    return t[0].replace(
      Uy,
      () => `${n[s++](o)}${i || ""}`
    ).replace(Ese, Pse);
  };
}, AS = "react-spring: ", RL = (e) => {
  const t = e;
  let r = !1;
  if (typeof t != "function")
    throw new TypeError(`${AS}once requires a function parameter`);
  return (...n) => {
    r || (t(...n), r = !0);
  };
}, Cse = RL(console.warn);
function Ase() {
  Cse(
    `${AS}The "interpolate" function is deprecated in v9 (use "to" instead)`
  );
}
var _se = RL(console.warn);
function Nse() {
  _se(
    `${AS}Directly calling start instead of using the api object is deprecated in v9 (use ".start" instead), this will be removed in later 0.X.0 versions`
  );
}
function X1(e) {
  return Ee.str(e) && (e[0] == "#" || /\d/.test(e) || // Do not identify a CSS variable as an AnimatedString if its SSR
  !SS() && B1.test(e) || e in (Il || {}));
}
var rf = SS() ? Ne : Ri, jse = () => {
  const e = ie(!1);
  return rf(() => (e.current = !0, () => {
    e.current = !1;
  }), []), e;
};
function zL() {
  const e = _e()[1], t = jse();
  return () => {
    t.current && e(Math.random());
  };
}
var FL = (e) => Ne(e, Ise), Ise = [];
function Tse(e) {
  const t = ie(void 0);
  return Ne(() => {
    t.current = e;
  }), t.current;
}
var ih = Symbol.for("Animated:node"), Mse = (e) => !!e && e[ih] === e, Yo = (e) => e && e[ih], _S = (e, t) => ase(e, ih, t), K1 = (e) => e && e[ih] && e[ih].getPayload(), DL = class {
  constructor() {
    _S(this, this);
  }
  /** Get every `AnimatedValue` used by this node. */
  getPayload() {
    return this.payload || [];
  }
}, J1 = class LL extends DL {
  constructor(t) {
    super(), this._value = t, this.done = !0, this.durationProgress = 0, Ee.num(this._value) && (this.lastPosition = this._value);
  }
  /** @internal */
  static create(t) {
    return new LL(t);
  }
  getPayload() {
    return [this];
  }
  getValue() {
    return this._value;
  }
  setValue(t, r) {
    return Ee.num(t) && (this.lastPosition = t, r && (t = Math.round(t / r) * r, this.done && (this.lastPosition = t))), this._value === t ? !1 : (this._value = t, !0);
  }
  reset() {
    const { done: t } = this;
    this.done = !1, Ee.num(this._value) && (this.elapsedTime = 0, this.durationProgress = 0, this.lastPosition = this._value, t && (this.lastVelocity = null), this.v0 = null);
  }
}, Rv = class VL extends J1 {
  constructor(t) {
    super(0), this._string = null, this._toString = rh({
      output: [t, t]
    });
  }
  /** @internal */
  static create(t) {
    return new VL(t);
  }
  getValue() {
    return this._string ?? (this._string = this._toString(this._value));
  }
  setValue(t) {
    if (Ee.str(t)) {
      if (t == this._string)
        return !1;
      this._string = t, this._value = 1;
    } else if (super.setValue(t))
      this._string = null;
    else
      return !1;
    return !0;
  }
  reset(t) {
    t && (this._toString = rh({
      output: [this.getValue(), t]
    })), this._value = 0, super.reset();
  }
}, zv = { dependencies: null }, Q1 = class extends DL {
  constructor(t) {
    super(), this.source = t, this.setValue(t);
  }
  getValue(t) {
    const r = {};
    return Na(this.source, (n, o) => {
      Mse(n) ? r[o] = n.getValue(t) : mo(n) ? r[o] = Vn(n) : t || (r[o] = n);
    }), r;
  }
  /** Replace the raw object data */
  setValue(t) {
    this.source = t, this.payload = this._makePayload(t);
  }
  reset() {
    this.payload && kt(this.payload, (t) => t.reset());
  }
  /** Create a payload set. */
  _makePayload(t) {
    if (t) {
      const r = /* @__PURE__ */ new Set();
      return Na(t, this._addToPayload, r), Array.from(r);
    }
  }
  /** Add to a payload set. */
  _addToPayload(t) {
    zv.dependencies && mo(t) && zv.dependencies.add(t);
    const r = K1(t);
    r && kt(r, (n) => this.add(n));
  }
}, Rse = class WL extends Q1 {
  constructor(t) {
    super(t);
  }
  /** @internal */
  static create(t) {
    return new WL(t);
  }
  getValue() {
    return this.source.map((t) => t.getValue());
  }
  setValue(t) {
    const r = this.getPayload();
    return t.length == r.length ? r.map((n, o) => n.setValue(t[o])).some(Boolean) : (super.setValue(t.map(zse)), !0);
  }
};
function zse(e) {
  return (X1(e) ? Rv : J1).create(e);
}
function k5(e) {
  const t = Yo(e);
  return t ? t.constructor : Ee.arr(e) ? Rse : X1(e) ? Rv : J1;
}
var eN = (e, t) => {
  const r = (
    // Function components must use "forwardRef" to avoid being
    // re-rendered on every animation frame.
    !Ee.fun(e) || e.prototype && e.prototype.isReactComponent
  );
  return Pd((n, o) => {
    const a = ie(null), i = r && // eslint-disable-next-line react-hooks/rules-of-hooks
    et(
      (x) => {
        a.current = Lse(o, x);
      },
      [o]
    ), [s, l] = Dse(n, t), c = zL(), u = () => {
      const x = a.current;
      r && !x || (x ? t.applyAnimatedValues(x, s.getValue(!0)) : !1) === !1 && c();
    }, f = new Fse(u, l), p = ie(void 0);
    rf(() => (p.current = f, kt(l, (x) => jd(x, f)), () => {
      p.current && (kt(
        p.current.deps,
        (x) => ah(x, p.current)
      ), nt.cancel(p.current.update));
    })), Ne(u, []), FL(() => () => {
      const x = p.current;
      kt(x.deps, (b) => ah(b, x));
    });
    const v = t.getComponentProps(s.getValue());
    return /* @__PURE__ */ Y.createElement(e, { ...v, ref: i });
  });
}, Fse = class {
  constructor(t, r) {
    this.update = t, this.deps = r;
  }
  eventObserved(t) {
    t.type == "change" && nt.write(this.update);
  }
};
function Dse(e, t) {
  const r = /* @__PURE__ */ new Set();
  return zv.dependencies = r, e.style && (e = {
    ...e,
    style: t.createAnimatedStyle(e.style)
  }), e = new Q1(e), zv.dependencies = null, [e, r];
}
function Lse(e, t) {
  return e && (Ee.fun(e) ? e(t) : e.current = t), t;
}
var tN = Symbol.for("AnimatedComponent"), Vse = (e, {
  applyAnimatedValues: t = () => !1,
  createAnimatedStyle: r = (o) => new Q1(o),
  getComponentProps: n = (o) => o
} = {}) => {
  const o = {
    applyAnimatedValues: t,
    createAnimatedStyle: r,
    getComponentProps: n
  }, a = (i) => {
    const s = rN(i) || "Anonymous";
    return Ee.str(i) ? i = a[i] || (a[i] = eN(i, o)) : i = i[tN] || (i[tN] = eN(i, o)), i.displayName = `Animated(${s})`, i;
  };
  return Na(e, (i, s) => {
    Ee.arr(e) && (s = rN(i)), a[s] = a(i);
  }), {
    animated: a
  };
}, rN = (e) => Ee.str(e) ? e : e && Ee.str(e.displayName) ? e.displayName : Ee.fun(e) && e.name || null;
function Wn(e, ...t) {
  return Ee.fun(e) ? e(...t) : e;
}
var yg = (e, t) => e === !0 || !!(t && e && (Ee.fun(e) ? e(t) : On(e).includes(t))), UL = (e, t) => Ee.obj(e) ? t && e[t] : e, YL = (e, t) => e.default === !0 ? e[t] : e.default ? e.default[t] : void 0, Wse = (e) => e, NS = (e, t = Wse) => {
  let r = Use;
  e.default && e.default !== !0 && (e = e.default, r = Object.keys(e));
  const n = {};
  for (const o of r) {
    const a = t(e[o], o);
    Ee.und(a) || (n[o] = a);
  }
  return n;
}, Use = [
  "config",
  "onProps",
  "onStart",
  "onChange",
  "onPause",
  "onResume",
  "onRest"
], Yse = {
  config: 1,
  from: 1,
  to: 1,
  ref: 1,
  loop: 1,
  reset: 1,
  pause: 1,
  cancel: 1,
  reverse: 1,
  immediate: 1,
  default: 1,
  delay: 1,
  onProps: 1,
  onStart: 1,
  onChange: 1,
  onPause: 1,
  onResume: 1,
  onRest: 1,
  onResolve: 1,
  // Transition props
  items: 1,
  trail: 1,
  sort: 1,
  expires: 1,
  initial: 1,
  enter: 1,
  update: 1,
  leave: 1,
  children: 1,
  onDestroyed: 1,
  // Internal props
  keys: 1,
  callId: 1,
  parentId: 1
};
function Hse(e) {
  const t = {};
  let r = 0;
  if (Na(e, (n, o) => {
    Yse[o] || (t[o] = n, r++);
  }), r)
    return t;
}
function jS(e) {
  const t = Hse(e);
  if (t) {
    const r = { to: t };
    return Na(e, (n, o) => o in t || (r[o] = n)), r;
  }
  return { ...e };
}
function sh(e) {
  return e = Vn(e), Ee.arr(e) ? e.map(sh) : X1(e) ? Ro.createStringInterpolator({
    range: [0, 1],
    output: [e, e]
  })(1) : e;
}
function Gse(e) {
  for (const t in e) return !0;
  return !1;
}
function $5(e) {
  return Ee.fun(e) || Ee.arr(e) && Ee.obj(e[0]);
}
function nN(e, t) {
  var r;
  (r = e.ref) == null || r.delete(e), t == null || t.delete(e);
}
function qse(e, t) {
  var r;
  t && e.ref !== t && ((r = e.ref) == null || r.delete(e), t.add(e), e.ref = t);
}
var Bse = {
  default: { tension: 170, friction: 26 }
}, O5 = {
  ...Bse.default,
  mass: 1,
  damping: 1,
  easing: wse.linear,
  clamp: !1
}, Xse = class {
  constructor() {
    this.velocity = 0, Object.assign(this, O5);
  }
};
function Kse(e, t, r) {
  r && (r = { ...r }, oN(r, t), t = { ...r, ...t }), oN(e, t), Object.assign(e, t);
  for (const i in O5)
    e[i] == null && (e[i] = O5[i]);
  let { frequency: n, damping: o } = e;
  const { mass: a } = e;
  return Ee.und(n) || (n < 0.01 && (n = 0.01), o < 0 && (o = 0), e.tension = Math.pow(2 * Math.PI / n, 2) * a, e.friction = 4 * Math.PI * o * a / n), e;
}
function oN(e, t) {
  if (!Ee.und(t.decay))
    e.duration = void 0;
  else {
    const r = !Ee.und(t.tension) || !Ee.und(t.friction);
    (r || !Ee.und(t.frequency) || !Ee.und(t.damping) || !Ee.und(t.mass)) && (e.duration = void 0, e.decay = void 0), r && (e.frequency = void 0);
  }
}
var aN = [], Jse = class {
  constructor() {
    this.changed = !1, this.values = aN, this.toValues = null, this.fromValues = aN, this.config = new Xse(), this.immediate = !1;
  }
};
function HL(e, { key: t, props: r, defaultProps: n, state: o, actions: a }) {
  return new Promise((i, s) => {
    let l, c, u = yg(r.cancel ?? (n == null ? void 0 : n.cancel), t);
    if (u)
      v();
    else {
      Ee.und(r.pause) || (o.paused = yg(r.pause, t));
      let x = n == null ? void 0 : n.pause;
      x !== !0 && (x = o.paused || yg(x, t)), l = Wn(r.delay || 0, t), x ? (o.resumeQueue.add(p), a.pause()) : (a.resume(), p());
    }
    function f() {
      o.resumeQueue.add(p), o.timeouts.delete(c), c.cancel(), l = c.time - nt.now();
    }
    function p() {
      l > 0 && !Ro.skipAnimation ? (o.delayed = !0, c = nt.setTimeout(v, l), o.pauseQueue.add(f), o.timeouts.add(c)) : v();
    }
    function v() {
      o.delayed && (o.delayed = !1), o.pauseQueue.delete(f), o.timeouts.delete(c), e <= (o.cancelId || 0) && (u = !0);
      try {
        a.start({ ...r, callId: e, cancel: u }, i);
      } catch (x) {
        s(x);
      }
    }
  });
}
var IS = (e, t) => t.length == 1 ? t[0] : t.some((r) => r.cancelled) ? Nf(e.get()) : t.every((r) => r.noop) ? GL(e.get()) : jo(
  e.get(),
  t.every((r) => r.finished)
), GL = (e) => ({
  value: e,
  noop: !0,
  finished: !0,
  cancelled: !1
}), jo = (e, t, r = !1) => ({
  value: e,
  finished: t,
  cancelled: r
}), Nf = (e) => ({
  value: e,
  cancelled: !0,
  finished: !1
});
function qL(e, t, r, n) {
  const { callId: o, parentId: a, onRest: i } = t, { asyncTo: s, promise: l } = r;
  return !a && e === s && !t.reset ? l : r.promise = (async () => {
    r.asyncId = o, r.asyncTo = e;
    const c = NS(
      t,
      (m, w) => (
        // The `onRest` prop is only called when the `runAsync` promise is resolved.
        w === "onRest" ? void 0 : m
      )
    );
    let u, f;
    const p = new Promise(
      (m, w) => (u = m, f = w)
    ), v = (m) => {
      const w = (
        // The `cancel` prop or `stop` method was used.
        o <= (r.cancelId || 0) && Nf(n) || // The async `to` prop was replaced.
        o !== r.asyncId && jo(n, !1)
      );
      if (w)
        throw m.result = w, f(m), m;
    }, x = (m, w) => {
      const $ = new iN(), E = new sN();
      return (async () => {
        if (Ro.skipAnimation)
          throw lh(r), E.result = jo(n, !1), f(E), E;
        v($);
        const S = Ee.obj(m) ? { ...m } : { ...w, to: m };
        S.parentId = o, Na(c, (U, G) => {
          Ee.und(S[G]) && (S[G] = U);
        });
        const h = await n.start(S);
        return v($), r.paused && await new Promise((U) => {
          r.resumeQueue.add(U);
        }), h;
      })();
    };
    let b;
    if (Ro.skipAnimation)
      return lh(r), jo(n, !1);
    try {
      let m;
      Ee.arr(e) ? m = (async (w) => {
        for (const $ of w)
          await x($);
      })(e) : m = Promise.resolve(e(x, n.stop.bind(n))), await Promise.all([m.then(u), p]), b = jo(n.get(), !0, !1);
    } catch (m) {
      if (m instanceof iN)
        b = m.result;
      else if (m instanceof sN)
        b = m.result;
      else
        throw m;
    } finally {
      o == r.asyncId && (r.asyncId = a, r.asyncTo = a ? s : void 0, r.promise = a ? l : void 0);
    }
    return Ee.fun(i) && nt.batchedUpdates(() => {
      i(b, n, n.item);
    }), b;
  })();
}
function lh(e, t) {
  hg(e.timeouts, (r) => r.cancel()), e.pauseQueue.clear(), e.resumeQueue.clear(), e.asyncId = e.asyncTo = e.promise = void 0, t && (e.cancelId = t);
}
var iN = class extends Error {
  constructor() {
    super(
      "An async animation has been interrupted. You see this error because you forgot to use `await` or `.catch(...)` on its returned promise."
    );
  }
}, sN = class extends Error {
  constructor() {
    super("SkipAnimationSignal");
  }
}, E5 = (e) => e instanceof TS, Qse = 1, TS = class extends jL {
  constructor() {
    super(...arguments), this.id = Qse++, this._priority = 0;
  }
  get priority() {
    return this._priority;
  }
  set priority(t) {
    this._priority != t && (this._priority = t, this._onPriorityChange(t));
  }
  /** Get the current value */
  get() {
    const t = Yo(this);
    return t && t.getValue();
  }
  /** Create a spring that maps our value to another value */
  to(...t) {
    return Ro.to(this, t);
  }
  /** @deprecated Use the `to` method instead. */
  interpolate(...t) {
    return Ase(), Ro.to(this, t);
  }
  toJSON() {
    return this.get();
  }
  observerAdded(t) {
    t == 1 && this._attach();
  }
  observerRemoved(t) {
    t == 0 && this._detach();
  }
  /** Called when the first child is added. */
  _attach() {
  }
  /** Called when the last child is removed. */
  _detach() {
  }
  /** Tell our children about our new value */
  _onChange(t, r = !1) {
    oh(this, {
      type: "change",
      parent: this,
      value: t,
      idle: r
    });
  }
  /** Tell our children about our new priority */
  _onPriorityChange(t) {
    this.idle || G1.sort(this), oh(this, {
      type: "priority",
      parent: this,
      priority: t
    });
  }
}, su = Symbol.for("SpringPhase"), BL = 1, XL = 2, KL = 4, xw = (e) => (e[su] & BL) > 0, _s = (e) => (e[su] & XL) > 0, im = (e) => (e[su] & KL) > 0, lN = (e, t) => t ? e[su] |= XL | BL : e[su] &= -3, cN = (e, t) => t ? e[su] |= KL : e[su] &= -5, Zse = class extends TS {
  constructor(t, r) {
    if (super(), this.animation = new Jse(), this.defaultProps = {}, this._state = {
      paused: !1,
      delayed: !1,
      pauseQueue: /* @__PURE__ */ new Set(),
      resumeQueue: /* @__PURE__ */ new Set(),
      timeouts: /* @__PURE__ */ new Set()
    }, this._pendingCalls = /* @__PURE__ */ new Set(), this._lastCallId = 0, this._lastToId = 0, this._memoizedDuration = 0, !Ee.und(t) || !Ee.und(r)) {
      const n = Ee.obj(t) ? { ...t } : { ...r, from: t };
      Ee.und(n.default) && (n.default = !0), this.start(n);
    }
  }
  /** Equals true when not advancing on each frame. */
  get idle() {
    return !(_s(this) || this._state.asyncTo) || im(this);
  }
  get goal() {
    return Vn(this.animation.to);
  }
  get velocity() {
    const t = Yo(this);
    return t instanceof J1 ? t.lastVelocity || 0 : t.getPayload().map((r) => r.lastVelocity || 0);
  }
  /**
   * When true, this value has been animated at least once.
   */
  get hasAnimated() {
    return xw(this);
  }
  /**
   * When true, this value has an unfinished animation,
   * which is either active or paused.
   */
  get isAnimating() {
    return _s(this);
  }
  /**
   * When true, all current and future animations are paused.
   */
  get isPaused() {
    return im(this);
  }
  /**
   *
   *
   */
  get isDelayed() {
    return this._state.delayed;
  }
  /** Advance the current animation by a number of milliseconds */
  advance(t) {
    let r = !0, n = !1;
    const o = this.animation;
    let { toValues: a } = o;
    const { config: i } = o, s = K1(o.to);
    !s && mo(o.to) && (a = On(Vn(o.to))), o.values.forEach((u, f) => {
      if (u.done) return;
      const p = (
        // Animated strings always go from 0 to 1.
        u.constructor == Rv ? 1 : s ? s[f].lastPosition : a[f]
      );
      let v = o.immediate, x = p;
      if (!v) {
        if (x = u.lastPosition, i.tension <= 0) {
          u.done = !0;
          return;
        }
        let b = u.elapsedTime += t;
        const m = o.fromValues[f], w = u.v0 != null ? u.v0 : u.v0 = Ee.arr(i.velocity) ? i.velocity[f] : i.velocity;
        let $;
        const E = i.precision || (m == p ? 5e-3 : Math.min(1, Math.abs(p - m) * 1e-3));
        if (Ee.und(i.duration))
          if (i.decay) {
            const S = i.decay === !0 ? 0.998 : i.decay, h = Math.exp(-(1 - S) * b);
            x = m + w / (1 - S) * (1 - h), v = Math.abs(u.lastPosition - x) <= E, $ = w * h;
          } else {
            $ = u.lastVelocity == null ? w : u.lastVelocity;
            const S = i.restVelocity || E / 10, h = i.clamp ? 0 : i.bounce, U = !Ee.und(h), G = m == p ? u.v0 > 0 : m < p;
            let Q, Z = !1;
            const X = 1, J = Math.ceil(t / X);
            for (let I = 0; I < J && (Q = Math.abs($) > S, !(!Q && (v = Math.abs(p - x) <= E, v))); ++I) {
              U && (Z = x == p || x > p == G, Z && ($ = -$ * h, x = p));
              const te = -i.tension * 1e-6 * (x - p), V = -i.friction * 1e-3 * $, D = (te + V) / i.mass;
              $ = $ + D * X, x = x + $ * X;
            }
          }
        else {
          let S = 1;
          i.duration > 0 && (this._memoizedDuration !== i.duration && (this._memoizedDuration = i.duration, u.durationProgress > 0 && (u.elapsedTime = i.duration * u.durationProgress, b = u.elapsedTime += t)), S = (i.progress || 0) + b / this._memoizedDuration, S = S > 1 ? 1 : S < 0 ? 0 : S, u.durationProgress = S), x = m + i.easing(S) * (p - m), $ = (x - u.lastPosition) / t, v = S == 1;
        }
        u.lastVelocity = $, Number.isNaN(x) && (console.warn("Got NaN while animating:", this), v = !0);
      }
      s && !s[f].done && (v = !1), v ? u.done = !0 : r = !1, u.setValue(x, i.round) && (n = !0);
    });
    const l = Yo(this), c = l.getValue();
    if (r) {
      const u = Vn(o.to);
      (c !== u || n) && !i.decay ? (l.setValue(u), this._onChange(u)) : n && i.decay && this._onChange(c), this._stop();
    } else n && this._onChange(c);
  }
  /** Set the current value, while stopping the current animation */
  set(t) {
    return nt.batchedUpdates(() => {
      this._stop(), this._focus(t), this._set(t);
    }), this;
  }
  /**
   * Freeze the active animation in time, as well as any updates merged
   * before `resume` is called.
   */
  pause() {
    this._update({ pause: !0 });
  }
  /** Resume the animation if paused. */
  resume() {
    this._update({ pause: !1 });
  }
  /** Skip to the end of the current animation. */
  finish() {
    if (_s(this)) {
      const { to: t, config: r } = this.animation;
      nt.batchedUpdates(() => {
        this._onStart(), r.decay || this._set(t, !1), this._stop();
      });
    }
    return this;
  }
  /** Push props into the pending queue. */
  update(t) {
    return (this.queue || (this.queue = [])).push(t), this;
  }
  start(t, r) {
    let n;
    return Ee.und(t) ? (n = this.queue || [], this.queue = []) : n = [Ee.obj(t) ? t : { ...r, to: t }], Promise.all(
      n.map((o) => this._update(o))
    ).then((o) => IS(this, o));
  }
  /**
   * Stop the current animation, and cancel any delayed updates.
   *
   * Pass `true` to call `onRest` with `cancelled: true`.
   */
  stop(t) {
    const { to: r } = this.animation;
    return this._focus(this.get()), lh(this._state, t && this._lastCallId), nt.batchedUpdates(() => this._stop(r, t)), this;
  }
  /** Restart the animation. */
  reset() {
    this._update({ reset: !0 });
  }
  /** @internal */
  eventObserved(t) {
    t.type == "change" ? this._start() : t.type == "priority" && (this.priority = t.priority + 1);
  }
  /**
   * Parse the `to` and `from` range from the given `props` object.
   *
   * This also ensures the initial value is available to animated components
   * during the render phase.
   */
  _prepareNode(t) {
    const r = this.key || "";
    let { to: n, from: o } = t;
    n = Ee.obj(n) ? n[r] : n, (n == null || $5(n)) && (n = void 0), o = Ee.obj(o) ? o[r] : o, o == null && (o = void 0);
    const a = { to: n, from: o };
    return xw(this) || (t.reverse && ([n, o] = [o, n]), o = Vn(o), Ee.und(o) ? Yo(this) || this._set(n) : this._set(o)), a;
  }
  /** Every update is processed by this method before merging. */
  _update({ ...t }, r) {
    const { key: n, defaultProps: o } = this;
    t.default && Object.assign(
      o,
      NS(
        t,
        (s, l) => /^on/.test(l) ? UL(s, n) : s
      )
    ), fN(this, t, "onProps"), lm(this, "onProps", t, this);
    const a = this._prepareNode(t);
    if (Object.isFrozen(this))
      throw Error(
        "Cannot animate a `SpringValue` object that is frozen. Did you forget to pass your component to `animated(...)` before animating its props?"
      );
    const i = this._state;
    return HL(++this._lastCallId, {
      key: n,
      props: t,
      defaultProps: o,
      state: i,
      actions: {
        pause: () => {
          im(this) || (cN(this, !0), Jm(i.pauseQueue), lm(
            this,
            "onPause",
            jo(this, sm(this, this.animation.to)),
            this
          ));
        },
        resume: () => {
          im(this) && (cN(this, !1), _s(this) && this._resume(), Jm(i.resumeQueue), lm(
            this,
            "onResume",
            jo(this, sm(this, this.animation.to)),
            this
          ));
        },
        start: this._merge.bind(this, a)
      }
    }).then((s) => {
      if (t.loop && s.finished && !(r && s.noop)) {
        const l = JL(t);
        if (l)
          return this._update(l, !0);
      }
      return s;
    });
  }
  /** Merge props into the current animation */
  _merge(t, r, n) {
    if (r.cancel)
      return this.stop(!0), n(Nf(this));
    const o = !Ee.und(t.to), a = !Ee.und(t.from);
    if (o || a)
      if (r.callId > this._lastToId)
        this._lastToId = r.callId;
      else
        return n(Nf(this));
    const { key: i, defaultProps: s, animation: l } = this, { to: c, from: u } = l;
    let { to: f = c, from: p = u } = t;
    a && !o && (!r.default || Ee.und(f)) && (f = p), r.reverse && ([f, p] = [p, f]);
    const v = !ni(p, u);
    v && (l.from = p), p = Vn(p);
    const x = !ni(f, c);
    x && this._focus(f);
    const b = $5(r.to), { config: m } = l, { decay: w, velocity: $ } = m;
    (o || a) && (m.velocity = 0), r.config && !b && Kse(
      m,
      Wn(r.config, i),
      // Avoid calling the same "config" prop twice.
      r.config !== s.config ? Wn(s.config, i) : void 0
    );
    let E = Yo(this);
    if (!E || Ee.und(f))
      return n(jo(this, !0));
    const S = (
      // When `reset` is undefined, the `from` prop implies `reset: true`,
      // except for declarative updates. When `reset` is defined, there
      // must exist a value to animate from.
      Ee.und(r.reset) ? a && !r.default : !Ee.und(p) && yg(r.reset, i)
    ), h = S ? p : this.get(), U = sh(f), G = Ee.num(U) || Ee.arr(U) || X1(U), Q = !b && (!G || yg(s.immediate || r.immediate, i));
    if (x) {
      const I = k5(f);
      if (I !== E.constructor)
        if (Q)
          E = this._set(U);
        else
          throw Error(
            `Cannot animate between ${E.constructor.name} and ${I.name}, as the "to" prop suggests`
          );
    }
    const Z = E.constructor;
    let X = mo(f), J = !1;
    if (!X) {
      const I = S || !xw(this) && v;
      (x || I) && (J = ni(sh(h), U), X = !J), (!ni(l.immediate, Q) && !Q || !ni(m.decay, w) || !ni(m.velocity, $)) && (X = !0);
    }
    if (J && _s(this) && (l.changed && !S ? X = !0 : X || this._stop(c)), !b && ((X || mo(c)) && (l.values = E.getPayload(), l.toValues = mo(f) ? null : Z == Rv ? [1] : On(U)), l.immediate != Q && (l.immediate = Q, !Q && !S && this._set(c)), X)) {
      const { onRest: I } = l;
      kt(ele, (V) => fN(this, r, V));
      const te = jo(this, sm(this, c));
      Jm(this._pendingCalls, te), this._pendingCalls.add(n), l.changed && nt.batchedUpdates(() => {
        var V;
        l.changed = !S, I == null || I(te, this), S ? Wn(s.onRest, te) : (V = l.onStart) == null || V.call(l, te, this);
      });
    }
    S && this._set(h), b ? n(qL(r.to, r, this._state, this)) : X ? this._start() : _s(this) && !x ? this._pendingCalls.add(n) : n(GL(h));
  }
  /** Update the `animation.to` value, which might be a `FluidValue` */
  _focus(t) {
    const r = this.animation;
    t !== r.to && (Q_(this) && this._detach(), r.to = t, Q_(this) && this._attach());
  }
  _attach() {
    let t = 0;
    const { to: r } = this.animation;
    mo(r) && (jd(r, this), E5(r) && (t = r.priority + 1)), this.priority = t;
  }
  _detach() {
    const { to: t } = this.animation;
    mo(t) && ah(t, this);
  }
  /**
   * Update the current value from outside the frameloop,
   * and return the `Animated` node.
   */
  _set(t, r = !0) {
    const n = Vn(t);
    if (!Ee.und(n)) {
      const o = Yo(this);
      if (!o || !ni(n, o.getValue())) {
        const a = k5(n);
        !o || o.constructor != a ? _S(this, a.create(n)) : o.setValue(n), o && nt.batchedUpdates(() => {
          this._onChange(n, r);
        });
      }
    }
    return Yo(this);
  }
  _onStart() {
    const t = this.animation;
    t.changed || (t.changed = !0, lm(
      this,
      "onStart",
      jo(this, sm(this, t.to)),
      this
    ));
  }
  _onChange(t, r) {
    r || (this._onStart(), Wn(this.animation.onChange, t, this)), Wn(this.defaultProps.onChange, t, this), super._onChange(t, r);
  }
  // This method resets the animation state (even if already animating) to
  // ensure the latest from/to range is used, and it also ensures this spring
  // is added to the frameloop.
  _start() {
    const t = this.animation;
    Yo(this).reset(Vn(t.to)), t.immediate || (t.fromValues = t.values.map((r) => r.lastPosition)), _s(this) || (lN(this, !0), im(this) || this._resume());
  }
  _resume() {
    Ro.skipAnimation ? this.finish() : G1.start(this);
  }
  /**
   * Exit the frameloop and notify `onRest` listeners.
   *
   * Always wrap `_stop` calls with `batchedUpdates`.
   */
  _stop(t, r) {
    if (_s(this)) {
      lN(this, !1);
      const n = this.animation;
      kt(n.values, (a) => {
        a.done = !0;
      }), n.toValues && (n.onChange = n.onPause = n.onResume = void 0), oh(this, {
        type: "idle",
        parent: this
      });
      const o = r ? Nf(this.get()) : jo(this.get(), sm(this, t ?? n.to));
      Jm(this._pendingCalls, o), n.changed && (n.changed = !1, lm(this, "onRest", o, this));
    }
  }
};
function sm(e, t) {
  const r = sh(t), n = sh(e.get());
  return ni(n, r);
}
function JL(e, t = e.loop, r = e.to) {
  const n = Wn(t);
  if (n) {
    const o = n !== !0 && jS(n), a = (o || e).reverse, i = !o || o.reset;
    return Fv({
      ...e,
      loop: t,
      // Avoid updating default props when looping.
      default: !1,
      // Never loop the `pause` prop.
      pause: void 0,
      // For the "reverse" prop to loop as expected, the "to" prop
      // must be undefined. The "reverse" prop is ignored when the
      // "to" prop is an array or function.
      to: !a || $5(r) ? r : void 0,
      // Ignore the "from" prop except on reset.
      from: i ? e.from : void 0,
      reset: i,
      // The "loop" prop can return a "useSpring" props object to
      // override any of the original props.
      ...o
    });
  }
}
function Fv(e) {
  const { to: t, from: r } = e = jS(e), n = /* @__PURE__ */ new Set();
  return Ee.obj(t) && uN(t, n), Ee.obj(r) && uN(r, n), e.keys = n.size ? Array.from(n) : null, e;
}
function uN(e, t) {
  Na(e, (r, n) => r != null && t.add(n));
}
var ele = [
  "onStart",
  "onRest",
  "onChange",
  "onPause",
  "onResume"
];
function fN(e, t, r) {
  e.animation[r] = t[r] !== YL(t, r) ? UL(t[r], e.key) : void 0;
}
function lm(e, t, ...r) {
  var n, o, a, i;
  (o = (n = e.animation)[t]) == null || o.call(n, ...r), (i = (a = e.defaultProps)[t]) == null || i.call(a, ...r);
}
var tle = ["onStart", "onChange", "onRest"], rle = 1, nle = class {
  constructor(t, r) {
    this.id = rle++, this.springs = {}, this.queue = [], this._lastAsyncId = 0, this._active = /* @__PURE__ */ new Set(), this._changed = /* @__PURE__ */ new Set(), this._started = !1, this._state = {
      paused: !1,
      pauseQueue: /* @__PURE__ */ new Set(),
      resumeQueue: /* @__PURE__ */ new Set(),
      timeouts: /* @__PURE__ */ new Set()
    }, this._events = {
      onStart: /* @__PURE__ */ new Map(),
      onChange: /* @__PURE__ */ new Map(),
      onRest: /* @__PURE__ */ new Map()
    }, this._onFrame = this._onFrame.bind(this), r && (this._flush = r), t && this.start({ default: !0, ...t });
  }
  /**
   * Equals `true` when no spring values are in the frameloop, and
   * no async animation is currently active.
   */
  get idle() {
    return !this._state.asyncTo && Object.values(this.springs).every((t) => t.idle && !t.isDelayed && !t.isPaused);
  }
  get item() {
    return this._item;
  }
  set item(t) {
    this._item = t;
  }
  /** Get the current values of our springs */
  get() {
    const t = {};
    return this.each((r, n) => t[n] = r.get()), t;
  }
  /** Set the current values without animating. */
  set(t) {
    for (const r in t) {
      const n = t[r];
      Ee.und(n) || this.springs[r].set(n);
    }
  }
  /** Push an update onto the queue of each value. */
  update(t) {
    return t && this.queue.push(Fv(t)), this;
  }
  /**
   * Start the queued animations for every spring, and resolve the returned
   * promise once all queued animations have finished or been cancelled.
   *
   * When you pass a queue (instead of nothing), that queue is used instead of
   * the queued animations added with the `update` method, which are left alone.
   */
  start(t) {
    let { queue: r } = this;
    return t ? r = On(t).map(Fv) : this.queue = [], this._flush ? this._flush(this, r) : (tV(this, r), ole(this, r));
  }
  /** @internal */
  stop(t, r) {
    if (t !== !!t && (r = t), r) {
      const n = this.springs;
      kt(On(r), (o) => n[o].stop(!!t));
    } else
      lh(this._state, this._lastAsyncId), this.each((n) => n.stop(!!t));
    return this;
  }
  /** Freeze the active animation in time */
  pause(t) {
    if (Ee.und(t))
      this.start({ pause: !0 });
    else {
      const r = this.springs;
      kt(On(t), (n) => r[n].pause());
    }
    return this;
  }
  /** Resume the animation if paused. */
  resume(t) {
    if (Ee.und(t))
      this.start({ pause: !1 });
    else {
      const r = this.springs;
      kt(On(t), (n) => r[n].resume());
    }
    return this;
  }
  /** Call a function once per spring value */
  each(t) {
    Na(this.springs, t);
  }
  /** @internal Called at the end of every animation frame */
  _onFrame() {
    const { onStart: t, onChange: r, onRest: n } = this._events, o = this._active.size > 0, a = this._changed.size > 0;
    (o && !this._started || a && !this._started) && (this._started = !0, hg(t, ([l, c]) => {
      c.value = this.get(), l(c, this, this._item);
    }));
    const i = !o && this._started, s = a || i && n.size ? this.get() : null;
    a && r.size && hg(r, ([l, c]) => {
      c.value = s, l(c, this, this._item);
    }), i && (this._started = !1, hg(n, ([l, c]) => {
      c.value = s, l(c, this, this._item);
    }));
  }
  /** @internal */
  eventObserved(t) {
    if (t.type == "change")
      this._changed.add(t.parent), t.idle || this._active.add(t.parent);
    else if (t.type == "idle")
      this._active.delete(t.parent);
    else return;
    nt.onFrame(this._onFrame);
  }
};
function ole(e, t) {
  return Promise.all(t.map((r) => QL(e, r))).then(
    (r) => IS(e, r)
  );
}
async function QL(e, t, r) {
  const { keys: n, to: o, from: a, loop: i, onRest: s, onResolve: l } = t, c = Ee.obj(t.default) && t.default;
  i && (t.loop = !1), o === !1 && (t.to = null), a === !1 && (t.from = null);
  const u = Ee.arr(o) || Ee.fun(o) ? o : void 0;
  u ? (t.to = void 0, t.onRest = void 0, c && (c.onRest = void 0)) : kt(tle, (b) => {
    const m = t[b];
    if (Ee.fun(m)) {
      const w = e._events[b];
      t[b] = ({ finished: $, cancelled: E }) => {
        const S = w.get(m);
        S ? ($ || (S.finished = !1), E && (S.cancelled = !0)) : w.set(m, {
          value: null,
          finished: $ || !1,
          cancelled: E || !1
        });
      }, c && (c[b] = t[b]);
    }
  });
  const f = e._state;
  t.pause === !f.paused ? (f.paused = t.pause, Jm(t.pause ? f.pauseQueue : f.resumeQueue)) : f.paused && (t.pause = !0);
  const p = (n || Object.keys(e.springs)).map(
    (b) => e.springs[b].start(t)
  ), v = t.cancel === !0 || YL(t, "cancel") === !0;
  (u || v && f.asyncId) && p.push(
    HL(++e._lastAsyncId, {
      props: t,
      state: f,
      actions: {
        pause: x5,
        resume: x5,
        start(b, m) {
          v ? (lh(f, e._lastAsyncId), m(Nf(e))) : (b.onRest = s, m(
            qL(
              u,
              b,
              f,
              e
            )
          ));
        }
      }
    })
  ), f.paused && await new Promise((b) => {
    f.resumeQueue.add(b);
  });
  const x = IS(e, await Promise.all(p));
  if (i && x.finished && !(r && x.noop)) {
    const b = JL(t, i, o);
    if (b)
      return tV(e, [b]), QL(e, b, !0);
  }
  return l && nt.batchedUpdates(() => l(x, e, e.item)), x;
}
function ale(e, t) {
  const r = { ...e.springs };
  return t && kt(On(t), (n) => {
    Ee.und(n.keys) && (n = Fv(n)), Ee.obj(n.to) || (n = { ...n, to: void 0 }), eV(r, n, (o) => ZL(o));
  }), ile(e, r), r;
}
function ile(e, t) {
  Na(t, (r, n) => {
    e.springs[n] || (e.springs[n] = r, jd(r, e));
  });
}
function ZL(e, t) {
  const r = new Zse();
  return r.key = e, t && jd(r, t), r;
}
function eV(e, t, r) {
  t.keys && kt(t.keys, (n) => {
    (e[n] || (e[n] = r(n)))._prepareNode(t);
  });
}
function tV(e, t) {
  kt(t, (r) => {
    eV(e.springs, r, (n) => ZL(n, e));
  });
}
var sle = Y.createContext({
  pause: !1,
  immediate: !1
}), lle = () => {
  const e = [], t = function(n) {
    Nse();
    const o = [];
    return kt(e, (a, i) => {
      if (Ee.und(n))
        o.push(a.start());
      else {
        const s = r(n, a, i);
        s && o.push(a.start(s));
      }
    }), o;
  };
  t.current = e, t.add = function(n) {
    e.includes(n) || e.push(n);
  }, t.delete = function(n) {
    const o = e.indexOf(n);
    ~o && e.splice(o, 1);
  }, t.pause = function() {
    return kt(e, (n) => n.pause(...arguments)), this;
  }, t.resume = function() {
    return kt(e, (n) => n.resume(...arguments)), this;
  }, t.set = function(n) {
    kt(e, (o, a) => {
      const i = Ee.fun(n) ? n(a, o) : n;
      i && o.set(i);
    });
  }, t.start = function(n) {
    const o = [];
    return kt(e, (a, i) => {
      if (Ee.und(n))
        o.push(a.start());
      else {
        const s = this._getProps(n, a, i);
        s && o.push(a.start(s));
      }
    }), o;
  }, t.stop = function() {
    return kt(e, (n) => n.stop(...arguments)), this;
  }, t.update = function(n) {
    return kt(e, (o, a) => o.update(this._getProps(n, o, a))), this;
  };
  const r = function(n, o, a) {
    return Ee.fun(n) ? n(a, o) : n;
  };
  return t._getProps = r, t;
};
function dN(e, t, r) {
  const n = Ee.fun(t) && t, {
    reset: o,
    sort: a,
    trail: i = 0,
    expires: s = !0,
    exitBeforeEnter: l = !1,
    onDestroyed: c,
    ref: u,
    config: f
  } = n ? n() : t, p = Yt(
    () => n || arguments.length == 3 ? lle() : void 0,
    []
  ), v = On(e), x = [], b = ie(null), m = o ? null : b.current;
  rf(() => {
    b.current = x;
  }), FL(() => (kt(x, (V) => {
    p == null || p.add(V.ctrl), V.ctrl.ref = p;
  }), () => {
    kt(b.current, (V) => {
      V.expired && clearTimeout(V.expirationId), nN(V.ctrl, p), V.ctrl.stop(!0);
    });
  }));
  const w = ule(v, n ? n() : t, m), $ = o && b.current || [];
  rf(
    () => kt($, ({ ctrl: V, item: D, key: F }) => {
      nN(V, p), Wn(c, D, F);
    })
  );
  const E = [];
  if (m && kt(m, (V, D) => {
    V.expired ? (clearTimeout(V.expirationId), $.push(V)) : (D = E[D] = w.indexOf(V.key), ~D && (x[D] = V));
  }), kt(v, (V, D) => {
    x[D] || (x[D] = {
      key: w[D],
      item: V,
      phase: "mount",
      ctrl: new nle()
    }, x[D].ctrl.item = V);
  }), E.length) {
    let V = -1;
    const { leave: D } = n ? n() : t;
    kt(E, (F, R) => {
      const H = m[R];
      ~F ? (V = x.indexOf(H), x[V] = { ...H, item: v[F] }) : D && x.splice(++V, 0, H);
    });
  }
  Ee.fun(a) && x.sort((V, D) => a(V.item, D.item));
  let S = -i;
  const h = zL(), U = NS(t), G = /* @__PURE__ */ new Map(), Q = ie(/* @__PURE__ */ new Map()), Z = ie(!1);
  kt(x, (V, D) => {
    const F = V.key, R = V.phase, H = n ? n() : t;
    let B, g;
    const d = Wn(H.delay || 0, F);
    if (R == "mount")
      B = H.enter, g = "enter";
    else {
      const N = w.indexOf(F) < 0;
      if (R != "leave")
        if (N)
          B = H.leave, g = "leave";
        else if (B = H.update)
          g = "update";
        else return;
      else if (!N)
        B = H.enter, g = "enter";
      else return;
    }
    if (B = Wn(B, V.item, D), B = Ee.obj(B) ? jS(B) : { to: B }, !B.config) {
      const N = f || U.config;
      B.config = Wn(N, V.item, D, g);
    }
    S += i;
    const O = {
      ...U,
      // we need to add our props.delay value you here.
      delay: d + S,
      ref: u,
      immediate: H.immediate,
      // This prevents implied resets.
      reset: !1,
      // Merge any phase-specific props.
      ...B
    };
    if (g == "enter" && Ee.und(O.from)) {
      const N = n ? n() : t, j = Ee.und(N.initial) || m ? N.from : N.initial;
      O.from = Wn(j, V.item, D);
    }
    const { onResolve: C } = O;
    O.onResolve = (N) => {
      Wn(C, N);
      const j = b.current, _ = j.find((T) => T.key === F);
      if (_ && !(N.cancelled && _.phase != "update") && _.ctrl.idle) {
        const T = j.every((M) => M.ctrl.idle);
        if (_.phase == "leave") {
          const M = Wn(s, _.item);
          if (M !== !1) {
            const z = M === !0 ? 0 : M;
            if (_.expired = !0, !T && z > 0) {
              z <= 2147483647 && (_.expirationId = setTimeout(h, z));
              return;
            }
          }
        }
        T && j.some((M) => M.expired) && (Q.current.delete(_), l && (Z.current = !0), h());
      }
    };
    const A = ale(V.ctrl, O);
    g === "leave" && l ? Q.current.set(V, { phase: g, springs: A, payload: O }) : G.set(V, { phase: g, springs: A, payload: O });
  });
  const X = Ut(sle), J = Tse(X), I = X !== J && Gse(X);
  rf(() => {
    I && kt(x, (V) => {
      V.ctrl.start({ default: X });
    });
  }, [X]), kt(G, (V, D) => {
    if (Q.current.size) {
      const F = x.findIndex((R) => R.key === D.key);
      x.splice(F, 1);
    }
  }), rf(
    () => {
      kt(
        Q.current.size ? Q.current : G,
        ({ phase: V, payload: D }, F) => {
          const { ctrl: R } = F;
          F.phase = V, p == null || p.add(R), I && V == "enter" && R.start({ default: X }), D && (qse(R, D.ref), (R.ref || p) && !Z.current ? R.update(D) : (R.start(D), Z.current && (Z.current = !1)));
        }
      );
    },
    o ? void 0 : r
  );
  const te = (V) => /* @__PURE__ */ Y.createElement(Y.Fragment, null, x.map((D, F) => {
    const { springs: R } = G.get(D) || D.ctrl, H = V({ ...R }, D.item, D, F);
    return H && H.type ? /* @__PURE__ */ Y.createElement(
      H.type,
      {
        ...H.props,
        key: Ee.str(D.key) || Ee.num(D.key) ? D.key : D.ctrl.id,
        ref: H.ref
      }
    ) : H;
  }));
  return p ? [te, p] : te;
}
var cle = 1;
function ule(e, { key: t, keys: r = t }, n) {
  if (r === null) {
    const o = /* @__PURE__ */ new Set();
    return e.map((a) => {
      const i = n && n.find(
        (s) => s.item === a && s.phase !== "leave" && !o.has(s)
      );
      return i ? (o.add(i), i.key) : cle++;
    });
  }
  return Ee.und(r) ? e : Ee.fun(r) ? e.map(r) : On(r);
}
var fle = class extends TS {
  constructor(t, r) {
    super(), this.source = t, this.idle = !0, this._active = /* @__PURE__ */ new Set(), this.calc = rh(...r);
    const n = this._get(), o = k5(n);
    _S(this, o.create(n));
  }
  advance(t) {
    const r = this._get(), n = this.get();
    ni(r, n) || (Yo(this).setValue(r), this._onChange(r, this.idle)), !this.idle && pN(this._active) && ww(this);
  }
  _get() {
    const t = Ee.arr(this.source) ? this.source.map(Vn) : On(Vn(this.source));
    return this.calc(...t);
  }
  _start() {
    this.idle && !pN(this._active) && (this.idle = !1, kt(K1(this), (t) => {
      t.done = !1;
    }), Ro.skipAnimation ? (nt.batchedUpdates(() => this.advance()), ww(this)) : G1.start(this));
  }
  // Observe our sources only when we're observed.
  _attach() {
    let t = 1;
    kt(On(this.source), (r) => {
      mo(r) && jd(r, this), E5(r) && (r.idle || this._active.add(r), t = Math.max(t, r.priority + 1));
    }), this.priority = t, this._start();
  }
  // Stop observing our sources once we have no observers.
  _detach() {
    kt(On(this.source), (t) => {
      mo(t) && ah(t, this);
    }), this._active.clear(), ww(this);
  }
  /** @internal */
  eventObserved(t) {
    t.type == "change" ? t.idle ? this.advance() : (this._active.add(t.parent), this._start()) : t.type == "idle" ? this._active.delete(t.parent) : t.type == "priority" && (this.priority = On(this.source).reduce(
      (r, n) => Math.max(r, (E5(n) ? n.priority : 0) + 1),
      0
    ));
  }
};
function dle(e) {
  return e.idle !== !1;
}
function pN(e) {
  return !e.size || Array.from(e).every(dle);
}
function ww(e) {
  e.idle || (e.idle = !0, kt(K1(e), (t) => {
    t.done = !0;
  }), oh(e, {
    type: "idle",
    parent: e
  }));
}
Ro.assign({
  createStringInterpolator: ML,
  to: (e, t) => new fle(e, t)
});
var rV = /^--/;
function ple(e, t) {
  return t == null || typeof t == "boolean" || t === "" ? "" : typeof t == "number" && t !== 0 && !rV.test(e) && !(vg.hasOwnProperty(e) && vg[e]) ? t + "px" : ("" + t).trim();
}
var mN = {};
function mle(e, t) {
  if (!e.nodeType || !e.setAttribute)
    return !1;
  const r = e.nodeName === "filter" || e.parentNode && e.parentNode.nodeName === "filter", {
    className: n,
    style: o,
    children: a,
    scrollTop: i,
    scrollLeft: s,
    viewBox: l,
    ...c
  } = t, u = Object.values(c), f = Object.keys(c).map(
    (p) => r || e.hasAttribute(p) ? p : mN[p] || (mN[p] = p.replace(
      /([A-Z])/g,
      // Attributes are written in dash case
      (v) => "-" + v.toLowerCase()
    ))
  );
  a !== void 0 && (e.textContent = a);
  for (const p in o)
    if (o.hasOwnProperty(p)) {
      const v = ple(p, o[p]);
      rV.test(p) ? e.style.setProperty(p, v) : e.style[p] = v;
    }
  f.forEach((p, v) => {
    e.setAttribute(p, u[v]);
  }), n !== void 0 && (e.className = n), i !== void 0 && (e.scrollTop = i), s !== void 0 && (e.scrollLeft = s), l !== void 0 && e.setAttribute("viewBox", l);
}
var vg = {
  animationIterationCount: !0,
  borderImageOutset: !0,
  borderImageSlice: !0,
  borderImageWidth: !0,
  boxFlex: !0,
  boxFlexGroup: !0,
  boxOrdinalGroup: !0,
  columnCount: !0,
  columns: !0,
  flex: !0,
  flexGrow: !0,
  flexPositive: !0,
  flexShrink: !0,
  flexNegative: !0,
  flexOrder: !0,
  gridRow: !0,
  gridRowEnd: !0,
  gridRowSpan: !0,
  gridRowStart: !0,
  gridColumn: !0,
  gridColumnEnd: !0,
  gridColumnSpan: !0,
  gridColumnStart: !0,
  fontWeight: !0,
  lineClamp: !0,
  lineHeight: !0,
  opacity: !0,
  order: !0,
  orphans: !0,
  tabSize: !0,
  widows: !0,
  zIndex: !0,
  zoom: !0,
  // SVG-related properties
  fillOpacity: !0,
  floodOpacity: !0,
  stopOpacity: !0,
  strokeDasharray: !0,
  strokeDashoffset: !0,
  strokeMiterlimit: !0,
  strokeOpacity: !0,
  strokeWidth: !0
}, gle = (e, t) => e + t.charAt(0).toUpperCase() + t.substring(1), hle = ["Webkit", "Ms", "Moz", "O"];
vg = Object.keys(vg).reduce((e, t) => (hle.forEach((r) => e[gle(r, t)] = e[t]), e), vg);
var ble = /^(matrix|translate|scale|rotate|skew)/, yle = /^(translate)/, vle = /^(rotate|skew)/, kw = (e, t) => Ee.num(e) && e !== 0 ? e + t : e, Yy = (e, t) => Ee.arr(e) ? e.every((r) => Yy(r, t)) : Ee.num(e) ? e === t : parseFloat(e) === t, xle = class extends Q1 {
  constructor({ x: t, y: r, z: n, ...o }) {
    const a = [], i = [];
    (t || r || n) && (a.push([t || 0, r || 0, n || 0]), i.push((s) => [
      `translate3d(${s.map((l) => kw(l, "px")).join(",")})`,
      // prettier-ignore
      Yy(s, 0)
    ])), Na(o, (s, l) => {
      if (l === "transform")
        a.push([s || ""]), i.push((c) => [c, c === ""]);
      else if (ble.test(l)) {
        if (delete o[l], Ee.und(s)) return;
        const c = yle.test(l) ? "px" : vle.test(l) ? "deg" : "";
        a.push(On(s)), i.push(
          l === "rotate3d" ? ([u, f, p, v]) => [
            `rotate3d(${u},${f},${p},${kw(v, c)})`,
            Yy(v, 0)
          ] : (u) => [
            `${l}(${u.map((f) => kw(f, c)).join(",")})`,
            Yy(u, l.startsWith("scale") ? 1 : 0)
          ]
        );
      }
    }), a.length && (o.transform = new wle(a, i)), super(o);
  }
}, wle = class extends jL {
  constructor(t, r) {
    super(), this.inputs = t, this.transforms = r, this._value = null;
  }
  get() {
    return this._value || (this._value = this._get());
  }
  _get() {
    let t = "", r = !0;
    return kt(this.inputs, (n, o) => {
      const a = Vn(n[0]), [i, s] = this.transforms[o](
        Ee.arr(a) ? a : n.map(Vn)
      );
      t += " " + i, r = r && s;
    }), r ? "none" : t;
  }
  // Start observing our inputs once we have an observer.
  observerAdded(t) {
    t == 1 && kt(
      this.inputs,
      (r) => kt(
        r,
        (n) => mo(n) && jd(n, this)
      )
    );
  }
  // Stop observing our inputs once we have no observers.
  observerRemoved(t) {
    t == 0 && kt(
      this.inputs,
      (r) => kt(
        r,
        (n) => mo(n) && ah(n, this)
      )
    );
  }
  eventObserved(t) {
    t.type == "change" && (this._value = null), oh(this, t);
  }
}, kle = [
  "a",
  "abbr",
  "address",
  "area",
  "article",
  "aside",
  "audio",
  "b",
  "base",
  "bdi",
  "bdo",
  "big",
  "blockquote",
  "body",
  "br",
  "button",
  "canvas",
  "caption",
  "cite",
  "code",
  "col",
  "colgroup",
  "data",
  "datalist",
  "dd",
  "del",
  "details",
  "dfn",
  "dialog",
  "div",
  "dl",
  "dt",
  "em",
  "embed",
  "fieldset",
  "figcaption",
  "figure",
  "footer",
  "form",
  "h1",
  "h2",
  "h3",
  "h4",
  "h5",
  "h6",
  "head",
  "header",
  "hgroup",
  "hr",
  "html",
  "i",
  "iframe",
  "img",
  "input",
  "ins",
  "kbd",
  "keygen",
  "label",
  "legend",
  "li",
  "link",
  "main",
  "map",
  "mark",
  "menu",
  "menuitem",
  "meta",
  "meter",
  "nav",
  "noscript",
  "object",
  "ol",
  "optgroup",
  "option",
  "output",
  "p",
  "param",
  "picture",
  "pre",
  "progress",
  "q",
  "rp",
  "rt",
  "ruby",
  "s",
  "samp",
  "script",
  "section",
  "select",
  "small",
  "source",
  "span",
  "strong",
  "style",
  "sub",
  "summary",
  "sup",
  "table",
  "tbody",
  "td",
  "textarea",
  "tfoot",
  "th",
  "thead",
  "time",
  "title",
  "tr",
  "track",
  "u",
  "ul",
  "var",
  "video",
  "wbr",
  // SVG
  "circle",
  "clipPath",
  "defs",
  "ellipse",
  "foreignObject",
  "g",
  "image",
  "line",
  "linearGradient",
  "mask",
  "path",
  "pattern",
  "polygon",
  "polyline",
  "radialGradient",
  "rect",
  "stop",
  "svg",
  "text",
  "tspan"
];
Ro.assign({
  batchedUpdates: fF,
  createStringInterpolator: ML,
  colors: cse
});
var $le = Vse(kle, {
  applyAnimatedValues: mle,
  createAnimatedStyle: (e) => new xle(e),
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  getComponentProps: ({ scrollTop: e, scrollLeft: t, ...r }) => r
}), nV = $le.animated;
/*!
 * Font Awesome Pro 6.7.2 by @fontawesome - https://fontawesome.com
 * License - https://fontawesome.com/license (Commercial License)
 * Copyright 2024 Fonticons, Inc.
 */
const Ole = {
  prefix: "fas",
  iconName: "down-left-and-up-right-to-center",
  icon: [512, 512, ["compress-alt"], "f422", "M439 7c9.4-9.4 24.6-9.4 33.9 0l32 32c9.4 9.4 9.4 24.6 0 33.9l-87 87 39 39c6.9 6.9 8.9 17.2 5.2 26.2s-12.5 14.8-22.2 14.8l-144 0c-13.3 0-24-10.7-24-24l0-144c0-9.7 5.8-18.5 14.8-22.2s19.3-1.7 26.2 5.2l39 39L439 7zM72 272l144 0c13.3 0 24 10.7 24 24l0 144c0 9.7-5.8 18.5-14.8 22.2s-19.3 1.7-26.2-5.2l-39-39L73 505c-9.4 9.4-24.6 9.4-33.9 0L7 473c-9.4-9.4-9.4-24.6 0-33.9l87-87L55 313c-6.9-6.9-8.9-17.2-5.2-26.2s12.5-14.8 22.2-14.8z"]
}, Ele = {
  prefix: "fas",
  iconName: "up-right-and-down-left-from-center",
  icon: [512, 512, ["expand-alt"], "f424", "M344 0L488 0c13.3 0 24 10.7 24 24l0 144c0 9.7-5.8 18.5-14.8 22.2s-19.3 1.7-26.2-5.2l-39-39-87 87c-9.4 9.4-24.6 9.4-33.9 0l-32-32c-9.4-9.4-9.4-24.6 0-33.9l87-87L327 41c-6.9-6.9-8.9-17.2-5.2-26.2S334.3 0 344 0zM168 512L24 512c-13.3 0-24-10.7-24-24L0 344c0-9.7 5.8-18.5 14.8-22.2s19.3-1.7 26.2 5.2l39 39 87-87c9.4-9.4 24.6-9.4 33.9 0l32 32c9.4 9.4 9.4 24.6 0 33.9l-87 87 39 39c6.9 6.9 8.9 17.2 5.2 26.2s-12.5 14.8-22.2 14.8z"]
};
var S5 = /* @__PURE__ */ ((e) => (e[e.NONE = 0] = "NONE", e[e.INPUT = 1] = "INPUT", e[e.PANEL = 2] = "PANEL", e[e.DIALOGUE = 3] = "DIALOGUE", e))(S5 || {}), Sle = Object.freeze({
  // See: https://github.com/twbs/bootstrap/blob/main/scss/mixins/_visually-hidden.scss
  position: "absolute",
  border: 0,
  width: 1,
  height: 1,
  padding: 0,
  margin: -1,
  overflow: "hidden",
  clip: "rect(0, 0, 0, 0)",
  whiteSpace: "nowrap",
  wordWrap: "normal"
}), Ple = "VisuallyHidden", oV = Y.forwardRef(
  (e, t) => /* @__PURE__ */ q(
    Ta.span,
    {
      ...e,
      ref: t,
      style: { ...Sle, ...e.style }
    }
  )
);
oV.displayName = Ple;
var gN = oV;
const ch = [], Cle = (e) => {
  ch.push(e);
}, Ale = (e) => {
  const t = ch.findIndex((r) => r.id === e);
  t !== -1 && ch.splice(t, 1);
}, _le = (e, t) => {
  const r = ch.find((n) => n.id === e);
  r && Object.assign(r, t);
}, Nle = () => ch.filter((e) => e.closeOnEsc).sort((e, t) => t.zIndex - e.zIndex)[0];
typeof window < "u" && !window.__modalEscListenerInstalled && (window.__modalEscListenerInstalled = !0, window.addEventListener("keydown", (e) => {
  if (e.key !== "Escape" && e.key !== "Esc") return;
  const t = Nle();
  t && (e.preventDefault(), t.onClose());
}));
let cm = 70;
const jle = ({
  styles: e,
  backdropClassName: t,
  disableHotkeyInput: r,
  enableHotkeyInput: n
}) => (Ne(() => (r(S5.DIALOGUE), () => {
  n(S5.DIALOGUE);
}), [r, n]), /* @__PURE__ */ q(Kee, { forceMount: !0, asChild: !0, children: /* @__PURE__ */ q(
  nV.div,
  {
    className: fg("fixed inset-0 z-[69]", t),
    style: {
      opacity: e.opacity,
      pointerEvents: "none",
      background: "radial-gradient(800px 400px at 10% -10%, rgba(45,129,255,0.10), transparent), radial-gradient(600px 320px at 110% 110%, rgba(28,182,190,0.10), transparent), rgba(0,0,0,0.60)"
    }
  }
) })), P5 = ({ children: e }) => /* @__PURE__ */ q(Vt, { children: e }), aV = Br(
  void 0
), MS = ({ className: e, size: t = "md" }) => {
  const r = Ut(aV);
  if (!r) return null;
  const { expanded: n, toggleExpanded: o } = r;
  return /* @__PURE__ */ q(
    "button",
    {
      type: "button",
      "aria-label": n ? "Restore modal size" : "Expand modal",
      onClick: o,
      className: fg(
        "flex items-center justify-center rounded-full bg-black/40 text-white/60 transition-all hover:bg-black/70 hover:text-white",
        {
          sm: "h-5 w-5 text-sm",
          md: "h-7 w-7 text-md",
          lg: "h-9 w-9 text-xl"
        }[t],
        "relative z-[70]",
        e
      ),
      children: /* @__PURE__ */ q(
        Zg,
        {
          icon: n ? Ole : Ele
        }
      )
    }
  );
};
MS.displayName = "ModalExpandButton";
const eu = ({
  isOpen: e,
  title: t,
  titleIcon: r,
  onTitleIconClick: n,
  onClose: o,
  enableHotkeyInput: a = () => {
  },
  disableHotkeyInput: i = () => {
  },
  className: s,
  backdropClassName: l,
  width: c,
  children: u,
  childPadding: f = !0,
  titleIconClassName: p,
  showClose: v = !0,
  draggable: x = !1,
  resizable: b = !1,
  initialPosition: m,
  closeOnOutsideClick: w = !0,
  closeOnEsc: $ = !0,
  allowBackgroundInteraction: E = !1,
  expandable: S = !1,
  accessibleTitle: h,
  accessibleDescription: U
}) => {
  const [G, Q] = _e(
    null
  ), [Z, X] = _e(!1), [J, I] = _e(!1), te = ie({ x: 0, y: 0 }), V = ie({ x: 0, y: 0 }), D = ie(null), F = ie(null), R = ie(null), [H, B] = _e(() => ++cm), [g, d] = _e(!1), O = ie(null), C = dN(e, {
    from: {
      opacity: 0,
      transform: "scale(0.95) translateY(-10px)"
    },
    enter: {
      opacity: 1,
      transform: "scale(1) translateY(0px)"
    },
    leave: {
      opacity: 0,
      transform: "scale(0.95) translateY(10px)"
    },
    config: {
      tension: 300,
      friction: 30,
      mass: 0.8
    }
  }), A = dN(e, {
    from: { opacity: 0 },
    enter: { opacity: 1 },
    leave: { opacity: 0 },
    config: {
      tension: 280,
      friction: 25
    }
  });
  Ne(() => {
    g ? (F.current && (O.current = { ...F.current }), Q({ x: 0, y: 0 }), F.current = { x: 0, y: 0 }, D.current && (D.current.style.left = "0px", D.current.style.top = "0px", D.current.style.margin = "0", D.current.style.position = "fixed", D.current.style.zIndex = String(H))) : O.current && (Q({ ...O.current }), F.current = { ...O.current }, D.current && (D.current.style.left = O.current.x + "px", D.current.style.top = O.current.y + "px", D.current.style.margin = "0", D.current.style.position = "fixed", D.current.style.zIndex = String(H)));
  }, [g, H]);
  const N = () => d((le) => !le);
  Ne(() => {
    e ? R.current ? (Q({ ...R.current }), F.current = { ...R.current }, D.current && (D.current.style.left = R.current.x + "px", D.current.style.top = R.current.y + "px", D.current.style.margin = "0", D.current.style.position = "fixed", D.current.style.zIndex = String(H))) : m && (Q({ ...m }), F.current = { ...m }, D.current && (D.current.style.left = m.x + "px", D.current.style.top = m.y + "px", D.current.style.margin = "0", D.current.style.position = "fixed", D.current.style.zIndex = String(H))) : F.current && (R.current = { ...F.current });
  }, [e, H]), Ne(() => {
    if (!Z) return;
    let le = null;
    const se = (rt) => {
      if (!D.current) return;
      const Ct = rt.clientX - V.current.x, ue = rt.clientY - V.current.y, je = te.current.x + Ct, Re = te.current.y + ue, ze = D.current, { width: Ot, height: Kr } = ze.getBoundingClientRect(), xo = window.innerWidth, Hn = window.innerHeight, Qr = 450, wo = -450, Ht = 0, lo = xo - Ot + Qr, br = Hn - Kr + Qr, co = Math.max(wo, Math.min(je, lo)), za = Math.max(Ht, Math.min(Re, br));
      F.current = { x: co, y: za }, D.current && (le && cancelAnimationFrame(le), le = requestAnimationFrame(() => {
        D.current && F.current && (D.current.style.left = F.current.x + "px", D.current.style.top = F.current.y + "px", D.current.style.margin = "0", D.current.style.position = "fixed", D.current.style.zIndex = String(H));
      }));
    }, de = () => {
      X(!1), F.current && Q({ ...F.current });
    };
    return window.addEventListener("mousemove", se), window.addEventListener("mouseup", de), () => {
      window.removeEventListener("mousemove", se), window.removeEventListener("mouseup", de), le && cancelAnimationFrame(le);
    };
  }, [Z, H]);
  const j = (le) => {
    var se, de;
    if (!D.current) return;
    g && d(!1), le.preventDefault(), le.stopPropagation();
    const rt = D.current, { width: Ct, height: ue } = rt.getBoundingClientRect(), je = window.innerWidth, Re = window.innerHeight;
    let ze = ((se = F.current) == null ? void 0 : se.x) ?? (G == null ? void 0 : G.x), Ot = ((de = F.current) == null ? void 0 : de.y) ?? (G == null ? void 0 : G.y);
    (ze === void 0 || Ot === void 0) && (m ? (ze = m.x, Ot = m.y) : (ze = (je - Ct) / 2, Ot = (Re - ue) / 2)), te.current = { x: ze, y: Ot }, V.current = { x: le.clientX, y: le.clientY }, X(!0), !G && !F.current && (Q({ x: ze, y: Ot }), F.current = { x: ze, y: Ot }, D.current && (D.current.style.left = ze + "px", D.current.style.top = Ot + "px", D.current.style.margin = "0", D.current.style.position = "fixed", D.current.style.zIndex = String(H)));
  };
  let _ = u;
  if (x) {
    let le = !1;
    _ = Array.isArray(u) ? u.map((se) => {
      if (!le && Dl(se) && (se.type === P5 || se.type.displayName === "ModalDragHandle")) {
        le = !0;
        const de = se;
        return Ll(de, {
          children: /* @__PURE__ */ q(
            "div",
            {
              style: { cursor: "move", userSelect: "none" },
              onMouseDown: j,
              children: de.props.children
            }
          )
        });
      }
      return se;
    }) : Dl(u) && (u.type === P5 || u.type.displayName === "ModalDragHandle") ? (() => {
      const se = u;
      return Ll(se, {
        children: /* @__PURE__ */ q(
          "div",
          {
            style: { cursor: "move", userSelect: "none" },
            onMouseDown: j,
            children: se.props.children
          }
        )
      });
    })() : u;
  }
  const T = ie(null), M = ie(null), z = (le, se) => {
    if (!D.current || (le.preventDefault(), le.stopPropagation(), g)) return;
    const de = D.current.getBoundingClientRect();
    T.current = se, M.current = {
      mouseX: le.clientX,
      mouseY: le.clientY,
      width: de.width,
      height: de.height,
      x: de.left,
      y: de.top
    }, I(!0);
  };
  Ne(() => {
    if (!J) return;
    let le = null;
    const se = (rt) => {
      if (!D.current || !M.current || !T.current)
        return;
      const Ct = rt.clientX - M.current.mouseX, ue = rt.clientY - M.current.mouseY;
      let je = M.current.width, Re = M.current.height, ze = M.current.x, Ot = M.current.y;
      const Kr = T.current;
      Kr.includes("right") && (je = M.current.width + Ct), Kr.includes("left") && (je = M.current.width - Ct, ze = M.current.x + Ct), Kr.includes("bottom") && (Re = M.current.height + ue), Kr.includes("top") && (Re = M.current.height - ue, Ot = M.current.y + ue), je = Math.max(320, je), Re = Math.max(240, Re), F.current = { x: ze, y: Ot }, Ce.current = { width: je, height: Re }, le && cancelAnimationFrame(le), le = requestAnimationFrame(() => {
        D.current && F.current && (D.current.style.width = je + "px", D.current.style.height = Re + "px", D.current.style.left = F.current.x + "px", D.current.style.top = F.current.y + "px", D.current.style.margin = "0", D.current.style.position = "fixed", D.current.style.zIndex = String(H));
      });
    }, de = () => {
      I(!1), F.current && Q({ ...F.current }), Ce.current && oe({ ...Ce.current });
    };
    return window.addEventListener("mousemove", se), window.addEventListener("mouseup", de), () => {
      window.removeEventListener("mousemove", se), window.removeEventListener("mouseup", de), le && cancelAnimationFrame(le);
    };
  }, [J, H]);
  const ee = () => {
    if (!b || g) return null;
    const le = "absolute z-[75] bg-transparent select-none", se = 5, de = 2, rt = [
      { dir: "top", className: `top-0 left-0 w-full h-${de}` },
      { dir: "bottom", className: `bottom-0 left-0 w-full h-${de}` },
      { dir: "left", className: `left-0 top-0 h-full w-${de}` },
      { dir: "right", className: `right-0 top-0 h-full w-${de}` },
      {
        dir: "top-left",
        className: `top-0 left-0 w-${se} h-${se}`
      },
      {
        dir: "top-right",
        className: `top-0 right-0 w-${se} h-${se}`
      },
      {
        dir: "bottom-left",
        className: `bottom-0 left-0 w-${se} h-${se}`
      },
      {
        dir: "bottom-right",
        className: `bottom-0 right-0 w-${se} h-${se}`
      }
    ], Ct = {
      top: "n-resize",
      bottom: "s-resize",
      left: "w-resize",
      right: "e-resize",
      "top-left": "nw-resize",
      "top-right": "ne-resize",
      "bottom-left": "sw-resize",
      "bottom-right": "se-resize"
    };
    return rt.map((ue) => /* @__PURE__ */ q(
      "div",
      {
        className: `${le} ${ue.className}`,
        style: { cursor: Ct[ue.dir] },
        onMouseDown: (je) => z(je, ue.dir)
      },
      ue.dir
    ));
  }, [k, oe] = _e(
    null
  ), Ce = ie(null), Ze = ie(null);
  Ne(() => {
    if (e && !k && D.current && b) {
      const { width: le, height: se } = D.current.getBoundingClientRect();
      oe({ width: le, height: se }), Ce.current = { width: le, height: se };
    }
  }, [e, k, b]), Ne(() => {
    if (b) {
      if (!e)
        Ce.current && (Ze.current = { ...Ce.current });
      else if (Ze.current && D.current) {
        const { width: le, height: se } = Ze.current;
        D.current.style.width = le + "px", D.current.style.height = se + "px", oe({ width: le, height: se }), Ce.current = { width: le, height: se };
      }
    }
  }, [e, b]), Ne(() => {
    const le = () => {
      D.current && H < cm && (cm += 1, B(cm), D.current.style.zIndex = String(cm));
    }, se = D.current;
    return se && se.addEventListener("mousedown", le), () => {
      se && se.removeEventListener("mousedown", le);
    };
  }, [H]), Ne(() => {
    if (!e || E) return;
    const le = (se) => {
      if (se.key === "Escape" || se.key === "Esc") return;
      const de = se.target;
      de && (de.closest(
        '[role="dialog"], [role="menu"], [role="listbox"], [data-headlessui-portal]'
      ) || de.matches("input, textarea, select, button, [contenteditable]")) || se.stopPropagation();
    };
    return window.addEventListener("keydown", le, !0), () => {
      window.removeEventListener("keydown", le, !0);
    };
  }, [e, E]), Ne(() => {
    if (!E) return;
    const le = D.current;
    if (!le) return;
    const se = (ue) => {
      ue && (ue.hasAttribute("inert") && ue.removeAttribute("inert"), ue.inert && (ue.inert = !1), ue.getAttribute("aria-hidden") === "true" && ue.removeAttribute("aria-hidden"));
    };
    let de = le;
    for (; de; )
      se(de), de = de.parentElement;
    const rt = new MutationObserver((ue) => {
      ue.forEach((je) => {
        if (je.type === "attributes" && je.attributeName === "inert" && je.target instanceof HTMLElement) {
          const Re = je.target;
          (Re === le || le.contains(Re)) && se(Re);
        }
      });
    });
    rt.observe(le, {
      attributes: !0,
      subtree: !1,
      attributeFilter: ["inert"]
    }), document.querySelectorAll(
      "[data-radix-portal][inert], [data-headlessui-portal][inert]"
    ).forEach((ue) => ue.removeAttribute("inert"));
    const Ct = new MutationObserver((ue) => {
      ue.forEach((je) => {
        if (je.type === "attributes" && je.attributeName === "inert" && je.target.hasAttribute("inert")) {
          const Re = je.target;
          (Re.hasAttribute("data-radix-portal") || Re.hasAttribute("data-headlessui-portal")) && se(Re);
        }
      });
    });
    return Ct.observe(document.body, {
      attributes: !0,
      subtree: !0,
      attributeFilter: ["inert"]
    }), () => {
      rt.disconnect(), Ct.disconnect();
    };
  }, [E]);
  const rn = ie(Math.floor(Math.random() * 1e9));
  Ne(() => {
    if (e)
      return Cle({
        id: rn.current,
        zIndex: H,
        onClose: o,
        closeOnEsc: $
      }), () => {
        Ale(rn.current);
      };
  }, [e]), Ne(() => {
    e && _le(rn.current, { zIndex: H, onClose: o, closeOnEsc: $ });
  }, [e, H, o, $]);
  const Xr = () => g ? {
    position: "fixed",
    left: 0,
    top: 0,
    margin: 0,
    zIndex: H,
    width: "100vw",
    height: "100vh",
    ...E ? { pointerEvents: "auto" } : {}
  } : !x || !G ? {
    ...b && k ? { width: k.width, height: k.height } : {},
    ...E ? { pointerEvents: "auto" } : {}
  } : {
    position: "fixed",
    left: G.x,
    top: G.y,
    margin: 0,
    zIndex: H,
    ...b && k ? { width: k.width, height: k.height } : {},
    ...E ? { pointerEvents: "auto" } : {}
  };
  return /* @__PURE__ */ q(
    Bee,
    {
      open: e,
      onOpenChange: (le) => !le && w && o(),
      modal: !E,
      children: /* @__PURE__ */ q(Xee, { children: /* @__PURE__ */ Pe(
        "div",
        {
          className: "fixed inset-0 z-[70]",
          style: E ? { pointerEvents: "none" } : void 0,
          children: [
            !E && A(
              (le, se) => se ? /* @__PURE__ */ q(
                jle,
                {
                  styles: le,
                  backdropClassName: l,
                  disableHotkeyInput: i,
                  enableHotkeyInput: a
                },
                "backdrop"
              ) : null
            ),
            E && /* @__PURE__ */ q(
              "div",
              {
                className: fg("fixed inset-0 z-[69]", l),
                style: { pointerEvents: "none" }
              }
            ),
            /* @__PURE__ */ q(aV.Provider, { value: { expanded: g, toggleExpanded: N }, children: /* @__PURE__ */ q(
              "div",
              {
                className: "flex min-h-full items-center justify-center p-4 text-center",
                style: E ? { pointerEvents: "none" } : void 0,
                children: C((le, se) => se ? /* @__PURE__ */ q(
                  Jee,
                  {
                    forceMount: !0,
                    asChild: !0,
                    ...U ? {} : { "aria-describedby": void 0 },
                    onPointerDownOutside: (de) => {
                      (!w || E) && de.preventDefault();
                    },
                    onEscapeKeyDown: (de) => {
                      $ || de.preventDefault();
                    },
                    onInteractOutside: (de) => {
                      E && de.preventDefault();
                    },
                    children: /* @__PURE__ */ Pe(
                      nV.div,
                      {
                        className: fg(
                          "w-full max-w-lg rounded-xl relative border border-ui-panel-border bg-ui-modal text-left align-middle shadow-2xl z-[70]",
                          f && !g ? "p-4" : "",
                          s,
                          "!transition-none",
                          // Always disable CSS transitions for spring animations
                          g && "w-screen h-screen max-w-screen max-h-screen rounded-none"
                        ),
                        ref: D,
                        style: {
                          ...Xr(),
                          opacity: le.opacity,
                          transform: le.transform,
                          transformOrigin: "center center",
                          willChange: "transform, opacity"
                          // Optimize for animations
                        },
                        children: [
                          /* @__PURE__ */ Pe("div", { className: "w-full h-full", children: [
                            U && /* @__PURE__ */ q(gN, { asChild: !0, children: /* @__PURE__ */ q(Qee, { children: U }) }),
                            t ? /* @__PURE__ */ q(
                              gA,
                              {
                                className: fg(
                                  "mb-4 flex justify-between pb-0 text-xl font-bold text-base-fg"
                                ),
                                children: /* @__PURE__ */ q(Vt, { children: n ? /* @__PURE__ */ Pe(
                                  "button",
                                  {
                                    className: "flex items-center gap-3",
                                    onClick: n,
                                    children: [
                                      r && /* @__PURE__ */ q(
                                        Zg,
                                        {
                                          icon: r,
                                          className: p
                                        }
                                      ),
                                      t
                                    ]
                                  }
                                ) : /* @__PURE__ */ Pe("div", { className: "flex items-center gap-3", children: [
                                  r && /* @__PURE__ */ q(
                                    Zg,
                                    {
                                      icon: r,
                                      className: p
                                    }
                                  ),
                                  t
                                ] }) })
                              }
                            ) : /* @__PURE__ */ q(gN, { asChild: !0, children: /* @__PURE__ */ q(gA, { children: h ?? "Dialog" }) }),
                            /* @__PURE__ */ q("div", { className: "h-full".trim(), children: _ }),
                            ee()
                          ] }),
                          (v || S) && /* @__PURE__ */ Pe("div", { className: "absolute top-0 right-0 m-2.5 z-[80] flex items-center gap-2", children: [
                            S && /* @__PURE__ */ q(eu.ExpandButton, {}),
                            v && /* @__PURE__ */ q(tse, { onClick: o })
                          ] })
                        ]
                      }
                    )
                  }
                ) : null)
              }
            ) })
          ]
        }
      ) })
    }
  );
};
eu.DragHandle = P5;
eu.DragHandle.displayName = "ModalDragHandle";
eu.ExpandButton = MS;
MS.displayName = "ModalExpandButton";
function Tl(e, t, { checkForDefaultPrevented: r = !0 } = {}) {
  return function(n) {
    if (e == null || e(n), r === !1 || !n.defaultPrevented)
      return t == null ? void 0 : t(n);
  };
}
function hN(e, t) {
  if (typeof e == "function")
    return e(t);
  e != null && (e.current = t);
}
function iV(...e) {
  return (t) => {
    let r = !1;
    const n = e.map((o) => {
      const a = hN(o, t);
      return !r && typeof a == "function" && (r = !0), a;
    });
    if (r)
      return () => {
        for (let o = 0; o < n.length; o++) {
          const a = n[o];
          typeof a == "function" ? a() : hN(e[o], null);
        }
      };
  };
}
function Mu(...e) {
  return Y.useCallback(iV(...e), e);
}
function Ile(e, t) {
  const r = Y.createContext(t), n = (a) => {
    const { children: i, ...s } = a, l = Y.useMemo(() => s, Object.values(s));
    return /* @__PURE__ */ q(r.Provider, { value: l, children: i });
  };
  n.displayName = e + "Provider";
  function o(a) {
    const i = Y.useContext(r);
    if (i) return i;
    if (t !== void 0) return t;
    throw new Error(`\`${a}\` must be used within \`${e}\``);
  }
  return [n, o];
}
function Tle(e, t = []) {
  let r = [];
  function n(a, i) {
    const s = Y.createContext(i), l = r.length;
    r = [...r, i];
    const c = (f) => {
      var p;
      const { scope: v, children: x, ...b } = f, m = ((p = v == null ? void 0 : v[e]) == null ? void 0 : p[l]) || s, w = Y.useMemo(() => b, Object.values(b));
      return /* @__PURE__ */ q(m.Provider, { value: w, children: x });
    };
    c.displayName = a + "Provider";
    function u(f, p) {
      var v;
      const x = ((v = p == null ? void 0 : p[e]) == null ? void 0 : v[l]) || s, b = Y.useContext(x);
      if (b) return b;
      if (i !== void 0) return i;
      throw new Error(`\`${f}\` must be used within \`${a}\``);
    }
    return [c, u];
  }
  const o = () => {
    const a = r.map((i) => Y.createContext(i));
    return function(i) {
      const s = (i == null ? void 0 : i[e]) || a;
      return Y.useMemo(
        () => ({ [`__scope${e}`]: { ...i, [e]: s } }),
        [i, s]
      );
    };
  };
  return o.scopeName = e, [n, Mle(o, ...t)];
}
function Mle(...e) {
  const t = e[0];
  if (e.length === 1) return t;
  const r = () => {
    const n = e.map((o) => ({
      useScope: o(),
      scopeName: o.scopeName
    }));
    return function(o) {
      const a = n.reduce((i, { useScope: s, scopeName: l }) => {
        const c = s(o)[`__scope${l}`];
        return { ...i, ...c };
      }, {});
      return Y.useMemo(() => ({ [`__scope${t.scopeName}`]: a }), [a]);
    };
  };
  return r.scopeName = t.scopeName, r;
}
var uh = globalThis != null && globalThis.document ? Y.useLayoutEffect : () => {
}, Rle = Y[" useId ".trim().toString()] || (() => {
}), zle = 0;
function $w(e) {
  const [t, r] = Y.useState(Rle());
  return uh(() => {
    r((n) => n ?? String(zle++));
  }, [e]), e || (t ? `radix-${t}` : "");
}
var Fle = Y[" useInsertionEffect ".trim().toString()] || uh;
function Dle({
  prop: e,
  defaultProp: t,
  onChange: r = () => {
  },
  caller: n
}) {
  const [o, a, i] = Lle({
    defaultProp: t,
    onChange: r
  }), s = e !== void 0, l = s ? e : o;
  {
    const u = Y.useRef(e !== void 0);
    Y.useEffect(() => {
      const f = u.current;
      f !== s && console.warn(
        `${n} is changing from ${f ? "controlled" : "uncontrolled"} to ${s ? "controlled" : "uncontrolled"}. Components should not switch from controlled to uncontrolled (or vice versa). Decide between using a controlled or uncontrolled value for the lifetime of the component.`
      ), u.current = s;
    }, [s, n]);
  }
  const c = Y.useCallback(
    (u) => {
      var f;
      if (s) {
        const p = Vle(u) ? u(e) : u;
        p !== e && ((f = i.current) == null || f.call(i, p));
      } else
        a(u);
    },
    [s, e, a, i]
  );
  return [l, c];
}
function Lle({
  defaultProp: e,
  onChange: t
}) {
  const [r, n] = Y.useState(e), o = Y.useRef(r), a = Y.useRef(t);
  return Fle(() => {
    a.current = t;
  }, [t]), Y.useEffect(() => {
    var i;
    o.current !== r && ((i = a.current) == null || i.call(a, r), o.current = r);
  }, [r, o]), [r, n, a];
}
function Vle(e) {
  return typeof e == "function";
}
// @__NO_SIDE_EFFECTS__
function sV(e) {
  const t = /* @__PURE__ */ Wle(e), r = Y.forwardRef((n, o) => {
    const { children: a, ...i } = n, s = Y.Children.toArray(a), l = s.find(Yle);
    if (l) {
      const c = l.props.children, u = s.map((f) => f === l ? Y.Children.count(c) > 1 ? Y.Children.only(null) : Y.isValidElement(c) ? c.props.children : null : f);
      return /* @__PURE__ */ q(t, { ...i, ref: o, children: Y.isValidElement(c) ? Y.cloneElement(c, void 0, u) : null });
    }
    return /* @__PURE__ */ q(t, { ...i, ref: o, children: a });
  });
  return r.displayName = `${e}.Slot`, r;
}
// @__NO_SIDE_EFFECTS__
function Wle(e) {
  const t = Y.forwardRef((r, n) => {
    const { children: o, ...a } = r;
    if (Y.isValidElement(o)) {
      const i = Gle(o), s = Hle(a, o.props);
      return o.type !== Y.Fragment && (s.ref = n ? iV(n, i) : i), Y.cloneElement(o, s);
    }
    return Y.Children.count(o) > 1 ? Y.Children.only(null) : null;
  });
  return t.displayName = `${e}.SlotClone`, t;
}
var Ule = Symbol("radix.slottable");
function Yle(e) {
  return Y.isValidElement(e) && typeof e.type == "function" && "__radixId" in e.type && e.type.__radixId === Ule;
}
function Hle(e, t) {
  const r = { ...t };
  for (const n in t) {
    const o = e[n], a = t[n];
    /^on[A-Z]/.test(n) ? o && a ? r[n] = (...i) => {
      const s = a(...i);
      return o(...i), s;
    } : o && (r[n] = o) : n === "style" ? r[n] = { ...o, ...a } : n === "className" && (r[n] = [o, a].filter(Boolean).join(" "));
  }
  return { ...e, ...r };
}
function Gle(e) {
  var t, r;
  let n = (t = Object.getOwnPropertyDescriptor(e.props, "ref")) == null ? void 0 : t.get, o = n && "isReactWarning" in n && n.isReactWarning;
  return o ? e.ref : (n = (r = Object.getOwnPropertyDescriptor(e, "ref")) == null ? void 0 : r.get, o = n && "isReactWarning" in n && n.isReactWarning, o ? e.props.ref : e.props.ref || e.ref);
}
var qle = [
  "a",
  "button",
  "div",
  "form",
  "h2",
  "h3",
  "img",
  "input",
  "label",
  "li",
  "nav",
  "ol",
  "p",
  "select",
  "span",
  "svg",
  "ul"
], Ma = qle.reduce((e, t) => {
  const r = /* @__PURE__ */ sV(`Primitive.${t}`), n = Y.forwardRef((o, a) => {
    const { asChild: i, ...s } = o, l = i ? r : t;
    return typeof window < "u" && (window[Symbol.for("radix-ui")] = !0), /* @__PURE__ */ q(l, { ...s, ref: a });
  });
  return n.displayName = `Primitive.${t}`, { ...e, [t]: n };
}, {});
function Ble(e, t) {
  e && ld.flushSync(() => e.dispatchEvent(t));
}
function fh(e) {
  const t = Y.useRef(e);
  return Y.useEffect(() => {
    t.current = e;
  }), Y.useMemo(() => (...r) => {
    var n;
    return (n = t.current) == null ? void 0 : n.call(t, ...r);
  }, []);
}
function Xle(e, t = globalThis == null ? void 0 : globalThis.document) {
  const r = fh(e);
  Y.useEffect(() => {
    const n = (o) => {
      o.key === "Escape" && r(o);
    };
    return t.addEventListener("keydown", n, { capture: !0 }), () => t.removeEventListener("keydown", n, { capture: !0 });
  }, [r, t]);
}
var Kle = "DismissableLayer", C5 = "dismissableLayer.update", Jle = "dismissableLayer.pointerDownOutside", Qle = "dismissableLayer.focusOutside", bN, lV = Y.createContext({
  layers: /* @__PURE__ */ new Set(),
  layersWithOutsidePointerEventsDisabled: /* @__PURE__ */ new Set(),
  branches: /* @__PURE__ */ new Set()
}), cV = Y.forwardRef(
  (e, t) => {
    const {
      disableOutsidePointerEvents: r = !1,
      onEscapeKeyDown: n,
      onPointerDownOutside: o,
      onFocusOutside: a,
      onInteractOutside: i,
      onDismiss: s,
      ...l
    } = e, c = Y.useContext(lV), [u, f] = Y.useState(null), p = (u == null ? void 0 : u.ownerDocument) ?? (globalThis == null ? void 0 : globalThis.document), [, v] = Y.useState({}), x = Mu(t, (G) => f(G)), b = Array.from(c.layers), [m] = [...c.layersWithOutsidePointerEventsDisabled].slice(-1), w = b.indexOf(m), $ = u ? b.indexOf(u) : -1, E = c.layersWithOutsidePointerEventsDisabled.size > 0, S = $ >= w, h = tce((G) => {
      const Q = G.target, Z = [...c.branches].some((X) => X.contains(Q));
      !S || Z || (o == null || o(G), i == null || i(G), G.defaultPrevented || s == null || s());
    }, p), U = rce((G) => {
      const Q = G.target;
      [...c.branches].some((Z) => Z.contains(Q)) || (a == null || a(G), i == null || i(G), G.defaultPrevented || s == null || s());
    }, p);
    return Xle((G) => {
      $ === c.layers.size - 1 && (n == null || n(G), !G.defaultPrevented && s && (G.preventDefault(), s()));
    }, p), Y.useEffect(() => {
      if (u)
        return r && (c.layersWithOutsidePointerEventsDisabled.size === 0 && (bN = p.body.style.pointerEvents, p.body.style.pointerEvents = "none"), c.layersWithOutsidePointerEventsDisabled.add(u)), c.layers.add(u), yN(), () => {
          r && c.layersWithOutsidePointerEventsDisabled.size === 1 && (p.body.style.pointerEvents = bN);
        };
    }, [u, p, r, c]), Y.useEffect(() => () => {
      u && (c.layers.delete(u), c.layersWithOutsidePointerEventsDisabled.delete(u), yN());
    }, [u, c]), Y.useEffect(() => {
      const G = () => v({});
      return document.addEventListener(C5, G), () => document.removeEventListener(C5, G);
    }, []), /* @__PURE__ */ q(
      Ma.div,
      {
        ...l,
        ref: x,
        style: {
          pointerEvents: E ? S ? "auto" : "none" : void 0,
          ...e.style
        },
        onFocusCapture: Tl(e.onFocusCapture, U.onFocusCapture),
        onBlurCapture: Tl(e.onBlurCapture, U.onBlurCapture),
        onPointerDownCapture: Tl(
          e.onPointerDownCapture,
          h.onPointerDownCapture
        )
      }
    );
  }
);
cV.displayName = Kle;
var Zle = "DismissableLayerBranch", ece = Y.forwardRef((e, t) => {
  const r = Y.useContext(lV), n = Y.useRef(null), o = Mu(t, n);
  return Y.useEffect(() => {
    const a = n.current;
    if (a)
      return r.branches.add(a), () => {
        r.branches.delete(a);
      };
  }, [r.branches]), /* @__PURE__ */ q(Ma.div, { ...e, ref: o });
});
ece.displayName = Zle;
function tce(e, t = globalThis == null ? void 0 : globalThis.document) {
  const r = fh(e), n = Y.useRef(!1), o = Y.useRef(() => {
  });
  return Y.useEffect(() => {
    const a = (s) => {
      if (s.target && !n.current) {
        let l = function() {
          uV(
            Jle,
            r,
            c,
            { discrete: !0 }
          );
        };
        const c = { originalEvent: s };
        s.pointerType === "touch" ? (t.removeEventListener("click", o.current), o.current = l, t.addEventListener("click", o.current, { once: !0 })) : l();
      } else
        t.removeEventListener("click", o.current);
      n.current = !1;
    }, i = window.setTimeout(() => {
      t.addEventListener("pointerdown", a);
    }, 0);
    return () => {
      window.clearTimeout(i), t.removeEventListener("pointerdown", a), t.removeEventListener("click", o.current);
    };
  }, [t, r]), {
    // ensures we check React component tree (not just DOM tree)
    onPointerDownCapture: () => n.current = !0
  };
}
function rce(e, t = globalThis == null ? void 0 : globalThis.document) {
  const r = fh(e), n = Y.useRef(!1);
  return Y.useEffect(() => {
    const o = (a) => {
      a.target && !n.current && uV(Qle, r, { originalEvent: a }, {
        discrete: !1
      });
    };
    return t.addEventListener("focusin", o), () => t.removeEventListener("focusin", o);
  }, [t, r]), {
    onFocusCapture: () => n.current = !0,
    onBlurCapture: () => n.current = !1
  };
}
function yN() {
  const e = new CustomEvent(C5);
  document.dispatchEvent(e);
}
function uV(e, t, r, { discrete: n }) {
  const o = r.originalEvent.target, a = new CustomEvent(e, { bubbles: !1, cancelable: !0, detail: r });
  t && o.addEventListener(e, t, { once: !0 }), n ? Ble(o, a) : o.dispatchEvent(a);
}
var Ow = "focusScope.autoFocusOnMount", Ew = "focusScope.autoFocusOnUnmount", vN = { bubbles: !1, cancelable: !0 }, nce = "FocusScope", fV = Y.forwardRef((e, t) => {
  const {
    loop: r = !1,
    trapped: n = !1,
    onMountAutoFocus: o,
    onUnmountAutoFocus: a,
    ...i
  } = e, [s, l] = Y.useState(null), c = fh(o), u = fh(a), f = Y.useRef(null), p = Mu(t, (b) => l(b)), v = Y.useRef({
    paused: !1,
    pause() {
      this.paused = !0;
    },
    resume() {
      this.paused = !1;
    }
  }).current;
  Y.useEffect(() => {
    if (n) {
      let b = function(E) {
        if (v.paused || !s) return;
        const S = E.target;
        s.contains(S) ? f.current = S : xl(f.current, { select: !0 });
      }, m = function(E) {
        if (v.paused || !s) return;
        const S = E.relatedTarget;
        S !== null && (s.contains(S) || xl(f.current, { select: !0 }));
      }, w = function(E) {
        if (document.activeElement === document.body)
          for (const S of E)
            S.removedNodes.length > 0 && xl(s);
      };
      document.addEventListener("focusin", b), document.addEventListener("focusout", m);
      const $ = new MutationObserver(w);
      return s && $.observe(s, { childList: !0, subtree: !0 }), () => {
        document.removeEventListener("focusin", b), document.removeEventListener("focusout", m), $.disconnect();
      };
    }
  }, [n, s, v.paused]), Y.useEffect(() => {
    if (s) {
      wN.add(v);
      const b = document.activeElement;
      if (!s.contains(b)) {
        const m = new CustomEvent(Ow, vN);
        s.addEventListener(Ow, c), s.dispatchEvent(m), m.defaultPrevented || (oce(cce(dV(s)), { select: !0 }), document.activeElement === b && xl(s));
      }
      return () => {
        s.removeEventListener(Ow, c), setTimeout(() => {
          const m = new CustomEvent(Ew, vN);
          s.addEventListener(Ew, u), s.dispatchEvent(m), m.defaultPrevented || xl(b ?? document.body, { select: !0 }), s.removeEventListener(Ew, u), wN.remove(v);
        }, 0);
      };
    }
  }, [s, c, u, v]);
  const x = Y.useCallback(
    (b) => {
      if (!r && !n || v.paused) return;
      const m = b.key === "Tab" && !b.altKey && !b.ctrlKey && !b.metaKey, w = document.activeElement;
      if (m && w) {
        const $ = b.currentTarget, [E, S] = ace($);
        E && S ? !b.shiftKey && w === S ? (b.preventDefault(), r && xl(E, { select: !0 })) : b.shiftKey && w === E && (b.preventDefault(), r && xl(S, { select: !0 })) : w === $ && b.preventDefault();
      }
    },
    [r, n, v.paused]
  );
  return /* @__PURE__ */ q(Ma.div, { tabIndex: -1, ...i, ref: p, onKeyDown: x });
});
fV.displayName = nce;
function oce(e, { select: t = !1 } = {}) {
  const r = document.activeElement;
  for (const n of e)
    if (xl(n, { select: t }), document.activeElement !== r) return;
}
function ace(e) {
  const t = dV(e), r = xN(t, e), n = xN(t.reverse(), e);
  return [r, n];
}
function dV(e) {
  const t = [], r = document.createTreeWalker(e, NodeFilter.SHOW_ELEMENT, {
    acceptNode: (n) => {
      const o = n.tagName === "INPUT" && n.type === "hidden";
      return n.disabled || n.hidden || o ? NodeFilter.FILTER_SKIP : n.tabIndex >= 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;
    }
  });
  for (; r.nextNode(); ) t.push(r.currentNode);
  return t;
}
function xN(e, t) {
  for (const r of e)
    if (!ice(r, { upTo: t })) return r;
}
function ice(e, { upTo: t }) {
  if (getComputedStyle(e).visibility === "hidden") return !0;
  for (; e; ) {
    if (t !== void 0 && e === t) return !1;
    if (getComputedStyle(e).display === "none") return !0;
    e = e.parentElement;
  }
  return !1;
}
function sce(e) {
  return e instanceof HTMLInputElement && "select" in e;
}
function xl(e, { select: t = !1 } = {}) {
  if (e && e.focus) {
    const r = document.activeElement;
    e.focus({ preventScroll: !0 }), e !== r && sce(e) && t && e.select();
  }
}
var wN = lce();
function lce() {
  let e = [];
  return {
    add(t) {
      const r = e[0];
      t !== r && (r == null || r.pause()), e = kN(e, t), e.unshift(t);
    },
    remove(t) {
      var r;
      e = kN(e, t), (r = e[0]) == null || r.resume();
    }
  };
}
function kN(e, t) {
  const r = [...e], n = r.indexOf(t);
  return n !== -1 && r.splice(n, 1), r;
}
function cce(e) {
  return e.filter((t) => t.tagName !== "A");
}
var uce = "Portal", pV = Y.forwardRef((e, t) => {
  var r;
  const { container: n, ...o } = e, [a, i] = Y.useState(!1);
  uh(() => i(!0), []);
  const s = n || a && ((r = globalThis == null ? void 0 : globalThis.document) == null ? void 0 : r.body);
  return s ? YE.createPortal(/* @__PURE__ */ q(Ma.div, { ...o, ref: t }), s) : null;
});
pV.displayName = uce;
function fce(e, t) {
  return Y.useReducer((r, n) => t[r][n] ?? r, e);
}
var Z1 = (e) => {
  const { present: t, children: r } = e, n = dce(t), o = typeof r == "function" ? r({ present: n.isPresent }) : Y.Children.only(r), a = Mu(n.ref, pce(o));
  return typeof r == "function" || n.isPresent ? Y.cloneElement(o, { ref: a }) : null;
};
Z1.displayName = "Presence";
function dce(e) {
  const [t, r] = Y.useState(), n = Y.useRef(null), o = Y.useRef(e), a = Y.useRef("none"), i = e ? "mounted" : "unmounted", [s, l] = fce(i, {
    mounted: {
      UNMOUNT: "unmounted",
      ANIMATION_OUT: "unmountSuspended"
    },
    unmountSuspended: {
      MOUNT: "mounted",
      ANIMATION_END: "unmounted"
    },
    unmounted: {
      MOUNT: "mounted"
    }
  });
  return Y.useEffect(() => {
    const c = Lb(n.current);
    a.current = s === "mounted" ? c : "none";
  }, [s]), uh(() => {
    const c = n.current, u = o.current;
    if (u !== e) {
      const f = a.current, p = Lb(c);
      e ? l("MOUNT") : p === "none" || (c == null ? void 0 : c.display) === "none" ? l("UNMOUNT") : l(u && f !== p ? "ANIMATION_OUT" : "UNMOUNT"), o.current = e;
    }
  }, [e, l]), uh(() => {
    if (t) {
      let c;
      const u = t.ownerDocument.defaultView ?? window, f = (v) => {
        const x = Lb(n.current).includes(v.animationName);
        if (v.target === t && x && (l("ANIMATION_END"), !o.current)) {
          const b = t.style.animationFillMode;
          t.style.animationFillMode = "forwards", c = u.setTimeout(() => {
            t.style.animationFillMode === "forwards" && (t.style.animationFillMode = b);
          });
        }
      }, p = (v) => {
        v.target === t && (a.current = Lb(n.current));
      };
      return t.addEventListener("animationstart", p), t.addEventListener("animationcancel", f), t.addEventListener("animationend", f), () => {
        u.clearTimeout(c), t.removeEventListener("animationstart", p), t.removeEventListener("animationcancel", f), t.removeEventListener("animationend", f);
      };
    } else
      l("ANIMATION_END");
  }, [t, l]), {
    isPresent: ["mounted", "unmountSuspended"].includes(s),
    ref: Y.useCallback((c) => {
      n.current = c ? getComputedStyle(c) : null, r(c);
    }, [])
  };
}
function Lb(e) {
  return (e == null ? void 0 : e.animationName) || "none";
}
function pce(e) {
  var t, r;
  let n = (t = Object.getOwnPropertyDescriptor(e.props, "ref")) == null ? void 0 : t.get, o = n && "isReactWarning" in n && n.isReactWarning;
  return o ? e.ref : (n = (r = Object.getOwnPropertyDescriptor(e, "ref")) == null ? void 0 : r.get, o = n && "isReactWarning" in n && n.isReactWarning, o ? e.props.ref : e.props.ref || e.ref);
}
var Sw = 0;
function mce() {
  Y.useEffect(() => {
    const e = document.querySelectorAll("[data-radix-focus-guard]");
    return document.body.insertAdjacentElement("afterbegin", e[0] ?? $N()), document.body.insertAdjacentElement("beforeend", e[1] ?? $N()), Sw++, () => {
      Sw === 1 && document.querySelectorAll("[data-radix-focus-guard]").forEach((t) => t.remove()), Sw--;
    };
  }, []);
}
function $N() {
  const e = document.createElement("span");
  return e.setAttribute("data-radix-focus-guard", ""), e.tabIndex = 0, e.style.outline = "none", e.style.opacity = "0", e.style.position = "fixed", e.style.pointerEvents = "none", e;
}
var aa = function() {
  return aa = Object.assign || function(e) {
    for (var t, r = 1, n = arguments.length; r < n; r++) {
      t = arguments[r];
      for (var o in t) Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o]);
    }
    return e;
  }, aa.apply(this, arguments);
};
function mV(e, t) {
  var r = {};
  for (var n in e) Object.prototype.hasOwnProperty.call(e, n) && t.indexOf(n) < 0 && (r[n] = e[n]);
  if (e != null && typeof Object.getOwnPropertySymbols == "function")
    for (var o = 0, n = Object.getOwnPropertySymbols(e); o < n.length; o++)
      t.indexOf(n[o]) < 0 && Object.prototype.propertyIsEnumerable.call(e, n[o]) && (r[n[o]] = e[n[o]]);
  return r;
}
function gce(e, t, r) {
  for (var n = 0, o = t.length, a; n < o; n++)
    (a || !(n in t)) && (a || (a = Array.prototype.slice.call(t, 0, n)), a[n] = t[n]);
  return e.concat(a || Array.prototype.slice.call(t));
}
var Hy = "right-scroll-bar-position", Gy = "width-before-scroll-bar", hce = "with-scroll-bars-hidden", bce = "--removed-body-scroll-bar-size";
function Pw(e, t) {
  return typeof e == "function" ? e(t) : e && (e.current = t), e;
}
function yce(e, t) {
  var r = _e(function() {
    return {
      // value
      value: e,
      // last callback
      callback: t,
      // "memoized" public interface
      facade: {
        get current() {
          return r.value;
        },
        set current(n) {
          var o = r.value;
          o !== n && (r.value = n, r.callback(n, o));
        }
      }
    };
  })[0];
  return r.callback = t, r.facade;
}
var vce = typeof window < "u" ? Y.useLayoutEffect : Y.useEffect, ON = /* @__PURE__ */ new WeakMap();
function xce(e, t) {
  var r = yce(null, function(n) {
    return e.forEach(function(o) {
      return Pw(o, n);
    });
  });
  return vce(function() {
    var n = ON.get(r);
    if (n) {
      var o = new Set(n), a = new Set(e), i = r.current;
      o.forEach(function(s) {
        a.has(s) || Pw(s, null);
      }), a.forEach(function(s) {
        o.has(s) || Pw(s, i);
      });
    }
    ON.set(r, e);
  }, [e]), r;
}
function wce(e) {
  return e;
}
function kce(e, t) {
  t === void 0 && (t = wce);
  var r = [], n = !1, o = {
    read: function() {
      if (n)
        throw new Error("Sidecar: could not `read` from an `assigned` medium. `read` could be used only with `useMedium`.");
      return r.length ? r[r.length - 1] : e;
    },
    useMedium: function(a) {
      var i = t(a, n);
      return r.push(i), function() {
        r = r.filter(function(s) {
          return s !== i;
        });
      };
    },
    assignSyncMedium: function(a) {
      for (n = !0; r.length; ) {
        var i = r;
        r = [], i.forEach(a);
      }
      r = {
        push: function(s) {
          return a(s);
        },
        filter: function() {
          return r;
        }
      };
    },
    assignMedium: function(a) {
      n = !0;
      var i = [];
      if (r.length) {
        var s = r;
        r = [], s.forEach(a), i = r;
      }
      var l = function() {
        var u = i;
        i = [], u.forEach(a);
      }, c = function() {
        return Promise.resolve().then(l);
      };
      c(), r = {
        push: function(u) {
          i.push(u), c();
        },
        filter: function(u) {
          return i = i.filter(u), r;
        }
      };
    }
  };
  return o;
}
function $ce(e) {
  e === void 0 && (e = {});
  var t = kce(null);
  return t.options = aa({ async: !0, ssr: !1 }, e), t;
}
var gV = function(e) {
  var t = e.sideCar, r = mV(e, ["sideCar"]);
  if (!t)
    throw new Error("Sidecar: please provide `sideCar` property to import the right car");
  var n = t.read();
  if (!n)
    throw new Error("Sidecar medium not found");
  return Y.createElement(n, aa({}, r));
};
gV.isSideCarExport = !0;
function Oce(e, t) {
  return e.useMedium(t), gV;
}
var hV = $ce(), Cw = function() {
}, e0 = Y.forwardRef(function(e, t) {
  var r = Y.useRef(null), n = Y.useState({
    onScrollCapture: Cw,
    onWheelCapture: Cw,
    onTouchMoveCapture: Cw
  }), o = n[0], a = n[1], i = e.forwardProps, s = e.children, l = e.className, c = e.removeScrollBar, u = e.enabled, f = e.shards, p = e.sideCar, v = e.noRelative, x = e.noIsolation, b = e.inert, m = e.allowPinchZoom, w = e.as, $ = w === void 0 ? "div" : w, E = e.gapMode, S = mV(e, ["forwardProps", "children", "className", "removeScrollBar", "enabled", "shards", "sideCar", "noRelative", "noIsolation", "inert", "allowPinchZoom", "as", "gapMode"]), h = p, U = xce([r, t]), G = aa(aa({}, S), o);
  return Y.createElement(
    Y.Fragment,
    null,
    u && Y.createElement(h, { sideCar: hV, removeScrollBar: c, shards: f, noRelative: v, noIsolation: x, inert: b, setCallbacks: a, allowPinchZoom: !!m, lockRef: r, gapMode: E }),
    i ? Y.cloneElement(Y.Children.only(s), aa(aa({}, G), { ref: U })) : Y.createElement($, aa({}, G, { className: l, ref: U }), s)
  );
});
e0.defaultProps = {
  enabled: !0,
  removeScrollBar: !0,
  inert: !1
};
e0.classNames = {
  fullWidth: Gy,
  zeroRight: Hy
};
var Ece = function() {
  if (typeof __webpack_nonce__ < "u")
    return __webpack_nonce__;
};
function Sce() {
  if (!document)
    return null;
  var e = document.createElement("style");
  e.type = "text/css";
  var t = Ece();
  return t && e.setAttribute("nonce", t), e;
}
function Pce(e, t) {
  e.styleSheet ? e.styleSheet.cssText = t : e.appendChild(document.createTextNode(t));
}
function Cce(e) {
  var t = document.head || document.getElementsByTagName("head")[0];
  t.appendChild(e);
}
var Ace = function() {
  var e = 0, t = null;
  return {
    add: function(r) {
      e == 0 && (t = Sce()) && (Pce(t, r), Cce(t)), e++;
    },
    remove: function() {
      e--, !e && t && (t.parentNode && t.parentNode.removeChild(t), t = null);
    }
  };
}, _ce = function() {
  var e = Ace();
  return function(t, r) {
    Y.useEffect(function() {
      return e.add(t), function() {
        e.remove();
      };
    }, [t && r]);
  };
}, bV = function() {
  var e = _ce(), t = function(r) {
    var n = r.styles, o = r.dynamic;
    return e(n, o), null;
  };
  return t;
}, Nce = {
  left: 0,
  top: 0,
  right: 0,
  gap: 0
}, Aw = function(e) {
  return parseInt(e || "", 10) || 0;
}, jce = function(e) {
  var t = window.getComputedStyle(document.body), r = t[e === "padding" ? "paddingLeft" : "marginLeft"], n = t[e === "padding" ? "paddingTop" : "marginTop"], o = t[e === "padding" ? "paddingRight" : "marginRight"];
  return [Aw(r), Aw(n), Aw(o)];
}, Ice = function(e) {
  if (e === void 0 && (e = "margin"), typeof window > "u")
    return Nce;
  var t = jce(e), r = document.documentElement.clientWidth, n = window.innerWidth;
  return {
    left: t[0],
    top: t[1],
    right: t[2],
    gap: Math.max(0, n - r + t[2] - t[0])
  };
}, Tce = bV(), jf = "data-scroll-locked", Mce = function(e, t, r, n) {
  var o = e.left, a = e.top, i = e.right, s = e.gap;
  return r === void 0 && (r = "margin"), `
  .`.concat(hce, ` {
   overflow: hidden `).concat(n, `;
   padding-right: `).concat(s, "px ").concat(n, `;
  }
  body[`).concat(jf, `] {
    overflow: hidden `).concat(n, `;
    overscroll-behavior: contain;
    `).concat([
    t && "position: relative ".concat(n, ";"),
    r === "margin" && `
    padding-left: `.concat(o, `px;
    padding-top: `).concat(a, `px;
    padding-right: `).concat(i, `px;
    margin-left:0;
    margin-top:0;
    margin-right: `).concat(s, "px ").concat(n, `;
    `),
    r === "padding" && "padding-right: ".concat(s, "px ").concat(n, ";")
  ].filter(Boolean).join(""), `
  }
  
  .`).concat(Hy, ` {
    right: `).concat(s, "px ").concat(n, `;
  }
  
  .`).concat(Gy, ` {
    margin-right: `).concat(s, "px ").concat(n, `;
  }
  
  .`).concat(Hy, " .").concat(Hy, ` {
    right: 0 `).concat(n, `;
  }
  
  .`).concat(Gy, " .").concat(Gy, ` {
    margin-right: 0 `).concat(n, `;
  }
  
  body[`).concat(jf, `] {
    `).concat(bce, ": ").concat(s, `px;
  }
`);
}, EN = function() {
  var e = parseInt(document.body.getAttribute(jf) || "0", 10);
  return isFinite(e) ? e : 0;
}, Rce = function() {
  Y.useEffect(function() {
    return document.body.setAttribute(jf, (EN() + 1).toString()), function() {
      var e = EN() - 1;
      e <= 0 ? document.body.removeAttribute(jf) : document.body.setAttribute(jf, e.toString());
    };
  }, []);
}, zce = function(e) {
  var t = e.noRelative, r = e.noImportant, n = e.gapMode, o = n === void 0 ? "margin" : n;
  Rce();
  var a = Y.useMemo(function() {
    return Ice(o);
  }, [o]);
  return Y.createElement(Tce, { styles: Mce(a, !t, o, r ? "" : "!important") });
}, A5 = !1;
if (typeof window < "u")
  try {
    var Vb = Object.defineProperty({}, "passive", {
      get: function() {
        return A5 = !0, !0;
      }
    });
    window.addEventListener("test", Vb, Vb), window.removeEventListener("test", Vb, Vb);
  } catch {
    A5 = !1;
  }
var Vu = A5 ? { passive: !1 } : !1, Fce = function(e) {
  return e.tagName === "TEXTAREA";
}, yV = function(e, t) {
  if (!(e instanceof Element))
    return !1;
  var r = window.getComputedStyle(e);
  return (
    // not-not-scrollable
    r[t] !== "hidden" && // contains scroll inside self
    !(r.overflowY === r.overflowX && !Fce(e) && r[t] === "visible")
  );
}, Dce = function(e) {
  return yV(e, "overflowY");
}, Lce = function(e) {
  return yV(e, "overflowX");
}, SN = function(e, t) {
  var r = t.ownerDocument, n = t;
  do {
    typeof ShadowRoot < "u" && n instanceof ShadowRoot && (n = n.host);
    var o = vV(e, n);
    if (o) {
      var a = xV(e, n), i = a[1], s = a[2];
      if (i > s)
        return !0;
    }
    n = n.parentNode;
  } while (n && n !== r.body);
  return !1;
}, Vce = function(e) {
  var t = e.scrollTop, r = e.scrollHeight, n = e.clientHeight;
  return [
    t,
    r,
    n
  ];
}, Wce = function(e) {
  var t = e.scrollLeft, r = e.scrollWidth, n = e.clientWidth;
  return [
    t,
    r,
    n
  ];
}, vV = function(e, t) {
  return e === "v" ? Dce(t) : Lce(t);
}, xV = function(e, t) {
  return e === "v" ? Vce(t) : Wce(t);
}, Uce = function(e, t) {
  return e === "h" && t === "rtl" ? -1 : 1;
}, Yce = function(e, t, r, n, o) {
  var a = Uce(e, window.getComputedStyle(t).direction), i = a * n, s = r.target, l = t.contains(s), c = !1, u = i > 0, f = 0, p = 0;
  do {
    if (!s)
      break;
    var v = xV(e, s), x = v[0], b = v[1], m = v[2], w = b - m - a * x;
    (x || w) && vV(e, s) && (f += w, p += x);
    var $ = s.parentNode;
    s = $ && $.nodeType === Node.DOCUMENT_FRAGMENT_NODE ? $.host : $;
  } while (
    // portaled content
    !l && s !== document.body || // self content
    l && (t.contains(s) || t === s)
  );
  return (u && Math.abs(f) < 1 || !u && Math.abs(p) < 1) && (c = !0), c;
}, Wb = function(e) {
  return "changedTouches" in e ? [e.changedTouches[0].clientX, e.changedTouches[0].clientY] : [0, 0];
}, PN = function(e) {
  return [e.deltaX, e.deltaY];
}, CN = function(e) {
  return e && "current" in e ? e.current : e;
}, Hce = function(e, t) {
  return e[0] === t[0] && e[1] === t[1];
}, Gce = function(e) {
  return `
  .block-interactivity-`.concat(e, ` {pointer-events: none;}
  .allow-interactivity-`).concat(e, ` {pointer-events: all;}
`);
}, qce = 0, Wu = [];
function Bce(e) {
  var t = Y.useRef([]), r = Y.useRef([0, 0]), n = Y.useRef(), o = Y.useState(qce++)[0], a = Y.useState(bV)[0], i = Y.useRef(e);
  Y.useEffect(function() {
    i.current = e;
  }, [e]), Y.useEffect(function() {
    if (e.inert) {
      document.body.classList.add("block-interactivity-".concat(o));
      var b = gce([e.lockRef.current], (e.shards || []).map(CN)).filter(Boolean);
      return b.forEach(function(m) {
        return m.classList.add("allow-interactivity-".concat(o));
      }), function() {
        document.body.classList.remove("block-interactivity-".concat(o)), b.forEach(function(m) {
          return m.classList.remove("allow-interactivity-".concat(o));
        });
      };
    }
  }, [e.inert, e.lockRef.current, e.shards]);
  var s = Y.useCallback(function(b, m) {
    if ("touches" in b && b.touches.length === 2 || b.type === "wheel" && b.ctrlKey)
      return !i.current.allowPinchZoom;
    var w = Wb(b), $ = r.current, E = "deltaX" in b ? b.deltaX : $[0] - w[0], S = "deltaY" in b ? b.deltaY : $[1] - w[1], h, U = b.target, G = Math.abs(E) > Math.abs(S) ? "h" : "v";
    if ("touches" in b && G === "h" && U.type === "range")
      return !1;
    var Q = SN(G, U);
    if (!Q)
      return !0;
    if (Q ? h = G : (h = G === "v" ? "h" : "v", Q = SN(G, U)), !Q)
      return !1;
    if (!n.current && "changedTouches" in b && (E || S) && (n.current = h), !h)
      return !0;
    var Z = n.current || h;
    return Yce(Z, m, b, Z === "h" ? E : S);
  }, []), l = Y.useCallback(function(b) {
    var m = b;
    if (!(!Wu.length || Wu[Wu.length - 1] !== a)) {
      var w = "deltaY" in m ? PN(m) : Wb(m), $ = t.current.filter(function(h) {
        return h.name === m.type && (h.target === m.target || m.target === h.shadowParent) && Hce(h.delta, w);
      })[0];
      if ($ && $.should) {
        m.cancelable && m.preventDefault();
        return;
      }
      if (!$) {
        var E = (i.current.shards || []).map(CN).filter(Boolean).filter(function(h) {
          return h.contains(m.target);
        }), S = E.length > 0 ? s(m, E[0]) : !i.current.noIsolation;
        S && m.cancelable && m.preventDefault();
      }
    }
  }, []), c = Y.useCallback(function(b, m, w, $) {
    var E = { name: b, delta: m, target: w, should: $, shadowParent: Xce(w) };
    t.current.push(E), setTimeout(function() {
      t.current = t.current.filter(function(S) {
        return S !== E;
      });
    }, 1);
  }, []), u = Y.useCallback(function(b) {
    r.current = Wb(b), n.current = void 0;
  }, []), f = Y.useCallback(function(b) {
    c(b.type, PN(b), b.target, s(b, e.lockRef.current));
  }, []), p = Y.useCallback(function(b) {
    c(b.type, Wb(b), b.target, s(b, e.lockRef.current));
  }, []);
  Y.useEffect(function() {
    return Wu.push(a), e.setCallbacks({
      onScrollCapture: f,
      onWheelCapture: f,
      onTouchMoveCapture: p
    }), document.addEventListener("wheel", l, Vu), document.addEventListener("touchmove", l, Vu), document.addEventListener("touchstart", u, Vu), function() {
      Wu = Wu.filter(function(b) {
        return b !== a;
      }), document.removeEventListener("wheel", l, Vu), document.removeEventListener("touchmove", l, Vu), document.removeEventListener("touchstart", u, Vu);
    };
  }, []);
  var v = e.removeScrollBar, x = e.inert;
  return Y.createElement(
    Y.Fragment,
    null,
    x ? Y.createElement(a, { styles: Gce(o) }) : null,
    v ? Y.createElement(zce, { noRelative: e.noRelative, gapMode: e.gapMode }) : null
  );
}
function Xce(e) {
  for (var t = null; e !== null; )
    e instanceof ShadowRoot && (t = e.host, e = e.host), e = e.parentNode;
  return t;
}
const Kce = Oce(hV, Bce);
var wV = Y.forwardRef(function(e, t) {
  return Y.createElement(e0, aa({}, e, { ref: t, sideCar: Kce }));
});
wV.classNames = e0.classNames;
var Jce = function(e) {
  if (typeof document > "u")
    return null;
  var t = Array.isArray(e) ? e[0] : e;
  return t.ownerDocument.body;
}, Uu = /* @__PURE__ */ new WeakMap(), Ub = /* @__PURE__ */ new WeakMap(), Yb = {}, _w = 0, kV = function(e) {
  return e && (e.host || kV(e.parentNode));
}, Qce = function(e, t) {
  return t.map(function(r) {
    if (e.contains(r))
      return r;
    var n = kV(r);
    return n && e.contains(n) ? n : (console.error("aria-hidden", r, "in not contained inside", e, ". Doing nothing"), null);
  }).filter(function(r) {
    return !!r;
  });
}, Zce = function(e, t, r, n) {
  var o = Qce(t, Array.isArray(e) ? e : [e]);
  Yb[r] || (Yb[r] = /* @__PURE__ */ new WeakMap());
  var a = Yb[r], i = [], s = /* @__PURE__ */ new Set(), l = new Set(o), c = function(f) {
    !f || s.has(f) || (s.add(f), c(f.parentNode));
  };
  o.forEach(c);
  var u = function(f) {
    !f || l.has(f) || Array.prototype.forEach.call(f.children, function(p) {
      if (s.has(p))
        u(p);
      else
        try {
          var v = p.getAttribute(n), x = v !== null && v !== "false", b = (Uu.get(p) || 0) + 1, m = (a.get(p) || 0) + 1;
          Uu.set(p, b), a.set(p, m), i.push(p), b === 1 && x && Ub.set(p, !0), m === 1 && p.setAttribute(r, "true"), x || p.setAttribute(n, "true");
        } catch (w) {
          console.error("aria-hidden: cannot operate on ", p, w);
        }
    });
  };
  return u(t), s.clear(), _w++, function() {
    i.forEach(function(f) {
      var p = Uu.get(f) - 1, v = a.get(f) - 1;
      Uu.set(f, p), a.set(f, v), p || (Ub.has(f) || f.removeAttribute(n), Ub.delete(f)), v || f.removeAttribute(r);
    }), _w--, _w || (Uu = /* @__PURE__ */ new WeakMap(), Uu = /* @__PURE__ */ new WeakMap(), Ub = /* @__PURE__ */ new WeakMap(), Yb = {});
  };
}, eue = function(e, t, r) {
  r === void 0 && (r = "data-aria-hidden");
  var n = Array.from(Array.isArray(e) ? e : [e]), o = Jce(e);
  return o ? (n.push.apply(n, Array.from(o.querySelectorAll("[aria-live], script"))), Zce(n, o, r, "aria-hidden")) : function() {
    return null;
  };
}, t0 = "Dialog", [$V, bWe] = Tle(t0), [tue, Vo] = $V(t0), OV = (e) => {
  const {
    __scopeDialog: t,
    children: r,
    open: n,
    defaultOpen: o,
    onOpenChange: a,
    modal: i = !0
  } = e, s = Y.useRef(null), l = Y.useRef(null), [c, u] = Dle({
    prop: n,
    defaultProp: o ?? !1,
    onChange: a,
    caller: t0
  });
  return /* @__PURE__ */ q(
    tue,
    {
      scope: t,
      triggerRef: s,
      contentRef: l,
      contentId: $w(),
      titleId: $w(),
      descriptionId: $w(),
      open: c,
      onOpenChange: u,
      onOpenToggle: Y.useCallback(() => u((f) => !f), [u]),
      modal: i,
      children: r
    }
  );
};
OV.displayName = t0;
var EV = "DialogTrigger", rue = Y.forwardRef(
  (e, t) => {
    const { __scopeDialog: r, ...n } = e, o = Vo(EV, r), a = Mu(t, o.triggerRef);
    return /* @__PURE__ */ q(
      Ma.button,
      {
        type: "button",
        "aria-haspopup": "dialog",
        "aria-expanded": o.open,
        "aria-controls": o.contentId,
        "data-state": FS(o.open),
        ...n,
        ref: a,
        onClick: Tl(e.onClick, o.onOpenToggle)
      }
    );
  }
);
rue.displayName = EV;
var RS = "DialogPortal", [nue, SV] = $V(RS, {
  forceMount: void 0
}), PV = (e) => {
  const { __scopeDialog: t, forceMount: r, children: n, container: o } = e, a = Vo(RS, t);
  return /* @__PURE__ */ q(nue, { scope: t, forceMount: r, children: Y.Children.map(n, (i) => /* @__PURE__ */ q(Z1, { present: r || a.open, children: /* @__PURE__ */ q(pV, { asChild: !0, container: o, children: i }) })) });
};
PV.displayName = RS;
var Dv = "DialogOverlay", CV = Y.forwardRef(
  (e, t) => {
    const r = SV(Dv, e.__scopeDialog), { forceMount: n = r.forceMount, ...o } = e, a = Vo(Dv, e.__scopeDialog);
    return a.modal ? /* @__PURE__ */ q(Z1, { present: n || a.open, children: /* @__PURE__ */ q(aue, { ...o, ref: t }) }) : null;
  }
);
CV.displayName = Dv;
var oue = /* @__PURE__ */ sV("DialogOverlay.RemoveScroll"), aue = Y.forwardRef(
  (e, t) => {
    const { __scopeDialog: r, ...n } = e, o = Vo(Dv, r);
    return (
      // Make sure `Content` is scrollable even when it doesn't live inside `RemoveScroll`
      // ie. when `Overlay` and `Content` are siblings
      /* @__PURE__ */ q(wV, { as: oue, allowPinchZoom: !0, shards: [o.contentRef], children: /* @__PURE__ */ q(
        Ma.div,
        {
          "data-state": FS(o.open),
          ...n,
          ref: t,
          style: { pointerEvents: "auto", ...n.style }
        }
      ) })
    );
  }
), lu = "DialogContent", AV = Y.forwardRef(
  (e, t) => {
    const r = SV(lu, e.__scopeDialog), { forceMount: n = r.forceMount, ...o } = e, a = Vo(lu, e.__scopeDialog);
    return /* @__PURE__ */ q(Z1, { present: n || a.open, children: a.modal ? /* @__PURE__ */ q(iue, { ...o, ref: t }) : /* @__PURE__ */ q(sue, { ...o, ref: t }) });
  }
);
AV.displayName = lu;
var iue = Y.forwardRef(
  (e, t) => {
    const r = Vo(lu, e.__scopeDialog), n = Y.useRef(null), o = Mu(t, r.contentRef, n);
    return Y.useEffect(() => {
      const a = n.current;
      if (a) return eue(a);
    }, []), /* @__PURE__ */ q(
      _V,
      {
        ...e,
        ref: o,
        trapFocus: r.open,
        disableOutsidePointerEvents: !0,
        onCloseAutoFocus: Tl(e.onCloseAutoFocus, (a) => {
          var i;
          a.preventDefault(), (i = r.triggerRef.current) == null || i.focus();
        }),
        onPointerDownOutside: Tl(e.onPointerDownOutside, (a) => {
          const i = a.detail.originalEvent, s = i.button === 0 && i.ctrlKey === !0;
          (i.button === 2 || s) && a.preventDefault();
        }),
        onFocusOutside: Tl(
          e.onFocusOutside,
          (a) => a.preventDefault()
        )
      }
    );
  }
), sue = Y.forwardRef(
  (e, t) => {
    const r = Vo(lu, e.__scopeDialog), n = Y.useRef(!1), o = Y.useRef(!1);
    return /* @__PURE__ */ q(
      _V,
      {
        ...e,
        ref: t,
        trapFocus: !1,
        disableOutsidePointerEvents: !1,
        onCloseAutoFocus: (a) => {
          var i, s;
          (i = e.onCloseAutoFocus) == null || i.call(e, a), a.defaultPrevented || (n.current || (s = r.triggerRef.current) == null || s.focus(), a.preventDefault()), n.current = !1, o.current = !1;
        },
        onInteractOutside: (a) => {
          var i, s;
          (i = e.onInteractOutside) == null || i.call(e, a), a.defaultPrevented || (n.current = !0, a.detail.originalEvent.type === "pointerdown" && (o.current = !0));
          const l = a.target;
          (s = r.triggerRef.current) != null && s.contains(l) && a.preventDefault(), a.detail.originalEvent.type === "focusin" && o.current && a.preventDefault();
        }
      }
    );
  }
), _V = Y.forwardRef(
  (e, t) => {
    const { __scopeDialog: r, trapFocus: n, onOpenAutoFocus: o, onCloseAutoFocus: a, ...i } = e, s = Vo(lu, r), l = Y.useRef(null), c = Mu(t, l);
    return mce(), /* @__PURE__ */ Pe(Vt, { children: [
      /* @__PURE__ */ q(
        fV,
        {
          asChild: !0,
          loop: !0,
          trapped: n,
          onMountAutoFocus: o,
          onUnmountAutoFocus: a,
          children: /* @__PURE__ */ q(
            cV,
            {
              role: "dialog",
              id: s.contentId,
              "aria-describedby": s.descriptionId,
              "aria-labelledby": s.titleId,
              "data-state": FS(s.open),
              ...i,
              ref: c,
              onDismiss: () => s.onOpenChange(!1)
            }
          )
        }
      ),
      /* @__PURE__ */ Pe(Vt, { children: [
        /* @__PURE__ */ q(cue, { titleId: s.titleId }),
        /* @__PURE__ */ q(fue, { contentRef: l, descriptionId: s.descriptionId })
      ] })
    ] });
  }
), zS = "DialogTitle", NV = Y.forwardRef(
  (e, t) => {
    const { __scopeDialog: r, ...n } = e, o = Vo(zS, r);
    return /* @__PURE__ */ q(Ma.h2, { id: o.titleId, ...n, ref: t });
  }
);
NV.displayName = zS;
var jV = "DialogDescription", IV = Y.forwardRef(
  (e, t) => {
    const { __scopeDialog: r, ...n } = e, o = Vo(jV, r);
    return /* @__PURE__ */ q(Ma.p, { id: o.descriptionId, ...n, ref: t });
  }
);
IV.displayName = jV;
var TV = "DialogClose", lue = Y.forwardRef(
  (e, t) => {
    const { __scopeDialog: r, ...n } = e, o = Vo(TV, r);
    return /* @__PURE__ */ q(
      Ma.button,
      {
        type: "button",
        ...n,
        ref: t,
        onClick: Tl(e.onClick, () => o.onOpenChange(!1))
      }
    );
  }
);
lue.displayName = TV;
function FS(e) {
  return e ? "open" : "closed";
}
var MV = "DialogTitleWarning", [yWe, RV] = Ile(MV, {
  contentName: lu,
  titleName: zS,
  docsSlug: "dialog"
}), cue = ({ titleId: e }) => {
  const t = RV(MV), r = `\`${t.contentName}\` requires a \`${t.titleName}\` for the component to be accessible for screen reader users.

If you want to hide the \`${t.titleName}\`, you can wrap it with our VisuallyHidden component.

For more information, see https://radix-ui.com/primitives/docs/components/${t.docsSlug}`;
  return Y.useEffect(() => {
    e && (document.getElementById(e) || console.error(r));
  }, [r, e]), null;
}, uue = "DialogDescriptionWarning", fue = ({ contentRef: e, descriptionId: t }) => {
  const r = `Warning: Missing \`Description\` or \`aria-describedby={undefined}\` for {${RV(uue).contentName}}.`;
  return Y.useEffect(() => {
    var n;
    const o = (n = e.current) == null ? void 0 : n.getAttribute("aria-describedby");
    t && o && (document.getElementById(t) || console.warn(r));
  }, [r, e, t]), null;
}, due = OV, pue = PV, mue = CV, gue = AV, AN = NV, hue = IV;
const DS = "-", bue = (e) => {
  const t = vue(e), {
    conflictingClassGroups: r,
    conflictingClassGroupModifiers: n
  } = e;
  return {
    getClassGroupId: (o) => {
      const a = o.split(DS);
      return a[0] === "" && a.length !== 1 && a.shift(), zV(a, t) || yue(o);
    },
    getConflictingClassGroupIds: (o, a) => {
      const i = r[o] || [];
      return a && n[o] ? [...i, ...n[o]] : i;
    }
  };
}, zV = (e, t) => {
  var r;
  if (e.length === 0)
    return t.classGroupId;
  const n = e[0], o = t.nextPart.get(n), a = o ? zV(e.slice(1), o) : void 0;
  if (a)
    return a;
  if (t.validators.length === 0)
    return;
  const i = e.join(DS);
  return (r = t.validators.find(({
    validator: s
  }) => s(i))) == null ? void 0 : r.classGroupId;
}, _N = /^\[(.+)\]$/, yue = (e) => {
  if (_N.test(e)) {
    const t = _N.exec(e)[1], r = t == null ? void 0 : t.substring(0, t.indexOf(":"));
    if (r)
      return "arbitrary.." + r;
  }
}, vue = (e) => {
  const {
    theme: t,
    prefix: r
  } = e, n = {
    nextPart: /* @__PURE__ */ new Map(),
    validators: []
  };
  return wue(Object.entries(e.classGroups), r).forEach(([o, a]) => {
    _5(a, n, o, t);
  }), n;
}, _5 = (e, t, r, n) => {
  e.forEach((o) => {
    if (typeof o == "string") {
      const a = o === "" ? t : NN(t, o);
      a.classGroupId = r;
      return;
    }
    if (typeof o == "function") {
      if (xue(o)) {
        _5(o(n), t, r, n);
        return;
      }
      t.validators.push({
        validator: o,
        classGroupId: r
      });
      return;
    }
    Object.entries(o).forEach(([a, i]) => {
      _5(i, NN(t, a), r, n);
    });
  });
}, NN = (e, t) => {
  let r = e;
  return t.split(DS).forEach((n) => {
    r.nextPart.has(n) || r.nextPart.set(n, {
      nextPart: /* @__PURE__ */ new Map(),
      validators: []
    }), r = r.nextPart.get(n);
  }), r;
}, xue = (e) => e.isThemeGetter, wue = (e, t) => t ? e.map(([r, n]) => {
  const o = n.map((a) => typeof a == "string" ? t + a : typeof a == "object" ? Object.fromEntries(Object.entries(a).map(([i, s]) => [t + i, s])) : a);
  return [r, o];
}) : e, kue = (e) => {
  if (e < 1)
    return {
      get: () => {
      },
      set: () => {
      }
    };
  let t = 0, r = /* @__PURE__ */ new Map(), n = /* @__PURE__ */ new Map();
  const o = (a, i) => {
    r.set(a, i), t++, t > e && (t = 0, n = r, r = /* @__PURE__ */ new Map());
  };
  return {
    get(a) {
      let i = r.get(a);
      if (i !== void 0)
        return i;
      if ((i = n.get(a)) !== void 0)
        return o(a, i), i;
    },
    set(a, i) {
      r.has(a) ? r.set(a, i) : o(a, i);
    }
  };
}, FV = "!", $ue = (e) => {
  const {
    separator: t,
    experimentalParseClassName: r
  } = e, n = t.length === 1, o = t[0], a = t.length, i = (s) => {
    const l = [];
    let c = 0, u = 0, f;
    for (let m = 0; m < s.length; m++) {
      let w = s[m];
      if (c === 0) {
        if (w === o && (n || s.slice(m, m + a) === t)) {
          l.push(s.slice(u, m)), u = m + a;
          continue;
        }
        if (w === "/") {
          f = m;
          continue;
        }
      }
      w === "[" ? c++ : w === "]" && c--;
    }
    const p = l.length === 0 ? s : s.substring(u), v = p.startsWith(FV), x = v ? p.substring(1) : p, b = f && f > u ? f - u : void 0;
    return {
      modifiers: l,
      hasImportantModifier: v,
      baseClassName: x,
      maybePostfixModifierPosition: b
    };
  };
  return r ? (s) => r({
    className: s,
    parseClassName: i
  }) : i;
}, Oue = (e) => {
  if (e.length <= 1)
    return e;
  const t = [];
  let r = [];
  return e.forEach((n) => {
    n[0] === "[" ? (t.push(...r.sort(), n), r = []) : r.push(n);
  }), t.push(...r.sort()), t;
}, Eue = (e) => ({
  cache: kue(e.cacheSize),
  parseClassName: $ue(e),
  ...bue(e)
}), Sue = /\s+/, Pue = (e, t) => {
  const {
    parseClassName: r,
    getClassGroupId: n,
    getConflictingClassGroupIds: o
  } = t, a = [], i = e.trim().split(Sue);
  let s = "";
  for (let l = i.length - 1; l >= 0; l -= 1) {
    const c = i[l], {
      modifiers: u,
      hasImportantModifier: f,
      baseClassName: p,
      maybePostfixModifierPosition: v
    } = r(c);
    let x = !!v, b = n(x ? p.substring(0, v) : p);
    if (!b) {
      if (!x) {
        s = c + (s.length > 0 ? " " + s : s);
        continue;
      }
      if (b = n(p), !b) {
        s = c + (s.length > 0 ? " " + s : s);
        continue;
      }
      x = !1;
    }
    const m = Oue(u).join(":"), w = f ? m + FV : m, $ = w + b;
    if (a.includes($))
      continue;
    a.push($);
    const E = o(b, x);
    for (let S = 0; S < E.length; ++S) {
      const h = E[S];
      a.push(w + h);
    }
    s = c + (s.length > 0 ? " " + s : s);
  }
  return s;
};
function Cue() {
  let e = 0, t, r, n = "";
  for (; e < arguments.length; )
    (t = arguments[e++]) && (r = DV(t)) && (n && (n += " "), n += r);
  return n;
}
const DV = (e) => {
  if (typeof e == "string")
    return e;
  let t, r = "";
  for (let n = 0; n < e.length; n++)
    e[n] && (t = DV(e[n])) && (r && (r += " "), r += t);
  return r;
};
function Aue(e, ...t) {
  let r, n, o, a = i;
  function i(l) {
    const c = t.reduce((u, f) => f(u), e());
    return r = Eue(c), n = r.cache.get, o = r.cache.set, a = s, s(l);
  }
  function s(l) {
    const c = n(l);
    if (c)
      return c;
    const u = Pue(l, r);
    return o(l, u), u;
  }
  return function() {
    return a(Cue.apply(null, arguments));
  };
}
const wr = (e) => {
  const t = (r) => r[e] || [];
  return t.isThemeGetter = !0, t;
}, LV = /^\[(?:([a-z-]+):)?(.+)\]$/i, _ue = /^\d+\/\d+$/, Nue = /* @__PURE__ */ new Set(["px", "full", "screen"]), jue = /^(\d+(\.\d+)?)?(xs|sm|md|lg|xl)$/, Iue = /\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\b(calc|min|max|clamp)\(.+\)|^0$/, Tue = /^(rgba?|hsla?|hwb|(ok)?(lab|lch))\(.+\)$/, Mue = /^(inset_)?-?((\d+)?\.?(\d+)[a-z]+|0)_-?((\d+)?\.?(\d+)[a-z]+|0)/, Rue = /^(url|image|image-set|cross-fade|element|(repeating-)?(linear|radial|conic)-gradient)\(.+\)$/, La = (e) => If(e) || Nue.has(e) || _ue.test(e), Ns = (e) => Id(e, "length", Yue), If = (e) => !!e && !Number.isNaN(Number(e)), Nw = (e) => Id(e, "number", If), um = (e) => !!e && Number.isInteger(Number(e)), zue = (e) => e.endsWith("%") && If(e.slice(0, -1)), st = (e) => LV.test(e), js = (e) => jue.test(e), Fue = /* @__PURE__ */ new Set(["length", "size", "percentage"]), Due = (e) => Id(e, Fue, VV), Lue = (e) => Id(e, "position", VV), Vue = /* @__PURE__ */ new Set(["image", "url"]), Wue = (e) => Id(e, Vue, Gue), Uue = (e) => Id(e, "", Hue), fm = () => !0, Id = (e, t, r) => {
  const n = LV.exec(e);
  return n ? n[1] ? typeof t == "string" ? n[1] === t : t.has(n[1]) : r(n[2]) : !1;
}, Yue = (e) => (
  // `colorFunctionRegex` check is necessary because color functions can have percentages in them which which would be incorrectly classified as lengths.
  // For example, `hsl(0 0% 0%)` would be classified as a length without this check.
  // I could also use lookbehind assertion in `lengthUnitRegex` but that isn't supported widely enough.
  Iue.test(e) && !Tue.test(e)
), VV = () => !1, Hue = (e) => Mue.test(e), Gue = (e) => Rue.test(e), que = () => {
  const e = wr("colors"), t = wr("spacing"), r = wr("blur"), n = wr("brightness"), o = wr("borderColor"), a = wr("borderRadius"), i = wr("borderSpacing"), s = wr("borderWidth"), l = wr("contrast"), c = wr("grayscale"), u = wr("hueRotate"), f = wr("invert"), p = wr("gap"), v = wr("gradientColorStops"), x = wr("gradientColorStopPositions"), b = wr("inset"), m = wr("margin"), w = wr("opacity"), $ = wr("padding"), E = wr("saturate"), S = wr("scale"), h = wr("sepia"), U = wr("skew"), G = wr("space"), Q = wr("translate"), Z = () => ["auto", "contain", "none"], X = () => ["auto", "hidden", "clip", "visible", "scroll"], J = () => ["auto", st, t], I = () => [st, t], te = () => ["", La, Ns], V = () => ["auto", If, st], D = () => ["bottom", "center", "left", "left-bottom", "left-top", "right", "right-bottom", "right-top", "top"], F = () => ["solid", "dashed", "dotted", "double", "none"], R = () => ["normal", "multiply", "screen", "overlay", "darken", "lighten", "color-dodge", "color-burn", "hard-light", "soft-light", "difference", "exclusion", "hue", "saturation", "color", "luminosity"], H = () => ["start", "end", "center", "between", "around", "evenly", "stretch"], B = () => ["", "0", st], g = () => ["auto", "avoid", "all", "avoid-page", "page", "left", "right", "column"], d = () => [If, st];
  return {
    cacheSize: 500,
    separator: ":",
    theme: {
      colors: [fm],
      spacing: [La, Ns],
      blur: ["none", "", js, st],
      brightness: d(),
      borderColor: [e],
      borderRadius: ["none", "", "full", js, st],
      borderSpacing: I(),
      borderWidth: te(),
      contrast: d(),
      grayscale: B(),
      hueRotate: d(),
      invert: B(),
      gap: I(),
      gradientColorStops: [e],
      gradientColorStopPositions: [zue, Ns],
      inset: J(),
      margin: J(),
      opacity: d(),
      padding: I(),
      saturate: d(),
      scale: d(),
      sepia: B(),
      skew: d(),
      space: I(),
      translate: I()
    },
    classGroups: {
      // Layout
      /**
       * Aspect Ratio
       * @see https://tailwindcss.com/docs/aspect-ratio
       */
      aspect: [{
        aspect: ["auto", "square", "video", st]
      }],
      /**
       * Container
       * @see https://tailwindcss.com/docs/container
       */
      container: ["container"],
      /**
       * Columns
       * @see https://tailwindcss.com/docs/columns
       */
      columns: [{
        columns: [js]
      }],
      /**
       * Break After
       * @see https://tailwindcss.com/docs/break-after
       */
      "break-after": [{
        "break-after": g()
      }],
      /**
       * Break Before
       * @see https://tailwindcss.com/docs/break-before
       */
      "break-before": [{
        "break-before": g()
      }],
      /**
       * Break Inside
       * @see https://tailwindcss.com/docs/break-inside
       */
      "break-inside": [{
        "break-inside": ["auto", "avoid", "avoid-page", "avoid-column"]
      }],
      /**
       * Box Decoration Break
       * @see https://tailwindcss.com/docs/box-decoration-break
       */
      "box-decoration": [{
        "box-decoration": ["slice", "clone"]
      }],
      /**
       * Box Sizing
       * @see https://tailwindcss.com/docs/box-sizing
       */
      box: [{
        box: ["border", "content"]
      }],
      /**
       * Display
       * @see https://tailwindcss.com/docs/display
       */
      display: ["block", "inline-block", "inline", "flex", "inline-flex", "table", "inline-table", "table-caption", "table-cell", "table-column", "table-column-group", "table-footer-group", "table-header-group", "table-row-group", "table-row", "flow-root", "grid", "inline-grid", "contents", "list-item", "hidden"],
      /**
       * Floats
       * @see https://tailwindcss.com/docs/float
       */
      float: [{
        float: ["right", "left", "none", "start", "end"]
      }],
      /**
       * Clear
       * @see https://tailwindcss.com/docs/clear
       */
      clear: [{
        clear: ["left", "right", "both", "none", "start", "end"]
      }],
      /**
       * Isolation
       * @see https://tailwindcss.com/docs/isolation
       */
      isolation: ["isolate", "isolation-auto"],
      /**
       * Object Fit
       * @see https://tailwindcss.com/docs/object-fit
       */
      "object-fit": [{
        object: ["contain", "cover", "fill", "none", "scale-down"]
      }],
      /**
       * Object Position
       * @see https://tailwindcss.com/docs/object-position
       */
      "object-position": [{
        object: [...D(), st]
      }],
      /**
       * Overflow
       * @see https://tailwindcss.com/docs/overflow
       */
      overflow: [{
        overflow: X()
      }],
      /**
       * Overflow X
       * @see https://tailwindcss.com/docs/overflow
       */
      "overflow-x": [{
        "overflow-x": X()
      }],
      /**
       * Overflow Y
       * @see https://tailwindcss.com/docs/overflow
       */
      "overflow-y": [{
        "overflow-y": X()
      }],
      /**
       * Overscroll Behavior
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      overscroll: [{
        overscroll: Z()
      }],
      /**
       * Overscroll Behavior X
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      "overscroll-x": [{
        "overscroll-x": Z()
      }],
      /**
       * Overscroll Behavior Y
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      "overscroll-y": [{
        "overscroll-y": Z()
      }],
      /**
       * Position
       * @see https://tailwindcss.com/docs/position
       */
      position: ["static", "fixed", "absolute", "relative", "sticky"],
      /**
       * Top / Right / Bottom / Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      inset: [{
        inset: [b]
      }],
      /**
       * Right / Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      "inset-x": [{
        "inset-x": [b]
      }],
      /**
       * Top / Bottom
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      "inset-y": [{
        "inset-y": [b]
      }],
      /**
       * Start
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      start: [{
        start: [b]
      }],
      /**
       * End
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      end: [{
        end: [b]
      }],
      /**
       * Top
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      top: [{
        top: [b]
      }],
      /**
       * Right
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      right: [{
        right: [b]
      }],
      /**
       * Bottom
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      bottom: [{
        bottom: [b]
      }],
      /**
       * Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      left: [{
        left: [b]
      }],
      /**
       * Visibility
       * @see https://tailwindcss.com/docs/visibility
       */
      visibility: ["visible", "invisible", "collapse"],
      /**
       * Z-Index
       * @see https://tailwindcss.com/docs/z-index
       */
      z: [{
        z: ["auto", um, st]
      }],
      // Flexbox and Grid
      /**
       * Flex Basis
       * @see https://tailwindcss.com/docs/flex-basis
       */
      basis: [{
        basis: J()
      }],
      /**
       * Flex Direction
       * @see https://tailwindcss.com/docs/flex-direction
       */
      "flex-direction": [{
        flex: ["row", "row-reverse", "col", "col-reverse"]
      }],
      /**
       * Flex Wrap
       * @see https://tailwindcss.com/docs/flex-wrap
       */
      "flex-wrap": [{
        flex: ["wrap", "wrap-reverse", "nowrap"]
      }],
      /**
       * Flex
       * @see https://tailwindcss.com/docs/flex
       */
      flex: [{
        flex: ["1", "auto", "initial", "none", st]
      }],
      /**
       * Flex Grow
       * @see https://tailwindcss.com/docs/flex-grow
       */
      grow: [{
        grow: B()
      }],
      /**
       * Flex Shrink
       * @see https://tailwindcss.com/docs/flex-shrink
       */
      shrink: [{
        shrink: B()
      }],
      /**
       * Order
       * @see https://tailwindcss.com/docs/order
       */
      order: [{
        order: ["first", "last", "none", um, st]
      }],
      /**
       * Grid Template Columns
       * @see https://tailwindcss.com/docs/grid-template-columns
       */
      "grid-cols": [{
        "grid-cols": [fm]
      }],
      /**
       * Grid Column Start / End
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-start-end": [{
        col: ["auto", {
          span: ["full", um, st]
        }, st]
      }],
      /**
       * Grid Column Start
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-start": [{
        "col-start": V()
      }],
      /**
       * Grid Column End
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-end": [{
        "col-end": V()
      }],
      /**
       * Grid Template Rows
       * @see https://tailwindcss.com/docs/grid-template-rows
       */
      "grid-rows": [{
        "grid-rows": [fm]
      }],
      /**
       * Grid Row Start / End
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-start-end": [{
        row: ["auto", {
          span: [um, st]
        }, st]
      }],
      /**
       * Grid Row Start
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-start": [{
        "row-start": V()
      }],
      /**
       * Grid Row End
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-end": [{
        "row-end": V()
      }],
      /**
       * Grid Auto Flow
       * @see https://tailwindcss.com/docs/grid-auto-flow
       */
      "grid-flow": [{
        "grid-flow": ["row", "col", "dense", "row-dense", "col-dense"]
      }],
      /**
       * Grid Auto Columns
       * @see https://tailwindcss.com/docs/grid-auto-columns
       */
      "auto-cols": [{
        "auto-cols": ["auto", "min", "max", "fr", st]
      }],
      /**
       * Grid Auto Rows
       * @see https://tailwindcss.com/docs/grid-auto-rows
       */
      "auto-rows": [{
        "auto-rows": ["auto", "min", "max", "fr", st]
      }],
      /**
       * Gap
       * @see https://tailwindcss.com/docs/gap
       */
      gap: [{
        gap: [p]
      }],
      /**
       * Gap X
       * @see https://tailwindcss.com/docs/gap
       */
      "gap-x": [{
        "gap-x": [p]
      }],
      /**
       * Gap Y
       * @see https://tailwindcss.com/docs/gap
       */
      "gap-y": [{
        "gap-y": [p]
      }],
      /**
       * Justify Content
       * @see https://tailwindcss.com/docs/justify-content
       */
      "justify-content": [{
        justify: ["normal", ...H()]
      }],
      /**
       * Justify Items
       * @see https://tailwindcss.com/docs/justify-items
       */
      "justify-items": [{
        "justify-items": ["start", "end", "center", "stretch"]
      }],
      /**
       * Justify Self
       * @see https://tailwindcss.com/docs/justify-self
       */
      "justify-self": [{
        "justify-self": ["auto", "start", "end", "center", "stretch"]
      }],
      /**
       * Align Content
       * @see https://tailwindcss.com/docs/align-content
       */
      "align-content": [{
        content: ["normal", ...H(), "baseline"]
      }],
      /**
       * Align Items
       * @see https://tailwindcss.com/docs/align-items
       */
      "align-items": [{
        items: ["start", "end", "center", "baseline", "stretch"]
      }],
      /**
       * Align Self
       * @see https://tailwindcss.com/docs/align-self
       */
      "align-self": [{
        self: ["auto", "start", "end", "center", "stretch", "baseline"]
      }],
      /**
       * Place Content
       * @see https://tailwindcss.com/docs/place-content
       */
      "place-content": [{
        "place-content": [...H(), "baseline"]
      }],
      /**
       * Place Items
       * @see https://tailwindcss.com/docs/place-items
       */
      "place-items": [{
        "place-items": ["start", "end", "center", "baseline", "stretch"]
      }],
      /**
       * Place Self
       * @see https://tailwindcss.com/docs/place-self
       */
      "place-self": [{
        "place-self": ["auto", "start", "end", "center", "stretch"]
      }],
      // Spacing
      /**
       * Padding
       * @see https://tailwindcss.com/docs/padding
       */
      p: [{
        p: [$]
      }],
      /**
       * Padding X
       * @see https://tailwindcss.com/docs/padding
       */
      px: [{
        px: [$]
      }],
      /**
       * Padding Y
       * @see https://tailwindcss.com/docs/padding
       */
      py: [{
        py: [$]
      }],
      /**
       * Padding Start
       * @see https://tailwindcss.com/docs/padding
       */
      ps: [{
        ps: [$]
      }],
      /**
       * Padding End
       * @see https://tailwindcss.com/docs/padding
       */
      pe: [{
        pe: [$]
      }],
      /**
       * Padding Top
       * @see https://tailwindcss.com/docs/padding
       */
      pt: [{
        pt: [$]
      }],
      /**
       * Padding Right
       * @see https://tailwindcss.com/docs/padding
       */
      pr: [{
        pr: [$]
      }],
      /**
       * Padding Bottom
       * @see https://tailwindcss.com/docs/padding
       */
      pb: [{
        pb: [$]
      }],
      /**
       * Padding Left
       * @see https://tailwindcss.com/docs/padding
       */
      pl: [{
        pl: [$]
      }],
      /**
       * Margin
       * @see https://tailwindcss.com/docs/margin
       */
      m: [{
        m: [m]
      }],
      /**
       * Margin X
       * @see https://tailwindcss.com/docs/margin
       */
      mx: [{
        mx: [m]
      }],
      /**
       * Margin Y
       * @see https://tailwindcss.com/docs/margin
       */
      my: [{
        my: [m]
      }],
      /**
       * Margin Start
       * @see https://tailwindcss.com/docs/margin
       */
      ms: [{
        ms: [m]
      }],
      /**
       * Margin End
       * @see https://tailwindcss.com/docs/margin
       */
      me: [{
        me: [m]
      }],
      /**
       * Margin Top
       * @see https://tailwindcss.com/docs/margin
       */
      mt: [{
        mt: [m]
      }],
      /**
       * Margin Right
       * @see https://tailwindcss.com/docs/margin
       */
      mr: [{
        mr: [m]
      }],
      /**
       * Margin Bottom
       * @see https://tailwindcss.com/docs/margin
       */
      mb: [{
        mb: [m]
      }],
      /**
       * Margin Left
       * @see https://tailwindcss.com/docs/margin
       */
      ml: [{
        ml: [m]
      }],
      /**
       * Space Between X
       * @see https://tailwindcss.com/docs/space
       */
      "space-x": [{
        "space-x": [G]
      }],
      /**
       * Space Between X Reverse
       * @see https://tailwindcss.com/docs/space
       */
      "space-x-reverse": ["space-x-reverse"],
      /**
       * Space Between Y
       * @see https://tailwindcss.com/docs/space
       */
      "space-y": [{
        "space-y": [G]
      }],
      /**
       * Space Between Y Reverse
       * @see https://tailwindcss.com/docs/space
       */
      "space-y-reverse": ["space-y-reverse"],
      // Sizing
      /**
       * Width
       * @see https://tailwindcss.com/docs/width
       */
      w: [{
        w: ["auto", "min", "max", "fit", "svw", "lvw", "dvw", st, t]
      }],
      /**
       * Min-Width
       * @see https://tailwindcss.com/docs/min-width
       */
      "min-w": [{
        "min-w": [st, t, "min", "max", "fit"]
      }],
      /**
       * Max-Width
       * @see https://tailwindcss.com/docs/max-width
       */
      "max-w": [{
        "max-w": [st, t, "none", "full", "min", "max", "fit", "prose", {
          screen: [js]
        }, js]
      }],
      /**
       * Height
       * @see https://tailwindcss.com/docs/height
       */
      h: [{
        h: [st, t, "auto", "min", "max", "fit", "svh", "lvh", "dvh"]
      }],
      /**
       * Min-Height
       * @see https://tailwindcss.com/docs/min-height
       */
      "min-h": [{
        "min-h": [st, t, "min", "max", "fit", "svh", "lvh", "dvh"]
      }],
      /**
       * Max-Height
       * @see https://tailwindcss.com/docs/max-height
       */
      "max-h": [{
        "max-h": [st, t, "min", "max", "fit", "svh", "lvh", "dvh"]
      }],
      /**
       * Size
       * @see https://tailwindcss.com/docs/size
       */
      size: [{
        size: [st, t, "auto", "min", "max", "fit"]
      }],
      // Typography
      /**
       * Font Size
       * @see https://tailwindcss.com/docs/font-size
       */
      "font-size": [{
        text: ["base", js, Ns]
      }],
      /**
       * Font Smoothing
       * @see https://tailwindcss.com/docs/font-smoothing
       */
      "font-smoothing": ["antialiased", "subpixel-antialiased"],
      /**
       * Font Style
       * @see https://tailwindcss.com/docs/font-style
       */
      "font-style": ["italic", "not-italic"],
      /**
       * Font Weight
       * @see https://tailwindcss.com/docs/font-weight
       */
      "font-weight": [{
        font: ["thin", "extralight", "light", "normal", "medium", "semibold", "bold", "extrabold", "black", Nw]
      }],
      /**
       * Font Family
       * @see https://tailwindcss.com/docs/font-family
       */
      "font-family": [{
        font: [fm]
      }],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-normal": ["normal-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-ordinal": ["ordinal"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-slashed-zero": ["slashed-zero"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-figure": ["lining-nums", "oldstyle-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-spacing": ["proportional-nums", "tabular-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-fraction": ["diagonal-fractions", "stacked-fractions"],
      /**
       * Letter Spacing
       * @see https://tailwindcss.com/docs/letter-spacing
       */
      tracking: [{
        tracking: ["tighter", "tight", "normal", "wide", "wider", "widest", st]
      }],
      /**
       * Line Clamp
       * @see https://tailwindcss.com/docs/line-clamp
       */
      "line-clamp": [{
        "line-clamp": ["none", If, Nw]
      }],
      /**
       * Line Height
       * @see https://tailwindcss.com/docs/line-height
       */
      leading: [{
        leading: ["none", "tight", "snug", "normal", "relaxed", "loose", La, st]
      }],
      /**
       * List Style Image
       * @see https://tailwindcss.com/docs/list-style-image
       */
      "list-image": [{
        "list-image": ["none", st]
      }],
      /**
       * List Style Type
       * @see https://tailwindcss.com/docs/list-style-type
       */
      "list-style-type": [{
        list: ["none", "disc", "decimal", st]
      }],
      /**
       * List Style Position
       * @see https://tailwindcss.com/docs/list-style-position
       */
      "list-style-position": [{
        list: ["inside", "outside"]
      }],
      /**
       * Placeholder Color
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/placeholder-color
       */
      "placeholder-color": [{
        placeholder: [e]
      }],
      /**
       * Placeholder Opacity
       * @see https://tailwindcss.com/docs/placeholder-opacity
       */
      "placeholder-opacity": [{
        "placeholder-opacity": [w]
      }],
      /**
       * Text Alignment
       * @see https://tailwindcss.com/docs/text-align
       */
      "text-alignment": [{
        text: ["left", "center", "right", "justify", "start", "end"]
      }],
      /**
       * Text Color
       * @see https://tailwindcss.com/docs/text-color
       */
      "text-color": [{
        text: [e]
      }],
      /**
       * Text Opacity
       * @see https://tailwindcss.com/docs/text-opacity
       */
      "text-opacity": [{
        "text-opacity": [w]
      }],
      /**
       * Text Decoration
       * @see https://tailwindcss.com/docs/text-decoration
       */
      "text-decoration": ["underline", "overline", "line-through", "no-underline"],
      /**
       * Text Decoration Style
       * @see https://tailwindcss.com/docs/text-decoration-style
       */
      "text-decoration-style": [{
        decoration: [...F(), "wavy"]
      }],
      /**
       * Text Decoration Thickness
       * @see https://tailwindcss.com/docs/text-decoration-thickness
       */
      "text-decoration-thickness": [{
        decoration: ["auto", "from-font", La, Ns]
      }],
      /**
       * Text Underline Offset
       * @see https://tailwindcss.com/docs/text-underline-offset
       */
      "underline-offset": [{
        "underline-offset": ["auto", La, st]
      }],
      /**
       * Text Decoration Color
       * @see https://tailwindcss.com/docs/text-decoration-color
       */
      "text-decoration-color": [{
        decoration: [e]
      }],
      /**
       * Text Transform
       * @see https://tailwindcss.com/docs/text-transform
       */
      "text-transform": ["uppercase", "lowercase", "capitalize", "normal-case"],
      /**
       * Text Overflow
       * @see https://tailwindcss.com/docs/text-overflow
       */
      "text-overflow": ["truncate", "text-ellipsis", "text-clip"],
      /**
       * Text Wrap
       * @see https://tailwindcss.com/docs/text-wrap
       */
      "text-wrap": [{
        text: ["wrap", "nowrap", "balance", "pretty"]
      }],
      /**
       * Text Indent
       * @see https://tailwindcss.com/docs/text-indent
       */
      indent: [{
        indent: I()
      }],
      /**
       * Vertical Alignment
       * @see https://tailwindcss.com/docs/vertical-align
       */
      "vertical-align": [{
        align: ["baseline", "top", "middle", "bottom", "text-top", "text-bottom", "sub", "super", st]
      }],
      /**
       * Whitespace
       * @see https://tailwindcss.com/docs/whitespace
       */
      whitespace: [{
        whitespace: ["normal", "nowrap", "pre", "pre-line", "pre-wrap", "break-spaces"]
      }],
      /**
       * Word Break
       * @see https://tailwindcss.com/docs/word-break
       */
      break: [{
        break: ["normal", "words", "all", "keep"]
      }],
      /**
       * Hyphens
       * @see https://tailwindcss.com/docs/hyphens
       */
      hyphens: [{
        hyphens: ["none", "manual", "auto"]
      }],
      /**
       * Content
       * @see https://tailwindcss.com/docs/content
       */
      content: [{
        content: ["none", st]
      }],
      // Backgrounds
      /**
       * Background Attachment
       * @see https://tailwindcss.com/docs/background-attachment
       */
      "bg-attachment": [{
        bg: ["fixed", "local", "scroll"]
      }],
      /**
       * Background Clip
       * @see https://tailwindcss.com/docs/background-clip
       */
      "bg-clip": [{
        "bg-clip": ["border", "padding", "content", "text"]
      }],
      /**
       * Background Opacity
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/background-opacity
       */
      "bg-opacity": [{
        "bg-opacity": [w]
      }],
      /**
       * Background Origin
       * @see https://tailwindcss.com/docs/background-origin
       */
      "bg-origin": [{
        "bg-origin": ["border", "padding", "content"]
      }],
      /**
       * Background Position
       * @see https://tailwindcss.com/docs/background-position
       */
      "bg-position": [{
        bg: [...D(), Lue]
      }],
      /**
       * Background Repeat
       * @see https://tailwindcss.com/docs/background-repeat
       */
      "bg-repeat": [{
        bg: ["no-repeat", {
          repeat: ["", "x", "y", "round", "space"]
        }]
      }],
      /**
       * Background Size
       * @see https://tailwindcss.com/docs/background-size
       */
      "bg-size": [{
        bg: ["auto", "cover", "contain", Due]
      }],
      /**
       * Background Image
       * @see https://tailwindcss.com/docs/background-image
       */
      "bg-image": [{
        bg: ["none", {
          "gradient-to": ["t", "tr", "r", "br", "b", "bl", "l", "tl"]
        }, Wue]
      }],
      /**
       * Background Color
       * @see https://tailwindcss.com/docs/background-color
       */
      "bg-color": [{
        bg: [e]
      }],
      /**
       * Gradient Color Stops From Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-from-pos": [{
        from: [x]
      }],
      /**
       * Gradient Color Stops Via Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-via-pos": [{
        via: [x]
      }],
      /**
       * Gradient Color Stops To Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-to-pos": [{
        to: [x]
      }],
      /**
       * Gradient Color Stops From
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-from": [{
        from: [v]
      }],
      /**
       * Gradient Color Stops Via
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-via": [{
        via: [v]
      }],
      /**
       * Gradient Color Stops To
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-to": [{
        to: [v]
      }],
      // Borders
      /**
       * Border Radius
       * @see https://tailwindcss.com/docs/border-radius
       */
      rounded: [{
        rounded: [a]
      }],
      /**
       * Border Radius Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-s": [{
        "rounded-s": [a]
      }],
      /**
       * Border Radius End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-e": [{
        "rounded-e": [a]
      }],
      /**
       * Border Radius Top
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-t": [{
        "rounded-t": [a]
      }],
      /**
       * Border Radius Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-r": [{
        "rounded-r": [a]
      }],
      /**
       * Border Radius Bottom
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-b": [{
        "rounded-b": [a]
      }],
      /**
       * Border Radius Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-l": [{
        "rounded-l": [a]
      }],
      /**
       * Border Radius Start Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-ss": [{
        "rounded-ss": [a]
      }],
      /**
       * Border Radius Start End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-se": [{
        "rounded-se": [a]
      }],
      /**
       * Border Radius End End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-ee": [{
        "rounded-ee": [a]
      }],
      /**
       * Border Radius End Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-es": [{
        "rounded-es": [a]
      }],
      /**
       * Border Radius Top Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-tl": [{
        "rounded-tl": [a]
      }],
      /**
       * Border Radius Top Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-tr": [{
        "rounded-tr": [a]
      }],
      /**
       * Border Radius Bottom Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-br": [{
        "rounded-br": [a]
      }],
      /**
       * Border Radius Bottom Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-bl": [{
        "rounded-bl": [a]
      }],
      /**
       * Border Width
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w": [{
        border: [s]
      }],
      /**
       * Border Width X
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-x": [{
        "border-x": [s]
      }],
      /**
       * Border Width Y
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-y": [{
        "border-y": [s]
      }],
      /**
       * Border Width Start
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-s": [{
        "border-s": [s]
      }],
      /**
       * Border Width End
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-e": [{
        "border-e": [s]
      }],
      /**
       * Border Width Top
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-t": [{
        "border-t": [s]
      }],
      /**
       * Border Width Right
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-r": [{
        "border-r": [s]
      }],
      /**
       * Border Width Bottom
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-b": [{
        "border-b": [s]
      }],
      /**
       * Border Width Left
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-l": [{
        "border-l": [s]
      }],
      /**
       * Border Opacity
       * @see https://tailwindcss.com/docs/border-opacity
       */
      "border-opacity": [{
        "border-opacity": [w]
      }],
      /**
       * Border Style
       * @see https://tailwindcss.com/docs/border-style
       */
      "border-style": [{
        border: [...F(), "hidden"]
      }],
      /**
       * Divide Width X
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-x": [{
        "divide-x": [s]
      }],
      /**
       * Divide Width X Reverse
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-x-reverse": ["divide-x-reverse"],
      /**
       * Divide Width Y
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-y": [{
        "divide-y": [s]
      }],
      /**
       * Divide Width Y Reverse
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-y-reverse": ["divide-y-reverse"],
      /**
       * Divide Opacity
       * @see https://tailwindcss.com/docs/divide-opacity
       */
      "divide-opacity": [{
        "divide-opacity": [w]
      }],
      /**
       * Divide Style
       * @see https://tailwindcss.com/docs/divide-style
       */
      "divide-style": [{
        divide: F()
      }],
      /**
       * Border Color
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color": [{
        border: [o]
      }],
      /**
       * Border Color X
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-x": [{
        "border-x": [o]
      }],
      /**
       * Border Color Y
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-y": [{
        "border-y": [o]
      }],
      /**
       * Border Color S
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-s": [{
        "border-s": [o]
      }],
      /**
       * Border Color E
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-e": [{
        "border-e": [o]
      }],
      /**
       * Border Color Top
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-t": [{
        "border-t": [o]
      }],
      /**
       * Border Color Right
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-r": [{
        "border-r": [o]
      }],
      /**
       * Border Color Bottom
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-b": [{
        "border-b": [o]
      }],
      /**
       * Border Color Left
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-l": [{
        "border-l": [o]
      }],
      /**
       * Divide Color
       * @see https://tailwindcss.com/docs/divide-color
       */
      "divide-color": [{
        divide: [o]
      }],
      /**
       * Outline Style
       * @see https://tailwindcss.com/docs/outline-style
       */
      "outline-style": [{
        outline: ["", ...F()]
      }],
      /**
       * Outline Offset
       * @see https://tailwindcss.com/docs/outline-offset
       */
      "outline-offset": [{
        "outline-offset": [La, st]
      }],
      /**
       * Outline Width
       * @see https://tailwindcss.com/docs/outline-width
       */
      "outline-w": [{
        outline: [La, Ns]
      }],
      /**
       * Outline Color
       * @see https://tailwindcss.com/docs/outline-color
       */
      "outline-color": [{
        outline: [e]
      }],
      /**
       * Ring Width
       * @see https://tailwindcss.com/docs/ring-width
       */
      "ring-w": [{
        ring: te()
      }],
      /**
       * Ring Width Inset
       * @see https://tailwindcss.com/docs/ring-width
       */
      "ring-w-inset": ["ring-inset"],
      /**
       * Ring Color
       * @see https://tailwindcss.com/docs/ring-color
       */
      "ring-color": [{
        ring: [e]
      }],
      /**
       * Ring Opacity
       * @see https://tailwindcss.com/docs/ring-opacity
       */
      "ring-opacity": [{
        "ring-opacity": [w]
      }],
      /**
       * Ring Offset Width
       * @see https://tailwindcss.com/docs/ring-offset-width
       */
      "ring-offset-w": [{
        "ring-offset": [La, Ns]
      }],
      /**
       * Ring Offset Color
       * @see https://tailwindcss.com/docs/ring-offset-color
       */
      "ring-offset-color": [{
        "ring-offset": [e]
      }],
      // Effects
      /**
       * Box Shadow
       * @see https://tailwindcss.com/docs/box-shadow
       */
      shadow: [{
        shadow: ["", "inner", "none", js, Uue]
      }],
      /**
       * Box Shadow Color
       * @see https://tailwindcss.com/docs/box-shadow-color
       */
      "shadow-color": [{
        shadow: [fm]
      }],
      /**
       * Opacity
       * @see https://tailwindcss.com/docs/opacity
       */
      opacity: [{
        opacity: [w]
      }],
      /**
       * Mix Blend Mode
       * @see https://tailwindcss.com/docs/mix-blend-mode
       */
      "mix-blend": [{
        "mix-blend": [...R(), "plus-lighter", "plus-darker"]
      }],
      /**
       * Background Blend Mode
       * @see https://tailwindcss.com/docs/background-blend-mode
       */
      "bg-blend": [{
        "bg-blend": R()
      }],
      // Filters
      /**
       * Filter
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/filter
       */
      filter: [{
        filter: ["", "none"]
      }],
      /**
       * Blur
       * @see https://tailwindcss.com/docs/blur
       */
      blur: [{
        blur: [r]
      }],
      /**
       * Brightness
       * @see https://tailwindcss.com/docs/brightness
       */
      brightness: [{
        brightness: [n]
      }],
      /**
       * Contrast
       * @see https://tailwindcss.com/docs/contrast
       */
      contrast: [{
        contrast: [l]
      }],
      /**
       * Drop Shadow
       * @see https://tailwindcss.com/docs/drop-shadow
       */
      "drop-shadow": [{
        "drop-shadow": ["", "none", js, st]
      }],
      /**
       * Grayscale
       * @see https://tailwindcss.com/docs/grayscale
       */
      grayscale: [{
        grayscale: [c]
      }],
      /**
       * Hue Rotate
       * @see https://tailwindcss.com/docs/hue-rotate
       */
      "hue-rotate": [{
        "hue-rotate": [u]
      }],
      /**
       * Invert
       * @see https://tailwindcss.com/docs/invert
       */
      invert: [{
        invert: [f]
      }],
      /**
       * Saturate
       * @see https://tailwindcss.com/docs/saturate
       */
      saturate: [{
        saturate: [E]
      }],
      /**
       * Sepia
       * @see https://tailwindcss.com/docs/sepia
       */
      sepia: [{
        sepia: [h]
      }],
      /**
       * Backdrop Filter
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/backdrop-filter
       */
      "backdrop-filter": [{
        "backdrop-filter": ["", "none"]
      }],
      /**
       * Backdrop Blur
       * @see https://tailwindcss.com/docs/backdrop-blur
       */
      "backdrop-blur": [{
        "backdrop-blur": [r]
      }],
      /**
       * Backdrop Brightness
       * @see https://tailwindcss.com/docs/backdrop-brightness
       */
      "backdrop-brightness": [{
        "backdrop-brightness": [n]
      }],
      /**
       * Backdrop Contrast
       * @see https://tailwindcss.com/docs/backdrop-contrast
       */
      "backdrop-contrast": [{
        "backdrop-contrast": [l]
      }],
      /**
       * Backdrop Grayscale
       * @see https://tailwindcss.com/docs/backdrop-grayscale
       */
      "backdrop-grayscale": [{
        "backdrop-grayscale": [c]
      }],
      /**
       * Backdrop Hue Rotate
       * @see https://tailwindcss.com/docs/backdrop-hue-rotate
       */
      "backdrop-hue-rotate": [{
        "backdrop-hue-rotate": [u]
      }],
      /**
       * Backdrop Invert
       * @see https://tailwindcss.com/docs/backdrop-invert
       */
      "backdrop-invert": [{
        "backdrop-invert": [f]
      }],
      /**
       * Backdrop Opacity
       * @see https://tailwindcss.com/docs/backdrop-opacity
       */
      "backdrop-opacity": [{
        "backdrop-opacity": [w]
      }],
      /**
       * Backdrop Saturate
       * @see https://tailwindcss.com/docs/backdrop-saturate
       */
      "backdrop-saturate": [{
        "backdrop-saturate": [E]
      }],
      /**
       * Backdrop Sepia
       * @see https://tailwindcss.com/docs/backdrop-sepia
       */
      "backdrop-sepia": [{
        "backdrop-sepia": [h]
      }],
      // Tables
      /**
       * Border Collapse
       * @see https://tailwindcss.com/docs/border-collapse
       */
      "border-collapse": [{
        border: ["collapse", "separate"]
      }],
      /**
       * Border Spacing
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing": [{
        "border-spacing": [i]
      }],
      /**
       * Border Spacing X
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing-x": [{
        "border-spacing-x": [i]
      }],
      /**
       * Border Spacing Y
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing-y": [{
        "border-spacing-y": [i]
      }],
      /**
       * Table Layout
       * @see https://tailwindcss.com/docs/table-layout
       */
      "table-layout": [{
        table: ["auto", "fixed"]
      }],
      /**
       * Caption Side
       * @see https://tailwindcss.com/docs/caption-side
       */
      caption: [{
        caption: ["top", "bottom"]
      }],
      // Transitions and Animation
      /**
       * Tranisition Property
       * @see https://tailwindcss.com/docs/transition-property
       */
      transition: [{
        transition: ["none", "all", "", "colors", "opacity", "shadow", "transform", st]
      }],
      /**
       * Transition Duration
       * @see https://tailwindcss.com/docs/transition-duration
       */
      duration: [{
        duration: d()
      }],
      /**
       * Transition Timing Function
       * @see https://tailwindcss.com/docs/transition-timing-function
       */
      ease: [{
        ease: ["linear", "in", "out", "in-out", st]
      }],
      /**
       * Transition Delay
       * @see https://tailwindcss.com/docs/transition-delay
       */
      delay: [{
        delay: d()
      }],
      /**
       * Animation
       * @see https://tailwindcss.com/docs/animation
       */
      animate: [{
        animate: ["none", "spin", "ping", "pulse", "bounce", st]
      }],
      // Transforms
      /**
       * Transform
       * @see https://tailwindcss.com/docs/transform
       */
      transform: [{
        transform: ["", "gpu", "none"]
      }],
      /**
       * Scale
       * @see https://tailwindcss.com/docs/scale
       */
      scale: [{
        scale: [S]
      }],
      /**
       * Scale X
       * @see https://tailwindcss.com/docs/scale
       */
      "scale-x": [{
        "scale-x": [S]
      }],
      /**
       * Scale Y
       * @see https://tailwindcss.com/docs/scale
       */
      "scale-y": [{
        "scale-y": [S]
      }],
      /**
       * Rotate
       * @see https://tailwindcss.com/docs/rotate
       */
      rotate: [{
        rotate: [um, st]
      }],
      /**
       * Translate X
       * @see https://tailwindcss.com/docs/translate
       */
      "translate-x": [{
        "translate-x": [Q]
      }],
      /**
       * Translate Y
       * @see https://tailwindcss.com/docs/translate
       */
      "translate-y": [{
        "translate-y": [Q]
      }],
      /**
       * Skew X
       * @see https://tailwindcss.com/docs/skew
       */
      "skew-x": [{
        "skew-x": [U]
      }],
      /**
       * Skew Y
       * @see https://tailwindcss.com/docs/skew
       */
      "skew-y": [{
        "skew-y": [U]
      }],
      /**
       * Transform Origin
       * @see https://tailwindcss.com/docs/transform-origin
       */
      "transform-origin": [{
        origin: ["center", "top", "top-right", "right", "bottom-right", "bottom", "bottom-left", "left", "top-left", st]
      }],
      // Interactivity
      /**
       * Accent Color
       * @see https://tailwindcss.com/docs/accent-color
       */
      accent: [{
        accent: ["auto", e]
      }],
      /**
       * Appearance
       * @see https://tailwindcss.com/docs/appearance
       */
      appearance: [{
        appearance: ["none", "auto"]
      }],
      /**
       * Cursor
       * @see https://tailwindcss.com/docs/cursor
       */
      cursor: [{
        cursor: ["auto", "default", "pointer", "wait", "text", "move", "help", "not-allowed", "none", "context-menu", "progress", "cell", "crosshair", "vertical-text", "alias", "copy", "no-drop", "grab", "grabbing", "all-scroll", "col-resize", "row-resize", "n-resize", "e-resize", "s-resize", "w-resize", "ne-resize", "nw-resize", "se-resize", "sw-resize", "ew-resize", "ns-resize", "nesw-resize", "nwse-resize", "zoom-in", "zoom-out", st]
      }],
      /**
       * Caret Color
       * @see https://tailwindcss.com/docs/just-in-time-mode#caret-color-utilities
       */
      "caret-color": [{
        caret: [e]
      }],
      /**
       * Pointer Events
       * @see https://tailwindcss.com/docs/pointer-events
       */
      "pointer-events": [{
        "pointer-events": ["none", "auto"]
      }],
      /**
       * Resize
       * @see https://tailwindcss.com/docs/resize
       */
      resize: [{
        resize: ["none", "y", "x", ""]
      }],
      /**
       * Scroll Behavior
       * @see https://tailwindcss.com/docs/scroll-behavior
       */
      "scroll-behavior": [{
        scroll: ["auto", "smooth"]
      }],
      /**
       * Scroll Margin
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-m": [{
        "scroll-m": I()
      }],
      /**
       * Scroll Margin X
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mx": [{
        "scroll-mx": I()
      }],
      /**
       * Scroll Margin Y
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-my": [{
        "scroll-my": I()
      }],
      /**
       * Scroll Margin Start
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-ms": [{
        "scroll-ms": I()
      }],
      /**
       * Scroll Margin End
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-me": [{
        "scroll-me": I()
      }],
      /**
       * Scroll Margin Top
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mt": [{
        "scroll-mt": I()
      }],
      /**
       * Scroll Margin Right
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mr": [{
        "scroll-mr": I()
      }],
      /**
       * Scroll Margin Bottom
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mb": [{
        "scroll-mb": I()
      }],
      /**
       * Scroll Margin Left
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-ml": [{
        "scroll-ml": I()
      }],
      /**
       * Scroll Padding
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-p": [{
        "scroll-p": I()
      }],
      /**
       * Scroll Padding X
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-px": [{
        "scroll-px": I()
      }],
      /**
       * Scroll Padding Y
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-py": [{
        "scroll-py": I()
      }],
      /**
       * Scroll Padding Start
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-ps": [{
        "scroll-ps": I()
      }],
      /**
       * Scroll Padding End
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pe": [{
        "scroll-pe": I()
      }],
      /**
       * Scroll Padding Top
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pt": [{
        "scroll-pt": I()
      }],
      /**
       * Scroll Padding Right
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pr": [{
        "scroll-pr": I()
      }],
      /**
       * Scroll Padding Bottom
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pb": [{
        "scroll-pb": I()
      }],
      /**
       * Scroll Padding Left
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pl": [{
        "scroll-pl": I()
      }],
      /**
       * Scroll Snap Align
       * @see https://tailwindcss.com/docs/scroll-snap-align
       */
      "snap-align": [{
        snap: ["start", "end", "center", "align-none"]
      }],
      /**
       * Scroll Snap Stop
       * @see https://tailwindcss.com/docs/scroll-snap-stop
       */
      "snap-stop": [{
        snap: ["normal", "always"]
      }],
      /**
       * Scroll Snap Type
       * @see https://tailwindcss.com/docs/scroll-snap-type
       */
      "snap-type": [{
        snap: ["none", "x", "y", "both"]
      }],
      /**
       * Scroll Snap Type Strictness
       * @see https://tailwindcss.com/docs/scroll-snap-type
       */
      "snap-strictness": [{
        snap: ["mandatory", "proximity"]
      }],
      /**
       * Touch Action
       * @see https://tailwindcss.com/docs/touch-action
       */
      touch: [{
        touch: ["auto", "none", "manipulation"]
      }],
      /**
       * Touch Action X
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-x": [{
        "touch-pan": ["x", "left", "right"]
      }],
      /**
       * Touch Action Y
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-y": [{
        "touch-pan": ["y", "up", "down"]
      }],
      /**
       * Touch Action Pinch Zoom
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-pz": ["touch-pinch-zoom"],
      /**
       * User Select
       * @see https://tailwindcss.com/docs/user-select
       */
      select: [{
        select: ["none", "text", "all", "auto"]
      }],
      /**
       * Will Change
       * @see https://tailwindcss.com/docs/will-change
       */
      "will-change": [{
        "will-change": ["auto", "scroll", "contents", "transform", st]
      }],
      // SVG
      /**
       * Fill
       * @see https://tailwindcss.com/docs/fill
       */
      fill: [{
        fill: [e, "none"]
      }],
      /**
       * Stroke Width
       * @see https://tailwindcss.com/docs/stroke-width
       */
      "stroke-w": [{
        stroke: [La, Ns, Nw]
      }],
      /**
       * Stroke
       * @see https://tailwindcss.com/docs/stroke
       */
      stroke: [{
        stroke: [e, "none"]
      }],
      // Accessibility
      /**
       * Screen Readers
       * @see https://tailwindcss.com/docs/screen-readers
       */
      sr: ["sr-only", "not-sr-only"],
      /**
       * Forced Color Adjust
       * @see https://tailwindcss.com/docs/forced-color-adjust
       */
      "forced-color-adjust": [{
        "forced-color-adjust": ["auto", "none"]
      }]
    },
    conflictingClassGroups: {
      overflow: ["overflow-x", "overflow-y"],
      overscroll: ["overscroll-x", "overscroll-y"],
      inset: ["inset-x", "inset-y", "start", "end", "top", "right", "bottom", "left"],
      "inset-x": ["right", "left"],
      "inset-y": ["top", "bottom"],
      flex: ["basis", "grow", "shrink"],
      gap: ["gap-x", "gap-y"],
      p: ["px", "py", "ps", "pe", "pt", "pr", "pb", "pl"],
      px: ["pr", "pl"],
      py: ["pt", "pb"],
      m: ["mx", "my", "ms", "me", "mt", "mr", "mb", "ml"],
      mx: ["mr", "ml"],
      my: ["mt", "mb"],
      size: ["w", "h"],
      "font-size": ["leading"],
      "fvn-normal": ["fvn-ordinal", "fvn-slashed-zero", "fvn-figure", "fvn-spacing", "fvn-fraction"],
      "fvn-ordinal": ["fvn-normal"],
      "fvn-slashed-zero": ["fvn-normal"],
      "fvn-figure": ["fvn-normal"],
      "fvn-spacing": ["fvn-normal"],
      "fvn-fraction": ["fvn-normal"],
      "line-clamp": ["display", "overflow"],
      rounded: ["rounded-s", "rounded-e", "rounded-t", "rounded-r", "rounded-b", "rounded-l", "rounded-ss", "rounded-se", "rounded-ee", "rounded-es", "rounded-tl", "rounded-tr", "rounded-br", "rounded-bl"],
      "rounded-s": ["rounded-ss", "rounded-es"],
      "rounded-e": ["rounded-se", "rounded-ee"],
      "rounded-t": ["rounded-tl", "rounded-tr"],
      "rounded-r": ["rounded-tr", "rounded-br"],
      "rounded-b": ["rounded-br", "rounded-bl"],
      "rounded-l": ["rounded-tl", "rounded-bl"],
      "border-spacing": ["border-spacing-x", "border-spacing-y"],
      "border-w": ["border-w-s", "border-w-e", "border-w-t", "border-w-r", "border-w-b", "border-w-l"],
      "border-w-x": ["border-w-r", "border-w-l"],
      "border-w-y": ["border-w-t", "border-w-b"],
      "border-color": ["border-color-s", "border-color-e", "border-color-t", "border-color-r", "border-color-b", "border-color-l"],
      "border-color-x": ["border-color-r", "border-color-l"],
      "border-color-y": ["border-color-t", "border-color-b"],
      "scroll-m": ["scroll-mx", "scroll-my", "scroll-ms", "scroll-me", "scroll-mt", "scroll-mr", "scroll-mb", "scroll-ml"],
      "scroll-mx": ["scroll-mr", "scroll-ml"],
      "scroll-my": ["scroll-mt", "scroll-mb"],
      "scroll-p": ["scroll-px", "scroll-py", "scroll-ps", "scroll-pe", "scroll-pt", "scroll-pr", "scroll-pb", "scroll-pl"],
      "scroll-px": ["scroll-pr", "scroll-pl"],
      "scroll-py": ["scroll-pt", "scroll-pb"],
      touch: ["touch-x", "touch-y", "touch-pz"],
      "touch-x": ["touch"],
      "touch-y": ["touch"],
      "touch-pz": ["touch"]
    },
    conflictingClassGroupModifiers: {
      "font-size": ["leading"]
    }
  };
}, xg = /* @__PURE__ */ Aue(que);
/*!
 * Font Awesome Free 6.7.2 by @fontawesome - https://fontawesome.com
 * License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License)
 * Copyright 2024 Fonticons, Inc.
 */
function Bue(e, t, r) {
  return (t = Kue(t)) in e ? Object.defineProperty(e, t, {
    value: r,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : e[t] = r, e;
}
function jN(e, t) {
  var r = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var n = Object.getOwnPropertySymbols(e);
    t && (n = n.filter(function(o) {
      return Object.getOwnPropertyDescriptor(e, o).enumerable;
    })), r.push.apply(r, n);
  }
  return r;
}
function ge(e) {
  for (var t = 1; t < arguments.length; t++) {
    var r = arguments[t] != null ? arguments[t] : {};
    t % 2 ? jN(Object(r), !0).forEach(function(n) {
      Bue(e, n, r[n]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : jN(Object(r)).forEach(function(n) {
      Object.defineProperty(e, n, Object.getOwnPropertyDescriptor(r, n));
    });
  }
  return e;
}
function Xue(e, t) {
  if (typeof e != "object" || !e) return e;
  var r = e[Symbol.toPrimitive];
  if (r !== void 0) {
    var n = r.call(e, t);
    if (typeof n != "object") return n;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (t === "string" ? String : Number)(e);
}
function Kue(e) {
  var t = Xue(e, "string");
  return typeof t == "symbol" ? t : t + "";
}
const IN = () => {
};
let LS = {}, WV = {}, UV = null, YV = {
  mark: IN,
  measure: IN
};
try {
  typeof window < "u" && (LS = window), typeof document < "u" && (WV = document), typeof MutationObserver < "u" && (UV = MutationObserver), typeof performance < "u" && (YV = performance);
} catch {
}
const {
  userAgent: TN = ""
} = LS.navigator || {}, ql = LS, Fr = WV, MN = UV, Hb = YV;
ql.document;
const Di = !!Fr.documentElement && !!Fr.head && typeof Fr.addEventListener == "function" && typeof Fr.createElement == "function", HV = ~TN.indexOf("MSIE") || ~TN.indexOf("Trident/");
var Jue = /fa(s|r|l|t|d|dr|dl|dt|b|k|kd|ss|sr|sl|st|sds|sdr|sdl|sdt)?[\-\ ]/, Que = /Font ?Awesome ?([56 ]*)(Solid|Regular|Light|Thin|Duotone|Brands|Free|Pro|Sharp Duotone|Sharp|Kit)?.*/i, GV = {
  classic: {
    fa: "solid",
    fas: "solid",
    "fa-solid": "solid",
    far: "regular",
    "fa-regular": "regular",
    fal: "light",
    "fa-light": "light",
    fat: "thin",
    "fa-thin": "thin",
    fab: "brands",
    "fa-brands": "brands"
  },
  duotone: {
    fa: "solid",
    fad: "solid",
    "fa-solid": "solid",
    "fa-duotone": "solid",
    fadr: "regular",
    "fa-regular": "regular",
    fadl: "light",
    "fa-light": "light",
    fadt: "thin",
    "fa-thin": "thin"
  },
  sharp: {
    fa: "solid",
    fass: "solid",
    "fa-solid": "solid",
    fasr: "regular",
    "fa-regular": "regular",
    fasl: "light",
    "fa-light": "light",
    fast: "thin",
    "fa-thin": "thin"
  },
  "sharp-duotone": {
    fa: "solid",
    fasds: "solid",
    "fa-solid": "solid",
    fasdr: "regular",
    "fa-regular": "regular",
    fasdl: "light",
    "fa-light": "light",
    fasdt: "thin",
    "fa-thin": "thin"
  }
}, Zue = {
  GROUP: "duotone-group",
  PRIMARY: "primary",
  SECONDARY: "secondary"
}, qV = ["fa-classic", "fa-duotone", "fa-sharp", "fa-sharp-duotone"], pn = "classic", r0 = "duotone", efe = "sharp", tfe = "sharp-duotone", BV = [pn, r0, efe, tfe], rfe = {
  classic: {
    900: "fas",
    400: "far",
    normal: "far",
    300: "fal",
    100: "fat"
  },
  duotone: {
    900: "fad",
    400: "fadr",
    300: "fadl",
    100: "fadt"
  },
  sharp: {
    900: "fass",
    400: "fasr",
    300: "fasl",
    100: "fast"
  },
  "sharp-duotone": {
    900: "fasds",
    400: "fasdr",
    300: "fasdl",
    100: "fasdt"
  }
}, nfe = {
  "Font Awesome 6 Free": {
    900: "fas",
    400: "far"
  },
  "Font Awesome 6 Pro": {
    900: "fas",
    400: "far",
    normal: "far",
    300: "fal",
    100: "fat"
  },
  "Font Awesome 6 Brands": {
    400: "fab",
    normal: "fab"
  },
  "Font Awesome 6 Duotone": {
    900: "fad",
    400: "fadr",
    normal: "fadr",
    300: "fadl",
    100: "fadt"
  },
  "Font Awesome 6 Sharp": {
    900: "fass",
    400: "fasr",
    normal: "fasr",
    300: "fasl",
    100: "fast"
  },
  "Font Awesome 6 Sharp Duotone": {
    900: "fasds",
    400: "fasdr",
    normal: "fasdr",
    300: "fasdl",
    100: "fasdt"
  }
}, ofe = /* @__PURE__ */ new Map([["classic", {
  defaultShortPrefixId: "fas",
  defaultStyleId: "solid",
  styleIds: ["solid", "regular", "light", "thin", "brands"],
  futureStyleIds: [],
  defaultFontWeight: 900
}], ["sharp", {
  defaultShortPrefixId: "fass",
  defaultStyleId: "solid",
  styleIds: ["solid", "regular", "light", "thin"],
  futureStyleIds: [],
  defaultFontWeight: 900
}], ["duotone", {
  defaultShortPrefixId: "fad",
  defaultStyleId: "solid",
  styleIds: ["solid", "regular", "light", "thin"],
  futureStyleIds: [],
  defaultFontWeight: 900
}], ["sharp-duotone", {
  defaultShortPrefixId: "fasds",
  defaultStyleId: "solid",
  styleIds: ["solid", "regular", "light", "thin"],
  futureStyleIds: [],
  defaultFontWeight: 900
}]]), afe = {
  classic: {
    solid: "fas",
    regular: "far",
    light: "fal",
    thin: "fat",
    brands: "fab"
  },
  duotone: {
    solid: "fad",
    regular: "fadr",
    light: "fadl",
    thin: "fadt"
  },
  sharp: {
    solid: "fass",
    regular: "fasr",
    light: "fasl",
    thin: "fast"
  },
  "sharp-duotone": {
    solid: "fasds",
    regular: "fasdr",
    light: "fasdl",
    thin: "fasdt"
  }
}, ife = ["fak", "fa-kit", "fakd", "fa-kit-duotone"], RN = {
  kit: {
    fak: "kit",
    "fa-kit": "kit"
  },
  "kit-duotone": {
    fakd: "kit-duotone",
    "fa-kit-duotone": "kit-duotone"
  }
}, sfe = ["kit"], lfe = {
  kit: {
    "fa-kit": "fak"
  }
}, cfe = ["fak", "fakd"], ufe = {
  kit: {
    fak: "fa-kit"
  }
}, zN = {
  kit: {
    kit: "fak"
  },
  "kit-duotone": {
    "kit-duotone": "fakd"
  }
}, Gb = {
  GROUP: "duotone-group",
  SWAP_OPACITY: "swap-opacity",
  PRIMARY: "primary",
  SECONDARY: "secondary"
}, ffe = ["fa-classic", "fa-duotone", "fa-sharp", "fa-sharp-duotone"], dfe = ["fak", "fa-kit", "fakd", "fa-kit-duotone"], pfe = {
  "Font Awesome Kit": {
    400: "fak",
    normal: "fak"
  },
  "Font Awesome Kit Duotone": {
    400: "fakd",
    normal: "fakd"
  }
}, mfe = {
  classic: {
    "fa-brands": "fab",
    "fa-duotone": "fad",
    "fa-light": "fal",
    "fa-regular": "far",
    "fa-solid": "fas",
    "fa-thin": "fat"
  },
  duotone: {
    "fa-regular": "fadr",
    "fa-light": "fadl",
    "fa-thin": "fadt"
  },
  sharp: {
    "fa-solid": "fass",
    "fa-regular": "fasr",
    "fa-light": "fasl",
    "fa-thin": "fast"
  },
  "sharp-duotone": {
    "fa-solid": "fasds",
    "fa-regular": "fasdr",
    "fa-light": "fasdl",
    "fa-thin": "fasdt"
  }
}, gfe = {
  classic: ["fas", "far", "fal", "fat", "fad"],
  duotone: ["fadr", "fadl", "fadt"],
  sharp: ["fass", "fasr", "fasl", "fast"],
  "sharp-duotone": ["fasds", "fasdr", "fasdl", "fasdt"]
}, N5 = {
  classic: {
    fab: "fa-brands",
    fad: "fa-duotone",
    fal: "fa-light",
    far: "fa-regular",
    fas: "fa-solid",
    fat: "fa-thin"
  },
  duotone: {
    fadr: "fa-regular",
    fadl: "fa-light",
    fadt: "fa-thin"
  },
  sharp: {
    fass: "fa-solid",
    fasr: "fa-regular",
    fasl: "fa-light",
    fast: "fa-thin"
  },
  "sharp-duotone": {
    fasds: "fa-solid",
    fasdr: "fa-regular",
    fasdl: "fa-light",
    fasdt: "fa-thin"
  }
}, hfe = ["fa-solid", "fa-regular", "fa-light", "fa-thin", "fa-duotone", "fa-brands"], j5 = ["fa", "fas", "far", "fal", "fat", "fad", "fadr", "fadl", "fadt", "fab", "fass", "fasr", "fasl", "fast", "fasds", "fasdr", "fasdl", "fasdt", ...ffe, ...hfe], bfe = ["solid", "regular", "light", "thin", "duotone", "brands"], XV = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], yfe = XV.concat([11, 12, 13, 14, 15, 16, 17, 18, 19, 20]), vfe = [...Object.keys(gfe), ...bfe, "2xs", "xs", "sm", "lg", "xl", "2xl", "beat", "border", "fade", "beat-fade", "bounce", "flip-both", "flip-horizontal", "flip-vertical", "flip", "fw", "inverse", "layers-counter", "layers-text", "layers", "li", "pull-left", "pull-right", "pulse", "rotate-180", "rotate-270", "rotate-90", "rotate-by", "shake", "spin-pulse", "spin-reverse", "spin", "stack-1x", "stack-2x", "stack", "ul", Gb.GROUP, Gb.SWAP_OPACITY, Gb.PRIMARY, Gb.SECONDARY].concat(XV.map((e) => "".concat(e, "x"))).concat(yfe.map((e) => "w-".concat(e))), xfe = {
  "Font Awesome 5 Free": {
    900: "fas",
    400: "far"
  },
  "Font Awesome 5 Pro": {
    900: "fas",
    400: "far",
    normal: "far",
    300: "fal"
  },
  "Font Awesome 5 Brands": {
    400: "fab",
    normal: "fab"
  },
  "Font Awesome 5 Duotone": {
    900: "fad"
  }
};
const mi = "___FONT_AWESOME___", I5 = 16, KV = "fa", JV = "svg-inline--fa", cu = "data-fa-i2svg", T5 = "data-fa-pseudo-element", wfe = "data-fa-pseudo-element-pending", VS = "data-prefix", WS = "data-icon", FN = "fontawesome-i2svg", kfe = "async", $fe = ["HTML", "HEAD", "STYLE", "SCRIPT"], QV = (() => {
  try {
    return process.env.NODE_ENV === "production";
  } catch {
    return !1;
  }
})();
function Qh(e) {
  return new Proxy(e, {
    get(t, r) {
      return r in t ? t[r] : t[pn];
    }
  });
}
const ZV = ge({}, GV);
ZV[pn] = ge(ge(ge(ge({}, {
  "fa-duotone": "duotone"
}), GV[pn]), RN.kit), RN["kit-duotone"]);
const Ofe = Qh(ZV), M5 = ge({}, afe);
M5[pn] = ge(ge(ge(ge({}, {
  duotone: "fad"
}), M5[pn]), zN.kit), zN["kit-duotone"]);
const DN = Qh(M5), R5 = ge({}, N5);
R5[pn] = ge(ge({}, R5[pn]), ufe.kit);
const US = Qh(R5), z5 = ge({}, mfe);
z5[pn] = ge(ge({}, z5[pn]), lfe.kit);
Qh(z5);
const Efe = Jue, eW = "fa-layers-text", Sfe = Que, Pfe = ge({}, rfe);
Qh(Pfe);
const Cfe = ["class", "data-prefix", "data-icon", "data-fa-transform", "data-fa-mask"], jw = Zue, Afe = [...sfe, ...vfe], wg = ql.FontAwesomeConfig || {};
function _fe(e) {
  var t = Fr.querySelector("script[" + e + "]");
  if (t)
    return t.getAttribute(e);
}
function Nfe(e) {
  return e === "" ? !0 : e === "false" ? !1 : e === "true" ? !0 : e;
}
Fr && typeof Fr.querySelector == "function" && [["data-family-prefix", "familyPrefix"], ["data-css-prefix", "cssPrefix"], ["data-family-default", "familyDefault"], ["data-style-default", "styleDefault"], ["data-replacement-class", "replacementClass"], ["data-auto-replace-svg", "autoReplaceSvg"], ["data-auto-add-css", "autoAddCss"], ["data-auto-a11y", "autoA11y"], ["data-search-pseudo-elements", "searchPseudoElements"], ["data-observe-mutations", "observeMutations"], ["data-mutate-approach", "mutateApproach"], ["data-keep-original-source", "keepOriginalSource"], ["data-measure-performance", "measurePerformance"], ["data-show-missing-icons", "showMissingIcons"]].forEach((e) => {
  let [t, r] = e;
  const n = Nfe(_fe(t));
  n != null && (wg[r] = n);
});
const tW = {
  styleDefault: "solid",
  familyDefault: pn,
  cssPrefix: KV,
  replacementClass: JV,
  autoReplaceSvg: !0,
  autoAddCss: !0,
  autoA11y: !0,
  searchPseudoElements: !1,
  observeMutations: !0,
  mutateApproach: "async",
  keepOriginalSource: !0,
  measurePerformance: !1,
  showMissingIcons: !0
};
wg.familyPrefix && (wg.cssPrefix = wg.familyPrefix);
const dd = ge(ge({}, tW), wg);
dd.autoReplaceSvg || (dd.observeMutations = !1);
const Ve = {};
Object.keys(tW).forEach((e) => {
  Object.defineProperty(Ve, e, {
    enumerable: !0,
    set: function(t) {
      dd[e] = t, kg.forEach((r) => r(Ve));
    },
    get: function() {
      return dd[e];
    }
  });
});
Object.defineProperty(Ve, "familyPrefix", {
  enumerable: !0,
  set: function(e) {
    dd.cssPrefix = e, kg.forEach((t) => t(Ve));
  },
  get: function() {
    return dd.cssPrefix;
  }
});
ql.FontAwesomeConfig = Ve;
const kg = [];
function jfe(e) {
  return kg.push(e), () => {
    kg.splice(kg.indexOf(e), 1);
  };
}
const Is = I5, ua = {
  size: 16,
  x: 0,
  y: 0,
  rotate: 0,
  flipX: !1,
  flipY: !1
};
function Ife(e) {
  if (!e || !Di)
    return;
  const t = Fr.createElement("style");
  t.setAttribute("type", "text/css"), t.innerHTML = e;
  const r = Fr.head.childNodes;
  let n = null;
  for (let o = r.length - 1; o > -1; o--) {
    const a = r[o], i = (a.tagName || "").toUpperCase();
    ["STYLE", "LINK"].indexOf(i) > -1 && (n = a);
  }
  return Fr.head.insertBefore(t, n), e;
}
const Tfe = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
function dh() {
  let e = 12, t = "";
  for (; e-- > 0; )
    t += Tfe[Math.random() * 62 | 0];
  return t;
}
function Td(e) {
  const t = [];
  for (let r = (e || []).length >>> 0; r--; )
    t[r] = e[r];
  return t;
}
function YS(e) {
  return e.classList ? Td(e.classList) : (e.getAttribute("class") || "").split(" ").filter((t) => t);
}
function rW(e) {
  return "".concat(e).replace(/&/g, "&amp;").replace(/"/g, "&quot;").replace(/'/g, "&#39;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
}
function Mfe(e) {
  return Object.keys(e || {}).reduce((t, r) => t + "".concat(r, '="').concat(rW(e[r]), '" '), "").trim();
}
function n0(e) {
  return Object.keys(e || {}).reduce((t, r) => t + "".concat(r, ": ").concat(e[r].trim(), ";"), "");
}
function HS(e) {
  return e.size !== ua.size || e.x !== ua.x || e.y !== ua.y || e.rotate !== ua.rotate || e.flipX || e.flipY;
}
function Rfe(e) {
  let {
    transform: t,
    containerWidth: r,
    iconWidth: n
  } = e;
  const o = {
    transform: "translate(".concat(r / 2, " 256)")
  }, a = "translate(".concat(t.x * 32, ", ").concat(t.y * 32, ") "), i = "scale(".concat(t.size / 16 * (t.flipX ? -1 : 1), ", ").concat(t.size / 16 * (t.flipY ? -1 : 1), ") "), s = "rotate(".concat(t.rotate, " 0 0)"), l = {
    transform: "".concat(a, " ").concat(i, " ").concat(s)
  }, c = {
    transform: "translate(".concat(n / 2 * -1, " -256)")
  };
  return {
    outer: o,
    inner: l,
    path: c
  };
}
function zfe(e) {
  let {
    transform: t,
    width: r = I5,
    height: n = I5,
    startCentered: o = !1
  } = e, a = "";
  return o && HV ? a += "translate(".concat(t.x / Is - r / 2, "em, ").concat(t.y / Is - n / 2, "em) ") : o ? a += "translate(calc(-50% + ".concat(t.x / Is, "em), calc(-50% + ").concat(t.y / Is, "em)) ") : a += "translate(".concat(t.x / Is, "em, ").concat(t.y / Is, "em) "), a += "scale(".concat(t.size / Is * (t.flipX ? -1 : 1), ", ").concat(t.size / Is * (t.flipY ? -1 : 1), ") "), a += "rotate(".concat(t.rotate, "deg) "), a;
}
var Ffe = `:root, :host {
  --fa-font-solid: normal 900 1em/1 "Font Awesome 6 Free";
  --fa-font-regular: normal 400 1em/1 "Font Awesome 6 Free";
  --fa-font-light: normal 300 1em/1 "Font Awesome 6 Pro";
  --fa-font-thin: normal 100 1em/1 "Font Awesome 6 Pro";
  --fa-font-duotone: normal 900 1em/1 "Font Awesome 6 Duotone";
  --fa-font-duotone-regular: normal 400 1em/1 "Font Awesome 6 Duotone";
  --fa-font-duotone-light: normal 300 1em/1 "Font Awesome 6 Duotone";
  --fa-font-duotone-thin: normal 100 1em/1 "Font Awesome 6 Duotone";
  --fa-font-brands: normal 400 1em/1 "Font Awesome 6 Brands";
  --fa-font-sharp-solid: normal 900 1em/1 "Font Awesome 6 Sharp";
  --fa-font-sharp-regular: normal 400 1em/1 "Font Awesome 6 Sharp";
  --fa-font-sharp-light: normal 300 1em/1 "Font Awesome 6 Sharp";
  --fa-font-sharp-thin: normal 100 1em/1 "Font Awesome 6 Sharp";
  --fa-font-sharp-duotone-solid: normal 900 1em/1 "Font Awesome 6 Sharp Duotone";
  --fa-font-sharp-duotone-regular: normal 400 1em/1 "Font Awesome 6 Sharp Duotone";
  --fa-font-sharp-duotone-light: normal 300 1em/1 "Font Awesome 6 Sharp Duotone";
  --fa-font-sharp-duotone-thin: normal 100 1em/1 "Font Awesome 6 Sharp Duotone";
}

svg:not(:root).svg-inline--fa, svg:not(:host).svg-inline--fa {
  overflow: visible;
  box-sizing: content-box;
}

.svg-inline--fa {
  display: var(--fa-display, inline-block);
  height: 1em;
  overflow: visible;
  vertical-align: -0.125em;
}
.svg-inline--fa.fa-2xs {
  vertical-align: 0.1em;
}
.svg-inline--fa.fa-xs {
  vertical-align: 0em;
}
.svg-inline--fa.fa-sm {
  vertical-align: -0.0714285705em;
}
.svg-inline--fa.fa-lg {
  vertical-align: -0.2em;
}
.svg-inline--fa.fa-xl {
  vertical-align: -0.25em;
}
.svg-inline--fa.fa-2xl {
  vertical-align: -0.3125em;
}
.svg-inline--fa.fa-pull-left {
  margin-right: var(--fa-pull-margin, 0.3em);
  width: auto;
}
.svg-inline--fa.fa-pull-right {
  margin-left: var(--fa-pull-margin, 0.3em);
  width: auto;
}
.svg-inline--fa.fa-li {
  width: var(--fa-li-width, 2em);
  top: 0.25em;
}
.svg-inline--fa.fa-fw {
  width: var(--fa-fw-width, 1.25em);
}

.fa-layers svg.svg-inline--fa {
  bottom: 0;
  left: 0;
  margin: auto;
  position: absolute;
  right: 0;
  top: 0;
}

.fa-layers-counter, .fa-layers-text {
  display: inline-block;
  position: absolute;
  text-align: center;
}

.fa-layers {
  display: inline-block;
  height: 1em;
  position: relative;
  text-align: center;
  vertical-align: -0.125em;
  width: 1em;
}
.fa-layers svg.svg-inline--fa {
  transform-origin: center center;
}

.fa-layers-text {
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  transform-origin: center center;
}

.fa-layers-counter {
  background-color: var(--fa-counter-background-color, #ff253a);
  border-radius: var(--fa-counter-border-radius, 1em);
  box-sizing: border-box;
  color: var(--fa-inverse, #fff);
  line-height: var(--fa-counter-line-height, 1);
  max-width: var(--fa-counter-max-width, 5em);
  min-width: var(--fa-counter-min-width, 1.5em);
  overflow: hidden;
  padding: var(--fa-counter-padding, 0.25em 0.5em);
  right: var(--fa-right, 0);
  text-overflow: ellipsis;
  top: var(--fa-top, 0);
  transform: scale(var(--fa-counter-scale, 0.25));
  transform-origin: top right;
}

.fa-layers-bottom-right {
  bottom: var(--fa-bottom, 0);
  right: var(--fa-right, 0);
  top: auto;
  transform: scale(var(--fa-layers-scale, 0.25));
  transform-origin: bottom right;
}

.fa-layers-bottom-left {
  bottom: var(--fa-bottom, 0);
  left: var(--fa-left, 0);
  right: auto;
  top: auto;
  transform: scale(var(--fa-layers-scale, 0.25));
  transform-origin: bottom left;
}

.fa-layers-top-right {
  top: var(--fa-top, 0);
  right: var(--fa-right, 0);
  transform: scale(var(--fa-layers-scale, 0.25));
  transform-origin: top right;
}

.fa-layers-top-left {
  left: var(--fa-left, 0);
  right: auto;
  top: var(--fa-top, 0);
  transform: scale(var(--fa-layers-scale, 0.25));
  transform-origin: top left;
}

.fa-1x {
  font-size: 1em;
}

.fa-2x {
  font-size: 2em;
}

.fa-3x {
  font-size: 3em;
}

.fa-4x {
  font-size: 4em;
}

.fa-5x {
  font-size: 5em;
}

.fa-6x {
  font-size: 6em;
}

.fa-7x {
  font-size: 7em;
}

.fa-8x {
  font-size: 8em;
}

.fa-9x {
  font-size: 9em;
}

.fa-10x {
  font-size: 10em;
}

.fa-2xs {
  font-size: 0.625em;
  line-height: 0.1em;
  vertical-align: 0.225em;
}

.fa-xs {
  font-size: 0.75em;
  line-height: 0.0833333337em;
  vertical-align: 0.125em;
}

.fa-sm {
  font-size: 0.875em;
  line-height: 0.0714285718em;
  vertical-align: 0.0535714295em;
}

.fa-lg {
  font-size: 1.25em;
  line-height: 0.05em;
  vertical-align: -0.075em;
}

.fa-xl {
  font-size: 1.5em;
  line-height: 0.0416666682em;
  vertical-align: -0.125em;
}

.fa-2xl {
  font-size: 2em;
  line-height: 0.03125em;
  vertical-align: -0.1875em;
}

.fa-fw {
  text-align: center;
  width: 1.25em;
}

.fa-ul {
  list-style-type: none;
  margin-left: var(--fa-li-margin, 2.5em);
  padding-left: 0;
}
.fa-ul > li {
  position: relative;
}

.fa-li {
  left: calc(-1 * var(--fa-li-width, 2em));
  position: absolute;
  text-align: center;
  width: var(--fa-li-width, 2em);
  line-height: inherit;
}

.fa-border {
  border-color: var(--fa-border-color, #eee);
  border-radius: var(--fa-border-radius, 0.1em);
  border-style: var(--fa-border-style, solid);
  border-width: var(--fa-border-width, 0.08em);
  padding: var(--fa-border-padding, 0.2em 0.25em 0.15em);
}

.fa-pull-left {
  float: left;
  margin-right: var(--fa-pull-margin, 0.3em);
}

.fa-pull-right {
  float: right;
  margin-left: var(--fa-pull-margin, 0.3em);
}

.fa-beat {
  animation-name: fa-beat;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, ease-in-out);
}

.fa-bounce {
  animation-name: fa-bounce;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.28, 0.84, 0.42, 1));
}

.fa-fade {
  animation-name: fa-fade;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));
}

.fa-beat-fade {
  animation-name: fa-beat-fade;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));
}

.fa-flip {
  animation-name: fa-flip;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, ease-in-out);
}

.fa-shake {
  animation-name: fa-shake;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, linear);
}

.fa-spin {
  animation-name: fa-spin;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 2s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, linear);
}

.fa-spin-reverse {
  --fa-animation-direction: reverse;
}

.fa-pulse,
.fa-spin-pulse {
  animation-name: fa-spin;
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, steps(8));
}

@media (prefers-reduced-motion: reduce) {
  .fa-beat,
.fa-bounce,
.fa-fade,
.fa-beat-fade,
.fa-flip,
.fa-pulse,
.fa-shake,
.fa-spin,
.fa-spin-pulse {
    animation-delay: -1ms;
    animation-duration: 1ms;
    animation-iteration-count: 1;
    transition-delay: 0s;
    transition-duration: 0s;
  }
}
@keyframes fa-beat {
  0%, 90% {
    transform: scale(1);
  }
  45% {
    transform: scale(var(--fa-beat-scale, 1.25));
  }
}
@keyframes fa-bounce {
  0% {
    transform: scale(1, 1) translateY(0);
  }
  10% {
    transform: scale(var(--fa-bounce-start-scale-x, 1.1), var(--fa-bounce-start-scale-y, 0.9)) translateY(0);
  }
  30% {
    transform: scale(var(--fa-bounce-jump-scale-x, 0.9), var(--fa-bounce-jump-scale-y, 1.1)) translateY(var(--fa-bounce-height, -0.5em));
  }
  50% {
    transform: scale(var(--fa-bounce-land-scale-x, 1.05), var(--fa-bounce-land-scale-y, 0.95)) translateY(0);
  }
  57% {
    transform: scale(1, 1) translateY(var(--fa-bounce-rebound, -0.125em));
  }
  64% {
    transform: scale(1, 1) translateY(0);
  }
  100% {
    transform: scale(1, 1) translateY(0);
  }
}
@keyframes fa-fade {
  50% {
    opacity: var(--fa-fade-opacity, 0.4);
  }
}
@keyframes fa-beat-fade {
  0%, 100% {
    opacity: var(--fa-beat-fade-opacity, 0.4);
    transform: scale(1);
  }
  50% {
    opacity: 1;
    transform: scale(var(--fa-beat-fade-scale, 1.125));
  }
}
@keyframes fa-flip {
  50% {
    transform: rotate3d(var(--fa-flip-x, 0), var(--fa-flip-y, 1), var(--fa-flip-z, 0), var(--fa-flip-angle, -180deg));
  }
}
@keyframes fa-shake {
  0% {
    transform: rotate(-15deg);
  }
  4% {
    transform: rotate(15deg);
  }
  8%, 24% {
    transform: rotate(-18deg);
  }
  12%, 28% {
    transform: rotate(18deg);
  }
  16% {
    transform: rotate(-22deg);
  }
  20% {
    transform: rotate(22deg);
  }
  32% {
    transform: rotate(-12deg);
  }
  36% {
    transform: rotate(12deg);
  }
  40%, 100% {
    transform: rotate(0deg);
  }
}
@keyframes fa-spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
.fa-rotate-90 {
  transform: rotate(90deg);
}

.fa-rotate-180 {
  transform: rotate(180deg);
}

.fa-rotate-270 {
  transform: rotate(270deg);
}

.fa-flip-horizontal {
  transform: scale(-1, 1);
}

.fa-flip-vertical {
  transform: scale(1, -1);
}

.fa-flip-both,
.fa-flip-horizontal.fa-flip-vertical {
  transform: scale(-1, -1);
}

.fa-rotate-by {
  transform: rotate(var(--fa-rotate-angle, 0));
}

.fa-stack {
  display: inline-block;
  vertical-align: middle;
  height: 2em;
  position: relative;
  width: 2.5em;
}

.fa-stack-1x,
.fa-stack-2x {
  bottom: 0;
  left: 0;
  margin: auto;
  position: absolute;
  right: 0;
  top: 0;
  z-index: var(--fa-stack-z-index, auto);
}

.svg-inline--fa.fa-stack-1x {
  height: 1em;
  width: 1.25em;
}
.svg-inline--fa.fa-stack-2x {
  height: 2em;
  width: 2.5em;
}

.fa-inverse {
  color: var(--fa-inverse, #fff);
}

.sr-only,
.fa-sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.sr-only-focusable:not(:focus),
.fa-sr-only-focusable:not(:focus) {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.svg-inline--fa .fa-primary {
  fill: var(--fa-primary-color, currentColor);
  opacity: var(--fa-primary-opacity, 1);
}

.svg-inline--fa .fa-secondary {
  fill: var(--fa-secondary-color, currentColor);
  opacity: var(--fa-secondary-opacity, 0.4);
}

.svg-inline--fa.fa-swap-opacity .fa-primary {
  opacity: var(--fa-secondary-opacity, 0.4);
}

.svg-inline--fa.fa-swap-opacity .fa-secondary {
  opacity: var(--fa-primary-opacity, 1);
}

.svg-inline--fa mask .fa-primary,
.svg-inline--fa mask .fa-secondary {
  fill: black;
}`;
function nW() {
  const e = KV, t = JV, r = Ve.cssPrefix, n = Ve.replacementClass;
  let o = Ffe;
  if (r !== e || n !== t) {
    const a = new RegExp("\\.".concat(e, "\\-"), "g"), i = new RegExp("\\--".concat(e, "\\-"), "g"), s = new RegExp("\\.".concat(t), "g");
    o = o.replace(a, ".".concat(r, "-")).replace(i, "--".concat(r, "-")).replace(s, ".".concat(n));
  }
  return o;
}
let LN = !1;
function Iw() {
  Ve.autoAddCss && !LN && (Ife(nW()), LN = !0);
}
var Dfe = {
  mixout() {
    return {
      dom: {
        css: nW,
        insertCss: Iw
      }
    };
  },
  hooks() {
    return {
      beforeDOMElementCreation() {
        Iw();
      },
      beforeI2svg() {
        Iw();
      }
    };
  }
};
const gi = ql || {};
gi[mi] || (gi[mi] = {});
gi[mi].styles || (gi[mi].styles = {});
gi[mi].hooks || (gi[mi].hooks = {});
gi[mi].shims || (gi[mi].shims = []);
var fa = gi[mi];
const oW = [], aW = function() {
  Fr.removeEventListener("DOMContentLoaded", aW), Lv = 1, oW.map((e) => e());
};
let Lv = !1;
Di && (Lv = (Fr.documentElement.doScroll ? /^loaded|^c/ : /^loaded|^i|^c/).test(Fr.readyState), Lv || Fr.addEventListener("DOMContentLoaded", aW));
function Lfe(e) {
  Di && (Lv ? setTimeout(e, 0) : oW.push(e));
}
function Zh(e) {
  const {
    tag: t,
    attributes: r = {},
    children: n = []
  } = e;
  return typeof e == "string" ? rW(e) : "<".concat(t, " ").concat(Mfe(r), ">").concat(n.map(Zh).join(""), "</").concat(t, ">");
}
function VN(e, t, r) {
  if (e && e[t] && e[t][r])
    return {
      prefix: t,
      iconName: r,
      icon: e[t][r]
    };
}
var Tw = function(e, t, r, n) {
  var o = Object.keys(e), a = o.length, i = t, s, l, c;
  for (r === void 0 ? (s = 1, c = e[o[0]]) : (s = 0, c = r); s < a; s++)
    l = o[s], c = i(c, e[l], l, e);
  return c;
};
function Vfe(e) {
  const t = [];
  let r = 0;
  const n = e.length;
  for (; r < n; ) {
    const o = e.charCodeAt(r++);
    if (o >= 55296 && o <= 56319 && r < n) {
      const a = e.charCodeAt(r++);
      (a & 64512) == 56320 ? t.push(((o & 1023) << 10) + (a & 1023) + 65536) : (t.push(o), r--);
    } else
      t.push(o);
  }
  return t;
}
function iW(e) {
  const t = Vfe(e);
  return t.length === 1 ? t[0].toString(16) : null;
}
function Wfe(e, t) {
  const r = e.length;
  let n = e.charCodeAt(t), o;
  return n >= 55296 && n <= 56319 && r > t + 1 && (o = e.charCodeAt(t + 1), o >= 56320 && o <= 57343) ? (n - 55296) * 1024 + o - 56320 + 65536 : n;
}
function WN(e) {
  return Object.keys(e).reduce((t, r) => {
    const n = e[r];
    return n.icon ? t[n.iconName] = n.icon : t[r] = n, t;
  }, {});
}
function F5(e, t) {
  let r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
  const {
    skipHooks: n = !1
  } = r, o = WN(t);
  typeof fa.hooks.addPack == "function" && !n ? fa.hooks.addPack(e, WN(t)) : fa.styles[e] = ge(ge({}, fa.styles[e] || {}), o), e === "fas" && F5("fa", t);
}
const {
  styles: ph,
  shims: Ufe
} = fa, sW = Object.keys(US), Yfe = sW.reduce((e, t) => (e[t] = Object.keys(US[t]), e), {});
let GS = null, lW = {}, cW = {}, uW = {}, fW = {}, dW = {};
function Hfe(e) {
  return ~Afe.indexOf(e);
}
function Gfe(e, t) {
  const r = t.split("-"), n = r[0], o = r.slice(1).join("-");
  return n === e && o !== "" && !Hfe(o) ? o : null;
}
const pW = () => {
  const e = (n) => Tw(ph, (o, a, i) => (o[i] = Tw(a, n, {}), o), {});
  lW = e((n, o, a) => (o[3] && (n[o[3]] = a), o[2] && o[2].filter((i) => typeof i == "number").forEach((i) => {
    n[i.toString(16)] = a;
  }), n)), cW = e((n, o, a) => (n[a] = a, o[2] && o[2].filter((i) => typeof i == "string").forEach((i) => {
    n[i] = a;
  }), n)), dW = e((n, o, a) => {
    const i = o[2];
    return n[a] = a, i.forEach((s) => {
      n[s] = a;
    }), n;
  });
  const t = "far" in ph || Ve.autoFetchSvg, r = Tw(Ufe, (n, o) => {
    const a = o[0];
    let i = o[1];
    const s = o[2];
    return i === "far" && !t && (i = "fas"), typeof a == "string" && (n.names[a] = {
      prefix: i,
      iconName: s
    }), typeof a == "number" && (n.unicodes[a.toString(16)] = {
      prefix: i,
      iconName: s
    }), n;
  }, {
    names: {},
    unicodes: {}
  });
  uW = r.names, fW = r.unicodes, GS = o0(Ve.styleDefault, {
    family: Ve.familyDefault
  });
};
jfe((e) => {
  GS = o0(e.styleDefault, {
    family: Ve.familyDefault
  });
});
pW();
function qS(e, t) {
  return (lW[e] || {})[t];
}
function qfe(e, t) {
  return (cW[e] || {})[t];
}
function zc(e, t) {
  return (dW[e] || {})[t];
}
function mW(e) {
  return uW[e] || {
    prefix: null,
    iconName: null
  };
}
function Bfe(e) {
  const t = fW[e], r = qS("fas", e);
  return t || (r ? {
    prefix: "fas",
    iconName: r
  } : null) || {
    prefix: null,
    iconName: null
  };
}
function Bl() {
  return GS;
}
const gW = () => ({
  prefix: null,
  iconName: null,
  rest: []
});
function Xfe(e) {
  let t = pn;
  const r = sW.reduce((n, o) => (n[o] = "".concat(Ve.cssPrefix, "-").concat(o), n), {});
  return BV.forEach((n) => {
    (e.includes(r[n]) || e.some((o) => Yfe[n].includes(o))) && (t = n);
  }), t;
}
function o0(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  const {
    family: r = pn
  } = t, n = Ofe[r][e];
  if (r === r0 && !e)
    return "fad";
  const o = DN[r][e] || DN[r][n], a = e in fa.styles ? e : null;
  return o || a || null;
}
function Kfe(e) {
  let t = [], r = null;
  return e.forEach((n) => {
    const o = Gfe(Ve.cssPrefix, n);
    o ? r = o : n && t.push(n);
  }), {
    iconName: r,
    rest: t
  };
}
function UN(e) {
  return e.sort().filter((t, r, n) => n.indexOf(t) === r);
}
function a0(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  const {
    skipLookups: r = !1
  } = t;
  let n = null;
  const o = j5.concat(dfe), a = UN(e.filter((f) => o.includes(f))), i = UN(e.filter((f) => !j5.includes(f))), s = a.filter((f) => (n = f, !qV.includes(f))), [l = null] = s, c = Xfe(a), u = ge(ge({}, Kfe(i)), {}, {
    prefix: o0(l, {
      family: c
    })
  });
  return ge(ge(ge({}, u), ede({
    values: e,
    family: c,
    styles: ph,
    config: Ve,
    canonical: u,
    givenPrefix: n
  })), Jfe(r, n, u));
}
function Jfe(e, t, r) {
  let {
    prefix: n,
    iconName: o
  } = r;
  if (e || !n || !o)
    return {
      prefix: n,
      iconName: o
    };
  const a = t === "fa" ? mW(o) : {}, i = zc(n, o);
  return o = a.iconName || i || o, n = a.prefix || n, n === "far" && !ph.far && ph.fas && !Ve.autoFetchSvg && (n = "fas"), {
    prefix: n,
    iconName: o
  };
}
const Qfe = BV.filter((e) => e !== pn || e !== r0), Zfe = Object.keys(N5).filter((e) => e !== pn).map((e) => Object.keys(N5[e])).flat();
function ede(e) {
  const {
    values: t,
    family: r,
    canonical: n,
    givenPrefix: o = "",
    styles: a = {},
    config: i = {}
  } = e, s = r === r0, l = t.includes("fa-duotone") || t.includes("fad"), c = i.familyDefault === "duotone", u = n.prefix === "fad" || n.prefix === "fa-duotone";
  if (!s && (l || c || u) && (n.prefix = "fad"), (t.includes("fa-brands") || t.includes("fab")) && (n.prefix = "fab"), !n.prefix && Qfe.includes(r) && (Object.keys(a).find((f) => Zfe.includes(f)) || i.autoFetchSvg)) {
    const f = ofe.get(r).defaultShortPrefixId;
    n.prefix = f, n.iconName = zc(n.prefix, n.iconName) || n.iconName;
  }
  return (n.prefix === "fa" || o === "fa") && (n.prefix = Bl() || "fas"), n;
}
class tde {
  constructor() {
    this.definitions = {};
  }
  add() {
    for (var t = arguments.length, r = new Array(t), n = 0; n < t; n++)
      r[n] = arguments[n];
    const o = r.reduce(this._pullDefinitions, {});
    Object.keys(o).forEach((a) => {
      this.definitions[a] = ge(ge({}, this.definitions[a] || {}), o[a]), F5(a, o[a]);
      const i = US[pn][a];
      i && F5(i, o[a]), pW();
    });
  }
  reset() {
    this.definitions = {};
  }
  _pullDefinitions(t, r) {
    const n = r.prefix && r.iconName && r.icon ? {
      0: r
    } : r;
    return Object.keys(n).map((o) => {
      const {
        prefix: a,
        iconName: i,
        icon: s
      } = n[o], l = s[2];
      t[a] || (t[a] = {}), l.length > 0 && l.forEach((c) => {
        typeof c == "string" && (t[a][c] = s);
      }), t[a][i] = s;
    }), t;
  }
}
let YN = [], nf = {};
const Tf = {}, rde = Object.keys(Tf);
function nde(e, t) {
  let {
    mixoutsTo: r
  } = t;
  return YN = e, nf = {}, Object.keys(Tf).forEach((n) => {
    rde.indexOf(n) === -1 && delete Tf[n];
  }), YN.forEach((n) => {
    const o = n.mixout ? n.mixout() : {};
    if (Object.keys(o).forEach((a) => {
      typeof o[a] == "function" && (r[a] = o[a]), typeof o[a] == "object" && Object.keys(o[a]).forEach((i) => {
        r[a] || (r[a] = {}), r[a][i] = o[a][i];
      });
    }), n.hooks) {
      const a = n.hooks();
      Object.keys(a).forEach((i) => {
        nf[i] || (nf[i] = []), nf[i].push(a[i]);
      });
    }
    n.provides && n.provides(Tf);
  }), r;
}
function D5(e, t) {
  for (var r = arguments.length, n = new Array(r > 2 ? r - 2 : 0), o = 2; o < r; o++)
    n[o - 2] = arguments[o];
  return (nf[e] || []).forEach((a) => {
    t = a.apply(null, [t, ...n]);
  }), t;
}
function uu(e) {
  for (var t = arguments.length, r = new Array(t > 1 ? t - 1 : 0), n = 1; n < t; n++)
    r[n - 1] = arguments[n];
  (nf[e] || []).forEach((o) => {
    o.apply(null, r);
  });
}
function Xl() {
  const e = arguments[0], t = Array.prototype.slice.call(arguments, 1);
  return Tf[e] ? Tf[e].apply(null, t) : void 0;
}
function L5(e) {
  e.prefix === "fa" && (e.prefix = "fas");
  let {
    iconName: t
  } = e;
  const r = e.prefix || Bl();
  if (t)
    return t = zc(r, t) || t, VN(hW.definitions, r, t) || VN(fa.styles, r, t);
}
const hW = new tde(), ode = () => {
  Ve.autoReplaceSvg = !1, Ve.observeMutations = !1, uu("noAuto");
}, ade = {
  i2svg: function() {
    let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    return Di ? (uu("beforeI2svg", e), Xl("pseudoElements2svg", e), Xl("i2svg", e)) : Promise.reject(new Error("Operation requires a DOM of some kind."));
  },
  watch: function() {
    let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    const {
      autoReplaceSvgRoot: t
    } = e;
    Ve.autoReplaceSvg === !1 && (Ve.autoReplaceSvg = !0), Ve.observeMutations = !0, Lfe(() => {
      sde({
        autoReplaceSvgRoot: t
      }), uu("watch", e);
    });
  }
}, ide = {
  icon: (e) => {
    if (e === null)
      return null;
    if (typeof e == "object" && e.prefix && e.iconName)
      return {
        prefix: e.prefix,
        iconName: zc(e.prefix, e.iconName) || e.iconName
      };
    if (Array.isArray(e) && e.length === 2) {
      const t = e[1].indexOf("fa-") === 0 ? e[1].slice(3) : e[1], r = o0(e[0]);
      return {
        prefix: r,
        iconName: zc(r, t) || t
      };
    }
    if (typeof e == "string" && (e.indexOf("".concat(Ve.cssPrefix, "-")) > -1 || e.match(Efe))) {
      const t = a0(e.split(" "), {
        skipLookups: !0
      });
      return {
        prefix: t.prefix || Bl(),
        iconName: zc(t.prefix, t.iconName) || t.iconName
      };
    }
    if (typeof e == "string") {
      const t = Bl();
      return {
        prefix: t,
        iconName: zc(t, e) || e
      };
    }
  }
}, Jn = {
  noAuto: ode,
  config: Ve,
  dom: ade,
  parse: ide,
  library: hW,
  findIconDefinition: L5,
  toHtml: Zh
}, sde = function() {
  let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  const {
    autoReplaceSvgRoot: t = Fr
  } = e;
  (Object.keys(fa.styles).length > 0 || Ve.autoFetchSvg) && Di && Ve.autoReplaceSvg && Jn.dom.i2svg({
    node: t
  });
};
function i0(e, t) {
  return Object.defineProperty(e, "abstract", {
    get: t
  }), Object.defineProperty(e, "html", {
    get: function() {
      return e.abstract.map((r) => Zh(r));
    }
  }), Object.defineProperty(e, "node", {
    get: function() {
      if (!Di) return;
      const r = Fr.createElement("div");
      return r.innerHTML = e.html, r.children;
    }
  }), e;
}
function lde(e) {
  let {
    children: t,
    main: r,
    mask: n,
    attributes: o,
    styles: a,
    transform: i
  } = e;
  if (HS(i) && r.found && !n.found) {
    const {
      width: s,
      height: l
    } = r, c = {
      x: s / l / 2,
      y: 0.5
    };
    o.style = n0(ge(ge({}, a), {}, {
      "transform-origin": "".concat(c.x + i.x / 16, "em ").concat(c.y + i.y / 16, "em")
    }));
  }
  return [{
    tag: "svg",
    attributes: o,
    children: t
  }];
}
function cde(e) {
  let {
    prefix: t,
    iconName: r,
    children: n,
    attributes: o,
    symbol: a
  } = e;
  const i = a === !0 ? "".concat(t, "-").concat(Ve.cssPrefix, "-").concat(r) : a;
  return [{
    tag: "svg",
    attributes: {
      style: "display: none;"
    },
    children: [{
      tag: "symbol",
      attributes: ge(ge({}, o), {}, {
        id: i
      }),
      children: n
    }]
  }];
}
function BS(e) {
  const {
    icons: {
      main: t,
      mask: r
    },
    prefix: n,
    iconName: o,
    transform: a,
    symbol: i,
    title: s,
    maskId: l,
    titleId: c,
    extra: u,
    watchable: f = !1
  } = e, {
    width: p,
    height: v
  } = r.found ? r : t, x = cfe.includes(n), b = [Ve.replacementClass, o ? "".concat(Ve.cssPrefix, "-").concat(o) : ""].filter((h) => u.classes.indexOf(h) === -1).filter((h) => h !== "" || !!h).concat(u.classes).join(" ");
  let m = {
    children: [],
    attributes: ge(ge({}, u.attributes), {}, {
      "data-prefix": n,
      "data-icon": o,
      class: b,
      role: u.attributes.role || "img",
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 ".concat(p, " ").concat(v)
    })
  };
  const w = x && !~u.classes.indexOf("fa-fw") ? {
    width: "".concat(p / v * 16 * 0.0625, "em")
  } : {};
  f && (m.attributes[cu] = ""), s && (m.children.push({
    tag: "title",
    attributes: {
      id: m.attributes["aria-labelledby"] || "title-".concat(c || dh())
    },
    children: [s]
  }), delete m.attributes.title);
  const $ = ge(ge({}, m), {}, {
    prefix: n,
    iconName: o,
    main: t,
    mask: r,
    maskId: l,
    transform: a,
    symbol: i,
    styles: ge(ge({}, w), u.styles)
  }), {
    children: E,
    attributes: S
  } = r.found && t.found ? Xl("generateAbstractMask", $) || {
    children: [],
    attributes: {}
  } : Xl("generateAbstractIcon", $) || {
    children: [],
    attributes: {}
  };
  return $.children = E, $.attributes = S, i ? cde($) : lde($);
}
function HN(e) {
  const {
    content: t,
    width: r,
    height: n,
    transform: o,
    title: a,
    extra: i,
    watchable: s = !1
  } = e, l = ge(ge(ge({}, i.attributes), a ? {
    title: a
  } : {}), {}, {
    class: i.classes.join(" ")
  });
  s && (l[cu] = "");
  const c = ge({}, i.styles);
  HS(o) && (c.transform = zfe({
    transform: o,
    startCentered: !0,
    width: r,
    height: n
  }), c["-webkit-transform"] = c.transform);
  const u = n0(c);
  u.length > 0 && (l.style = u);
  const f = [];
  return f.push({
    tag: "span",
    attributes: l,
    children: [t]
  }), a && f.push({
    tag: "span",
    attributes: {
      class: "sr-only"
    },
    children: [a]
  }), f;
}
function ude(e) {
  const {
    content: t,
    title: r,
    extra: n
  } = e, o = ge(ge(ge({}, n.attributes), r ? {
    title: r
  } : {}), {}, {
    class: n.classes.join(" ")
  }), a = n0(n.styles);
  a.length > 0 && (o.style = a);
  const i = [];
  return i.push({
    tag: "span",
    attributes: o,
    children: [t]
  }), r && i.push({
    tag: "span",
    attributes: {
      class: "sr-only"
    },
    children: [r]
  }), i;
}
const {
  styles: Mw
} = fa;
function V5(e) {
  const t = e[0], r = e[1], [n] = e.slice(4);
  let o = null;
  return Array.isArray(n) ? o = {
    tag: "g",
    attributes: {
      class: "".concat(Ve.cssPrefix, "-").concat(jw.GROUP)
    },
    children: [{
      tag: "path",
      attributes: {
        class: "".concat(Ve.cssPrefix, "-").concat(jw.SECONDARY),
        fill: "currentColor",
        d: n[0]
      }
    }, {
      tag: "path",
      attributes: {
        class: "".concat(Ve.cssPrefix, "-").concat(jw.PRIMARY),
        fill: "currentColor",
        d: n[1]
      }
    }]
  } : o = {
    tag: "path",
    attributes: {
      fill: "currentColor",
      d: n
    }
  }, {
    found: !0,
    width: t,
    height: r,
    icon: o
  };
}
const fde = {
  found: !1,
  width: 512,
  height: 512
};
function dde(e, t) {
  !QV && !Ve.showMissingIcons && e && console.error('Icon with name "'.concat(e, '" and prefix "').concat(t, '" is missing.'));
}
function W5(e, t) {
  let r = t;
  return t === "fa" && Ve.styleDefault !== null && (t = Bl()), new Promise((n, o) => {
    if (r === "fa") {
      const a = mW(e) || {};
      e = a.iconName || e, t = a.prefix || t;
    }
    if (e && t && Mw[t] && Mw[t][e]) {
      const a = Mw[t][e];
      return n(V5(a));
    }
    dde(e, t), n(ge(ge({}, fde), {}, {
      icon: Ve.showMissingIcons && e ? Xl("missingIconAbstract") || {} : {}
    }));
  });
}
const GN = () => {
}, U5 = Ve.measurePerformance && Hb && Hb.mark && Hb.measure ? Hb : {
  mark: GN,
  measure: GN
}, Qm = 'FA "6.7.2"', pde = (e) => (U5.mark("".concat(Qm, " ").concat(e, " begins")), () => bW(e)), bW = (e) => {
  U5.mark("".concat(Qm, " ").concat(e, " ends")), U5.measure("".concat(Qm, " ").concat(e), "".concat(Qm, " ").concat(e, " begins"), "".concat(Qm, " ").concat(e, " ends"));
};
var XS = {
  begin: pde,
  end: bW
};
const qy = () => {
};
function qN(e) {
  return typeof (e.getAttribute ? e.getAttribute(cu) : null) == "string";
}
function mde(e) {
  const t = e.getAttribute ? e.getAttribute(VS) : null, r = e.getAttribute ? e.getAttribute(WS) : null;
  return t && r;
}
function gde(e) {
  return e && e.classList && e.classList.contains && e.classList.contains(Ve.replacementClass);
}
function hde() {
  return Ve.autoReplaceSvg === !0 ? By.replace : By[Ve.autoReplaceSvg] || By.replace;
}
function bde(e) {
  return Fr.createElementNS("http://www.w3.org/2000/svg", e);
}
function yde(e) {
  return Fr.createElement(e);
}
function yW(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  const {
    ceFn: r = e.tag === "svg" ? bde : yde
  } = t;
  if (typeof e == "string")
    return Fr.createTextNode(e);
  const n = r(e.tag);
  return Object.keys(e.attributes || []).forEach(function(o) {
    n.setAttribute(o, e.attributes[o]);
  }), (e.children || []).forEach(function(o) {
    n.appendChild(yW(o, {
      ceFn: r
    }));
  }), n;
}
function vde(e) {
  let t = " ".concat(e.outerHTML, " ");
  return t = "".concat(t, "Font Awesome fontawesome.com "), t;
}
const By = {
  replace: function(e) {
    const t = e[0];
    if (t.parentNode)
      if (e[1].forEach((r) => {
        t.parentNode.insertBefore(yW(r), t);
      }), t.getAttribute(cu) === null && Ve.keepOriginalSource) {
        let r = Fr.createComment(vde(t));
        t.parentNode.replaceChild(r, t);
      } else
        t.remove();
  },
  nest: function(e) {
    const t = e[0], r = e[1];
    if (~YS(t).indexOf(Ve.replacementClass))
      return By.replace(e);
    const n = new RegExp("".concat(Ve.cssPrefix, "-.*"));
    if (delete r[0].attributes.id, r[0].attributes.class) {
      const a = r[0].attributes.class.split(" ").reduce((i, s) => (s === Ve.replacementClass || s.match(n) ? i.toSvg.push(s) : i.toNode.push(s), i), {
        toNode: [],
        toSvg: []
      });
      r[0].attributes.class = a.toSvg.join(" "), a.toNode.length === 0 ? t.removeAttribute("class") : t.setAttribute("class", a.toNode.join(" "));
    }
    const o = r.map((a) => Zh(a)).join(`
`);
    t.setAttribute(cu, ""), t.innerHTML = o;
  }
};
function BN(e) {
  e();
}
function vW(e, t) {
  const r = typeof t == "function" ? t : qy;
  if (e.length === 0)
    r();
  else {
    let n = BN;
    Ve.mutateApproach === kfe && (n = ql.requestAnimationFrame || BN), n(() => {
      const o = hde(), a = XS.begin("mutate");
      e.map(o), a(), r();
    });
  }
}
let KS = !1;
function xW() {
  KS = !0;
}
function Y5() {
  KS = !1;
}
let Vv = null;
function XN(e) {
  if (!MN || !Ve.observeMutations)
    return;
  const {
    treeCallback: t = qy,
    nodeCallback: r = qy,
    pseudoElementsCallback: n = qy,
    observeMutationsRoot: o = Fr
  } = e;
  Vv = new MN((a) => {
    if (KS) return;
    const i = Bl();
    Td(a).forEach((s) => {
      if (s.type === "childList" && s.addedNodes.length > 0 && !qN(s.addedNodes[0]) && (Ve.searchPseudoElements && n(s.target), t(s.target)), s.type === "attributes" && s.target.parentNode && Ve.searchPseudoElements && n(s.target.parentNode), s.type === "attributes" && qN(s.target) && ~Cfe.indexOf(s.attributeName))
        if (s.attributeName === "class" && mde(s.target)) {
          const {
            prefix: l,
            iconName: c
          } = a0(YS(s.target));
          s.target.setAttribute(VS, l || i), c && s.target.setAttribute(WS, c);
        } else gde(s.target) && r(s.target);
    });
  }), Di && Vv.observe(o, {
    childList: !0,
    attributes: !0,
    characterData: !0,
    subtree: !0
  });
}
function xde() {
  Vv && Vv.disconnect();
}
function wde(e) {
  const t = e.getAttribute("style");
  let r = [];
  return t && (r = t.split(";").reduce((n, o) => {
    const a = o.split(":"), i = a[0], s = a.slice(1);
    return i && s.length > 0 && (n[i] = s.join(":").trim()), n;
  }, {})), r;
}
function kde(e) {
  const t = e.getAttribute("data-prefix"), r = e.getAttribute("data-icon"), n = e.innerText !== void 0 ? e.innerText.trim() : "";
  let o = a0(YS(e));
  return o.prefix || (o.prefix = Bl()), t && r && (o.prefix = t, o.iconName = r), o.iconName && o.prefix || (o.prefix && n.length > 0 && (o.iconName = qfe(o.prefix, e.innerText) || qS(o.prefix, iW(e.innerText))), !o.iconName && Ve.autoFetchSvg && e.firstChild && e.firstChild.nodeType === Node.TEXT_NODE && (o.iconName = e.firstChild.data)), o;
}
function $de(e) {
  const t = Td(e.attributes).reduce((o, a) => (o.name !== "class" && o.name !== "style" && (o[a.name] = a.value), o), {}), r = e.getAttribute("title"), n = e.getAttribute("data-fa-title-id");
  return Ve.autoA11y && (r ? t["aria-labelledby"] = "".concat(Ve.replacementClass, "-title-").concat(n || dh()) : (t["aria-hidden"] = "true", t.focusable = "false")), t;
}
function Ode() {
  return {
    iconName: null,
    title: null,
    titleId: null,
    prefix: null,
    transform: ua,
    symbol: !1,
    mask: {
      iconName: null,
      prefix: null,
      rest: []
    },
    maskId: null,
    extra: {
      classes: [],
      styles: {},
      attributes: {}
    }
  };
}
function KN(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {
    styleParser: !0
  };
  const {
    iconName: r,
    prefix: n,
    rest: o
  } = kde(e), a = $de(e), i = D5("parseNodeAttributes", {}, e);
  let s = t.styleParser ? wde(e) : [];
  return ge({
    iconName: r,
    title: e.getAttribute("title"),
    titleId: e.getAttribute("data-fa-title-id"),
    prefix: n,
    transform: ua,
    mask: {
      iconName: null,
      prefix: null,
      rest: []
    },
    maskId: null,
    symbol: !1,
    extra: {
      classes: o,
      styles: s,
      attributes: a
    }
  }, i);
}
const {
  styles: Ede
} = fa;
function wW(e) {
  const t = Ve.autoReplaceSvg === "nest" ? KN(e, {
    styleParser: !1
  }) : KN(e);
  return ~t.extra.classes.indexOf(eW) ? Xl("generateLayersText", e, t) : Xl("generateSvgReplacementMutation", e, t);
}
function Sde() {
  return [...ife, ...j5];
}
function JN(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
  if (!Di) return Promise.resolve();
  const r = Fr.documentElement.classList, n = (u) => r.add("".concat(FN, "-").concat(u)), o = (u) => r.remove("".concat(FN, "-").concat(u)), a = Ve.autoFetchSvg ? Sde() : qV.concat(Object.keys(Ede));
  a.includes("fa") || a.push("fa");
  const i = [".".concat(eW, ":not([").concat(cu, "])")].concat(a.map((u) => ".".concat(u, ":not([").concat(cu, "])"))).join(", ");
  if (i.length === 0)
    return Promise.resolve();
  let s = [];
  try {
    s = Td(e.querySelectorAll(i));
  } catch {
  }
  if (s.length > 0)
    n("pending"), o("complete");
  else
    return Promise.resolve();
  const l = XS.begin("onTree"), c = s.reduce((u, f) => {
    try {
      const p = wW(f);
      p && u.push(p);
    } catch (p) {
      QV || p.name === "MissingIcon" && console.error(p);
    }
    return u;
  }, []);
  return new Promise((u, f) => {
    Promise.all(c).then((p) => {
      vW(p, () => {
        n("active"), n("complete"), o("pending"), typeof t == "function" && t(), l(), u();
      });
    }).catch((p) => {
      l(), f(p);
    });
  });
}
function Pde(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
  wW(e).then((r) => {
    r && vW([r], t);
  });
}
function Cde(e) {
  return function(t) {
    let r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    const n = (t || {}).icon ? t : L5(t || {});
    let {
      mask: o
    } = r;
    return o && (o = (o || {}).icon ? o : L5(o || {})), e(n, ge(ge({}, r), {}, {
      mask: o
    }));
  };
}
const Ade = function(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  const {
    transform: r = ua,
    symbol: n = !1,
    mask: o = null,
    maskId: a = null,
    title: i = null,
    titleId: s = null,
    classes: l = [],
    attributes: c = {},
    styles: u = {}
  } = t;
  if (!e) return;
  const {
    prefix: f,
    iconName: p,
    icon: v
  } = e;
  return i0(ge({
    type: "icon"
  }, e), () => (uu("beforeDOMElementCreation", {
    iconDefinition: e,
    params: t
  }), Ve.autoA11y && (i ? c["aria-labelledby"] = "".concat(Ve.replacementClass, "-title-").concat(s || dh()) : (c["aria-hidden"] = "true", c.focusable = "false")), BS({
    icons: {
      main: V5(v),
      mask: o ? V5(o.icon) : {
        found: !1,
        width: null,
        height: null,
        icon: {}
      }
    },
    prefix: f,
    iconName: p,
    transform: ge(ge({}, ua), r),
    symbol: n,
    title: i,
    maskId: a,
    titleId: s,
    extra: {
      attributes: c,
      styles: u,
      classes: l
    }
  })));
};
var _de = {
  mixout() {
    return {
      icon: Cde(Ade)
    };
  },
  hooks() {
    return {
      mutationObserverCallbacks(e) {
        return e.treeCallback = JN, e.nodeCallback = Pde, e;
      }
    };
  },
  provides(e) {
    e.i2svg = function(t) {
      const {
        node: r = Fr,
        callback: n = () => {
        }
      } = t;
      return JN(r, n);
    }, e.generateSvgReplacementMutation = function(t, r) {
      const {
        iconName: n,
        title: o,
        titleId: a,
        prefix: i,
        transform: s,
        symbol: l,
        mask: c,
        maskId: u,
        extra: f
      } = r;
      return new Promise((p, v) => {
        Promise.all([W5(n, i), c.iconName ? W5(c.iconName, c.prefix) : Promise.resolve({
          found: !1,
          width: 512,
          height: 512,
          icon: {}
        })]).then((x) => {
          let [b, m] = x;
          p([t, BS({
            icons: {
              main: b,
              mask: m
            },
            prefix: i,
            iconName: n,
            transform: s,
            symbol: l,
            maskId: u,
            title: o,
            titleId: a,
            extra: f,
            watchable: !0
          })]);
        }).catch(v);
      });
    }, e.generateAbstractIcon = function(t) {
      let {
        children: r,
        attributes: n,
        main: o,
        transform: a,
        styles: i
      } = t;
      const s = n0(i);
      s.length > 0 && (n.style = s);
      let l;
      return HS(a) && (l = Xl("generateAbstractTransformGrouping", {
        main: o,
        transform: a,
        containerWidth: o.width,
        iconWidth: o.width
      })), r.push(l || o.icon), {
        children: r,
        attributes: n
      };
    };
  }
}, Nde = {
  mixout() {
    return {
      layer(e) {
        let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        const {
          classes: r = []
        } = t;
        return i0({
          type: "layer"
        }, () => {
          uu("beforeDOMElementCreation", {
            assembler: e,
            params: t
          });
          let n = [];
          return e((o) => {
            Array.isArray(o) ? o.map((a) => {
              n = n.concat(a.abstract);
            }) : n = n.concat(o.abstract);
          }), [{
            tag: "span",
            attributes: {
              class: ["".concat(Ve.cssPrefix, "-layers"), ...r].join(" ")
            },
            children: n
          }];
        });
      }
    };
  }
}, jde = {
  mixout() {
    return {
      counter(e) {
        let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        const {
          title: r = null,
          classes: n = [],
          attributes: o = {},
          styles: a = {}
        } = t;
        return i0({
          type: "counter",
          content: e
        }, () => (uu("beforeDOMElementCreation", {
          content: e,
          params: t
        }), ude({
          content: e.toString(),
          title: r,
          extra: {
            attributes: o,
            styles: a,
            classes: ["".concat(Ve.cssPrefix, "-layers-counter"), ...n]
          }
        })));
      }
    };
  }
}, Ide = {
  mixout() {
    return {
      text(e) {
        let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        const {
          transform: r = ua,
          title: n = null,
          classes: o = [],
          attributes: a = {},
          styles: i = {}
        } = t;
        return i0({
          type: "text",
          content: e
        }, () => (uu("beforeDOMElementCreation", {
          content: e,
          params: t
        }), HN({
          content: e,
          transform: ge(ge({}, ua), r),
          title: n,
          extra: {
            attributes: a,
            styles: i,
            classes: ["".concat(Ve.cssPrefix, "-layers-text"), ...o]
          }
        })));
      }
    };
  },
  provides(e) {
    e.generateLayersText = function(t, r) {
      const {
        title: n,
        transform: o,
        extra: a
      } = r;
      let i = null, s = null;
      if (HV) {
        const l = parseInt(getComputedStyle(t).fontSize, 10), c = t.getBoundingClientRect();
        i = c.width / l, s = c.height / l;
      }
      return Ve.autoA11y && !n && (a.attributes["aria-hidden"] = "true"), Promise.resolve([t, HN({
        content: t.innerHTML,
        width: i,
        height: s,
        transform: o,
        title: n,
        extra: a,
        watchable: !0
      })]);
    };
  }
};
const Tde = new RegExp('"', "ug"), QN = [1105920, 1112319], ZN = ge(ge(ge(ge({}, {
  FontAwesome: {
    normal: "fas",
    400: "fas"
  }
}), nfe), xfe), pfe), H5 = Object.keys(ZN).reduce((e, t) => (e[t.toLowerCase()] = ZN[t], e), {}), Mde = Object.keys(H5).reduce((e, t) => {
  const r = H5[t];
  return e[t] = r[900] || [...Object.entries(r)][0][1], e;
}, {});
function Rde(e) {
  const t = e.replace(Tde, ""), r = Wfe(t, 0), n = r >= QN[0] && r <= QN[1], o = t.length === 2 ? t[0] === t[1] : !1;
  return {
    value: iW(o ? t[0] : t),
    isSecondary: n || o
  };
}
function zde(e, t) {
  const r = e.replace(/^['"]|['"]$/g, "").toLowerCase(), n = parseInt(t), o = isNaN(n) ? "normal" : n;
  return (H5[r] || {})[o] || Mde[r];
}
function ej(e, t) {
  const r = "".concat(wfe).concat(t.replace(":", "-"));
  return new Promise((n, o) => {
    if (e.getAttribute(r) !== null)
      return n();
    const a = Td(e.children).filter((f) => f.getAttribute(T5) === t)[0], i = ql.getComputedStyle(e, t), s = i.getPropertyValue("font-family"), l = s.match(Sfe), c = i.getPropertyValue("font-weight"), u = i.getPropertyValue("content");
    if (a && !l)
      return e.removeChild(a), n();
    if (l && u !== "none" && u !== "") {
      const f = i.getPropertyValue("content");
      let p = zde(s, c);
      const {
        value: v,
        isSecondary: x
      } = Rde(f), b = l[0].startsWith("FontAwesome");
      let m = qS(p, v), w = m;
      if (b) {
        const $ = Bfe(v);
        $.iconName && $.prefix && (m = $.iconName, p = $.prefix);
      }
      if (m && !x && (!a || a.getAttribute(VS) !== p || a.getAttribute(WS) !== w)) {
        e.setAttribute(r, w), a && e.removeChild(a);
        const $ = Ode(), {
          extra: E
        } = $;
        E.attributes[T5] = t, W5(m, p).then((S) => {
          const h = BS(ge(ge({}, $), {}, {
            icons: {
              main: S,
              mask: gW()
            },
            prefix: p,
            iconName: w,
            extra: E,
            watchable: !0
          })), U = Fr.createElementNS("http://www.w3.org/2000/svg", "svg");
          t === "::before" ? e.insertBefore(U, e.firstChild) : e.appendChild(U), U.outerHTML = h.map((G) => Zh(G)).join(`
`), e.removeAttribute(r), n();
        }).catch(o);
      } else
        n();
    } else
      n();
  });
}
function Fde(e) {
  return Promise.all([ej(e, "::before"), ej(e, "::after")]);
}
function Dde(e) {
  return e.parentNode !== document.head && !~$fe.indexOf(e.tagName.toUpperCase()) && !e.getAttribute(T5) && (!e.parentNode || e.parentNode.tagName !== "svg");
}
function tj(e) {
  if (Di)
    return new Promise((t, r) => {
      const n = Td(e.querySelectorAll("*")).filter(Dde).map(Fde), o = XS.begin("searchPseudoElements");
      xW(), Promise.all(n).then(() => {
        o(), Y5(), t();
      }).catch(() => {
        o(), Y5(), r();
      });
    });
}
var Lde = {
  hooks() {
    return {
      mutationObserverCallbacks(e) {
        return e.pseudoElementsCallback = tj, e;
      }
    };
  },
  provides(e) {
    e.pseudoElements2svg = function(t) {
      const {
        node: r = Fr
      } = t;
      Ve.searchPseudoElements && tj(r);
    };
  }
};
let rj = !1;
var Vde = {
  mixout() {
    return {
      dom: {
        unwatch() {
          xW(), rj = !0;
        }
      }
    };
  },
  hooks() {
    return {
      bootstrap() {
        XN(D5("mutationObserverCallbacks", {}));
      },
      noAuto() {
        xde();
      },
      watch(e) {
        const {
          observeMutationsRoot: t
        } = e;
        rj ? Y5() : XN(D5("mutationObserverCallbacks", {
          observeMutationsRoot: t
        }));
      }
    };
  }
};
const nj = (e) => {
  let t = {
    size: 16,
    x: 0,
    y: 0,
    flipX: !1,
    flipY: !1,
    rotate: 0
  };
  return e.toLowerCase().split(" ").reduce((r, n) => {
    const o = n.toLowerCase().split("-"), a = o[0];
    let i = o.slice(1).join("-");
    if (a && i === "h")
      return r.flipX = !0, r;
    if (a && i === "v")
      return r.flipY = !0, r;
    if (i = parseFloat(i), isNaN(i))
      return r;
    switch (a) {
      case "grow":
        r.size = r.size + i;
        break;
      case "shrink":
        r.size = r.size - i;
        break;
      case "left":
        r.x = r.x - i;
        break;
      case "right":
        r.x = r.x + i;
        break;
      case "up":
        r.y = r.y - i;
        break;
      case "down":
        r.y = r.y + i;
        break;
      case "rotate":
        r.rotate = r.rotate + i;
        break;
    }
    return r;
  }, t);
};
var Wde = {
  mixout() {
    return {
      parse: {
        transform: (e) => nj(e)
      }
    };
  },
  hooks() {
    return {
      parseNodeAttributes(e, t) {
        const r = t.getAttribute("data-fa-transform");
        return r && (e.transform = nj(r)), e;
      }
    };
  },
  provides(e) {
    e.generateAbstractTransformGrouping = function(t) {
      let {
        main: r,
        transform: n,
        containerWidth: o,
        iconWidth: a
      } = t;
      const i = {
        transform: "translate(".concat(o / 2, " 256)")
      }, s = "translate(".concat(n.x * 32, ", ").concat(n.y * 32, ") "), l = "scale(".concat(n.size / 16 * (n.flipX ? -1 : 1), ", ").concat(n.size / 16 * (n.flipY ? -1 : 1), ") "), c = "rotate(".concat(n.rotate, " 0 0)"), u = {
        transform: "".concat(s, " ").concat(l, " ").concat(c)
      }, f = {
        transform: "translate(".concat(a / 2 * -1, " -256)")
      }, p = {
        outer: i,
        inner: u,
        path: f
      };
      return {
        tag: "g",
        attributes: ge({}, p.outer),
        children: [{
          tag: "g",
          attributes: ge({}, p.inner),
          children: [{
            tag: r.icon.tag,
            children: r.icon.children,
            attributes: ge(ge({}, r.icon.attributes), p.path)
          }]
        }]
      };
    };
  }
};
const Rw = {
  x: 0,
  y: 0,
  width: "100%",
  height: "100%"
};
function oj(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0;
  return e.attributes && (e.attributes.fill || t) && (e.attributes.fill = "black"), e;
}
function Ude(e) {
  return e.tag === "g" ? e.children : [e];
}
var Yde = {
  hooks() {
    return {
      parseNodeAttributes(e, t) {
        const r = t.getAttribute("data-fa-mask"), n = r ? a0(r.split(" ").map((o) => o.trim())) : gW();
        return n.prefix || (n.prefix = Bl()), e.mask = n, e.maskId = t.getAttribute("data-fa-mask-id"), e;
      }
    };
  },
  provides(e) {
    e.generateAbstractMask = function(t) {
      let {
        children: r,
        attributes: n,
        main: o,
        mask: a,
        maskId: i,
        transform: s
      } = t;
      const {
        width: l,
        icon: c
      } = o, {
        width: u,
        icon: f
      } = a, p = Rfe({
        transform: s,
        containerWidth: u,
        iconWidth: l
      }), v = {
        tag: "rect",
        attributes: ge(ge({}, Rw), {}, {
          fill: "white"
        })
      }, x = c.children ? {
        children: c.children.map(oj)
      } : {}, b = {
        tag: "g",
        attributes: ge({}, p.inner),
        children: [oj(ge({
          tag: c.tag,
          attributes: ge(ge({}, c.attributes), p.path)
        }, x))]
      }, m = {
        tag: "g",
        attributes: ge({}, p.outer),
        children: [b]
      }, w = "mask-".concat(i || dh()), $ = "clip-".concat(i || dh()), E = {
        tag: "mask",
        attributes: ge(ge({}, Rw), {}, {
          id: w,
          maskUnits: "userSpaceOnUse",
          maskContentUnits: "userSpaceOnUse"
        }),
        children: [v, m]
      }, S = {
        tag: "defs",
        children: [{
          tag: "clipPath",
          attributes: {
            id: $
          },
          children: Ude(f)
        }, E]
      };
      return r.push(S, {
        tag: "rect",
        attributes: ge({
          fill: "currentColor",
          "clip-path": "url(#".concat($, ")"),
          mask: "url(#".concat(w, ")")
        }, Rw)
      }), {
        children: r,
        attributes: n
      };
    };
  }
}, Hde = {
  provides(e) {
    let t = !1;
    ql.matchMedia && (t = ql.matchMedia("(prefers-reduced-motion: reduce)").matches), e.missingIconAbstract = function() {
      const r = [], n = {
        fill: "currentColor"
      }, o = {
        attributeType: "XML",
        repeatCount: "indefinite",
        dur: "2s"
      };
      r.push({
        tag: "path",
        attributes: ge(ge({}, n), {}, {
          d: "M156.5,447.7l-12.6,29.5c-18.7-9.5-35.9-21.2-51.5-34.9l22.7-22.7C127.6,430.5,141.5,440,156.5,447.7z M40.6,272H8.5 c1.4,21.2,5.4,41.7,11.7,61.1L50,321.2C45.1,305.5,41.8,289,40.6,272z M40.6,240c1.4-18.8,5.2-37,11.1-54.1l-29.5-12.6 C14.7,194.3,10,216.7,8.5,240H40.6z M64.3,156.5c7.8-14.9,17.2-28.8,28.1-41.5L69.7,92.3c-13.7,15.6-25.5,32.8-34.9,51.5 L64.3,156.5z M397,419.6c-13.9,12-29.4,22.3-46.1,30.4l11.9,29.8c20.7-9.9,39.8-22.6,56.9-37.6L397,419.6z M115,92.4 c13.9-12,29.4-22.3,46.1-30.4l-11.9-29.8c-20.7,9.9-39.8,22.6-56.8,37.6L115,92.4z M447.7,355.5c-7.8,14.9-17.2,28.8-28.1,41.5 l22.7,22.7c13.7-15.6,25.5-32.9,34.9-51.5L447.7,355.5z M471.4,272c-1.4,18.8-5.2,37-11.1,54.1l29.5,12.6 c7.5-21.1,12.2-43.5,13.6-66.8H471.4z M321.2,462c-15.7,5-32.2,8.2-49.2,9.4v32.1c21.2-1.4,41.7-5.4,61.1-11.7L321.2,462z M240,471.4c-18.8-1.4-37-5.2-54.1-11.1l-12.6,29.5c21.1,7.5,43.5,12.2,66.8,13.6V471.4z M462,190.8c5,15.7,8.2,32.2,9.4,49.2h32.1 c-1.4-21.2-5.4-41.7-11.7-61.1L462,190.8z M92.4,397c-12-13.9-22.3-29.4-30.4-46.1l-29.8,11.9c9.9,20.7,22.6,39.8,37.6,56.9 L92.4,397z M272,40.6c18.8,1.4,36.9,5.2,54.1,11.1l12.6-29.5C317.7,14.7,295.3,10,272,8.5V40.6z M190.8,50 c15.7-5,32.2-8.2,49.2-9.4V8.5c-21.2,1.4-41.7,5.4-61.1,11.7L190.8,50z M442.3,92.3L419.6,115c12,13.9,22.3,29.4,30.5,46.1 l29.8-11.9C470,128.5,457.3,109.4,442.3,92.3z M397,92.4l22.7-22.7c-15.6-13.7-32.8-25.5-51.5-34.9l-12.6,29.5 C370.4,72.1,384.4,81.5,397,92.4z"
        })
      });
      const a = ge(ge({}, o), {}, {
        attributeName: "opacity"
      }), i = {
        tag: "circle",
        attributes: ge(ge({}, n), {}, {
          cx: "256",
          cy: "364",
          r: "28"
        }),
        children: []
      };
      return t || i.children.push({
        tag: "animate",
        attributes: ge(ge({}, o), {}, {
          attributeName: "r",
          values: "28;14;28;28;14;28;"
        })
      }, {
        tag: "animate",
        attributes: ge(ge({}, a), {}, {
          values: "1;0;1;1;0;1;"
        })
      }), r.push(i), r.push({
        tag: "path",
        attributes: ge(ge({}, n), {}, {
          opacity: "1",
          d: "M263.7,312h-16c-6.6,0-12-5.4-12-12c0-71,77.4-63.9,77.4-107.8c0-20-17.8-40.2-57.4-40.2c-29.1,0-44.3,9.6-59.2,28.7 c-3.9,5-11.1,6-16.2,2.4l-13.1-9.2c-5.6-3.9-6.9-11.8-2.6-17.2c21.2-27.2,46.4-44.7,91.2-44.7c52.3,0,97.4,29.8,97.4,80.2 c0,67.6-77.4,63.5-77.4,107.8C275.7,306.6,270.3,312,263.7,312z"
        }),
        children: t ? [] : [{
          tag: "animate",
          attributes: ge(ge({}, a), {}, {
            values: "1;0;0;0;0;1;"
          })
        }]
      }), t || r.push({
        tag: "path",
        attributes: ge(ge({}, n), {}, {
          opacity: "0",
          d: "M232.5,134.5l7,168c0.3,6.4,5.6,11.5,12,11.5h9c6.4,0,11.7-5.1,12-11.5l7-168c0.3-6.8-5.2-12.5-12-12.5h-23 C237.7,122,232.2,127.7,232.5,134.5z"
        }),
        children: [{
          tag: "animate",
          attributes: ge(ge({}, a), {}, {
            values: "0;0;1;1;0;0;"
          })
        }]
      }), {
        tag: "g",
        attributes: {
          class: "missing"
        },
        children: r
      };
    };
  }
}, Gde = {
  hooks() {
    return {
      parseNodeAttributes(e, t) {
        const r = t.getAttribute("data-fa-symbol"), n = r === null ? !1 : r === "" ? !0 : r;
        return e.symbol = n, e;
      }
    };
  }
}, qde = [Dfe, _de, Nde, jde, Ide, Lde, Vde, Wde, Yde, Hde, Gde];
nde(qde, {
  mixoutsTo: Jn
});
Jn.noAuto;
Jn.config;
Jn.library;
Jn.dom;
const G5 = Jn.parse;
Jn.findIconDefinition;
Jn.toHtml;
const Bde = Jn.icon;
Jn.layer;
Jn.text;
Jn.counter;
function Xde(e) {
  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e;
}
var qb = { exports: {} }, zw = { exports: {} }, Bt = {};
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var aj;
function Kde() {
  if (aj) return Bt;
  aj = 1;
  var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, r = e ? Symbol.for("react.portal") : 60106, n = e ? Symbol.for("react.fragment") : 60107, o = e ? Symbol.for("react.strict_mode") : 60108, a = e ? Symbol.for("react.profiler") : 60114, i = e ? Symbol.for("react.provider") : 60109, s = e ? Symbol.for("react.context") : 60110, l = e ? Symbol.for("react.async_mode") : 60111, c = e ? Symbol.for("react.concurrent_mode") : 60111, u = e ? Symbol.for("react.forward_ref") : 60112, f = e ? Symbol.for("react.suspense") : 60113, p = e ? Symbol.for("react.suspense_list") : 60120, v = e ? Symbol.for("react.memo") : 60115, x = e ? Symbol.for("react.lazy") : 60116, b = e ? Symbol.for("react.block") : 60121, m = e ? Symbol.for("react.fundamental") : 60117, w = e ? Symbol.for("react.responder") : 60118, $ = e ? Symbol.for("react.scope") : 60119;
  function E(h) {
    if (typeof h == "object" && h !== null) {
      var U = h.$$typeof;
      switch (U) {
        case t:
          switch (h = h.type, h) {
            case l:
            case c:
            case n:
            case a:
            case o:
            case f:
              return h;
            default:
              switch (h = h && h.$$typeof, h) {
                case s:
                case u:
                case x:
                case v:
                case i:
                  return h;
                default:
                  return U;
              }
          }
        case r:
          return U;
      }
    }
  }
  function S(h) {
    return E(h) === c;
  }
  return Bt.AsyncMode = l, Bt.ConcurrentMode = c, Bt.ContextConsumer = s, Bt.ContextProvider = i, Bt.Element = t, Bt.ForwardRef = u, Bt.Fragment = n, Bt.Lazy = x, Bt.Memo = v, Bt.Portal = r, Bt.Profiler = a, Bt.StrictMode = o, Bt.Suspense = f, Bt.isAsyncMode = function(h) {
    return S(h) || E(h) === l;
  }, Bt.isConcurrentMode = S, Bt.isContextConsumer = function(h) {
    return E(h) === s;
  }, Bt.isContextProvider = function(h) {
    return E(h) === i;
  }, Bt.isElement = function(h) {
    return typeof h == "object" && h !== null && h.$$typeof === t;
  }, Bt.isForwardRef = function(h) {
    return E(h) === u;
  }, Bt.isFragment = function(h) {
    return E(h) === n;
  }, Bt.isLazy = function(h) {
    return E(h) === x;
  }, Bt.isMemo = function(h) {
    return E(h) === v;
  }, Bt.isPortal = function(h) {
    return E(h) === r;
  }, Bt.isProfiler = function(h) {
    return E(h) === a;
  }, Bt.isStrictMode = function(h) {
    return E(h) === o;
  }, Bt.isSuspense = function(h) {
    return E(h) === f;
  }, Bt.isValidElementType = function(h) {
    return typeof h == "string" || typeof h == "function" || h === n || h === c || h === a || h === o || h === f || h === p || typeof h == "object" && h !== null && (h.$$typeof === x || h.$$typeof === v || h.$$typeof === i || h.$$typeof === s || h.$$typeof === u || h.$$typeof === m || h.$$typeof === w || h.$$typeof === $ || h.$$typeof === b);
  }, Bt.typeOf = E, Bt;
}
var lr = {};
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var ij;
function Jde() {
  return ij || (ij = 1, process.env.NODE_ENV !== "production" && function() {
    var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, r = e ? Symbol.for("react.portal") : 60106, n = e ? Symbol.for("react.fragment") : 60107, o = e ? Symbol.for("react.strict_mode") : 60108, a = e ? Symbol.for("react.profiler") : 60114, i = e ? Symbol.for("react.provider") : 60109, s = e ? Symbol.for("react.context") : 60110, l = e ? Symbol.for("react.async_mode") : 60111, c = e ? Symbol.for("react.concurrent_mode") : 60111, u = e ? Symbol.for("react.forward_ref") : 60112, f = e ? Symbol.for("react.suspense") : 60113, p = e ? Symbol.for("react.suspense_list") : 60120, v = e ? Symbol.for("react.memo") : 60115, x = e ? Symbol.for("react.lazy") : 60116, b = e ? Symbol.for("react.block") : 60121, m = e ? Symbol.for("react.fundamental") : 60117, w = e ? Symbol.for("react.responder") : 60118, $ = e ? Symbol.for("react.scope") : 60119;
    function E(k) {
      return typeof k == "string" || typeof k == "function" || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
      k === n || k === c || k === a || k === o || k === f || k === p || typeof k == "object" && k !== null && (k.$$typeof === x || k.$$typeof === v || k.$$typeof === i || k.$$typeof === s || k.$$typeof === u || k.$$typeof === m || k.$$typeof === w || k.$$typeof === $ || k.$$typeof === b);
    }
    function S(k) {
      if (typeof k == "object" && k !== null) {
        var oe = k.$$typeof;
        switch (oe) {
          case t:
            var Ce = k.type;
            switch (Ce) {
              case l:
              case c:
              case n:
              case a:
              case o:
              case f:
                return Ce;
              default:
                var Ze = Ce && Ce.$$typeof;
                switch (Ze) {
                  case s:
                  case u:
                  case x:
                  case v:
                  case i:
                    return Ze;
                  default:
                    return oe;
                }
            }
          case r:
            return oe;
        }
      }
    }
    var h = l, U = c, G = s, Q = i, Z = t, X = u, J = n, I = x, te = v, V = r, D = a, F = o, R = f, H = !1;
    function B(k) {
      return H || (H = !0, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.")), g(k) || S(k) === l;
    }
    function g(k) {
      return S(k) === c;
    }
    function d(k) {
      return S(k) === s;
    }
    function O(k) {
      return S(k) === i;
    }
    function C(k) {
      return typeof k == "object" && k !== null && k.$$typeof === t;
    }
    function A(k) {
      return S(k) === u;
    }
    function N(k) {
      return S(k) === n;
    }
    function j(k) {
      return S(k) === x;
    }
    function _(k) {
      return S(k) === v;
    }
    function T(k) {
      return S(k) === r;
    }
    function M(k) {
      return S(k) === a;
    }
    function z(k) {
      return S(k) === o;
    }
    function ee(k) {
      return S(k) === f;
    }
    lr.AsyncMode = h, lr.ConcurrentMode = U, lr.ContextConsumer = G, lr.ContextProvider = Q, lr.Element = Z, lr.ForwardRef = X, lr.Fragment = J, lr.Lazy = I, lr.Memo = te, lr.Portal = V, lr.Profiler = D, lr.StrictMode = F, lr.Suspense = R, lr.isAsyncMode = B, lr.isConcurrentMode = g, lr.isContextConsumer = d, lr.isContextProvider = O, lr.isElement = C, lr.isForwardRef = A, lr.isFragment = N, lr.isLazy = j, lr.isMemo = _, lr.isPortal = T, lr.isProfiler = M, lr.isStrictMode = z, lr.isSuspense = ee, lr.isValidElementType = E, lr.typeOf = S;
  }()), lr;
}
var sj;
function kW() {
  return sj || (sj = 1, process.env.NODE_ENV === "production" ? zw.exports = Kde() : zw.exports = Jde()), zw.exports;
}
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
var Fw, lj;
function Qde() {
  if (lj) return Fw;
  lj = 1;
  var e = Object.getOwnPropertySymbols, t = Object.prototype.hasOwnProperty, r = Object.prototype.propertyIsEnumerable;
  function n(a) {
    if (a == null)
      throw new TypeError("Object.assign cannot be called with null or undefined");
    return Object(a);
  }
  function o() {
    try {
      if (!Object.assign)
        return !1;
      var a = new String("abc");
      if (a[5] = "de", Object.getOwnPropertyNames(a)[0] === "5")
        return !1;
      for (var i = {}, s = 0; s < 10; s++)
        i["_" + String.fromCharCode(s)] = s;
      var l = Object.getOwnPropertyNames(i).map(function(u) {
        return i[u];
      });
      if (l.join("") !== "0123456789")
        return !1;
      var c = {};
      return "abcdefghijklmnopqrst".split("").forEach(function(u) {
        c[u] = u;
      }), Object.keys(Object.assign({}, c)).join("") === "abcdefghijklmnopqrst";
    } catch {
      return !1;
    }
  }
  return Fw = o() ? Object.assign : function(a, i) {
    for (var s, l = n(a), c, u = 1; u < arguments.length; u++) {
      s = Object(arguments[u]);
      for (var f in s)
        t.call(s, f) && (l[f] = s[f]);
      if (e) {
        c = e(s);
        for (var p = 0; p < c.length; p++)
          r.call(s, c[p]) && (l[c[p]] = s[c[p]]);
      }
    }
    return l;
  }, Fw;
}
var Dw, cj;
function JS() {
  if (cj) return Dw;
  cj = 1;
  var e = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
  return Dw = e, Dw;
}
var uj, fj;
function $W() {
  return fj || (fj = 1, uj = Function.call.bind(Object.prototype.hasOwnProperty)), uj;
}
var Lw, dj;
function Zde() {
  if (dj) return Lw;
  dj = 1;
  var e = function() {
  };
  if (process.env.NODE_ENV !== "production") {
    var t = /* @__PURE__ */ JS(), r = {}, n = /* @__PURE__ */ $W();
    e = function(a) {
      var i = "Warning: " + a;
      typeof console < "u" && console.error(i);
      try {
        throw new Error(i);
      } catch {
      }
    };
  }
  function o(a, i, s, l, c) {
    if (process.env.NODE_ENV !== "production") {
      for (var u in a)
        if (n(a, u)) {
          var f;
          try {
            if (typeof a[u] != "function") {
              var p = Error(
                (l || "React class") + ": " + s + " type `" + u + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof a[u] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`."
              );
              throw p.name = "Invariant Violation", p;
            }
            f = a[u](i, u, l, s, null, t);
          } catch (x) {
            f = x;
          }
          if (f && !(f instanceof Error) && e(
            (l || "React class") + ": type specification of " + s + " `" + u + "` is invalid; the type checker function must return `null` or an `Error` but returned a " + typeof f + ". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument)."
          ), f instanceof Error && !(f.message in r)) {
            r[f.message] = !0;
            var v = c ? c() : "";
            e(
              "Failed " + s + " type: " + f.message + (v ?? "")
            );
          }
        }
    }
  }
  return o.resetWarningCache = function() {
    process.env.NODE_ENV !== "production" && (r = {});
  }, Lw = o, Lw;
}
var Vw, pj;
function epe() {
  if (pj) return Vw;
  pj = 1;
  var e = kW(), t = Qde(), r = /* @__PURE__ */ JS(), n = /* @__PURE__ */ $W(), o = /* @__PURE__ */ Zde(), a = function() {
  };
  process.env.NODE_ENV !== "production" && (a = function(s) {
    var l = "Warning: " + s;
    typeof console < "u" && console.error(l);
    try {
      throw new Error(l);
    } catch {
    }
  });
  function i() {
    return null;
  }
  return Vw = function(s, l) {
    var c = typeof Symbol == "function" && Symbol.iterator, u = "@@iterator";
    function f(g) {
      var d = g && (c && g[c] || g[u]);
      if (typeof d == "function")
        return d;
    }
    var p = "<<anonymous>>", v = {
      array: w("array"),
      bigint: w("bigint"),
      bool: w("boolean"),
      func: w("function"),
      number: w("number"),
      object: w("object"),
      string: w("string"),
      symbol: w("symbol"),
      any: $(),
      arrayOf: E,
      element: S(),
      elementType: h(),
      instanceOf: U,
      node: X(),
      objectOf: Q,
      oneOf: G,
      oneOfType: Z,
      shape: I,
      exact: te
    };
    function x(g, d) {
      return g === d ? g !== 0 || 1 / g === 1 / d : g !== g && d !== d;
    }
    function b(g, d) {
      this.message = g, this.data = d && typeof d == "object" ? d : {}, this.stack = "";
    }
    b.prototype = Error.prototype;
    function m(g) {
      if (process.env.NODE_ENV !== "production")
        var d = {}, O = 0;
      function C(N, j, _, T, M, z, ee) {
        if (T = T || p, z = z || _, ee !== r) {
          if (l) {
            var k = new Error(
              "Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types"
            );
            throw k.name = "Invariant Violation", k;
          } else if (process.env.NODE_ENV !== "production" && typeof console < "u") {
            var oe = T + ":" + _;
            !d[oe] && // Avoid spamming the console because they are often not actionable except for lib authors
            O < 3 && (a(
              "You are manually calling a React.PropTypes validation function for the `" + z + "` prop on `" + T + "`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details."
            ), d[oe] = !0, O++);
          }
        }
        return j[_] == null ? N ? j[_] === null ? new b("The " + M + " `" + z + "` is marked as required " + ("in `" + T + "`, but its value is `null`.")) : new b("The " + M + " `" + z + "` is marked as required in " + ("`" + T + "`, but its value is `undefined`.")) : null : g(j, _, T, M, z);
      }
      var A = C.bind(null, !1);
      return A.isRequired = C.bind(null, !0), A;
    }
    function w(g) {
      function d(O, C, A, N, j, _) {
        var T = O[C], M = F(T);
        if (M !== g) {
          var z = R(T);
          return new b(
            "Invalid " + N + " `" + j + "` of type " + ("`" + z + "` supplied to `" + A + "`, expected ") + ("`" + g + "`."),
            { expectedType: g }
          );
        }
        return null;
      }
      return m(d);
    }
    function $() {
      return m(i);
    }
    function E(g) {
      function d(O, C, A, N, j) {
        if (typeof g != "function")
          return new b("Property `" + j + "` of component `" + A + "` has invalid PropType notation inside arrayOf.");
        var _ = O[C];
        if (!Array.isArray(_)) {
          var T = F(_);
          return new b("Invalid " + N + " `" + j + "` of type " + ("`" + T + "` supplied to `" + A + "`, expected an array."));
        }
        for (var M = 0; M < _.length; M++) {
          var z = g(_, M, A, N, j + "[" + M + "]", r);
          if (z instanceof Error)
            return z;
        }
        return null;
      }
      return m(d);
    }
    function S() {
      function g(d, O, C, A, N) {
        var j = d[O];
        if (!s(j)) {
          var _ = F(j);
          return new b("Invalid " + A + " `" + N + "` of type " + ("`" + _ + "` supplied to `" + C + "`, expected a single ReactElement."));
        }
        return null;
      }
      return m(g);
    }
    function h() {
      function g(d, O, C, A, N) {
        var j = d[O];
        if (!e.isValidElementType(j)) {
          var _ = F(j);
          return new b("Invalid " + A + " `" + N + "` of type " + ("`" + _ + "` supplied to `" + C + "`, expected a single ReactElement type."));
        }
        return null;
      }
      return m(g);
    }
    function U(g) {
      function d(O, C, A, N, j) {
        if (!(O[C] instanceof g)) {
          var _ = g.name || p, T = B(O[C]);
          return new b("Invalid " + N + " `" + j + "` of type " + ("`" + T + "` supplied to `" + A + "`, expected ") + ("instance of `" + _ + "`."));
        }
        return null;
      }
      return m(d);
    }
    function G(g) {
      if (!Array.isArray(g))
        return process.env.NODE_ENV !== "production" && (arguments.length > 1 ? a(
          "Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z])."
        ) : a("Invalid argument supplied to oneOf, expected an array.")), i;
      function d(O, C, A, N, j) {
        for (var _ = O[C], T = 0; T < g.length; T++)
          if (x(_, g[T]))
            return null;
        var M = JSON.stringify(g, function(z, ee) {
          var k = R(ee);
          return k === "symbol" ? String(ee) : ee;
        });
        return new b("Invalid " + N + " `" + j + "` of value `" + String(_) + "` " + ("supplied to `" + A + "`, expected one of " + M + "."));
      }
      return m(d);
    }
    function Q(g) {
      function d(O, C, A, N, j) {
        if (typeof g != "function")
          return new b("Property `" + j + "` of component `" + A + "` has invalid PropType notation inside objectOf.");
        var _ = O[C], T = F(_);
        if (T !== "object")
          return new b("Invalid " + N + " `" + j + "` of type " + ("`" + T + "` supplied to `" + A + "`, expected an object."));
        for (var M in _)
          if (n(_, M)) {
            var z = g(_, M, A, N, j + "." + M, r);
            if (z instanceof Error)
              return z;
          }
        return null;
      }
      return m(d);
    }
    function Z(g) {
      if (!Array.isArray(g))
        return process.env.NODE_ENV !== "production" && a("Invalid argument supplied to oneOfType, expected an instance of array."), i;
      for (var d = 0; d < g.length; d++) {
        var O = g[d];
        if (typeof O != "function")
          return a(
            "Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + H(O) + " at index " + d + "."
          ), i;
      }
      function C(A, N, j, _, T) {
        for (var M = [], z = 0; z < g.length; z++) {
          var ee = g[z], k = ee(A, N, j, _, T, r);
          if (k == null)
            return null;
          k.data && n(k.data, "expectedType") && M.push(k.data.expectedType);
        }
        var oe = M.length > 0 ? ", expected one of type [" + M.join(", ") + "]" : "";
        return new b("Invalid " + _ + " `" + T + "` supplied to " + ("`" + j + "`" + oe + "."));
      }
      return m(C);
    }
    function X() {
      function g(d, O, C, A, N) {
        return V(d[O]) ? null : new b("Invalid " + A + " `" + N + "` supplied to " + ("`" + C + "`, expected a ReactNode."));
      }
      return m(g);
    }
    function J(g, d, O, C, A) {
      return new b(
        (g || "React class") + ": " + d + " type `" + O + "." + C + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + A + "`."
      );
    }
    function I(g) {
      function d(O, C, A, N, j) {
        var _ = O[C], T = F(_);
        if (T !== "object")
          return new b("Invalid " + N + " `" + j + "` of type `" + T + "` " + ("supplied to `" + A + "`, expected `object`."));
        for (var M in g) {
          var z = g[M];
          if (typeof z != "function")
            return J(A, N, j, M, R(z));
          var ee = z(_, M, A, N, j + "." + M, r);
          if (ee)
            return ee;
        }
        return null;
      }
      return m(d);
    }
    function te(g) {
      function d(O, C, A, N, j) {
        var _ = O[C], T = F(_);
        if (T !== "object")
          return new b("Invalid " + N + " `" + j + "` of type `" + T + "` " + ("supplied to `" + A + "`, expected `object`."));
        var M = t({}, O[C], g);
        for (var z in M) {
          var ee = g[z];
          if (n(g, z) && typeof ee != "function")
            return J(A, N, j, z, R(ee));
          if (!ee)
            return new b(
              "Invalid " + N + " `" + j + "` key `" + z + "` supplied to `" + A + "`.\nBad object: " + JSON.stringify(O[C], null, "  ") + `
Valid keys: ` + JSON.stringify(Object.keys(g), null, "  ")
            );
          var k = ee(_, z, A, N, j + "." + z, r);
          if (k)
            return k;
        }
        return null;
      }
      return m(d);
    }
    function V(g) {
      switch (typeof g) {
        case "number":
        case "string":
        case "undefined":
          return !0;
        case "boolean":
          return !g;
        case "object":
          if (Array.isArray(g))
            return g.every(V);
          if (g === null || s(g))
            return !0;
          var d = f(g);
          if (d) {
            var O = d.call(g), C;
            if (d !== g.entries) {
              for (; !(C = O.next()).done; )
                if (!V(C.value))
                  return !1;
            } else
              for (; !(C = O.next()).done; ) {
                var A = C.value;
                if (A && !V(A[1]))
                  return !1;
              }
          } else
            return !1;
          return !0;
        default:
          return !1;
      }
    }
    function D(g, d) {
      return g === "symbol" ? !0 : d ? d["@@toStringTag"] === "Symbol" || typeof Symbol == "function" && d instanceof Symbol : !1;
    }
    function F(g) {
      var d = typeof g;
      return Array.isArray(g) ? "array" : g instanceof RegExp ? "object" : D(d, g) ? "symbol" : d;
    }
    function R(g) {
      if (typeof g > "u" || g === null)
        return "" + g;
      var d = F(g);
      if (d === "object") {
        if (g instanceof Date)
          return "date";
        if (g instanceof RegExp)
          return "regexp";
      }
      return d;
    }
    function H(g) {
      var d = R(g);
      switch (d) {
        case "array":
        case "object":
          return "an " + d;
        case "boolean":
        case "date":
        case "regexp":
          return "a " + d;
        default:
          return d;
      }
    }
    function B(g) {
      return !g.constructor || !g.constructor.name ? p : g.constructor.name;
    }
    return v.checkPropTypes = o, v.resetWarningCache = o.resetWarningCache, v.PropTypes = v, v;
  }, Vw;
}
var Ww, mj;
function tpe() {
  if (mj) return Ww;
  mj = 1;
  var e = /* @__PURE__ */ JS();
  function t() {
  }
  function r() {
  }
  return r.resetWarningCache = t, Ww = function() {
    function n(i, s, l, c, u, f) {
      if (f !== e) {
        var p = new Error(
          "Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types"
        );
        throw p.name = "Invariant Violation", p;
      }
    }
    n.isRequired = n;
    function o() {
      return n;
    }
    var a = {
      array: n,
      bigint: n,
      bool: n,
      func: n,
      number: n,
      object: n,
      string: n,
      symbol: n,
      any: n,
      arrayOf: o,
      element: n,
      elementType: n,
      instanceOf: o,
      node: n,
      objectOf: o,
      oneOf: o,
      oneOfType: o,
      shape: o,
      exact: o,
      checkPropTypes: r,
      resetWarningCache: t
    };
    return a.PropTypes = a, a;
  }, Ww;
}
var gj;
function rpe() {
  if (gj) return qb.exports;
  if (gj = 1, process.env.NODE_ENV !== "production") {
    var e = kW(), t = !0;
    qb.exports = /* @__PURE__ */ epe()(e.isElement, t);
  } else
    qb.exports = /* @__PURE__ */ tpe()();
  return qb.exports;
}
var npe = /* @__PURE__ */ rpe();
const Nt = /* @__PURE__ */ Xde(npe);
function hj(e, t) {
  var r = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var n = Object.getOwnPropertySymbols(e);
    t && (n = n.filter(function(o) {
      return Object.getOwnPropertyDescriptor(e, o).enumerable;
    })), r.push.apply(r, n);
  }
  return r;
}
function Bo(e) {
  for (var t = 1; t < arguments.length; t++) {
    var r = arguments[t] != null ? arguments[t] : {};
    t % 2 ? hj(Object(r), !0).forEach(function(n) {
      of(e, n, r[n]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : hj(Object(r)).forEach(function(n) {
      Object.defineProperty(e, n, Object.getOwnPropertyDescriptor(r, n));
    });
  }
  return e;
}
function Wv(e) {
  "@babel/helpers - typeof";
  return Wv = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t) {
    return typeof t;
  } : function(t) {
    return t && typeof Symbol == "function" && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
  }, Wv(e);
}
function of(e, t, r) {
  return t in e ? Object.defineProperty(e, t, {
    value: r,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : e[t] = r, e;
}
function ope(e, t) {
  if (e == null) return {};
  var r = {}, n = Object.keys(e), o, a;
  for (a = 0; a < n.length; a++)
    o = n[a], !(t.indexOf(o) >= 0) && (r[o] = e[o]);
  return r;
}
function ape(e, t) {
  if (e == null) return {};
  var r = ope(e, t), n, o;
  if (Object.getOwnPropertySymbols) {
    var a = Object.getOwnPropertySymbols(e);
    for (o = 0; o < a.length; o++)
      n = a[o], !(t.indexOf(n) >= 0) && Object.prototype.propertyIsEnumerable.call(e, n) && (r[n] = e[n]);
  }
  return r;
}
function q5(e) {
  return ipe(e) || spe(e) || lpe(e) || cpe();
}
function ipe(e) {
  if (Array.isArray(e)) return B5(e);
}
function spe(e) {
  if (typeof Symbol < "u" && e[Symbol.iterator] != null || e["@@iterator"] != null) return Array.from(e);
}
function lpe(e, t) {
  if (e) {
    if (typeof e == "string") return B5(e, t);
    var r = Object.prototype.toString.call(e).slice(8, -1);
    if (r === "Object" && e.constructor && (r = e.constructor.name), r === "Map" || r === "Set") return Array.from(e);
    if (r === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return B5(e, t);
  }
}
function B5(e, t) {
  (t == null || t > e.length) && (t = e.length);
  for (var r = 0, n = new Array(t); r < t; r++) n[r] = e[r];
  return n;
}
function cpe() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function upe(e) {
  var t, r = e.beat, n = e.fade, o = e.beatFade, a = e.bounce, i = e.shake, s = e.flash, l = e.spin, c = e.spinPulse, u = e.spinReverse, f = e.pulse, p = e.fixedWidth, v = e.inverse, x = e.border, b = e.listItem, m = e.flip, w = e.size, $ = e.rotation, E = e.pull, S = (t = {
    "fa-beat": r,
    "fa-fade": n,
    "fa-beat-fade": o,
    "fa-bounce": a,
    "fa-shake": i,
    "fa-flash": s,
    "fa-spin": l,
    "fa-spin-reverse": u,
    "fa-spin-pulse": c,
    "fa-pulse": f,
    "fa-fw": p,
    "fa-inverse": v,
    "fa-border": x,
    "fa-li": b,
    "fa-flip": m === !0,
    "fa-flip-horizontal": m === "horizontal" || m === "both",
    "fa-flip-vertical": m === "vertical" || m === "both"
  }, of(t, "fa-".concat(w), typeof w < "u" && w !== null), of(t, "fa-rotate-".concat($), typeof $ < "u" && $ !== null && $ !== 0), of(t, "fa-pull-".concat(E), typeof E < "u" && E !== null), of(t, "fa-swap-opacity", e.swapOpacity), t);
  return Object.keys(S).map(function(h) {
    return S[h] ? h : null;
  }).filter(function(h) {
    return h;
  });
}
function fpe(e) {
  return e = e - 0, e === e;
}
function OW(e) {
  return fpe(e) ? e : (e = e.replace(/[\-_\s]+(.)?/g, function(t, r) {
    return r ? r.toUpperCase() : "";
  }), e.substr(0, 1).toLowerCase() + e.substr(1));
}
var dpe = ["style"];
function ppe(e) {
  return e.charAt(0).toUpperCase() + e.slice(1);
}
function mpe(e) {
  return e.split(";").map(function(t) {
    return t.trim();
  }).filter(function(t) {
    return t;
  }).reduce(function(t, r) {
    var n = r.indexOf(":"), o = OW(r.slice(0, n)), a = r.slice(n + 1).trim();
    return o.startsWith("webkit") ? t[ppe(o)] = a : t[o] = a, t;
  }, {});
}
function EW(e, t) {
  var r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
  if (typeof t == "string")
    return t;
  var n = (t.children || []).map(function(l) {
    return EW(e, l);
  }), o = Object.keys(t.attributes || {}).reduce(function(l, c) {
    var u = t.attributes[c];
    switch (c) {
      case "class":
        l.attrs.className = u, delete t.attributes.class;
        break;
      case "style":
        l.attrs.style = mpe(u);
        break;
      default:
        c.indexOf("aria-") === 0 || c.indexOf("data-") === 0 ? l.attrs[c.toLowerCase()] = u : l.attrs[OW(c)] = u;
    }
    return l;
  }, {
    attrs: {}
  }), a = r.style, i = a === void 0 ? {} : a, s = ape(r, dpe);
  return o.attrs.style = Bo(Bo({}, o.attrs.style), i), e.apply(void 0, [t.tag, Bo(Bo({}, o.attrs), s)].concat(q5(n)));
}
var SW = !1;
try {
  SW = process.env.NODE_ENV === "production";
} catch {
}
function gpe() {
  if (!SW && console && typeof console.error == "function") {
    var e;
    (e = console).error.apply(e, arguments);
  }
}
function bj(e) {
  if (e && Wv(e) === "object" && e.prefix && e.iconName && e.icon)
    return e;
  if (G5.icon)
    return G5.icon(e);
  if (e === null)
    return null;
  if (e && Wv(e) === "object" && e.prefix && e.iconName)
    return e;
  if (Array.isArray(e) && e.length === 2)
    return {
      prefix: e[0],
      iconName: e[1]
    };
  if (typeof e == "string")
    return {
      prefix: "fas",
      iconName: e
    };
}
function Uw(e, t) {
  return Array.isArray(t) && t.length > 0 || !Array.isArray(t) && t ? of({}, e, t) : {};
}
var yj = {
  border: !1,
  className: "",
  mask: null,
  maskId: null,
  fixedWidth: !1,
  inverse: !1,
  flip: !1,
  icon: null,
  listItem: !1,
  pull: null,
  pulse: !1,
  rotation: null,
  size: null,
  spin: !1,
  spinPulse: !1,
  spinReverse: !1,
  beat: !1,
  fade: !1,
  beatFade: !1,
  bounce: !1,
  shake: !1,
  symbol: !1,
  title: "",
  titleId: null,
  transform: null,
  swapOpacity: !1
}, mh = /* @__PURE__ */ ce.forwardRef(function(e, t) {
  var r = Bo(Bo({}, yj), e), n = r.icon, o = r.mask, a = r.symbol, i = r.className, s = r.title, l = r.titleId, c = r.maskId, u = bj(n), f = Uw("classes", [].concat(q5(upe(r)), q5((i || "").split(" ")))), p = Uw("transform", typeof r.transform == "string" ? G5.transform(r.transform) : r.transform), v = Uw("mask", bj(o)), x = Bde(u, Bo(Bo(Bo(Bo({}, f), p), v), {}, {
    symbol: a,
    title: s,
    titleId: l,
    maskId: c
  }));
  if (!x)
    return gpe("Could not find icon", u), null;
  var b = x.abstract, m = {
    ref: t
  };
  return Object.keys(r).forEach(function(w) {
    yj.hasOwnProperty(w) || (m[w] = r[w]);
  }), hpe(b[0], m);
});
mh.displayName = "FontAwesomeIcon";
mh.propTypes = {
  beat: Nt.bool,
  border: Nt.bool,
  beatFade: Nt.bool,
  bounce: Nt.bool,
  className: Nt.string,
  fade: Nt.bool,
  flash: Nt.bool,
  mask: Nt.oneOfType([Nt.object, Nt.array, Nt.string]),
  maskId: Nt.string,
  fixedWidth: Nt.bool,
  inverse: Nt.bool,
  flip: Nt.oneOf([!0, !1, "horizontal", "vertical", "both"]),
  icon: Nt.oneOfType([Nt.object, Nt.array, Nt.string]),
  listItem: Nt.bool,
  pull: Nt.oneOf(["right", "left"]),
  pulse: Nt.bool,
  rotation: Nt.oneOf([0, 90, 180, 270]),
  shake: Nt.bool,
  size: Nt.oneOf(["2xs", "xs", "sm", "lg", "xl", "2xl", "1x", "2x", "3x", "4x", "5x", "6x", "7x", "8x", "9x", "10x"]),
  spin: Nt.bool,
  spinPulse: Nt.bool,
  spinReverse: Nt.bool,
  symbol: Nt.oneOfType([Nt.bool, Nt.string]),
  title: Nt.string,
  titleId: Nt.string,
  transform: Nt.oneOfType([Nt.string, Nt.object]),
  swapOpacity: Nt.bool
};
var hpe = EW.bind(null, ce.createElement);
/*!
 * Font Awesome Pro 6.7.2 by @fontawesome - https://fontawesome.com
 * License - https://fontawesome.com/license (Commercial License)
 * Copyright 2024 Fonticons, Inc.
 */
const bpe = {
  prefix: "fas",
  iconName: "xmark",
  icon: [384, 512, [128473, 10005, 10006, 10060, 215, "close", "multiply", "remove", "times"], "f00d", "M342.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L192 210.7 86.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L146.7 256 41.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L192 301.3 297.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L237.3 256 342.6 150.6z"]
};
/*!
 * Font Awesome Free 6.7.2 by @fontawesome - https://fontawesome.com
 * License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License)
 * Copyright 2024 Fonticons, Inc.
 */
function ype(e, t, r) {
  return (t = xpe(t)) in e ? Object.defineProperty(e, t, {
    value: r,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : e[t] = r, e;
}
function vj(e, t) {
  var r = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var n = Object.getOwnPropertySymbols(e);
    t && (n = n.filter(function(o) {
      return Object.getOwnPropertyDescriptor(e, o).enumerable;
    })), r.push.apply(r, n);
  }
  return r;
}
function he(e) {
  for (var t = 1; t < arguments.length; t++) {
    var r = arguments[t] != null ? arguments[t] : {};
    t % 2 ? vj(Object(r), !0).forEach(function(n) {
      ype(e, n, r[n]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : vj(Object(r)).forEach(function(n) {
      Object.defineProperty(e, n, Object.getOwnPropertyDescriptor(r, n));
    });
  }
  return e;
}
function vpe(e, t) {
  if (typeof e != "object" || !e) return e;
  var r = e[Symbol.toPrimitive];
  if (r !== void 0) {
    var n = r.call(e, t);
    if (typeof n != "object") return n;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (t === "string" ? String : Number)(e);
}
function xpe(e) {
  var t = vpe(e, "string");
  return typeof t == "symbol" ? t : t + "";
}
const xj = () => {
};
let QS = {}, PW = {}, CW = null, AW = {
  mark: xj,
  measure: xj
};
try {
  typeof window < "u" && (QS = window), typeof document < "u" && (PW = document), typeof MutationObserver < "u" && (CW = MutationObserver), typeof performance < "u" && (AW = performance);
} catch {
}
const {
  userAgent: wj = ""
} = QS.navigator || {}, Kl = QS, Dr = PW, kj = CW, Bb = AW;
Kl.document;
const Li = !!Dr.documentElement && !!Dr.head && typeof Dr.addEventListener == "function" && typeof Dr.createElement == "function", _W = ~wj.indexOf("MSIE") || ~wj.indexOf("Trident/");
var wpe = /fa(s|r|l|t|d|dr|dl|dt|b|k|kd|ss|sr|sl|st|sds|sdr|sdl|sdt)?[\-\ ]/, kpe = /Font ?Awesome ?([56 ]*)(Solid|Regular|Light|Thin|Duotone|Brands|Free|Pro|Sharp Duotone|Sharp|Kit)?.*/i, NW = {
  classic: {
    fa: "solid",
    fas: "solid",
    "fa-solid": "solid",
    far: "regular",
    "fa-regular": "regular",
    fal: "light",
    "fa-light": "light",
    fat: "thin",
    "fa-thin": "thin",
    fab: "brands",
    "fa-brands": "brands"
  },
  duotone: {
    fa: "solid",
    fad: "solid",
    "fa-solid": "solid",
    "fa-duotone": "solid",
    fadr: "regular",
    "fa-regular": "regular",
    fadl: "light",
    "fa-light": "light",
    fadt: "thin",
    "fa-thin": "thin"
  },
  sharp: {
    fa: "solid",
    fass: "solid",
    "fa-solid": "solid",
    fasr: "regular",
    "fa-regular": "regular",
    fasl: "light",
    "fa-light": "light",
    fast: "thin",
    "fa-thin": "thin"
  },
  "sharp-duotone": {
    fa: "solid",
    fasds: "solid",
    "fa-solid": "solid",
    fasdr: "regular",
    "fa-regular": "regular",
    fasdl: "light",
    "fa-light": "light",
    fasdt: "thin",
    "fa-thin": "thin"
  }
}, $pe = {
  GROUP: "duotone-group",
  PRIMARY: "primary",
  SECONDARY: "secondary"
}, jW = ["fa-classic", "fa-duotone", "fa-sharp", "fa-sharp-duotone"], mn = "classic", s0 = "duotone", Ope = "sharp", Epe = "sharp-duotone", IW = [mn, s0, Ope, Epe], Spe = {
  classic: {
    900: "fas",
    400: "far",
    normal: "far",
    300: "fal",
    100: "fat"
  },
  duotone: {
    900: "fad",
    400: "fadr",
    300: "fadl",
    100: "fadt"
  },
  sharp: {
    900: "fass",
    400: "fasr",
    300: "fasl",
    100: "fast"
  },
  "sharp-duotone": {
    900: "fasds",
    400: "fasdr",
    300: "fasdl",
    100: "fasdt"
  }
}, Ppe = {
  "Font Awesome 6 Free": {
    900: "fas",
    400: "far"
  },
  "Font Awesome 6 Pro": {
    900: "fas",
    400: "far",
    normal: "far",
    300: "fal",
    100: "fat"
  },
  "Font Awesome 6 Brands": {
    400: "fab",
    normal: "fab"
  },
  "Font Awesome 6 Duotone": {
    900: "fad",
    400: "fadr",
    normal: "fadr",
    300: "fadl",
    100: "fadt"
  },
  "Font Awesome 6 Sharp": {
    900: "fass",
    400: "fasr",
    normal: "fasr",
    300: "fasl",
    100: "fast"
  },
  "Font Awesome 6 Sharp Duotone": {
    900: "fasds",
    400: "fasdr",
    normal: "fasdr",
    300: "fasdl",
    100: "fasdt"
  }
}, Cpe = /* @__PURE__ */ new Map([["classic", {
  defaultShortPrefixId: "fas",
  defaultStyleId: "solid",
  styleIds: ["solid", "regular", "light", "thin", "brands"],
  futureStyleIds: [],
  defaultFontWeight: 900
}], ["sharp", {
  defaultShortPrefixId: "fass",
  defaultStyleId: "solid",
  styleIds: ["solid", "regular", "light", "thin"],
  futureStyleIds: [],
  defaultFontWeight: 900
}], ["duotone", {
  defaultShortPrefixId: "fad",
  defaultStyleId: "solid",
  styleIds: ["solid", "regular", "light", "thin"],
  futureStyleIds: [],
  defaultFontWeight: 900
}], ["sharp-duotone", {
  defaultShortPrefixId: "fasds",
  defaultStyleId: "solid",
  styleIds: ["solid", "regular", "light", "thin"],
  futureStyleIds: [],
  defaultFontWeight: 900
}]]), Ape = {
  classic: {
    solid: "fas",
    regular: "far",
    light: "fal",
    thin: "fat",
    brands: "fab"
  },
  duotone: {
    solid: "fad",
    regular: "fadr",
    light: "fadl",
    thin: "fadt"
  },
  sharp: {
    solid: "fass",
    regular: "fasr",
    light: "fasl",
    thin: "fast"
  },
  "sharp-duotone": {
    solid: "fasds",
    regular: "fasdr",
    light: "fasdl",
    thin: "fasdt"
  }
}, _pe = ["fak", "fa-kit", "fakd", "fa-kit-duotone"], $j = {
  kit: {
    fak: "kit",
    "fa-kit": "kit"
  },
  "kit-duotone": {
    fakd: "kit-duotone",
    "fa-kit-duotone": "kit-duotone"
  }
}, Npe = ["kit"], jpe = {
  kit: {
    "fa-kit": "fak"
  }
}, Ipe = ["fak", "fakd"], Tpe = {
  kit: {
    fak: "fa-kit"
  }
}, Oj = {
  kit: {
    kit: "fak"
  },
  "kit-duotone": {
    "kit-duotone": "fakd"
  }
}, Xb = {
  GROUP: "duotone-group",
  SWAP_OPACITY: "swap-opacity",
  PRIMARY: "primary",
  SECONDARY: "secondary"
}, Mpe = ["fa-classic", "fa-duotone", "fa-sharp", "fa-sharp-duotone"], Rpe = ["fak", "fa-kit", "fakd", "fa-kit-duotone"], zpe = {
  "Font Awesome Kit": {
    400: "fak",
    normal: "fak"
  },
  "Font Awesome Kit Duotone": {
    400: "fakd",
    normal: "fakd"
  }
}, Fpe = {
  classic: {
    "fa-brands": "fab",
    "fa-duotone": "fad",
    "fa-light": "fal",
    "fa-regular": "far",
    "fa-solid": "fas",
    "fa-thin": "fat"
  },
  duotone: {
    "fa-regular": "fadr",
    "fa-light": "fadl",
    "fa-thin": "fadt"
  },
  sharp: {
    "fa-solid": "fass",
    "fa-regular": "fasr",
    "fa-light": "fasl",
    "fa-thin": "fast"
  },
  "sharp-duotone": {
    "fa-solid": "fasds",
    "fa-regular": "fasdr",
    "fa-light": "fasdl",
    "fa-thin": "fasdt"
  }
}, Dpe = {
  classic: ["fas", "far", "fal", "fat", "fad"],
  duotone: ["fadr", "fadl", "fadt"],
  sharp: ["fass", "fasr", "fasl", "fast"],
  "sharp-duotone": ["fasds", "fasdr", "fasdl", "fasdt"]
}, X5 = {
  classic: {
    fab: "fa-brands",
    fad: "fa-duotone",
    fal: "fa-light",
    far: "fa-regular",
    fas: "fa-solid",
    fat: "fa-thin"
  },
  duotone: {
    fadr: "fa-regular",
    fadl: "fa-light",
    fadt: "fa-thin"
  },
  sharp: {
    fass: "fa-solid",
    fasr: "fa-regular",
    fasl: "fa-light",
    fast: "fa-thin"
  },
  "sharp-duotone": {
    fasds: "fa-solid",
    fasdr: "fa-regular",
    fasdl: "fa-light",
    fasdt: "fa-thin"
  }
}, Lpe = ["fa-solid", "fa-regular", "fa-light", "fa-thin", "fa-duotone", "fa-brands"], K5 = ["fa", "fas", "far", "fal", "fat", "fad", "fadr", "fadl", "fadt", "fab", "fass", "fasr", "fasl", "fast", "fasds", "fasdr", "fasdl", "fasdt", ...Mpe, ...Lpe], Vpe = ["solid", "regular", "light", "thin", "duotone", "brands"], TW = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], Wpe = TW.concat([11, 12, 13, 14, 15, 16, 17, 18, 19, 20]), Upe = [...Object.keys(Dpe), ...Vpe, "2xs", "xs", "sm", "lg", "xl", "2xl", "beat", "border", "fade", "beat-fade", "bounce", "flip-both", "flip-horizontal", "flip-vertical", "flip", "fw", "inverse", "layers-counter", "layers-text", "layers", "li", "pull-left", "pull-right", "pulse", "rotate-180", "rotate-270", "rotate-90", "rotate-by", "shake", "spin-pulse", "spin-reverse", "spin", "stack-1x", "stack-2x", "stack", "ul", Xb.GROUP, Xb.SWAP_OPACITY, Xb.PRIMARY, Xb.SECONDARY].concat(TW.map((e) => "".concat(e, "x"))).concat(Wpe.map((e) => "w-".concat(e))), Ype = {
  "Font Awesome 5 Free": {
    900: "fas",
    400: "far"
  },
  "Font Awesome 5 Pro": {
    900: "fas",
    400: "far",
    normal: "far",
    300: "fal"
  },
  "Font Awesome 5 Brands": {
    400: "fab",
    normal: "fab"
  },
  "Font Awesome 5 Duotone": {
    900: "fad"
  }
};
const hi = "___FONT_AWESOME___", J5 = 16, MW = "fa", RW = "svg-inline--fa", fu = "data-fa-i2svg", Q5 = "data-fa-pseudo-element", Hpe = "data-fa-pseudo-element-pending", ZS = "data-prefix", eP = "data-icon", Ej = "fontawesome-i2svg", Gpe = "async", qpe = ["HTML", "HEAD", "STYLE", "SCRIPT"], zW = (() => {
  try {
    return process.env.NODE_ENV === "production";
  } catch {
    return !1;
  }
})();
function eb(e) {
  return new Proxy(e, {
    get(t, r) {
      return r in t ? t[r] : t[mn];
    }
  });
}
const FW = he({}, NW);
FW[mn] = he(he(he(he({}, {
  "fa-duotone": "duotone"
}), NW[mn]), $j.kit), $j["kit-duotone"]);
const Bpe = eb(FW), Z5 = he({}, Ape);
Z5[mn] = he(he(he(he({}, {
  duotone: "fad"
}), Z5[mn]), Oj.kit), Oj["kit-duotone"]);
const Sj = eb(Z5), e3 = he({}, X5);
e3[mn] = he(he({}, e3[mn]), Tpe.kit);
const tP = eb(e3), t3 = he({}, Fpe);
t3[mn] = he(he({}, t3[mn]), jpe.kit);
eb(t3);
const Xpe = wpe, DW = "fa-layers-text", Kpe = kpe, Jpe = he({}, Spe);
eb(Jpe);
const Qpe = ["class", "data-prefix", "data-icon", "data-fa-transform", "data-fa-mask"], Yw = $pe, Zpe = [...Npe, ...Upe], $g = Kl.FontAwesomeConfig || {};
function eme(e) {
  var t = Dr.querySelector("script[" + e + "]");
  if (t)
    return t.getAttribute(e);
}
function tme(e) {
  return e === "" ? !0 : e === "false" ? !1 : e === "true" ? !0 : e;
}
Dr && typeof Dr.querySelector == "function" && [["data-family-prefix", "familyPrefix"], ["data-css-prefix", "cssPrefix"], ["data-family-default", "familyDefault"], ["data-style-default", "styleDefault"], ["data-replacement-class", "replacementClass"], ["data-auto-replace-svg", "autoReplaceSvg"], ["data-auto-add-css", "autoAddCss"], ["data-auto-a11y", "autoA11y"], ["data-search-pseudo-elements", "searchPseudoElements"], ["data-observe-mutations", "observeMutations"], ["data-mutate-approach", "mutateApproach"], ["data-keep-original-source", "keepOriginalSource"], ["data-measure-performance", "measurePerformance"], ["data-show-missing-icons", "showMissingIcons"]].forEach((e) => {
  let [t, r] = e;
  const n = tme(eme(t));
  n != null && ($g[r] = n);
});
const LW = {
  styleDefault: "solid",
  familyDefault: mn,
  cssPrefix: MW,
  replacementClass: RW,
  autoReplaceSvg: !0,
  autoAddCss: !0,
  autoA11y: !0,
  searchPseudoElements: !1,
  observeMutations: !0,
  mutateApproach: "async",
  keepOriginalSource: !0,
  measurePerformance: !1,
  showMissingIcons: !0
};
$g.familyPrefix && ($g.cssPrefix = $g.familyPrefix);
const pd = he(he({}, LW), $g);
pd.autoReplaceSvg || (pd.observeMutations = !1);
const We = {};
Object.keys(LW).forEach((e) => {
  Object.defineProperty(We, e, {
    enumerable: !0,
    set: function(t) {
      pd[e] = t, Og.forEach((r) => r(We));
    },
    get: function() {
      return pd[e];
    }
  });
});
Object.defineProperty(We, "familyPrefix", {
  enumerable: !0,
  set: function(e) {
    pd.cssPrefix = e, Og.forEach((t) => t(We));
  },
  get: function() {
    return pd.cssPrefix;
  }
});
Kl.FontAwesomeConfig = We;
const Og = [];
function rme(e) {
  return Og.push(e), () => {
    Og.splice(Og.indexOf(e), 1);
  };
}
const Ts = J5, da = {
  size: 16,
  x: 0,
  y: 0,
  rotate: 0,
  flipX: !1,
  flipY: !1
};
function nme(e) {
  if (!e || !Li)
    return;
  const t = Dr.createElement("style");
  t.setAttribute("type", "text/css"), t.innerHTML = e;
  const r = Dr.head.childNodes;
  let n = null;
  for (let o = r.length - 1; o > -1; o--) {
    const a = r[o], i = (a.tagName || "").toUpperCase();
    ["STYLE", "LINK"].indexOf(i) > -1 && (n = a);
  }
  return Dr.head.insertBefore(t, n), e;
}
const ome = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
function gh() {
  let e = 12, t = "";
  for (; e-- > 0; )
    t += ome[Math.random() * 62 | 0];
  return t;
}
function Md(e) {
  const t = [];
  for (let r = (e || []).length >>> 0; r--; )
    t[r] = e[r];
  return t;
}
function rP(e) {
  return e.classList ? Md(e.classList) : (e.getAttribute("class") || "").split(" ").filter((t) => t);
}
function VW(e) {
  return "".concat(e).replace(/&/g, "&amp;").replace(/"/g, "&quot;").replace(/'/g, "&#39;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
}
function ame(e) {
  return Object.keys(e || {}).reduce((t, r) => t + "".concat(r, '="').concat(VW(e[r]), '" '), "").trim();
}
function l0(e) {
  return Object.keys(e || {}).reduce((t, r) => t + "".concat(r, ": ").concat(e[r].trim(), ";"), "");
}
function nP(e) {
  return e.size !== da.size || e.x !== da.x || e.y !== da.y || e.rotate !== da.rotate || e.flipX || e.flipY;
}
function ime(e) {
  let {
    transform: t,
    containerWidth: r,
    iconWidth: n
  } = e;
  const o = {
    transform: "translate(".concat(r / 2, " 256)")
  }, a = "translate(".concat(t.x * 32, ", ").concat(t.y * 32, ") "), i = "scale(".concat(t.size / 16 * (t.flipX ? -1 : 1), ", ").concat(t.size / 16 * (t.flipY ? -1 : 1), ") "), s = "rotate(".concat(t.rotate, " 0 0)"), l = {
    transform: "".concat(a, " ").concat(i, " ").concat(s)
  }, c = {
    transform: "translate(".concat(n / 2 * -1, " -256)")
  };
  return {
    outer: o,
    inner: l,
    path: c
  };
}
function sme(e) {
  let {
    transform: t,
    width: r = J5,
    height: n = J5,
    startCentered: o = !1
  } = e, a = "";
  return o && _W ? a += "translate(".concat(t.x / Ts - r / 2, "em, ").concat(t.y / Ts - n / 2, "em) ") : o ? a += "translate(calc(-50% + ".concat(t.x / Ts, "em), calc(-50% + ").concat(t.y / Ts, "em)) ") : a += "translate(".concat(t.x / Ts, "em, ").concat(t.y / Ts, "em) "), a += "scale(".concat(t.size / Ts * (t.flipX ? -1 : 1), ", ").concat(t.size / Ts * (t.flipY ? -1 : 1), ") "), a += "rotate(".concat(t.rotate, "deg) "), a;
}
var lme = `:root, :host {
  --fa-font-solid: normal 900 1em/1 "Font Awesome 6 Free";
  --fa-font-regular: normal 400 1em/1 "Font Awesome 6 Free";
  --fa-font-light: normal 300 1em/1 "Font Awesome 6 Pro";
  --fa-font-thin: normal 100 1em/1 "Font Awesome 6 Pro";
  --fa-font-duotone: normal 900 1em/1 "Font Awesome 6 Duotone";
  --fa-font-duotone-regular: normal 400 1em/1 "Font Awesome 6 Duotone";
  --fa-font-duotone-light: normal 300 1em/1 "Font Awesome 6 Duotone";
  --fa-font-duotone-thin: normal 100 1em/1 "Font Awesome 6 Duotone";
  --fa-font-brands: normal 400 1em/1 "Font Awesome 6 Brands";
  --fa-font-sharp-solid: normal 900 1em/1 "Font Awesome 6 Sharp";
  --fa-font-sharp-regular: normal 400 1em/1 "Font Awesome 6 Sharp";
  --fa-font-sharp-light: normal 300 1em/1 "Font Awesome 6 Sharp";
  --fa-font-sharp-thin: normal 100 1em/1 "Font Awesome 6 Sharp";
  --fa-font-sharp-duotone-solid: normal 900 1em/1 "Font Awesome 6 Sharp Duotone";
  --fa-font-sharp-duotone-regular: normal 400 1em/1 "Font Awesome 6 Sharp Duotone";
  --fa-font-sharp-duotone-light: normal 300 1em/1 "Font Awesome 6 Sharp Duotone";
  --fa-font-sharp-duotone-thin: normal 100 1em/1 "Font Awesome 6 Sharp Duotone";
}

svg:not(:root).svg-inline--fa, svg:not(:host).svg-inline--fa {
  overflow: visible;
  box-sizing: content-box;
}

.svg-inline--fa {
  display: var(--fa-display, inline-block);
  height: 1em;
  overflow: visible;
  vertical-align: -0.125em;
}
.svg-inline--fa.fa-2xs {
  vertical-align: 0.1em;
}
.svg-inline--fa.fa-xs {
  vertical-align: 0em;
}
.svg-inline--fa.fa-sm {
  vertical-align: -0.0714285705em;
}
.svg-inline--fa.fa-lg {
  vertical-align: -0.2em;
}
.svg-inline--fa.fa-xl {
  vertical-align: -0.25em;
}
.svg-inline--fa.fa-2xl {
  vertical-align: -0.3125em;
}
.svg-inline--fa.fa-pull-left {
  margin-right: var(--fa-pull-margin, 0.3em);
  width: auto;
}
.svg-inline--fa.fa-pull-right {
  margin-left: var(--fa-pull-margin, 0.3em);
  width: auto;
}
.svg-inline--fa.fa-li {
  width: var(--fa-li-width, 2em);
  top: 0.25em;
}
.svg-inline--fa.fa-fw {
  width: var(--fa-fw-width, 1.25em);
}

.fa-layers svg.svg-inline--fa {
  bottom: 0;
  left: 0;
  margin: auto;
  position: absolute;
  right: 0;
  top: 0;
}

.fa-layers-counter, .fa-layers-text {
  display: inline-block;
  position: absolute;
  text-align: center;
}

.fa-layers {
  display: inline-block;
  height: 1em;
  position: relative;
  text-align: center;
  vertical-align: -0.125em;
  width: 1em;
}
.fa-layers svg.svg-inline--fa {
  transform-origin: center center;
}

.fa-layers-text {
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  transform-origin: center center;
}

.fa-layers-counter {
  background-color: var(--fa-counter-background-color, #ff253a);
  border-radius: var(--fa-counter-border-radius, 1em);
  box-sizing: border-box;
  color: var(--fa-inverse, #fff);
  line-height: var(--fa-counter-line-height, 1);
  max-width: var(--fa-counter-max-width, 5em);
  min-width: var(--fa-counter-min-width, 1.5em);
  overflow: hidden;
  padding: var(--fa-counter-padding, 0.25em 0.5em);
  right: var(--fa-right, 0);
  text-overflow: ellipsis;
  top: var(--fa-top, 0);
  transform: scale(var(--fa-counter-scale, 0.25));
  transform-origin: top right;
}

.fa-layers-bottom-right {
  bottom: var(--fa-bottom, 0);
  right: var(--fa-right, 0);
  top: auto;
  transform: scale(var(--fa-layers-scale, 0.25));
  transform-origin: bottom right;
}

.fa-layers-bottom-left {
  bottom: var(--fa-bottom, 0);
  left: var(--fa-left, 0);
  right: auto;
  top: auto;
  transform: scale(var(--fa-layers-scale, 0.25));
  transform-origin: bottom left;
}

.fa-layers-top-right {
  top: var(--fa-top, 0);
  right: var(--fa-right, 0);
  transform: scale(var(--fa-layers-scale, 0.25));
  transform-origin: top right;
}

.fa-layers-top-left {
  left: var(--fa-left, 0);
  right: auto;
  top: var(--fa-top, 0);
  transform: scale(var(--fa-layers-scale, 0.25));
  transform-origin: top left;
}

.fa-1x {
  font-size: 1em;
}

.fa-2x {
  font-size: 2em;
}

.fa-3x {
  font-size: 3em;
}

.fa-4x {
  font-size: 4em;
}

.fa-5x {
  font-size: 5em;
}

.fa-6x {
  font-size: 6em;
}

.fa-7x {
  font-size: 7em;
}

.fa-8x {
  font-size: 8em;
}

.fa-9x {
  font-size: 9em;
}

.fa-10x {
  font-size: 10em;
}

.fa-2xs {
  font-size: 0.625em;
  line-height: 0.1em;
  vertical-align: 0.225em;
}

.fa-xs {
  font-size: 0.75em;
  line-height: 0.0833333337em;
  vertical-align: 0.125em;
}

.fa-sm {
  font-size: 0.875em;
  line-height: 0.0714285718em;
  vertical-align: 0.0535714295em;
}

.fa-lg {
  font-size: 1.25em;
  line-height: 0.05em;
  vertical-align: -0.075em;
}

.fa-xl {
  font-size: 1.5em;
  line-height: 0.0416666682em;
  vertical-align: -0.125em;
}

.fa-2xl {
  font-size: 2em;
  line-height: 0.03125em;
  vertical-align: -0.1875em;
}

.fa-fw {
  text-align: center;
  width: 1.25em;
}

.fa-ul {
  list-style-type: none;
  margin-left: var(--fa-li-margin, 2.5em);
  padding-left: 0;
}
.fa-ul > li {
  position: relative;
}

.fa-li {
  left: calc(-1 * var(--fa-li-width, 2em));
  position: absolute;
  text-align: center;
  width: var(--fa-li-width, 2em);
  line-height: inherit;
}

.fa-border {
  border-color: var(--fa-border-color, #eee);
  border-radius: var(--fa-border-radius, 0.1em);
  border-style: var(--fa-border-style, solid);
  border-width: var(--fa-border-width, 0.08em);
  padding: var(--fa-border-padding, 0.2em 0.25em 0.15em);
}

.fa-pull-left {
  float: left;
  margin-right: var(--fa-pull-margin, 0.3em);
}

.fa-pull-right {
  float: right;
  margin-left: var(--fa-pull-margin, 0.3em);
}

.fa-beat {
  animation-name: fa-beat;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, ease-in-out);
}

.fa-bounce {
  animation-name: fa-bounce;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.28, 0.84, 0.42, 1));
}

.fa-fade {
  animation-name: fa-fade;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));
}

.fa-beat-fade {
  animation-name: fa-beat-fade;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));
}

.fa-flip {
  animation-name: fa-flip;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, ease-in-out);
}

.fa-shake {
  animation-name: fa-shake;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, linear);
}

.fa-spin {
  animation-name: fa-spin;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 2s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, linear);
}

.fa-spin-reverse {
  --fa-animation-direction: reverse;
}

.fa-pulse,
.fa-spin-pulse {
  animation-name: fa-spin;
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, steps(8));
}

@media (prefers-reduced-motion: reduce) {
  .fa-beat,
.fa-bounce,
.fa-fade,
.fa-beat-fade,
.fa-flip,
.fa-pulse,
.fa-shake,
.fa-spin,
.fa-spin-pulse {
    animation-delay: -1ms;
    animation-duration: 1ms;
    animation-iteration-count: 1;
    transition-delay: 0s;
    transition-duration: 0s;
  }
}
@keyframes fa-beat {
  0%, 90% {
    transform: scale(1);
  }
  45% {
    transform: scale(var(--fa-beat-scale, 1.25));
  }
}
@keyframes fa-bounce {
  0% {
    transform: scale(1, 1) translateY(0);
  }
  10% {
    transform: scale(var(--fa-bounce-start-scale-x, 1.1), var(--fa-bounce-start-scale-y, 0.9)) translateY(0);
  }
  30% {
    transform: scale(var(--fa-bounce-jump-scale-x, 0.9), var(--fa-bounce-jump-scale-y, 1.1)) translateY(var(--fa-bounce-height, -0.5em));
  }
  50% {
    transform: scale(var(--fa-bounce-land-scale-x, 1.05), var(--fa-bounce-land-scale-y, 0.95)) translateY(0);
  }
  57% {
    transform: scale(1, 1) translateY(var(--fa-bounce-rebound, -0.125em));
  }
  64% {
    transform: scale(1, 1) translateY(0);
  }
  100% {
    transform: scale(1, 1) translateY(0);
  }
}
@keyframes fa-fade {
  50% {
    opacity: var(--fa-fade-opacity, 0.4);
  }
}
@keyframes fa-beat-fade {
  0%, 100% {
    opacity: var(--fa-beat-fade-opacity, 0.4);
    transform: scale(1);
  }
  50% {
    opacity: 1;
    transform: scale(var(--fa-beat-fade-scale, 1.125));
  }
}
@keyframes fa-flip {
  50% {
    transform: rotate3d(var(--fa-flip-x, 0), var(--fa-flip-y, 1), var(--fa-flip-z, 0), var(--fa-flip-angle, -180deg));
  }
}
@keyframes fa-shake {
  0% {
    transform: rotate(-15deg);
  }
  4% {
    transform: rotate(15deg);
  }
  8%, 24% {
    transform: rotate(-18deg);
  }
  12%, 28% {
    transform: rotate(18deg);
  }
  16% {
    transform: rotate(-22deg);
  }
  20% {
    transform: rotate(22deg);
  }
  32% {
    transform: rotate(-12deg);
  }
  36% {
    transform: rotate(12deg);
  }
  40%, 100% {
    transform: rotate(0deg);
  }
}
@keyframes fa-spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
.fa-rotate-90 {
  transform: rotate(90deg);
}

.fa-rotate-180 {
  transform: rotate(180deg);
}

.fa-rotate-270 {
  transform: rotate(270deg);
}

.fa-flip-horizontal {
  transform: scale(-1, 1);
}

.fa-flip-vertical {
  transform: scale(1, -1);
}

.fa-flip-both,
.fa-flip-horizontal.fa-flip-vertical {
  transform: scale(-1, -1);
}

.fa-rotate-by {
  transform: rotate(var(--fa-rotate-angle, 0));
}

.fa-stack {
  display: inline-block;
  vertical-align: middle;
  height: 2em;
  position: relative;
  width: 2.5em;
}

.fa-stack-1x,
.fa-stack-2x {
  bottom: 0;
  left: 0;
  margin: auto;
  position: absolute;
  right: 0;
  top: 0;
  z-index: var(--fa-stack-z-index, auto);
}

.svg-inline--fa.fa-stack-1x {
  height: 1em;
  width: 1.25em;
}
.svg-inline--fa.fa-stack-2x {
  height: 2em;
  width: 2.5em;
}

.fa-inverse {
  color: var(--fa-inverse, #fff);
}

.sr-only,
.fa-sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.sr-only-focusable:not(:focus),
.fa-sr-only-focusable:not(:focus) {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.svg-inline--fa .fa-primary {
  fill: var(--fa-primary-color, currentColor);
  opacity: var(--fa-primary-opacity, 1);
}

.svg-inline--fa .fa-secondary {
  fill: var(--fa-secondary-color, currentColor);
  opacity: var(--fa-secondary-opacity, 0.4);
}

.svg-inline--fa.fa-swap-opacity .fa-primary {
  opacity: var(--fa-secondary-opacity, 0.4);
}

.svg-inline--fa.fa-swap-opacity .fa-secondary {
  opacity: var(--fa-primary-opacity, 1);
}

.svg-inline--fa mask .fa-primary,
.svg-inline--fa mask .fa-secondary {
  fill: black;
}`;
function WW() {
  const e = MW, t = RW, r = We.cssPrefix, n = We.replacementClass;
  let o = lme;
  if (r !== e || n !== t) {
    const a = new RegExp("\\.".concat(e, "\\-"), "g"), i = new RegExp("\\--".concat(e, "\\-"), "g"), s = new RegExp("\\.".concat(t), "g");
    o = o.replace(a, ".".concat(r, "-")).replace(i, "--".concat(r, "-")).replace(s, ".".concat(n));
  }
  return o;
}
let Pj = !1;
function Hw() {
  We.autoAddCss && !Pj && (nme(WW()), Pj = !0);
}
var cme = {
  mixout() {
    return {
      dom: {
        css: WW,
        insertCss: Hw
      }
    };
  },
  hooks() {
    return {
      beforeDOMElementCreation() {
        Hw();
      },
      beforeI2svg() {
        Hw();
      }
    };
  }
};
const bi = Kl || {};
bi[hi] || (bi[hi] = {});
bi[hi].styles || (bi[hi].styles = {});
bi[hi].hooks || (bi[hi].hooks = {});
bi[hi].shims || (bi[hi].shims = []);
var pa = bi[hi];
const UW = [], YW = function() {
  Dr.removeEventListener("DOMContentLoaded", YW), Uv = 1, UW.map((e) => e());
};
let Uv = !1;
Li && (Uv = (Dr.documentElement.doScroll ? /^loaded|^c/ : /^loaded|^i|^c/).test(Dr.readyState), Uv || Dr.addEventListener("DOMContentLoaded", YW));
function ume(e) {
  Li && (Uv ? setTimeout(e, 0) : UW.push(e));
}
function tb(e) {
  const {
    tag: t,
    attributes: r = {},
    children: n = []
  } = e;
  return typeof e == "string" ? VW(e) : "<".concat(t, " ").concat(ame(r), ">").concat(n.map(tb).join(""), "</").concat(t, ">");
}
function Cj(e, t, r) {
  if (e && e[t] && e[t][r])
    return {
      prefix: t,
      iconName: r,
      icon: e[t][r]
    };
}
var Gw = function(e, t, r, n) {
  var o = Object.keys(e), a = o.length, i = t, s, l, c;
  for (r === void 0 ? (s = 1, c = e[o[0]]) : (s = 0, c = r); s < a; s++)
    l = o[s], c = i(c, e[l], l, e);
  return c;
};
function fme(e) {
  const t = [];
  let r = 0;
  const n = e.length;
  for (; r < n; ) {
    const o = e.charCodeAt(r++);
    if (o >= 55296 && o <= 56319 && r < n) {
      const a = e.charCodeAt(r++);
      (a & 64512) == 56320 ? t.push(((o & 1023) << 10) + (a & 1023) + 65536) : (t.push(o), r--);
    } else
      t.push(o);
  }
  return t;
}
function HW(e) {
  const t = fme(e);
  return t.length === 1 ? t[0].toString(16) : null;
}
function dme(e, t) {
  const r = e.length;
  let n = e.charCodeAt(t), o;
  return n >= 55296 && n <= 56319 && r > t + 1 && (o = e.charCodeAt(t + 1), o >= 56320 && o <= 57343) ? (n - 55296) * 1024 + o - 56320 + 65536 : n;
}
function Aj(e) {
  return Object.keys(e).reduce((t, r) => {
    const n = e[r];
    return n.icon ? t[n.iconName] = n.icon : t[r] = n, t;
  }, {});
}
function r3(e, t) {
  let r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
  const {
    skipHooks: n = !1
  } = r, o = Aj(t);
  typeof pa.hooks.addPack == "function" && !n ? pa.hooks.addPack(e, Aj(t)) : pa.styles[e] = he(he({}, pa.styles[e] || {}), o), e === "fas" && r3("fa", t);
}
const {
  styles: hh,
  shims: pme
} = pa, GW = Object.keys(tP), mme = GW.reduce((e, t) => (e[t] = Object.keys(tP[t]), e), {});
let oP = null, qW = {}, BW = {}, XW = {}, KW = {}, JW = {};
function gme(e) {
  return ~Zpe.indexOf(e);
}
function hme(e, t) {
  const r = t.split("-"), n = r[0], o = r.slice(1).join("-");
  return n === e && o !== "" && !gme(o) ? o : null;
}
const QW = () => {
  const e = (n) => Gw(hh, (o, a, i) => (o[i] = Gw(a, n, {}), o), {});
  qW = e((n, o, a) => (o[3] && (n[o[3]] = a), o[2] && o[2].filter((i) => typeof i == "number").forEach((i) => {
    n[i.toString(16)] = a;
  }), n)), BW = e((n, o, a) => (n[a] = a, o[2] && o[2].filter((i) => typeof i == "string").forEach((i) => {
    n[i] = a;
  }), n)), JW = e((n, o, a) => {
    const i = o[2];
    return n[a] = a, i.forEach((s) => {
      n[s] = a;
    }), n;
  });
  const t = "far" in hh || We.autoFetchSvg, r = Gw(pme, (n, o) => {
    const a = o[0];
    let i = o[1];
    const s = o[2];
    return i === "far" && !t && (i = "fas"), typeof a == "string" && (n.names[a] = {
      prefix: i,
      iconName: s
    }), typeof a == "number" && (n.unicodes[a.toString(16)] = {
      prefix: i,
      iconName: s
    }), n;
  }, {
    names: {},
    unicodes: {}
  });
  XW = r.names, KW = r.unicodes, oP = c0(We.styleDefault, {
    family: We.familyDefault
  });
};
rme((e) => {
  oP = c0(e.styleDefault, {
    family: We.familyDefault
  });
});
QW();
function aP(e, t) {
  return (qW[e] || {})[t];
}
function bme(e, t) {
  return (BW[e] || {})[t];
}
function Fc(e, t) {
  return (JW[e] || {})[t];
}
function ZW(e) {
  return XW[e] || {
    prefix: null,
    iconName: null
  };
}
function yme(e) {
  const t = KW[e], r = aP("fas", e);
  return t || (r ? {
    prefix: "fas",
    iconName: r
  } : null) || {
    prefix: null,
    iconName: null
  };
}
function Jl() {
  return oP;
}
const eU = () => ({
  prefix: null,
  iconName: null,
  rest: []
});
function vme(e) {
  let t = mn;
  const r = GW.reduce((n, o) => (n[o] = "".concat(We.cssPrefix, "-").concat(o), n), {});
  return IW.forEach((n) => {
    (e.includes(r[n]) || e.some((o) => mme[n].includes(o))) && (t = n);
  }), t;
}
function c0(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  const {
    family: r = mn
  } = t, n = Bpe[r][e];
  if (r === s0 && !e)
    return "fad";
  const o = Sj[r][e] || Sj[r][n], a = e in pa.styles ? e : null;
  return o || a || null;
}
function xme(e) {
  let t = [], r = null;
  return e.forEach((n) => {
    const o = hme(We.cssPrefix, n);
    o ? r = o : n && t.push(n);
  }), {
    iconName: r,
    rest: t
  };
}
function _j(e) {
  return e.sort().filter((t, r, n) => n.indexOf(t) === r);
}
function u0(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  const {
    skipLookups: r = !1
  } = t;
  let n = null;
  const o = K5.concat(Rpe), a = _j(e.filter((f) => o.includes(f))), i = _j(e.filter((f) => !K5.includes(f))), s = a.filter((f) => (n = f, !jW.includes(f))), [l = null] = s, c = vme(a), u = he(he({}, xme(i)), {}, {
    prefix: c0(l, {
      family: c
    })
  });
  return he(he(he({}, u), Ome({
    values: e,
    family: c,
    styles: hh,
    config: We,
    canonical: u,
    givenPrefix: n
  })), wme(r, n, u));
}
function wme(e, t, r) {
  let {
    prefix: n,
    iconName: o
  } = r;
  if (e || !n || !o)
    return {
      prefix: n,
      iconName: o
    };
  const a = t === "fa" ? ZW(o) : {}, i = Fc(n, o);
  return o = a.iconName || i || o, n = a.prefix || n, n === "far" && !hh.far && hh.fas && !We.autoFetchSvg && (n = "fas"), {
    prefix: n,
    iconName: o
  };
}
const kme = IW.filter((e) => e !== mn || e !== s0), $me = Object.keys(X5).filter((e) => e !== mn).map((e) => Object.keys(X5[e])).flat();
function Ome(e) {
  const {
    values: t,
    family: r,
    canonical: n,
    givenPrefix: o = "",
    styles: a = {},
    config: i = {}
  } = e, s = r === s0, l = t.includes("fa-duotone") || t.includes("fad"), c = i.familyDefault === "duotone", u = n.prefix === "fad" || n.prefix === "fa-duotone";
  if (!s && (l || c || u) && (n.prefix = "fad"), (t.includes("fa-brands") || t.includes("fab")) && (n.prefix = "fab"), !n.prefix && kme.includes(r) && (Object.keys(a).find((f) => $me.includes(f)) || i.autoFetchSvg)) {
    const f = Cpe.get(r).defaultShortPrefixId;
    n.prefix = f, n.iconName = Fc(n.prefix, n.iconName) || n.iconName;
  }
  return (n.prefix === "fa" || o === "fa") && (n.prefix = Jl() || "fas"), n;
}
class Eme {
  constructor() {
    this.definitions = {};
  }
  add() {
    for (var t = arguments.length, r = new Array(t), n = 0; n < t; n++)
      r[n] = arguments[n];
    const o = r.reduce(this._pullDefinitions, {});
    Object.keys(o).forEach((a) => {
      this.definitions[a] = he(he({}, this.definitions[a] || {}), o[a]), r3(a, o[a]);
      const i = tP[mn][a];
      i && r3(i, o[a]), QW();
    });
  }
  reset() {
    this.definitions = {};
  }
  _pullDefinitions(t, r) {
    const n = r.prefix && r.iconName && r.icon ? {
      0: r
    } : r;
    return Object.keys(n).map((o) => {
      const {
        prefix: a,
        iconName: i,
        icon: s
      } = n[o], l = s[2];
      t[a] || (t[a] = {}), l.length > 0 && l.forEach((c) => {
        typeof c == "string" && (t[a][c] = s);
      }), t[a][i] = s;
    }), t;
  }
}
let Nj = [], af = {};
const Mf = {}, Sme = Object.keys(Mf);
function Pme(e, t) {
  let {
    mixoutsTo: r
  } = t;
  return Nj = e, af = {}, Object.keys(Mf).forEach((n) => {
    Sme.indexOf(n) === -1 && delete Mf[n];
  }), Nj.forEach((n) => {
    const o = n.mixout ? n.mixout() : {};
    if (Object.keys(o).forEach((a) => {
      typeof o[a] == "function" && (r[a] = o[a]), typeof o[a] == "object" && Object.keys(o[a]).forEach((i) => {
        r[a] || (r[a] = {}), r[a][i] = o[a][i];
      });
    }), n.hooks) {
      const a = n.hooks();
      Object.keys(a).forEach((i) => {
        af[i] || (af[i] = []), af[i].push(a[i]);
      });
    }
    n.provides && n.provides(Mf);
  }), r;
}
function n3(e, t) {
  for (var r = arguments.length, n = new Array(r > 2 ? r - 2 : 0), o = 2; o < r; o++)
    n[o - 2] = arguments[o];
  return (af[e] || []).forEach((a) => {
    t = a.apply(null, [t, ...n]);
  }), t;
}
function du(e) {
  for (var t = arguments.length, r = new Array(t > 1 ? t - 1 : 0), n = 1; n < t; n++)
    r[n - 1] = arguments[n];
  (af[e] || []).forEach((o) => {
    o.apply(null, r);
  });
}
function Ql() {
  const e = arguments[0], t = Array.prototype.slice.call(arguments, 1);
  return Mf[e] ? Mf[e].apply(null, t) : void 0;
}
function o3(e) {
  e.prefix === "fa" && (e.prefix = "fas");
  let {
    iconName: t
  } = e;
  const r = e.prefix || Jl();
  if (t)
    return t = Fc(r, t) || t, Cj(tU.definitions, r, t) || Cj(pa.styles, r, t);
}
const tU = new Eme(), Cme = () => {
  We.autoReplaceSvg = !1, We.observeMutations = !1, du("noAuto");
}, Ame = {
  i2svg: function() {
    let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    return Li ? (du("beforeI2svg", e), Ql("pseudoElements2svg", e), Ql("i2svg", e)) : Promise.reject(new Error("Operation requires a DOM of some kind."));
  },
  watch: function() {
    let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    const {
      autoReplaceSvgRoot: t
    } = e;
    We.autoReplaceSvg === !1 && (We.autoReplaceSvg = !0), We.observeMutations = !0, ume(() => {
      Nme({
        autoReplaceSvgRoot: t
      }), du("watch", e);
    });
  }
}, _me = {
  icon: (e) => {
    if (e === null)
      return null;
    if (typeof e == "object" && e.prefix && e.iconName)
      return {
        prefix: e.prefix,
        iconName: Fc(e.prefix, e.iconName) || e.iconName
      };
    if (Array.isArray(e) && e.length === 2) {
      const t = e[1].indexOf("fa-") === 0 ? e[1].slice(3) : e[1], r = c0(e[0]);
      return {
        prefix: r,
        iconName: Fc(r, t) || t
      };
    }
    if (typeof e == "string" && (e.indexOf("".concat(We.cssPrefix, "-")) > -1 || e.match(Xpe))) {
      const t = u0(e.split(" "), {
        skipLookups: !0
      });
      return {
        prefix: t.prefix || Jl(),
        iconName: Fc(t.prefix, t.iconName) || t.iconName
      };
    }
    if (typeof e == "string") {
      const t = Jl();
      return {
        prefix: t,
        iconName: Fc(t, e) || e
      };
    }
  }
}, Qn = {
  noAuto: Cme,
  config: We,
  dom: Ame,
  parse: _me,
  library: tU,
  findIconDefinition: o3,
  toHtml: tb
}, Nme = function() {
  let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  const {
    autoReplaceSvgRoot: t = Dr
  } = e;
  (Object.keys(pa.styles).length > 0 || We.autoFetchSvg) && Li && We.autoReplaceSvg && Qn.dom.i2svg({
    node: t
  });
};
function f0(e, t) {
  return Object.defineProperty(e, "abstract", {
    get: t
  }), Object.defineProperty(e, "html", {
    get: function() {
      return e.abstract.map((r) => tb(r));
    }
  }), Object.defineProperty(e, "node", {
    get: function() {
      if (!Li) return;
      const r = Dr.createElement("div");
      return r.innerHTML = e.html, r.children;
    }
  }), e;
}
function jme(e) {
  let {
    children: t,
    main: r,
    mask: n,
    attributes: o,
    styles: a,
    transform: i
  } = e;
  if (nP(i) && r.found && !n.found) {
    const {
      width: s,
      height: l
    } = r, c = {
      x: s / l / 2,
      y: 0.5
    };
    o.style = l0(he(he({}, a), {}, {
      "transform-origin": "".concat(c.x + i.x / 16, "em ").concat(c.y + i.y / 16, "em")
    }));
  }
  return [{
    tag: "svg",
    attributes: o,
    children: t
  }];
}
function Ime(e) {
  let {
    prefix: t,
    iconName: r,
    children: n,
    attributes: o,
    symbol: a
  } = e;
  const i = a === !0 ? "".concat(t, "-").concat(We.cssPrefix, "-").concat(r) : a;
  return [{
    tag: "svg",
    attributes: {
      style: "display: none;"
    },
    children: [{
      tag: "symbol",
      attributes: he(he({}, o), {}, {
        id: i
      }),
      children: n
    }]
  }];
}
function iP(e) {
  const {
    icons: {
      main: t,
      mask: r
    },
    prefix: n,
    iconName: o,
    transform: a,
    symbol: i,
    title: s,
    maskId: l,
    titleId: c,
    extra: u,
    watchable: f = !1
  } = e, {
    width: p,
    height: v
  } = r.found ? r : t, x = Ipe.includes(n), b = [We.replacementClass, o ? "".concat(We.cssPrefix, "-").concat(o) : ""].filter((h) => u.classes.indexOf(h) === -1).filter((h) => h !== "" || !!h).concat(u.classes).join(" ");
  let m = {
    children: [],
    attributes: he(he({}, u.attributes), {}, {
      "data-prefix": n,
      "data-icon": o,
      class: b,
      role: u.attributes.role || "img",
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 ".concat(p, " ").concat(v)
    })
  };
  const w = x && !~u.classes.indexOf("fa-fw") ? {
    width: "".concat(p / v * 16 * 0.0625, "em")
  } : {};
  f && (m.attributes[fu] = ""), s && (m.children.push({
    tag: "title",
    attributes: {
      id: m.attributes["aria-labelledby"] || "title-".concat(c || gh())
    },
    children: [s]
  }), delete m.attributes.title);
  const $ = he(he({}, m), {}, {
    prefix: n,
    iconName: o,
    main: t,
    mask: r,
    maskId: l,
    transform: a,
    symbol: i,
    styles: he(he({}, w), u.styles)
  }), {
    children: E,
    attributes: S
  } = r.found && t.found ? Ql("generateAbstractMask", $) || {
    children: [],
    attributes: {}
  } : Ql("generateAbstractIcon", $) || {
    children: [],
    attributes: {}
  };
  return $.children = E, $.attributes = S, i ? Ime($) : jme($);
}
function jj(e) {
  const {
    content: t,
    width: r,
    height: n,
    transform: o,
    title: a,
    extra: i,
    watchable: s = !1
  } = e, l = he(he(he({}, i.attributes), a ? {
    title: a
  } : {}), {}, {
    class: i.classes.join(" ")
  });
  s && (l[fu] = "");
  const c = he({}, i.styles);
  nP(o) && (c.transform = sme({
    transform: o,
    startCentered: !0,
    width: r,
    height: n
  }), c["-webkit-transform"] = c.transform);
  const u = l0(c);
  u.length > 0 && (l.style = u);
  const f = [];
  return f.push({
    tag: "span",
    attributes: l,
    children: [t]
  }), a && f.push({
    tag: "span",
    attributes: {
      class: "sr-only"
    },
    children: [a]
  }), f;
}
function Tme(e) {
  const {
    content: t,
    title: r,
    extra: n
  } = e, o = he(he(he({}, n.attributes), r ? {
    title: r
  } : {}), {}, {
    class: n.classes.join(" ")
  }), a = l0(n.styles);
  a.length > 0 && (o.style = a);
  const i = [];
  return i.push({
    tag: "span",
    attributes: o,
    children: [t]
  }), r && i.push({
    tag: "span",
    attributes: {
      class: "sr-only"
    },
    children: [r]
  }), i;
}
const {
  styles: qw
} = pa;
function a3(e) {
  const t = e[0], r = e[1], [n] = e.slice(4);
  let o = null;
  return Array.isArray(n) ? o = {
    tag: "g",
    attributes: {
      class: "".concat(We.cssPrefix, "-").concat(Yw.GROUP)
    },
    children: [{
      tag: "path",
      attributes: {
        class: "".concat(We.cssPrefix, "-").concat(Yw.SECONDARY),
        fill: "currentColor",
        d: n[0]
      }
    }, {
      tag: "path",
      attributes: {
        class: "".concat(We.cssPrefix, "-").concat(Yw.PRIMARY),
        fill: "currentColor",
        d: n[1]
      }
    }]
  } : o = {
    tag: "path",
    attributes: {
      fill: "currentColor",
      d: n
    }
  }, {
    found: !0,
    width: t,
    height: r,
    icon: o
  };
}
const Mme = {
  found: !1,
  width: 512,
  height: 512
};
function Rme(e, t) {
  !zW && !We.showMissingIcons && e && console.error('Icon with name "'.concat(e, '" and prefix "').concat(t, '" is missing.'));
}
function i3(e, t) {
  let r = t;
  return t === "fa" && We.styleDefault !== null && (t = Jl()), new Promise((n, o) => {
    if (r === "fa") {
      const a = ZW(e) || {};
      e = a.iconName || e, t = a.prefix || t;
    }
    if (e && t && qw[t] && qw[t][e]) {
      const a = qw[t][e];
      return n(a3(a));
    }
    Rme(e, t), n(he(he({}, Mme), {}, {
      icon: We.showMissingIcons && e ? Ql("missingIconAbstract") || {} : {}
    }));
  });
}
const Ij = () => {
}, s3 = We.measurePerformance && Bb && Bb.mark && Bb.measure ? Bb : {
  mark: Ij,
  measure: Ij
}, Zm = 'FA "6.7.2"', zme = (e) => (s3.mark("".concat(Zm, " ").concat(e, " begins")), () => rU(e)), rU = (e) => {
  s3.mark("".concat(Zm, " ").concat(e, " ends")), s3.measure("".concat(Zm, " ").concat(e), "".concat(Zm, " ").concat(e, " begins"), "".concat(Zm, " ").concat(e, " ends"));
};
var sP = {
  begin: zme,
  end: rU
};
const Xy = () => {
};
function Tj(e) {
  return typeof (e.getAttribute ? e.getAttribute(fu) : null) == "string";
}
function Fme(e) {
  const t = e.getAttribute ? e.getAttribute(ZS) : null, r = e.getAttribute ? e.getAttribute(eP) : null;
  return t && r;
}
function Dme(e) {
  return e && e.classList && e.classList.contains && e.classList.contains(We.replacementClass);
}
function Lme() {
  return We.autoReplaceSvg === !0 ? Ky.replace : Ky[We.autoReplaceSvg] || Ky.replace;
}
function Vme(e) {
  return Dr.createElementNS("http://www.w3.org/2000/svg", e);
}
function Wme(e) {
  return Dr.createElement(e);
}
function nU(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  const {
    ceFn: r = e.tag === "svg" ? Vme : Wme
  } = t;
  if (typeof e == "string")
    return Dr.createTextNode(e);
  const n = r(e.tag);
  return Object.keys(e.attributes || []).forEach(function(o) {
    n.setAttribute(o, e.attributes[o]);
  }), (e.children || []).forEach(function(o) {
    n.appendChild(nU(o, {
      ceFn: r
    }));
  }), n;
}
function Ume(e) {
  let t = " ".concat(e.outerHTML, " ");
  return t = "".concat(t, "Font Awesome fontawesome.com "), t;
}
const Ky = {
  replace: function(e) {
    const t = e[0];
    if (t.parentNode)
      if (e[1].forEach((r) => {
        t.parentNode.insertBefore(nU(r), t);
      }), t.getAttribute(fu) === null && We.keepOriginalSource) {
        let r = Dr.createComment(Ume(t));
        t.parentNode.replaceChild(r, t);
      } else
        t.remove();
  },
  nest: function(e) {
    const t = e[0], r = e[1];
    if (~rP(t).indexOf(We.replacementClass))
      return Ky.replace(e);
    const n = new RegExp("".concat(We.cssPrefix, "-.*"));
    if (delete r[0].attributes.id, r[0].attributes.class) {
      const a = r[0].attributes.class.split(" ").reduce((i, s) => (s === We.replacementClass || s.match(n) ? i.toSvg.push(s) : i.toNode.push(s), i), {
        toNode: [],
        toSvg: []
      });
      r[0].attributes.class = a.toSvg.join(" "), a.toNode.length === 0 ? t.removeAttribute("class") : t.setAttribute("class", a.toNode.join(" "));
    }
    const o = r.map((a) => tb(a)).join(`
`);
    t.setAttribute(fu, ""), t.innerHTML = o;
  }
};
function Mj(e) {
  e();
}
function oU(e, t) {
  const r = typeof t == "function" ? t : Xy;
  if (e.length === 0)
    r();
  else {
    let n = Mj;
    We.mutateApproach === Gpe && (n = Kl.requestAnimationFrame || Mj), n(() => {
      const o = Lme(), a = sP.begin("mutate");
      e.map(o), a(), r();
    });
  }
}
let lP = !1;
function aU() {
  lP = !0;
}
function l3() {
  lP = !1;
}
let Yv = null;
function Rj(e) {
  if (!kj || !We.observeMutations)
    return;
  const {
    treeCallback: t = Xy,
    nodeCallback: r = Xy,
    pseudoElementsCallback: n = Xy,
    observeMutationsRoot: o = Dr
  } = e;
  Yv = new kj((a) => {
    if (lP) return;
    const i = Jl();
    Md(a).forEach((s) => {
      if (s.type === "childList" && s.addedNodes.length > 0 && !Tj(s.addedNodes[0]) && (We.searchPseudoElements && n(s.target), t(s.target)), s.type === "attributes" && s.target.parentNode && We.searchPseudoElements && n(s.target.parentNode), s.type === "attributes" && Tj(s.target) && ~Qpe.indexOf(s.attributeName))
        if (s.attributeName === "class" && Fme(s.target)) {
          const {
            prefix: l,
            iconName: c
          } = u0(rP(s.target));
          s.target.setAttribute(ZS, l || i), c && s.target.setAttribute(eP, c);
        } else Dme(s.target) && r(s.target);
    });
  }), Li && Yv.observe(o, {
    childList: !0,
    attributes: !0,
    characterData: !0,
    subtree: !0
  });
}
function Yme() {
  Yv && Yv.disconnect();
}
function Hme(e) {
  const t = e.getAttribute("style");
  let r = [];
  return t && (r = t.split(";").reduce((n, o) => {
    const a = o.split(":"), i = a[0], s = a.slice(1);
    return i && s.length > 0 && (n[i] = s.join(":").trim()), n;
  }, {})), r;
}
function Gme(e) {
  const t = e.getAttribute("data-prefix"), r = e.getAttribute("data-icon"), n = e.innerText !== void 0 ? e.innerText.trim() : "";
  let o = u0(rP(e));
  return o.prefix || (o.prefix = Jl()), t && r && (o.prefix = t, o.iconName = r), o.iconName && o.prefix || (o.prefix && n.length > 0 && (o.iconName = bme(o.prefix, e.innerText) || aP(o.prefix, HW(e.innerText))), !o.iconName && We.autoFetchSvg && e.firstChild && e.firstChild.nodeType === Node.TEXT_NODE && (o.iconName = e.firstChild.data)), o;
}
function qme(e) {
  const t = Md(e.attributes).reduce((o, a) => (o.name !== "class" && o.name !== "style" && (o[a.name] = a.value), o), {}), r = e.getAttribute("title"), n = e.getAttribute("data-fa-title-id");
  return We.autoA11y && (r ? t["aria-labelledby"] = "".concat(We.replacementClass, "-title-").concat(n || gh()) : (t["aria-hidden"] = "true", t.focusable = "false")), t;
}
function Bme() {
  return {
    iconName: null,
    title: null,
    titleId: null,
    prefix: null,
    transform: da,
    symbol: !1,
    mask: {
      iconName: null,
      prefix: null,
      rest: []
    },
    maskId: null,
    extra: {
      classes: [],
      styles: {},
      attributes: {}
    }
  };
}
function zj(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {
    styleParser: !0
  };
  const {
    iconName: r,
    prefix: n,
    rest: o
  } = Gme(e), a = qme(e), i = n3("parseNodeAttributes", {}, e);
  let s = t.styleParser ? Hme(e) : [];
  return he({
    iconName: r,
    title: e.getAttribute("title"),
    titleId: e.getAttribute("data-fa-title-id"),
    prefix: n,
    transform: da,
    mask: {
      iconName: null,
      prefix: null,
      rest: []
    },
    maskId: null,
    symbol: !1,
    extra: {
      classes: o,
      styles: s,
      attributes: a
    }
  }, i);
}
const {
  styles: Xme
} = pa;
function iU(e) {
  const t = We.autoReplaceSvg === "nest" ? zj(e, {
    styleParser: !1
  }) : zj(e);
  return ~t.extra.classes.indexOf(DW) ? Ql("generateLayersText", e, t) : Ql("generateSvgReplacementMutation", e, t);
}
function Kme() {
  return [..._pe, ...K5];
}
function Fj(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
  if (!Li) return Promise.resolve();
  const r = Dr.documentElement.classList, n = (u) => r.add("".concat(Ej, "-").concat(u)), o = (u) => r.remove("".concat(Ej, "-").concat(u)), a = We.autoFetchSvg ? Kme() : jW.concat(Object.keys(Xme));
  a.includes("fa") || a.push("fa");
  const i = [".".concat(DW, ":not([").concat(fu, "])")].concat(a.map((u) => ".".concat(u, ":not([").concat(fu, "])"))).join(", ");
  if (i.length === 0)
    return Promise.resolve();
  let s = [];
  try {
    s = Md(e.querySelectorAll(i));
  } catch {
  }
  if (s.length > 0)
    n("pending"), o("complete");
  else
    return Promise.resolve();
  const l = sP.begin("onTree"), c = s.reduce((u, f) => {
    try {
      const p = iU(f);
      p && u.push(p);
    } catch (p) {
      zW || p.name === "MissingIcon" && console.error(p);
    }
    return u;
  }, []);
  return new Promise((u, f) => {
    Promise.all(c).then((p) => {
      oU(p, () => {
        n("active"), n("complete"), o("pending"), typeof t == "function" && t(), l(), u();
      });
    }).catch((p) => {
      l(), f(p);
    });
  });
}
function Jme(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
  iU(e).then((r) => {
    r && oU([r], t);
  });
}
function Qme(e) {
  return function(t) {
    let r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    const n = (t || {}).icon ? t : o3(t || {});
    let {
      mask: o
    } = r;
    return o && (o = (o || {}).icon ? o : o3(o || {})), e(n, he(he({}, r), {}, {
      mask: o
    }));
  };
}
const Zme = function(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  const {
    transform: r = da,
    symbol: n = !1,
    mask: o = null,
    maskId: a = null,
    title: i = null,
    titleId: s = null,
    classes: l = [],
    attributes: c = {},
    styles: u = {}
  } = t;
  if (!e) return;
  const {
    prefix: f,
    iconName: p,
    icon: v
  } = e;
  return f0(he({
    type: "icon"
  }, e), () => (du("beforeDOMElementCreation", {
    iconDefinition: e,
    params: t
  }), We.autoA11y && (i ? c["aria-labelledby"] = "".concat(We.replacementClass, "-title-").concat(s || gh()) : (c["aria-hidden"] = "true", c.focusable = "false")), iP({
    icons: {
      main: a3(v),
      mask: o ? a3(o.icon) : {
        found: !1,
        width: null,
        height: null,
        icon: {}
      }
    },
    prefix: f,
    iconName: p,
    transform: he(he({}, da), r),
    symbol: n,
    title: i,
    maskId: a,
    titleId: s,
    extra: {
      attributes: c,
      styles: u,
      classes: l
    }
  })));
};
var ege = {
  mixout() {
    return {
      icon: Qme(Zme)
    };
  },
  hooks() {
    return {
      mutationObserverCallbacks(e) {
        return e.treeCallback = Fj, e.nodeCallback = Jme, e;
      }
    };
  },
  provides(e) {
    e.i2svg = function(t) {
      const {
        node: r = Dr,
        callback: n = () => {
        }
      } = t;
      return Fj(r, n);
    }, e.generateSvgReplacementMutation = function(t, r) {
      const {
        iconName: n,
        title: o,
        titleId: a,
        prefix: i,
        transform: s,
        symbol: l,
        mask: c,
        maskId: u,
        extra: f
      } = r;
      return new Promise((p, v) => {
        Promise.all([i3(n, i), c.iconName ? i3(c.iconName, c.prefix) : Promise.resolve({
          found: !1,
          width: 512,
          height: 512,
          icon: {}
        })]).then((x) => {
          let [b, m] = x;
          p([t, iP({
            icons: {
              main: b,
              mask: m
            },
            prefix: i,
            iconName: n,
            transform: s,
            symbol: l,
            maskId: u,
            title: o,
            titleId: a,
            extra: f,
            watchable: !0
          })]);
        }).catch(v);
      });
    }, e.generateAbstractIcon = function(t) {
      let {
        children: r,
        attributes: n,
        main: o,
        transform: a,
        styles: i
      } = t;
      const s = l0(i);
      s.length > 0 && (n.style = s);
      let l;
      return nP(a) && (l = Ql("generateAbstractTransformGrouping", {
        main: o,
        transform: a,
        containerWidth: o.width,
        iconWidth: o.width
      })), r.push(l || o.icon), {
        children: r,
        attributes: n
      };
    };
  }
}, tge = {
  mixout() {
    return {
      layer(e) {
        let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        const {
          classes: r = []
        } = t;
        return f0({
          type: "layer"
        }, () => {
          du("beforeDOMElementCreation", {
            assembler: e,
            params: t
          });
          let n = [];
          return e((o) => {
            Array.isArray(o) ? o.map((a) => {
              n = n.concat(a.abstract);
            }) : n = n.concat(o.abstract);
          }), [{
            tag: "span",
            attributes: {
              class: ["".concat(We.cssPrefix, "-layers"), ...r].join(" ")
            },
            children: n
          }];
        });
      }
    };
  }
}, rge = {
  mixout() {
    return {
      counter(e) {
        let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        const {
          title: r = null,
          classes: n = [],
          attributes: o = {},
          styles: a = {}
        } = t;
        return f0({
          type: "counter",
          content: e
        }, () => (du("beforeDOMElementCreation", {
          content: e,
          params: t
        }), Tme({
          content: e.toString(),
          title: r,
          extra: {
            attributes: o,
            styles: a,
            classes: ["".concat(We.cssPrefix, "-layers-counter"), ...n]
          }
        })));
      }
    };
  }
}, nge = {
  mixout() {
    return {
      text(e) {
        let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        const {
          transform: r = da,
          title: n = null,
          classes: o = [],
          attributes: a = {},
          styles: i = {}
        } = t;
        return f0({
          type: "text",
          content: e
        }, () => (du("beforeDOMElementCreation", {
          content: e,
          params: t
        }), jj({
          content: e,
          transform: he(he({}, da), r),
          title: n,
          extra: {
            attributes: a,
            styles: i,
            classes: ["".concat(We.cssPrefix, "-layers-text"), ...o]
          }
        })));
      }
    };
  },
  provides(e) {
    e.generateLayersText = function(t, r) {
      const {
        title: n,
        transform: o,
        extra: a
      } = r;
      let i = null, s = null;
      if (_W) {
        const l = parseInt(getComputedStyle(t).fontSize, 10), c = t.getBoundingClientRect();
        i = c.width / l, s = c.height / l;
      }
      return We.autoA11y && !n && (a.attributes["aria-hidden"] = "true"), Promise.resolve([t, jj({
        content: t.innerHTML,
        width: i,
        height: s,
        transform: o,
        title: n,
        extra: a,
        watchable: !0
      })]);
    };
  }
};
const oge = new RegExp('"', "ug"), Dj = [1105920, 1112319], Lj = he(he(he(he({}, {
  FontAwesome: {
    normal: "fas",
    400: "fas"
  }
}), Ppe), Ype), zpe), c3 = Object.keys(Lj).reduce((e, t) => (e[t.toLowerCase()] = Lj[t], e), {}), age = Object.keys(c3).reduce((e, t) => {
  const r = c3[t];
  return e[t] = r[900] || [...Object.entries(r)][0][1], e;
}, {});
function ige(e) {
  const t = e.replace(oge, ""), r = dme(t, 0), n = r >= Dj[0] && r <= Dj[1], o = t.length === 2 ? t[0] === t[1] : !1;
  return {
    value: HW(o ? t[0] : t),
    isSecondary: n || o
  };
}
function sge(e, t) {
  const r = e.replace(/^['"]|['"]$/g, "").toLowerCase(), n = parseInt(t), o = isNaN(n) ? "normal" : n;
  return (c3[r] || {})[o] || age[r];
}
function Vj(e, t) {
  const r = "".concat(Hpe).concat(t.replace(":", "-"));
  return new Promise((n, o) => {
    if (e.getAttribute(r) !== null)
      return n();
    const a = Md(e.children).filter((f) => f.getAttribute(Q5) === t)[0], i = Kl.getComputedStyle(e, t), s = i.getPropertyValue("font-family"), l = s.match(Kpe), c = i.getPropertyValue("font-weight"), u = i.getPropertyValue("content");
    if (a && !l)
      return e.removeChild(a), n();
    if (l && u !== "none" && u !== "") {
      const f = i.getPropertyValue("content");
      let p = sge(s, c);
      const {
        value: v,
        isSecondary: x
      } = ige(f), b = l[0].startsWith("FontAwesome");
      let m = aP(p, v), w = m;
      if (b) {
        const $ = yme(v);
        $.iconName && $.prefix && (m = $.iconName, p = $.prefix);
      }
      if (m && !x && (!a || a.getAttribute(ZS) !== p || a.getAttribute(eP) !== w)) {
        e.setAttribute(r, w), a && e.removeChild(a);
        const $ = Bme(), {
          extra: E
        } = $;
        E.attributes[Q5] = t, i3(m, p).then((S) => {
          const h = iP(he(he({}, $), {}, {
            icons: {
              main: S,
              mask: eU()
            },
            prefix: p,
            iconName: w,
            extra: E,
            watchable: !0
          })), U = Dr.createElementNS("http://www.w3.org/2000/svg", "svg");
          t === "::before" ? e.insertBefore(U, e.firstChild) : e.appendChild(U), U.outerHTML = h.map((G) => tb(G)).join(`
`), e.removeAttribute(r), n();
        }).catch(o);
      } else
        n();
    } else
      n();
  });
}
function lge(e) {
  return Promise.all([Vj(e, "::before"), Vj(e, "::after")]);
}
function cge(e) {
  return e.parentNode !== document.head && !~qpe.indexOf(e.tagName.toUpperCase()) && !e.getAttribute(Q5) && (!e.parentNode || e.parentNode.tagName !== "svg");
}
function Wj(e) {
  if (Li)
    return new Promise((t, r) => {
      const n = Md(e.querySelectorAll("*")).filter(cge).map(lge), o = sP.begin("searchPseudoElements");
      aU(), Promise.all(n).then(() => {
        o(), l3(), t();
      }).catch(() => {
        o(), l3(), r();
      });
    });
}
var uge = {
  hooks() {
    return {
      mutationObserverCallbacks(e) {
        return e.pseudoElementsCallback = Wj, e;
      }
    };
  },
  provides(e) {
    e.pseudoElements2svg = function(t) {
      const {
        node: r = Dr
      } = t;
      We.searchPseudoElements && Wj(r);
    };
  }
};
let Uj = !1;
var fge = {
  mixout() {
    return {
      dom: {
        unwatch() {
          aU(), Uj = !0;
        }
      }
    };
  },
  hooks() {
    return {
      bootstrap() {
        Rj(n3("mutationObserverCallbacks", {}));
      },
      noAuto() {
        Yme();
      },
      watch(e) {
        const {
          observeMutationsRoot: t
        } = e;
        Uj ? l3() : Rj(n3("mutationObserverCallbacks", {
          observeMutationsRoot: t
        }));
      }
    };
  }
};
const Yj = (e) => {
  let t = {
    size: 16,
    x: 0,
    y: 0,
    flipX: !1,
    flipY: !1,
    rotate: 0
  };
  return e.toLowerCase().split(" ").reduce((r, n) => {
    const o = n.toLowerCase().split("-"), a = o[0];
    let i = o.slice(1).join("-");
    if (a && i === "h")
      return r.flipX = !0, r;
    if (a && i === "v")
      return r.flipY = !0, r;
    if (i = parseFloat(i), isNaN(i))
      return r;
    switch (a) {
      case "grow":
        r.size = r.size + i;
        break;
      case "shrink":
        r.size = r.size - i;
        break;
      case "left":
        r.x = r.x - i;
        break;
      case "right":
        r.x = r.x + i;
        break;
      case "up":
        r.y = r.y - i;
        break;
      case "down":
        r.y = r.y + i;
        break;
      case "rotate":
        r.rotate = r.rotate + i;
        break;
    }
    return r;
  }, t);
};
var dge = {
  mixout() {
    return {
      parse: {
        transform: (e) => Yj(e)
      }
    };
  },
  hooks() {
    return {
      parseNodeAttributes(e, t) {
        const r = t.getAttribute("data-fa-transform");
        return r && (e.transform = Yj(r)), e;
      }
    };
  },
  provides(e) {
    e.generateAbstractTransformGrouping = function(t) {
      let {
        main: r,
        transform: n,
        containerWidth: o,
        iconWidth: a
      } = t;
      const i = {
        transform: "translate(".concat(o / 2, " 256)")
      }, s = "translate(".concat(n.x * 32, ", ").concat(n.y * 32, ") "), l = "scale(".concat(n.size / 16 * (n.flipX ? -1 : 1), ", ").concat(n.size / 16 * (n.flipY ? -1 : 1), ") "), c = "rotate(".concat(n.rotate, " 0 0)"), u = {
        transform: "".concat(s, " ").concat(l, " ").concat(c)
      }, f = {
        transform: "translate(".concat(a / 2 * -1, " -256)")
      }, p = {
        outer: i,
        inner: u,
        path: f
      };
      return {
        tag: "g",
        attributes: he({}, p.outer),
        children: [{
          tag: "g",
          attributes: he({}, p.inner),
          children: [{
            tag: r.icon.tag,
            children: r.icon.children,
            attributes: he(he({}, r.icon.attributes), p.path)
          }]
        }]
      };
    };
  }
};
const Bw = {
  x: 0,
  y: 0,
  width: "100%",
  height: "100%"
};
function Hj(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0;
  return e.attributes && (e.attributes.fill || t) && (e.attributes.fill = "black"), e;
}
function pge(e) {
  return e.tag === "g" ? e.children : [e];
}
var mge = {
  hooks() {
    return {
      parseNodeAttributes(e, t) {
        const r = t.getAttribute("data-fa-mask"), n = r ? u0(r.split(" ").map((o) => o.trim())) : eU();
        return n.prefix || (n.prefix = Jl()), e.mask = n, e.maskId = t.getAttribute("data-fa-mask-id"), e;
      }
    };
  },
  provides(e) {
    e.generateAbstractMask = function(t) {
      let {
        children: r,
        attributes: n,
        main: o,
        mask: a,
        maskId: i,
        transform: s
      } = t;
      const {
        width: l,
        icon: c
      } = o, {
        width: u,
        icon: f
      } = a, p = ime({
        transform: s,
        containerWidth: u,
        iconWidth: l
      }), v = {
        tag: "rect",
        attributes: he(he({}, Bw), {}, {
          fill: "white"
        })
      }, x = c.children ? {
        children: c.children.map(Hj)
      } : {}, b = {
        tag: "g",
        attributes: he({}, p.inner),
        children: [Hj(he({
          tag: c.tag,
          attributes: he(he({}, c.attributes), p.path)
        }, x))]
      }, m = {
        tag: "g",
        attributes: he({}, p.outer),
        children: [b]
      }, w = "mask-".concat(i || gh()), $ = "clip-".concat(i || gh()), E = {
        tag: "mask",
        attributes: he(he({}, Bw), {}, {
          id: w,
          maskUnits: "userSpaceOnUse",
          maskContentUnits: "userSpaceOnUse"
        }),
        children: [v, m]
      }, S = {
        tag: "defs",
        children: [{
          tag: "clipPath",
          attributes: {
            id: $
          },
          children: pge(f)
        }, E]
      };
      return r.push(S, {
        tag: "rect",
        attributes: he({
          fill: "currentColor",
          "clip-path": "url(#".concat($, ")"),
          mask: "url(#".concat(w, ")")
        }, Bw)
      }), {
        children: r,
        attributes: n
      };
    };
  }
}, gge = {
  provides(e) {
    let t = !1;
    Kl.matchMedia && (t = Kl.matchMedia("(prefers-reduced-motion: reduce)").matches), e.missingIconAbstract = function() {
      const r = [], n = {
        fill: "currentColor"
      }, o = {
        attributeType: "XML",
        repeatCount: "indefinite",
        dur: "2s"
      };
      r.push({
        tag: "path",
        attributes: he(he({}, n), {}, {
          d: "M156.5,447.7l-12.6,29.5c-18.7-9.5-35.9-21.2-51.5-34.9l22.7-22.7C127.6,430.5,141.5,440,156.5,447.7z M40.6,272H8.5 c1.4,21.2,5.4,41.7,11.7,61.1L50,321.2C45.1,305.5,41.8,289,40.6,272z M40.6,240c1.4-18.8,5.2-37,11.1-54.1l-29.5-12.6 C14.7,194.3,10,216.7,8.5,240H40.6z M64.3,156.5c7.8-14.9,17.2-28.8,28.1-41.5L69.7,92.3c-13.7,15.6-25.5,32.8-34.9,51.5 L64.3,156.5z M397,419.6c-13.9,12-29.4,22.3-46.1,30.4l11.9,29.8c20.7-9.9,39.8-22.6,56.9-37.6L397,419.6z M115,92.4 c13.9-12,29.4-22.3,46.1-30.4l-11.9-29.8c-20.7,9.9-39.8,22.6-56.8,37.6L115,92.4z M447.7,355.5c-7.8,14.9-17.2,28.8-28.1,41.5 l22.7,22.7c13.7-15.6,25.5-32.9,34.9-51.5L447.7,355.5z M471.4,272c-1.4,18.8-5.2,37-11.1,54.1l29.5,12.6 c7.5-21.1,12.2-43.5,13.6-66.8H471.4z M321.2,462c-15.7,5-32.2,8.2-49.2,9.4v32.1c21.2-1.4,41.7-5.4,61.1-11.7L321.2,462z M240,471.4c-18.8-1.4-37-5.2-54.1-11.1l-12.6,29.5c21.1,7.5,43.5,12.2,66.8,13.6V471.4z M462,190.8c5,15.7,8.2,32.2,9.4,49.2h32.1 c-1.4-21.2-5.4-41.7-11.7-61.1L462,190.8z M92.4,397c-12-13.9-22.3-29.4-30.4-46.1l-29.8,11.9c9.9,20.7,22.6,39.8,37.6,56.9 L92.4,397z M272,40.6c18.8,1.4,36.9,5.2,54.1,11.1l12.6-29.5C317.7,14.7,295.3,10,272,8.5V40.6z M190.8,50 c15.7-5,32.2-8.2,49.2-9.4V8.5c-21.2,1.4-41.7,5.4-61.1,11.7L190.8,50z M442.3,92.3L419.6,115c12,13.9,22.3,29.4,30.5,46.1 l29.8-11.9C470,128.5,457.3,109.4,442.3,92.3z M397,92.4l22.7-22.7c-15.6-13.7-32.8-25.5-51.5-34.9l-12.6,29.5 C370.4,72.1,384.4,81.5,397,92.4z"
        })
      });
      const a = he(he({}, o), {}, {
        attributeName: "opacity"
      }), i = {
        tag: "circle",
        attributes: he(he({}, n), {}, {
          cx: "256",
          cy: "364",
          r: "28"
        }),
        children: []
      };
      return t || i.children.push({
        tag: "animate",
        attributes: he(he({}, o), {}, {
          attributeName: "r",
          values: "28;14;28;28;14;28;"
        })
      }, {
        tag: "animate",
        attributes: he(he({}, a), {}, {
          values: "1;0;1;1;0;1;"
        })
      }), r.push(i), r.push({
        tag: "path",
        attributes: he(he({}, n), {}, {
          opacity: "1",
          d: "M263.7,312h-16c-6.6,0-12-5.4-12-12c0-71,77.4-63.9,77.4-107.8c0-20-17.8-40.2-57.4-40.2c-29.1,0-44.3,9.6-59.2,28.7 c-3.9,5-11.1,6-16.2,2.4l-13.1-9.2c-5.6-3.9-6.9-11.8-2.6-17.2c21.2-27.2,46.4-44.7,91.2-44.7c52.3,0,97.4,29.8,97.4,80.2 c0,67.6-77.4,63.5-77.4,107.8C275.7,306.6,270.3,312,263.7,312z"
        }),
        children: t ? [] : [{
          tag: "animate",
          attributes: he(he({}, a), {}, {
            values: "1;0;0;0;0;1;"
          })
        }]
      }), t || r.push({
        tag: "path",
        attributes: he(he({}, n), {}, {
          opacity: "0",
          d: "M232.5,134.5l7,168c0.3,6.4,5.6,11.5,12,11.5h9c6.4,0,11.7-5.1,12-11.5l7-168c0.3-6.8-5.2-12.5-12-12.5h-23 C237.7,122,232.2,127.7,232.5,134.5z"
        }),
        children: [{
          tag: "animate",
          attributes: he(he({}, a), {}, {
            values: "0;0;1;1;0;0;"
          })
        }]
      }), {
        tag: "g",
        attributes: {
          class: "missing"
        },
        children: r
      };
    };
  }
}, hge = {
  hooks() {
    return {
      parseNodeAttributes(e, t) {
        const r = t.getAttribute("data-fa-symbol"), n = r === null ? !1 : r === "" ? !0 : r;
        return e.symbol = n, e;
      }
    };
  }
}, bge = [cme, ege, tge, rge, nge, uge, fge, dge, mge, gge, hge];
Pme(bge, {
  mixoutsTo: Qn
});
Qn.noAuto;
Qn.config;
Qn.library;
Qn.dom;
const u3 = Qn.parse;
Qn.findIconDefinition;
Qn.toHtml;
const yge = Qn.icon;
Qn.layer;
Qn.text;
Qn.counter;
function vge(e) {
  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e;
}
var Kb = { exports: {} }, Xw = { exports: {} }, Xt = {};
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var Gj;
function xge() {
  if (Gj) return Xt;
  Gj = 1;
  var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, r = e ? Symbol.for("react.portal") : 60106, n = e ? Symbol.for("react.fragment") : 60107, o = e ? Symbol.for("react.strict_mode") : 60108, a = e ? Symbol.for("react.profiler") : 60114, i = e ? Symbol.for("react.provider") : 60109, s = e ? Symbol.for("react.context") : 60110, l = e ? Symbol.for("react.async_mode") : 60111, c = e ? Symbol.for("react.concurrent_mode") : 60111, u = e ? Symbol.for("react.forward_ref") : 60112, f = e ? Symbol.for("react.suspense") : 60113, p = e ? Symbol.for("react.suspense_list") : 60120, v = e ? Symbol.for("react.memo") : 60115, x = e ? Symbol.for("react.lazy") : 60116, b = e ? Symbol.for("react.block") : 60121, m = e ? Symbol.for("react.fundamental") : 60117, w = e ? Symbol.for("react.responder") : 60118, $ = e ? Symbol.for("react.scope") : 60119;
  function E(h) {
    if (typeof h == "object" && h !== null) {
      var U = h.$$typeof;
      switch (U) {
        case t:
          switch (h = h.type, h) {
            case l:
            case c:
            case n:
            case a:
            case o:
            case f:
              return h;
            default:
              switch (h = h && h.$$typeof, h) {
                case s:
                case u:
                case x:
                case v:
                case i:
                  return h;
                default:
                  return U;
              }
          }
        case r:
          return U;
      }
    }
  }
  function S(h) {
    return E(h) === c;
  }
  return Xt.AsyncMode = l, Xt.ConcurrentMode = c, Xt.ContextConsumer = s, Xt.ContextProvider = i, Xt.Element = t, Xt.ForwardRef = u, Xt.Fragment = n, Xt.Lazy = x, Xt.Memo = v, Xt.Portal = r, Xt.Profiler = a, Xt.StrictMode = o, Xt.Suspense = f, Xt.isAsyncMode = function(h) {
    return S(h) || E(h) === l;
  }, Xt.isConcurrentMode = S, Xt.isContextConsumer = function(h) {
    return E(h) === s;
  }, Xt.isContextProvider = function(h) {
    return E(h) === i;
  }, Xt.isElement = function(h) {
    return typeof h == "object" && h !== null && h.$$typeof === t;
  }, Xt.isForwardRef = function(h) {
    return E(h) === u;
  }, Xt.isFragment = function(h) {
    return E(h) === n;
  }, Xt.isLazy = function(h) {
    return E(h) === x;
  }, Xt.isMemo = function(h) {
    return E(h) === v;
  }, Xt.isPortal = function(h) {
    return E(h) === r;
  }, Xt.isProfiler = function(h) {
    return E(h) === a;
  }, Xt.isStrictMode = function(h) {
    return E(h) === o;
  }, Xt.isSuspense = function(h) {
    return E(h) === f;
  }, Xt.isValidElementType = function(h) {
    return typeof h == "string" || typeof h == "function" || h === n || h === c || h === a || h === o || h === f || h === p || typeof h == "object" && h !== null && (h.$$typeof === x || h.$$typeof === v || h.$$typeof === i || h.$$typeof === s || h.$$typeof === u || h.$$typeof === m || h.$$typeof === w || h.$$typeof === $ || h.$$typeof === b);
  }, Xt.typeOf = E, Xt;
}
var cr = {};
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var qj;
function wge() {
  return qj || (qj = 1, process.env.NODE_ENV !== "production" && function() {
    var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, r = e ? Symbol.for("react.portal") : 60106, n = e ? Symbol.for("react.fragment") : 60107, o = e ? Symbol.for("react.strict_mode") : 60108, a = e ? Symbol.for("react.profiler") : 60114, i = e ? Symbol.for("react.provider") : 60109, s = e ? Symbol.for("react.context") : 60110, l = e ? Symbol.for("react.async_mode") : 60111, c = e ? Symbol.for("react.concurrent_mode") : 60111, u = e ? Symbol.for("react.forward_ref") : 60112, f = e ? Symbol.for("react.suspense") : 60113, p = e ? Symbol.for("react.suspense_list") : 60120, v = e ? Symbol.for("react.memo") : 60115, x = e ? Symbol.for("react.lazy") : 60116, b = e ? Symbol.for("react.block") : 60121, m = e ? Symbol.for("react.fundamental") : 60117, w = e ? Symbol.for("react.responder") : 60118, $ = e ? Symbol.for("react.scope") : 60119;
    function E(k) {
      return typeof k == "string" || typeof k == "function" || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
      k === n || k === c || k === a || k === o || k === f || k === p || typeof k == "object" && k !== null && (k.$$typeof === x || k.$$typeof === v || k.$$typeof === i || k.$$typeof === s || k.$$typeof === u || k.$$typeof === m || k.$$typeof === w || k.$$typeof === $ || k.$$typeof === b);
    }
    function S(k) {
      if (typeof k == "object" && k !== null) {
        var oe = k.$$typeof;
        switch (oe) {
          case t:
            var Ce = k.type;
            switch (Ce) {
              case l:
              case c:
              case n:
              case a:
              case o:
              case f:
                return Ce;
              default:
                var Ze = Ce && Ce.$$typeof;
                switch (Ze) {
                  case s:
                  case u:
                  case x:
                  case v:
                  case i:
                    return Ze;
                  default:
                    return oe;
                }
            }
          case r:
            return oe;
        }
      }
    }
    var h = l, U = c, G = s, Q = i, Z = t, X = u, J = n, I = x, te = v, V = r, D = a, F = o, R = f, H = !1;
    function B(k) {
      return H || (H = !0, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.")), g(k) || S(k) === l;
    }
    function g(k) {
      return S(k) === c;
    }
    function d(k) {
      return S(k) === s;
    }
    function O(k) {
      return S(k) === i;
    }
    function C(k) {
      return typeof k == "object" && k !== null && k.$$typeof === t;
    }
    function A(k) {
      return S(k) === u;
    }
    function N(k) {
      return S(k) === n;
    }
    function j(k) {
      return S(k) === x;
    }
    function _(k) {
      return S(k) === v;
    }
    function T(k) {
      return S(k) === r;
    }
    function M(k) {
      return S(k) === a;
    }
    function z(k) {
      return S(k) === o;
    }
    function ee(k) {
      return S(k) === f;
    }
    cr.AsyncMode = h, cr.ConcurrentMode = U, cr.ContextConsumer = G, cr.ContextProvider = Q, cr.Element = Z, cr.ForwardRef = X, cr.Fragment = J, cr.Lazy = I, cr.Memo = te, cr.Portal = V, cr.Profiler = D, cr.StrictMode = F, cr.Suspense = R, cr.isAsyncMode = B, cr.isConcurrentMode = g, cr.isContextConsumer = d, cr.isContextProvider = O, cr.isElement = C, cr.isForwardRef = A, cr.isFragment = N, cr.isLazy = j, cr.isMemo = _, cr.isPortal = T, cr.isProfiler = M, cr.isStrictMode = z, cr.isSuspense = ee, cr.isValidElementType = E, cr.typeOf = S;
  }()), cr;
}
var Bj;
function sU() {
  return Bj || (Bj = 1, process.env.NODE_ENV === "production" ? Xw.exports = xge() : Xw.exports = wge()), Xw.exports;
}
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
var Kw, Xj;
function kge() {
  if (Xj) return Kw;
  Xj = 1;
  var e = Object.getOwnPropertySymbols, t = Object.prototype.hasOwnProperty, r = Object.prototype.propertyIsEnumerable;
  function n(a) {
    if (a == null)
      throw new TypeError("Object.assign cannot be called with null or undefined");
    return Object(a);
  }
  function o() {
    try {
      if (!Object.assign)
        return !1;
      var a = new String("abc");
      if (a[5] = "de", Object.getOwnPropertyNames(a)[0] === "5")
        return !1;
      for (var i = {}, s = 0; s < 10; s++)
        i["_" + String.fromCharCode(s)] = s;
      var l = Object.getOwnPropertyNames(i).map(function(u) {
        return i[u];
      });
      if (l.join("") !== "0123456789")
        return !1;
      var c = {};
      return "abcdefghijklmnopqrst".split("").forEach(function(u) {
        c[u] = u;
      }), Object.keys(Object.assign({}, c)).join("") === "abcdefghijklmnopqrst";
    } catch {
      return !1;
    }
  }
  return Kw = o() ? Object.assign : function(a, i) {
    for (var s, l = n(a), c, u = 1; u < arguments.length; u++) {
      s = Object(arguments[u]);
      for (var f in s)
        t.call(s, f) && (l[f] = s[f]);
      if (e) {
        c = e(s);
        for (var p = 0; p < c.length; p++)
          r.call(s, c[p]) && (l[c[p]] = s[c[p]]);
      }
    }
    return l;
  }, Kw;
}
var Jw, Kj;
function cP() {
  if (Kj) return Jw;
  Kj = 1;
  var e = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
  return Jw = e, Jw;
}
var Jj, Qj;
function lU() {
  return Qj || (Qj = 1, Jj = Function.call.bind(Object.prototype.hasOwnProperty)), Jj;
}
var Qw, Zj;
function $ge() {
  if (Zj) return Qw;
  Zj = 1;
  var e = function() {
  };
  if (process.env.NODE_ENV !== "production") {
    var t = /* @__PURE__ */ cP(), r = {}, n = /* @__PURE__ */ lU();
    e = function(a) {
      var i = "Warning: " + a;
      typeof console < "u" && console.error(i);
      try {
        throw new Error(i);
      } catch {
      }
    };
  }
  function o(a, i, s, l, c) {
    if (process.env.NODE_ENV !== "production") {
      for (var u in a)
        if (n(a, u)) {
          var f;
          try {
            if (typeof a[u] != "function") {
              var p = Error(
                (l || "React class") + ": " + s + " type `" + u + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof a[u] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`."
              );
              throw p.name = "Invariant Violation", p;
            }
            f = a[u](i, u, l, s, null, t);
          } catch (x) {
            f = x;
          }
          if (f && !(f instanceof Error) && e(
            (l || "React class") + ": type specification of " + s + " `" + u + "` is invalid; the type checker function must return `null` or an `Error` but returned a " + typeof f + ". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument)."
          ), f instanceof Error && !(f.message in r)) {
            r[f.message] = !0;
            var v = c ? c() : "";
            e(
              "Failed " + s + " type: " + f.message + (v ?? "")
            );
          }
        }
    }
  }
  return o.resetWarningCache = function() {
    process.env.NODE_ENV !== "production" && (r = {});
  }, Qw = o, Qw;
}
var Zw, eI;
function Oge() {
  if (eI) return Zw;
  eI = 1;
  var e = sU(), t = kge(), r = /* @__PURE__ */ cP(), n = /* @__PURE__ */ lU(), o = /* @__PURE__ */ $ge(), a = function() {
  };
  process.env.NODE_ENV !== "production" && (a = function(s) {
    var l = "Warning: " + s;
    typeof console < "u" && console.error(l);
    try {
      throw new Error(l);
    } catch {
    }
  });
  function i() {
    return null;
  }
  return Zw = function(s, l) {
    var c = typeof Symbol == "function" && Symbol.iterator, u = "@@iterator";
    function f(g) {
      var d = g && (c && g[c] || g[u]);
      if (typeof d == "function")
        return d;
    }
    var p = "<<anonymous>>", v = {
      array: w("array"),
      bigint: w("bigint"),
      bool: w("boolean"),
      func: w("function"),
      number: w("number"),
      object: w("object"),
      string: w("string"),
      symbol: w("symbol"),
      any: $(),
      arrayOf: E,
      element: S(),
      elementType: h(),
      instanceOf: U,
      node: X(),
      objectOf: Q,
      oneOf: G,
      oneOfType: Z,
      shape: I,
      exact: te
    };
    function x(g, d) {
      return g === d ? g !== 0 || 1 / g === 1 / d : g !== g && d !== d;
    }
    function b(g, d) {
      this.message = g, this.data = d && typeof d == "object" ? d : {}, this.stack = "";
    }
    b.prototype = Error.prototype;
    function m(g) {
      if (process.env.NODE_ENV !== "production")
        var d = {}, O = 0;
      function C(N, j, _, T, M, z, ee) {
        if (T = T || p, z = z || _, ee !== r) {
          if (l) {
            var k = new Error(
              "Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types"
            );
            throw k.name = "Invariant Violation", k;
          } else if (process.env.NODE_ENV !== "production" && typeof console < "u") {
            var oe = T + ":" + _;
            !d[oe] && // Avoid spamming the console because they are often not actionable except for lib authors
            O < 3 && (a(
              "You are manually calling a React.PropTypes validation function for the `" + z + "` prop on `" + T + "`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details."
            ), d[oe] = !0, O++);
          }
        }
        return j[_] == null ? N ? j[_] === null ? new b("The " + M + " `" + z + "` is marked as required " + ("in `" + T + "`, but its value is `null`.")) : new b("The " + M + " `" + z + "` is marked as required in " + ("`" + T + "`, but its value is `undefined`.")) : null : g(j, _, T, M, z);
      }
      var A = C.bind(null, !1);
      return A.isRequired = C.bind(null, !0), A;
    }
    function w(g) {
      function d(O, C, A, N, j, _) {
        var T = O[C], M = F(T);
        if (M !== g) {
          var z = R(T);
          return new b(
            "Invalid " + N + " `" + j + "` of type " + ("`" + z + "` supplied to `" + A + "`, expected ") + ("`" + g + "`."),
            { expectedType: g }
          );
        }
        return null;
      }
      return m(d);
    }
    function $() {
      return m(i);
    }
    function E(g) {
      function d(O, C, A, N, j) {
        if (typeof g != "function")
          return new b("Property `" + j + "` of component `" + A + "` has invalid PropType notation inside arrayOf.");
        var _ = O[C];
        if (!Array.isArray(_)) {
          var T = F(_);
          return new b("Invalid " + N + " `" + j + "` of type " + ("`" + T + "` supplied to `" + A + "`, expected an array."));
        }
        for (var M = 0; M < _.length; M++) {
          var z = g(_, M, A, N, j + "[" + M + "]", r);
          if (z instanceof Error)
            return z;
        }
        return null;
      }
      return m(d);
    }
    function S() {
      function g(d, O, C, A, N) {
        var j = d[O];
        if (!s(j)) {
          var _ = F(j);
          return new b("Invalid " + A + " `" + N + "` of type " + ("`" + _ + "` supplied to `" + C + "`, expected a single ReactElement."));
        }
        return null;
      }
      return m(g);
    }
    function h() {
      function g(d, O, C, A, N) {
        var j = d[O];
        if (!e.isValidElementType(j)) {
          var _ = F(j);
          return new b("Invalid " + A + " `" + N + "` of type " + ("`" + _ + "` supplied to `" + C + "`, expected a single ReactElement type."));
        }
        return null;
      }
      return m(g);
    }
    function U(g) {
      function d(O, C, A, N, j) {
        if (!(O[C] instanceof g)) {
          var _ = g.name || p, T = B(O[C]);
          return new b("Invalid " + N + " `" + j + "` of type " + ("`" + T + "` supplied to `" + A + "`, expected ") + ("instance of `" + _ + "`."));
        }
        return null;
      }
      return m(d);
    }
    function G(g) {
      if (!Array.isArray(g))
        return process.env.NODE_ENV !== "production" && (arguments.length > 1 ? a(
          "Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z])."
        ) : a("Invalid argument supplied to oneOf, expected an array.")), i;
      function d(O, C, A, N, j) {
        for (var _ = O[C], T = 0; T < g.length; T++)
          if (x(_, g[T]))
            return null;
        var M = JSON.stringify(g, function(z, ee) {
          var k = R(ee);
          return k === "symbol" ? String(ee) : ee;
        });
        return new b("Invalid " + N + " `" + j + "` of value `" + String(_) + "` " + ("supplied to `" + A + "`, expected one of " + M + "."));
      }
      return m(d);
    }
    function Q(g) {
      function d(O, C, A, N, j) {
        if (typeof g != "function")
          return new b("Property `" + j + "` of component `" + A + "` has invalid PropType notation inside objectOf.");
        var _ = O[C], T = F(_);
        if (T !== "object")
          return new b("Invalid " + N + " `" + j + "` of type " + ("`" + T + "` supplied to `" + A + "`, expected an object."));
        for (var M in _)
          if (n(_, M)) {
            var z = g(_, M, A, N, j + "." + M, r);
            if (z instanceof Error)
              return z;
          }
        return null;
      }
      return m(d);
    }
    function Z(g) {
      if (!Array.isArray(g))
        return process.env.NODE_ENV !== "production" && a("Invalid argument supplied to oneOfType, expected an instance of array."), i;
      for (var d = 0; d < g.length; d++) {
        var O = g[d];
        if (typeof O != "function")
          return a(
            "Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + H(O) + " at index " + d + "."
          ), i;
      }
      function C(A, N, j, _, T) {
        for (var M = [], z = 0; z < g.length; z++) {
          var ee = g[z], k = ee(A, N, j, _, T, r);
          if (k == null)
            return null;
          k.data && n(k.data, "expectedType") && M.push(k.data.expectedType);
        }
        var oe = M.length > 0 ? ", expected one of type [" + M.join(", ") + "]" : "";
        return new b("Invalid " + _ + " `" + T + "` supplied to " + ("`" + j + "`" + oe + "."));
      }
      return m(C);
    }
    function X() {
      function g(d, O, C, A, N) {
        return V(d[O]) ? null : new b("Invalid " + A + " `" + N + "` supplied to " + ("`" + C + "`, expected a ReactNode."));
      }
      return m(g);
    }
    function J(g, d, O, C, A) {
      return new b(
        (g || "React class") + ": " + d + " type `" + O + "." + C + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + A + "`."
      );
    }
    function I(g) {
      function d(O, C, A, N, j) {
        var _ = O[C], T = F(_);
        if (T !== "object")
          return new b("Invalid " + N + " `" + j + "` of type `" + T + "` " + ("supplied to `" + A + "`, expected `object`."));
        for (var M in g) {
          var z = g[M];
          if (typeof z != "function")
            return J(A, N, j, M, R(z));
          var ee = z(_, M, A, N, j + "." + M, r);
          if (ee)
            return ee;
        }
        return null;
      }
      return m(d);
    }
    function te(g) {
      function d(O, C, A, N, j) {
        var _ = O[C], T = F(_);
        if (T !== "object")
          return new b("Invalid " + N + " `" + j + "` of type `" + T + "` " + ("supplied to `" + A + "`, expected `object`."));
        var M = t({}, O[C], g);
        for (var z in M) {
          var ee = g[z];
          if (n(g, z) && typeof ee != "function")
            return J(A, N, j, z, R(ee));
          if (!ee)
            return new b(
              "Invalid " + N + " `" + j + "` key `" + z + "` supplied to `" + A + "`.\nBad object: " + JSON.stringify(O[C], null, "  ") + `
Valid keys: ` + JSON.stringify(Object.keys(g), null, "  ")
            );
          var k = ee(_, z, A, N, j + "." + z, r);
          if (k)
            return k;
        }
        return null;
      }
      return m(d);
    }
    function V(g) {
      switch (typeof g) {
        case "number":
        case "string":
        case "undefined":
          return !0;
        case "boolean":
          return !g;
        case "object":
          if (Array.isArray(g))
            return g.every(V);
          if (g === null || s(g))
            return !0;
          var d = f(g);
          if (d) {
            var O = d.call(g), C;
            if (d !== g.entries) {
              for (; !(C = O.next()).done; )
                if (!V(C.value))
                  return !1;
            } else
              for (; !(C = O.next()).done; ) {
                var A = C.value;
                if (A && !V(A[1]))
                  return !1;
              }
          } else
            return !1;
          return !0;
        default:
          return !1;
      }
    }
    function D(g, d) {
      return g === "symbol" ? !0 : d ? d["@@toStringTag"] === "Symbol" || typeof Symbol == "function" && d instanceof Symbol : !1;
    }
    function F(g) {
      var d = typeof g;
      return Array.isArray(g) ? "array" : g instanceof RegExp ? "object" : D(d, g) ? "symbol" : d;
    }
    function R(g) {
      if (typeof g > "u" || g === null)
        return "" + g;
      var d = F(g);
      if (d === "object") {
        if (g instanceof Date)
          return "date";
        if (g instanceof RegExp)
          return "regexp";
      }
      return d;
    }
    function H(g) {
      var d = R(g);
      switch (d) {
        case "array":
        case "object":
          return "an " + d;
        case "boolean":
        case "date":
        case "regexp":
          return "a " + d;
        default:
          return d;
      }
    }
    function B(g) {
      return !g.constructor || !g.constructor.name ? p : g.constructor.name;
    }
    return v.checkPropTypes = o, v.resetWarningCache = o.resetWarningCache, v.PropTypes = v, v;
  }, Zw;
}
var e2, tI;
function Ege() {
  if (tI) return e2;
  tI = 1;
  var e = /* @__PURE__ */ cP();
  function t() {
  }
  function r() {
  }
  return r.resetWarningCache = t, e2 = function() {
    function n(i, s, l, c, u, f) {
      if (f !== e) {
        var p = new Error(
          "Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types"
        );
        throw p.name = "Invariant Violation", p;
      }
    }
    n.isRequired = n;
    function o() {
      return n;
    }
    var a = {
      array: n,
      bigint: n,
      bool: n,
      func: n,
      number: n,
      object: n,
      string: n,
      symbol: n,
      any: n,
      arrayOf: o,
      element: n,
      elementType: n,
      instanceOf: o,
      node: n,
      objectOf: o,
      oneOf: o,
      oneOfType: o,
      shape: o,
      exact: o,
      checkPropTypes: r,
      resetWarningCache: t
    };
    return a.PropTypes = a, a;
  }, e2;
}
var rI;
function Sge() {
  if (rI) return Kb.exports;
  if (rI = 1, process.env.NODE_ENV !== "production") {
    var e = sU(), t = !0;
    Kb.exports = /* @__PURE__ */ Oge()(e.isElement, t);
  } else
    Kb.exports = /* @__PURE__ */ Ege()();
  return Kb.exports;
}
var Pge = /* @__PURE__ */ Sge();
const jt = /* @__PURE__ */ vge(Pge);
function nI(e, t) {
  var r = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var n = Object.getOwnPropertySymbols(e);
    t && (n = n.filter(function(o) {
      return Object.getOwnPropertyDescriptor(e, o).enumerable;
    })), r.push.apply(r, n);
  }
  return r;
}
function Xo(e) {
  for (var t = 1; t < arguments.length; t++) {
    var r = arguments[t] != null ? arguments[t] : {};
    t % 2 ? nI(Object(r), !0).forEach(function(n) {
      sf(e, n, r[n]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : nI(Object(r)).forEach(function(n) {
      Object.defineProperty(e, n, Object.getOwnPropertyDescriptor(r, n));
    });
  }
  return e;
}
function Hv(e) {
  "@babel/helpers - typeof";
  return Hv = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t) {
    return typeof t;
  } : function(t) {
    return t && typeof Symbol == "function" && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
  }, Hv(e);
}
function sf(e, t, r) {
  return t in e ? Object.defineProperty(e, t, {
    value: r,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : e[t] = r, e;
}
function Cge(e, t) {
  if (e == null) return {};
  var r = {}, n = Object.keys(e), o, a;
  for (a = 0; a < n.length; a++)
    o = n[a], !(t.indexOf(o) >= 0) && (r[o] = e[o]);
  return r;
}
function Age(e, t) {
  if (e == null) return {};
  var r = Cge(e, t), n, o;
  if (Object.getOwnPropertySymbols) {
    var a = Object.getOwnPropertySymbols(e);
    for (o = 0; o < a.length; o++)
      n = a[o], !(t.indexOf(n) >= 0) && Object.prototype.propertyIsEnumerable.call(e, n) && (r[n] = e[n]);
  }
  return r;
}
function f3(e) {
  return _ge(e) || Nge(e) || jge(e) || Ige();
}
function _ge(e) {
  if (Array.isArray(e)) return d3(e);
}
function Nge(e) {
  if (typeof Symbol < "u" && e[Symbol.iterator] != null || e["@@iterator"] != null) return Array.from(e);
}
function jge(e, t) {
  if (e) {
    if (typeof e == "string") return d3(e, t);
    var r = Object.prototype.toString.call(e).slice(8, -1);
    if (r === "Object" && e.constructor && (r = e.constructor.name), r === "Map" || r === "Set") return Array.from(e);
    if (r === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return d3(e, t);
  }
}
function d3(e, t) {
  (t == null || t > e.length) && (t = e.length);
  for (var r = 0, n = new Array(t); r < t; r++) n[r] = e[r];
  return n;
}
function Ige() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function Tge(e) {
  var t, r = e.beat, n = e.fade, o = e.beatFade, a = e.bounce, i = e.shake, s = e.flash, l = e.spin, c = e.spinPulse, u = e.spinReverse, f = e.pulse, p = e.fixedWidth, v = e.inverse, x = e.border, b = e.listItem, m = e.flip, w = e.size, $ = e.rotation, E = e.pull, S = (t = {
    "fa-beat": r,
    "fa-fade": n,
    "fa-beat-fade": o,
    "fa-bounce": a,
    "fa-shake": i,
    "fa-flash": s,
    "fa-spin": l,
    "fa-spin-reverse": u,
    "fa-spin-pulse": c,
    "fa-pulse": f,
    "fa-fw": p,
    "fa-inverse": v,
    "fa-border": x,
    "fa-li": b,
    "fa-flip": m === !0,
    "fa-flip-horizontal": m === "horizontal" || m === "both",
    "fa-flip-vertical": m === "vertical" || m === "both"
  }, sf(t, "fa-".concat(w), typeof w < "u" && w !== null), sf(t, "fa-rotate-".concat($), typeof $ < "u" && $ !== null && $ !== 0), sf(t, "fa-pull-".concat(E), typeof E < "u" && E !== null), sf(t, "fa-swap-opacity", e.swapOpacity), t);
  return Object.keys(S).map(function(h) {
    return S[h] ? h : null;
  }).filter(function(h) {
    return h;
  });
}
function Mge(e) {
  return e = e - 0, e === e;
}
function cU(e) {
  return Mge(e) ? e : (e = e.replace(/[\-_\s]+(.)?/g, function(t, r) {
    return r ? r.toUpperCase() : "";
  }), e.substr(0, 1).toLowerCase() + e.substr(1));
}
var Rge = ["style"];
function zge(e) {
  return e.charAt(0).toUpperCase() + e.slice(1);
}
function Fge(e) {
  return e.split(";").map(function(t) {
    return t.trim();
  }).filter(function(t) {
    return t;
  }).reduce(function(t, r) {
    var n = r.indexOf(":"), o = cU(r.slice(0, n)), a = r.slice(n + 1).trim();
    return o.startsWith("webkit") ? t[zge(o)] = a : t[o] = a, t;
  }, {});
}
function uU(e, t) {
  var r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
  if (typeof t == "string")
    return t;
  var n = (t.children || []).map(function(l) {
    return uU(e, l);
  }), o = Object.keys(t.attributes || {}).reduce(function(l, c) {
    var u = t.attributes[c];
    switch (c) {
      case "class":
        l.attrs.className = u, delete t.attributes.class;
        break;
      case "style":
        l.attrs.style = Fge(u);
        break;
      default:
        c.indexOf("aria-") === 0 || c.indexOf("data-") === 0 ? l.attrs[c.toLowerCase()] = u : l.attrs[cU(c)] = u;
    }
    return l;
  }, {
    attrs: {}
  }), a = r.style, i = a === void 0 ? {} : a, s = Age(r, Rge);
  return o.attrs.style = Xo(Xo({}, o.attrs.style), i), e.apply(void 0, [t.tag, Xo(Xo({}, o.attrs), s)].concat(f3(n)));
}
var fU = !1;
try {
  fU = process.env.NODE_ENV === "production";
} catch {
}
function Dge() {
  if (!fU && console && typeof console.error == "function") {
    var e;
    (e = console).error.apply(e, arguments);
  }
}
function oI(e) {
  if (e && Hv(e) === "object" && e.prefix && e.iconName && e.icon)
    return e;
  if (u3.icon)
    return u3.icon(e);
  if (e === null)
    return null;
  if (e && Hv(e) === "object" && e.prefix && e.iconName)
    return e;
  if (Array.isArray(e) && e.length === 2)
    return {
      prefix: e[0],
      iconName: e[1]
    };
  if (typeof e == "string")
    return {
      prefix: "fas",
      iconName: e
    };
}
function t2(e, t) {
  return Array.isArray(t) && t.length > 0 || !Array.isArray(t) && t ? sf({}, e, t) : {};
}
var aI = {
  border: !1,
  className: "",
  mask: null,
  maskId: null,
  fixedWidth: !1,
  inverse: !1,
  flip: !1,
  icon: null,
  listItem: !1,
  pull: null,
  pulse: !1,
  rotation: null,
  size: null,
  spin: !1,
  spinPulse: !1,
  spinReverse: !1,
  beat: !1,
  fade: !1,
  beatFade: !1,
  bounce: !1,
  shake: !1,
  symbol: !1,
  title: "",
  titleId: null,
  transform: null,
  swapOpacity: !1
}, uP = /* @__PURE__ */ ce.forwardRef(function(e, t) {
  var r = Xo(Xo({}, aI), e), n = r.icon, o = r.mask, a = r.symbol, i = r.className, s = r.title, l = r.titleId, c = r.maskId, u = oI(n), f = t2("classes", [].concat(f3(Tge(r)), f3((i || "").split(" ")))), p = t2("transform", typeof r.transform == "string" ? u3.transform(r.transform) : r.transform), v = t2("mask", oI(o)), x = yge(u, Xo(Xo(Xo(Xo({}, f), p), v), {}, {
    symbol: a,
    title: s,
    titleId: l,
    maskId: c
  }));
  if (!x)
    return Dge("Could not find icon", u), null;
  var b = x.abstract, m = {
    ref: t
  };
  return Object.keys(r).forEach(function(w) {
    aI.hasOwnProperty(w) || (m[w] = r[w]);
  }), Lge(b[0], m);
});
uP.displayName = "FontAwesomeIcon";
uP.propTypes = {
  beat: jt.bool,
  border: jt.bool,
  beatFade: jt.bool,
  bounce: jt.bool,
  className: jt.string,
  fade: jt.bool,
  flash: jt.bool,
  mask: jt.oneOfType([jt.object, jt.array, jt.string]),
  maskId: jt.string,
  fixedWidth: jt.bool,
  inverse: jt.bool,
  flip: jt.oneOf([!0, !1, "horizontal", "vertical", "both"]),
  icon: jt.oneOfType([jt.object, jt.array, jt.string]),
  listItem: jt.bool,
  pull: jt.oneOf(["right", "left"]),
  pulse: jt.bool,
  rotation: jt.oneOf([0, 90, 180, 270]),
  shake: jt.bool,
  size: jt.oneOf(["2xs", "xs", "sm", "lg", "xl", "2xl", "1x", "2x", "3x", "4x", "5x", "6x", "7x", "8x", "9x", "10x"]),
  spin: jt.bool,
  spinPulse: jt.bool,
  spinReverse: jt.bool,
  symbol: jt.oneOfType([jt.bool, jt.string]),
  title: jt.string,
  titleId: jt.string,
  transform: jt.oneOfType([jt.string, jt.object]),
  swapOpacity: jt.bool
};
var Lge = uU.bind(null, ce.createElement);
const fP = "-", Vge = (e) => {
  const t = Uge(e), {
    conflictingClassGroups: r,
    conflictingClassGroupModifiers: n
  } = e;
  return {
    getClassGroupId: (o) => {
      const a = o.split(fP);
      return a[0] === "" && a.length !== 1 && a.shift(), dU(a, t) || Wge(o);
    },
    getConflictingClassGroupIds: (o, a) => {
      const i = r[o] || [];
      return a && n[o] ? [...i, ...n[o]] : i;
    }
  };
}, dU = (e, t) => {
  var r;
  if (e.length === 0)
    return t.classGroupId;
  const n = e[0], o = t.nextPart.get(n), a = o ? dU(e.slice(1), o) : void 0;
  if (a)
    return a;
  if (t.validators.length === 0)
    return;
  const i = e.join(fP);
  return (r = t.validators.find(({
    validator: s
  }) => s(i))) == null ? void 0 : r.classGroupId;
}, iI = /^\[(.+)\]$/, Wge = (e) => {
  if (iI.test(e)) {
    const t = iI.exec(e)[1], r = t == null ? void 0 : t.substring(0, t.indexOf(":"));
    if (r)
      return "arbitrary.." + r;
  }
}, Uge = (e) => {
  const {
    theme: t,
    prefix: r
  } = e, n = {
    nextPart: /* @__PURE__ */ new Map(),
    validators: []
  };
  return Hge(Object.entries(e.classGroups), r).forEach(([o, a]) => {
    p3(a, n, o, t);
  }), n;
}, p3 = (e, t, r, n) => {
  e.forEach((o) => {
    if (typeof o == "string") {
      const a = o === "" ? t : sI(t, o);
      a.classGroupId = r;
      return;
    }
    if (typeof o == "function") {
      if (Yge(o)) {
        p3(o(n), t, r, n);
        return;
      }
      t.validators.push({
        validator: o,
        classGroupId: r
      });
      return;
    }
    Object.entries(o).forEach(([a, i]) => {
      p3(i, sI(t, a), r, n);
    });
  });
}, sI = (e, t) => {
  let r = e;
  return t.split(fP).forEach((n) => {
    r.nextPart.has(n) || r.nextPart.set(n, {
      nextPart: /* @__PURE__ */ new Map(),
      validators: []
    }), r = r.nextPart.get(n);
  }), r;
}, Yge = (e) => e.isThemeGetter, Hge = (e, t) => t ? e.map(([r, n]) => {
  const o = n.map((a) => typeof a == "string" ? t + a : typeof a == "object" ? Object.fromEntries(Object.entries(a).map(([i, s]) => [t + i, s])) : a);
  return [r, o];
}) : e, Gge = (e) => {
  if (e < 1)
    return {
      get: () => {
      },
      set: () => {
      }
    };
  let t = 0, r = /* @__PURE__ */ new Map(), n = /* @__PURE__ */ new Map();
  const o = (a, i) => {
    r.set(a, i), t++, t > e && (t = 0, n = r, r = /* @__PURE__ */ new Map());
  };
  return {
    get(a) {
      let i = r.get(a);
      if (i !== void 0)
        return i;
      if ((i = n.get(a)) !== void 0)
        return o(a, i), i;
    },
    set(a, i) {
      r.has(a) ? r.set(a, i) : o(a, i);
    }
  };
}, pU = "!", qge = (e) => {
  const {
    separator: t,
    experimentalParseClassName: r
  } = e, n = t.length === 1, o = t[0], a = t.length, i = (s) => {
    const l = [];
    let c = 0, u = 0, f;
    for (let m = 0; m < s.length; m++) {
      let w = s[m];
      if (c === 0) {
        if (w === o && (n || s.slice(m, m + a) === t)) {
          l.push(s.slice(u, m)), u = m + a;
          continue;
        }
        if (w === "/") {
          f = m;
          continue;
        }
      }
      w === "[" ? c++ : w === "]" && c--;
    }
    const p = l.length === 0 ? s : s.substring(u), v = p.startsWith(pU), x = v ? p.substring(1) : p, b = f && f > u ? f - u : void 0;
    return {
      modifiers: l,
      hasImportantModifier: v,
      baseClassName: x,
      maybePostfixModifierPosition: b
    };
  };
  return r ? (s) => r({
    className: s,
    parseClassName: i
  }) : i;
}, Bge = (e) => {
  if (e.length <= 1)
    return e;
  const t = [];
  let r = [];
  return e.forEach((n) => {
    n[0] === "[" ? (t.push(...r.sort(), n), r = []) : r.push(n);
  }), t.push(...r.sort()), t;
}, Xge = (e) => ({
  cache: Gge(e.cacheSize),
  parseClassName: qge(e),
  ...Vge(e)
}), Kge = /\s+/, Jge = (e, t) => {
  const {
    parseClassName: r,
    getClassGroupId: n,
    getConflictingClassGroupIds: o
  } = t, a = [], i = e.trim().split(Kge);
  let s = "";
  for (let l = i.length - 1; l >= 0; l -= 1) {
    const c = i[l], {
      modifiers: u,
      hasImportantModifier: f,
      baseClassName: p,
      maybePostfixModifierPosition: v
    } = r(c);
    let x = !!v, b = n(x ? p.substring(0, v) : p);
    if (!b) {
      if (!x) {
        s = c + (s.length > 0 ? " " + s : s);
        continue;
      }
      if (b = n(p), !b) {
        s = c + (s.length > 0 ? " " + s : s);
        continue;
      }
      x = !1;
    }
    const m = Bge(u).join(":"), w = f ? m + pU : m, $ = w + b;
    if (a.includes($))
      continue;
    a.push($);
    const E = o(b, x);
    for (let S = 0; S < E.length; ++S) {
      const h = E[S];
      a.push(w + h);
    }
    s = c + (s.length > 0 ? " " + s : s);
  }
  return s;
};
function Qge() {
  let e = 0, t, r, n = "";
  for (; e < arguments.length; )
    (t = arguments[e++]) && (r = mU(t)) && (n && (n += " "), n += r);
  return n;
}
const mU = (e) => {
  if (typeof e == "string")
    return e;
  let t, r = "";
  for (let n = 0; n < e.length; n++)
    e[n] && (t = mU(e[n])) && (r && (r += " "), r += t);
  return r;
};
function Zge(e, ...t) {
  let r, n, o, a = i;
  function i(l) {
    const c = t.reduce((u, f) => f(u), e());
    return r = Xge(c), n = r.cache.get, o = r.cache.set, a = s, s(l);
  }
  function s(l) {
    const c = n(l);
    if (c)
      return c;
    const u = Jge(l, r);
    return o(l, u), u;
  }
  return function() {
    return a(Qge.apply(null, arguments));
  };
}
const kr = (e) => {
  const t = (r) => r[e] || [];
  return t.isThemeGetter = !0, t;
}, gU = /^\[(?:([a-z-]+):)?(.+)\]$/i, ehe = /^\d+\/\d+$/, the = /* @__PURE__ */ new Set(["px", "full", "screen"]), rhe = /^(\d+(\.\d+)?)?(xs|sm|md|lg|xl)$/, nhe = /\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\b(calc|min|max|clamp)\(.+\)|^0$/, ohe = /^(rgba?|hsla?|hwb|(ok)?(lab|lch))\(.+\)$/, ahe = /^(inset_)?-?((\d+)?\.?(\d+)[a-z]+|0)_-?((\d+)?\.?(\d+)[a-z]+|0)/, ihe = /^(url|image|image-set|cross-fade|element|(repeating-)?(linear|radial|conic)-gradient)\(.+\)$/, Va = (e) => Rf(e) || the.has(e) || ehe.test(e), Ms = (e) => Rd(e, "length", mhe), Rf = (e) => !!e && !Number.isNaN(Number(e)), r2 = (e) => Rd(e, "number", Rf), dm = (e) => !!e && Number.isInteger(Number(e)), she = (e) => e.endsWith("%") && Rf(e.slice(0, -1)), lt = (e) => gU.test(e), Rs = (e) => rhe.test(e), lhe = /* @__PURE__ */ new Set(["length", "size", "percentage"]), che = (e) => Rd(e, lhe, hU), uhe = (e) => Rd(e, "position", hU), fhe = /* @__PURE__ */ new Set(["image", "url"]), dhe = (e) => Rd(e, fhe, hhe), phe = (e) => Rd(e, "", ghe), pm = () => !0, Rd = (e, t, r) => {
  const n = gU.exec(e);
  return n ? n[1] ? typeof t == "string" ? n[1] === t : t.has(n[1]) : r(n[2]) : !1;
}, mhe = (e) => (
  // `colorFunctionRegex` check is necessary because color functions can have percentages in them which which would be incorrectly classified as lengths.
  // For example, `hsl(0 0% 0%)` would be classified as a length without this check.
  // I could also use lookbehind assertion in `lengthUnitRegex` but that isn't supported widely enough.
  nhe.test(e) && !ohe.test(e)
), hU = () => !1, ghe = (e) => ahe.test(e), hhe = (e) => ihe.test(e), bhe = () => {
  const e = kr("colors"), t = kr("spacing"), r = kr("blur"), n = kr("brightness"), o = kr("borderColor"), a = kr("borderRadius"), i = kr("borderSpacing"), s = kr("borderWidth"), l = kr("contrast"), c = kr("grayscale"), u = kr("hueRotate"), f = kr("invert"), p = kr("gap"), v = kr("gradientColorStops"), x = kr("gradientColorStopPositions"), b = kr("inset"), m = kr("margin"), w = kr("opacity"), $ = kr("padding"), E = kr("saturate"), S = kr("scale"), h = kr("sepia"), U = kr("skew"), G = kr("space"), Q = kr("translate"), Z = () => ["auto", "contain", "none"], X = () => ["auto", "hidden", "clip", "visible", "scroll"], J = () => ["auto", lt, t], I = () => [lt, t], te = () => ["", Va, Ms], V = () => ["auto", Rf, lt], D = () => ["bottom", "center", "left", "left-bottom", "left-top", "right", "right-bottom", "right-top", "top"], F = () => ["solid", "dashed", "dotted", "double", "none"], R = () => ["normal", "multiply", "screen", "overlay", "darken", "lighten", "color-dodge", "color-burn", "hard-light", "soft-light", "difference", "exclusion", "hue", "saturation", "color", "luminosity"], H = () => ["start", "end", "center", "between", "around", "evenly", "stretch"], B = () => ["", "0", lt], g = () => ["auto", "avoid", "all", "avoid-page", "page", "left", "right", "column"], d = () => [Rf, lt];
  return {
    cacheSize: 500,
    separator: ":",
    theme: {
      colors: [pm],
      spacing: [Va, Ms],
      blur: ["none", "", Rs, lt],
      brightness: d(),
      borderColor: [e],
      borderRadius: ["none", "", "full", Rs, lt],
      borderSpacing: I(),
      borderWidth: te(),
      contrast: d(),
      grayscale: B(),
      hueRotate: d(),
      invert: B(),
      gap: I(),
      gradientColorStops: [e],
      gradientColorStopPositions: [she, Ms],
      inset: J(),
      margin: J(),
      opacity: d(),
      padding: I(),
      saturate: d(),
      scale: d(),
      sepia: B(),
      skew: d(),
      space: I(),
      translate: I()
    },
    classGroups: {
      // Layout
      /**
       * Aspect Ratio
       * @see https://tailwindcss.com/docs/aspect-ratio
       */
      aspect: [{
        aspect: ["auto", "square", "video", lt]
      }],
      /**
       * Container
       * @see https://tailwindcss.com/docs/container
       */
      container: ["container"],
      /**
       * Columns
       * @see https://tailwindcss.com/docs/columns
       */
      columns: [{
        columns: [Rs]
      }],
      /**
       * Break After
       * @see https://tailwindcss.com/docs/break-after
       */
      "break-after": [{
        "break-after": g()
      }],
      /**
       * Break Before
       * @see https://tailwindcss.com/docs/break-before
       */
      "break-before": [{
        "break-before": g()
      }],
      /**
       * Break Inside
       * @see https://tailwindcss.com/docs/break-inside
       */
      "break-inside": [{
        "break-inside": ["auto", "avoid", "avoid-page", "avoid-column"]
      }],
      /**
       * Box Decoration Break
       * @see https://tailwindcss.com/docs/box-decoration-break
       */
      "box-decoration": [{
        "box-decoration": ["slice", "clone"]
      }],
      /**
       * Box Sizing
       * @see https://tailwindcss.com/docs/box-sizing
       */
      box: [{
        box: ["border", "content"]
      }],
      /**
       * Display
       * @see https://tailwindcss.com/docs/display
       */
      display: ["block", "inline-block", "inline", "flex", "inline-flex", "table", "inline-table", "table-caption", "table-cell", "table-column", "table-column-group", "table-footer-group", "table-header-group", "table-row-group", "table-row", "flow-root", "grid", "inline-grid", "contents", "list-item", "hidden"],
      /**
       * Floats
       * @see https://tailwindcss.com/docs/float
       */
      float: [{
        float: ["right", "left", "none", "start", "end"]
      }],
      /**
       * Clear
       * @see https://tailwindcss.com/docs/clear
       */
      clear: [{
        clear: ["left", "right", "both", "none", "start", "end"]
      }],
      /**
       * Isolation
       * @see https://tailwindcss.com/docs/isolation
       */
      isolation: ["isolate", "isolation-auto"],
      /**
       * Object Fit
       * @see https://tailwindcss.com/docs/object-fit
       */
      "object-fit": [{
        object: ["contain", "cover", "fill", "none", "scale-down"]
      }],
      /**
       * Object Position
       * @see https://tailwindcss.com/docs/object-position
       */
      "object-position": [{
        object: [...D(), lt]
      }],
      /**
       * Overflow
       * @see https://tailwindcss.com/docs/overflow
       */
      overflow: [{
        overflow: X()
      }],
      /**
       * Overflow X
       * @see https://tailwindcss.com/docs/overflow
       */
      "overflow-x": [{
        "overflow-x": X()
      }],
      /**
       * Overflow Y
       * @see https://tailwindcss.com/docs/overflow
       */
      "overflow-y": [{
        "overflow-y": X()
      }],
      /**
       * Overscroll Behavior
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      overscroll: [{
        overscroll: Z()
      }],
      /**
       * Overscroll Behavior X
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      "overscroll-x": [{
        "overscroll-x": Z()
      }],
      /**
       * Overscroll Behavior Y
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      "overscroll-y": [{
        "overscroll-y": Z()
      }],
      /**
       * Position
       * @see https://tailwindcss.com/docs/position
       */
      position: ["static", "fixed", "absolute", "relative", "sticky"],
      /**
       * Top / Right / Bottom / Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      inset: [{
        inset: [b]
      }],
      /**
       * Right / Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      "inset-x": [{
        "inset-x": [b]
      }],
      /**
       * Top / Bottom
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      "inset-y": [{
        "inset-y": [b]
      }],
      /**
       * Start
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      start: [{
        start: [b]
      }],
      /**
       * End
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      end: [{
        end: [b]
      }],
      /**
       * Top
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      top: [{
        top: [b]
      }],
      /**
       * Right
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      right: [{
        right: [b]
      }],
      /**
       * Bottom
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      bottom: [{
        bottom: [b]
      }],
      /**
       * Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      left: [{
        left: [b]
      }],
      /**
       * Visibility
       * @see https://tailwindcss.com/docs/visibility
       */
      visibility: ["visible", "invisible", "collapse"],
      /**
       * Z-Index
       * @see https://tailwindcss.com/docs/z-index
       */
      z: [{
        z: ["auto", dm, lt]
      }],
      // Flexbox and Grid
      /**
       * Flex Basis
       * @see https://tailwindcss.com/docs/flex-basis
       */
      basis: [{
        basis: J()
      }],
      /**
       * Flex Direction
       * @see https://tailwindcss.com/docs/flex-direction
       */
      "flex-direction": [{
        flex: ["row", "row-reverse", "col", "col-reverse"]
      }],
      /**
       * Flex Wrap
       * @see https://tailwindcss.com/docs/flex-wrap
       */
      "flex-wrap": [{
        flex: ["wrap", "wrap-reverse", "nowrap"]
      }],
      /**
       * Flex
       * @see https://tailwindcss.com/docs/flex
       */
      flex: [{
        flex: ["1", "auto", "initial", "none", lt]
      }],
      /**
       * Flex Grow
       * @see https://tailwindcss.com/docs/flex-grow
       */
      grow: [{
        grow: B()
      }],
      /**
       * Flex Shrink
       * @see https://tailwindcss.com/docs/flex-shrink
       */
      shrink: [{
        shrink: B()
      }],
      /**
       * Order
       * @see https://tailwindcss.com/docs/order
       */
      order: [{
        order: ["first", "last", "none", dm, lt]
      }],
      /**
       * Grid Template Columns
       * @see https://tailwindcss.com/docs/grid-template-columns
       */
      "grid-cols": [{
        "grid-cols": [pm]
      }],
      /**
       * Grid Column Start / End
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-start-end": [{
        col: ["auto", {
          span: ["full", dm, lt]
        }, lt]
      }],
      /**
       * Grid Column Start
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-start": [{
        "col-start": V()
      }],
      /**
       * Grid Column End
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-end": [{
        "col-end": V()
      }],
      /**
       * Grid Template Rows
       * @see https://tailwindcss.com/docs/grid-template-rows
       */
      "grid-rows": [{
        "grid-rows": [pm]
      }],
      /**
       * Grid Row Start / End
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-start-end": [{
        row: ["auto", {
          span: [dm, lt]
        }, lt]
      }],
      /**
       * Grid Row Start
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-start": [{
        "row-start": V()
      }],
      /**
       * Grid Row End
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-end": [{
        "row-end": V()
      }],
      /**
       * Grid Auto Flow
       * @see https://tailwindcss.com/docs/grid-auto-flow
       */
      "grid-flow": [{
        "grid-flow": ["row", "col", "dense", "row-dense", "col-dense"]
      }],
      /**
       * Grid Auto Columns
       * @see https://tailwindcss.com/docs/grid-auto-columns
       */
      "auto-cols": [{
        "auto-cols": ["auto", "min", "max", "fr", lt]
      }],
      /**
       * Grid Auto Rows
       * @see https://tailwindcss.com/docs/grid-auto-rows
       */
      "auto-rows": [{
        "auto-rows": ["auto", "min", "max", "fr", lt]
      }],
      /**
       * Gap
       * @see https://tailwindcss.com/docs/gap
       */
      gap: [{
        gap: [p]
      }],
      /**
       * Gap X
       * @see https://tailwindcss.com/docs/gap
       */
      "gap-x": [{
        "gap-x": [p]
      }],
      /**
       * Gap Y
       * @see https://tailwindcss.com/docs/gap
       */
      "gap-y": [{
        "gap-y": [p]
      }],
      /**
       * Justify Content
       * @see https://tailwindcss.com/docs/justify-content
       */
      "justify-content": [{
        justify: ["normal", ...H()]
      }],
      /**
       * Justify Items
       * @see https://tailwindcss.com/docs/justify-items
       */
      "justify-items": [{
        "justify-items": ["start", "end", "center", "stretch"]
      }],
      /**
       * Justify Self
       * @see https://tailwindcss.com/docs/justify-self
       */
      "justify-self": [{
        "justify-self": ["auto", "start", "end", "center", "stretch"]
      }],
      /**
       * Align Content
       * @see https://tailwindcss.com/docs/align-content
       */
      "align-content": [{
        content: ["normal", ...H(), "baseline"]
      }],
      /**
       * Align Items
       * @see https://tailwindcss.com/docs/align-items
       */
      "align-items": [{
        items: ["start", "end", "center", "baseline", "stretch"]
      }],
      /**
       * Align Self
       * @see https://tailwindcss.com/docs/align-self
       */
      "align-self": [{
        self: ["auto", "start", "end", "center", "stretch", "baseline"]
      }],
      /**
       * Place Content
       * @see https://tailwindcss.com/docs/place-content
       */
      "place-content": [{
        "place-content": [...H(), "baseline"]
      }],
      /**
       * Place Items
       * @see https://tailwindcss.com/docs/place-items
       */
      "place-items": [{
        "place-items": ["start", "end", "center", "baseline", "stretch"]
      }],
      /**
       * Place Self
       * @see https://tailwindcss.com/docs/place-self
       */
      "place-self": [{
        "place-self": ["auto", "start", "end", "center", "stretch"]
      }],
      // Spacing
      /**
       * Padding
       * @see https://tailwindcss.com/docs/padding
       */
      p: [{
        p: [$]
      }],
      /**
       * Padding X
       * @see https://tailwindcss.com/docs/padding
       */
      px: [{
        px: [$]
      }],
      /**
       * Padding Y
       * @see https://tailwindcss.com/docs/padding
       */
      py: [{
        py: [$]
      }],
      /**
       * Padding Start
       * @see https://tailwindcss.com/docs/padding
       */
      ps: [{
        ps: [$]
      }],
      /**
       * Padding End
       * @see https://tailwindcss.com/docs/padding
       */
      pe: [{
        pe: [$]
      }],
      /**
       * Padding Top
       * @see https://tailwindcss.com/docs/padding
       */
      pt: [{
        pt: [$]
      }],
      /**
       * Padding Right
       * @see https://tailwindcss.com/docs/padding
       */
      pr: [{
        pr: [$]
      }],
      /**
       * Padding Bottom
       * @see https://tailwindcss.com/docs/padding
       */
      pb: [{
        pb: [$]
      }],
      /**
       * Padding Left
       * @see https://tailwindcss.com/docs/padding
       */
      pl: [{
        pl: [$]
      }],
      /**
       * Margin
       * @see https://tailwindcss.com/docs/margin
       */
      m: [{
        m: [m]
      }],
      /**
       * Margin X
       * @see https://tailwindcss.com/docs/margin
       */
      mx: [{
        mx: [m]
      }],
      /**
       * Margin Y
       * @see https://tailwindcss.com/docs/margin
       */
      my: [{
        my: [m]
      }],
      /**
       * Margin Start
       * @see https://tailwindcss.com/docs/margin
       */
      ms: [{
        ms: [m]
      }],
      /**
       * Margin End
       * @see https://tailwindcss.com/docs/margin
       */
      me: [{
        me: [m]
      }],
      /**
       * Margin Top
       * @see https://tailwindcss.com/docs/margin
       */
      mt: [{
        mt: [m]
      }],
      /**
       * Margin Right
       * @see https://tailwindcss.com/docs/margin
       */
      mr: [{
        mr: [m]
      }],
      /**
       * Margin Bottom
       * @see https://tailwindcss.com/docs/margin
       */
      mb: [{
        mb: [m]
      }],
      /**
       * Margin Left
       * @see https://tailwindcss.com/docs/margin
       */
      ml: [{
        ml: [m]
      }],
      /**
       * Space Between X
       * @see https://tailwindcss.com/docs/space
       */
      "space-x": [{
        "space-x": [G]
      }],
      /**
       * Space Between X Reverse
       * @see https://tailwindcss.com/docs/space
       */
      "space-x-reverse": ["space-x-reverse"],
      /**
       * Space Between Y
       * @see https://tailwindcss.com/docs/space
       */
      "space-y": [{
        "space-y": [G]
      }],
      /**
       * Space Between Y Reverse
       * @see https://tailwindcss.com/docs/space
       */
      "space-y-reverse": ["space-y-reverse"],
      // Sizing
      /**
       * Width
       * @see https://tailwindcss.com/docs/width
       */
      w: [{
        w: ["auto", "min", "max", "fit", "svw", "lvw", "dvw", lt, t]
      }],
      /**
       * Min-Width
       * @see https://tailwindcss.com/docs/min-width
       */
      "min-w": [{
        "min-w": [lt, t, "min", "max", "fit"]
      }],
      /**
       * Max-Width
       * @see https://tailwindcss.com/docs/max-width
       */
      "max-w": [{
        "max-w": [lt, t, "none", "full", "min", "max", "fit", "prose", {
          screen: [Rs]
        }, Rs]
      }],
      /**
       * Height
       * @see https://tailwindcss.com/docs/height
       */
      h: [{
        h: [lt, t, "auto", "min", "max", "fit", "svh", "lvh", "dvh"]
      }],
      /**
       * Min-Height
       * @see https://tailwindcss.com/docs/min-height
       */
      "min-h": [{
        "min-h": [lt, t, "min", "max", "fit", "svh", "lvh", "dvh"]
      }],
      /**
       * Max-Height
       * @see https://tailwindcss.com/docs/max-height
       */
      "max-h": [{
        "max-h": [lt, t, "min", "max", "fit", "svh", "lvh", "dvh"]
      }],
      /**
       * Size
       * @see https://tailwindcss.com/docs/size
       */
      size: [{
        size: [lt, t, "auto", "min", "max", "fit"]
      }],
      // Typography
      /**
       * Font Size
       * @see https://tailwindcss.com/docs/font-size
       */
      "font-size": [{
        text: ["base", Rs, Ms]
      }],
      /**
       * Font Smoothing
       * @see https://tailwindcss.com/docs/font-smoothing
       */
      "font-smoothing": ["antialiased", "subpixel-antialiased"],
      /**
       * Font Style
       * @see https://tailwindcss.com/docs/font-style
       */
      "font-style": ["italic", "not-italic"],
      /**
       * Font Weight
       * @see https://tailwindcss.com/docs/font-weight
       */
      "font-weight": [{
        font: ["thin", "extralight", "light", "normal", "medium", "semibold", "bold", "extrabold", "black", r2]
      }],
      /**
       * Font Family
       * @see https://tailwindcss.com/docs/font-family
       */
      "font-family": [{
        font: [pm]
      }],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-normal": ["normal-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-ordinal": ["ordinal"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-slashed-zero": ["slashed-zero"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-figure": ["lining-nums", "oldstyle-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-spacing": ["proportional-nums", "tabular-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-fraction": ["diagonal-fractions", "stacked-fractions"],
      /**
       * Letter Spacing
       * @see https://tailwindcss.com/docs/letter-spacing
       */
      tracking: [{
        tracking: ["tighter", "tight", "normal", "wide", "wider", "widest", lt]
      }],
      /**
       * Line Clamp
       * @see https://tailwindcss.com/docs/line-clamp
       */
      "line-clamp": [{
        "line-clamp": ["none", Rf, r2]
      }],
      /**
       * Line Height
       * @see https://tailwindcss.com/docs/line-height
       */
      leading: [{
        leading: ["none", "tight", "snug", "normal", "relaxed", "loose", Va, lt]
      }],
      /**
       * List Style Image
       * @see https://tailwindcss.com/docs/list-style-image
       */
      "list-image": [{
        "list-image": ["none", lt]
      }],
      /**
       * List Style Type
       * @see https://tailwindcss.com/docs/list-style-type
       */
      "list-style-type": [{
        list: ["none", "disc", "decimal", lt]
      }],
      /**
       * List Style Position
       * @see https://tailwindcss.com/docs/list-style-position
       */
      "list-style-position": [{
        list: ["inside", "outside"]
      }],
      /**
       * Placeholder Color
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/placeholder-color
       */
      "placeholder-color": [{
        placeholder: [e]
      }],
      /**
       * Placeholder Opacity
       * @see https://tailwindcss.com/docs/placeholder-opacity
       */
      "placeholder-opacity": [{
        "placeholder-opacity": [w]
      }],
      /**
       * Text Alignment
       * @see https://tailwindcss.com/docs/text-align
       */
      "text-alignment": [{
        text: ["left", "center", "right", "justify", "start", "end"]
      }],
      /**
       * Text Color
       * @see https://tailwindcss.com/docs/text-color
       */
      "text-color": [{
        text: [e]
      }],
      /**
       * Text Opacity
       * @see https://tailwindcss.com/docs/text-opacity
       */
      "text-opacity": [{
        "text-opacity": [w]
      }],
      /**
       * Text Decoration
       * @see https://tailwindcss.com/docs/text-decoration
       */
      "text-decoration": ["underline", "overline", "line-through", "no-underline"],
      /**
       * Text Decoration Style
       * @see https://tailwindcss.com/docs/text-decoration-style
       */
      "text-decoration-style": [{
        decoration: [...F(), "wavy"]
      }],
      /**
       * Text Decoration Thickness
       * @see https://tailwindcss.com/docs/text-decoration-thickness
       */
      "text-decoration-thickness": [{
        decoration: ["auto", "from-font", Va, Ms]
      }],
      /**
       * Text Underline Offset
       * @see https://tailwindcss.com/docs/text-underline-offset
       */
      "underline-offset": [{
        "underline-offset": ["auto", Va, lt]
      }],
      /**
       * Text Decoration Color
       * @see https://tailwindcss.com/docs/text-decoration-color
       */
      "text-decoration-color": [{
        decoration: [e]
      }],
      /**
       * Text Transform
       * @see https://tailwindcss.com/docs/text-transform
       */
      "text-transform": ["uppercase", "lowercase", "capitalize", "normal-case"],
      /**
       * Text Overflow
       * @see https://tailwindcss.com/docs/text-overflow
       */
      "text-overflow": ["truncate", "text-ellipsis", "text-clip"],
      /**
       * Text Wrap
       * @see https://tailwindcss.com/docs/text-wrap
       */
      "text-wrap": [{
        text: ["wrap", "nowrap", "balance", "pretty"]
      }],
      /**
       * Text Indent
       * @see https://tailwindcss.com/docs/text-indent
       */
      indent: [{
        indent: I()
      }],
      /**
       * Vertical Alignment
       * @see https://tailwindcss.com/docs/vertical-align
       */
      "vertical-align": [{
        align: ["baseline", "top", "middle", "bottom", "text-top", "text-bottom", "sub", "super", lt]
      }],
      /**
       * Whitespace
       * @see https://tailwindcss.com/docs/whitespace
       */
      whitespace: [{
        whitespace: ["normal", "nowrap", "pre", "pre-line", "pre-wrap", "break-spaces"]
      }],
      /**
       * Word Break
       * @see https://tailwindcss.com/docs/word-break
       */
      break: [{
        break: ["normal", "words", "all", "keep"]
      }],
      /**
       * Hyphens
       * @see https://tailwindcss.com/docs/hyphens
       */
      hyphens: [{
        hyphens: ["none", "manual", "auto"]
      }],
      /**
       * Content
       * @see https://tailwindcss.com/docs/content
       */
      content: [{
        content: ["none", lt]
      }],
      // Backgrounds
      /**
       * Background Attachment
       * @see https://tailwindcss.com/docs/background-attachment
       */
      "bg-attachment": [{
        bg: ["fixed", "local", "scroll"]
      }],
      /**
       * Background Clip
       * @see https://tailwindcss.com/docs/background-clip
       */
      "bg-clip": [{
        "bg-clip": ["border", "padding", "content", "text"]
      }],
      /**
       * Background Opacity
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/background-opacity
       */
      "bg-opacity": [{
        "bg-opacity": [w]
      }],
      /**
       * Background Origin
       * @see https://tailwindcss.com/docs/background-origin
       */
      "bg-origin": [{
        "bg-origin": ["border", "padding", "content"]
      }],
      /**
       * Background Position
       * @see https://tailwindcss.com/docs/background-position
       */
      "bg-position": [{
        bg: [...D(), uhe]
      }],
      /**
       * Background Repeat
       * @see https://tailwindcss.com/docs/background-repeat
       */
      "bg-repeat": [{
        bg: ["no-repeat", {
          repeat: ["", "x", "y", "round", "space"]
        }]
      }],
      /**
       * Background Size
       * @see https://tailwindcss.com/docs/background-size
       */
      "bg-size": [{
        bg: ["auto", "cover", "contain", che]
      }],
      /**
       * Background Image
       * @see https://tailwindcss.com/docs/background-image
       */
      "bg-image": [{
        bg: ["none", {
          "gradient-to": ["t", "tr", "r", "br", "b", "bl", "l", "tl"]
        }, dhe]
      }],
      /**
       * Background Color
       * @see https://tailwindcss.com/docs/background-color
       */
      "bg-color": [{
        bg: [e]
      }],
      /**
       * Gradient Color Stops From Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-from-pos": [{
        from: [x]
      }],
      /**
       * Gradient Color Stops Via Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-via-pos": [{
        via: [x]
      }],
      /**
       * Gradient Color Stops To Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-to-pos": [{
        to: [x]
      }],
      /**
       * Gradient Color Stops From
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-from": [{
        from: [v]
      }],
      /**
       * Gradient Color Stops Via
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-via": [{
        via: [v]
      }],
      /**
       * Gradient Color Stops To
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-to": [{
        to: [v]
      }],
      // Borders
      /**
       * Border Radius
       * @see https://tailwindcss.com/docs/border-radius
       */
      rounded: [{
        rounded: [a]
      }],
      /**
       * Border Radius Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-s": [{
        "rounded-s": [a]
      }],
      /**
       * Border Radius End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-e": [{
        "rounded-e": [a]
      }],
      /**
       * Border Radius Top
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-t": [{
        "rounded-t": [a]
      }],
      /**
       * Border Radius Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-r": [{
        "rounded-r": [a]
      }],
      /**
       * Border Radius Bottom
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-b": [{
        "rounded-b": [a]
      }],
      /**
       * Border Radius Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-l": [{
        "rounded-l": [a]
      }],
      /**
       * Border Radius Start Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-ss": [{
        "rounded-ss": [a]
      }],
      /**
       * Border Radius Start End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-se": [{
        "rounded-se": [a]
      }],
      /**
       * Border Radius End End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-ee": [{
        "rounded-ee": [a]
      }],
      /**
       * Border Radius End Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-es": [{
        "rounded-es": [a]
      }],
      /**
       * Border Radius Top Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-tl": [{
        "rounded-tl": [a]
      }],
      /**
       * Border Radius Top Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-tr": [{
        "rounded-tr": [a]
      }],
      /**
       * Border Radius Bottom Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-br": [{
        "rounded-br": [a]
      }],
      /**
       * Border Radius Bottom Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-bl": [{
        "rounded-bl": [a]
      }],
      /**
       * Border Width
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w": [{
        border: [s]
      }],
      /**
       * Border Width X
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-x": [{
        "border-x": [s]
      }],
      /**
       * Border Width Y
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-y": [{
        "border-y": [s]
      }],
      /**
       * Border Width Start
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-s": [{
        "border-s": [s]
      }],
      /**
       * Border Width End
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-e": [{
        "border-e": [s]
      }],
      /**
       * Border Width Top
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-t": [{
        "border-t": [s]
      }],
      /**
       * Border Width Right
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-r": [{
        "border-r": [s]
      }],
      /**
       * Border Width Bottom
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-b": [{
        "border-b": [s]
      }],
      /**
       * Border Width Left
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-l": [{
        "border-l": [s]
      }],
      /**
       * Border Opacity
       * @see https://tailwindcss.com/docs/border-opacity
       */
      "border-opacity": [{
        "border-opacity": [w]
      }],
      /**
       * Border Style
       * @see https://tailwindcss.com/docs/border-style
       */
      "border-style": [{
        border: [...F(), "hidden"]
      }],
      /**
       * Divide Width X
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-x": [{
        "divide-x": [s]
      }],
      /**
       * Divide Width X Reverse
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-x-reverse": ["divide-x-reverse"],
      /**
       * Divide Width Y
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-y": [{
        "divide-y": [s]
      }],
      /**
       * Divide Width Y Reverse
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-y-reverse": ["divide-y-reverse"],
      /**
       * Divide Opacity
       * @see https://tailwindcss.com/docs/divide-opacity
       */
      "divide-opacity": [{
        "divide-opacity": [w]
      }],
      /**
       * Divide Style
       * @see https://tailwindcss.com/docs/divide-style
       */
      "divide-style": [{
        divide: F()
      }],
      /**
       * Border Color
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color": [{
        border: [o]
      }],
      /**
       * Border Color X
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-x": [{
        "border-x": [o]
      }],
      /**
       * Border Color Y
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-y": [{
        "border-y": [o]
      }],
      /**
       * Border Color S
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-s": [{
        "border-s": [o]
      }],
      /**
       * Border Color E
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-e": [{
        "border-e": [o]
      }],
      /**
       * Border Color Top
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-t": [{
        "border-t": [o]
      }],
      /**
       * Border Color Right
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-r": [{
        "border-r": [o]
      }],
      /**
       * Border Color Bottom
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-b": [{
        "border-b": [o]
      }],
      /**
       * Border Color Left
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-l": [{
        "border-l": [o]
      }],
      /**
       * Divide Color
       * @see https://tailwindcss.com/docs/divide-color
       */
      "divide-color": [{
        divide: [o]
      }],
      /**
       * Outline Style
       * @see https://tailwindcss.com/docs/outline-style
       */
      "outline-style": [{
        outline: ["", ...F()]
      }],
      /**
       * Outline Offset
       * @see https://tailwindcss.com/docs/outline-offset
       */
      "outline-offset": [{
        "outline-offset": [Va, lt]
      }],
      /**
       * Outline Width
       * @see https://tailwindcss.com/docs/outline-width
       */
      "outline-w": [{
        outline: [Va, Ms]
      }],
      /**
       * Outline Color
       * @see https://tailwindcss.com/docs/outline-color
       */
      "outline-color": [{
        outline: [e]
      }],
      /**
       * Ring Width
       * @see https://tailwindcss.com/docs/ring-width
       */
      "ring-w": [{
        ring: te()
      }],
      /**
       * Ring Width Inset
       * @see https://tailwindcss.com/docs/ring-width
       */
      "ring-w-inset": ["ring-inset"],
      /**
       * Ring Color
       * @see https://tailwindcss.com/docs/ring-color
       */
      "ring-color": [{
        ring: [e]
      }],
      /**
       * Ring Opacity
       * @see https://tailwindcss.com/docs/ring-opacity
       */
      "ring-opacity": [{
        "ring-opacity": [w]
      }],
      /**
       * Ring Offset Width
       * @see https://tailwindcss.com/docs/ring-offset-width
       */
      "ring-offset-w": [{
        "ring-offset": [Va, Ms]
      }],
      /**
       * Ring Offset Color
       * @see https://tailwindcss.com/docs/ring-offset-color
       */
      "ring-offset-color": [{
        "ring-offset": [e]
      }],
      // Effects
      /**
       * Box Shadow
       * @see https://tailwindcss.com/docs/box-shadow
       */
      shadow: [{
        shadow: ["", "inner", "none", Rs, phe]
      }],
      /**
       * Box Shadow Color
       * @see https://tailwindcss.com/docs/box-shadow-color
       */
      "shadow-color": [{
        shadow: [pm]
      }],
      /**
       * Opacity
       * @see https://tailwindcss.com/docs/opacity
       */
      opacity: [{
        opacity: [w]
      }],
      /**
       * Mix Blend Mode
       * @see https://tailwindcss.com/docs/mix-blend-mode
       */
      "mix-blend": [{
        "mix-blend": [...R(), "plus-lighter", "plus-darker"]
      }],
      /**
       * Background Blend Mode
       * @see https://tailwindcss.com/docs/background-blend-mode
       */
      "bg-blend": [{
        "bg-blend": R()
      }],
      // Filters
      /**
       * Filter
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/filter
       */
      filter: [{
        filter: ["", "none"]
      }],
      /**
       * Blur
       * @see https://tailwindcss.com/docs/blur
       */
      blur: [{
        blur: [r]
      }],
      /**
       * Brightness
       * @see https://tailwindcss.com/docs/brightness
       */
      brightness: [{
        brightness: [n]
      }],
      /**
       * Contrast
       * @see https://tailwindcss.com/docs/contrast
       */
      contrast: [{
        contrast: [l]
      }],
      /**
       * Drop Shadow
       * @see https://tailwindcss.com/docs/drop-shadow
       */
      "drop-shadow": [{
        "drop-shadow": ["", "none", Rs, lt]
      }],
      /**
       * Grayscale
       * @see https://tailwindcss.com/docs/grayscale
       */
      grayscale: [{
        grayscale: [c]
      }],
      /**
       * Hue Rotate
       * @see https://tailwindcss.com/docs/hue-rotate
       */
      "hue-rotate": [{
        "hue-rotate": [u]
      }],
      /**
       * Invert
       * @see https://tailwindcss.com/docs/invert
       */
      invert: [{
        invert: [f]
      }],
      /**
       * Saturate
       * @see https://tailwindcss.com/docs/saturate
       */
      saturate: [{
        saturate: [E]
      }],
      /**
       * Sepia
       * @see https://tailwindcss.com/docs/sepia
       */
      sepia: [{
        sepia: [h]
      }],
      /**
       * Backdrop Filter
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/backdrop-filter
       */
      "backdrop-filter": [{
        "backdrop-filter": ["", "none"]
      }],
      /**
       * Backdrop Blur
       * @see https://tailwindcss.com/docs/backdrop-blur
       */
      "backdrop-blur": [{
        "backdrop-blur": [r]
      }],
      /**
       * Backdrop Brightness
       * @see https://tailwindcss.com/docs/backdrop-brightness
       */
      "backdrop-brightness": [{
        "backdrop-brightness": [n]
      }],
      /**
       * Backdrop Contrast
       * @see https://tailwindcss.com/docs/backdrop-contrast
       */
      "backdrop-contrast": [{
        "backdrop-contrast": [l]
      }],
      /**
       * Backdrop Grayscale
       * @see https://tailwindcss.com/docs/backdrop-grayscale
       */
      "backdrop-grayscale": [{
        "backdrop-grayscale": [c]
      }],
      /**
       * Backdrop Hue Rotate
       * @see https://tailwindcss.com/docs/backdrop-hue-rotate
       */
      "backdrop-hue-rotate": [{
        "backdrop-hue-rotate": [u]
      }],
      /**
       * Backdrop Invert
       * @see https://tailwindcss.com/docs/backdrop-invert
       */
      "backdrop-invert": [{
        "backdrop-invert": [f]
      }],
      /**
       * Backdrop Opacity
       * @see https://tailwindcss.com/docs/backdrop-opacity
       */
      "backdrop-opacity": [{
        "backdrop-opacity": [w]
      }],
      /**
       * Backdrop Saturate
       * @see https://tailwindcss.com/docs/backdrop-saturate
       */
      "backdrop-saturate": [{
        "backdrop-saturate": [E]
      }],
      /**
       * Backdrop Sepia
       * @see https://tailwindcss.com/docs/backdrop-sepia
       */
      "backdrop-sepia": [{
        "backdrop-sepia": [h]
      }],
      // Tables
      /**
       * Border Collapse
       * @see https://tailwindcss.com/docs/border-collapse
       */
      "border-collapse": [{
        border: ["collapse", "separate"]
      }],
      /**
       * Border Spacing
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing": [{
        "border-spacing": [i]
      }],
      /**
       * Border Spacing X
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing-x": [{
        "border-spacing-x": [i]
      }],
      /**
       * Border Spacing Y
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing-y": [{
        "border-spacing-y": [i]
      }],
      /**
       * Table Layout
       * @see https://tailwindcss.com/docs/table-layout
       */
      "table-layout": [{
        table: ["auto", "fixed"]
      }],
      /**
       * Caption Side
       * @see https://tailwindcss.com/docs/caption-side
       */
      caption: [{
        caption: ["top", "bottom"]
      }],
      // Transitions and Animation
      /**
       * Tranisition Property
       * @see https://tailwindcss.com/docs/transition-property
       */
      transition: [{
        transition: ["none", "all", "", "colors", "opacity", "shadow", "transform", lt]
      }],
      /**
       * Transition Duration
       * @see https://tailwindcss.com/docs/transition-duration
       */
      duration: [{
        duration: d()
      }],
      /**
       * Transition Timing Function
       * @see https://tailwindcss.com/docs/transition-timing-function
       */
      ease: [{
        ease: ["linear", "in", "out", "in-out", lt]
      }],
      /**
       * Transition Delay
       * @see https://tailwindcss.com/docs/transition-delay
       */
      delay: [{
        delay: d()
      }],
      /**
       * Animation
       * @see https://tailwindcss.com/docs/animation
       */
      animate: [{
        animate: ["none", "spin", "ping", "pulse", "bounce", lt]
      }],
      // Transforms
      /**
       * Transform
       * @see https://tailwindcss.com/docs/transform
       */
      transform: [{
        transform: ["", "gpu", "none"]
      }],
      /**
       * Scale
       * @see https://tailwindcss.com/docs/scale
       */
      scale: [{
        scale: [S]
      }],
      /**
       * Scale X
       * @see https://tailwindcss.com/docs/scale
       */
      "scale-x": [{
        "scale-x": [S]
      }],
      /**
       * Scale Y
       * @see https://tailwindcss.com/docs/scale
       */
      "scale-y": [{
        "scale-y": [S]
      }],
      /**
       * Rotate
       * @see https://tailwindcss.com/docs/rotate
       */
      rotate: [{
        rotate: [dm, lt]
      }],
      /**
       * Translate X
       * @see https://tailwindcss.com/docs/translate
       */
      "translate-x": [{
        "translate-x": [Q]
      }],
      /**
       * Translate Y
       * @see https://tailwindcss.com/docs/translate
       */
      "translate-y": [{
        "translate-y": [Q]
      }],
      /**
       * Skew X
       * @see https://tailwindcss.com/docs/skew
       */
      "skew-x": [{
        "skew-x": [U]
      }],
      /**
       * Skew Y
       * @see https://tailwindcss.com/docs/skew
       */
      "skew-y": [{
        "skew-y": [U]
      }],
      /**
       * Transform Origin
       * @see https://tailwindcss.com/docs/transform-origin
       */
      "transform-origin": [{
        origin: ["center", "top", "top-right", "right", "bottom-right", "bottom", "bottom-left", "left", "top-left", lt]
      }],
      // Interactivity
      /**
       * Accent Color
       * @see https://tailwindcss.com/docs/accent-color
       */
      accent: [{
        accent: ["auto", e]
      }],
      /**
       * Appearance
       * @see https://tailwindcss.com/docs/appearance
       */
      appearance: [{
        appearance: ["none", "auto"]
      }],
      /**
       * Cursor
       * @see https://tailwindcss.com/docs/cursor
       */
      cursor: [{
        cursor: ["auto", "default", "pointer", "wait", "text", "move", "help", "not-allowed", "none", "context-menu", "progress", "cell", "crosshair", "vertical-text", "alias", "copy", "no-drop", "grab", "grabbing", "all-scroll", "col-resize", "row-resize", "n-resize", "e-resize", "s-resize", "w-resize", "ne-resize", "nw-resize", "se-resize", "sw-resize", "ew-resize", "ns-resize", "nesw-resize", "nwse-resize", "zoom-in", "zoom-out", lt]
      }],
      /**
       * Caret Color
       * @see https://tailwindcss.com/docs/just-in-time-mode#caret-color-utilities
       */
      "caret-color": [{
        caret: [e]
      }],
      /**
       * Pointer Events
       * @see https://tailwindcss.com/docs/pointer-events
       */
      "pointer-events": [{
        "pointer-events": ["none", "auto"]
      }],
      /**
       * Resize
       * @see https://tailwindcss.com/docs/resize
       */
      resize: [{
        resize: ["none", "y", "x", ""]
      }],
      /**
       * Scroll Behavior
       * @see https://tailwindcss.com/docs/scroll-behavior
       */
      "scroll-behavior": [{
        scroll: ["auto", "smooth"]
      }],
      /**
       * Scroll Margin
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-m": [{
        "scroll-m": I()
      }],
      /**
       * Scroll Margin X
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mx": [{
        "scroll-mx": I()
      }],
      /**
       * Scroll Margin Y
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-my": [{
        "scroll-my": I()
      }],
      /**
       * Scroll Margin Start
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-ms": [{
        "scroll-ms": I()
      }],
      /**
       * Scroll Margin End
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-me": [{
        "scroll-me": I()
      }],
      /**
       * Scroll Margin Top
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mt": [{
        "scroll-mt": I()
      }],
      /**
       * Scroll Margin Right
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mr": [{
        "scroll-mr": I()
      }],
      /**
       * Scroll Margin Bottom
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mb": [{
        "scroll-mb": I()
      }],
      /**
       * Scroll Margin Left
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-ml": [{
        "scroll-ml": I()
      }],
      /**
       * Scroll Padding
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-p": [{
        "scroll-p": I()
      }],
      /**
       * Scroll Padding X
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-px": [{
        "scroll-px": I()
      }],
      /**
       * Scroll Padding Y
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-py": [{
        "scroll-py": I()
      }],
      /**
       * Scroll Padding Start
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-ps": [{
        "scroll-ps": I()
      }],
      /**
       * Scroll Padding End
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pe": [{
        "scroll-pe": I()
      }],
      /**
       * Scroll Padding Top
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pt": [{
        "scroll-pt": I()
      }],
      /**
       * Scroll Padding Right
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pr": [{
        "scroll-pr": I()
      }],
      /**
       * Scroll Padding Bottom
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pb": [{
        "scroll-pb": I()
      }],
      /**
       * Scroll Padding Left
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pl": [{
        "scroll-pl": I()
      }],
      /**
       * Scroll Snap Align
       * @see https://tailwindcss.com/docs/scroll-snap-align
       */
      "snap-align": [{
        snap: ["start", "end", "center", "align-none"]
      }],
      /**
       * Scroll Snap Stop
       * @see https://tailwindcss.com/docs/scroll-snap-stop
       */
      "snap-stop": [{
        snap: ["normal", "always"]
      }],
      /**
       * Scroll Snap Type
       * @see https://tailwindcss.com/docs/scroll-snap-type
       */
      "snap-type": [{
        snap: ["none", "x", "y", "both"]
      }],
      /**
       * Scroll Snap Type Strictness
       * @see https://tailwindcss.com/docs/scroll-snap-type
       */
      "snap-strictness": [{
        snap: ["mandatory", "proximity"]
      }],
      /**
       * Touch Action
       * @see https://tailwindcss.com/docs/touch-action
       */
      touch: [{
        touch: ["auto", "none", "manipulation"]
      }],
      /**
       * Touch Action X
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-x": [{
        "touch-pan": ["x", "left", "right"]
      }],
      /**
       * Touch Action Y
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-y": [{
        "touch-pan": ["y", "up", "down"]
      }],
      /**
       * Touch Action Pinch Zoom
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-pz": ["touch-pinch-zoom"],
      /**
       * User Select
       * @see https://tailwindcss.com/docs/user-select
       */
      select: [{
        select: ["none", "text", "all", "auto"]
      }],
      /**
       * Will Change
       * @see https://tailwindcss.com/docs/will-change
       */
      "will-change": [{
        "will-change": ["auto", "scroll", "contents", "transform", lt]
      }],
      // SVG
      /**
       * Fill
       * @see https://tailwindcss.com/docs/fill
       */
      fill: [{
        fill: [e, "none"]
      }],
      /**
       * Stroke Width
       * @see https://tailwindcss.com/docs/stroke-width
       */
      "stroke-w": [{
        stroke: [Va, Ms, r2]
      }],
      /**
       * Stroke
       * @see https://tailwindcss.com/docs/stroke
       */
      stroke: [{
        stroke: [e, "none"]
      }],
      // Accessibility
      /**
       * Screen Readers
       * @see https://tailwindcss.com/docs/screen-readers
       */
      sr: ["sr-only", "not-sr-only"],
      /**
       * Forced Color Adjust
       * @see https://tailwindcss.com/docs/forced-color-adjust
       */
      "forced-color-adjust": [{
        "forced-color-adjust": ["auto", "none"]
      }]
    },
    conflictingClassGroups: {
      overflow: ["overflow-x", "overflow-y"],
      overscroll: ["overscroll-x", "overscroll-y"],
      inset: ["inset-x", "inset-y", "start", "end", "top", "right", "bottom", "left"],
      "inset-x": ["right", "left"],
      "inset-y": ["top", "bottom"],
      flex: ["basis", "grow", "shrink"],
      gap: ["gap-x", "gap-y"],
      p: ["px", "py", "ps", "pe", "pt", "pr", "pb", "pl"],
      px: ["pr", "pl"],
      py: ["pt", "pb"],
      m: ["mx", "my", "ms", "me", "mt", "mr", "mb", "ml"],
      mx: ["mr", "ml"],
      my: ["mt", "mb"],
      size: ["w", "h"],
      "font-size": ["leading"],
      "fvn-normal": ["fvn-ordinal", "fvn-slashed-zero", "fvn-figure", "fvn-spacing", "fvn-fraction"],
      "fvn-ordinal": ["fvn-normal"],
      "fvn-slashed-zero": ["fvn-normal"],
      "fvn-figure": ["fvn-normal"],
      "fvn-spacing": ["fvn-normal"],
      "fvn-fraction": ["fvn-normal"],
      "line-clamp": ["display", "overflow"],
      rounded: ["rounded-s", "rounded-e", "rounded-t", "rounded-r", "rounded-b", "rounded-l", "rounded-ss", "rounded-se", "rounded-ee", "rounded-es", "rounded-tl", "rounded-tr", "rounded-br", "rounded-bl"],
      "rounded-s": ["rounded-ss", "rounded-es"],
      "rounded-e": ["rounded-se", "rounded-ee"],
      "rounded-t": ["rounded-tl", "rounded-tr"],
      "rounded-r": ["rounded-tr", "rounded-br"],
      "rounded-b": ["rounded-br", "rounded-bl"],
      "rounded-l": ["rounded-tl", "rounded-bl"],
      "border-spacing": ["border-spacing-x", "border-spacing-y"],
      "border-w": ["border-w-s", "border-w-e", "border-w-t", "border-w-r", "border-w-b", "border-w-l"],
      "border-w-x": ["border-w-r", "border-w-l"],
      "border-w-y": ["border-w-t", "border-w-b"],
      "border-color": ["border-color-s", "border-color-e", "border-color-t", "border-color-r", "border-color-b", "border-color-l"],
      "border-color-x": ["border-color-r", "border-color-l"],
      "border-color-y": ["border-color-t", "border-color-b"],
      "scroll-m": ["scroll-mx", "scroll-my", "scroll-ms", "scroll-me", "scroll-mt", "scroll-mr", "scroll-mb", "scroll-ml"],
      "scroll-mx": ["scroll-mr", "scroll-ml"],
      "scroll-my": ["scroll-mt", "scroll-mb"],
      "scroll-p": ["scroll-px", "scroll-py", "scroll-ps", "scroll-pe", "scroll-pt", "scroll-pr", "scroll-pb", "scroll-pl"],
      "scroll-px": ["scroll-pr", "scroll-pl"],
      "scroll-py": ["scroll-pt", "scroll-pb"],
      touch: ["touch-x", "touch-y", "touch-pz"],
      "touch-x": ["touch"],
      "touch-y": ["touch"],
      "touch-pz": ["touch"]
    },
    conflictingClassGroupModifiers: {
      "font-size": ["leading"]
    }
  };
}, yhe = /* @__PURE__ */ Zge(bhe), vhe = ({
  onClick: e,
  className: t,
  size: r = "md"
}) => /* @__PURE__ */ q(
  "button",
  {
    onClick: e,
    className: yhe(
      "flex items-center justify-center rounded-full bg-black/40 text-white/60 transition-all hover:bg-black/70 hover:text-white",
      {
        sm: "h-5 w-5 text-sm",
        md: "h-7 w-7 text-md",
        lg: "h-9 w-9 text-xl"
      }[r],
      t
    ),
    children: /* @__PURE__ */ q(uP, { icon: bpe })
  }
);
var dP = nb(), ot = (e) => rb(e, dP), pP = nb();
ot.write = (e) => rb(e, pP);
var d0 = nb();
ot.onStart = (e) => rb(e, d0);
var mP = nb();
ot.onFrame = (e) => rb(e, mP);
var gP = nb();
ot.onFinish = (e) => rb(e, gP);
var zf = [];
ot.setTimeout = (e, t) => {
  const r = ot.now() + t, n = () => {
    const a = zf.findIndex((i) => i.cancel == n);
    ~a && zf.splice(a, 1), Sl -= ~a ? 1 : 0;
  }, o = { time: r, handler: e, cancel: n };
  return zf.splice(bU(r), 0, o), Sl += 1, yU(), o;
};
var bU = (e) => ~(~zf.findIndex((t) => t.time > e) || ~zf.length);
ot.cancel = (e) => {
  d0.delete(e), mP.delete(e), gP.delete(e), dP.delete(e), pP.delete(e);
};
ot.sync = (e) => {
  m3 = !0, ot.batchedUpdates(e), m3 = !1;
};
ot.throttle = (e) => {
  let t;
  function r() {
    try {
      e(...t);
    } finally {
      t = null;
    }
  }
  function n(...o) {
    t = o, ot.onStart(r);
  }
  return n.handler = e, n.cancel = () => {
    d0.delete(r), t = null;
  }, n;
};
var hP = typeof window < "u" ? window.requestAnimationFrame : (
  // eslint-disable-next-line @typescript-eslint/no-empty-function
  () => {
  }
);
ot.use = (e) => hP = e;
ot.now = typeof performance < "u" ? () => performance.now() : Date.now;
ot.batchedUpdates = (e) => e();
ot.catch = console.error;
ot.frameLoop = "always";
ot.advance = () => {
  ot.frameLoop !== "demand" ? console.warn(
    "Cannot call the manual advancement of rafz whilst frameLoop is not set as demand"
  ) : xU();
};
var El = -1, Sl = 0, m3 = !1;
function rb(e, t) {
  m3 ? (t.delete(e), e(0)) : (t.add(e), yU());
}
function yU() {
  El < 0 && (El = 0, ot.frameLoop !== "demand" && hP(vU));
}
function xhe() {
  El = -1;
}
function vU() {
  ~El && (hP(vU), ot.batchedUpdates(xU));
}
function xU() {
  const e = El;
  El = ot.now();
  const t = bU(El);
  if (t && (wU(zf.splice(0, t), (r) => r.handler()), Sl -= t), !Sl) {
    xhe();
    return;
  }
  d0.flush(), dP.flush(e ? Math.min(64, El - e) : 16.667), mP.flush(), pP.flush(), gP.flush();
}
function nb() {
  let e = /* @__PURE__ */ new Set(), t = e;
  return {
    add(r) {
      Sl += t == e && !e.has(r) ? 1 : 0, e.add(r);
    },
    delete(r) {
      return Sl -= t == e && e.has(r) ? 1 : 0, e.delete(r);
    },
    flush(r) {
      t.size && (e = /* @__PURE__ */ new Set(), Sl -= t.size, wU(t, (n) => n(r) && e.add(n)), Sl += e.size, t = e);
    }
  };
}
function wU(e, t) {
  e.forEach((r) => {
    try {
      t(r);
    } catch (n) {
      ot.catch(n);
    }
  });
}
var whe = Object.defineProperty, khe = (e, t) => {
  for (var r in t)
    whe(e, r, { get: t[r], enumerable: !0 });
}, zo = {};
khe(zo, {
  assign: () => Ohe,
  colors: () => Ml,
  createStringInterpolator: () => yP,
  skipAnimation: () => $U,
  to: () => kU,
  willAdvance: () => vP
});
function g3() {
}
var $he = (e, t, r) => Object.defineProperty(e, t, { value: r, writable: !0, configurable: !0 }), Se = {
  arr: Array.isArray,
  obj: (e) => !!e && e.constructor.name === "Object",
  fun: (e) => typeof e == "function",
  str: (e) => typeof e == "string",
  num: (e) => typeof e == "number",
  und: (e) => e === void 0
};
function oi(e, t) {
  if (Se.arr(e)) {
    if (!Se.arr(t) || e.length !== t.length) return !1;
    for (let r = 0; r < e.length; r++)
      if (e[r] !== t[r]) return !1;
    return !0;
  }
  return e === t;
}
var $t = (e, t) => e.forEach(t);
function ja(e, t, r) {
  if (Se.arr(e)) {
    for (let n = 0; n < e.length; n++)
      t.call(r, e[n], `${n}`);
    return;
  }
  for (const n in e)
    e.hasOwnProperty(n) && t.call(r, e[n], n);
}
var En = (e) => Se.und(e) ? [] : Se.arr(e) ? e : [e];
function Eg(e, t) {
  if (e.size) {
    const r = Array.from(e);
    e.clear(), $t(r, t);
  }
}
var eg = (e, ...t) => Eg(e, (r) => r(...t)), bP = () => typeof window > "u" || !window.navigator || /ServerSideRendering|^Deno\//.test(window.navigator.userAgent), yP, kU, Ml = null, $U = !1, vP = g3, Ohe = (e) => {
  e.to && (kU = e.to), e.now && (ot.now = e.now), e.colors !== void 0 && (Ml = e.colors), e.skipAnimation != null && ($U = e.skipAnimation), e.createStringInterpolator && (yP = e.createStringInterpolator), e.requestAnimationFrame && ot.use(e.requestAnimationFrame), e.batchedUpdates && (ot.batchedUpdates = e.batchedUpdates), e.willAdvance && (vP = e.willAdvance), e.frameLoop && (ot.frameLoop = e.frameLoop);
}, Sg = /* @__PURE__ */ new Set(), yo = [], n2 = [], Gv = 0, p0 = {
  get idle() {
    return !Sg.size && !yo.length;
  },
  /** Advance the given animation on every frame until idle. */
  start(e) {
    Gv > e.priority ? (Sg.add(e), ot.onStart(Ehe)) : (OU(e), ot(h3));
  },
  /** Advance all animations by the given time. */
  advance: h3,
  /** Call this when an animation's priority changes. */
  sort(e) {
    if (Gv)
      ot.onFrame(() => p0.sort(e));
    else {
      const t = yo.indexOf(e);
      ~t && (yo.splice(t, 1), EU(e));
    }
  },
  /**
   * Clear all animations. For testing purposes.
   *
   * ☠️ Never call this from within the frameloop.
   */
  clear() {
    yo = [], Sg.clear();
  }
};
function Ehe() {
  Sg.forEach(OU), Sg.clear(), ot(h3);
}
function OU(e) {
  yo.includes(e) || EU(e);
}
function EU(e) {
  yo.splice(
    She(yo, (t) => t.priority > e.priority),
    0,
    e
  );
}
function h3(e) {
  const t = n2;
  for (let r = 0; r < yo.length; r++) {
    const n = yo[r];
    Gv = n.priority, n.idle || (vP(n), n.advance(e), n.idle || t.push(n));
  }
  return Gv = 0, n2 = yo, n2.length = 0, yo = t, yo.length > 0;
}
function She(e, t) {
  const r = e.findIndex(t);
  return r < 0 ? e.length : r;
}
var Phe = {
  transparent: 0,
  aliceblue: 4042850303,
  antiquewhite: 4209760255,
  aqua: 16777215,
  aquamarine: 2147472639,
  azure: 4043309055,
  beige: 4126530815,
  bisque: 4293182719,
  black: 255,
  blanchedalmond: 4293643775,
  blue: 65535,
  blueviolet: 2318131967,
  brown: 2771004159,
  burlywood: 3736635391,
  burntsienna: 3934150143,
  cadetblue: 1604231423,
  chartreuse: 2147418367,
  chocolate: 3530104575,
  coral: 4286533887,
  cornflowerblue: 1687547391,
  cornsilk: 4294499583,
  crimson: 3692313855,
  cyan: 16777215,
  darkblue: 35839,
  darkcyan: 9145343,
  darkgoldenrod: 3095792639,
  darkgray: 2846468607,
  darkgreen: 6553855,
  darkgrey: 2846468607,
  darkkhaki: 3182914559,
  darkmagenta: 2332068863,
  darkolivegreen: 1433087999,
  darkorange: 4287365375,
  darkorchid: 2570243327,
  darkred: 2332033279,
  darksalmon: 3918953215,
  darkseagreen: 2411499519,
  darkslateblue: 1211993087,
  darkslategray: 793726975,
  darkslategrey: 793726975,
  darkturquoise: 13554175,
  darkviolet: 2483082239,
  deeppink: 4279538687,
  deepskyblue: 12582911,
  dimgray: 1768516095,
  dimgrey: 1768516095,
  dodgerblue: 512819199,
  firebrick: 2988581631,
  floralwhite: 4294635775,
  forestgreen: 579543807,
  fuchsia: 4278255615,
  gainsboro: 3705462015,
  ghostwhite: 4177068031,
  gold: 4292280575,
  goldenrod: 3668254975,
  gray: 2155905279,
  green: 8388863,
  greenyellow: 2919182335,
  grey: 2155905279,
  honeydew: 4043305215,
  hotpink: 4285117695,
  indianred: 3445382399,
  indigo: 1258324735,
  ivory: 4294963455,
  khaki: 4041641215,
  lavender: 3873897215,
  lavenderblush: 4293981695,
  lawngreen: 2096890111,
  lemonchiffon: 4294626815,
  lightblue: 2916673279,
  lightcoral: 4034953471,
  lightcyan: 3774873599,
  lightgoldenrodyellow: 4210742015,
  lightgray: 3553874943,
  lightgreen: 2431553791,
  lightgrey: 3553874943,
  lightpink: 4290167295,
  lightsalmon: 4288707327,
  lightseagreen: 548580095,
  lightskyblue: 2278488831,
  lightslategray: 2005441023,
  lightslategrey: 2005441023,
  lightsteelblue: 2965692159,
  lightyellow: 4294959359,
  lime: 16711935,
  limegreen: 852308735,
  linen: 4210091775,
  magenta: 4278255615,
  maroon: 2147483903,
  mediumaquamarine: 1724754687,
  mediumblue: 52735,
  mediumorchid: 3126187007,
  mediumpurple: 2473647103,
  mediumseagreen: 1018393087,
  mediumslateblue: 2070474495,
  mediumspringgreen: 16423679,
  mediumturquoise: 1221709055,
  mediumvioletred: 3340076543,
  midnightblue: 421097727,
  mintcream: 4127193855,
  mistyrose: 4293190143,
  moccasin: 4293178879,
  navajowhite: 4292783615,
  navy: 33023,
  oldlace: 4260751103,
  olive: 2155872511,
  olivedrab: 1804477439,
  orange: 4289003775,
  orangered: 4282712319,
  orchid: 3664828159,
  palegoldenrod: 4008225535,
  palegreen: 2566625535,
  paleturquoise: 2951671551,
  palevioletred: 3681588223,
  papayawhip: 4293907967,
  peachpuff: 4292524543,
  peru: 3448061951,
  pink: 4290825215,
  plum: 3718307327,
  powderblue: 2967529215,
  purple: 2147516671,
  rebeccapurple: 1714657791,
  red: 4278190335,
  rosybrown: 3163525119,
  royalblue: 1097458175,
  saddlebrown: 2336560127,
  salmon: 4202722047,
  sandybrown: 4104413439,
  seagreen: 780883967,
  seashell: 4294307583,
  sienna: 2689740287,
  silver: 3233857791,
  skyblue: 2278484991,
  slateblue: 1784335871,
  slategray: 1887473919,
  slategrey: 1887473919,
  snow: 4294638335,
  springgreen: 16744447,
  steelblue: 1182971135,
  tan: 3535047935,
  teal: 8421631,
  thistle: 3636451583,
  tomato: 4284696575,
  turquoise: 1088475391,
  violet: 4001558271,
  wheat: 4125012991,
  white: 4294967295,
  whitesmoke: 4126537215,
  yellow: 4294902015,
  yellowgreen: 2597139199
}, Mo = "[-+]?\\d*\\.?\\d+", qv = Mo + "%";
function m0(...e) {
  return "\\(\\s*(" + e.join(")\\s*,\\s*(") + ")\\s*\\)";
}
var Che = new RegExp("rgb" + m0(Mo, Mo, Mo)), Ahe = new RegExp("rgba" + m0(Mo, Mo, Mo, Mo)), _he = new RegExp("hsl" + m0(Mo, qv, qv)), Nhe = new RegExp(
  "hsla" + m0(Mo, qv, qv, Mo)
), jhe = /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/, Ihe = /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/, The = /^#([0-9a-fA-F]{6})$/, Mhe = /^#([0-9a-fA-F]{8})$/;
function Rhe(e) {
  let t;
  return typeof e == "number" ? e >>> 0 === e && e >= 0 && e <= 4294967295 ? e : null : (t = The.exec(e)) ? parseInt(t[1] + "ff", 16) >>> 0 : Ml && Ml[e] !== void 0 ? Ml[e] : (t = Che.exec(e)) ? (Yu(t[1]) << 24 | // r
  Yu(t[2]) << 16 | // g
  Yu(t[3]) << 8 | // b
  255) >>> // a
  0 : (t = Ahe.exec(e)) ? (Yu(t[1]) << 24 | // r
  Yu(t[2]) << 16 | // g
  Yu(t[3]) << 8 | // b
  uI(t[4])) >>> // a
  0 : (t = jhe.exec(e)) ? parseInt(
    t[1] + t[1] + // r
    t[2] + t[2] + // g
    t[3] + t[3] + // b
    "ff",
    // a
    16
  ) >>> 0 : (t = Mhe.exec(e)) ? parseInt(t[1], 16) >>> 0 : (t = Ihe.exec(e)) ? parseInt(
    t[1] + t[1] + // r
    t[2] + t[2] + // g
    t[3] + t[3] + // b
    t[4] + t[4],
    // a
    16
  ) >>> 0 : (t = _he.exec(e)) ? (lI(
    cI(t[1]),
    // h
    Jb(t[2]),
    // s
    Jb(t[3])
    // l
  ) | 255) >>> // a
  0 : (t = Nhe.exec(e)) ? (lI(
    cI(t[1]),
    // h
    Jb(t[2]),
    // s
    Jb(t[3])
    // l
  ) | uI(t[4])) >>> // a
  0 : null;
}
function o2(e, t, r) {
  return r < 0 && (r += 1), r > 1 && (r -= 1), r < 1 / 6 ? e + (t - e) * 6 * r : r < 1 / 2 ? t : r < 2 / 3 ? e + (t - e) * (2 / 3 - r) * 6 : e;
}
function lI(e, t, r) {
  const n = r < 0.5 ? r * (1 + t) : r + t - r * t, o = 2 * r - n, a = o2(o, n, e + 1 / 3), i = o2(o, n, e), s = o2(o, n, e - 1 / 3);
  return Math.round(a * 255) << 24 | Math.round(i * 255) << 16 | Math.round(s * 255) << 8;
}
function Yu(e) {
  const t = parseInt(e, 10);
  return t < 0 ? 0 : t > 255 ? 255 : t;
}
function cI(e) {
  return (parseFloat(e) % 360 + 360) % 360 / 360;
}
function uI(e) {
  const t = parseFloat(e);
  return t < 0 ? 0 : t > 1 ? 255 : Math.round(t * 255);
}
function Jb(e) {
  const t = parseFloat(e);
  return t < 0 ? 0 : t > 100 ? 1 : t / 100;
}
function fI(e) {
  let t = Rhe(e);
  if (t === null) return e;
  t = t || 0;
  const r = (t & 4278190080) >>> 24, n = (t & 16711680) >>> 16, o = (t & 65280) >>> 8, a = (t & 255) / 255;
  return `rgba(${r}, ${n}, ${o}, ${a})`;
}
var bh = (e, t, r) => {
  if (Se.fun(e))
    return e;
  if (Se.arr(e))
    return bh({
      range: e,
      output: t,
      extrapolate: r
    });
  if (Se.str(e.output[0]))
    return yP(e);
  const n = e, o = n.output, a = n.range || [0, 1], i = n.extrapolateLeft || n.extrapolate || "extend", s = n.extrapolateRight || n.extrapolate || "extend", l = n.easing || ((c) => c);
  return (c) => {
    const u = Fhe(c, a);
    return zhe(
      c,
      a[u],
      a[u + 1],
      o[u],
      o[u + 1],
      l,
      i,
      s,
      n.map
    );
  };
};
function zhe(e, t, r, n, o, a, i, s, l) {
  let c = l ? l(e) : e;
  if (c < t) {
    if (i === "identity") return c;
    i === "clamp" && (c = t);
  }
  if (c > r) {
    if (s === "identity") return c;
    s === "clamp" && (c = r);
  }
  return n === o ? n : t === r ? e <= t ? n : o : (t === -1 / 0 ? c = -c : r === 1 / 0 ? c = c - t : c = (c - t) / (r - t), c = a(c), n === -1 / 0 ? c = -c : o === 1 / 0 ? c = c + n : c = c * (o - n) + n, c);
}
function Fhe(e, t) {
  for (var r = 1; r < t.length - 1 && !(t[r] >= e); ++r)
    ;
  return r - 1;
}
var Dhe = {
  linear: (e) => e
}, yh = Symbol.for("FluidValue.get"), md = Symbol.for("FluidValue.observers"), go = (e) => !!(e && e[yh]), Un = (e) => e && e[yh] ? e[yh]() : e, dI = (e) => e[md] || null;
function Lhe(e, t) {
  e.eventObserved ? e.eventObserved(t) : e(t);
}
function vh(e, t) {
  const r = e[md];
  r && r.forEach((n) => {
    Lhe(n, t);
  });
}
var SU = class {
  constructor(e) {
    if (!e && !(e = this.get))
      throw Error("Unknown getter");
    Vhe(this, e);
  }
}, Vhe = (e, t) => PU(e, yh, t);
function zd(e, t) {
  if (e[yh]) {
    let r = e[md];
    r || PU(e, md, r = /* @__PURE__ */ new Set()), r.has(t) || (r.add(t), e.observerAdded && e.observerAdded(r.size, t));
  }
  return t;
}
function xh(e, t) {
  const r = e[md];
  if (r && r.has(t)) {
    const n = r.size - 1;
    n ? r.delete(t) : e[md] = null, e.observerRemoved && e.observerRemoved(n, t);
  }
}
var PU = (e, t, r) => Object.defineProperty(e, t, {
  value: r,
  writable: !0,
  configurable: !0
}), Jy = /[+\-]?(?:0|[1-9]\d*)(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, Whe = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\((-?\d+%?[,\s]+){2,3}\s*[\d\.]+%?\))/gi, pI = new RegExp(`(${Jy.source})(%|[a-z]+)`, "i"), Uhe = /rgba\(([0-9\.-]+), ([0-9\.-]+), ([0-9\.-]+), ([0-9\.-]+)\)/gi, g0 = /var\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\)/, CU = (e) => {
  const [t, r] = Yhe(e);
  if (!t || bP())
    return e;
  const n = window.getComputedStyle(document.documentElement).getPropertyValue(t);
  return n ? n.trim() : r && r.startsWith("--") ? window.getComputedStyle(document.documentElement).getPropertyValue(r) || e : r && g0.test(r) ? CU(r) : r || e;
}, Yhe = (e) => {
  const t = g0.exec(e);
  if (!t) return [,];
  const [, r, n] = t;
  return [r, n];
}, a2, Hhe = (e, t, r, n, o) => `rgba(${Math.round(t)}, ${Math.round(r)}, ${Math.round(n)}, ${o})`, AU = (e) => {
  a2 || (a2 = Ml ? (
    // match color names, ignore partial matches
    new RegExp(`(${Object.keys(Ml).join("|")})(?!\\w)`, "g")
  ) : (
    // never match
    /^\b$/
  ));
  const t = e.output.map((o) => Un(o).replace(g0, CU).replace(Whe, fI).replace(a2, fI)), r = t.map((o) => o.match(Jy).map(Number)), n = r[0].map(
    (o, a) => r.map((i) => {
      if (!(a in i))
        throw Error('The arity of each "output" value must be equal');
      return i[a];
    })
  ).map(
    (o) => bh({ ...e, output: o })
  );
  return (o) => {
    var a;
    const i = !pI.test(t[0]) && ((a = t.find((l) => pI.test(l))) == null ? void 0 : a.replace(Jy, ""));
    let s = 0;
    return t[0].replace(
      Jy,
      () => `${n[s++](o)}${i || ""}`
    ).replace(Uhe, Hhe);
  };
}, xP = "react-spring: ", _U = (e) => {
  const t = e;
  let r = !1;
  if (typeof t != "function")
    throw new TypeError(`${xP}once requires a function parameter`);
  return (...n) => {
    r || (t(...n), r = !0);
  };
}, Ghe = _U(console.warn);
function qhe() {
  Ghe(
    `${xP}The "interpolate" function is deprecated in v9 (use "to" instead)`
  );
}
var Bhe = _U(console.warn);
function Xhe() {
  Bhe(
    `${xP}Directly calling start instead of using the api object is deprecated in v9 (use ".start" instead), this will be removed in later 0.X.0 versions`
  );
}
function h0(e) {
  return Se.str(e) && (e[0] == "#" || /\d/.test(e) || // Do not identify a CSS variable as an AnimatedString if its SSR
  !bP() && g0.test(e) || e in (Ml || {}));
}
var lf = bP() ? Ne : Ri, Khe = () => {
  const e = ie(!1);
  return lf(() => (e.current = !0, () => {
    e.current = !1;
  }), []), e;
};
function NU() {
  const e = _e()[1], t = Khe();
  return () => {
    t.current && e(Math.random());
  };
}
var jU = (e) => Ne(e, Jhe), Jhe = [];
function Qhe(e) {
  const t = ie(void 0);
  return Ne(() => {
    t.current = e;
  }), t.current;
}
var wh = Symbol.for("Animated:node"), Zhe = (e) => !!e && e[wh] === e, Ho = (e) => e && e[wh], wP = (e, t) => $he(e, wh, t), b0 = (e) => e && e[wh] && e[wh].getPayload(), IU = class {
  constructor() {
    wP(this, this);
  }
  /** Get every `AnimatedValue` used by this node. */
  getPayload() {
    return this.payload || [];
  }
}, y0 = class TU extends IU {
  constructor(t) {
    super(), this._value = t, this.done = !0, this.durationProgress = 0, Se.num(this._value) && (this.lastPosition = this._value);
  }
  /** @internal */
  static create(t) {
    return new TU(t);
  }
  getPayload() {
    return [this];
  }
  getValue() {
    return this._value;
  }
  setValue(t, r) {
    return Se.num(t) && (this.lastPosition = t, r && (t = Math.round(t / r) * r, this.done && (this.lastPosition = t))), this._value === t ? !1 : (this._value = t, !0);
  }
  reset() {
    const { done: t } = this;
    this.done = !1, Se.num(this._value) && (this.elapsedTime = 0, this.durationProgress = 0, this.lastPosition = this._value, t && (this.lastVelocity = null), this.v0 = null);
  }
}, Bv = class MU extends y0 {
  constructor(t) {
    super(0), this._string = null, this._toString = bh({
      output: [t, t]
    });
  }
  /** @internal */
  static create(t) {
    return new MU(t);
  }
  getValue() {
    return this._string ?? (this._string = this._toString(this._value));
  }
  setValue(t) {
    if (Se.str(t)) {
      if (t == this._string)
        return !1;
      this._string = t, this._value = 1;
    } else if (super.setValue(t))
      this._string = null;
    else
      return !1;
    return !0;
  }
  reset(t) {
    t && (this._toString = bh({
      output: [this.getValue(), t]
    })), this._value = 0, super.reset();
  }
}, Xv = { dependencies: null }, v0 = class extends IU {
  constructor(t) {
    super(), this.source = t, this.setValue(t);
  }
  getValue(t) {
    const r = {};
    return ja(this.source, (n, o) => {
      Zhe(n) ? r[o] = n.getValue(t) : go(n) ? r[o] = Un(n) : t || (r[o] = n);
    }), r;
  }
  /** Replace the raw object data */
  setValue(t) {
    this.source = t, this.payload = this._makePayload(t);
  }
  reset() {
    this.payload && $t(this.payload, (t) => t.reset());
  }
  /** Create a payload set. */
  _makePayload(t) {
    if (t) {
      const r = /* @__PURE__ */ new Set();
      return ja(t, this._addToPayload, r), Array.from(r);
    }
  }
  /** Add to a payload set. */
  _addToPayload(t) {
    Xv.dependencies && go(t) && Xv.dependencies.add(t);
    const r = b0(t);
    r && $t(r, (n) => this.add(n));
  }
}, ebe = class RU extends v0 {
  constructor(t) {
    super(t);
  }
  /** @internal */
  static create(t) {
    return new RU(t);
  }
  getValue() {
    return this.source.map((t) => t.getValue());
  }
  setValue(t) {
    const r = this.getPayload();
    return t.length == r.length ? r.map((n, o) => n.setValue(t[o])).some(Boolean) : (super.setValue(t.map(tbe)), !0);
  }
};
function tbe(e) {
  return (h0(e) ? Bv : y0).create(e);
}
function b3(e) {
  const t = Ho(e);
  return t ? t.constructor : Se.arr(e) ? ebe : h0(e) ? Bv : y0;
}
var mI = (e, t) => {
  const r = (
    // Function components must use "forwardRef" to avoid being
    // re-rendered on every animation frame.
    !Se.fun(e) || e.prototype && e.prototype.isReactComponent
  );
  return Pd((n, o) => {
    const a = ie(null), i = r && // eslint-disable-next-line react-hooks/rules-of-hooks
    et(
      (x) => {
        a.current = obe(o, x);
      },
      [o]
    ), [s, l] = nbe(n, t), c = NU(), u = () => {
      const x = a.current;
      r && !x || (x ? t.applyAnimatedValues(x, s.getValue(!0)) : !1) === !1 && c();
    }, f = new rbe(u, l), p = ie(void 0);
    lf(() => (p.current = f, $t(l, (x) => zd(x, f)), () => {
      p.current && ($t(
        p.current.deps,
        (x) => xh(x, p.current)
      ), ot.cancel(p.current.update));
    })), Ne(u, []), jU(() => () => {
      const x = p.current;
      $t(x.deps, (b) => xh(b, x));
    });
    const v = t.getComponentProps(s.getValue());
    return /* @__PURE__ */ Y.createElement(e, { ...v, ref: i });
  });
}, rbe = class {
  constructor(e, t) {
    this.update = e, this.deps = t;
  }
  eventObserved(e) {
    e.type == "change" && ot.write(this.update);
  }
};
function nbe(e, t) {
  const r = /* @__PURE__ */ new Set();
  return Xv.dependencies = r, e.style && (e = {
    ...e,
    style: t.createAnimatedStyle(e.style)
  }), e = new v0(e), Xv.dependencies = null, [e, r];
}
function obe(e, t) {
  return e && (Se.fun(e) ? e(t) : e.current = t), t;
}
var gI = Symbol.for("AnimatedComponent"), abe = (e, {
  applyAnimatedValues: t = () => !1,
  createAnimatedStyle: r = (o) => new v0(o),
  getComponentProps: n = (o) => o
} = {}) => {
  const o = {
    applyAnimatedValues: t,
    createAnimatedStyle: r,
    getComponentProps: n
  }, a = (i) => {
    const s = hI(i) || "Anonymous";
    return Se.str(i) ? i = a[i] || (a[i] = mI(i, o)) : i = i[gI] || (i[gI] = mI(i, o)), i.displayName = `Animated(${s})`, i;
  };
  return ja(e, (i, s) => {
    Se.arr(e) && (s = hI(i)), a[s] = a(i);
  }), {
    animated: a
  };
}, hI = (e) => Se.str(e) ? e : e && Se.str(e.displayName) ? e.displayName : Se.fun(e) && e.name || null;
function Yn(e, ...t) {
  return Se.fun(e) ? e(...t) : e;
}
var Pg = (e, t) => e === !0 || !!(t && e && (Se.fun(e) ? e(t) : En(e).includes(t))), zU = (e, t) => Se.obj(e) ? t && e[t] : e, FU = (e, t) => e.default === !0 ? e[t] : e.default ? e.default[t] : void 0, ibe = (e) => e, kP = (e, t = ibe) => {
  let r = sbe;
  e.default && e.default !== !0 && (e = e.default, r = Object.keys(e));
  const n = {};
  for (const o of r) {
    const a = t(e[o], o);
    Se.und(a) || (n[o] = a);
  }
  return n;
}, sbe = [
  "config",
  "onProps",
  "onStart",
  "onChange",
  "onPause",
  "onResume",
  "onRest"
], lbe = {
  config: 1,
  from: 1,
  to: 1,
  ref: 1,
  loop: 1,
  reset: 1,
  pause: 1,
  cancel: 1,
  reverse: 1,
  immediate: 1,
  default: 1,
  delay: 1,
  onProps: 1,
  onStart: 1,
  onChange: 1,
  onPause: 1,
  onResume: 1,
  onRest: 1,
  onResolve: 1,
  // Transition props
  items: 1,
  trail: 1,
  sort: 1,
  expires: 1,
  initial: 1,
  enter: 1,
  update: 1,
  leave: 1,
  children: 1,
  onDestroyed: 1,
  // Internal props
  keys: 1,
  callId: 1,
  parentId: 1
};
function cbe(e) {
  const t = {};
  let r = 0;
  if (ja(e, (n, o) => {
    lbe[o] || (t[o] = n, r++);
  }), r)
    return t;
}
function $P(e) {
  const t = cbe(e);
  if (t) {
    const r = { to: t };
    return ja(e, (n, o) => o in t || (r[o] = n)), r;
  }
  return { ...e };
}
function kh(e) {
  return e = Un(e), Se.arr(e) ? e.map(kh) : h0(e) ? zo.createStringInterpolator({
    range: [0, 1],
    output: [e, e]
  })(1) : e;
}
function ube(e) {
  for (const t in e) return !0;
  return !1;
}
function y3(e) {
  return Se.fun(e) || Se.arr(e) && Se.obj(e[0]);
}
function bI(e, t) {
  var r;
  (r = e.ref) == null || r.delete(e), t == null || t.delete(e);
}
function fbe(e, t) {
  var r;
  t && e.ref !== t && ((r = e.ref) == null || r.delete(e), t.add(e), e.ref = t);
}
var dbe = {
  default: { tension: 170, friction: 26 }
}, v3 = {
  ...dbe.default,
  mass: 1,
  damping: 1,
  easing: Dhe.linear,
  clamp: !1
}, pbe = class {
  constructor() {
    this.velocity = 0, Object.assign(this, v3);
  }
};
function mbe(e, t, r) {
  r && (r = { ...r }, yI(r, t), t = { ...r, ...t }), yI(e, t), Object.assign(e, t);
  for (const i in v3)
    e[i] == null && (e[i] = v3[i]);
  let { frequency: n, damping: o } = e;
  const { mass: a } = e;
  return Se.und(n) || (n < 0.01 && (n = 0.01), o < 0 && (o = 0), e.tension = Math.pow(2 * Math.PI / n, 2) * a, e.friction = 4 * Math.PI * o * a / n), e;
}
function yI(e, t) {
  if (!Se.und(t.decay))
    e.duration = void 0;
  else {
    const r = !Se.und(t.tension) || !Se.und(t.friction);
    (r || !Se.und(t.frequency) || !Se.und(t.damping) || !Se.und(t.mass)) && (e.duration = void 0, e.decay = void 0), r && (e.frequency = void 0);
  }
}
var vI = [], gbe = class {
  constructor() {
    this.changed = !1, this.values = vI, this.toValues = null, this.fromValues = vI, this.config = new pbe(), this.immediate = !1;
  }
};
function DU(e, { key: t, props: r, defaultProps: n, state: o, actions: a }) {
  return new Promise((i, s) => {
    let l, c, u = Pg(r.cancel ?? (n == null ? void 0 : n.cancel), t);
    if (u)
      v();
    else {
      Se.und(r.pause) || (o.paused = Pg(r.pause, t));
      let x = n == null ? void 0 : n.pause;
      x !== !0 && (x = o.paused || Pg(x, t)), l = Yn(r.delay || 0, t), x ? (o.resumeQueue.add(p), a.pause()) : (a.resume(), p());
    }
    function f() {
      o.resumeQueue.add(p), o.timeouts.delete(c), c.cancel(), l = c.time - ot.now();
    }
    function p() {
      l > 0 && !zo.skipAnimation ? (o.delayed = !0, c = ot.setTimeout(v, l), o.pauseQueue.add(f), o.timeouts.add(c)) : v();
    }
    function v() {
      o.delayed && (o.delayed = !1), o.pauseQueue.delete(f), o.timeouts.delete(c), e <= (o.cancelId || 0) && (u = !0);
      try {
        a.start({ ...r, callId: e, cancel: u }, i);
      } catch (x) {
        s(x);
      }
    }
  });
}
var OP = (e, t) => t.length == 1 ? t[0] : t.some((r) => r.cancelled) ? Ff(e.get()) : t.every((r) => r.noop) ? LU(e.get()) : Io(
  e.get(),
  t.every((r) => r.finished)
), LU = (e) => ({
  value: e,
  noop: !0,
  finished: !0,
  cancelled: !1
}), Io = (e, t, r = !1) => ({
  value: e,
  finished: t,
  cancelled: r
}), Ff = (e) => ({
  value: e,
  cancelled: !0,
  finished: !1
});
function VU(e, t, r, n) {
  const { callId: o, parentId: a, onRest: i } = t, { asyncTo: s, promise: l } = r;
  return !a && e === s && !t.reset ? l : r.promise = (async () => {
    r.asyncId = o, r.asyncTo = e;
    const c = kP(
      t,
      (m, w) => (
        // The `onRest` prop is only called when the `runAsync` promise is resolved.
        w === "onRest" ? void 0 : m
      )
    );
    let u, f;
    const p = new Promise(
      (m, w) => (u = m, f = w)
    ), v = (m) => {
      const w = (
        // The `cancel` prop or `stop` method was used.
        o <= (r.cancelId || 0) && Ff(n) || // The async `to` prop was replaced.
        o !== r.asyncId && Io(n, !1)
      );
      if (w)
        throw m.result = w, f(m), m;
    }, x = (m, w) => {
      const $ = new xI(), E = new wI();
      return (async () => {
        if (zo.skipAnimation)
          throw $h(r), E.result = Io(n, !1), f(E), E;
        v($);
        const S = Se.obj(m) ? { ...m } : { ...w, to: m };
        S.parentId = o, ja(c, (U, G) => {
          Se.und(S[G]) && (S[G] = U);
        });
        const h = await n.start(S);
        return v($), r.paused && await new Promise((U) => {
          r.resumeQueue.add(U);
        }), h;
      })();
    };
    let b;
    if (zo.skipAnimation)
      return $h(r), Io(n, !1);
    try {
      let m;
      Se.arr(e) ? m = (async (w) => {
        for (const $ of w)
          await x($);
      })(e) : m = Promise.resolve(e(x, n.stop.bind(n))), await Promise.all([m.then(u), p]), b = Io(n.get(), !0, !1);
    } catch (m) {
      if (m instanceof xI)
        b = m.result;
      else if (m instanceof wI)
        b = m.result;
      else
        throw m;
    } finally {
      o == r.asyncId && (r.asyncId = a, r.asyncTo = a ? s : void 0, r.promise = a ? l : void 0);
    }
    return Se.fun(i) && ot.batchedUpdates(() => {
      i(b, n, n.item);
    }), b;
  })();
}
function $h(e, t) {
  Eg(e.timeouts, (r) => r.cancel()), e.pauseQueue.clear(), e.resumeQueue.clear(), e.asyncId = e.asyncTo = e.promise = void 0, t && (e.cancelId = t);
}
var xI = class extends Error {
  constructor() {
    super(
      "An async animation has been interrupted. You see this error because you forgot to use `await` or `.catch(...)` on its returned promise."
    );
  }
}, wI = class extends Error {
  constructor() {
    super("SkipAnimationSignal");
  }
}, x3 = (e) => e instanceof EP, hbe = 1, EP = class extends SU {
  constructor() {
    super(...arguments), this.id = hbe++, this._priority = 0;
  }
  get priority() {
    return this._priority;
  }
  set priority(t) {
    this._priority != t && (this._priority = t, this._onPriorityChange(t));
  }
  /** Get the current value */
  get() {
    const t = Ho(this);
    return t && t.getValue();
  }
  /** Create a spring that maps our value to another value */
  to(...t) {
    return zo.to(this, t);
  }
  /** @deprecated Use the `to` method instead. */
  interpolate(...t) {
    return qhe(), zo.to(this, t);
  }
  toJSON() {
    return this.get();
  }
  observerAdded(t) {
    t == 1 && this._attach();
  }
  observerRemoved(t) {
    t == 0 && this._detach();
  }
  /** Called when the first child is added. */
  _attach() {
  }
  /** Called when the last child is removed. */
  _detach() {
  }
  /** Tell our children about our new value */
  _onChange(t, r = !1) {
    vh(this, {
      type: "change",
      parent: this,
      value: t,
      idle: r
    });
  }
  /** Tell our children about our new priority */
  _onPriorityChange(t) {
    this.idle || p0.sort(this), vh(this, {
      type: "priority",
      parent: this,
      priority: t
    });
  }
}, pu = Symbol.for("SpringPhase"), WU = 1, UU = 2, YU = 4, i2 = (e) => (e[pu] & WU) > 0, zs = (e) => (e[pu] & UU) > 0, mm = (e) => (e[pu] & YU) > 0, kI = (e, t) => t ? e[pu] |= UU | WU : e[pu] &= -3, $I = (e, t) => t ? e[pu] |= YU : e[pu] &= -5, bbe = class extends EP {
  constructor(e, t) {
    if (super(), this.animation = new gbe(), this.defaultProps = {}, this._state = {
      paused: !1,
      delayed: !1,
      pauseQueue: /* @__PURE__ */ new Set(),
      resumeQueue: /* @__PURE__ */ new Set(),
      timeouts: /* @__PURE__ */ new Set()
    }, this._pendingCalls = /* @__PURE__ */ new Set(), this._lastCallId = 0, this._lastToId = 0, this._memoizedDuration = 0, !Se.und(e) || !Se.und(t)) {
      const r = Se.obj(e) ? { ...e } : { ...t, from: e };
      Se.und(r.default) && (r.default = !0), this.start(r);
    }
  }
  /** Equals true when not advancing on each frame. */
  get idle() {
    return !(zs(this) || this._state.asyncTo) || mm(this);
  }
  get goal() {
    return Un(this.animation.to);
  }
  get velocity() {
    const e = Ho(this);
    return e instanceof y0 ? e.lastVelocity || 0 : e.getPayload().map((t) => t.lastVelocity || 0);
  }
  /**
   * When true, this value has been animated at least once.
   */
  get hasAnimated() {
    return i2(this);
  }
  /**
   * When true, this value has an unfinished animation,
   * which is either active or paused.
   */
  get isAnimating() {
    return zs(this);
  }
  /**
   * When true, all current and future animations are paused.
   */
  get isPaused() {
    return mm(this);
  }
  /**
   *
   *
   */
  get isDelayed() {
    return this._state.delayed;
  }
  /** Advance the current animation by a number of milliseconds */
  advance(e) {
    let t = !0, r = !1;
    const n = this.animation;
    let { toValues: o } = n;
    const { config: a } = n, i = b0(n.to);
    !i && go(n.to) && (o = En(Un(n.to))), n.values.forEach((c, u) => {
      if (c.done) return;
      const f = (
        // Animated strings always go from 0 to 1.
        c.constructor == Bv ? 1 : i ? i[u].lastPosition : o[u]
      );
      let p = n.immediate, v = f;
      if (!p) {
        if (v = c.lastPosition, a.tension <= 0) {
          c.done = !0;
          return;
        }
        let x = c.elapsedTime += e;
        const b = n.fromValues[u], m = c.v0 != null ? c.v0 : c.v0 = Se.arr(a.velocity) ? a.velocity[u] : a.velocity;
        let w;
        const $ = a.precision || (b == f ? 5e-3 : Math.min(1, Math.abs(f - b) * 1e-3));
        if (Se.und(a.duration))
          if (a.decay) {
            const E = a.decay === !0 ? 0.998 : a.decay, S = Math.exp(-(1 - E) * x);
            v = b + m / (1 - E) * (1 - S), p = Math.abs(c.lastPosition - v) <= $, w = m * S;
          } else {
            w = c.lastVelocity == null ? m : c.lastVelocity;
            const E = a.restVelocity || $ / 10, S = a.clamp ? 0 : a.bounce, h = !Se.und(S), U = b == f ? c.v0 > 0 : b < f;
            let G, Q = !1;
            const Z = 1, X = Math.ceil(e / Z);
            for (let J = 0; J < X && (G = Math.abs(w) > E, !(!G && (p = Math.abs(f - v) <= $, p))); ++J) {
              h && (Q = v == f || v > f == U, Q && (w = -w * S, v = f));
              const I = -a.tension * 1e-6 * (v - f), te = -a.friction * 1e-3 * w, V = (I + te) / a.mass;
              w = w + V * Z, v = v + w * Z;
            }
          }
        else {
          let E = 1;
          a.duration > 0 && (this._memoizedDuration !== a.duration && (this._memoizedDuration = a.duration, c.durationProgress > 0 && (c.elapsedTime = a.duration * c.durationProgress, x = c.elapsedTime += e)), E = (a.progress || 0) + x / this._memoizedDuration, E = E > 1 ? 1 : E < 0 ? 0 : E, c.durationProgress = E), v = b + a.easing(E) * (f - b), w = (v - c.lastPosition) / e, p = E == 1;
        }
        c.lastVelocity = w, Number.isNaN(v) && (console.warn("Got NaN while animating:", this), p = !0);
      }
      i && !i[u].done && (p = !1), p ? c.done = !0 : t = !1, c.setValue(v, a.round) && (r = !0);
    });
    const s = Ho(this), l = s.getValue();
    if (t) {
      const c = Un(n.to);
      (l !== c || r) && !a.decay ? (s.setValue(c), this._onChange(c)) : r && a.decay && this._onChange(l), this._stop();
    } else r && this._onChange(l);
  }
  /** Set the current value, while stopping the current animation */
  set(e) {
    return ot.batchedUpdates(() => {
      this._stop(), this._focus(e), this._set(e);
    }), this;
  }
  /**
   * Freeze the active animation in time, as well as any updates merged
   * before `resume` is called.
   */
  pause() {
    this._update({ pause: !0 });
  }
  /** Resume the animation if paused. */
  resume() {
    this._update({ pause: !1 });
  }
  /** Skip to the end of the current animation. */
  finish() {
    if (zs(this)) {
      const { to: e, config: t } = this.animation;
      ot.batchedUpdates(() => {
        this._onStart(), t.decay || this._set(e, !1), this._stop();
      });
    }
    return this;
  }
  /** Push props into the pending queue. */
  update(e) {
    return (this.queue || (this.queue = [])).push(e), this;
  }
  start(e, t) {
    let r;
    return Se.und(e) ? (r = this.queue || [], this.queue = []) : r = [Se.obj(e) ? e : { ...t, to: e }], Promise.all(
      r.map((n) => this._update(n))
    ).then((n) => OP(this, n));
  }
  /**
   * Stop the current animation, and cancel any delayed updates.
   *
   * Pass `true` to call `onRest` with `cancelled: true`.
   */
  stop(e) {
    const { to: t } = this.animation;
    return this._focus(this.get()), $h(this._state, e && this._lastCallId), ot.batchedUpdates(() => this._stop(t, e)), this;
  }
  /** Restart the animation. */
  reset() {
    this._update({ reset: !0 });
  }
  /** @internal */
  eventObserved(e) {
    e.type == "change" ? this._start() : e.type == "priority" && (this.priority = e.priority + 1);
  }
  /**
   * Parse the `to` and `from` range from the given `props` object.
   *
   * This also ensures the initial value is available to animated components
   * during the render phase.
   */
  _prepareNode(e) {
    const t = this.key || "";
    let { to: r, from: n } = e;
    r = Se.obj(r) ? r[t] : r, (r == null || y3(r)) && (r = void 0), n = Se.obj(n) ? n[t] : n, n == null && (n = void 0);
    const o = { to: r, from: n };
    return i2(this) || (e.reverse && ([r, n] = [n, r]), n = Un(n), Se.und(n) ? Ho(this) || this._set(r) : this._set(n)), o;
  }
  /** Every update is processed by this method before merging. */
  _update({ ...e }, t) {
    const { key: r, defaultProps: n } = this;
    e.default && Object.assign(
      n,
      kP(
        e,
        (i, s) => /^on/.test(s) ? zU(i, r) : i
      )
    ), EI(this, e, "onProps"), hm(this, "onProps", e, this);
    const o = this._prepareNode(e);
    if (Object.isFrozen(this))
      throw Error(
        "Cannot animate a `SpringValue` object that is frozen. Did you forget to pass your component to `animated(...)` before animating its props?"
      );
    const a = this._state;
    return DU(++this._lastCallId, {
      key: r,
      props: e,
      defaultProps: n,
      state: a,
      actions: {
        pause: () => {
          mm(this) || ($I(this, !0), eg(a.pauseQueue), hm(
            this,
            "onPause",
            Io(this, gm(this, this.animation.to)),
            this
          ));
        },
        resume: () => {
          mm(this) && ($I(this, !1), zs(this) && this._resume(), eg(a.resumeQueue), hm(
            this,
            "onResume",
            Io(this, gm(this, this.animation.to)),
            this
          ));
        },
        start: this._merge.bind(this, o)
      }
    }).then((i) => {
      if (e.loop && i.finished && !(t && i.noop)) {
        const s = HU(e);
        if (s)
          return this._update(s, !0);
      }
      return i;
    });
  }
  /** Merge props into the current animation */
  _merge(e, t, r) {
    if (t.cancel)
      return this.stop(!0), r(Ff(this));
    const n = !Se.und(e.to), o = !Se.und(e.from);
    if (n || o)
      if (t.callId > this._lastToId)
        this._lastToId = t.callId;
      else
        return r(Ff(this));
    const { key: a, defaultProps: i, animation: s } = this, { to: l, from: c } = s;
    let { to: u = l, from: f = c } = e;
    o && !n && (!t.default || Se.und(u)) && (u = f), t.reverse && ([u, f] = [f, u]);
    const p = !oi(f, c);
    p && (s.from = f), f = Un(f);
    const v = !oi(u, l);
    v && this._focus(u);
    const x = y3(t.to), { config: b } = s, { decay: m, velocity: w } = b;
    (n || o) && (b.velocity = 0), t.config && !x && mbe(
      b,
      Yn(t.config, a),
      // Avoid calling the same "config" prop twice.
      t.config !== i.config ? Yn(i.config, a) : void 0
    );
    let $ = Ho(this);
    if (!$ || Se.und(u))
      return r(Io(this, !0));
    const E = (
      // When `reset` is undefined, the `from` prop implies `reset: true`,
      // except for declarative updates. When `reset` is defined, there
      // must exist a value to animate from.
      Se.und(t.reset) ? o && !t.default : !Se.und(f) && Pg(t.reset, a)
    ), S = E ? f : this.get(), h = kh(u), U = Se.num(h) || Se.arr(h) || h0(h), G = !x && (!U || Pg(i.immediate || t.immediate, a));
    if (v) {
      const J = b3(u);
      if (J !== $.constructor)
        if (G)
          $ = this._set(h);
        else
          throw Error(
            `Cannot animate between ${$.constructor.name} and ${J.name}, as the "to" prop suggests`
          );
    }
    const Q = $.constructor;
    let Z = go(u), X = !1;
    if (!Z) {
      const J = E || !i2(this) && p;
      (v || J) && (X = oi(kh(S), h), Z = !X), (!oi(s.immediate, G) && !G || !oi(b.decay, m) || !oi(b.velocity, w)) && (Z = !0);
    }
    if (X && zs(this) && (s.changed && !E ? Z = !0 : Z || this._stop(l)), !x && ((Z || go(l)) && (s.values = $.getPayload(), s.toValues = go(u) ? null : Q == Bv ? [1] : En(h)), s.immediate != G && (s.immediate = G, !G && !E && this._set(l)), Z)) {
      const { onRest: J } = s;
      $t(ybe, (te) => EI(this, t, te));
      const I = Io(this, gm(this, l));
      eg(this._pendingCalls, I), this._pendingCalls.add(r), s.changed && ot.batchedUpdates(() => {
        var te;
        s.changed = !E, J == null || J(I, this), E ? Yn(i.onRest, I) : (te = s.onStart) == null || te.call(s, I, this);
      });
    }
    E && this._set(S), x ? r(VU(t.to, t, this._state, this)) : Z ? this._start() : zs(this) && !v ? this._pendingCalls.add(r) : r(LU(S));
  }
  /** Update the `animation.to` value, which might be a `FluidValue` */
  _focus(e) {
    const t = this.animation;
    e !== t.to && (dI(this) && this._detach(), t.to = e, dI(this) && this._attach());
  }
  _attach() {
    let e = 0;
    const { to: t } = this.animation;
    go(t) && (zd(t, this), x3(t) && (e = t.priority + 1)), this.priority = e;
  }
  _detach() {
    const { to: e } = this.animation;
    go(e) && xh(e, this);
  }
  /**
   * Update the current value from outside the frameloop,
   * and return the `Animated` node.
   */
  _set(e, t = !0) {
    const r = Un(e);
    if (!Se.und(r)) {
      const n = Ho(this);
      if (!n || !oi(r, n.getValue())) {
        const o = b3(r);
        !n || n.constructor != o ? wP(this, o.create(r)) : n.setValue(r), n && ot.batchedUpdates(() => {
          this._onChange(r, t);
        });
      }
    }
    return Ho(this);
  }
  _onStart() {
    const e = this.animation;
    e.changed || (e.changed = !0, hm(
      this,
      "onStart",
      Io(this, gm(this, e.to)),
      this
    ));
  }
  _onChange(e, t) {
    t || (this._onStart(), Yn(this.animation.onChange, e, this)), Yn(this.defaultProps.onChange, e, this), super._onChange(e, t);
  }
  // This method resets the animation state (even if already animating) to
  // ensure the latest from/to range is used, and it also ensures this spring
  // is added to the frameloop.
  _start() {
    const e = this.animation;
    Ho(this).reset(Un(e.to)), e.immediate || (e.fromValues = e.values.map((t) => t.lastPosition)), zs(this) || (kI(this, !0), mm(this) || this._resume());
  }
  _resume() {
    zo.skipAnimation ? this.finish() : p0.start(this);
  }
  /**
   * Exit the frameloop and notify `onRest` listeners.
   *
   * Always wrap `_stop` calls with `batchedUpdates`.
   */
  _stop(e, t) {
    if (zs(this)) {
      kI(this, !1);
      const r = this.animation;
      $t(r.values, (o) => {
        o.done = !0;
      }), r.toValues && (r.onChange = r.onPause = r.onResume = void 0), vh(this, {
        type: "idle",
        parent: this
      });
      const n = t ? Ff(this.get()) : Io(this.get(), gm(this, e ?? r.to));
      eg(this._pendingCalls, n), r.changed && (r.changed = !1, hm(this, "onRest", n, this));
    }
  }
};
function gm(e, t) {
  const r = kh(t), n = kh(e.get());
  return oi(n, r);
}
function HU(e, t = e.loop, r = e.to) {
  const n = Yn(t);
  if (n) {
    const o = n !== !0 && $P(n), a = (o || e).reverse, i = !o || o.reset;
    return Kv({
      ...e,
      loop: t,
      // Avoid updating default props when looping.
      default: !1,
      // Never loop the `pause` prop.
      pause: void 0,
      // For the "reverse" prop to loop as expected, the "to" prop
      // must be undefined. The "reverse" prop is ignored when the
      // "to" prop is an array or function.
      to: !a || y3(r) ? r : void 0,
      // Ignore the "from" prop except on reset.
      from: i ? e.from : void 0,
      reset: i,
      // The "loop" prop can return a "useSpring" props object to
      // override any of the original props.
      ...o
    });
  }
}
function Kv(e) {
  const { to: t, from: r } = e = $P(e), n = /* @__PURE__ */ new Set();
  return Se.obj(t) && OI(t, n), Se.obj(r) && OI(r, n), e.keys = n.size ? Array.from(n) : null, e;
}
function OI(e, t) {
  ja(e, (r, n) => r != null && t.add(n));
}
var ybe = [
  "onStart",
  "onRest",
  "onChange",
  "onPause",
  "onResume"
];
function EI(e, t, r) {
  e.animation[r] = t[r] !== FU(t, r) ? zU(t[r], e.key) : void 0;
}
function hm(e, t, ...r) {
  var n, o, a, i;
  (o = (n = e.animation)[t]) == null || o.call(n, ...r), (i = (a = e.defaultProps)[t]) == null || i.call(a, ...r);
}
var vbe = ["onStart", "onChange", "onRest"], xbe = 1, wbe = class {
  constructor(e, t) {
    this.id = xbe++, this.springs = {}, this.queue = [], this._lastAsyncId = 0, this._active = /* @__PURE__ */ new Set(), this._changed = /* @__PURE__ */ new Set(), this._started = !1, this._state = {
      paused: !1,
      pauseQueue: /* @__PURE__ */ new Set(),
      resumeQueue: /* @__PURE__ */ new Set(),
      timeouts: /* @__PURE__ */ new Set()
    }, this._events = {
      onStart: /* @__PURE__ */ new Map(),
      onChange: /* @__PURE__ */ new Map(),
      onRest: /* @__PURE__ */ new Map()
    }, this._onFrame = this._onFrame.bind(this), t && (this._flush = t), e && this.start({ default: !0, ...e });
  }
  /**
   * Equals `true` when no spring values are in the frameloop, and
   * no async animation is currently active.
   */
  get idle() {
    return !this._state.asyncTo && Object.values(this.springs).every((e) => e.idle && !e.isDelayed && !e.isPaused);
  }
  get item() {
    return this._item;
  }
  set item(e) {
    this._item = e;
  }
  /** Get the current values of our springs */
  get() {
    const e = {};
    return this.each((t, r) => e[r] = t.get()), e;
  }
  /** Set the current values without animating. */
  set(e) {
    for (const t in e) {
      const r = e[t];
      Se.und(r) || this.springs[t].set(r);
    }
  }
  /** Push an update onto the queue of each value. */
  update(e) {
    return e && this.queue.push(Kv(e)), this;
  }
  /**
   * Start the queued animations for every spring, and resolve the returned
   * promise once all queued animations have finished or been cancelled.
   *
   * When you pass a queue (instead of nothing), that queue is used instead of
   * the queued animations added with the `update` method, which are left alone.
   */
  start(e) {
    let { queue: t } = this;
    return e ? t = En(e).map(Kv) : this.queue = [], this._flush ? this._flush(this, t) : (XU(this, t), kbe(this, t));
  }
  /** @internal */
  stop(e, t) {
    if (e !== !!e && (t = e), t) {
      const r = this.springs;
      $t(En(t), (n) => r[n].stop(!!e));
    } else
      $h(this._state, this._lastAsyncId), this.each((r) => r.stop(!!e));
    return this;
  }
  /** Freeze the active animation in time */
  pause(e) {
    if (Se.und(e))
      this.start({ pause: !0 });
    else {
      const t = this.springs;
      $t(En(e), (r) => t[r].pause());
    }
    return this;
  }
  /** Resume the animation if paused. */
  resume(e) {
    if (Se.und(e))
      this.start({ pause: !1 });
    else {
      const t = this.springs;
      $t(En(e), (r) => t[r].resume());
    }
    return this;
  }
  /** Call a function once per spring value */
  each(e) {
    ja(this.springs, e);
  }
  /** @internal Called at the end of every animation frame */
  _onFrame() {
    const { onStart: e, onChange: t, onRest: r } = this._events, n = this._active.size > 0, o = this._changed.size > 0;
    (n && !this._started || o && !this._started) && (this._started = !0, Eg(e, ([s, l]) => {
      l.value = this.get(), s(l, this, this._item);
    }));
    const a = !n && this._started, i = o || a && r.size ? this.get() : null;
    o && t.size && Eg(t, ([s, l]) => {
      l.value = i, s(l, this, this._item);
    }), a && (this._started = !1, Eg(r, ([s, l]) => {
      l.value = i, s(l, this, this._item);
    }));
  }
  /** @internal */
  eventObserved(e) {
    if (e.type == "change")
      this._changed.add(e.parent), e.idle || this._active.add(e.parent);
    else if (e.type == "idle")
      this._active.delete(e.parent);
    else return;
    ot.onFrame(this._onFrame);
  }
};
function kbe(e, t) {
  return Promise.all(t.map((r) => GU(e, r))).then(
    (r) => OP(e, r)
  );
}
async function GU(e, t, r) {
  const { keys: n, to: o, from: a, loop: i, onRest: s, onResolve: l } = t, c = Se.obj(t.default) && t.default;
  i && (t.loop = !1), o === !1 && (t.to = null), a === !1 && (t.from = null);
  const u = Se.arr(o) || Se.fun(o) ? o : void 0;
  u ? (t.to = void 0, t.onRest = void 0, c && (c.onRest = void 0)) : $t(vbe, (b) => {
    const m = t[b];
    if (Se.fun(m)) {
      const w = e._events[b];
      t[b] = ({ finished: $, cancelled: E }) => {
        const S = w.get(m);
        S ? ($ || (S.finished = !1), E && (S.cancelled = !0)) : w.set(m, {
          value: null,
          finished: $ || !1,
          cancelled: E || !1
        });
      }, c && (c[b] = t[b]);
    }
  });
  const f = e._state;
  t.pause === !f.paused ? (f.paused = t.pause, eg(t.pause ? f.pauseQueue : f.resumeQueue)) : f.paused && (t.pause = !0);
  const p = (n || Object.keys(e.springs)).map(
    (b) => e.springs[b].start(t)
  ), v = t.cancel === !0 || FU(t, "cancel") === !0;
  (u || v && f.asyncId) && p.push(
    DU(++e._lastAsyncId, {
      props: t,
      state: f,
      actions: {
        pause: g3,
        resume: g3,
        start(b, m) {
          v ? ($h(f, e._lastAsyncId), m(Ff(e))) : (b.onRest = s, m(
            VU(
              u,
              b,
              f,
              e
            )
          ));
        }
      }
    })
  ), f.paused && await new Promise((b) => {
    f.resumeQueue.add(b);
  });
  const x = OP(e, await Promise.all(p));
  if (i && x.finished && !(r && x.noop)) {
    const b = HU(t, i, o);
    if (b)
      return XU(e, [b]), GU(e, b, !0);
  }
  return l && ot.batchedUpdates(() => l(x, e, e.item)), x;
}
function $be(e, t) {
  const r = { ...e.springs };
  return t && $t(En(t), (n) => {
    Se.und(n.keys) && (n = Kv(n)), Se.obj(n.to) || (n = { ...n, to: void 0 }), BU(r, n, (o) => qU(o));
  }), Obe(e, r), r;
}
function Obe(e, t) {
  ja(t, (r, n) => {
    e.springs[n] || (e.springs[n] = r, zd(r, e));
  });
}
function qU(e, t) {
  const r = new bbe();
  return r.key = e, t && zd(r, t), r;
}
function BU(e, t, r) {
  t.keys && $t(t.keys, (n) => {
    (e[n] || (e[n] = r(n)))._prepareNode(t);
  });
}
function XU(e, t) {
  $t(t, (r) => {
    BU(e.springs, r, (n) => qU(n, e));
  });
}
var Ebe = Y.createContext({
  pause: !1,
  immediate: !1
}), Sbe = () => {
  const e = [], t = function(n) {
    Xhe();
    const o = [];
    return $t(e, (a, i) => {
      if (Se.und(n))
        o.push(a.start());
      else {
        const s = r(n, a, i);
        s && o.push(a.start(s));
      }
    }), o;
  };
  t.current = e, t.add = function(n) {
    e.includes(n) || e.push(n);
  }, t.delete = function(n) {
    const o = e.indexOf(n);
    ~o && e.splice(o, 1);
  }, t.pause = function() {
    return $t(e, (n) => n.pause(...arguments)), this;
  }, t.resume = function() {
    return $t(e, (n) => n.resume(...arguments)), this;
  }, t.set = function(n) {
    $t(e, (o, a) => {
      const i = Se.fun(n) ? n(a, o) : n;
      i && o.set(i);
    });
  }, t.start = function(n) {
    const o = [];
    return $t(e, (a, i) => {
      if (Se.und(n))
        o.push(a.start());
      else {
        const s = this._getProps(n, a, i);
        s && o.push(a.start(s));
      }
    }), o;
  }, t.stop = function() {
    return $t(e, (n) => n.stop(...arguments)), this;
  }, t.update = function(n) {
    return $t(e, (o, a) => o.update(this._getProps(n, o, a))), this;
  };
  const r = function(n, o, a) {
    return Se.fun(n) ? n(a, o) : n;
  };
  return t._getProps = r, t;
};
function SI(e, t, r) {
  const n = Se.fun(t) && t, {
    reset: o,
    sort: a,
    trail: i = 0,
    expires: s = !0,
    exitBeforeEnter: l = !1,
    onDestroyed: c,
    ref: u,
    config: f
  } = n ? n() : t, p = Yt(
    () => n || arguments.length == 3 ? Sbe() : void 0,
    []
  ), v = En(e), x = [], b = ie(null), m = o ? null : b.current;
  lf(() => {
    b.current = x;
  }), jU(() => ($t(x, (V) => {
    p == null || p.add(V.ctrl), V.ctrl.ref = p;
  }), () => {
    $t(b.current, (V) => {
      V.expired && clearTimeout(V.expirationId), bI(V.ctrl, p), V.ctrl.stop(!0);
    });
  }));
  const w = Cbe(v, n ? n() : t, m), $ = o && b.current || [];
  lf(
    () => $t($, ({ ctrl: V, item: D, key: F }) => {
      bI(V, p), Yn(c, D, F);
    })
  );
  const E = [];
  if (m && $t(m, (V, D) => {
    V.expired ? (clearTimeout(V.expirationId), $.push(V)) : (D = E[D] = w.indexOf(V.key), ~D && (x[D] = V));
  }), $t(v, (V, D) => {
    x[D] || (x[D] = {
      key: w[D],
      item: V,
      phase: "mount",
      ctrl: new wbe()
    }, x[D].ctrl.item = V);
  }), E.length) {
    let V = -1;
    const { leave: D } = n ? n() : t;
    $t(E, (F, R) => {
      const H = m[R];
      ~F ? (V = x.indexOf(H), x[V] = { ...H, item: v[F] }) : D && x.splice(++V, 0, H);
    });
  }
  Se.fun(a) && x.sort((V, D) => a(V.item, D.item));
  let S = -i;
  const h = NU(), U = kP(t), G = /* @__PURE__ */ new Map(), Q = ie(/* @__PURE__ */ new Map()), Z = ie(!1);
  $t(x, (V, D) => {
    const F = V.key, R = V.phase, H = n ? n() : t;
    let B, g;
    const d = Yn(H.delay || 0, F);
    if (R == "mount")
      B = H.enter, g = "enter";
    else {
      const N = w.indexOf(F) < 0;
      if (R != "leave")
        if (N)
          B = H.leave, g = "leave";
        else if (B = H.update)
          g = "update";
        else return;
      else if (!N)
        B = H.enter, g = "enter";
      else return;
    }
    if (B = Yn(B, V.item, D), B = Se.obj(B) ? $P(B) : { to: B }, !B.config) {
      const N = f || U.config;
      B.config = Yn(N, V.item, D, g);
    }
    S += i;
    const O = {
      ...U,
      // we need to add our props.delay value you here.
      delay: d + S,
      ref: u,
      immediate: H.immediate,
      // This prevents implied resets.
      reset: !1,
      // Merge any phase-specific props.
      ...B
    };
    if (g == "enter" && Se.und(O.from)) {
      const N = n ? n() : t, j = Se.und(N.initial) || m ? N.from : N.initial;
      O.from = Yn(j, V.item, D);
    }
    const { onResolve: C } = O;
    O.onResolve = (N) => {
      Yn(C, N);
      const j = b.current, _ = j.find((T) => T.key === F);
      if (_ && !(N.cancelled && _.phase != "update") && _.ctrl.idle) {
        const T = j.every((M) => M.ctrl.idle);
        if (_.phase == "leave") {
          const M = Yn(s, _.item);
          if (M !== !1) {
            const z = M === !0 ? 0 : M;
            if (_.expired = !0, !T && z > 0) {
              z <= 2147483647 && (_.expirationId = setTimeout(h, z));
              return;
            }
          }
        }
        T && j.some((M) => M.expired) && (Q.current.delete(_), l && (Z.current = !0), h());
      }
    };
    const A = $be(V.ctrl, O);
    g === "leave" && l ? Q.current.set(V, { phase: g, springs: A, payload: O }) : G.set(V, { phase: g, springs: A, payload: O });
  });
  const X = Ut(Ebe), J = Qhe(X), I = X !== J && ube(X);
  lf(() => {
    I && $t(x, (V) => {
      V.ctrl.start({ default: X });
    });
  }, [X]), $t(G, (V, D) => {
    if (Q.current.size) {
      const F = x.findIndex((R) => R.key === D.key);
      x.splice(F, 1);
    }
  }), lf(
    () => {
      $t(
        Q.current.size ? Q.current : G,
        ({ phase: V, payload: D }, F) => {
          const { ctrl: R } = F;
          F.phase = V, p == null || p.add(R), I && V == "enter" && R.start({ default: X }), D && (fbe(R, D.ref), (R.ref || p) && !Z.current ? R.update(D) : (R.start(D), Z.current && (Z.current = !1)));
        }
      );
    },
    o ? void 0 : r
  );
  const te = (V) => /* @__PURE__ */ Y.createElement(Y.Fragment, null, x.map((D, F) => {
    const { springs: R } = G.get(D) || D.ctrl, H = V({ ...R }, D.item, D, F);
    return H && H.type ? /* @__PURE__ */ Y.createElement(
      H.type,
      {
        ...H.props,
        key: Se.str(D.key) || Se.num(D.key) ? D.key : D.ctrl.id,
        ref: H.ref
      }
    ) : H;
  }));
  return p ? [te, p] : te;
}
var Pbe = 1;
function Cbe(e, { key: t, keys: r = t }, n) {
  if (r === null) {
    const o = /* @__PURE__ */ new Set();
    return e.map((a) => {
      const i = n && n.find(
        (s) => s.item === a && s.phase !== "leave" && !o.has(s)
      );
      return i ? (o.add(i), i.key) : Pbe++;
    });
  }
  return Se.und(r) ? e : Se.fun(r) ? e.map(r) : En(r);
}
var Abe = class extends EP {
  constructor(e, t) {
    super(), this.source = e, this.idle = !0, this._active = /* @__PURE__ */ new Set(), this.calc = bh(...t);
    const r = this._get(), n = b3(r);
    wP(this, n.create(r));
  }
  advance(e) {
    const t = this._get(), r = this.get();
    oi(t, r) || (Ho(this).setValue(t), this._onChange(t, this.idle)), !this.idle && PI(this._active) && s2(this);
  }
  _get() {
    const e = Se.arr(this.source) ? this.source.map(Un) : En(Un(this.source));
    return this.calc(...e);
  }
  _start() {
    this.idle && !PI(this._active) && (this.idle = !1, $t(b0(this), (e) => {
      e.done = !1;
    }), zo.skipAnimation ? (ot.batchedUpdates(() => this.advance()), s2(this)) : p0.start(this));
  }
  // Observe our sources only when we're observed.
  _attach() {
    let e = 1;
    $t(En(this.source), (t) => {
      go(t) && zd(t, this), x3(t) && (t.idle || this._active.add(t), e = Math.max(e, t.priority + 1));
    }), this.priority = e, this._start();
  }
  // Stop observing our sources once we have no observers.
  _detach() {
    $t(En(this.source), (e) => {
      go(e) && xh(e, this);
    }), this._active.clear(), s2(this);
  }
  /** @internal */
  eventObserved(e) {
    e.type == "change" ? e.idle ? this.advance() : (this._active.add(e.parent), this._start()) : e.type == "idle" ? this._active.delete(e.parent) : e.type == "priority" && (this.priority = En(this.source).reduce(
      (t, r) => Math.max(t, (x3(r) ? r.priority : 0) + 1),
      0
    ));
  }
};
function _be(e) {
  return e.idle !== !1;
}
function PI(e) {
  return !e.size || Array.from(e).every(_be);
}
function s2(e) {
  e.idle || (e.idle = !0, $t(b0(e), (t) => {
    t.done = !0;
  }), vh(e, {
    type: "idle",
    parent: e
  }));
}
zo.assign({
  createStringInterpolator: AU,
  to: (e, t) => new Abe(e, t)
});
var KU = /^--/;
function Nbe(e, t) {
  return t == null || typeof t == "boolean" || t === "" ? "" : typeof t == "number" && t !== 0 && !KU.test(e) && !(Cg.hasOwnProperty(e) && Cg[e]) ? t + "px" : ("" + t).trim();
}
var CI = {};
function jbe(e, t) {
  if (!e.nodeType || !e.setAttribute)
    return !1;
  const r = e.nodeName === "filter" || e.parentNode && e.parentNode.nodeName === "filter", {
    className: n,
    style: o,
    children: a,
    scrollTop: i,
    scrollLeft: s,
    viewBox: l,
    ...c
  } = t, u = Object.values(c), f = Object.keys(c).map(
    (p) => r || e.hasAttribute(p) ? p : CI[p] || (CI[p] = p.replace(
      /([A-Z])/g,
      // Attributes are written in dash case
      (v) => "-" + v.toLowerCase()
    ))
  );
  a !== void 0 && (e.textContent = a);
  for (const p in o)
    if (o.hasOwnProperty(p)) {
      const v = Nbe(p, o[p]);
      KU.test(p) ? e.style.setProperty(p, v) : e.style[p] = v;
    }
  f.forEach((p, v) => {
    e.setAttribute(p, u[v]);
  }), n !== void 0 && (e.className = n), i !== void 0 && (e.scrollTop = i), s !== void 0 && (e.scrollLeft = s), l !== void 0 && e.setAttribute("viewBox", l);
}
var Cg = {
  animationIterationCount: !0,
  borderImageOutset: !0,
  borderImageSlice: !0,
  borderImageWidth: !0,
  boxFlex: !0,
  boxFlexGroup: !0,
  boxOrdinalGroup: !0,
  columnCount: !0,
  columns: !0,
  flex: !0,
  flexGrow: !0,
  flexPositive: !0,
  flexShrink: !0,
  flexNegative: !0,
  flexOrder: !0,
  gridRow: !0,
  gridRowEnd: !0,
  gridRowSpan: !0,
  gridRowStart: !0,
  gridColumn: !0,
  gridColumnEnd: !0,
  gridColumnSpan: !0,
  gridColumnStart: !0,
  fontWeight: !0,
  lineClamp: !0,
  lineHeight: !0,
  opacity: !0,
  order: !0,
  orphans: !0,
  tabSize: !0,
  widows: !0,
  zIndex: !0,
  zoom: !0,
  // SVG-related properties
  fillOpacity: !0,
  floodOpacity: !0,
  stopOpacity: !0,
  strokeDasharray: !0,
  strokeDashoffset: !0,
  strokeMiterlimit: !0,
  strokeOpacity: !0,
  strokeWidth: !0
}, Ibe = (e, t) => e + t.charAt(0).toUpperCase() + t.substring(1), Tbe = ["Webkit", "Ms", "Moz", "O"];
Cg = Object.keys(Cg).reduce((e, t) => (Tbe.forEach((r) => e[Ibe(r, t)] = e[t]), e), Cg);
var Mbe = /^(matrix|translate|scale|rotate|skew)/, Rbe = /^(translate)/, zbe = /^(rotate|skew)/, l2 = (e, t) => Se.num(e) && e !== 0 ? e + t : e, Qy = (e, t) => Se.arr(e) ? e.every((r) => Qy(r, t)) : Se.num(e) ? e === t : parseFloat(e) === t, Fbe = class extends v0 {
  constructor({ x: e, y: t, z: r, ...n }) {
    const o = [], a = [];
    (e || t || r) && (o.push([e || 0, t || 0, r || 0]), a.push((i) => [
      `translate3d(${i.map((s) => l2(s, "px")).join(",")})`,
      // prettier-ignore
      Qy(i, 0)
    ])), ja(n, (i, s) => {
      if (s === "transform")
        o.push([i || ""]), a.push((l) => [l, l === ""]);
      else if (Mbe.test(s)) {
        if (delete n[s], Se.und(i)) return;
        const l = Rbe.test(s) ? "px" : zbe.test(s) ? "deg" : "";
        o.push(En(i)), a.push(
          s === "rotate3d" ? ([c, u, f, p]) => [
            `rotate3d(${c},${u},${f},${l2(p, l)})`,
            Qy(p, 0)
          ] : (c) => [
            `${s}(${c.map((u) => l2(u, l)).join(",")})`,
            Qy(c, s.startsWith("scale") ? 1 : 0)
          ]
        );
      }
    }), o.length && (n.transform = new Dbe(o, a)), super(n);
  }
}, Dbe = class extends SU {
  constructor(e, t) {
    super(), this.inputs = e, this.transforms = t, this._value = null;
  }
  get() {
    return this._value || (this._value = this._get());
  }
  _get() {
    let e = "", t = !0;
    return $t(this.inputs, (r, n) => {
      const o = Un(r[0]), [a, i] = this.transforms[n](
        Se.arr(o) ? o : r.map(Un)
      );
      e += " " + a, t = t && i;
    }), t ? "none" : e;
  }
  // Start observing our inputs once we have an observer.
  observerAdded(e) {
    e == 1 && $t(
      this.inputs,
      (t) => $t(
        t,
        (r) => go(r) && zd(r, this)
      )
    );
  }
  // Stop observing our inputs once we have no observers.
  observerRemoved(e) {
    e == 0 && $t(
      this.inputs,
      (t) => $t(
        t,
        (r) => go(r) && xh(r, this)
      )
    );
  }
  eventObserved(e) {
    e.type == "change" && (this._value = null), vh(this, e);
  }
}, Lbe = [
  "a",
  "abbr",
  "address",
  "area",
  "article",
  "aside",
  "audio",
  "b",
  "base",
  "bdi",
  "bdo",
  "big",
  "blockquote",
  "body",
  "br",
  "button",
  "canvas",
  "caption",
  "cite",
  "code",
  "col",
  "colgroup",
  "data",
  "datalist",
  "dd",
  "del",
  "details",
  "dfn",
  "dialog",
  "div",
  "dl",
  "dt",
  "em",
  "embed",
  "fieldset",
  "figcaption",
  "figure",
  "footer",
  "form",
  "h1",
  "h2",
  "h3",
  "h4",
  "h5",
  "h6",
  "head",
  "header",
  "hgroup",
  "hr",
  "html",
  "i",
  "iframe",
  "img",
  "input",
  "ins",
  "kbd",
  "keygen",
  "label",
  "legend",
  "li",
  "link",
  "main",
  "map",
  "mark",
  "menu",
  "menuitem",
  "meta",
  "meter",
  "nav",
  "noscript",
  "object",
  "ol",
  "optgroup",
  "option",
  "output",
  "p",
  "param",
  "picture",
  "pre",
  "progress",
  "q",
  "rp",
  "rt",
  "ruby",
  "s",
  "samp",
  "script",
  "section",
  "select",
  "small",
  "source",
  "span",
  "strong",
  "style",
  "sub",
  "summary",
  "sup",
  "table",
  "tbody",
  "td",
  "textarea",
  "tfoot",
  "th",
  "thead",
  "time",
  "title",
  "tr",
  "track",
  "u",
  "ul",
  "var",
  "video",
  "wbr",
  // SVG
  "circle",
  "clipPath",
  "defs",
  "ellipse",
  "foreignObject",
  "g",
  "image",
  "line",
  "linearGradient",
  "mask",
  "path",
  "pattern",
  "polygon",
  "polyline",
  "radialGradient",
  "rect",
  "stop",
  "svg",
  "text",
  "tspan"
];
zo.assign({
  batchedUpdates: fF,
  createStringInterpolator: AU,
  colors: Phe
});
var Vbe = abe(Lbe, {
  applyAnimatedValues: jbe,
  createAnimatedStyle: (e) => new Fbe(e),
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  getComponentProps: ({ scrollTop: e, scrollLeft: t, ...r }) => r
}), JU = Vbe.animated;
/*!
 * Font Awesome Pro 6.7.2 by @fontawesome - https://fontawesome.com
 * License - https://fontawesome.com/license (Commercial License)
 * Copyright 2024 Fonticons, Inc.
 */
const Wbe = {
  prefix: "fas",
  iconName: "down-left-and-up-right-to-center",
  icon: [512, 512, ["compress-alt"], "f422", "M439 7c9.4-9.4 24.6-9.4 33.9 0l32 32c9.4 9.4 9.4 24.6 0 33.9l-87 87 39 39c6.9 6.9 8.9 17.2 5.2 26.2s-12.5 14.8-22.2 14.8l-144 0c-13.3 0-24-10.7-24-24l0-144c0-9.7 5.8-18.5 14.8-22.2s19.3-1.7 26.2 5.2l39 39L439 7zM72 272l144 0c13.3 0 24 10.7 24 24l0 144c0 9.7-5.8 18.5-14.8 22.2s-19.3 1.7-26.2-5.2l-39-39L73 505c-9.4 9.4-24.6 9.4-33.9 0L7 473c-9.4-9.4-9.4-24.6 0-33.9l87-87L55 313c-6.9-6.9-8.9-17.2-5.2-26.2s12.5-14.8 22.2-14.8z"]
}, Ube = {
  prefix: "fas",
  iconName: "up-right-and-down-left-from-center",
  icon: [512, 512, ["expand-alt"], "f424", "M344 0L488 0c13.3 0 24 10.7 24 24l0 144c0 9.7-5.8 18.5-14.8 22.2s-19.3 1.7-26.2-5.2l-39-39-87 87c-9.4 9.4-24.6 9.4-33.9 0l-32-32c-9.4-9.4-9.4-24.6 0-33.9l87-87L327 41c-6.9-6.9-8.9-17.2-5.2-26.2S334.3 0 344 0zM168 512L24 512c-13.3 0-24-10.7-24-24L0 344c0-9.7 5.8-18.5 14.8-22.2s19.3-1.7 26.2 5.2l39 39 87-87c9.4-9.4 24.6-9.4 33.9 0l32 32c9.4 9.4 9.4 24.6 0 33.9l-87 87 39 39c6.9 6.9 8.9 17.2 5.2 26.2s-12.5 14.8-22.2 14.8z"]
};
var w3 = /* @__PURE__ */ ((e) => (e[e.NONE = 0] = "NONE", e[e.INPUT = 1] = "INPUT", e[e.PANEL = 2] = "PANEL", e[e.DIALOGUE = 3] = "DIALOGUE", e))(w3 || {}), Ybe = Object.freeze({
  // See: https://github.com/twbs/bootstrap/blob/main/scss/mixins/_visually-hidden.scss
  position: "absolute",
  border: 0,
  width: 1,
  height: 1,
  padding: 0,
  margin: -1,
  overflow: "hidden",
  clip: "rect(0, 0, 0, 0)",
  whiteSpace: "nowrap",
  wordWrap: "normal"
}), Hbe = "VisuallyHidden", QU = Y.forwardRef(
  (e, t) => /* @__PURE__ */ q(
    Ma.span,
    {
      ...e,
      ref: t,
      style: { ...Ybe, ...e.style }
    }
  )
);
QU.displayName = Hbe;
var AI = QU;
const Oh = [], Gbe = (e) => {
  Oh.push(e);
}, qbe = (e) => {
  const t = Oh.findIndex((r) => r.id === e);
  t !== -1 && Oh.splice(t, 1);
}, Bbe = (e, t) => {
  const r = Oh.find((n) => n.id === e);
  r && Object.assign(r, t);
}, Xbe = () => Oh.filter((e) => e.closeOnEsc).sort((e, t) => t.zIndex - e.zIndex)[0];
typeof window < "u" && !window.__modalEscListenerInstalled && (window.__modalEscListenerInstalled = !0, window.addEventListener("keydown", (e) => {
  if (e.key !== "Escape" && e.key !== "Esc") return;
  const t = Xbe();
  t && (e.preventDefault(), t.onClose());
}));
let bm = 70;
const Kbe = ({
  styles: e,
  backdropClassName: t,
  disableHotkeyInput: r,
  enableHotkeyInput: n
}) => (Ne(() => (r(w3.DIALOGUE), () => {
  n(w3.DIALOGUE);
}), [r, n]), /* @__PURE__ */ q(mue, { forceMount: !0, asChild: !0, children: /* @__PURE__ */ q(
  JU.div,
  {
    className: xg("fixed inset-0 z-[69]", t),
    style: {
      opacity: e.opacity,
      pointerEvents: "none",
      background: "radial-gradient(800px 400px at 10% -10%, rgba(45,129,255,0.10), transparent), radial-gradient(600px 320px at 110% 110%, rgba(28,182,190,0.10), transparent), rgba(0,0,0,0.60)"
    }
  }
) })), k3 = ({ children: e }) => /* @__PURE__ */ q(Vt, { children: e }), ZU = Br(
  void 0
), SP = ({ className: e, size: t = "md" }) => {
  const r = Ut(ZU);
  if (!r) return null;
  const { expanded: n, toggleExpanded: o } = r;
  return /* @__PURE__ */ q(
    "button",
    {
      type: "button",
      "aria-label": n ? "Restore modal size" : "Expand modal",
      onClick: o,
      className: xg(
        "flex items-center justify-center rounded-full bg-black/40 text-white/60 transition-all hover:bg-black/70 hover:text-white",
        {
          sm: "h-5 w-5 text-sm",
          md: "h-7 w-7 text-md",
          lg: "h-9 w-9 text-xl"
        }[t],
        "relative z-[70]",
        e
      ),
      children: /* @__PURE__ */ q(
        mh,
        {
          icon: n ? Wbe : Ube
        }
      )
    }
  );
};
SP.displayName = "ModalExpandButton";
const gd = ({
  isOpen: e,
  title: t,
  titleIcon: r,
  onTitleIconClick: n,
  onClose: o,
  enableHotkeyInput: a = () => {
  },
  disableHotkeyInput: i = () => {
  },
  className: s,
  backdropClassName: l,
  width: c,
  children: u,
  childPadding: f = !0,
  titleIconClassName: p,
  showClose: v = !0,
  draggable: x = !1,
  resizable: b = !1,
  initialPosition: m,
  closeOnOutsideClick: w = !0,
  closeOnEsc: $ = !0,
  allowBackgroundInteraction: E = !1,
  expandable: S = !1,
  accessibleTitle: h,
  accessibleDescription: U
}) => {
  const [G, Q] = _e(
    null
  ), [Z, X] = _e(!1), [J, I] = _e(!1), te = ie({ x: 0, y: 0 }), V = ie({ x: 0, y: 0 }), D = ie(null), F = ie(null), R = ie(null), [H, B] = _e(() => ++bm), [g, d] = _e(!1), O = ie(null), C = SI(e, {
    from: {
      opacity: 0,
      transform: "scale(0.95) translateY(-10px)"
    },
    enter: {
      opacity: 1,
      transform: "scale(1) translateY(0px)"
    },
    leave: {
      opacity: 0,
      transform: "scale(0.95) translateY(10px)"
    },
    config: {
      tension: 300,
      friction: 30,
      mass: 0.8
    }
  }), A = SI(e, {
    from: { opacity: 0 },
    enter: { opacity: 1 },
    leave: { opacity: 0 },
    config: {
      tension: 280,
      friction: 25
    }
  });
  Ne(() => {
    g ? (F.current && (O.current = { ...F.current }), Q({ x: 0, y: 0 }), F.current = { x: 0, y: 0 }, D.current && (D.current.style.left = "0px", D.current.style.top = "0px", D.current.style.margin = "0", D.current.style.position = "fixed", D.current.style.zIndex = String(H))) : O.current && (Q({ ...O.current }), F.current = { ...O.current }, D.current && (D.current.style.left = O.current.x + "px", D.current.style.top = O.current.y + "px", D.current.style.margin = "0", D.current.style.position = "fixed", D.current.style.zIndex = String(H)));
  }, [g, H]);
  const N = () => d((le) => !le);
  Ne(() => {
    e ? R.current ? (Q({ ...R.current }), F.current = { ...R.current }, D.current && (D.current.style.left = R.current.x + "px", D.current.style.top = R.current.y + "px", D.current.style.margin = "0", D.current.style.position = "fixed", D.current.style.zIndex = String(H))) : m && (Q({ ...m }), F.current = { ...m }, D.current && (D.current.style.left = m.x + "px", D.current.style.top = m.y + "px", D.current.style.margin = "0", D.current.style.position = "fixed", D.current.style.zIndex = String(H))) : F.current && (R.current = { ...F.current });
  }, [e, H]), Ne(() => {
    if (!Z) return;
    let le = null;
    const se = (rt) => {
      if (!D.current) return;
      const Ct = rt.clientX - V.current.x, ue = rt.clientY - V.current.y, je = te.current.x + Ct, Re = te.current.y + ue, ze = D.current, { width: Ot, height: Kr } = ze.getBoundingClientRect(), xo = window.innerWidth, Hn = window.innerHeight, Qr = 450, wo = -450, Ht = 0, lo = xo - Ot + Qr, br = Hn - Kr + Qr, co = Math.max(wo, Math.min(je, lo)), za = Math.max(Ht, Math.min(Re, br));
      F.current = { x: co, y: za }, D.current && (le && cancelAnimationFrame(le), le = requestAnimationFrame(() => {
        D.current && F.current && (D.current.style.left = F.current.x + "px", D.current.style.top = F.current.y + "px", D.current.style.margin = "0", D.current.style.position = "fixed", D.current.style.zIndex = String(H));
      }));
    }, de = () => {
      X(!1), F.current && Q({ ...F.current });
    };
    return window.addEventListener("mousemove", se), window.addEventListener("mouseup", de), () => {
      window.removeEventListener("mousemove", se), window.removeEventListener("mouseup", de), le && cancelAnimationFrame(le);
    };
  }, [Z, H]);
  const j = (le) => {
    var se, de;
    if (!D.current) return;
    g && d(!1), le.preventDefault(), le.stopPropagation();
    const rt = D.current, { width: Ct, height: ue } = rt.getBoundingClientRect(), je = window.innerWidth, Re = window.innerHeight;
    let ze = ((se = F.current) == null ? void 0 : se.x) ?? (G == null ? void 0 : G.x), Ot = ((de = F.current) == null ? void 0 : de.y) ?? (G == null ? void 0 : G.y);
    (ze === void 0 || Ot === void 0) && (m ? (ze = m.x, Ot = m.y) : (ze = (je - Ct) / 2, Ot = (Re - ue) / 2)), te.current = { x: ze, y: Ot }, V.current = { x: le.clientX, y: le.clientY }, X(!0), !G && !F.current && (Q({ x: ze, y: Ot }), F.current = { x: ze, y: Ot }, D.current && (D.current.style.left = ze + "px", D.current.style.top = Ot + "px", D.current.style.margin = "0", D.current.style.position = "fixed", D.current.style.zIndex = String(H)));
  };
  let _ = u;
  if (x) {
    let le = !1;
    _ = Array.isArray(u) ? u.map((se) => {
      if (!le && Dl(se) && (se.type === k3 || se.type.displayName === "ModalDragHandle")) {
        le = !0;
        const de = se;
        return Ll(de, {
          children: /* @__PURE__ */ q(
            "div",
            {
              style: { cursor: "move", userSelect: "none" },
              onMouseDown: j,
              children: de.props.children
            }
          )
        });
      }
      return se;
    }) : Dl(u) && (u.type === k3 || u.type.displayName === "ModalDragHandle") ? (() => {
      const se = u;
      return Ll(se, {
        children: /* @__PURE__ */ q(
          "div",
          {
            style: { cursor: "move", userSelect: "none" },
            onMouseDown: j,
            children: se.props.children
          }
        )
      });
    })() : u;
  }
  const T = ie(null), M = ie(null), z = (le, se) => {
    if (!D.current || (le.preventDefault(), le.stopPropagation(), g)) return;
    const de = D.current.getBoundingClientRect();
    T.current = se, M.current = {
      mouseX: le.clientX,
      mouseY: le.clientY,
      width: de.width,
      height: de.height,
      x: de.left,
      y: de.top
    }, I(!0);
  };
  Ne(() => {
    if (!J) return;
    let le = null;
    const se = (rt) => {
      if (!D.current || !M.current || !T.current)
        return;
      const Ct = rt.clientX - M.current.mouseX, ue = rt.clientY - M.current.mouseY;
      let je = M.current.width, Re = M.current.height, ze = M.current.x, Ot = M.current.y;
      const Kr = T.current;
      Kr.includes("right") && (je = M.current.width + Ct), Kr.includes("left") && (je = M.current.width - Ct, ze = M.current.x + Ct), Kr.includes("bottom") && (Re = M.current.height + ue), Kr.includes("top") && (Re = M.current.height - ue, Ot = M.current.y + ue), je = Math.max(320, je), Re = Math.max(240, Re), F.current = { x: ze, y: Ot }, Ce.current = { width: je, height: Re }, le && cancelAnimationFrame(le), le = requestAnimationFrame(() => {
        D.current && F.current && (D.current.style.width = je + "px", D.current.style.height = Re + "px", D.current.style.left = F.current.x + "px", D.current.style.top = F.current.y + "px", D.current.style.margin = "0", D.current.style.position = "fixed", D.current.style.zIndex = String(H));
      });
    }, de = () => {
      I(!1), F.current && Q({ ...F.current }), Ce.current && oe({ ...Ce.current });
    };
    return window.addEventListener("mousemove", se), window.addEventListener("mouseup", de), () => {
      window.removeEventListener("mousemove", se), window.removeEventListener("mouseup", de), le && cancelAnimationFrame(le);
    };
  }, [J, H]);
  const ee = () => {
    if (!b || g) return null;
    const le = "absolute z-[75] bg-transparent select-none", se = 5, de = 2, rt = [
      { dir: "top", className: `top-0 left-0 w-full h-${de}` },
      { dir: "bottom", className: `bottom-0 left-0 w-full h-${de}` },
      { dir: "left", className: `left-0 top-0 h-full w-${de}` },
      { dir: "right", className: `right-0 top-0 h-full w-${de}` },
      {
        dir: "top-left",
        className: `top-0 left-0 w-${se} h-${se}`
      },
      {
        dir: "top-right",
        className: `top-0 right-0 w-${se} h-${se}`
      },
      {
        dir: "bottom-left",
        className: `bottom-0 left-0 w-${se} h-${se}`
      },
      {
        dir: "bottom-right",
        className: `bottom-0 right-0 w-${se} h-${se}`
      }
    ], Ct = {
      top: "n-resize",
      bottom: "s-resize",
      left: "w-resize",
      right: "e-resize",
      "top-left": "nw-resize",
      "top-right": "ne-resize",
      "bottom-left": "sw-resize",
      "bottom-right": "se-resize"
    };
    return rt.map((ue) => /* @__PURE__ */ q(
      "div",
      {
        className: `${le} ${ue.className}`,
        style: { cursor: Ct[ue.dir] },
        onMouseDown: (je) => z(je, ue.dir)
      },
      ue.dir
    ));
  }, [k, oe] = _e(
    null
  ), Ce = ie(null), Ze = ie(null);
  Ne(() => {
    if (e && !k && D.current && b) {
      const { width: le, height: se } = D.current.getBoundingClientRect();
      oe({ width: le, height: se }), Ce.current = { width: le, height: se };
    }
  }, [e, k, b]), Ne(() => {
    if (b) {
      if (!e)
        Ce.current && (Ze.current = { ...Ce.current });
      else if (Ze.current && D.current) {
        const { width: le, height: se } = Ze.current;
        D.current.style.width = le + "px", D.current.style.height = se + "px", oe({ width: le, height: se }), Ce.current = { width: le, height: se };
      }
    }
  }, [e, b]), Ne(() => {
    const le = () => {
      D.current && H < bm && (bm += 1, B(bm), D.current.style.zIndex = String(bm));
    }, se = D.current;
    return se && se.addEventListener("mousedown", le), () => {
      se && se.removeEventListener("mousedown", le);
    };
  }, [H]), Ne(() => {
    if (!e || E) return;
    const le = (se) => {
      if (se.key === "Escape" || se.key === "Esc") return;
      const de = se.target;
      de && (de.closest(
        '[role="dialog"], [role="menu"], [role="listbox"], [data-headlessui-portal]'
      ) || de.matches("input, textarea, select, button, [contenteditable]")) || se.stopPropagation();
    };
    return window.addEventListener("keydown", le, !0), () => {
      window.removeEventListener("keydown", le, !0);
    };
  }, [e, E]), Ne(() => {
    if (!E) return;
    const le = D.current;
    if (!le) return;
    const se = (ue) => {
      ue && (ue.hasAttribute("inert") && ue.removeAttribute("inert"), ue.inert && (ue.inert = !1), ue.getAttribute("aria-hidden") === "true" && ue.removeAttribute("aria-hidden"));
    };
    let de = le;
    for (; de; )
      se(de), de = de.parentElement;
    const rt = new MutationObserver((ue) => {
      ue.forEach((je) => {
        if (je.type === "attributes" && je.attributeName === "inert" && je.target instanceof HTMLElement) {
          const Re = je.target;
          (Re === le || le.contains(Re)) && se(Re);
        }
      });
    });
    rt.observe(le, {
      attributes: !0,
      subtree: !1,
      attributeFilter: ["inert"]
    }), document.querySelectorAll(
      "[data-radix-portal][inert], [data-headlessui-portal][inert]"
    ).forEach((ue) => ue.removeAttribute("inert"));
    const Ct = new MutationObserver((ue) => {
      ue.forEach((je) => {
        if (je.type === "attributes" && je.attributeName === "inert" && je.target.hasAttribute("inert")) {
          const Re = je.target;
          (Re.hasAttribute("data-radix-portal") || Re.hasAttribute("data-headlessui-portal")) && se(Re);
        }
      });
    });
    return Ct.observe(document.body, {
      attributes: !0,
      subtree: !0,
      attributeFilter: ["inert"]
    }), () => {
      rt.disconnect(), Ct.disconnect();
    };
  }, [E]);
  const rn = ie(Math.floor(Math.random() * 1e9));
  Ne(() => {
    if (e)
      return Gbe({
        id: rn.current,
        zIndex: H,
        onClose: o,
        closeOnEsc: $
      }), () => {
        qbe(rn.current);
      };
  }, [e]), Ne(() => {
    e && Bbe(rn.current, { zIndex: H, onClose: o, closeOnEsc: $ });
  }, [e, H, o, $]);
  const Xr = () => g ? {
    position: "fixed",
    left: 0,
    top: 0,
    margin: 0,
    zIndex: H,
    width: "100vw",
    height: "100vh",
    ...E ? { pointerEvents: "auto" } : {}
  } : !x || !G ? {
    ...b && k ? { width: k.width, height: k.height } : {},
    ...E ? { pointerEvents: "auto" } : {}
  } : {
    position: "fixed",
    left: G.x,
    top: G.y,
    margin: 0,
    zIndex: H,
    ...b && k ? { width: k.width, height: k.height } : {},
    ...E ? { pointerEvents: "auto" } : {}
  };
  return /* @__PURE__ */ q(
    due,
    {
      open: e,
      onOpenChange: (le) => !le && w && o(),
      modal: !E,
      children: /* @__PURE__ */ q(pue, { children: /* @__PURE__ */ Pe(
        "div",
        {
          className: "fixed inset-0 z-[70]",
          style: E ? { pointerEvents: "none" } : void 0,
          children: [
            !E && A(
              (le, se) => se ? /* @__PURE__ */ q(
                Kbe,
                {
                  styles: le,
                  backdropClassName: l,
                  disableHotkeyInput: i,
                  enableHotkeyInput: a
                },
                "backdrop"
              ) : null
            ),
            E && /* @__PURE__ */ q(
              "div",
              {
                className: xg("fixed inset-0 z-[69]", l),
                style: { pointerEvents: "none" }
              }
            ),
            /* @__PURE__ */ q(ZU.Provider, { value: { expanded: g, toggleExpanded: N }, children: /* @__PURE__ */ q(
              "div",
              {
                className: "flex min-h-full items-center justify-center p-4 text-center",
                style: E ? { pointerEvents: "none" } : void 0,
                children: C((le, se) => se ? /* @__PURE__ */ q(
                  gue,
                  {
                    forceMount: !0,
                    asChild: !0,
                    ...U ? {} : { "aria-describedby": void 0 },
                    onPointerDownOutside: (de) => {
                      (!w || E) && de.preventDefault();
                    },
                    onEscapeKeyDown: (de) => {
                      $ || de.preventDefault();
                    },
                    onInteractOutside: (de) => {
                      E && de.preventDefault();
                    },
                    children: /* @__PURE__ */ Pe(
                      JU.div,
                      {
                        className: xg(
                          "w-full max-w-lg rounded-xl relative border border-ui-panel-border bg-ui-modal text-left align-middle shadow-2xl z-[70]",
                          f && !g ? "p-4" : "",
                          s,
                          "!transition-none",
                          // Always disable CSS transitions for spring animations
                          g && "w-screen h-screen max-w-screen max-h-screen rounded-none"
                        ),
                        ref: D,
                        style: {
                          ...Xr(),
                          opacity: le.opacity,
                          transform: le.transform,
                          transformOrigin: "center center",
                          willChange: "transform, opacity"
                          // Optimize for animations
                        },
                        children: [
                          /* @__PURE__ */ Pe("div", { className: "w-full h-full", children: [
                            U && /* @__PURE__ */ q(AI, { asChild: !0, children: /* @__PURE__ */ q(hue, { children: U }) }),
                            t ? /* @__PURE__ */ q(
                              AN,
                              {
                                className: xg(
                                  "mb-4 flex justify-between pb-0 text-xl font-bold text-base-fg"
                                ),
                                children: /* @__PURE__ */ q(Vt, { children: n ? /* @__PURE__ */ Pe(
                                  "button",
                                  {
                                    className: "flex items-center gap-3",
                                    onClick: n,
                                    children: [
                                      r && /* @__PURE__ */ q(
                                        mh,
                                        {
                                          icon: r,
                                          className: p
                                        }
                                      ),
                                      t
                                    ]
                                  }
                                ) : /* @__PURE__ */ Pe("div", { className: "flex items-center gap-3", children: [
                                  r && /* @__PURE__ */ q(
                                    mh,
                                    {
                                      icon: r,
                                      className: p
                                    }
                                  ),
                                  t
                                ] }) })
                              }
                            ) : /* @__PURE__ */ q(AI, { asChild: !0, children: /* @__PURE__ */ q(AN, { children: h ?? "Dialog" }) }),
                            /* @__PURE__ */ q("div", { className: "h-full".trim(), children: _ }),
                            ee()
                          ] }),
                          (v || S) && /* @__PURE__ */ Pe("div", { className: "absolute top-0 right-0 m-2.5 z-[80] flex items-center gap-2", children: [
                            S && /* @__PURE__ */ q(gd.ExpandButton, {}),
                            v && /* @__PURE__ */ q(vhe, { onClick: o })
                          ] })
                        ]
                      }
                    )
                  }
                ) : null)
              }
            ) })
          ]
        }
      ) })
    }
  );
};
gd.DragHandle = k3;
gd.DragHandle.displayName = "ModalDragHandle";
gd.ExpandButton = SP;
SP.displayName = "ModalExpandButton";
/*!
 * Font Awesome Free 6.7.2 by @fontawesome - https://fontawesome.com
 * License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License)
 * Copyright 2024 Fonticons, Inc.
 */
function Jbe(e, t, r) {
  return (t = Zbe(t)) in e ? Object.defineProperty(e, t, {
    value: r,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : e[t] = r, e;
}
function _I(e, t) {
  var r = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var n = Object.getOwnPropertySymbols(e);
    t && (n = n.filter(function(o) {
      return Object.getOwnPropertyDescriptor(e, o).enumerable;
    })), r.push.apply(r, n);
  }
  return r;
}
function be(e) {
  for (var t = 1; t < arguments.length; t++) {
    var r = arguments[t] != null ? arguments[t] : {};
    t % 2 ? _I(Object(r), !0).forEach(function(n) {
      Jbe(e, n, r[n]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : _I(Object(r)).forEach(function(n) {
      Object.defineProperty(e, n, Object.getOwnPropertyDescriptor(r, n));
    });
  }
  return e;
}
function Qbe(e, t) {
  if (typeof e != "object" || !e) return e;
  var r = e[Symbol.toPrimitive];
  if (r !== void 0) {
    var n = r.call(e, t);
    if (typeof n != "object") return n;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (t === "string" ? String : Number)(e);
}
function Zbe(e) {
  var t = Qbe(e, "string");
  return typeof t == "symbol" ? t : t + "";
}
const NI = () => {
};
let PP = {}, eY = {}, tY = null, rY = {
  mark: NI,
  measure: NI
};
try {
  typeof window < "u" && (PP = window), typeof document < "u" && (eY = document), typeof MutationObserver < "u" && (tY = MutationObserver), typeof performance < "u" && (rY = performance);
} catch {
}
const {
  userAgent: jI = ""
} = PP.navigator || {}, Zl = PP, Lr = eY, II = tY, Qb = rY;
Zl.document;
const Vi = !!Lr.documentElement && !!Lr.head && typeof Lr.addEventListener == "function" && typeof Lr.createElement == "function", nY = ~jI.indexOf("MSIE") || ~jI.indexOf("Trident/");
var eye = /fa(s|r|l|t|d|dr|dl|dt|b|k|kd|ss|sr|sl|st|sds|sdr|sdl|sdt)?[\-\ ]/, tye = /Font ?Awesome ?([56 ]*)(Solid|Regular|Light|Thin|Duotone|Brands|Free|Pro|Sharp Duotone|Sharp|Kit)?.*/i, oY = {
  classic: {
    fa: "solid",
    fas: "solid",
    "fa-solid": "solid",
    far: "regular",
    "fa-regular": "regular",
    fal: "light",
    "fa-light": "light",
    fat: "thin",
    "fa-thin": "thin",
    fab: "brands",
    "fa-brands": "brands"
  },
  duotone: {
    fa: "solid",
    fad: "solid",
    "fa-solid": "solid",
    "fa-duotone": "solid",
    fadr: "regular",
    "fa-regular": "regular",
    fadl: "light",
    "fa-light": "light",
    fadt: "thin",
    "fa-thin": "thin"
  },
  sharp: {
    fa: "solid",
    fass: "solid",
    "fa-solid": "solid",
    fasr: "regular",
    "fa-regular": "regular",
    fasl: "light",
    "fa-light": "light",
    fast: "thin",
    "fa-thin": "thin"
  },
  "sharp-duotone": {
    fa: "solid",
    fasds: "solid",
    "fa-solid": "solid",
    fasdr: "regular",
    "fa-regular": "regular",
    fasdl: "light",
    "fa-light": "light",
    fasdt: "thin",
    "fa-thin": "thin"
  }
}, rye = {
  GROUP: "duotone-group",
  PRIMARY: "primary",
  SECONDARY: "secondary"
}, aY = ["fa-classic", "fa-duotone", "fa-sharp", "fa-sharp-duotone"], gn = "classic", x0 = "duotone", nye = "sharp", oye = "sharp-duotone", iY = [gn, x0, nye, oye], aye = {
  classic: {
    900: "fas",
    400: "far",
    normal: "far",
    300: "fal",
    100: "fat"
  },
  duotone: {
    900: "fad",
    400: "fadr",
    300: "fadl",
    100: "fadt"
  },
  sharp: {
    900: "fass",
    400: "fasr",
    300: "fasl",
    100: "fast"
  },
  "sharp-duotone": {
    900: "fasds",
    400: "fasdr",
    300: "fasdl",
    100: "fasdt"
  }
}, iye = {
  "Font Awesome 6 Free": {
    900: "fas",
    400: "far"
  },
  "Font Awesome 6 Pro": {
    900: "fas",
    400: "far",
    normal: "far",
    300: "fal",
    100: "fat"
  },
  "Font Awesome 6 Brands": {
    400: "fab",
    normal: "fab"
  },
  "Font Awesome 6 Duotone": {
    900: "fad",
    400: "fadr",
    normal: "fadr",
    300: "fadl",
    100: "fadt"
  },
  "Font Awesome 6 Sharp": {
    900: "fass",
    400: "fasr",
    normal: "fasr",
    300: "fasl",
    100: "fast"
  },
  "Font Awesome 6 Sharp Duotone": {
    900: "fasds",
    400: "fasdr",
    normal: "fasdr",
    300: "fasdl",
    100: "fasdt"
  }
}, sye = /* @__PURE__ */ new Map([["classic", {
  defaultShortPrefixId: "fas",
  defaultStyleId: "solid",
  styleIds: ["solid", "regular", "light", "thin", "brands"],
  futureStyleIds: [],
  defaultFontWeight: 900
}], ["sharp", {
  defaultShortPrefixId: "fass",
  defaultStyleId: "solid",
  styleIds: ["solid", "regular", "light", "thin"],
  futureStyleIds: [],
  defaultFontWeight: 900
}], ["duotone", {
  defaultShortPrefixId: "fad",
  defaultStyleId: "solid",
  styleIds: ["solid", "regular", "light", "thin"],
  futureStyleIds: [],
  defaultFontWeight: 900
}], ["sharp-duotone", {
  defaultShortPrefixId: "fasds",
  defaultStyleId: "solid",
  styleIds: ["solid", "regular", "light", "thin"],
  futureStyleIds: [],
  defaultFontWeight: 900
}]]), lye = {
  classic: {
    solid: "fas",
    regular: "far",
    light: "fal",
    thin: "fat",
    brands: "fab"
  },
  duotone: {
    solid: "fad",
    regular: "fadr",
    light: "fadl",
    thin: "fadt"
  },
  sharp: {
    solid: "fass",
    regular: "fasr",
    light: "fasl",
    thin: "fast"
  },
  "sharp-duotone": {
    solid: "fasds",
    regular: "fasdr",
    light: "fasdl",
    thin: "fasdt"
  }
}, cye = ["fak", "fa-kit", "fakd", "fa-kit-duotone"], TI = {
  kit: {
    fak: "kit",
    "fa-kit": "kit"
  },
  "kit-duotone": {
    fakd: "kit-duotone",
    "fa-kit-duotone": "kit-duotone"
  }
}, uye = ["kit"], fye = {
  kit: {
    "fa-kit": "fak"
  }
}, dye = ["fak", "fakd"], pye = {
  kit: {
    fak: "fa-kit"
  }
}, MI = {
  kit: {
    kit: "fak"
  },
  "kit-duotone": {
    "kit-duotone": "fakd"
  }
}, Zb = {
  GROUP: "duotone-group",
  SWAP_OPACITY: "swap-opacity",
  PRIMARY: "primary",
  SECONDARY: "secondary"
}, mye = ["fa-classic", "fa-duotone", "fa-sharp", "fa-sharp-duotone"], gye = ["fak", "fa-kit", "fakd", "fa-kit-duotone"], hye = {
  "Font Awesome Kit": {
    400: "fak",
    normal: "fak"
  },
  "Font Awesome Kit Duotone": {
    400: "fakd",
    normal: "fakd"
  }
}, bye = {
  classic: {
    "fa-brands": "fab",
    "fa-duotone": "fad",
    "fa-light": "fal",
    "fa-regular": "far",
    "fa-solid": "fas",
    "fa-thin": "fat"
  },
  duotone: {
    "fa-regular": "fadr",
    "fa-light": "fadl",
    "fa-thin": "fadt"
  },
  sharp: {
    "fa-solid": "fass",
    "fa-regular": "fasr",
    "fa-light": "fasl",
    "fa-thin": "fast"
  },
  "sharp-duotone": {
    "fa-solid": "fasds",
    "fa-regular": "fasdr",
    "fa-light": "fasdl",
    "fa-thin": "fasdt"
  }
}, yye = {
  classic: ["fas", "far", "fal", "fat", "fad"],
  duotone: ["fadr", "fadl", "fadt"],
  sharp: ["fass", "fasr", "fasl", "fast"],
  "sharp-duotone": ["fasds", "fasdr", "fasdl", "fasdt"]
}, $3 = {
  classic: {
    fab: "fa-brands",
    fad: "fa-duotone",
    fal: "fa-light",
    far: "fa-regular",
    fas: "fa-solid",
    fat: "fa-thin"
  },
  duotone: {
    fadr: "fa-regular",
    fadl: "fa-light",
    fadt: "fa-thin"
  },
  sharp: {
    fass: "fa-solid",
    fasr: "fa-regular",
    fasl: "fa-light",
    fast: "fa-thin"
  },
  "sharp-duotone": {
    fasds: "fa-solid",
    fasdr: "fa-regular",
    fasdl: "fa-light",
    fasdt: "fa-thin"
  }
}, vye = ["fa-solid", "fa-regular", "fa-light", "fa-thin", "fa-duotone", "fa-brands"], O3 = ["fa", "fas", "far", "fal", "fat", "fad", "fadr", "fadl", "fadt", "fab", "fass", "fasr", "fasl", "fast", "fasds", "fasdr", "fasdl", "fasdt", ...mye, ...vye], xye = ["solid", "regular", "light", "thin", "duotone", "brands"], sY = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], wye = sY.concat([11, 12, 13, 14, 15, 16, 17, 18, 19, 20]), kye = [...Object.keys(yye), ...xye, "2xs", "xs", "sm", "lg", "xl", "2xl", "beat", "border", "fade", "beat-fade", "bounce", "flip-both", "flip-horizontal", "flip-vertical", "flip", "fw", "inverse", "layers-counter", "layers-text", "layers", "li", "pull-left", "pull-right", "pulse", "rotate-180", "rotate-270", "rotate-90", "rotate-by", "shake", "spin-pulse", "spin-reverse", "spin", "stack-1x", "stack-2x", "stack", "ul", Zb.GROUP, Zb.SWAP_OPACITY, Zb.PRIMARY, Zb.SECONDARY].concat(sY.map((e) => "".concat(e, "x"))).concat(wye.map((e) => "w-".concat(e))), $ye = {
  "Font Awesome 5 Free": {
    900: "fas",
    400: "far"
  },
  "Font Awesome 5 Pro": {
    900: "fas",
    400: "far",
    normal: "far",
    300: "fal"
  },
  "Font Awesome 5 Brands": {
    400: "fab",
    normal: "fab"
  },
  "Font Awesome 5 Duotone": {
    900: "fad"
  }
};
const yi = "___FONT_AWESOME___", E3 = 16, lY = "fa", cY = "svg-inline--fa", mu = "data-fa-i2svg", S3 = "data-fa-pseudo-element", Oye = "data-fa-pseudo-element-pending", CP = "data-prefix", AP = "data-icon", RI = "fontawesome-i2svg", Eye = "async", Sye = ["HTML", "HEAD", "STYLE", "SCRIPT"], uY = (() => {
  try {
    return process.env.NODE_ENV === "production";
  } catch {
    return !1;
  }
})();
function ob(e) {
  return new Proxy(e, {
    get(t, r) {
      return r in t ? t[r] : t[gn];
    }
  });
}
const fY = be({}, oY);
fY[gn] = be(be(be(be({}, {
  "fa-duotone": "duotone"
}), oY[gn]), TI.kit), TI["kit-duotone"]);
const Pye = ob(fY), P3 = be({}, lye);
P3[gn] = be(be(be(be({}, {
  duotone: "fad"
}), P3[gn]), MI.kit), MI["kit-duotone"]);
const zI = ob(P3), C3 = be({}, $3);
C3[gn] = be(be({}, C3[gn]), pye.kit);
const _P = ob(C3), A3 = be({}, bye);
A3[gn] = be(be({}, A3[gn]), fye.kit);
ob(A3);
const Cye = eye, dY = "fa-layers-text", Aye = tye, _ye = be({}, aye);
ob(_ye);
const Nye = ["class", "data-prefix", "data-icon", "data-fa-transform", "data-fa-mask"], c2 = rye, jye = [...uye, ...kye], Ag = Zl.FontAwesomeConfig || {};
function Iye(e) {
  var t = Lr.querySelector("script[" + e + "]");
  if (t)
    return t.getAttribute(e);
}
function Tye(e) {
  return e === "" ? !0 : e === "false" ? !1 : e === "true" ? !0 : e;
}
Lr && typeof Lr.querySelector == "function" && [["data-family-prefix", "familyPrefix"], ["data-css-prefix", "cssPrefix"], ["data-family-default", "familyDefault"], ["data-style-default", "styleDefault"], ["data-replacement-class", "replacementClass"], ["data-auto-replace-svg", "autoReplaceSvg"], ["data-auto-add-css", "autoAddCss"], ["data-auto-a11y", "autoA11y"], ["data-search-pseudo-elements", "searchPseudoElements"], ["data-observe-mutations", "observeMutations"], ["data-mutate-approach", "mutateApproach"], ["data-keep-original-source", "keepOriginalSource"], ["data-measure-performance", "measurePerformance"], ["data-show-missing-icons", "showMissingIcons"]].forEach((e) => {
  let [t, r] = e;
  const n = Tye(Iye(t));
  n != null && (Ag[r] = n);
});
const pY = {
  styleDefault: "solid",
  familyDefault: gn,
  cssPrefix: lY,
  replacementClass: cY,
  autoReplaceSvg: !0,
  autoAddCss: !0,
  autoA11y: !0,
  searchPseudoElements: !1,
  observeMutations: !0,
  mutateApproach: "async",
  keepOriginalSource: !0,
  measurePerformance: !1,
  showMissingIcons: !0
};
Ag.familyPrefix && (Ag.cssPrefix = Ag.familyPrefix);
const hd = be(be({}, pY), Ag);
hd.autoReplaceSvg || (hd.observeMutations = !1);
const Ue = {};
Object.keys(pY).forEach((e) => {
  Object.defineProperty(Ue, e, {
    enumerable: !0,
    set: function(t) {
      hd[e] = t, _g.forEach((r) => r(Ue));
    },
    get: function() {
      return hd[e];
    }
  });
});
Object.defineProperty(Ue, "familyPrefix", {
  enumerable: !0,
  set: function(e) {
    hd.cssPrefix = e, _g.forEach((t) => t(Ue));
  },
  get: function() {
    return hd.cssPrefix;
  }
});
Zl.FontAwesomeConfig = Ue;
const _g = [];
function Mye(e) {
  return _g.push(e), () => {
    _g.splice(_g.indexOf(e), 1);
  };
}
const Fs = E3, ma = {
  size: 16,
  x: 0,
  y: 0,
  rotate: 0,
  flipX: !1,
  flipY: !1
};
function Rye(e) {
  if (!e || !Vi)
    return;
  const t = Lr.createElement("style");
  t.setAttribute("type", "text/css"), t.innerHTML = e;
  const r = Lr.head.childNodes;
  let n = null;
  for (let o = r.length - 1; o > -1; o--) {
    const a = r[o], i = (a.tagName || "").toUpperCase();
    ["STYLE", "LINK"].indexOf(i) > -1 && (n = a);
  }
  return Lr.head.insertBefore(t, n), e;
}
const zye = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
function Eh() {
  let e = 12, t = "";
  for (; e-- > 0; )
    t += zye[Math.random() * 62 | 0];
  return t;
}
function Fd(e) {
  const t = [];
  for (let r = (e || []).length >>> 0; r--; )
    t[r] = e[r];
  return t;
}
function NP(e) {
  return e.classList ? Fd(e.classList) : (e.getAttribute("class") || "").split(" ").filter((t) => t);
}
function mY(e) {
  return "".concat(e).replace(/&/g, "&amp;").replace(/"/g, "&quot;").replace(/'/g, "&#39;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
}
function Fye(e) {
  return Object.keys(e || {}).reduce((t, r) => t + "".concat(r, '="').concat(mY(e[r]), '" '), "").trim();
}
function w0(e) {
  return Object.keys(e || {}).reduce((t, r) => t + "".concat(r, ": ").concat(e[r].trim(), ";"), "");
}
function jP(e) {
  return e.size !== ma.size || e.x !== ma.x || e.y !== ma.y || e.rotate !== ma.rotate || e.flipX || e.flipY;
}
function Dye(e) {
  let {
    transform: t,
    containerWidth: r,
    iconWidth: n
  } = e;
  const o = {
    transform: "translate(".concat(r / 2, " 256)")
  }, a = "translate(".concat(t.x * 32, ", ").concat(t.y * 32, ") "), i = "scale(".concat(t.size / 16 * (t.flipX ? -1 : 1), ", ").concat(t.size / 16 * (t.flipY ? -1 : 1), ") "), s = "rotate(".concat(t.rotate, " 0 0)"), l = {
    transform: "".concat(a, " ").concat(i, " ").concat(s)
  }, c = {
    transform: "translate(".concat(n / 2 * -1, " -256)")
  };
  return {
    outer: o,
    inner: l,
    path: c
  };
}
function Lye(e) {
  let {
    transform: t,
    width: r = E3,
    height: n = E3,
    startCentered: o = !1
  } = e, a = "";
  return o && nY ? a += "translate(".concat(t.x / Fs - r / 2, "em, ").concat(t.y / Fs - n / 2, "em) ") : o ? a += "translate(calc(-50% + ".concat(t.x / Fs, "em), calc(-50% + ").concat(t.y / Fs, "em)) ") : a += "translate(".concat(t.x / Fs, "em, ").concat(t.y / Fs, "em) "), a += "scale(".concat(t.size / Fs * (t.flipX ? -1 : 1), ", ").concat(t.size / Fs * (t.flipY ? -1 : 1), ") "), a += "rotate(".concat(t.rotate, "deg) "), a;
}
var Vye = `:root, :host {
  --fa-font-solid: normal 900 1em/1 "Font Awesome 6 Free";
  --fa-font-regular: normal 400 1em/1 "Font Awesome 6 Free";
  --fa-font-light: normal 300 1em/1 "Font Awesome 6 Pro";
  --fa-font-thin: normal 100 1em/1 "Font Awesome 6 Pro";
  --fa-font-duotone: normal 900 1em/1 "Font Awesome 6 Duotone";
  --fa-font-duotone-regular: normal 400 1em/1 "Font Awesome 6 Duotone";
  --fa-font-duotone-light: normal 300 1em/1 "Font Awesome 6 Duotone";
  --fa-font-duotone-thin: normal 100 1em/1 "Font Awesome 6 Duotone";
  --fa-font-brands: normal 400 1em/1 "Font Awesome 6 Brands";
  --fa-font-sharp-solid: normal 900 1em/1 "Font Awesome 6 Sharp";
  --fa-font-sharp-regular: normal 400 1em/1 "Font Awesome 6 Sharp";
  --fa-font-sharp-light: normal 300 1em/1 "Font Awesome 6 Sharp";
  --fa-font-sharp-thin: normal 100 1em/1 "Font Awesome 6 Sharp";
  --fa-font-sharp-duotone-solid: normal 900 1em/1 "Font Awesome 6 Sharp Duotone";
  --fa-font-sharp-duotone-regular: normal 400 1em/1 "Font Awesome 6 Sharp Duotone";
  --fa-font-sharp-duotone-light: normal 300 1em/1 "Font Awesome 6 Sharp Duotone";
  --fa-font-sharp-duotone-thin: normal 100 1em/1 "Font Awesome 6 Sharp Duotone";
}

svg:not(:root).svg-inline--fa, svg:not(:host).svg-inline--fa {
  overflow: visible;
  box-sizing: content-box;
}

.svg-inline--fa {
  display: var(--fa-display, inline-block);
  height: 1em;
  overflow: visible;
  vertical-align: -0.125em;
}
.svg-inline--fa.fa-2xs {
  vertical-align: 0.1em;
}
.svg-inline--fa.fa-xs {
  vertical-align: 0em;
}
.svg-inline--fa.fa-sm {
  vertical-align: -0.0714285705em;
}
.svg-inline--fa.fa-lg {
  vertical-align: -0.2em;
}
.svg-inline--fa.fa-xl {
  vertical-align: -0.25em;
}
.svg-inline--fa.fa-2xl {
  vertical-align: -0.3125em;
}
.svg-inline--fa.fa-pull-left {
  margin-right: var(--fa-pull-margin, 0.3em);
  width: auto;
}
.svg-inline--fa.fa-pull-right {
  margin-left: var(--fa-pull-margin, 0.3em);
  width: auto;
}
.svg-inline--fa.fa-li {
  width: var(--fa-li-width, 2em);
  top: 0.25em;
}
.svg-inline--fa.fa-fw {
  width: var(--fa-fw-width, 1.25em);
}

.fa-layers svg.svg-inline--fa {
  bottom: 0;
  left: 0;
  margin: auto;
  position: absolute;
  right: 0;
  top: 0;
}

.fa-layers-counter, .fa-layers-text {
  display: inline-block;
  position: absolute;
  text-align: center;
}

.fa-layers {
  display: inline-block;
  height: 1em;
  position: relative;
  text-align: center;
  vertical-align: -0.125em;
  width: 1em;
}
.fa-layers svg.svg-inline--fa {
  transform-origin: center center;
}

.fa-layers-text {
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  transform-origin: center center;
}

.fa-layers-counter {
  background-color: var(--fa-counter-background-color, #ff253a);
  border-radius: var(--fa-counter-border-radius, 1em);
  box-sizing: border-box;
  color: var(--fa-inverse, #fff);
  line-height: var(--fa-counter-line-height, 1);
  max-width: var(--fa-counter-max-width, 5em);
  min-width: var(--fa-counter-min-width, 1.5em);
  overflow: hidden;
  padding: var(--fa-counter-padding, 0.25em 0.5em);
  right: var(--fa-right, 0);
  text-overflow: ellipsis;
  top: var(--fa-top, 0);
  transform: scale(var(--fa-counter-scale, 0.25));
  transform-origin: top right;
}

.fa-layers-bottom-right {
  bottom: var(--fa-bottom, 0);
  right: var(--fa-right, 0);
  top: auto;
  transform: scale(var(--fa-layers-scale, 0.25));
  transform-origin: bottom right;
}

.fa-layers-bottom-left {
  bottom: var(--fa-bottom, 0);
  left: var(--fa-left, 0);
  right: auto;
  top: auto;
  transform: scale(var(--fa-layers-scale, 0.25));
  transform-origin: bottom left;
}

.fa-layers-top-right {
  top: var(--fa-top, 0);
  right: var(--fa-right, 0);
  transform: scale(var(--fa-layers-scale, 0.25));
  transform-origin: top right;
}

.fa-layers-top-left {
  left: var(--fa-left, 0);
  right: auto;
  top: var(--fa-top, 0);
  transform: scale(var(--fa-layers-scale, 0.25));
  transform-origin: top left;
}

.fa-1x {
  font-size: 1em;
}

.fa-2x {
  font-size: 2em;
}

.fa-3x {
  font-size: 3em;
}

.fa-4x {
  font-size: 4em;
}

.fa-5x {
  font-size: 5em;
}

.fa-6x {
  font-size: 6em;
}

.fa-7x {
  font-size: 7em;
}

.fa-8x {
  font-size: 8em;
}

.fa-9x {
  font-size: 9em;
}

.fa-10x {
  font-size: 10em;
}

.fa-2xs {
  font-size: 0.625em;
  line-height: 0.1em;
  vertical-align: 0.225em;
}

.fa-xs {
  font-size: 0.75em;
  line-height: 0.0833333337em;
  vertical-align: 0.125em;
}

.fa-sm {
  font-size: 0.875em;
  line-height: 0.0714285718em;
  vertical-align: 0.0535714295em;
}

.fa-lg {
  font-size: 1.25em;
  line-height: 0.05em;
  vertical-align: -0.075em;
}

.fa-xl {
  font-size: 1.5em;
  line-height: 0.0416666682em;
  vertical-align: -0.125em;
}

.fa-2xl {
  font-size: 2em;
  line-height: 0.03125em;
  vertical-align: -0.1875em;
}

.fa-fw {
  text-align: center;
  width: 1.25em;
}

.fa-ul {
  list-style-type: none;
  margin-left: var(--fa-li-margin, 2.5em);
  padding-left: 0;
}
.fa-ul > li {
  position: relative;
}

.fa-li {
  left: calc(-1 * var(--fa-li-width, 2em));
  position: absolute;
  text-align: center;
  width: var(--fa-li-width, 2em);
  line-height: inherit;
}

.fa-border {
  border-color: var(--fa-border-color, #eee);
  border-radius: var(--fa-border-radius, 0.1em);
  border-style: var(--fa-border-style, solid);
  border-width: var(--fa-border-width, 0.08em);
  padding: var(--fa-border-padding, 0.2em 0.25em 0.15em);
}

.fa-pull-left {
  float: left;
  margin-right: var(--fa-pull-margin, 0.3em);
}

.fa-pull-right {
  float: right;
  margin-left: var(--fa-pull-margin, 0.3em);
}

.fa-beat {
  animation-name: fa-beat;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, ease-in-out);
}

.fa-bounce {
  animation-name: fa-bounce;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.28, 0.84, 0.42, 1));
}

.fa-fade {
  animation-name: fa-fade;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));
}

.fa-beat-fade {
  animation-name: fa-beat-fade;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));
}

.fa-flip {
  animation-name: fa-flip;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, ease-in-out);
}

.fa-shake {
  animation-name: fa-shake;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, linear);
}

.fa-spin {
  animation-name: fa-spin;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 2s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, linear);
}

.fa-spin-reverse {
  --fa-animation-direction: reverse;
}

.fa-pulse,
.fa-spin-pulse {
  animation-name: fa-spin;
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, steps(8));
}

@media (prefers-reduced-motion: reduce) {
  .fa-beat,
.fa-bounce,
.fa-fade,
.fa-beat-fade,
.fa-flip,
.fa-pulse,
.fa-shake,
.fa-spin,
.fa-spin-pulse {
    animation-delay: -1ms;
    animation-duration: 1ms;
    animation-iteration-count: 1;
    transition-delay: 0s;
    transition-duration: 0s;
  }
}
@keyframes fa-beat {
  0%, 90% {
    transform: scale(1);
  }
  45% {
    transform: scale(var(--fa-beat-scale, 1.25));
  }
}
@keyframes fa-bounce {
  0% {
    transform: scale(1, 1) translateY(0);
  }
  10% {
    transform: scale(var(--fa-bounce-start-scale-x, 1.1), var(--fa-bounce-start-scale-y, 0.9)) translateY(0);
  }
  30% {
    transform: scale(var(--fa-bounce-jump-scale-x, 0.9), var(--fa-bounce-jump-scale-y, 1.1)) translateY(var(--fa-bounce-height, -0.5em));
  }
  50% {
    transform: scale(var(--fa-bounce-land-scale-x, 1.05), var(--fa-bounce-land-scale-y, 0.95)) translateY(0);
  }
  57% {
    transform: scale(1, 1) translateY(var(--fa-bounce-rebound, -0.125em));
  }
  64% {
    transform: scale(1, 1) translateY(0);
  }
  100% {
    transform: scale(1, 1) translateY(0);
  }
}
@keyframes fa-fade {
  50% {
    opacity: var(--fa-fade-opacity, 0.4);
  }
}
@keyframes fa-beat-fade {
  0%, 100% {
    opacity: var(--fa-beat-fade-opacity, 0.4);
    transform: scale(1);
  }
  50% {
    opacity: 1;
    transform: scale(var(--fa-beat-fade-scale, 1.125));
  }
}
@keyframes fa-flip {
  50% {
    transform: rotate3d(var(--fa-flip-x, 0), var(--fa-flip-y, 1), var(--fa-flip-z, 0), var(--fa-flip-angle, -180deg));
  }
}
@keyframes fa-shake {
  0% {
    transform: rotate(-15deg);
  }
  4% {
    transform: rotate(15deg);
  }
  8%, 24% {
    transform: rotate(-18deg);
  }
  12%, 28% {
    transform: rotate(18deg);
  }
  16% {
    transform: rotate(-22deg);
  }
  20% {
    transform: rotate(22deg);
  }
  32% {
    transform: rotate(-12deg);
  }
  36% {
    transform: rotate(12deg);
  }
  40%, 100% {
    transform: rotate(0deg);
  }
}
@keyframes fa-spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
.fa-rotate-90 {
  transform: rotate(90deg);
}

.fa-rotate-180 {
  transform: rotate(180deg);
}

.fa-rotate-270 {
  transform: rotate(270deg);
}

.fa-flip-horizontal {
  transform: scale(-1, 1);
}

.fa-flip-vertical {
  transform: scale(1, -1);
}

.fa-flip-both,
.fa-flip-horizontal.fa-flip-vertical {
  transform: scale(-1, -1);
}

.fa-rotate-by {
  transform: rotate(var(--fa-rotate-angle, 0));
}

.fa-stack {
  display: inline-block;
  vertical-align: middle;
  height: 2em;
  position: relative;
  width: 2.5em;
}

.fa-stack-1x,
.fa-stack-2x {
  bottom: 0;
  left: 0;
  margin: auto;
  position: absolute;
  right: 0;
  top: 0;
  z-index: var(--fa-stack-z-index, auto);
}

.svg-inline--fa.fa-stack-1x {
  height: 1em;
  width: 1.25em;
}
.svg-inline--fa.fa-stack-2x {
  height: 2em;
  width: 2.5em;
}

.fa-inverse {
  color: var(--fa-inverse, #fff);
}

.sr-only,
.fa-sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.sr-only-focusable:not(:focus),
.fa-sr-only-focusable:not(:focus) {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.svg-inline--fa .fa-primary {
  fill: var(--fa-primary-color, currentColor);
  opacity: var(--fa-primary-opacity, 1);
}

.svg-inline--fa .fa-secondary {
  fill: var(--fa-secondary-color, currentColor);
  opacity: var(--fa-secondary-opacity, 0.4);
}

.svg-inline--fa.fa-swap-opacity .fa-primary {
  opacity: var(--fa-secondary-opacity, 0.4);
}

.svg-inline--fa.fa-swap-opacity .fa-secondary {
  opacity: var(--fa-primary-opacity, 1);
}

.svg-inline--fa mask .fa-primary,
.svg-inline--fa mask .fa-secondary {
  fill: black;
}`;
function gY() {
  const e = lY, t = cY, r = Ue.cssPrefix, n = Ue.replacementClass;
  let o = Vye;
  if (r !== e || n !== t) {
    const a = new RegExp("\\.".concat(e, "\\-"), "g"), i = new RegExp("\\--".concat(e, "\\-"), "g"), s = new RegExp("\\.".concat(t), "g");
    o = o.replace(a, ".".concat(r, "-")).replace(i, "--".concat(r, "-")).replace(s, ".".concat(n));
  }
  return o;
}
let FI = !1;
function u2() {
  Ue.autoAddCss && !FI && (Rye(gY()), FI = !0);
}
var Wye = {
  mixout() {
    return {
      dom: {
        css: gY,
        insertCss: u2
      }
    };
  },
  hooks() {
    return {
      beforeDOMElementCreation() {
        u2();
      },
      beforeI2svg() {
        u2();
      }
    };
  }
};
const vi = Zl || {};
vi[yi] || (vi[yi] = {});
vi[yi].styles || (vi[yi].styles = {});
vi[yi].hooks || (vi[yi].hooks = {});
vi[yi].shims || (vi[yi].shims = []);
var ga = vi[yi];
const hY = [], bY = function() {
  Lr.removeEventListener("DOMContentLoaded", bY), Jv = 1, hY.map((e) => e());
};
let Jv = !1;
Vi && (Jv = (Lr.documentElement.doScroll ? /^loaded|^c/ : /^loaded|^i|^c/).test(Lr.readyState), Jv || Lr.addEventListener("DOMContentLoaded", bY));
function Uye(e) {
  Vi && (Jv ? setTimeout(e, 0) : hY.push(e));
}
function ab(e) {
  const {
    tag: t,
    attributes: r = {},
    children: n = []
  } = e;
  return typeof e == "string" ? mY(e) : "<".concat(t, " ").concat(Fye(r), ">").concat(n.map(ab).join(""), "</").concat(t, ">");
}
function DI(e, t, r) {
  if (e && e[t] && e[t][r])
    return {
      prefix: t,
      iconName: r,
      icon: e[t][r]
    };
}
var f2 = function(e, t, r, n) {
  var o = Object.keys(e), a = o.length, i = t, s, l, c;
  for (r === void 0 ? (s = 1, c = e[o[0]]) : (s = 0, c = r); s < a; s++)
    l = o[s], c = i(c, e[l], l, e);
  return c;
};
function Yye(e) {
  const t = [];
  let r = 0;
  const n = e.length;
  for (; r < n; ) {
    const o = e.charCodeAt(r++);
    if (o >= 55296 && o <= 56319 && r < n) {
      const a = e.charCodeAt(r++);
      (a & 64512) == 56320 ? t.push(((o & 1023) << 10) + (a & 1023) + 65536) : (t.push(o), r--);
    } else
      t.push(o);
  }
  return t;
}
function yY(e) {
  const t = Yye(e);
  return t.length === 1 ? t[0].toString(16) : null;
}
function Hye(e, t) {
  const r = e.length;
  let n = e.charCodeAt(t), o;
  return n >= 55296 && n <= 56319 && r > t + 1 && (o = e.charCodeAt(t + 1), o >= 56320 && o <= 57343) ? (n - 55296) * 1024 + o - 56320 + 65536 : n;
}
function LI(e) {
  return Object.keys(e).reduce((t, r) => {
    const n = e[r];
    return n.icon ? t[n.iconName] = n.icon : t[r] = n, t;
  }, {});
}
function _3(e, t) {
  let r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
  const {
    skipHooks: n = !1
  } = r, o = LI(t);
  typeof ga.hooks.addPack == "function" && !n ? ga.hooks.addPack(e, LI(t)) : ga.styles[e] = be(be({}, ga.styles[e] || {}), o), e === "fas" && _3("fa", t);
}
const {
  styles: Sh,
  shims: Gye
} = ga, vY = Object.keys(_P), qye = vY.reduce((e, t) => (e[t] = Object.keys(_P[t]), e), {});
let IP = null, xY = {}, wY = {}, kY = {}, $Y = {}, OY = {};
function Bye(e) {
  return ~jye.indexOf(e);
}
function Xye(e, t) {
  const r = t.split("-"), n = r[0], o = r.slice(1).join("-");
  return n === e && o !== "" && !Bye(o) ? o : null;
}
const EY = () => {
  const e = (n) => f2(Sh, (o, a, i) => (o[i] = f2(a, n, {}), o), {});
  xY = e((n, o, a) => (o[3] && (n[o[3]] = a), o[2] && o[2].filter((i) => typeof i == "number").forEach((i) => {
    n[i.toString(16)] = a;
  }), n)), wY = e((n, o, a) => (n[a] = a, o[2] && o[2].filter((i) => typeof i == "string").forEach((i) => {
    n[i] = a;
  }), n)), OY = e((n, o, a) => {
    const i = o[2];
    return n[a] = a, i.forEach((s) => {
      n[s] = a;
    }), n;
  });
  const t = "far" in Sh || Ue.autoFetchSvg, r = f2(Gye, (n, o) => {
    const a = o[0];
    let i = o[1];
    const s = o[2];
    return i === "far" && !t && (i = "fas"), typeof a == "string" && (n.names[a] = {
      prefix: i,
      iconName: s
    }), typeof a == "number" && (n.unicodes[a.toString(16)] = {
      prefix: i,
      iconName: s
    }), n;
  }, {
    names: {},
    unicodes: {}
  });
  kY = r.names, $Y = r.unicodes, IP = k0(Ue.styleDefault, {
    family: Ue.familyDefault
  });
};
Mye((e) => {
  IP = k0(e.styleDefault, {
    family: Ue.familyDefault
  });
});
EY();
function TP(e, t) {
  return (xY[e] || {})[t];
}
function Kye(e, t) {
  return (wY[e] || {})[t];
}
function Dc(e, t) {
  return (OY[e] || {})[t];
}
function SY(e) {
  return kY[e] || {
    prefix: null,
    iconName: null
  };
}
function Jye(e) {
  const t = $Y[e], r = TP("fas", e);
  return t || (r ? {
    prefix: "fas",
    iconName: r
  } : null) || {
    prefix: null,
    iconName: null
  };
}
function ec() {
  return IP;
}
const PY = () => ({
  prefix: null,
  iconName: null,
  rest: []
});
function Qye(e) {
  let t = gn;
  const r = vY.reduce((n, o) => (n[o] = "".concat(Ue.cssPrefix, "-").concat(o), n), {});
  return iY.forEach((n) => {
    (e.includes(r[n]) || e.some((o) => qye[n].includes(o))) && (t = n);
  }), t;
}
function k0(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  const {
    family: r = gn
  } = t, n = Pye[r][e];
  if (r === x0 && !e)
    return "fad";
  const o = zI[r][e] || zI[r][n], a = e in ga.styles ? e : null;
  return o || a || null;
}
function Zye(e) {
  let t = [], r = null;
  return e.forEach((n) => {
    const o = Xye(Ue.cssPrefix, n);
    o ? r = o : n && t.push(n);
  }), {
    iconName: r,
    rest: t
  };
}
function VI(e) {
  return e.sort().filter((t, r, n) => n.indexOf(t) === r);
}
function $0(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  const {
    skipLookups: r = !1
  } = t;
  let n = null;
  const o = O3.concat(gye), a = VI(e.filter((f) => o.includes(f))), i = VI(e.filter((f) => !O3.includes(f))), s = a.filter((f) => (n = f, !aY.includes(f))), [l = null] = s, c = Qye(a), u = be(be({}, Zye(i)), {}, {
    prefix: k0(l, {
      family: c
    })
  });
  return be(be(be({}, u), nve({
    values: e,
    family: c,
    styles: Sh,
    config: Ue,
    canonical: u,
    givenPrefix: n
  })), eve(r, n, u));
}
function eve(e, t, r) {
  let {
    prefix: n,
    iconName: o
  } = r;
  if (e || !n || !o)
    return {
      prefix: n,
      iconName: o
    };
  const a = t === "fa" ? SY(o) : {}, i = Dc(n, o);
  return o = a.iconName || i || o, n = a.prefix || n, n === "far" && !Sh.far && Sh.fas && !Ue.autoFetchSvg && (n = "fas"), {
    prefix: n,
    iconName: o
  };
}
const tve = iY.filter((e) => e !== gn || e !== x0), rve = Object.keys($3).filter((e) => e !== gn).map((e) => Object.keys($3[e])).flat();
function nve(e) {
  const {
    values: t,
    family: r,
    canonical: n,
    givenPrefix: o = "",
    styles: a = {},
    config: i = {}
  } = e, s = r === x0, l = t.includes("fa-duotone") || t.includes("fad"), c = i.familyDefault === "duotone", u = n.prefix === "fad" || n.prefix === "fa-duotone";
  if (!s && (l || c || u) && (n.prefix = "fad"), (t.includes("fa-brands") || t.includes("fab")) && (n.prefix = "fab"), !n.prefix && tve.includes(r) && (Object.keys(a).find((f) => rve.includes(f)) || i.autoFetchSvg)) {
    const f = sye.get(r).defaultShortPrefixId;
    n.prefix = f, n.iconName = Dc(n.prefix, n.iconName) || n.iconName;
  }
  return (n.prefix === "fa" || o === "fa") && (n.prefix = ec() || "fas"), n;
}
class ove {
  constructor() {
    this.definitions = {};
  }
  add() {
    for (var t = arguments.length, r = new Array(t), n = 0; n < t; n++)
      r[n] = arguments[n];
    const o = r.reduce(this._pullDefinitions, {});
    Object.keys(o).forEach((a) => {
      this.definitions[a] = be(be({}, this.definitions[a] || {}), o[a]), _3(a, o[a]);
      const i = _P[gn][a];
      i && _3(i, o[a]), EY();
    });
  }
  reset() {
    this.definitions = {};
  }
  _pullDefinitions(t, r) {
    const n = r.prefix && r.iconName && r.icon ? {
      0: r
    } : r;
    return Object.keys(n).map((o) => {
      const {
        prefix: a,
        iconName: i,
        icon: s
      } = n[o], l = s[2];
      t[a] || (t[a] = {}), l.length > 0 && l.forEach((c) => {
        typeof c == "string" && (t[a][c] = s);
      }), t[a][i] = s;
    }), t;
  }
}
let WI = [], cf = {};
const Df = {}, ave = Object.keys(Df);
function ive(e, t) {
  let {
    mixoutsTo: r
  } = t;
  return WI = e, cf = {}, Object.keys(Df).forEach((n) => {
    ave.indexOf(n) === -1 && delete Df[n];
  }), WI.forEach((n) => {
    const o = n.mixout ? n.mixout() : {};
    if (Object.keys(o).forEach((a) => {
      typeof o[a] == "function" && (r[a] = o[a]), typeof o[a] == "object" && Object.keys(o[a]).forEach((i) => {
        r[a] || (r[a] = {}), r[a][i] = o[a][i];
      });
    }), n.hooks) {
      const a = n.hooks();
      Object.keys(a).forEach((i) => {
        cf[i] || (cf[i] = []), cf[i].push(a[i]);
      });
    }
    n.provides && n.provides(Df);
  }), r;
}
function N3(e, t) {
  for (var r = arguments.length, n = new Array(r > 2 ? r - 2 : 0), o = 2; o < r; o++)
    n[o - 2] = arguments[o];
  return (cf[e] || []).forEach((a) => {
    t = a.apply(null, [t, ...n]);
  }), t;
}
function gu(e) {
  for (var t = arguments.length, r = new Array(t > 1 ? t - 1 : 0), n = 1; n < t; n++)
    r[n - 1] = arguments[n];
  (cf[e] || []).forEach((o) => {
    o.apply(null, r);
  });
}
function tc() {
  const e = arguments[0], t = Array.prototype.slice.call(arguments, 1);
  return Df[e] ? Df[e].apply(null, t) : void 0;
}
function j3(e) {
  e.prefix === "fa" && (e.prefix = "fas");
  let {
    iconName: t
  } = e;
  const r = e.prefix || ec();
  if (t)
    return t = Dc(r, t) || t, DI(CY.definitions, r, t) || DI(ga.styles, r, t);
}
const CY = new ove(), sve = () => {
  Ue.autoReplaceSvg = !1, Ue.observeMutations = !1, gu("noAuto");
}, lve = {
  i2svg: function() {
    let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    return Vi ? (gu("beforeI2svg", e), tc("pseudoElements2svg", e), tc("i2svg", e)) : Promise.reject(new Error("Operation requires a DOM of some kind."));
  },
  watch: function() {
    let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    const {
      autoReplaceSvgRoot: t
    } = e;
    Ue.autoReplaceSvg === !1 && (Ue.autoReplaceSvg = !0), Ue.observeMutations = !0, Uye(() => {
      uve({
        autoReplaceSvgRoot: t
      }), gu("watch", e);
    });
  }
}, cve = {
  icon: (e) => {
    if (e === null)
      return null;
    if (typeof e == "object" && e.prefix && e.iconName)
      return {
        prefix: e.prefix,
        iconName: Dc(e.prefix, e.iconName) || e.iconName
      };
    if (Array.isArray(e) && e.length === 2) {
      const t = e[1].indexOf("fa-") === 0 ? e[1].slice(3) : e[1], r = k0(e[0]);
      return {
        prefix: r,
        iconName: Dc(r, t) || t
      };
    }
    if (typeof e == "string" && (e.indexOf("".concat(Ue.cssPrefix, "-")) > -1 || e.match(Cye))) {
      const t = $0(e.split(" "), {
        skipLookups: !0
      });
      return {
        prefix: t.prefix || ec(),
        iconName: Dc(t.prefix, t.iconName) || t.iconName
      };
    }
    if (typeof e == "string") {
      const t = ec();
      return {
        prefix: t,
        iconName: Dc(t, e) || e
      };
    }
  }
}, Zn = {
  noAuto: sve,
  config: Ue,
  dom: lve,
  parse: cve,
  library: CY,
  findIconDefinition: j3,
  toHtml: ab
}, uve = function() {
  let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  const {
    autoReplaceSvgRoot: t = Lr
  } = e;
  (Object.keys(ga.styles).length > 0 || Ue.autoFetchSvg) && Vi && Ue.autoReplaceSvg && Zn.dom.i2svg({
    node: t
  });
};
function O0(e, t) {
  return Object.defineProperty(e, "abstract", {
    get: t
  }), Object.defineProperty(e, "html", {
    get: function() {
      return e.abstract.map((r) => ab(r));
    }
  }), Object.defineProperty(e, "node", {
    get: function() {
      if (!Vi) return;
      const r = Lr.createElement("div");
      return r.innerHTML = e.html, r.children;
    }
  }), e;
}
function fve(e) {
  let {
    children: t,
    main: r,
    mask: n,
    attributes: o,
    styles: a,
    transform: i
  } = e;
  if (jP(i) && r.found && !n.found) {
    const {
      width: s,
      height: l
    } = r, c = {
      x: s / l / 2,
      y: 0.5
    };
    o.style = w0(be(be({}, a), {}, {
      "transform-origin": "".concat(c.x + i.x / 16, "em ").concat(c.y + i.y / 16, "em")
    }));
  }
  return [{
    tag: "svg",
    attributes: o,
    children: t
  }];
}
function dve(e) {
  let {
    prefix: t,
    iconName: r,
    children: n,
    attributes: o,
    symbol: a
  } = e;
  const i = a === !0 ? "".concat(t, "-").concat(Ue.cssPrefix, "-").concat(r) : a;
  return [{
    tag: "svg",
    attributes: {
      style: "display: none;"
    },
    children: [{
      tag: "symbol",
      attributes: be(be({}, o), {}, {
        id: i
      }),
      children: n
    }]
  }];
}
function MP(e) {
  const {
    icons: {
      main: t,
      mask: r
    },
    prefix: n,
    iconName: o,
    transform: a,
    symbol: i,
    title: s,
    maskId: l,
    titleId: c,
    extra: u,
    watchable: f = !1
  } = e, {
    width: p,
    height: v
  } = r.found ? r : t, x = dye.includes(n), b = [Ue.replacementClass, o ? "".concat(Ue.cssPrefix, "-").concat(o) : ""].filter((h) => u.classes.indexOf(h) === -1).filter((h) => h !== "" || !!h).concat(u.classes).join(" ");
  let m = {
    children: [],
    attributes: be(be({}, u.attributes), {}, {
      "data-prefix": n,
      "data-icon": o,
      class: b,
      role: u.attributes.role || "img",
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 ".concat(p, " ").concat(v)
    })
  };
  const w = x && !~u.classes.indexOf("fa-fw") ? {
    width: "".concat(p / v * 16 * 0.0625, "em")
  } : {};
  f && (m.attributes[mu] = ""), s && (m.children.push({
    tag: "title",
    attributes: {
      id: m.attributes["aria-labelledby"] || "title-".concat(c || Eh())
    },
    children: [s]
  }), delete m.attributes.title);
  const $ = be(be({}, m), {}, {
    prefix: n,
    iconName: o,
    main: t,
    mask: r,
    maskId: l,
    transform: a,
    symbol: i,
    styles: be(be({}, w), u.styles)
  }), {
    children: E,
    attributes: S
  } = r.found && t.found ? tc("generateAbstractMask", $) || {
    children: [],
    attributes: {}
  } : tc("generateAbstractIcon", $) || {
    children: [],
    attributes: {}
  };
  return $.children = E, $.attributes = S, i ? dve($) : fve($);
}
function UI(e) {
  const {
    content: t,
    width: r,
    height: n,
    transform: o,
    title: a,
    extra: i,
    watchable: s = !1
  } = e, l = be(be(be({}, i.attributes), a ? {
    title: a
  } : {}), {}, {
    class: i.classes.join(" ")
  });
  s && (l[mu] = "");
  const c = be({}, i.styles);
  jP(o) && (c.transform = Lye({
    transform: o,
    startCentered: !0,
    width: r,
    height: n
  }), c["-webkit-transform"] = c.transform);
  const u = w0(c);
  u.length > 0 && (l.style = u);
  const f = [];
  return f.push({
    tag: "span",
    attributes: l,
    children: [t]
  }), a && f.push({
    tag: "span",
    attributes: {
      class: "sr-only"
    },
    children: [a]
  }), f;
}
function pve(e) {
  const {
    content: t,
    title: r,
    extra: n
  } = e, o = be(be(be({}, n.attributes), r ? {
    title: r
  } : {}), {}, {
    class: n.classes.join(" ")
  }), a = w0(n.styles);
  a.length > 0 && (o.style = a);
  const i = [];
  return i.push({
    tag: "span",
    attributes: o,
    children: [t]
  }), r && i.push({
    tag: "span",
    attributes: {
      class: "sr-only"
    },
    children: [r]
  }), i;
}
const {
  styles: d2
} = ga;
function I3(e) {
  const t = e[0], r = e[1], [n] = e.slice(4);
  let o = null;
  return Array.isArray(n) ? o = {
    tag: "g",
    attributes: {
      class: "".concat(Ue.cssPrefix, "-").concat(c2.GROUP)
    },
    children: [{
      tag: "path",
      attributes: {
        class: "".concat(Ue.cssPrefix, "-").concat(c2.SECONDARY),
        fill: "currentColor",
        d: n[0]
      }
    }, {
      tag: "path",
      attributes: {
        class: "".concat(Ue.cssPrefix, "-").concat(c2.PRIMARY),
        fill: "currentColor",
        d: n[1]
      }
    }]
  } : o = {
    tag: "path",
    attributes: {
      fill: "currentColor",
      d: n
    }
  }, {
    found: !0,
    width: t,
    height: r,
    icon: o
  };
}
const mve = {
  found: !1,
  width: 512,
  height: 512
};
function gve(e, t) {
  !uY && !Ue.showMissingIcons && e && console.error('Icon with name "'.concat(e, '" and prefix "').concat(t, '" is missing.'));
}
function T3(e, t) {
  let r = t;
  return t === "fa" && Ue.styleDefault !== null && (t = ec()), new Promise((n, o) => {
    if (r === "fa") {
      const a = SY(e) || {};
      e = a.iconName || e, t = a.prefix || t;
    }
    if (e && t && d2[t] && d2[t][e]) {
      const a = d2[t][e];
      return n(I3(a));
    }
    gve(e, t), n(be(be({}, mve), {}, {
      icon: Ue.showMissingIcons && e ? tc("missingIconAbstract") || {} : {}
    }));
  });
}
const YI = () => {
}, M3 = Ue.measurePerformance && Qb && Qb.mark && Qb.measure ? Qb : {
  mark: YI,
  measure: YI
}, tg = 'FA "6.7.2"', hve = (e) => (M3.mark("".concat(tg, " ").concat(e, " begins")), () => AY(e)), AY = (e) => {
  M3.mark("".concat(tg, " ").concat(e, " ends")), M3.measure("".concat(tg, " ").concat(e), "".concat(tg, " ").concat(e, " begins"), "".concat(tg, " ").concat(e, " ends"));
};
var RP = {
  begin: hve,
  end: AY
};
const Zy = () => {
};
function HI(e) {
  return typeof (e.getAttribute ? e.getAttribute(mu) : null) == "string";
}
function bve(e) {
  const t = e.getAttribute ? e.getAttribute(CP) : null, r = e.getAttribute ? e.getAttribute(AP) : null;
  return t && r;
}
function yve(e) {
  return e && e.classList && e.classList.contains && e.classList.contains(Ue.replacementClass);
}
function vve() {
  return Ue.autoReplaceSvg === !0 ? ev.replace : ev[Ue.autoReplaceSvg] || ev.replace;
}
function xve(e) {
  return Lr.createElementNS("http://www.w3.org/2000/svg", e);
}
function wve(e) {
  return Lr.createElement(e);
}
function _Y(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  const {
    ceFn: r = e.tag === "svg" ? xve : wve
  } = t;
  if (typeof e == "string")
    return Lr.createTextNode(e);
  const n = r(e.tag);
  return Object.keys(e.attributes || []).forEach(function(o) {
    n.setAttribute(o, e.attributes[o]);
  }), (e.children || []).forEach(function(o) {
    n.appendChild(_Y(o, {
      ceFn: r
    }));
  }), n;
}
function kve(e) {
  let t = " ".concat(e.outerHTML, " ");
  return t = "".concat(t, "Font Awesome fontawesome.com "), t;
}
const ev = {
  replace: function(e) {
    const t = e[0];
    if (t.parentNode)
      if (e[1].forEach((r) => {
        t.parentNode.insertBefore(_Y(r), t);
      }), t.getAttribute(mu) === null && Ue.keepOriginalSource) {
        let r = Lr.createComment(kve(t));
        t.parentNode.replaceChild(r, t);
      } else
        t.remove();
  },
  nest: function(e) {
    const t = e[0], r = e[1];
    if (~NP(t).indexOf(Ue.replacementClass))
      return ev.replace(e);
    const n = new RegExp("".concat(Ue.cssPrefix, "-.*"));
    if (delete r[0].attributes.id, r[0].attributes.class) {
      const a = r[0].attributes.class.split(" ").reduce((i, s) => (s === Ue.replacementClass || s.match(n) ? i.toSvg.push(s) : i.toNode.push(s), i), {
        toNode: [],
        toSvg: []
      });
      r[0].attributes.class = a.toSvg.join(" "), a.toNode.length === 0 ? t.removeAttribute("class") : t.setAttribute("class", a.toNode.join(" "));
    }
    const o = r.map((a) => ab(a)).join(`
`);
    t.setAttribute(mu, ""), t.innerHTML = o;
  }
};
function GI(e) {
  e();
}
function NY(e, t) {
  const r = typeof t == "function" ? t : Zy;
  if (e.length === 0)
    r();
  else {
    let n = GI;
    Ue.mutateApproach === Eye && (n = Zl.requestAnimationFrame || GI), n(() => {
      const o = vve(), a = RP.begin("mutate");
      e.map(o), a(), r();
    });
  }
}
let zP = !1;
function jY() {
  zP = !0;
}
function R3() {
  zP = !1;
}
let Qv = null;
function qI(e) {
  if (!II || !Ue.observeMutations)
    return;
  const {
    treeCallback: t = Zy,
    nodeCallback: r = Zy,
    pseudoElementsCallback: n = Zy,
    observeMutationsRoot: o = Lr
  } = e;
  Qv = new II((a) => {
    if (zP) return;
    const i = ec();
    Fd(a).forEach((s) => {
      if (s.type === "childList" && s.addedNodes.length > 0 && !HI(s.addedNodes[0]) && (Ue.searchPseudoElements && n(s.target), t(s.target)), s.type === "attributes" && s.target.parentNode && Ue.searchPseudoElements && n(s.target.parentNode), s.type === "attributes" && HI(s.target) && ~Nye.indexOf(s.attributeName))
        if (s.attributeName === "class" && bve(s.target)) {
          const {
            prefix: l,
            iconName: c
          } = $0(NP(s.target));
          s.target.setAttribute(CP, l || i), c && s.target.setAttribute(AP, c);
        } else yve(s.target) && r(s.target);
    });
  }), Vi && Qv.observe(o, {
    childList: !0,
    attributes: !0,
    characterData: !0,
    subtree: !0
  });
}
function $ve() {
  Qv && Qv.disconnect();
}
function Ove(e) {
  const t = e.getAttribute("style");
  let r = [];
  return t && (r = t.split(";").reduce((n, o) => {
    const a = o.split(":"), i = a[0], s = a.slice(1);
    return i && s.length > 0 && (n[i] = s.join(":").trim()), n;
  }, {})), r;
}
function Eve(e) {
  const t = e.getAttribute("data-prefix"), r = e.getAttribute("data-icon"), n = e.innerText !== void 0 ? e.innerText.trim() : "";
  let o = $0(NP(e));
  return o.prefix || (o.prefix = ec()), t && r && (o.prefix = t, o.iconName = r), o.iconName && o.prefix || (o.prefix && n.length > 0 && (o.iconName = Kye(o.prefix, e.innerText) || TP(o.prefix, yY(e.innerText))), !o.iconName && Ue.autoFetchSvg && e.firstChild && e.firstChild.nodeType === Node.TEXT_NODE && (o.iconName = e.firstChild.data)), o;
}
function Sve(e) {
  const t = Fd(e.attributes).reduce((o, a) => (o.name !== "class" && o.name !== "style" && (o[a.name] = a.value), o), {}), r = e.getAttribute("title"), n = e.getAttribute("data-fa-title-id");
  return Ue.autoA11y && (r ? t["aria-labelledby"] = "".concat(Ue.replacementClass, "-title-").concat(n || Eh()) : (t["aria-hidden"] = "true", t.focusable = "false")), t;
}
function Pve() {
  return {
    iconName: null,
    title: null,
    titleId: null,
    prefix: null,
    transform: ma,
    symbol: !1,
    mask: {
      iconName: null,
      prefix: null,
      rest: []
    },
    maskId: null,
    extra: {
      classes: [],
      styles: {},
      attributes: {}
    }
  };
}
function BI(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {
    styleParser: !0
  };
  const {
    iconName: r,
    prefix: n,
    rest: o
  } = Eve(e), a = Sve(e), i = N3("parseNodeAttributes", {}, e);
  let s = t.styleParser ? Ove(e) : [];
  return be({
    iconName: r,
    title: e.getAttribute("title"),
    titleId: e.getAttribute("data-fa-title-id"),
    prefix: n,
    transform: ma,
    mask: {
      iconName: null,
      prefix: null,
      rest: []
    },
    maskId: null,
    symbol: !1,
    extra: {
      classes: o,
      styles: s,
      attributes: a
    }
  }, i);
}
const {
  styles: Cve
} = ga;
function IY(e) {
  const t = Ue.autoReplaceSvg === "nest" ? BI(e, {
    styleParser: !1
  }) : BI(e);
  return ~t.extra.classes.indexOf(dY) ? tc("generateLayersText", e, t) : tc("generateSvgReplacementMutation", e, t);
}
function Ave() {
  return [...cye, ...O3];
}
function XI(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
  if (!Vi) return Promise.resolve();
  const r = Lr.documentElement.classList, n = (u) => r.add("".concat(RI, "-").concat(u)), o = (u) => r.remove("".concat(RI, "-").concat(u)), a = Ue.autoFetchSvg ? Ave() : aY.concat(Object.keys(Cve));
  a.includes("fa") || a.push("fa");
  const i = [".".concat(dY, ":not([").concat(mu, "])")].concat(a.map((u) => ".".concat(u, ":not([").concat(mu, "])"))).join(", ");
  if (i.length === 0)
    return Promise.resolve();
  let s = [];
  try {
    s = Fd(e.querySelectorAll(i));
  } catch {
  }
  if (s.length > 0)
    n("pending"), o("complete");
  else
    return Promise.resolve();
  const l = RP.begin("onTree"), c = s.reduce((u, f) => {
    try {
      const p = IY(f);
      p && u.push(p);
    } catch (p) {
      uY || p.name === "MissingIcon" && console.error(p);
    }
    return u;
  }, []);
  return new Promise((u, f) => {
    Promise.all(c).then((p) => {
      NY(p, () => {
        n("active"), n("complete"), o("pending"), typeof t == "function" && t(), l(), u();
      });
    }).catch((p) => {
      l(), f(p);
    });
  });
}
function _ve(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
  IY(e).then((r) => {
    r && NY([r], t);
  });
}
function Nve(e) {
  return function(t) {
    let r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    const n = (t || {}).icon ? t : j3(t || {});
    let {
      mask: o
    } = r;
    return o && (o = (o || {}).icon ? o : j3(o || {})), e(n, be(be({}, r), {}, {
      mask: o
    }));
  };
}
const jve = function(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  const {
    transform: r = ma,
    symbol: n = !1,
    mask: o = null,
    maskId: a = null,
    title: i = null,
    titleId: s = null,
    classes: l = [],
    attributes: c = {},
    styles: u = {}
  } = t;
  if (!e) return;
  const {
    prefix: f,
    iconName: p,
    icon: v
  } = e;
  return O0(be({
    type: "icon"
  }, e), () => (gu("beforeDOMElementCreation", {
    iconDefinition: e,
    params: t
  }), Ue.autoA11y && (i ? c["aria-labelledby"] = "".concat(Ue.replacementClass, "-title-").concat(s || Eh()) : (c["aria-hidden"] = "true", c.focusable = "false")), MP({
    icons: {
      main: I3(v),
      mask: o ? I3(o.icon) : {
        found: !1,
        width: null,
        height: null,
        icon: {}
      }
    },
    prefix: f,
    iconName: p,
    transform: be(be({}, ma), r),
    symbol: n,
    title: i,
    maskId: a,
    titleId: s,
    extra: {
      attributes: c,
      styles: u,
      classes: l
    }
  })));
};
var Ive = {
  mixout() {
    return {
      icon: Nve(jve)
    };
  },
  hooks() {
    return {
      mutationObserverCallbacks(e) {
        return e.treeCallback = XI, e.nodeCallback = _ve, e;
      }
    };
  },
  provides(e) {
    e.i2svg = function(t) {
      const {
        node: r = Lr,
        callback: n = () => {
        }
      } = t;
      return XI(r, n);
    }, e.generateSvgReplacementMutation = function(t, r) {
      const {
        iconName: n,
        title: o,
        titleId: a,
        prefix: i,
        transform: s,
        symbol: l,
        mask: c,
        maskId: u,
        extra: f
      } = r;
      return new Promise((p, v) => {
        Promise.all([T3(n, i), c.iconName ? T3(c.iconName, c.prefix) : Promise.resolve({
          found: !1,
          width: 512,
          height: 512,
          icon: {}
        })]).then((x) => {
          let [b, m] = x;
          p([t, MP({
            icons: {
              main: b,
              mask: m
            },
            prefix: i,
            iconName: n,
            transform: s,
            symbol: l,
            maskId: u,
            title: o,
            titleId: a,
            extra: f,
            watchable: !0
          })]);
        }).catch(v);
      });
    }, e.generateAbstractIcon = function(t) {
      let {
        children: r,
        attributes: n,
        main: o,
        transform: a,
        styles: i
      } = t;
      const s = w0(i);
      s.length > 0 && (n.style = s);
      let l;
      return jP(a) && (l = tc("generateAbstractTransformGrouping", {
        main: o,
        transform: a,
        containerWidth: o.width,
        iconWidth: o.width
      })), r.push(l || o.icon), {
        children: r,
        attributes: n
      };
    };
  }
}, Tve = {
  mixout() {
    return {
      layer(e) {
        let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        const {
          classes: r = []
        } = t;
        return O0({
          type: "layer"
        }, () => {
          gu("beforeDOMElementCreation", {
            assembler: e,
            params: t
          });
          let n = [];
          return e((o) => {
            Array.isArray(o) ? o.map((a) => {
              n = n.concat(a.abstract);
            }) : n = n.concat(o.abstract);
          }), [{
            tag: "span",
            attributes: {
              class: ["".concat(Ue.cssPrefix, "-layers"), ...r].join(" ")
            },
            children: n
          }];
        });
      }
    };
  }
}, Mve = {
  mixout() {
    return {
      counter(e) {
        let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        const {
          title: r = null,
          classes: n = [],
          attributes: o = {},
          styles: a = {}
        } = t;
        return O0({
          type: "counter",
          content: e
        }, () => (gu("beforeDOMElementCreation", {
          content: e,
          params: t
        }), pve({
          content: e.toString(),
          title: r,
          extra: {
            attributes: o,
            styles: a,
            classes: ["".concat(Ue.cssPrefix, "-layers-counter"), ...n]
          }
        })));
      }
    };
  }
}, Rve = {
  mixout() {
    return {
      text(e) {
        let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        const {
          transform: r = ma,
          title: n = null,
          classes: o = [],
          attributes: a = {},
          styles: i = {}
        } = t;
        return O0({
          type: "text",
          content: e
        }, () => (gu("beforeDOMElementCreation", {
          content: e,
          params: t
        }), UI({
          content: e,
          transform: be(be({}, ma), r),
          title: n,
          extra: {
            attributes: a,
            styles: i,
            classes: ["".concat(Ue.cssPrefix, "-layers-text"), ...o]
          }
        })));
      }
    };
  },
  provides(e) {
    e.generateLayersText = function(t, r) {
      const {
        title: n,
        transform: o,
        extra: a
      } = r;
      let i = null, s = null;
      if (nY) {
        const l = parseInt(getComputedStyle(t).fontSize, 10), c = t.getBoundingClientRect();
        i = c.width / l, s = c.height / l;
      }
      return Ue.autoA11y && !n && (a.attributes["aria-hidden"] = "true"), Promise.resolve([t, UI({
        content: t.innerHTML,
        width: i,
        height: s,
        transform: o,
        title: n,
        extra: a,
        watchable: !0
      })]);
    };
  }
};
const zve = new RegExp('"', "ug"), KI = [1105920, 1112319], JI = be(be(be(be({}, {
  FontAwesome: {
    normal: "fas",
    400: "fas"
  }
}), iye), $ye), hye), z3 = Object.keys(JI).reduce((e, t) => (e[t.toLowerCase()] = JI[t], e), {}), Fve = Object.keys(z3).reduce((e, t) => {
  const r = z3[t];
  return e[t] = r[900] || [...Object.entries(r)][0][1], e;
}, {});
function Dve(e) {
  const t = e.replace(zve, ""), r = Hye(t, 0), n = r >= KI[0] && r <= KI[1], o = t.length === 2 ? t[0] === t[1] : !1;
  return {
    value: yY(o ? t[0] : t),
    isSecondary: n || o
  };
}
function Lve(e, t) {
  const r = e.replace(/^['"]|['"]$/g, "").toLowerCase(), n = parseInt(t), o = isNaN(n) ? "normal" : n;
  return (z3[r] || {})[o] || Fve[r];
}
function QI(e, t) {
  const r = "".concat(Oye).concat(t.replace(":", "-"));
  return new Promise((n, o) => {
    if (e.getAttribute(r) !== null)
      return n();
    const a = Fd(e.children).filter((f) => f.getAttribute(S3) === t)[0], i = Zl.getComputedStyle(e, t), s = i.getPropertyValue("font-family"), l = s.match(Aye), c = i.getPropertyValue("font-weight"), u = i.getPropertyValue("content");
    if (a && !l)
      return e.removeChild(a), n();
    if (l && u !== "none" && u !== "") {
      const f = i.getPropertyValue("content");
      let p = Lve(s, c);
      const {
        value: v,
        isSecondary: x
      } = Dve(f), b = l[0].startsWith("FontAwesome");
      let m = TP(p, v), w = m;
      if (b) {
        const $ = Jye(v);
        $.iconName && $.prefix && (m = $.iconName, p = $.prefix);
      }
      if (m && !x && (!a || a.getAttribute(CP) !== p || a.getAttribute(AP) !== w)) {
        e.setAttribute(r, w), a && e.removeChild(a);
        const $ = Pve(), {
          extra: E
        } = $;
        E.attributes[S3] = t, T3(m, p).then((S) => {
          const h = MP(be(be({}, $), {}, {
            icons: {
              main: S,
              mask: PY()
            },
            prefix: p,
            iconName: w,
            extra: E,
            watchable: !0
          })), U = Lr.createElementNS("http://www.w3.org/2000/svg", "svg");
          t === "::before" ? e.insertBefore(U, e.firstChild) : e.appendChild(U), U.outerHTML = h.map((G) => ab(G)).join(`
`), e.removeAttribute(r), n();
        }).catch(o);
      } else
        n();
    } else
      n();
  });
}
function Vve(e) {
  return Promise.all([QI(e, "::before"), QI(e, "::after")]);
}
function Wve(e) {
  return e.parentNode !== document.head && !~Sye.indexOf(e.tagName.toUpperCase()) && !e.getAttribute(S3) && (!e.parentNode || e.parentNode.tagName !== "svg");
}
function ZI(e) {
  if (Vi)
    return new Promise((t, r) => {
      const n = Fd(e.querySelectorAll("*")).filter(Wve).map(Vve), o = RP.begin("searchPseudoElements");
      jY(), Promise.all(n).then(() => {
        o(), R3(), t();
      }).catch(() => {
        o(), R3(), r();
      });
    });
}
var Uve = {
  hooks() {
    return {
      mutationObserverCallbacks(e) {
        return e.pseudoElementsCallback = ZI, e;
      }
    };
  },
  provides(e) {
    e.pseudoElements2svg = function(t) {
      const {
        node: r = Lr
      } = t;
      Ue.searchPseudoElements && ZI(r);
    };
  }
};
let e9 = !1;
var Yve = {
  mixout() {
    return {
      dom: {
        unwatch() {
          jY(), e9 = !0;
        }
      }
    };
  },
  hooks() {
    return {
      bootstrap() {
        qI(N3("mutationObserverCallbacks", {}));
      },
      noAuto() {
        $ve();
      },
      watch(e) {
        const {
          observeMutationsRoot: t
        } = e;
        e9 ? R3() : qI(N3("mutationObserverCallbacks", {
          observeMutationsRoot: t
        }));
      }
    };
  }
};
const t9 = (e) => {
  let t = {
    size: 16,
    x: 0,
    y: 0,
    flipX: !1,
    flipY: !1,
    rotate: 0
  };
  return e.toLowerCase().split(" ").reduce((r, n) => {
    const o = n.toLowerCase().split("-"), a = o[0];
    let i = o.slice(1).join("-");
    if (a && i === "h")
      return r.flipX = !0, r;
    if (a && i === "v")
      return r.flipY = !0, r;
    if (i = parseFloat(i), isNaN(i))
      return r;
    switch (a) {
      case "grow":
        r.size = r.size + i;
        break;
      case "shrink":
        r.size = r.size - i;
        break;
      case "left":
        r.x = r.x - i;
        break;
      case "right":
        r.x = r.x + i;
        break;
      case "up":
        r.y = r.y - i;
        break;
      case "down":
        r.y = r.y + i;
        break;
      case "rotate":
        r.rotate = r.rotate + i;
        break;
    }
    return r;
  }, t);
};
var Hve = {
  mixout() {
    return {
      parse: {
        transform: (e) => t9(e)
      }
    };
  },
  hooks() {
    return {
      parseNodeAttributes(e, t) {
        const r = t.getAttribute("data-fa-transform");
        return r && (e.transform = t9(r)), e;
      }
    };
  },
  provides(e) {
    e.generateAbstractTransformGrouping = function(t) {
      let {
        main: r,
        transform: n,
        containerWidth: o,
        iconWidth: a
      } = t;
      const i = {
        transform: "translate(".concat(o / 2, " 256)")
      }, s = "translate(".concat(n.x * 32, ", ").concat(n.y * 32, ") "), l = "scale(".concat(n.size / 16 * (n.flipX ? -1 : 1), ", ").concat(n.size / 16 * (n.flipY ? -1 : 1), ") "), c = "rotate(".concat(n.rotate, " 0 0)"), u = {
        transform: "".concat(s, " ").concat(l, " ").concat(c)
      }, f = {
        transform: "translate(".concat(a / 2 * -1, " -256)")
      }, p = {
        outer: i,
        inner: u,
        path: f
      };
      return {
        tag: "g",
        attributes: be({}, p.outer),
        children: [{
          tag: "g",
          attributes: be({}, p.inner),
          children: [{
            tag: r.icon.tag,
            children: r.icon.children,
            attributes: be(be({}, r.icon.attributes), p.path)
          }]
        }]
      };
    };
  }
};
const p2 = {
  x: 0,
  y: 0,
  width: "100%",
  height: "100%"
};
function r9(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0;
  return e.attributes && (e.attributes.fill || t) && (e.attributes.fill = "black"), e;
}
function Gve(e) {
  return e.tag === "g" ? e.children : [e];
}
var qve = {
  hooks() {
    return {
      parseNodeAttributes(e, t) {
        const r = t.getAttribute("data-fa-mask"), n = r ? $0(r.split(" ").map((o) => o.trim())) : PY();
        return n.prefix || (n.prefix = ec()), e.mask = n, e.maskId = t.getAttribute("data-fa-mask-id"), e;
      }
    };
  },
  provides(e) {
    e.generateAbstractMask = function(t) {
      let {
        children: r,
        attributes: n,
        main: o,
        mask: a,
        maskId: i,
        transform: s
      } = t;
      const {
        width: l,
        icon: c
      } = o, {
        width: u,
        icon: f
      } = a, p = Dye({
        transform: s,
        containerWidth: u,
        iconWidth: l
      }), v = {
        tag: "rect",
        attributes: be(be({}, p2), {}, {
          fill: "white"
        })
      }, x = c.children ? {
        children: c.children.map(r9)
      } : {}, b = {
        tag: "g",
        attributes: be({}, p.inner),
        children: [r9(be({
          tag: c.tag,
          attributes: be(be({}, c.attributes), p.path)
        }, x))]
      }, m = {
        tag: "g",
        attributes: be({}, p.outer),
        children: [b]
      }, w = "mask-".concat(i || Eh()), $ = "clip-".concat(i || Eh()), E = {
        tag: "mask",
        attributes: be(be({}, p2), {}, {
          id: w,
          maskUnits: "userSpaceOnUse",
          maskContentUnits: "userSpaceOnUse"
        }),
        children: [v, m]
      }, S = {
        tag: "defs",
        children: [{
          tag: "clipPath",
          attributes: {
            id: $
          },
          children: Gve(f)
        }, E]
      };
      return r.push(S, {
        tag: "rect",
        attributes: be({
          fill: "currentColor",
          "clip-path": "url(#".concat($, ")"),
          mask: "url(#".concat(w, ")")
        }, p2)
      }), {
        children: r,
        attributes: n
      };
    };
  }
}, Bve = {
  provides(e) {
    let t = !1;
    Zl.matchMedia && (t = Zl.matchMedia("(prefers-reduced-motion: reduce)").matches), e.missingIconAbstract = function() {
      const r = [], n = {
        fill: "currentColor"
      }, o = {
        attributeType: "XML",
        repeatCount: "indefinite",
        dur: "2s"
      };
      r.push({
        tag: "path",
        attributes: be(be({}, n), {}, {
          d: "M156.5,447.7l-12.6,29.5c-18.7-9.5-35.9-21.2-51.5-34.9l22.7-22.7C127.6,430.5,141.5,440,156.5,447.7z M40.6,272H8.5 c1.4,21.2,5.4,41.7,11.7,61.1L50,321.2C45.1,305.5,41.8,289,40.6,272z M40.6,240c1.4-18.8,5.2-37,11.1-54.1l-29.5-12.6 C14.7,194.3,10,216.7,8.5,240H40.6z M64.3,156.5c7.8-14.9,17.2-28.8,28.1-41.5L69.7,92.3c-13.7,15.6-25.5,32.8-34.9,51.5 L64.3,156.5z M397,419.6c-13.9,12-29.4,22.3-46.1,30.4l11.9,29.8c20.7-9.9,39.8-22.6,56.9-37.6L397,419.6z M115,92.4 c13.9-12,29.4-22.3,46.1-30.4l-11.9-29.8c-20.7,9.9-39.8,22.6-56.8,37.6L115,92.4z M447.7,355.5c-7.8,14.9-17.2,28.8-28.1,41.5 l22.7,22.7c13.7-15.6,25.5-32.9,34.9-51.5L447.7,355.5z M471.4,272c-1.4,18.8-5.2,37-11.1,54.1l29.5,12.6 c7.5-21.1,12.2-43.5,13.6-66.8H471.4z M321.2,462c-15.7,5-32.2,8.2-49.2,9.4v32.1c21.2-1.4,41.7-5.4,61.1-11.7L321.2,462z M240,471.4c-18.8-1.4-37-5.2-54.1-11.1l-12.6,29.5c21.1,7.5,43.5,12.2,66.8,13.6V471.4z M462,190.8c5,15.7,8.2,32.2,9.4,49.2h32.1 c-1.4-21.2-5.4-41.7-11.7-61.1L462,190.8z M92.4,397c-12-13.9-22.3-29.4-30.4-46.1l-29.8,11.9c9.9,20.7,22.6,39.8,37.6,56.9 L92.4,397z M272,40.6c18.8,1.4,36.9,5.2,54.1,11.1l12.6-29.5C317.7,14.7,295.3,10,272,8.5V40.6z M190.8,50 c15.7-5,32.2-8.2,49.2-9.4V8.5c-21.2,1.4-41.7,5.4-61.1,11.7L190.8,50z M442.3,92.3L419.6,115c12,13.9,22.3,29.4,30.5,46.1 l29.8-11.9C470,128.5,457.3,109.4,442.3,92.3z M397,92.4l22.7-22.7c-15.6-13.7-32.8-25.5-51.5-34.9l-12.6,29.5 C370.4,72.1,384.4,81.5,397,92.4z"
        })
      });
      const a = be(be({}, o), {}, {
        attributeName: "opacity"
      }), i = {
        tag: "circle",
        attributes: be(be({}, n), {}, {
          cx: "256",
          cy: "364",
          r: "28"
        }),
        children: []
      };
      return t || i.children.push({
        tag: "animate",
        attributes: be(be({}, o), {}, {
          attributeName: "r",
          values: "28;14;28;28;14;28;"
        })
      }, {
        tag: "animate",
        attributes: be(be({}, a), {}, {
          values: "1;0;1;1;0;1;"
        })
      }), r.push(i), r.push({
        tag: "path",
        attributes: be(be({}, n), {}, {
          opacity: "1",
          d: "M263.7,312h-16c-6.6,0-12-5.4-12-12c0-71,77.4-63.9,77.4-107.8c0-20-17.8-40.2-57.4-40.2c-29.1,0-44.3,9.6-59.2,28.7 c-3.9,5-11.1,6-16.2,2.4l-13.1-9.2c-5.6-3.9-6.9-11.8-2.6-17.2c21.2-27.2,46.4-44.7,91.2-44.7c52.3,0,97.4,29.8,97.4,80.2 c0,67.6-77.4,63.5-77.4,107.8C275.7,306.6,270.3,312,263.7,312z"
        }),
        children: t ? [] : [{
          tag: "animate",
          attributes: be(be({}, a), {}, {
            values: "1;0;0;0;0;1;"
          })
        }]
      }), t || r.push({
        tag: "path",
        attributes: be(be({}, n), {}, {
          opacity: "0",
          d: "M232.5,134.5l7,168c0.3,6.4,5.6,11.5,12,11.5h9c6.4,0,11.7-5.1,12-11.5l7-168c0.3-6.8-5.2-12.5-12-12.5h-23 C237.7,122,232.2,127.7,232.5,134.5z"
        }),
        children: [{
          tag: "animate",
          attributes: be(be({}, a), {}, {
            values: "0;0;1;1;0;0;"
          })
        }]
      }), {
        tag: "g",
        attributes: {
          class: "missing"
        },
        children: r
      };
    };
  }
}, Xve = {
  hooks() {
    return {
      parseNodeAttributes(e, t) {
        const r = t.getAttribute("data-fa-symbol"), n = r === null ? !1 : r === "" ? !0 : r;
        return e.symbol = n, e;
      }
    };
  }
}, Kve = [Wye, Ive, Tve, Mve, Rve, Uve, Yve, Hve, qve, Bve, Xve];
ive(Kve, {
  mixoutsTo: Zn
});
Zn.noAuto;
Zn.config;
Zn.library;
Zn.dom;
const F3 = Zn.parse;
Zn.findIconDefinition;
Zn.toHtml;
const Jve = Zn.icon;
Zn.layer;
Zn.text;
Zn.counter;
function Qve(e) {
  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e;
}
var ey = { exports: {} }, m2 = { exports: {} }, Kt = {};
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var n9;
function Zve() {
  if (n9) return Kt;
  n9 = 1;
  var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, r = e ? Symbol.for("react.portal") : 60106, n = e ? Symbol.for("react.fragment") : 60107, o = e ? Symbol.for("react.strict_mode") : 60108, a = e ? Symbol.for("react.profiler") : 60114, i = e ? Symbol.for("react.provider") : 60109, s = e ? Symbol.for("react.context") : 60110, l = e ? Symbol.for("react.async_mode") : 60111, c = e ? Symbol.for("react.concurrent_mode") : 60111, u = e ? Symbol.for("react.forward_ref") : 60112, f = e ? Symbol.for("react.suspense") : 60113, p = e ? Symbol.for("react.suspense_list") : 60120, v = e ? Symbol.for("react.memo") : 60115, x = e ? Symbol.for("react.lazy") : 60116, b = e ? Symbol.for("react.block") : 60121, m = e ? Symbol.for("react.fundamental") : 60117, w = e ? Symbol.for("react.responder") : 60118, $ = e ? Symbol.for("react.scope") : 60119;
  function E(h) {
    if (typeof h == "object" && h !== null) {
      var U = h.$$typeof;
      switch (U) {
        case t:
          switch (h = h.type, h) {
            case l:
            case c:
            case n:
            case a:
            case o:
            case f:
              return h;
            default:
              switch (h = h && h.$$typeof, h) {
                case s:
                case u:
                case x:
                case v:
                case i:
                  return h;
                default:
                  return U;
              }
          }
        case r:
          return U;
      }
    }
  }
  function S(h) {
    return E(h) === c;
  }
  return Kt.AsyncMode = l, Kt.ConcurrentMode = c, Kt.ContextConsumer = s, Kt.ContextProvider = i, Kt.Element = t, Kt.ForwardRef = u, Kt.Fragment = n, Kt.Lazy = x, Kt.Memo = v, Kt.Portal = r, Kt.Profiler = a, Kt.StrictMode = o, Kt.Suspense = f, Kt.isAsyncMode = function(h) {
    return S(h) || E(h) === l;
  }, Kt.isConcurrentMode = S, Kt.isContextConsumer = function(h) {
    return E(h) === s;
  }, Kt.isContextProvider = function(h) {
    return E(h) === i;
  }, Kt.isElement = function(h) {
    return typeof h == "object" && h !== null && h.$$typeof === t;
  }, Kt.isForwardRef = function(h) {
    return E(h) === u;
  }, Kt.isFragment = function(h) {
    return E(h) === n;
  }, Kt.isLazy = function(h) {
    return E(h) === x;
  }, Kt.isMemo = function(h) {
    return E(h) === v;
  }, Kt.isPortal = function(h) {
    return E(h) === r;
  }, Kt.isProfiler = function(h) {
    return E(h) === a;
  }, Kt.isStrictMode = function(h) {
    return E(h) === o;
  }, Kt.isSuspense = function(h) {
    return E(h) === f;
  }, Kt.isValidElementType = function(h) {
    return typeof h == "string" || typeof h == "function" || h === n || h === c || h === a || h === o || h === f || h === p || typeof h == "object" && h !== null && (h.$$typeof === x || h.$$typeof === v || h.$$typeof === i || h.$$typeof === s || h.$$typeof === u || h.$$typeof === m || h.$$typeof === w || h.$$typeof === $ || h.$$typeof === b);
  }, Kt.typeOf = E, Kt;
}
var ur = {};
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var o9;
function e1e() {
  return o9 || (o9 = 1, process.env.NODE_ENV !== "production" && function() {
    var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, r = e ? Symbol.for("react.portal") : 60106, n = e ? Symbol.for("react.fragment") : 60107, o = e ? Symbol.for("react.strict_mode") : 60108, a = e ? Symbol.for("react.profiler") : 60114, i = e ? Symbol.for("react.provider") : 60109, s = e ? Symbol.for("react.context") : 60110, l = e ? Symbol.for("react.async_mode") : 60111, c = e ? Symbol.for("react.concurrent_mode") : 60111, u = e ? Symbol.for("react.forward_ref") : 60112, f = e ? Symbol.for("react.suspense") : 60113, p = e ? Symbol.for("react.suspense_list") : 60120, v = e ? Symbol.for("react.memo") : 60115, x = e ? Symbol.for("react.lazy") : 60116, b = e ? Symbol.for("react.block") : 60121, m = e ? Symbol.for("react.fundamental") : 60117, w = e ? Symbol.for("react.responder") : 60118, $ = e ? Symbol.for("react.scope") : 60119;
    function E(k) {
      return typeof k == "string" || typeof k == "function" || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
      k === n || k === c || k === a || k === o || k === f || k === p || typeof k == "object" && k !== null && (k.$$typeof === x || k.$$typeof === v || k.$$typeof === i || k.$$typeof === s || k.$$typeof === u || k.$$typeof === m || k.$$typeof === w || k.$$typeof === $ || k.$$typeof === b);
    }
    function S(k) {
      if (typeof k == "object" && k !== null) {
        var oe = k.$$typeof;
        switch (oe) {
          case t:
            var Ce = k.type;
            switch (Ce) {
              case l:
              case c:
              case n:
              case a:
              case o:
              case f:
                return Ce;
              default:
                var Ze = Ce && Ce.$$typeof;
                switch (Ze) {
                  case s:
                  case u:
                  case x:
                  case v:
                  case i:
                    return Ze;
                  default:
                    return oe;
                }
            }
          case r:
            return oe;
        }
      }
    }
    var h = l, U = c, G = s, Q = i, Z = t, X = u, J = n, I = x, te = v, V = r, D = a, F = o, R = f, H = !1;
    function B(k) {
      return H || (H = !0, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.")), g(k) || S(k) === l;
    }
    function g(k) {
      return S(k) === c;
    }
    function d(k) {
      return S(k) === s;
    }
    function O(k) {
      return S(k) === i;
    }
    function C(k) {
      return typeof k == "object" && k !== null && k.$$typeof === t;
    }
    function A(k) {
      return S(k) === u;
    }
    function N(k) {
      return S(k) === n;
    }
    function j(k) {
      return S(k) === x;
    }
    function _(k) {
      return S(k) === v;
    }
    function T(k) {
      return S(k) === r;
    }
    function M(k) {
      return S(k) === a;
    }
    function z(k) {
      return S(k) === o;
    }
    function ee(k) {
      return S(k) === f;
    }
    ur.AsyncMode = h, ur.ConcurrentMode = U, ur.ContextConsumer = G, ur.ContextProvider = Q, ur.Element = Z, ur.ForwardRef = X, ur.Fragment = J, ur.Lazy = I, ur.Memo = te, ur.Portal = V, ur.Profiler = D, ur.StrictMode = F, ur.Suspense = R, ur.isAsyncMode = B, ur.isConcurrentMode = g, ur.isContextConsumer = d, ur.isContextProvider = O, ur.isElement = C, ur.isForwardRef = A, ur.isFragment = N, ur.isLazy = j, ur.isMemo = _, ur.isPortal = T, ur.isProfiler = M, ur.isStrictMode = z, ur.isSuspense = ee, ur.isValidElementType = E, ur.typeOf = S;
  }()), ur;
}
var a9;
function TY() {
  return a9 || (a9 = 1, process.env.NODE_ENV === "production" ? m2.exports = Zve() : m2.exports = e1e()), m2.exports;
}
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
var g2, i9;
function t1e() {
  if (i9) return g2;
  i9 = 1;
  var e = Object.getOwnPropertySymbols, t = Object.prototype.hasOwnProperty, r = Object.prototype.propertyIsEnumerable;
  function n(a) {
    if (a == null)
      throw new TypeError("Object.assign cannot be called with null or undefined");
    return Object(a);
  }
  function o() {
    try {
      if (!Object.assign)
        return !1;
      var a = new String("abc");
      if (a[5] = "de", Object.getOwnPropertyNames(a)[0] === "5")
        return !1;
      for (var i = {}, s = 0; s < 10; s++)
        i["_" + String.fromCharCode(s)] = s;
      var l = Object.getOwnPropertyNames(i).map(function(u) {
        return i[u];
      });
      if (l.join("") !== "0123456789")
        return !1;
      var c = {};
      return "abcdefghijklmnopqrst".split("").forEach(function(u) {
        c[u] = u;
      }), Object.keys(Object.assign({}, c)).join("") === "abcdefghijklmnopqrst";
    } catch {
      return !1;
    }
  }
  return g2 = o() ? Object.assign : function(a, i) {
    for (var s, l = n(a), c, u = 1; u < arguments.length; u++) {
      s = Object(arguments[u]);
      for (var f in s)
        t.call(s, f) && (l[f] = s[f]);
      if (e) {
        c = e(s);
        for (var p = 0; p < c.length; p++)
          r.call(s, c[p]) && (l[c[p]] = s[c[p]]);
      }
    }
    return l;
  }, g2;
}
var h2, s9;
function FP() {
  if (s9) return h2;
  s9 = 1;
  var e = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
  return h2 = e, h2;
}
var l9, c9;
function MY() {
  return c9 || (c9 = 1, l9 = Function.call.bind(Object.prototype.hasOwnProperty)), l9;
}
var b2, u9;
function r1e() {
  if (u9) return b2;
  u9 = 1;
  var e = function() {
  };
  if (process.env.NODE_ENV !== "production") {
    var t = /* @__PURE__ */ FP(), r = {}, n = /* @__PURE__ */ MY();
    e = function(a) {
      var i = "Warning: " + a;
      typeof console < "u" && console.error(i);
      try {
        throw new Error(i);
      } catch {
      }
    };
  }
  function o(a, i, s, l, c) {
    if (process.env.NODE_ENV !== "production") {
      for (var u in a)
        if (n(a, u)) {
          var f;
          try {
            if (typeof a[u] != "function") {
              var p = Error(
                (l || "React class") + ": " + s + " type `" + u + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof a[u] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`."
              );
              throw p.name = "Invariant Violation", p;
            }
            f = a[u](i, u, l, s, null, t);
          } catch (x) {
            f = x;
          }
          if (f && !(f instanceof Error) && e(
            (l || "React class") + ": type specification of " + s + " `" + u + "` is invalid; the type checker function must return `null` or an `Error` but returned a " + typeof f + ". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument)."
          ), f instanceof Error && !(f.message in r)) {
            r[f.message] = !0;
            var v = c ? c() : "";
            e(
              "Failed " + s + " type: " + f.message + (v ?? "")
            );
          }
        }
    }
  }
  return o.resetWarningCache = function() {
    process.env.NODE_ENV !== "production" && (r = {});
  }, b2 = o, b2;
}
var y2, f9;
function n1e() {
  if (f9) return y2;
  f9 = 1;
  var e = TY(), t = t1e(), r = /* @__PURE__ */ FP(), n = /* @__PURE__ */ MY(), o = /* @__PURE__ */ r1e(), a = function() {
  };
  process.env.NODE_ENV !== "production" && (a = function(s) {
    var l = "Warning: " + s;
    typeof console < "u" && console.error(l);
    try {
      throw new Error(l);
    } catch {
    }
  });
  function i() {
    return null;
  }
  return y2 = function(s, l) {
    var c = typeof Symbol == "function" && Symbol.iterator, u = "@@iterator";
    function f(g) {
      var d = g && (c && g[c] || g[u]);
      if (typeof d == "function")
        return d;
    }
    var p = "<<anonymous>>", v = {
      array: w("array"),
      bigint: w("bigint"),
      bool: w("boolean"),
      func: w("function"),
      number: w("number"),
      object: w("object"),
      string: w("string"),
      symbol: w("symbol"),
      any: $(),
      arrayOf: E,
      element: S(),
      elementType: h(),
      instanceOf: U,
      node: X(),
      objectOf: Q,
      oneOf: G,
      oneOfType: Z,
      shape: I,
      exact: te
    };
    function x(g, d) {
      return g === d ? g !== 0 || 1 / g === 1 / d : g !== g && d !== d;
    }
    function b(g, d) {
      this.message = g, this.data = d && typeof d == "object" ? d : {}, this.stack = "";
    }
    b.prototype = Error.prototype;
    function m(g) {
      if (process.env.NODE_ENV !== "production")
        var d = {}, O = 0;
      function C(N, j, _, T, M, z, ee) {
        if (T = T || p, z = z || _, ee !== r) {
          if (l) {
            var k = new Error(
              "Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types"
            );
            throw k.name = "Invariant Violation", k;
          } else if (process.env.NODE_ENV !== "production" && typeof console < "u") {
            var oe = T + ":" + _;
            !d[oe] && // Avoid spamming the console because they are often not actionable except for lib authors
            O < 3 && (a(
              "You are manually calling a React.PropTypes validation function for the `" + z + "` prop on `" + T + "`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details."
            ), d[oe] = !0, O++);
          }
        }
        return j[_] == null ? N ? j[_] === null ? new b("The " + M + " `" + z + "` is marked as required " + ("in `" + T + "`, but its value is `null`.")) : new b("The " + M + " `" + z + "` is marked as required in " + ("`" + T + "`, but its value is `undefined`.")) : null : g(j, _, T, M, z);
      }
      var A = C.bind(null, !1);
      return A.isRequired = C.bind(null, !0), A;
    }
    function w(g) {
      function d(O, C, A, N, j, _) {
        var T = O[C], M = F(T);
        if (M !== g) {
          var z = R(T);
          return new b(
            "Invalid " + N + " `" + j + "` of type " + ("`" + z + "` supplied to `" + A + "`, expected ") + ("`" + g + "`."),
            { expectedType: g }
          );
        }
        return null;
      }
      return m(d);
    }
    function $() {
      return m(i);
    }
    function E(g) {
      function d(O, C, A, N, j) {
        if (typeof g != "function")
          return new b("Property `" + j + "` of component `" + A + "` has invalid PropType notation inside arrayOf.");
        var _ = O[C];
        if (!Array.isArray(_)) {
          var T = F(_);
          return new b("Invalid " + N + " `" + j + "` of type " + ("`" + T + "` supplied to `" + A + "`, expected an array."));
        }
        for (var M = 0; M < _.length; M++) {
          var z = g(_, M, A, N, j + "[" + M + "]", r);
          if (z instanceof Error)
            return z;
        }
        return null;
      }
      return m(d);
    }
    function S() {
      function g(d, O, C, A, N) {
        var j = d[O];
        if (!s(j)) {
          var _ = F(j);
          return new b("Invalid " + A + " `" + N + "` of type " + ("`" + _ + "` supplied to `" + C + "`, expected a single ReactElement."));
        }
        return null;
      }
      return m(g);
    }
    function h() {
      function g(d, O, C, A, N) {
        var j = d[O];
        if (!e.isValidElementType(j)) {
          var _ = F(j);
          return new b("Invalid " + A + " `" + N + "` of type " + ("`" + _ + "` supplied to `" + C + "`, expected a single ReactElement type."));
        }
        return null;
      }
      return m(g);
    }
    function U(g) {
      function d(O, C, A, N, j) {
        if (!(O[C] instanceof g)) {
          var _ = g.name || p, T = B(O[C]);
          return new b("Invalid " + N + " `" + j + "` of type " + ("`" + T + "` supplied to `" + A + "`, expected ") + ("instance of `" + _ + "`."));
        }
        return null;
      }
      return m(d);
    }
    function G(g) {
      if (!Array.isArray(g))
        return process.env.NODE_ENV !== "production" && (arguments.length > 1 ? a(
          "Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z])."
        ) : a("Invalid argument supplied to oneOf, expected an array.")), i;
      function d(O, C, A, N, j) {
        for (var _ = O[C], T = 0; T < g.length; T++)
          if (x(_, g[T]))
            return null;
        var M = JSON.stringify(g, function(z, ee) {
          var k = R(ee);
          return k === "symbol" ? String(ee) : ee;
        });
        return new b("Invalid " + N + " `" + j + "` of value `" + String(_) + "` " + ("supplied to `" + A + "`, expected one of " + M + "."));
      }
      return m(d);
    }
    function Q(g) {
      function d(O, C, A, N, j) {
        if (typeof g != "function")
          return new b("Property `" + j + "` of component `" + A + "` has invalid PropType notation inside objectOf.");
        var _ = O[C], T = F(_);
        if (T !== "object")
          return new b("Invalid " + N + " `" + j + "` of type " + ("`" + T + "` supplied to `" + A + "`, expected an object."));
        for (var M in _)
          if (n(_, M)) {
            var z = g(_, M, A, N, j + "." + M, r);
            if (z instanceof Error)
              return z;
          }
        return null;
      }
      return m(d);
    }
    function Z(g) {
      if (!Array.isArray(g))
        return process.env.NODE_ENV !== "production" && a("Invalid argument supplied to oneOfType, expected an instance of array."), i;
      for (var d = 0; d < g.length; d++) {
        var O = g[d];
        if (typeof O != "function")
          return a(
            "Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + H(O) + " at index " + d + "."
          ), i;
      }
      function C(A, N, j, _, T) {
        for (var M = [], z = 0; z < g.length; z++) {
          var ee = g[z], k = ee(A, N, j, _, T, r);
          if (k == null)
            return null;
          k.data && n(k.data, "expectedType") && M.push(k.data.expectedType);
        }
        var oe = M.length > 0 ? ", expected one of type [" + M.join(", ") + "]" : "";
        return new b("Invalid " + _ + " `" + T + "` supplied to " + ("`" + j + "`" + oe + "."));
      }
      return m(C);
    }
    function X() {
      function g(d, O, C, A, N) {
        return V(d[O]) ? null : new b("Invalid " + A + " `" + N + "` supplied to " + ("`" + C + "`, expected a ReactNode."));
      }
      return m(g);
    }
    function J(g, d, O, C, A) {
      return new b(
        (g || "React class") + ": " + d + " type `" + O + "." + C + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + A + "`."
      );
    }
    function I(g) {
      function d(O, C, A, N, j) {
        var _ = O[C], T = F(_);
        if (T !== "object")
          return new b("Invalid " + N + " `" + j + "` of type `" + T + "` " + ("supplied to `" + A + "`, expected `object`."));
        for (var M in g) {
          var z = g[M];
          if (typeof z != "function")
            return J(A, N, j, M, R(z));
          var ee = z(_, M, A, N, j + "." + M, r);
          if (ee)
            return ee;
        }
        return null;
      }
      return m(d);
    }
    function te(g) {
      function d(O, C, A, N, j) {
        var _ = O[C], T = F(_);
        if (T !== "object")
          return new b("Invalid " + N + " `" + j + "` of type `" + T + "` " + ("supplied to `" + A + "`, expected `object`."));
        var M = t({}, O[C], g);
        for (var z in M) {
          var ee = g[z];
          if (n(g, z) && typeof ee != "function")
            return J(A, N, j, z, R(ee));
          if (!ee)
            return new b(
              "Invalid " + N + " `" + j + "` key `" + z + "` supplied to `" + A + "`.\nBad object: " + JSON.stringify(O[C], null, "  ") + `
Valid keys: ` + JSON.stringify(Object.keys(g), null, "  ")
            );
          var k = ee(_, z, A, N, j + "." + z, r);
          if (k)
            return k;
        }
        return null;
      }
      return m(d);
    }
    function V(g) {
      switch (typeof g) {
        case "number":
        case "string":
        case "undefined":
          return !0;
        case "boolean":
          return !g;
        case "object":
          if (Array.isArray(g))
            return g.every(V);
          if (g === null || s(g))
            return !0;
          var d = f(g);
          if (d) {
            var O = d.call(g), C;
            if (d !== g.entries) {
              for (; !(C = O.next()).done; )
                if (!V(C.value))
                  return !1;
            } else
              for (; !(C = O.next()).done; ) {
                var A = C.value;
                if (A && !V(A[1]))
                  return !1;
              }
          } else
            return !1;
          return !0;
        default:
          return !1;
      }
    }
    function D(g, d) {
      return g === "symbol" ? !0 : d ? d["@@toStringTag"] === "Symbol" || typeof Symbol == "function" && d instanceof Symbol : !1;
    }
    function F(g) {
      var d = typeof g;
      return Array.isArray(g) ? "array" : g instanceof RegExp ? "object" : D(d, g) ? "symbol" : d;
    }
    function R(g) {
      if (typeof g > "u" || g === null)
        return "" + g;
      var d = F(g);
      if (d === "object") {
        if (g instanceof Date)
          return "date";
        if (g instanceof RegExp)
          return "regexp";
      }
      return d;
    }
    function H(g) {
      var d = R(g);
      switch (d) {
        case "array":
        case "object":
          return "an " + d;
        case "boolean":
        case "date":
        case "regexp":
          return "a " + d;
        default:
          return d;
      }
    }
    function B(g) {
      return !g.constructor || !g.constructor.name ? p : g.constructor.name;
    }
    return v.checkPropTypes = o, v.resetWarningCache = o.resetWarningCache, v.PropTypes = v, v;
  }, y2;
}
var v2, d9;
function o1e() {
  if (d9) return v2;
  d9 = 1;
  var e = /* @__PURE__ */ FP();
  function t() {
  }
  function r() {
  }
  return r.resetWarningCache = t, v2 = function() {
    function n(i, s, l, c, u, f) {
      if (f !== e) {
        var p = new Error(
          "Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types"
        );
        throw p.name = "Invariant Violation", p;
      }
    }
    n.isRequired = n;
    function o() {
      return n;
    }
    var a = {
      array: n,
      bigint: n,
      bool: n,
      func: n,
      number: n,
      object: n,
      string: n,
      symbol: n,
      any: n,
      arrayOf: o,
      element: n,
      elementType: n,
      instanceOf: o,
      node: n,
      objectOf: o,
      oneOf: o,
      oneOfType: o,
      shape: o,
      exact: o,
      checkPropTypes: r,
      resetWarningCache: t
    };
    return a.PropTypes = a, a;
  }, v2;
}
var p9;
function a1e() {
  if (p9) return ey.exports;
  if (p9 = 1, process.env.NODE_ENV !== "production") {
    var e = TY(), t = !0;
    ey.exports = /* @__PURE__ */ n1e()(e.isElement, t);
  } else
    ey.exports = /* @__PURE__ */ o1e()();
  return ey.exports;
}
var i1e = /* @__PURE__ */ a1e();
const It = /* @__PURE__ */ Qve(i1e);
function m9(e, t) {
  var r = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var n = Object.getOwnPropertySymbols(e);
    t && (n = n.filter(function(o) {
      return Object.getOwnPropertyDescriptor(e, o).enumerable;
    })), r.push.apply(r, n);
  }
  return r;
}
function Ko(e) {
  for (var t = 1; t < arguments.length; t++) {
    var r = arguments[t] != null ? arguments[t] : {};
    t % 2 ? m9(Object(r), !0).forEach(function(n) {
      uf(e, n, r[n]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : m9(Object(r)).forEach(function(n) {
      Object.defineProperty(e, n, Object.getOwnPropertyDescriptor(r, n));
    });
  }
  return e;
}
function Zv(e) {
  "@babel/helpers - typeof";
  return Zv = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t) {
    return typeof t;
  } : function(t) {
    return t && typeof Symbol == "function" && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
  }, Zv(e);
}
function uf(e, t, r) {
  return t in e ? Object.defineProperty(e, t, {
    value: r,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : e[t] = r, e;
}
function s1e(e, t) {
  if (e == null) return {};
  var r = {}, n = Object.keys(e), o, a;
  for (a = 0; a < n.length; a++)
    o = n[a], !(t.indexOf(o) >= 0) && (r[o] = e[o]);
  return r;
}
function l1e(e, t) {
  if (e == null) return {};
  var r = s1e(e, t), n, o;
  if (Object.getOwnPropertySymbols) {
    var a = Object.getOwnPropertySymbols(e);
    for (o = 0; o < a.length; o++)
      n = a[o], !(t.indexOf(n) >= 0) && Object.prototype.propertyIsEnumerable.call(e, n) && (r[n] = e[n]);
  }
  return r;
}
function D3(e) {
  return c1e(e) || u1e(e) || f1e(e) || d1e();
}
function c1e(e) {
  if (Array.isArray(e)) return L3(e);
}
function u1e(e) {
  if (typeof Symbol < "u" && e[Symbol.iterator] != null || e["@@iterator"] != null) return Array.from(e);
}
function f1e(e, t) {
  if (e) {
    if (typeof e == "string") return L3(e, t);
    var r = Object.prototype.toString.call(e).slice(8, -1);
    if (r === "Object" && e.constructor && (r = e.constructor.name), r === "Map" || r === "Set") return Array.from(e);
    if (r === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return L3(e, t);
  }
}
function L3(e, t) {
  (t == null || t > e.length) && (t = e.length);
  for (var r = 0, n = new Array(t); r < t; r++) n[r] = e[r];
  return n;
}
function d1e() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function p1e(e) {
  var t, r = e.beat, n = e.fade, o = e.beatFade, a = e.bounce, i = e.shake, s = e.flash, l = e.spin, c = e.spinPulse, u = e.spinReverse, f = e.pulse, p = e.fixedWidth, v = e.inverse, x = e.border, b = e.listItem, m = e.flip, w = e.size, $ = e.rotation, E = e.pull, S = (t = {
    "fa-beat": r,
    "fa-fade": n,
    "fa-beat-fade": o,
    "fa-bounce": a,
    "fa-shake": i,
    "fa-flash": s,
    "fa-spin": l,
    "fa-spin-reverse": u,
    "fa-spin-pulse": c,
    "fa-pulse": f,
    "fa-fw": p,
    "fa-inverse": v,
    "fa-border": x,
    "fa-li": b,
    "fa-flip": m === !0,
    "fa-flip-horizontal": m === "horizontal" || m === "both",
    "fa-flip-vertical": m === "vertical" || m === "both"
  }, uf(t, "fa-".concat(w), typeof w < "u" && w !== null), uf(t, "fa-rotate-".concat($), typeof $ < "u" && $ !== null && $ !== 0), uf(t, "fa-pull-".concat(E), typeof E < "u" && E !== null), uf(t, "fa-swap-opacity", e.swapOpacity), t);
  return Object.keys(S).map(function(h) {
    return S[h] ? h : null;
  }).filter(function(h) {
    return h;
  });
}
function m1e(e) {
  return e = e - 0, e === e;
}
function RY(e) {
  return m1e(e) ? e : (e = e.replace(/[\-_\s]+(.)?/g, function(t, r) {
    return r ? r.toUpperCase() : "";
  }), e.substr(0, 1).toLowerCase() + e.substr(1));
}
var g1e = ["style"];
function h1e(e) {
  return e.charAt(0).toUpperCase() + e.slice(1);
}
function b1e(e) {
  return e.split(";").map(function(t) {
    return t.trim();
  }).filter(function(t) {
    return t;
  }).reduce(function(t, r) {
    var n = r.indexOf(":"), o = RY(r.slice(0, n)), a = r.slice(n + 1).trim();
    return o.startsWith("webkit") ? t[h1e(o)] = a : t[o] = a, t;
  }, {});
}
function zY(e, t) {
  var r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
  if (typeof t == "string")
    return t;
  var n = (t.children || []).map(function(l) {
    return zY(e, l);
  }), o = Object.keys(t.attributes || {}).reduce(function(l, c) {
    var u = t.attributes[c];
    switch (c) {
      case "class":
        l.attrs.className = u, delete t.attributes.class;
        break;
      case "style":
        l.attrs.style = b1e(u);
        break;
      default:
        c.indexOf("aria-") === 0 || c.indexOf("data-") === 0 ? l.attrs[c.toLowerCase()] = u : l.attrs[RY(c)] = u;
    }
    return l;
  }, {
    attrs: {}
  }), a = r.style, i = a === void 0 ? {} : a, s = l1e(r, g1e);
  return o.attrs.style = Ko(Ko({}, o.attrs.style), i), e.apply(void 0, [t.tag, Ko(Ko({}, o.attrs), s)].concat(D3(n)));
}
var FY = !1;
try {
  FY = process.env.NODE_ENV === "production";
} catch {
}
function y1e() {
  if (!FY && console && typeof console.error == "function") {
    var e;
    (e = console).error.apply(e, arguments);
  }
}
function g9(e) {
  if (e && Zv(e) === "object" && e.prefix && e.iconName && e.icon)
    return e;
  if (F3.icon)
    return F3.icon(e);
  if (e === null)
    return null;
  if (e && Zv(e) === "object" && e.prefix && e.iconName)
    return e;
  if (Array.isArray(e) && e.length === 2)
    return {
      prefix: e[0],
      iconName: e[1]
    };
  if (typeof e == "string")
    return {
      prefix: "fas",
      iconName: e
    };
}
function x2(e, t) {
  return Array.isArray(t) && t.length > 0 || !Array.isArray(t) && t ? uf({}, e, t) : {};
}
var h9 = {
  border: !1,
  className: "",
  mask: null,
  maskId: null,
  fixedWidth: !1,
  inverse: !1,
  flip: !1,
  icon: null,
  listItem: !1,
  pull: null,
  pulse: !1,
  rotation: null,
  size: null,
  spin: !1,
  spinPulse: !1,
  spinReverse: !1,
  beat: !1,
  fade: !1,
  beatFade: !1,
  bounce: !1,
  shake: !1,
  symbol: !1,
  title: "",
  titleId: null,
  transform: null,
  swapOpacity: !1
}, zn = /* @__PURE__ */ ce.forwardRef(function(e, t) {
  var r = Ko(Ko({}, h9), e), n = r.icon, o = r.mask, a = r.symbol, i = r.className, s = r.title, l = r.titleId, c = r.maskId, u = g9(n), f = x2("classes", [].concat(D3(p1e(r)), D3((i || "").split(" ")))), p = x2("transform", typeof r.transform == "string" ? F3.transform(r.transform) : r.transform), v = x2("mask", g9(o)), x = Jve(u, Ko(Ko(Ko(Ko({}, f), p), v), {}, {
    symbol: a,
    title: s,
    titleId: l,
    maskId: c
  }));
  if (!x)
    return y1e("Could not find icon", u), null;
  var b = x.abstract, m = {
    ref: t
  };
  return Object.keys(r).forEach(function(w) {
    h9.hasOwnProperty(w) || (m[w] = r[w]);
  }), v1e(b[0], m);
});
zn.displayName = "FontAwesomeIcon";
zn.propTypes = {
  beat: It.bool,
  border: It.bool,
  beatFade: It.bool,
  bounce: It.bool,
  className: It.string,
  fade: It.bool,
  flash: It.bool,
  mask: It.oneOfType([It.object, It.array, It.string]),
  maskId: It.string,
  fixedWidth: It.bool,
  inverse: It.bool,
  flip: It.oneOf([!0, !1, "horizontal", "vertical", "both"]),
  icon: It.oneOfType([It.object, It.array, It.string]),
  listItem: It.bool,
  pull: It.oneOf(["right", "left"]),
  pulse: It.bool,
  rotation: It.oneOf([0, 90, 180, 270]),
  shake: It.bool,
  size: It.oneOf(["2xs", "xs", "sm", "lg", "xl", "2xl", "1x", "2x", "3x", "4x", "5x", "6x", "7x", "8x", "9x", "10x"]),
  spin: It.bool,
  spinPulse: It.bool,
  spinReverse: It.bool,
  symbol: It.oneOfType([It.bool, It.string]),
  title: It.string,
  titleId: It.string,
  transform: It.oneOfType([It.string, It.object]),
  swapOpacity: It.bool
};
var v1e = zY.bind(null, ce.createElement);
const DP = "-", x1e = (e) => {
  const t = k1e(e), {
    conflictingClassGroups: r,
    conflictingClassGroupModifiers: n
  } = e;
  return {
    getClassGroupId: (o) => {
      const a = o.split(DP);
      return a[0] === "" && a.length !== 1 && a.shift(), DY(a, t) || w1e(o);
    },
    getConflictingClassGroupIds: (o, a) => {
      const i = r[o] || [];
      return a && n[o] ? [...i, ...n[o]] : i;
    }
  };
}, DY = (e, t) => {
  var r;
  if (e.length === 0)
    return t.classGroupId;
  const n = e[0], o = t.nextPart.get(n), a = o ? DY(e.slice(1), o) : void 0;
  if (a)
    return a;
  if (t.validators.length === 0)
    return;
  const i = e.join(DP);
  return (r = t.validators.find(({
    validator: s
  }) => s(i))) == null ? void 0 : r.classGroupId;
}, b9 = /^\[(.+)\]$/, w1e = (e) => {
  if (b9.test(e)) {
    const t = b9.exec(e)[1], r = t == null ? void 0 : t.substring(0, t.indexOf(":"));
    if (r)
      return "arbitrary.." + r;
  }
}, k1e = (e) => {
  const {
    theme: t,
    prefix: r
  } = e, n = {
    nextPart: /* @__PURE__ */ new Map(),
    validators: []
  };
  return O1e(Object.entries(e.classGroups), r).forEach(([o, a]) => {
    V3(a, n, o, t);
  }), n;
}, V3 = (e, t, r, n) => {
  e.forEach((o) => {
    if (typeof o == "string") {
      const a = o === "" ? t : y9(t, o);
      a.classGroupId = r;
      return;
    }
    if (typeof o == "function") {
      if ($1e(o)) {
        V3(o(n), t, r, n);
        return;
      }
      t.validators.push({
        validator: o,
        classGroupId: r
      });
      return;
    }
    Object.entries(o).forEach(([a, i]) => {
      V3(i, y9(t, a), r, n);
    });
  });
}, y9 = (e, t) => {
  let r = e;
  return t.split(DP).forEach((n) => {
    r.nextPart.has(n) || r.nextPart.set(n, {
      nextPart: /* @__PURE__ */ new Map(),
      validators: []
    }), r = r.nextPart.get(n);
  }), r;
}, $1e = (e) => e.isThemeGetter, O1e = (e, t) => t ? e.map(([r, n]) => {
  const o = n.map((a) => typeof a == "string" ? t + a : typeof a == "object" ? Object.fromEntries(Object.entries(a).map(([i, s]) => [t + i, s])) : a);
  return [r, o];
}) : e, E1e = (e) => {
  if (e < 1)
    return {
      get: () => {
      },
      set: () => {
      }
    };
  let t = 0, r = /* @__PURE__ */ new Map(), n = /* @__PURE__ */ new Map();
  const o = (a, i) => {
    r.set(a, i), t++, t > e && (t = 0, n = r, r = /* @__PURE__ */ new Map());
  };
  return {
    get(a) {
      let i = r.get(a);
      if (i !== void 0)
        return i;
      if ((i = n.get(a)) !== void 0)
        return o(a, i), i;
    },
    set(a, i) {
      r.has(a) ? r.set(a, i) : o(a, i);
    }
  };
}, LY = "!", S1e = (e) => {
  const {
    separator: t,
    experimentalParseClassName: r
  } = e, n = t.length === 1, o = t[0], a = t.length, i = (s) => {
    const l = [];
    let c = 0, u = 0, f;
    for (let m = 0; m < s.length; m++) {
      let w = s[m];
      if (c === 0) {
        if (w === o && (n || s.slice(m, m + a) === t)) {
          l.push(s.slice(u, m)), u = m + a;
          continue;
        }
        if (w === "/") {
          f = m;
          continue;
        }
      }
      w === "[" ? c++ : w === "]" && c--;
    }
    const p = l.length === 0 ? s : s.substring(u), v = p.startsWith(LY), x = v ? p.substring(1) : p, b = f && f > u ? f - u : void 0;
    return {
      modifiers: l,
      hasImportantModifier: v,
      baseClassName: x,
      maybePostfixModifierPosition: b
    };
  };
  return r ? (s) => r({
    className: s,
    parseClassName: i
  }) : i;
}, P1e = (e) => {
  if (e.length <= 1)
    return e;
  const t = [];
  let r = [];
  return e.forEach((n) => {
    n[0] === "[" ? (t.push(...r.sort(), n), r = []) : r.push(n);
  }), t.push(...r.sort()), t;
}, C1e = (e) => ({
  cache: E1e(e.cacheSize),
  parseClassName: S1e(e),
  ...x1e(e)
}), A1e = /\s+/, _1e = (e, t) => {
  const {
    parseClassName: r,
    getClassGroupId: n,
    getConflictingClassGroupIds: o
  } = t, a = [], i = e.trim().split(A1e);
  let s = "";
  for (let l = i.length - 1; l >= 0; l -= 1) {
    const c = i[l], {
      modifiers: u,
      hasImportantModifier: f,
      baseClassName: p,
      maybePostfixModifierPosition: v
    } = r(c);
    let x = !!v, b = n(x ? p.substring(0, v) : p);
    if (!b) {
      if (!x) {
        s = c + (s.length > 0 ? " " + s : s);
        continue;
      }
      if (b = n(p), !b) {
        s = c + (s.length > 0 ? " " + s : s);
        continue;
      }
      x = !1;
    }
    const m = P1e(u).join(":"), w = f ? m + LY : m, $ = w + b;
    if (a.includes($))
      continue;
    a.push($);
    const E = o(b, x);
    for (let S = 0; S < E.length; ++S) {
      const h = E[S];
      a.push(w + h);
    }
    s = c + (s.length > 0 ? " " + s : s);
  }
  return s;
};
function N1e() {
  let e = 0, t, r, n = "";
  for (; e < arguments.length; )
    (t = arguments[e++]) && (r = VY(t)) && (n && (n += " "), n += r);
  return n;
}
const VY = (e) => {
  if (typeof e == "string")
    return e;
  let t, r = "";
  for (let n = 0; n < e.length; n++)
    e[n] && (t = VY(e[n])) && (r && (r += " "), r += t);
  return r;
};
function j1e(e, ...t) {
  let r, n, o, a = i;
  function i(l) {
    const c = t.reduce((u, f) => f(u), e());
    return r = C1e(c), n = r.cache.get, o = r.cache.set, a = s, s(l);
  }
  function s(l) {
    const c = n(l);
    if (c)
      return c;
    const u = _1e(l, r);
    return o(l, u), u;
  }
  return function() {
    return a(N1e.apply(null, arguments));
  };
}
const $r = (e) => {
  const t = (r) => r[e] || [];
  return t.isThemeGetter = !0, t;
}, WY = /^\[(?:([a-z-]+):)?(.+)\]$/i, I1e = /^\d+\/\d+$/, T1e = /* @__PURE__ */ new Set(["px", "full", "screen"]), M1e = /^(\d+(\.\d+)?)?(xs|sm|md|lg|xl)$/, R1e = /\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\b(calc|min|max|clamp)\(.+\)|^0$/, z1e = /^(rgba?|hsla?|hwb|(ok)?(lab|lch))\(.+\)$/, F1e = /^(inset_)?-?((\d+)?\.?(\d+)[a-z]+|0)_-?((\d+)?\.?(\d+)[a-z]+|0)/, D1e = /^(url|image|image-set|cross-fade|element|(repeating-)?(linear|radial|conic)-gradient)\(.+\)$/, Wa = (e) => Lf(e) || T1e.has(e) || I1e.test(e), Ds = (e) => Dd(e, "length", q1e), Lf = (e) => !!e && !Number.isNaN(Number(e)), w2 = (e) => Dd(e, "number", Lf), ym = (e) => !!e && Number.isInteger(Number(e)), L1e = (e) => e.endsWith("%") && Lf(e.slice(0, -1)), ct = (e) => WY.test(e), Ls = (e) => M1e.test(e), V1e = /* @__PURE__ */ new Set(["length", "size", "percentage"]), W1e = (e) => Dd(e, V1e, UY), U1e = (e) => Dd(e, "position", UY), Y1e = /* @__PURE__ */ new Set(["image", "url"]), H1e = (e) => Dd(e, Y1e, X1e), G1e = (e) => Dd(e, "", B1e), vm = () => !0, Dd = (e, t, r) => {
  const n = WY.exec(e);
  return n ? n[1] ? typeof t == "string" ? n[1] === t : t.has(n[1]) : r(n[2]) : !1;
}, q1e = (e) => (
  // `colorFunctionRegex` check is necessary because color functions can have percentages in them which which would be incorrectly classified as lengths.
  // For example, `hsl(0 0% 0%)` would be classified as a length without this check.
  // I could also use lookbehind assertion in `lengthUnitRegex` but that isn't supported widely enough.
  R1e.test(e) && !z1e.test(e)
), UY = () => !1, B1e = (e) => F1e.test(e), X1e = (e) => D1e.test(e), K1e = () => {
  const e = $r("colors"), t = $r("spacing"), r = $r("blur"), n = $r("brightness"), o = $r("borderColor"), a = $r("borderRadius"), i = $r("borderSpacing"), s = $r("borderWidth"), l = $r("contrast"), c = $r("grayscale"), u = $r("hueRotate"), f = $r("invert"), p = $r("gap"), v = $r("gradientColorStops"), x = $r("gradientColorStopPositions"), b = $r("inset"), m = $r("margin"), w = $r("opacity"), $ = $r("padding"), E = $r("saturate"), S = $r("scale"), h = $r("sepia"), U = $r("skew"), G = $r("space"), Q = $r("translate"), Z = () => ["auto", "contain", "none"], X = () => ["auto", "hidden", "clip", "visible", "scroll"], J = () => ["auto", ct, t], I = () => [ct, t], te = () => ["", Wa, Ds], V = () => ["auto", Lf, ct], D = () => ["bottom", "center", "left", "left-bottom", "left-top", "right", "right-bottom", "right-top", "top"], F = () => ["solid", "dashed", "dotted", "double", "none"], R = () => ["normal", "multiply", "screen", "overlay", "darken", "lighten", "color-dodge", "color-burn", "hard-light", "soft-light", "difference", "exclusion", "hue", "saturation", "color", "luminosity"], H = () => ["start", "end", "center", "between", "around", "evenly", "stretch"], B = () => ["", "0", ct], g = () => ["auto", "avoid", "all", "avoid-page", "page", "left", "right", "column"], d = () => [Lf, ct];
  return {
    cacheSize: 500,
    separator: ":",
    theme: {
      colors: [vm],
      spacing: [Wa, Ds],
      blur: ["none", "", Ls, ct],
      brightness: d(),
      borderColor: [e],
      borderRadius: ["none", "", "full", Ls, ct],
      borderSpacing: I(),
      borderWidth: te(),
      contrast: d(),
      grayscale: B(),
      hueRotate: d(),
      invert: B(),
      gap: I(),
      gradientColorStops: [e],
      gradientColorStopPositions: [L1e, Ds],
      inset: J(),
      margin: J(),
      opacity: d(),
      padding: I(),
      saturate: d(),
      scale: d(),
      sepia: B(),
      skew: d(),
      space: I(),
      translate: I()
    },
    classGroups: {
      // Layout
      /**
       * Aspect Ratio
       * @see https://tailwindcss.com/docs/aspect-ratio
       */
      aspect: [{
        aspect: ["auto", "square", "video", ct]
      }],
      /**
       * Container
       * @see https://tailwindcss.com/docs/container
       */
      container: ["container"],
      /**
       * Columns
       * @see https://tailwindcss.com/docs/columns
       */
      columns: [{
        columns: [Ls]
      }],
      /**
       * Break After
       * @see https://tailwindcss.com/docs/break-after
       */
      "break-after": [{
        "break-after": g()
      }],
      /**
       * Break Before
       * @see https://tailwindcss.com/docs/break-before
       */
      "break-before": [{
        "break-before": g()
      }],
      /**
       * Break Inside
       * @see https://tailwindcss.com/docs/break-inside
       */
      "break-inside": [{
        "break-inside": ["auto", "avoid", "avoid-page", "avoid-column"]
      }],
      /**
       * Box Decoration Break
       * @see https://tailwindcss.com/docs/box-decoration-break
       */
      "box-decoration": [{
        "box-decoration": ["slice", "clone"]
      }],
      /**
       * Box Sizing
       * @see https://tailwindcss.com/docs/box-sizing
       */
      box: [{
        box: ["border", "content"]
      }],
      /**
       * Display
       * @see https://tailwindcss.com/docs/display
       */
      display: ["block", "inline-block", "inline", "flex", "inline-flex", "table", "inline-table", "table-caption", "table-cell", "table-column", "table-column-group", "table-footer-group", "table-header-group", "table-row-group", "table-row", "flow-root", "grid", "inline-grid", "contents", "list-item", "hidden"],
      /**
       * Floats
       * @see https://tailwindcss.com/docs/float
       */
      float: [{
        float: ["right", "left", "none", "start", "end"]
      }],
      /**
       * Clear
       * @see https://tailwindcss.com/docs/clear
       */
      clear: [{
        clear: ["left", "right", "both", "none", "start", "end"]
      }],
      /**
       * Isolation
       * @see https://tailwindcss.com/docs/isolation
       */
      isolation: ["isolate", "isolation-auto"],
      /**
       * Object Fit
       * @see https://tailwindcss.com/docs/object-fit
       */
      "object-fit": [{
        object: ["contain", "cover", "fill", "none", "scale-down"]
      }],
      /**
       * Object Position
       * @see https://tailwindcss.com/docs/object-position
       */
      "object-position": [{
        object: [...D(), ct]
      }],
      /**
       * Overflow
       * @see https://tailwindcss.com/docs/overflow
       */
      overflow: [{
        overflow: X()
      }],
      /**
       * Overflow X
       * @see https://tailwindcss.com/docs/overflow
       */
      "overflow-x": [{
        "overflow-x": X()
      }],
      /**
       * Overflow Y
       * @see https://tailwindcss.com/docs/overflow
       */
      "overflow-y": [{
        "overflow-y": X()
      }],
      /**
       * Overscroll Behavior
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      overscroll: [{
        overscroll: Z()
      }],
      /**
       * Overscroll Behavior X
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      "overscroll-x": [{
        "overscroll-x": Z()
      }],
      /**
       * Overscroll Behavior Y
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      "overscroll-y": [{
        "overscroll-y": Z()
      }],
      /**
       * Position
       * @see https://tailwindcss.com/docs/position
       */
      position: ["static", "fixed", "absolute", "relative", "sticky"],
      /**
       * Top / Right / Bottom / Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      inset: [{
        inset: [b]
      }],
      /**
       * Right / Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      "inset-x": [{
        "inset-x": [b]
      }],
      /**
       * Top / Bottom
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      "inset-y": [{
        "inset-y": [b]
      }],
      /**
       * Start
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      start: [{
        start: [b]
      }],
      /**
       * End
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      end: [{
        end: [b]
      }],
      /**
       * Top
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      top: [{
        top: [b]
      }],
      /**
       * Right
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      right: [{
        right: [b]
      }],
      /**
       * Bottom
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      bottom: [{
        bottom: [b]
      }],
      /**
       * Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      left: [{
        left: [b]
      }],
      /**
       * Visibility
       * @see https://tailwindcss.com/docs/visibility
       */
      visibility: ["visible", "invisible", "collapse"],
      /**
       * Z-Index
       * @see https://tailwindcss.com/docs/z-index
       */
      z: [{
        z: ["auto", ym, ct]
      }],
      // Flexbox and Grid
      /**
       * Flex Basis
       * @see https://tailwindcss.com/docs/flex-basis
       */
      basis: [{
        basis: J()
      }],
      /**
       * Flex Direction
       * @see https://tailwindcss.com/docs/flex-direction
       */
      "flex-direction": [{
        flex: ["row", "row-reverse", "col", "col-reverse"]
      }],
      /**
       * Flex Wrap
       * @see https://tailwindcss.com/docs/flex-wrap
       */
      "flex-wrap": [{
        flex: ["wrap", "wrap-reverse", "nowrap"]
      }],
      /**
       * Flex
       * @see https://tailwindcss.com/docs/flex
       */
      flex: [{
        flex: ["1", "auto", "initial", "none", ct]
      }],
      /**
       * Flex Grow
       * @see https://tailwindcss.com/docs/flex-grow
       */
      grow: [{
        grow: B()
      }],
      /**
       * Flex Shrink
       * @see https://tailwindcss.com/docs/flex-shrink
       */
      shrink: [{
        shrink: B()
      }],
      /**
       * Order
       * @see https://tailwindcss.com/docs/order
       */
      order: [{
        order: ["first", "last", "none", ym, ct]
      }],
      /**
       * Grid Template Columns
       * @see https://tailwindcss.com/docs/grid-template-columns
       */
      "grid-cols": [{
        "grid-cols": [vm]
      }],
      /**
       * Grid Column Start / End
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-start-end": [{
        col: ["auto", {
          span: ["full", ym, ct]
        }, ct]
      }],
      /**
       * Grid Column Start
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-start": [{
        "col-start": V()
      }],
      /**
       * Grid Column End
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-end": [{
        "col-end": V()
      }],
      /**
       * Grid Template Rows
       * @see https://tailwindcss.com/docs/grid-template-rows
       */
      "grid-rows": [{
        "grid-rows": [vm]
      }],
      /**
       * Grid Row Start / End
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-start-end": [{
        row: ["auto", {
          span: [ym, ct]
        }, ct]
      }],
      /**
       * Grid Row Start
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-start": [{
        "row-start": V()
      }],
      /**
       * Grid Row End
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-end": [{
        "row-end": V()
      }],
      /**
       * Grid Auto Flow
       * @see https://tailwindcss.com/docs/grid-auto-flow
       */
      "grid-flow": [{
        "grid-flow": ["row", "col", "dense", "row-dense", "col-dense"]
      }],
      /**
       * Grid Auto Columns
       * @see https://tailwindcss.com/docs/grid-auto-columns
       */
      "auto-cols": [{
        "auto-cols": ["auto", "min", "max", "fr", ct]
      }],
      /**
       * Grid Auto Rows
       * @see https://tailwindcss.com/docs/grid-auto-rows
       */
      "auto-rows": [{
        "auto-rows": ["auto", "min", "max", "fr", ct]
      }],
      /**
       * Gap
       * @see https://tailwindcss.com/docs/gap
       */
      gap: [{
        gap: [p]
      }],
      /**
       * Gap X
       * @see https://tailwindcss.com/docs/gap
       */
      "gap-x": [{
        "gap-x": [p]
      }],
      /**
       * Gap Y
       * @see https://tailwindcss.com/docs/gap
       */
      "gap-y": [{
        "gap-y": [p]
      }],
      /**
       * Justify Content
       * @see https://tailwindcss.com/docs/justify-content
       */
      "justify-content": [{
        justify: ["normal", ...H()]
      }],
      /**
       * Justify Items
       * @see https://tailwindcss.com/docs/justify-items
       */
      "justify-items": [{
        "justify-items": ["start", "end", "center", "stretch"]
      }],
      /**
       * Justify Self
       * @see https://tailwindcss.com/docs/justify-self
       */
      "justify-self": [{
        "justify-self": ["auto", "start", "end", "center", "stretch"]
      }],
      /**
       * Align Content
       * @see https://tailwindcss.com/docs/align-content
       */
      "align-content": [{
        content: ["normal", ...H(), "baseline"]
      }],
      /**
       * Align Items
       * @see https://tailwindcss.com/docs/align-items
       */
      "align-items": [{
        items: ["start", "end", "center", "baseline", "stretch"]
      }],
      /**
       * Align Self
       * @see https://tailwindcss.com/docs/align-self
       */
      "align-self": [{
        self: ["auto", "start", "end", "center", "stretch", "baseline"]
      }],
      /**
       * Place Content
       * @see https://tailwindcss.com/docs/place-content
       */
      "place-content": [{
        "place-content": [...H(), "baseline"]
      }],
      /**
       * Place Items
       * @see https://tailwindcss.com/docs/place-items
       */
      "place-items": [{
        "place-items": ["start", "end", "center", "baseline", "stretch"]
      }],
      /**
       * Place Self
       * @see https://tailwindcss.com/docs/place-self
       */
      "place-self": [{
        "place-self": ["auto", "start", "end", "center", "stretch"]
      }],
      // Spacing
      /**
       * Padding
       * @see https://tailwindcss.com/docs/padding
       */
      p: [{
        p: [$]
      }],
      /**
       * Padding X
       * @see https://tailwindcss.com/docs/padding
       */
      px: [{
        px: [$]
      }],
      /**
       * Padding Y
       * @see https://tailwindcss.com/docs/padding
       */
      py: [{
        py: [$]
      }],
      /**
       * Padding Start
       * @see https://tailwindcss.com/docs/padding
       */
      ps: [{
        ps: [$]
      }],
      /**
       * Padding End
       * @see https://tailwindcss.com/docs/padding
       */
      pe: [{
        pe: [$]
      }],
      /**
       * Padding Top
       * @see https://tailwindcss.com/docs/padding
       */
      pt: [{
        pt: [$]
      }],
      /**
       * Padding Right
       * @see https://tailwindcss.com/docs/padding
       */
      pr: [{
        pr: [$]
      }],
      /**
       * Padding Bottom
       * @see https://tailwindcss.com/docs/padding
       */
      pb: [{
        pb: [$]
      }],
      /**
       * Padding Left
       * @see https://tailwindcss.com/docs/padding
       */
      pl: [{
        pl: [$]
      }],
      /**
       * Margin
       * @see https://tailwindcss.com/docs/margin
       */
      m: [{
        m: [m]
      }],
      /**
       * Margin X
       * @see https://tailwindcss.com/docs/margin
       */
      mx: [{
        mx: [m]
      }],
      /**
       * Margin Y
       * @see https://tailwindcss.com/docs/margin
       */
      my: [{
        my: [m]
      }],
      /**
       * Margin Start
       * @see https://tailwindcss.com/docs/margin
       */
      ms: [{
        ms: [m]
      }],
      /**
       * Margin End
       * @see https://tailwindcss.com/docs/margin
       */
      me: [{
        me: [m]
      }],
      /**
       * Margin Top
       * @see https://tailwindcss.com/docs/margin
       */
      mt: [{
        mt: [m]
      }],
      /**
       * Margin Right
       * @see https://tailwindcss.com/docs/margin
       */
      mr: [{
        mr: [m]
      }],
      /**
       * Margin Bottom
       * @see https://tailwindcss.com/docs/margin
       */
      mb: [{
        mb: [m]
      }],
      /**
       * Margin Left
       * @see https://tailwindcss.com/docs/margin
       */
      ml: [{
        ml: [m]
      }],
      /**
       * Space Between X
       * @see https://tailwindcss.com/docs/space
       */
      "space-x": [{
        "space-x": [G]
      }],
      /**
       * Space Between X Reverse
       * @see https://tailwindcss.com/docs/space
       */
      "space-x-reverse": ["space-x-reverse"],
      /**
       * Space Between Y
       * @see https://tailwindcss.com/docs/space
       */
      "space-y": [{
        "space-y": [G]
      }],
      /**
       * Space Between Y Reverse
       * @see https://tailwindcss.com/docs/space
       */
      "space-y-reverse": ["space-y-reverse"],
      // Sizing
      /**
       * Width
       * @see https://tailwindcss.com/docs/width
       */
      w: [{
        w: ["auto", "min", "max", "fit", "svw", "lvw", "dvw", ct, t]
      }],
      /**
       * Min-Width
       * @see https://tailwindcss.com/docs/min-width
       */
      "min-w": [{
        "min-w": [ct, t, "min", "max", "fit"]
      }],
      /**
       * Max-Width
       * @see https://tailwindcss.com/docs/max-width
       */
      "max-w": [{
        "max-w": [ct, t, "none", "full", "min", "max", "fit", "prose", {
          screen: [Ls]
        }, Ls]
      }],
      /**
       * Height
       * @see https://tailwindcss.com/docs/height
       */
      h: [{
        h: [ct, t, "auto", "min", "max", "fit", "svh", "lvh", "dvh"]
      }],
      /**
       * Min-Height
       * @see https://tailwindcss.com/docs/min-height
       */
      "min-h": [{
        "min-h": [ct, t, "min", "max", "fit", "svh", "lvh", "dvh"]
      }],
      /**
       * Max-Height
       * @see https://tailwindcss.com/docs/max-height
       */
      "max-h": [{
        "max-h": [ct, t, "min", "max", "fit", "svh", "lvh", "dvh"]
      }],
      /**
       * Size
       * @see https://tailwindcss.com/docs/size
       */
      size: [{
        size: [ct, t, "auto", "min", "max", "fit"]
      }],
      // Typography
      /**
       * Font Size
       * @see https://tailwindcss.com/docs/font-size
       */
      "font-size": [{
        text: ["base", Ls, Ds]
      }],
      /**
       * Font Smoothing
       * @see https://tailwindcss.com/docs/font-smoothing
       */
      "font-smoothing": ["antialiased", "subpixel-antialiased"],
      /**
       * Font Style
       * @see https://tailwindcss.com/docs/font-style
       */
      "font-style": ["italic", "not-italic"],
      /**
       * Font Weight
       * @see https://tailwindcss.com/docs/font-weight
       */
      "font-weight": [{
        font: ["thin", "extralight", "light", "normal", "medium", "semibold", "bold", "extrabold", "black", w2]
      }],
      /**
       * Font Family
       * @see https://tailwindcss.com/docs/font-family
       */
      "font-family": [{
        font: [vm]
      }],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-normal": ["normal-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-ordinal": ["ordinal"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-slashed-zero": ["slashed-zero"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-figure": ["lining-nums", "oldstyle-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-spacing": ["proportional-nums", "tabular-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-fraction": ["diagonal-fractions", "stacked-fractions"],
      /**
       * Letter Spacing
       * @see https://tailwindcss.com/docs/letter-spacing
       */
      tracking: [{
        tracking: ["tighter", "tight", "normal", "wide", "wider", "widest", ct]
      }],
      /**
       * Line Clamp
       * @see https://tailwindcss.com/docs/line-clamp
       */
      "line-clamp": [{
        "line-clamp": ["none", Lf, w2]
      }],
      /**
       * Line Height
       * @see https://tailwindcss.com/docs/line-height
       */
      leading: [{
        leading: ["none", "tight", "snug", "normal", "relaxed", "loose", Wa, ct]
      }],
      /**
       * List Style Image
       * @see https://tailwindcss.com/docs/list-style-image
       */
      "list-image": [{
        "list-image": ["none", ct]
      }],
      /**
       * List Style Type
       * @see https://tailwindcss.com/docs/list-style-type
       */
      "list-style-type": [{
        list: ["none", "disc", "decimal", ct]
      }],
      /**
       * List Style Position
       * @see https://tailwindcss.com/docs/list-style-position
       */
      "list-style-position": [{
        list: ["inside", "outside"]
      }],
      /**
       * Placeholder Color
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/placeholder-color
       */
      "placeholder-color": [{
        placeholder: [e]
      }],
      /**
       * Placeholder Opacity
       * @see https://tailwindcss.com/docs/placeholder-opacity
       */
      "placeholder-opacity": [{
        "placeholder-opacity": [w]
      }],
      /**
       * Text Alignment
       * @see https://tailwindcss.com/docs/text-align
       */
      "text-alignment": [{
        text: ["left", "center", "right", "justify", "start", "end"]
      }],
      /**
       * Text Color
       * @see https://tailwindcss.com/docs/text-color
       */
      "text-color": [{
        text: [e]
      }],
      /**
       * Text Opacity
       * @see https://tailwindcss.com/docs/text-opacity
       */
      "text-opacity": [{
        "text-opacity": [w]
      }],
      /**
       * Text Decoration
       * @see https://tailwindcss.com/docs/text-decoration
       */
      "text-decoration": ["underline", "overline", "line-through", "no-underline"],
      /**
       * Text Decoration Style
       * @see https://tailwindcss.com/docs/text-decoration-style
       */
      "text-decoration-style": [{
        decoration: [...F(), "wavy"]
      }],
      /**
       * Text Decoration Thickness
       * @see https://tailwindcss.com/docs/text-decoration-thickness
       */
      "text-decoration-thickness": [{
        decoration: ["auto", "from-font", Wa, Ds]
      }],
      /**
       * Text Underline Offset
       * @see https://tailwindcss.com/docs/text-underline-offset
       */
      "underline-offset": [{
        "underline-offset": ["auto", Wa, ct]
      }],
      /**
       * Text Decoration Color
       * @see https://tailwindcss.com/docs/text-decoration-color
       */
      "text-decoration-color": [{
        decoration: [e]
      }],
      /**
       * Text Transform
       * @see https://tailwindcss.com/docs/text-transform
       */
      "text-transform": ["uppercase", "lowercase", "capitalize", "normal-case"],
      /**
       * Text Overflow
       * @see https://tailwindcss.com/docs/text-overflow
       */
      "text-overflow": ["truncate", "text-ellipsis", "text-clip"],
      /**
       * Text Wrap
       * @see https://tailwindcss.com/docs/text-wrap
       */
      "text-wrap": [{
        text: ["wrap", "nowrap", "balance", "pretty"]
      }],
      /**
       * Text Indent
       * @see https://tailwindcss.com/docs/text-indent
       */
      indent: [{
        indent: I()
      }],
      /**
       * Vertical Alignment
       * @see https://tailwindcss.com/docs/vertical-align
       */
      "vertical-align": [{
        align: ["baseline", "top", "middle", "bottom", "text-top", "text-bottom", "sub", "super", ct]
      }],
      /**
       * Whitespace
       * @see https://tailwindcss.com/docs/whitespace
       */
      whitespace: [{
        whitespace: ["normal", "nowrap", "pre", "pre-line", "pre-wrap", "break-spaces"]
      }],
      /**
       * Word Break
       * @see https://tailwindcss.com/docs/word-break
       */
      break: [{
        break: ["normal", "words", "all", "keep"]
      }],
      /**
       * Hyphens
       * @see https://tailwindcss.com/docs/hyphens
       */
      hyphens: [{
        hyphens: ["none", "manual", "auto"]
      }],
      /**
       * Content
       * @see https://tailwindcss.com/docs/content
       */
      content: [{
        content: ["none", ct]
      }],
      // Backgrounds
      /**
       * Background Attachment
       * @see https://tailwindcss.com/docs/background-attachment
       */
      "bg-attachment": [{
        bg: ["fixed", "local", "scroll"]
      }],
      /**
       * Background Clip
       * @see https://tailwindcss.com/docs/background-clip
       */
      "bg-clip": [{
        "bg-clip": ["border", "padding", "content", "text"]
      }],
      /**
       * Background Opacity
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/background-opacity
       */
      "bg-opacity": [{
        "bg-opacity": [w]
      }],
      /**
       * Background Origin
       * @see https://tailwindcss.com/docs/background-origin
       */
      "bg-origin": [{
        "bg-origin": ["border", "padding", "content"]
      }],
      /**
       * Background Position
       * @see https://tailwindcss.com/docs/background-position
       */
      "bg-position": [{
        bg: [...D(), U1e]
      }],
      /**
       * Background Repeat
       * @see https://tailwindcss.com/docs/background-repeat
       */
      "bg-repeat": [{
        bg: ["no-repeat", {
          repeat: ["", "x", "y", "round", "space"]
        }]
      }],
      /**
       * Background Size
       * @see https://tailwindcss.com/docs/background-size
       */
      "bg-size": [{
        bg: ["auto", "cover", "contain", W1e]
      }],
      /**
       * Background Image
       * @see https://tailwindcss.com/docs/background-image
       */
      "bg-image": [{
        bg: ["none", {
          "gradient-to": ["t", "tr", "r", "br", "b", "bl", "l", "tl"]
        }, H1e]
      }],
      /**
       * Background Color
       * @see https://tailwindcss.com/docs/background-color
       */
      "bg-color": [{
        bg: [e]
      }],
      /**
       * Gradient Color Stops From Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-from-pos": [{
        from: [x]
      }],
      /**
       * Gradient Color Stops Via Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-via-pos": [{
        via: [x]
      }],
      /**
       * Gradient Color Stops To Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-to-pos": [{
        to: [x]
      }],
      /**
       * Gradient Color Stops From
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-from": [{
        from: [v]
      }],
      /**
       * Gradient Color Stops Via
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-via": [{
        via: [v]
      }],
      /**
       * Gradient Color Stops To
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-to": [{
        to: [v]
      }],
      // Borders
      /**
       * Border Radius
       * @see https://tailwindcss.com/docs/border-radius
       */
      rounded: [{
        rounded: [a]
      }],
      /**
       * Border Radius Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-s": [{
        "rounded-s": [a]
      }],
      /**
       * Border Radius End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-e": [{
        "rounded-e": [a]
      }],
      /**
       * Border Radius Top
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-t": [{
        "rounded-t": [a]
      }],
      /**
       * Border Radius Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-r": [{
        "rounded-r": [a]
      }],
      /**
       * Border Radius Bottom
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-b": [{
        "rounded-b": [a]
      }],
      /**
       * Border Radius Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-l": [{
        "rounded-l": [a]
      }],
      /**
       * Border Radius Start Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-ss": [{
        "rounded-ss": [a]
      }],
      /**
       * Border Radius Start End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-se": [{
        "rounded-se": [a]
      }],
      /**
       * Border Radius End End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-ee": [{
        "rounded-ee": [a]
      }],
      /**
       * Border Radius End Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-es": [{
        "rounded-es": [a]
      }],
      /**
       * Border Radius Top Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-tl": [{
        "rounded-tl": [a]
      }],
      /**
       * Border Radius Top Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-tr": [{
        "rounded-tr": [a]
      }],
      /**
       * Border Radius Bottom Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-br": [{
        "rounded-br": [a]
      }],
      /**
       * Border Radius Bottom Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-bl": [{
        "rounded-bl": [a]
      }],
      /**
       * Border Width
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w": [{
        border: [s]
      }],
      /**
       * Border Width X
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-x": [{
        "border-x": [s]
      }],
      /**
       * Border Width Y
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-y": [{
        "border-y": [s]
      }],
      /**
       * Border Width Start
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-s": [{
        "border-s": [s]
      }],
      /**
       * Border Width End
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-e": [{
        "border-e": [s]
      }],
      /**
       * Border Width Top
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-t": [{
        "border-t": [s]
      }],
      /**
       * Border Width Right
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-r": [{
        "border-r": [s]
      }],
      /**
       * Border Width Bottom
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-b": [{
        "border-b": [s]
      }],
      /**
       * Border Width Left
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-l": [{
        "border-l": [s]
      }],
      /**
       * Border Opacity
       * @see https://tailwindcss.com/docs/border-opacity
       */
      "border-opacity": [{
        "border-opacity": [w]
      }],
      /**
       * Border Style
       * @see https://tailwindcss.com/docs/border-style
       */
      "border-style": [{
        border: [...F(), "hidden"]
      }],
      /**
       * Divide Width X
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-x": [{
        "divide-x": [s]
      }],
      /**
       * Divide Width X Reverse
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-x-reverse": ["divide-x-reverse"],
      /**
       * Divide Width Y
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-y": [{
        "divide-y": [s]
      }],
      /**
       * Divide Width Y Reverse
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-y-reverse": ["divide-y-reverse"],
      /**
       * Divide Opacity
       * @see https://tailwindcss.com/docs/divide-opacity
       */
      "divide-opacity": [{
        "divide-opacity": [w]
      }],
      /**
       * Divide Style
       * @see https://tailwindcss.com/docs/divide-style
       */
      "divide-style": [{
        divide: F()
      }],
      /**
       * Border Color
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color": [{
        border: [o]
      }],
      /**
       * Border Color X
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-x": [{
        "border-x": [o]
      }],
      /**
       * Border Color Y
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-y": [{
        "border-y": [o]
      }],
      /**
       * Border Color S
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-s": [{
        "border-s": [o]
      }],
      /**
       * Border Color E
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-e": [{
        "border-e": [o]
      }],
      /**
       * Border Color Top
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-t": [{
        "border-t": [o]
      }],
      /**
       * Border Color Right
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-r": [{
        "border-r": [o]
      }],
      /**
       * Border Color Bottom
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-b": [{
        "border-b": [o]
      }],
      /**
       * Border Color Left
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-l": [{
        "border-l": [o]
      }],
      /**
       * Divide Color
       * @see https://tailwindcss.com/docs/divide-color
       */
      "divide-color": [{
        divide: [o]
      }],
      /**
       * Outline Style
       * @see https://tailwindcss.com/docs/outline-style
       */
      "outline-style": [{
        outline: ["", ...F()]
      }],
      /**
       * Outline Offset
       * @see https://tailwindcss.com/docs/outline-offset
       */
      "outline-offset": [{
        "outline-offset": [Wa, ct]
      }],
      /**
       * Outline Width
       * @see https://tailwindcss.com/docs/outline-width
       */
      "outline-w": [{
        outline: [Wa, Ds]
      }],
      /**
       * Outline Color
       * @see https://tailwindcss.com/docs/outline-color
       */
      "outline-color": [{
        outline: [e]
      }],
      /**
       * Ring Width
       * @see https://tailwindcss.com/docs/ring-width
       */
      "ring-w": [{
        ring: te()
      }],
      /**
       * Ring Width Inset
       * @see https://tailwindcss.com/docs/ring-width
       */
      "ring-w-inset": ["ring-inset"],
      /**
       * Ring Color
       * @see https://tailwindcss.com/docs/ring-color
       */
      "ring-color": [{
        ring: [e]
      }],
      /**
       * Ring Opacity
       * @see https://tailwindcss.com/docs/ring-opacity
       */
      "ring-opacity": [{
        "ring-opacity": [w]
      }],
      /**
       * Ring Offset Width
       * @see https://tailwindcss.com/docs/ring-offset-width
       */
      "ring-offset-w": [{
        "ring-offset": [Wa, Ds]
      }],
      /**
       * Ring Offset Color
       * @see https://tailwindcss.com/docs/ring-offset-color
       */
      "ring-offset-color": [{
        "ring-offset": [e]
      }],
      // Effects
      /**
       * Box Shadow
       * @see https://tailwindcss.com/docs/box-shadow
       */
      shadow: [{
        shadow: ["", "inner", "none", Ls, G1e]
      }],
      /**
       * Box Shadow Color
       * @see https://tailwindcss.com/docs/box-shadow-color
       */
      "shadow-color": [{
        shadow: [vm]
      }],
      /**
       * Opacity
       * @see https://tailwindcss.com/docs/opacity
       */
      opacity: [{
        opacity: [w]
      }],
      /**
       * Mix Blend Mode
       * @see https://tailwindcss.com/docs/mix-blend-mode
       */
      "mix-blend": [{
        "mix-blend": [...R(), "plus-lighter", "plus-darker"]
      }],
      /**
       * Background Blend Mode
       * @see https://tailwindcss.com/docs/background-blend-mode
       */
      "bg-blend": [{
        "bg-blend": R()
      }],
      // Filters
      /**
       * Filter
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/filter
       */
      filter: [{
        filter: ["", "none"]
      }],
      /**
       * Blur
       * @see https://tailwindcss.com/docs/blur
       */
      blur: [{
        blur: [r]
      }],
      /**
       * Brightness
       * @see https://tailwindcss.com/docs/brightness
       */
      brightness: [{
        brightness: [n]
      }],
      /**
       * Contrast
       * @see https://tailwindcss.com/docs/contrast
       */
      contrast: [{
        contrast: [l]
      }],
      /**
       * Drop Shadow
       * @see https://tailwindcss.com/docs/drop-shadow
       */
      "drop-shadow": [{
        "drop-shadow": ["", "none", Ls, ct]
      }],
      /**
       * Grayscale
       * @see https://tailwindcss.com/docs/grayscale
       */
      grayscale: [{
        grayscale: [c]
      }],
      /**
       * Hue Rotate
       * @see https://tailwindcss.com/docs/hue-rotate
       */
      "hue-rotate": [{
        "hue-rotate": [u]
      }],
      /**
       * Invert
       * @see https://tailwindcss.com/docs/invert
       */
      invert: [{
        invert: [f]
      }],
      /**
       * Saturate
       * @see https://tailwindcss.com/docs/saturate
       */
      saturate: [{
        saturate: [E]
      }],
      /**
       * Sepia
       * @see https://tailwindcss.com/docs/sepia
       */
      sepia: [{
        sepia: [h]
      }],
      /**
       * Backdrop Filter
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/backdrop-filter
       */
      "backdrop-filter": [{
        "backdrop-filter": ["", "none"]
      }],
      /**
       * Backdrop Blur
       * @see https://tailwindcss.com/docs/backdrop-blur
       */
      "backdrop-blur": [{
        "backdrop-blur": [r]
      }],
      /**
       * Backdrop Brightness
       * @see https://tailwindcss.com/docs/backdrop-brightness
       */
      "backdrop-brightness": [{
        "backdrop-brightness": [n]
      }],
      /**
       * Backdrop Contrast
       * @see https://tailwindcss.com/docs/backdrop-contrast
       */
      "backdrop-contrast": [{
        "backdrop-contrast": [l]
      }],
      /**
       * Backdrop Grayscale
       * @see https://tailwindcss.com/docs/backdrop-grayscale
       */
      "backdrop-grayscale": [{
        "backdrop-grayscale": [c]
      }],
      /**
       * Backdrop Hue Rotate
       * @see https://tailwindcss.com/docs/backdrop-hue-rotate
       */
      "backdrop-hue-rotate": [{
        "backdrop-hue-rotate": [u]
      }],
      /**
       * Backdrop Invert
       * @see https://tailwindcss.com/docs/backdrop-invert
       */
      "backdrop-invert": [{
        "backdrop-invert": [f]
      }],
      /**
       * Backdrop Opacity
       * @see https://tailwindcss.com/docs/backdrop-opacity
       */
      "backdrop-opacity": [{
        "backdrop-opacity": [w]
      }],
      /**
       * Backdrop Saturate
       * @see https://tailwindcss.com/docs/backdrop-saturate
       */
      "backdrop-saturate": [{
        "backdrop-saturate": [E]
      }],
      /**
       * Backdrop Sepia
       * @see https://tailwindcss.com/docs/backdrop-sepia
       */
      "backdrop-sepia": [{
        "backdrop-sepia": [h]
      }],
      // Tables
      /**
       * Border Collapse
       * @see https://tailwindcss.com/docs/border-collapse
       */
      "border-collapse": [{
        border: ["collapse", "separate"]
      }],
      /**
       * Border Spacing
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing": [{
        "border-spacing": [i]
      }],
      /**
       * Border Spacing X
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing-x": [{
        "border-spacing-x": [i]
      }],
      /**
       * Border Spacing Y
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing-y": [{
        "border-spacing-y": [i]
      }],
      /**
       * Table Layout
       * @see https://tailwindcss.com/docs/table-layout
       */
      "table-layout": [{
        table: ["auto", "fixed"]
      }],
      /**
       * Caption Side
       * @see https://tailwindcss.com/docs/caption-side
       */
      caption: [{
        caption: ["top", "bottom"]
      }],
      // Transitions and Animation
      /**
       * Tranisition Property
       * @see https://tailwindcss.com/docs/transition-property
       */
      transition: [{
        transition: ["none", "all", "", "colors", "opacity", "shadow", "transform", ct]
      }],
      /**
       * Transition Duration
       * @see https://tailwindcss.com/docs/transition-duration
       */
      duration: [{
        duration: d()
      }],
      /**
       * Transition Timing Function
       * @see https://tailwindcss.com/docs/transition-timing-function
       */
      ease: [{
        ease: ["linear", "in", "out", "in-out", ct]
      }],
      /**
       * Transition Delay
       * @see https://tailwindcss.com/docs/transition-delay
       */
      delay: [{
        delay: d()
      }],
      /**
       * Animation
       * @see https://tailwindcss.com/docs/animation
       */
      animate: [{
        animate: ["none", "spin", "ping", "pulse", "bounce", ct]
      }],
      // Transforms
      /**
       * Transform
       * @see https://tailwindcss.com/docs/transform
       */
      transform: [{
        transform: ["", "gpu", "none"]
      }],
      /**
       * Scale
       * @see https://tailwindcss.com/docs/scale
       */
      scale: [{
        scale: [S]
      }],
      /**
       * Scale X
       * @see https://tailwindcss.com/docs/scale
       */
      "scale-x": [{
        "scale-x": [S]
      }],
      /**
       * Scale Y
       * @see https://tailwindcss.com/docs/scale
       */
      "scale-y": [{
        "scale-y": [S]
      }],
      /**
       * Rotate
       * @see https://tailwindcss.com/docs/rotate
       */
      rotate: [{
        rotate: [ym, ct]
      }],
      /**
       * Translate X
       * @see https://tailwindcss.com/docs/translate
       */
      "translate-x": [{
        "translate-x": [Q]
      }],
      /**
       * Translate Y
       * @see https://tailwindcss.com/docs/translate
       */
      "translate-y": [{
        "translate-y": [Q]
      }],
      /**
       * Skew X
       * @see https://tailwindcss.com/docs/skew
       */
      "skew-x": [{
        "skew-x": [U]
      }],
      /**
       * Skew Y
       * @see https://tailwindcss.com/docs/skew
       */
      "skew-y": [{
        "skew-y": [U]
      }],
      /**
       * Transform Origin
       * @see https://tailwindcss.com/docs/transform-origin
       */
      "transform-origin": [{
        origin: ["center", "top", "top-right", "right", "bottom-right", "bottom", "bottom-left", "left", "top-left", ct]
      }],
      // Interactivity
      /**
       * Accent Color
       * @see https://tailwindcss.com/docs/accent-color
       */
      accent: [{
        accent: ["auto", e]
      }],
      /**
       * Appearance
       * @see https://tailwindcss.com/docs/appearance
       */
      appearance: [{
        appearance: ["none", "auto"]
      }],
      /**
       * Cursor
       * @see https://tailwindcss.com/docs/cursor
       */
      cursor: [{
        cursor: ["auto", "default", "pointer", "wait", "text", "move", "help", "not-allowed", "none", "context-menu", "progress", "cell", "crosshair", "vertical-text", "alias", "copy", "no-drop", "grab", "grabbing", "all-scroll", "col-resize", "row-resize", "n-resize", "e-resize", "s-resize", "w-resize", "ne-resize", "nw-resize", "se-resize", "sw-resize", "ew-resize", "ns-resize", "nesw-resize", "nwse-resize", "zoom-in", "zoom-out", ct]
      }],
      /**
       * Caret Color
       * @see https://tailwindcss.com/docs/just-in-time-mode#caret-color-utilities
       */
      "caret-color": [{
        caret: [e]
      }],
      /**
       * Pointer Events
       * @see https://tailwindcss.com/docs/pointer-events
       */
      "pointer-events": [{
        "pointer-events": ["none", "auto"]
      }],
      /**
       * Resize
       * @see https://tailwindcss.com/docs/resize
       */
      resize: [{
        resize: ["none", "y", "x", ""]
      }],
      /**
       * Scroll Behavior
       * @see https://tailwindcss.com/docs/scroll-behavior
       */
      "scroll-behavior": [{
        scroll: ["auto", "smooth"]
      }],
      /**
       * Scroll Margin
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-m": [{
        "scroll-m": I()
      }],
      /**
       * Scroll Margin X
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mx": [{
        "scroll-mx": I()
      }],
      /**
       * Scroll Margin Y
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-my": [{
        "scroll-my": I()
      }],
      /**
       * Scroll Margin Start
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-ms": [{
        "scroll-ms": I()
      }],
      /**
       * Scroll Margin End
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-me": [{
        "scroll-me": I()
      }],
      /**
       * Scroll Margin Top
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mt": [{
        "scroll-mt": I()
      }],
      /**
       * Scroll Margin Right
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mr": [{
        "scroll-mr": I()
      }],
      /**
       * Scroll Margin Bottom
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mb": [{
        "scroll-mb": I()
      }],
      /**
       * Scroll Margin Left
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-ml": [{
        "scroll-ml": I()
      }],
      /**
       * Scroll Padding
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-p": [{
        "scroll-p": I()
      }],
      /**
       * Scroll Padding X
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-px": [{
        "scroll-px": I()
      }],
      /**
       * Scroll Padding Y
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-py": [{
        "scroll-py": I()
      }],
      /**
       * Scroll Padding Start
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-ps": [{
        "scroll-ps": I()
      }],
      /**
       * Scroll Padding End
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pe": [{
        "scroll-pe": I()
      }],
      /**
       * Scroll Padding Top
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pt": [{
        "scroll-pt": I()
      }],
      /**
       * Scroll Padding Right
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pr": [{
        "scroll-pr": I()
      }],
      /**
       * Scroll Padding Bottom
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pb": [{
        "scroll-pb": I()
      }],
      /**
       * Scroll Padding Left
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pl": [{
        "scroll-pl": I()
      }],
      /**
       * Scroll Snap Align
       * @see https://tailwindcss.com/docs/scroll-snap-align
       */
      "snap-align": [{
        snap: ["start", "end", "center", "align-none"]
      }],
      /**
       * Scroll Snap Stop
       * @see https://tailwindcss.com/docs/scroll-snap-stop
       */
      "snap-stop": [{
        snap: ["normal", "always"]
      }],
      /**
       * Scroll Snap Type
       * @see https://tailwindcss.com/docs/scroll-snap-type
       */
      "snap-type": [{
        snap: ["none", "x", "y", "both"]
      }],
      /**
       * Scroll Snap Type Strictness
       * @see https://tailwindcss.com/docs/scroll-snap-type
       */
      "snap-strictness": [{
        snap: ["mandatory", "proximity"]
      }],
      /**
       * Touch Action
       * @see https://tailwindcss.com/docs/touch-action
       */
      touch: [{
        touch: ["auto", "none", "manipulation"]
      }],
      /**
       * Touch Action X
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-x": [{
        "touch-pan": ["x", "left", "right"]
      }],
      /**
       * Touch Action Y
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-y": [{
        "touch-pan": ["y", "up", "down"]
      }],
      /**
       * Touch Action Pinch Zoom
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-pz": ["touch-pinch-zoom"],
      /**
       * User Select
       * @see https://tailwindcss.com/docs/user-select
       */
      select: [{
        select: ["none", "text", "all", "auto"]
      }],
      /**
       * Will Change
       * @see https://tailwindcss.com/docs/will-change
       */
      "will-change": [{
        "will-change": ["auto", "scroll", "contents", "transform", ct]
      }],
      // SVG
      /**
       * Fill
       * @see https://tailwindcss.com/docs/fill
       */
      fill: [{
        fill: [e, "none"]
      }],
      /**
       * Stroke Width
       * @see https://tailwindcss.com/docs/stroke-width
       */
      "stroke-w": [{
        stroke: [Wa, Ds, w2]
      }],
      /**
       * Stroke
       * @see https://tailwindcss.com/docs/stroke
       */
      stroke: [{
        stroke: [e, "none"]
      }],
      // Accessibility
      /**
       * Screen Readers
       * @see https://tailwindcss.com/docs/screen-readers
       */
      sr: ["sr-only", "not-sr-only"],
      /**
       * Forced Color Adjust
       * @see https://tailwindcss.com/docs/forced-color-adjust
       */
      "forced-color-adjust": [{
        "forced-color-adjust": ["auto", "none"]
      }]
    },
    conflictingClassGroups: {
      overflow: ["overflow-x", "overflow-y"],
      overscroll: ["overscroll-x", "overscroll-y"],
      inset: ["inset-x", "inset-y", "start", "end", "top", "right", "bottom", "left"],
      "inset-x": ["right", "left"],
      "inset-y": ["top", "bottom"],
      flex: ["basis", "grow", "shrink"],
      gap: ["gap-x", "gap-y"],
      p: ["px", "py", "ps", "pe", "pt", "pr", "pb", "pl"],
      px: ["pr", "pl"],
      py: ["pt", "pb"],
      m: ["mx", "my", "ms", "me", "mt", "mr", "mb", "ml"],
      mx: ["mr", "ml"],
      my: ["mt", "mb"],
      size: ["w", "h"],
      "font-size": ["leading"],
      "fvn-normal": ["fvn-ordinal", "fvn-slashed-zero", "fvn-figure", "fvn-spacing", "fvn-fraction"],
      "fvn-ordinal": ["fvn-normal"],
      "fvn-slashed-zero": ["fvn-normal"],
      "fvn-figure": ["fvn-normal"],
      "fvn-spacing": ["fvn-normal"],
      "fvn-fraction": ["fvn-normal"],
      "line-clamp": ["display", "overflow"],
      rounded: ["rounded-s", "rounded-e", "rounded-t", "rounded-r", "rounded-b", "rounded-l", "rounded-ss", "rounded-se", "rounded-ee", "rounded-es", "rounded-tl", "rounded-tr", "rounded-br", "rounded-bl"],
      "rounded-s": ["rounded-ss", "rounded-es"],
      "rounded-e": ["rounded-se", "rounded-ee"],
      "rounded-t": ["rounded-tl", "rounded-tr"],
      "rounded-r": ["rounded-tr", "rounded-br"],
      "rounded-b": ["rounded-br", "rounded-bl"],
      "rounded-l": ["rounded-tl", "rounded-bl"],
      "border-spacing": ["border-spacing-x", "border-spacing-y"],
      "border-w": ["border-w-s", "border-w-e", "border-w-t", "border-w-r", "border-w-b", "border-w-l"],
      "border-w-x": ["border-w-r", "border-w-l"],
      "border-w-y": ["border-w-t", "border-w-b"],
      "border-color": ["border-color-s", "border-color-e", "border-color-t", "border-color-r", "border-color-b", "border-color-l"],
      "border-color-x": ["border-color-r", "border-color-l"],
      "border-color-y": ["border-color-t", "border-color-b"],
      "scroll-m": ["scroll-mx", "scroll-my", "scroll-ms", "scroll-me", "scroll-mt", "scroll-mr", "scroll-mb", "scroll-ml"],
      "scroll-mx": ["scroll-mr", "scroll-ml"],
      "scroll-my": ["scroll-mt", "scroll-mb"],
      "scroll-p": ["scroll-px", "scroll-py", "scroll-ps", "scroll-pe", "scroll-pt", "scroll-pr", "scroll-pb", "scroll-pl"],
      "scroll-px": ["scroll-pr", "scroll-pl"],
      "scroll-py": ["scroll-pt", "scroll-pb"],
      touch: ["touch-x", "touch-y", "touch-pz"],
      "touch-x": ["touch"],
      "touch-y": ["touch"],
      "touch-pz": ["touch"]
    },
    conflictingClassGroupModifiers: {
      "font-size": ["leading"]
    }
  };
}, v9 = /* @__PURE__ */ j1e(K1e);
/*!
 * Font Awesome Pro 6.7.2 by @fontawesome - https://fontawesome.com
 * License - https://fontawesome.com/license (Commercial License)
 * Copyright 2024 Fonticons, Inc.
 */
const Hu = {
  prefix: "fas",
  iconName: "spinner-third",
  icon: [512, 512, [], "f3f4", "M224 32c0-17.7 14.3-32 32-32C397.4 0 512 114.6 512 256c0 46.6-12.5 90.4-34.3 128c-8.8 15.3-28.4 20.5-43.7 11.7s-20.5-28.4-11.7-43.7c16.3-28.2 25.7-61 25.7-96c0-106-86-192-192-192c-17.7 0-32-14.3-32-32z"]
}, ty = ({
  icon: e,
  iconClassName: t,
  children: r,
  className: n,
  htmlFor: o,
  variant: a = "primary",
  disabled: i,
  iconFlip: s = !1,
  loading: l,
  as: c = "button",
  href: u,
  target: f,
  ...p
}) => {
  function v(m) {
    switch (m) {
      case "secondary":
        return "i-am-a-unique-string bg-ui-controls text-base-fg border border-ui-controls-border hover:bg-ui-controls/80 focus-visible:outline-secondary";
      case "action":
        return "bg-ui-controls text-base-fg border border-ui-controls-border hover:bg-ui-controls/80 focus-visible:outline-action";
      case "destructive":
        return "bg-red hover:bg-red/90 text-white focus-visible:outline-red";
      case "ghost":
        return "bg-transparent text-base-fg border border-ui-controls-border/70 hover:bg-ui-controls/30 focus-visible:outline-primary-600";
      case "primary":
      default:
        return "bg-primary hover:bg-primary-400 text-white focus-visible:outline-primary-600";
    }
  }
  const x = v9(
    i || l ? "opacity-50 pointer-events-none" : ""
  ), b = v9(
    "w-fit text-sm font-medium rounded-lg px-3 py-2 border border-transparent shadow-sm focus-visible:outline focus-visible:outline-0 focus-visible:outline-offset-0 transition-all duration-150 flex gap-2 items-center justify-center active:scale-95 transform",
    v(a),
    n,
    x
  );
  return o ? /* @__PURE__ */ Pe("label", { className: b, htmlFor: o, style: p.style, children: [
    l && !s ? /* @__PURE__ */ q(zn, { icon: Hu, className: "animate-spin" }) : /* @__PURE__ */ q(Vt, { children: e && !s ? /* @__PURE__ */ q(zn, { icon: e, className: t }) : null }),
    r,
    l && s ? /* @__PURE__ */ q(zn, { icon: Hu, className: "animate-spin" }) : /* @__PURE__ */ q(Vt, { children: e && s ? /* @__PURE__ */ q(zn, { icon: e, className: t }) : null })
  ] }) : c === "link" && u ? /* @__PURE__ */ Pe(
    "a",
    {
      href: u,
      className: b,
      style: p.style,
      ...p,
      target: f,
      children: [
        l && !s ? /* @__PURE__ */ q(zn, { icon: Hu, className: "animate-spin" }) : /* @__PURE__ */ q(Vt, { children: e && !s ? /* @__PURE__ */ q(zn, { icon: e, className: t }) : null }),
        r,
        l && s ? /* @__PURE__ */ q(zn, { icon: Hu, className: "animate-spin" }) : /* @__PURE__ */ q(Vt, { children: e && s ? /* @__PURE__ */ q(zn, { icon: e, className: t }) : null })
      ]
    }
  ) : /* @__PURE__ */ Pe(
    "button",
    {
      className: b,
      disabled: i || l,
      ...p,
      htmlFor: o,
      children: [
        l && !s ? /* @__PURE__ */ q(zn, { icon: Hu, className: "animate-spin" }) : /* @__PURE__ */ q(Vt, { children: e && !s ? /* @__PURE__ */ q(zn, { icon: e, className: t }) : null }),
        r,
        l && s ? /* @__PURE__ */ q(zn, { icon: Hu, className: "animate-spin" }) : /* @__PURE__ */ q(Vt, { children: e && s ? /* @__PURE__ */ q(zn, { icon: e, className: t }) : null })
      ]
    }
  );
};
var tv = /* @__PURE__ */ ((e) => (e[e.ALL = 0] = "ALL", e[e.FEATURED = 1] = "FEATURED", e[e.MINE = 2] = "MINE", e[e.BOOKMARKED = 3] = "BOOKMARKED", e))(tv || {});
tv.FEATURED, tv.MINE, tv.BOOKMARKED;
function YY(e) {
  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e;
}
var W3 = { exports: {} }, J1e = W3.exports, x9;
function Q1e() {
  return x9 || (x9 = 1, function(e, t) {
    (function(r, n) {
      e.exports = n();
    })(J1e, function() {
      var r = 1e3, n = 6e4, o = 36e5, a = "millisecond", i = "second", s = "minute", l = "hour", c = "day", u = "week", f = "month", p = "quarter", v = "year", x = "date", b = "Invalid Date", m = /^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[Tt\s]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/, w = /\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g, $ = { name: "en", weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"), months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_"), ordinal: function(V) {
        var D = ["th", "st", "nd", "rd"], F = V % 100;
        return "[" + V + (D[(F - 20) % 10] || D[F] || D[0]) + "]";
      } }, E = function(V, D, F) {
        var R = String(V);
        return !R || R.length >= D ? V : "" + Array(D + 1 - R.length).join(F) + V;
      }, S = { s: E, z: function(V) {
        var D = -V.utcOffset(), F = Math.abs(D), R = Math.floor(F / 60), H = F % 60;
        return (D <= 0 ? "+" : "-") + E(R, 2, "0") + ":" + E(H, 2, "0");
      }, m: function V(D, F) {
        if (D.date() < F.date()) return -V(F, D);
        var R = 12 * (F.year() - D.year()) + (F.month() - D.month()), H = D.clone().add(R, f), B = F - H < 0, g = D.clone().add(R + (B ? -1 : 1), f);
        return +(-(R + (F - H) / (B ? H - g : g - H)) || 0);
      }, a: function(V) {
        return V < 0 ? Math.ceil(V) || 0 : Math.floor(V);
      }, p: function(V) {
        return { M: f, y: v, w: u, d: c, D: x, h: l, m: s, s: i, ms: a, Q: p }[V] || String(V || "").toLowerCase().replace(/s$/, "");
      }, u: function(V) {
        return V === void 0;
      } }, h = "en", U = {};
      U[h] = $;
      var G = "$isDayjsObject", Q = function(V) {
        return V instanceof I || !(!V || !V[G]);
      }, Z = function V(D, F, R) {
        var H;
        if (!D) return h;
        if (typeof D == "string") {
          var B = D.toLowerCase();
          U[B] && (H = B), F && (U[B] = F, H = B);
          var g = D.split("-");
          if (!H && g.length > 1) return V(g[0]);
        } else {
          var d = D.name;
          U[d] = D, H = d;
        }
        return !R && H && (h = H), H || !R && h;
      }, X = function(V, D) {
        if (Q(V)) return V.clone();
        var F = typeof D == "object" ? D : {};
        return F.date = V, F.args = arguments, new I(F);
      }, J = S;
      J.l = Z, J.i = Q, J.w = function(V, D) {
        return X(V, { locale: D.$L, utc: D.$u, x: D.$x, $offset: D.$offset });
      };
      var I = function() {
        function V(F) {
          this.$L = Z(F.locale, null, !0), this.parse(F), this.$x = this.$x || F.x || {}, this[G] = !0;
        }
        var D = V.prototype;
        return D.parse = function(F) {
          this.$d = function(R) {
            var H = R.date, B = R.utc;
            if (H === null) return /* @__PURE__ */ new Date(NaN);
            if (J.u(H)) return /* @__PURE__ */ new Date();
            if (H instanceof Date) return new Date(H);
            if (typeof H == "string" && !/Z$/i.test(H)) {
              var g = H.match(m);
              if (g) {
                var d = g[2] - 1 || 0, O = (g[7] || "0").substring(0, 3);
                return B ? new Date(Date.UTC(g[1], d, g[3] || 1, g[4] || 0, g[5] || 0, g[6] || 0, O)) : new Date(g[1], d, g[3] || 1, g[4] || 0, g[5] || 0, g[6] || 0, O);
              }
            }
            return new Date(H);
          }(F), this.init();
        }, D.init = function() {
          var F = this.$d;
          this.$y = F.getFullYear(), this.$M = F.getMonth(), this.$D = F.getDate(), this.$W = F.getDay(), this.$H = F.getHours(), this.$m = F.getMinutes(), this.$s = F.getSeconds(), this.$ms = F.getMilliseconds();
        }, D.$utils = function() {
          return J;
        }, D.isValid = function() {
          return this.$d.toString() !== b;
        }, D.isSame = function(F, R) {
          var H = X(F);
          return this.startOf(R) <= H && H <= this.endOf(R);
        }, D.isAfter = function(F, R) {
          return X(F) < this.startOf(R);
        }, D.isBefore = function(F, R) {
          return this.endOf(R) < X(F);
        }, D.$g = function(F, R, H) {
          return J.u(F) ? this[R] : this.set(H, F);
        }, D.unix = function() {
          return Math.floor(this.valueOf() / 1e3);
        }, D.valueOf = function() {
          return this.$d.getTime();
        }, D.startOf = function(F, R) {
          var H = this, B = !!J.u(R) || R, g = J.p(F), d = function(M, z) {
            var ee = J.w(H.$u ? Date.UTC(H.$y, z, M) : new Date(H.$y, z, M), H);
            return B ? ee : ee.endOf(c);
          }, O = function(M, z) {
            return J.w(H.toDate()[M].apply(H.toDate("s"), (B ? [0, 0, 0, 0] : [23, 59, 59, 999]).slice(z)), H);
          }, C = this.$W, A = this.$M, N = this.$D, j = "set" + (this.$u ? "UTC" : "");
          switch (g) {
            case v:
              return B ? d(1, 0) : d(31, 11);
            case f:
              return B ? d(1, A) : d(0, A + 1);
            case u:
              var _ = this.$locale().weekStart || 0, T = (C < _ ? C + 7 : C) - _;
              return d(B ? N - T : N + (6 - T), A);
            case c:
            case x:
              return O(j + "Hours", 0);
            case l:
              return O(j + "Minutes", 1);
            case s:
              return O(j + "Seconds", 2);
            case i:
              return O(j + "Milliseconds", 3);
            default:
              return this.clone();
          }
        }, D.endOf = function(F) {
          return this.startOf(F, !1);
        }, D.$set = function(F, R) {
          var H, B = J.p(F), g = "set" + (this.$u ? "UTC" : ""), d = (H = {}, H[c] = g + "Date", H[x] = g + "Date", H[f] = g + "Month", H[v] = g + "FullYear", H[l] = g + "Hours", H[s] = g + "Minutes", H[i] = g + "Seconds", H[a] = g + "Milliseconds", H)[B], O = B === c ? this.$D + (R - this.$W) : R;
          if (B === f || B === v) {
            var C = this.clone().set(x, 1);
            C.$d[d](O), C.init(), this.$d = C.set(x, Math.min(this.$D, C.daysInMonth())).$d;
          } else d && this.$d[d](O);
          return this.init(), this;
        }, D.set = function(F, R) {
          return this.clone().$set(F, R);
        }, D.get = function(F) {
          return this[J.p(F)]();
        }, D.add = function(F, R) {
          var H, B = this;
          F = Number(F);
          var g = J.p(R), d = function(A) {
            var N = X(B);
            return J.w(N.date(N.date() + Math.round(A * F)), B);
          };
          if (g === f) return this.set(f, this.$M + F);
          if (g === v) return this.set(v, this.$y + F);
          if (g === c) return d(1);
          if (g === u) return d(7);
          var O = (H = {}, H[s] = n, H[l] = o, H[i] = r, H)[g] || 1, C = this.$d.getTime() + F * O;
          return J.w(C, this);
        }, D.subtract = function(F, R) {
          return this.add(-1 * F, R);
        }, D.format = function(F) {
          var R = this, H = this.$locale();
          if (!this.isValid()) return H.invalidDate || b;
          var B = F || "YYYY-MM-DDTHH:mm:ssZ", g = J.z(this), d = this.$H, O = this.$m, C = this.$M, A = H.weekdays, N = H.months, j = H.meridiem, _ = function(z, ee, k, oe) {
            return z && (z[ee] || z(R, B)) || k[ee].slice(0, oe);
          }, T = function(z) {
            return J.s(d % 12 || 12, z, "0");
          }, M = j || function(z, ee, k) {
            var oe = z < 12 ? "AM" : "PM";
            return k ? oe.toLowerCase() : oe;
          };
          return B.replace(w, function(z, ee) {
            return ee || function(k) {
              switch (k) {
                case "YY":
                  return String(R.$y).slice(-2);
                case "YYYY":
                  return J.s(R.$y, 4, "0");
                case "M":
                  return C + 1;
                case "MM":
                  return J.s(C + 1, 2, "0");
                case "MMM":
                  return _(H.monthsShort, C, N, 3);
                case "MMMM":
                  return _(N, C);
                case "D":
                  return R.$D;
                case "DD":
                  return J.s(R.$D, 2, "0");
                case "d":
                  return String(R.$W);
                case "dd":
                  return _(H.weekdaysMin, R.$W, A, 2);
                case "ddd":
                  return _(H.weekdaysShort, R.$W, A, 3);
                case "dddd":
                  return A[R.$W];
                case "H":
                  return String(d);
                case "HH":
                  return J.s(d, 2, "0");
                case "h":
                  return T(1);
                case "hh":
                  return T(2);
                case "a":
                  return M(d, O, !0);
                case "A":
                  return M(d, O, !1);
                case "m":
                  return String(O);
                case "mm":
                  return J.s(O, 2, "0");
                case "s":
                  return String(R.$s);
                case "ss":
                  return J.s(R.$s, 2, "0");
                case "SSS":
                  return J.s(R.$ms, 3, "0");
                case "Z":
                  return g;
              }
              return null;
            }(z) || g.replace(":", "");
          });
        }, D.utcOffset = function() {
          return 15 * -Math.round(this.$d.getTimezoneOffset() / 15);
        }, D.diff = function(F, R, H) {
          var B, g = this, d = J.p(R), O = X(F), C = (O.utcOffset() - this.utcOffset()) * n, A = this - O, N = function() {
            return J.m(g, O);
          };
          switch (d) {
            case v:
              B = N() / 12;
              break;
            case f:
              B = N();
              break;
            case p:
              B = N() / 3;
              break;
            case u:
              B = (A - C) / 6048e5;
              break;
            case c:
              B = (A - C) / 864e5;
              break;
            case l:
              B = A / o;
              break;
            case s:
              B = A / n;
              break;
            case i:
              B = A / r;
              break;
            default:
              B = A;
          }
          return H ? B : J.a(B);
        }, D.daysInMonth = function() {
          return this.endOf(f).$D;
        }, D.$locale = function() {
          return U[this.$L];
        }, D.locale = function(F, R) {
          if (!F) return this.$L;
          var H = this.clone(), B = Z(F, R, !0);
          return B && (H.$L = B), H;
        }, D.clone = function() {
          return J.w(this.$d, this);
        }, D.toDate = function() {
          return new Date(this.valueOf());
        }, D.toJSON = function() {
          return this.isValid() ? this.toISOString() : null;
        }, D.toISOString = function() {
          return this.$d.toISOString();
        }, D.toString = function() {
          return this.$d.toUTCString();
        }, V;
      }(), te = I.prototype;
      return X.prototype = te, [["$ms", a], ["$s", i], ["$m", s], ["$H", l], ["$W", c], ["$M", f], ["$y", v], ["$D", x]].forEach(function(V) {
        te[V[1]] = function(D) {
          return this.$g(D, V[0], V[1]);
        };
      }), X.extend = function(V, D) {
        return V.$i || (V(D, I, X), V.$i = !0), X;
      }, X.locale = Z, X.isDayjs = Q, X.unix = function(V) {
        return X(1e3 * V);
      }, X.en = U[h], X.Ls = U, X.p = {}, X;
    });
  }(W3)), W3.exports;
}
var Z1e = Q1e();
const w9 = /* @__PURE__ */ YY(Z1e);
/*!
 * Font Awesome Pro 6.7.2 by @fontawesome - https://fontawesome.com
 * License - https://fontawesome.com/license (Commercial License)
 * Copyright 2024 Fonticons, Inc.
 */
const e0e = {
  prefix: "fas",
  iconName: "pencil",
  icon: [512, 512, [9999, 61504, "pencil-alt"], "f303", "M410.3 231l11.3-11.3-33.9-33.9-62.1-62.1L291.7 89.8l-11.3 11.3-22.6 22.6L58.6 322.9c-10.4 10.4-18 23.3-22.2 37.4L1 480.7c-2.5 8.4-.2 17.5 6.1 23.7s15.3 8.5 23.7 6.1l120.3-35.4c14.1-4.2 27-11.8 37.4-22.2L387.7 253.7 410.3 231zM160 399.4l-9.1 22.7c-4 3.1-8.5 5.4-13.3 6.9L59.4 452l23-78.1c1.4-4.9 3.8-9.4 6.9-13.3l22.7-9.1 0 32c0 8.8 7.2 16 16 16l32 0zM362.7 18.7L348.3 33.2 325.7 55.8 314.3 67.1l33.9 33.9 62.1 62.1 33.9 33.9 11.3-11.3 22.6-22.6 14.5-14.5c25-25 25-65.5 0-90.5L453.3 18.7c-25-25-65.5-25-90.5 0zm-47.4 168l-144 144c-6.2 6.2-16.4 6.2-22.6 0s-6.2-16.4 0-22.6l144-144c6.2-6.2 16.4-6.2 22.6 0s6.2 16.4 0 22.6z"]
}, t0e = {
  prefix: "fas",
  iconName: "down-to-line",
  icon: [384, 512, ["arrow-alt-to-bottom"], "f34a", "M342.1 249.9L219.3 372.7c-7.2 7.2-17.1 11.3-27.3 11.3s-20.1-4.1-27.3-11.3L41.9 249.9c-6.4-6.4-9.9-15-9.9-24C32 207.2 47.2 192 65.9 192l62.1 0 0-128c0-17.7 14.3-32 32-32l64 0c17.7 0 32 14.3 32 32l0 128 62.1 0c18.7 0 33.9 15.2 33.9 33.9c0 9-3.6 17.6-9.9 24zM32 416l320 0c17.7 0 32 14.3 32 32s-14.3 32-32 32L32 480c-17.7 0-32-14.3-32-32s14.3-32 32-32z"]
}, r0e = {
  prefix: "fas",
  iconName: "copy",
  icon: [448, 512, [], "f0c5", "M208 0L332.1 0c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9L448 336c0 26.5-21.5 48-48 48l-192 0c-26.5 0-48-21.5-48-48l0-288c0-26.5 21.5-48 48-48zM48 128l80 0 0 64-64 0 0 256 192 0 0-32 64 0 0 48c0 26.5-21.5 48-48 48L48 512c-26.5 0-48-21.5-48-48L0 176c0-26.5 21.5-48 48-48z"]
};
async function n0e(e, t = {}, r) {
  return window.__TAURI_INTERNALS__.invoke(e, t, r);
}
var HY = /* @__PURE__ */ ((e) => (e.Hunyuan3d2 = "hunyuan_3d_2", e.Hunyuan3d2_0 = "hunyuan_3d_2_0", e.Hunyuan3d2_1 = "hunyuan_3d_2_1", e))(HY || {});
const o0e = async (e) => await n0e("enqueue_image_to_3d_object_command", {
  request: {
    image_media_token: e.image_media_token,
    model: e.model
  }
});
var k9;
(function(e) {
  e.WINDOW_RESIZED = "tauri://resize", e.WINDOW_MOVED = "tauri://move", e.WINDOW_CLOSE_REQUESTED = "tauri://close-requested", e.WINDOW_DESTROYED = "tauri://destroyed", e.WINDOW_FOCUS = "tauri://focus", e.WINDOW_BLUR = "tauri://blur", e.WINDOW_SCALE_FACTOR_CHANGED = "tauri://scale-change", e.WINDOW_THEME_CHANGED = "tauri://theme-changed", e.WINDOW_CREATED = "tauri://window-created", e.WEBVIEW_CREATED = "tauri://webview-created", e.DRAG_ENTER = "tauri://drag-enter", e.DRAG_OVER = "tauri://drag-over", e.DRAG_DROP = "tauri://drag-drop", e.DRAG_LEAVE = "tauri://drag-leave";
})(k9 || (k9 = {}));
const LP = "-", a0e = (e) => {
  const t = s0e(e), {
    conflictingClassGroups: r,
    conflictingClassGroupModifiers: n
  } = e;
  return {
    getClassGroupId: (o) => {
      const a = o.split(LP);
      return a[0] === "" && a.length !== 1 && a.shift(), GY(a, t) || i0e(o);
    },
    getConflictingClassGroupIds: (o, a) => {
      const i = r[o] || [];
      return a && n[o] ? [...i, ...n[o]] : i;
    }
  };
}, GY = (e, t) => {
  var r;
  if (e.length === 0)
    return t.classGroupId;
  const n = e[0], o = t.nextPart.get(n), a = o ? GY(e.slice(1), o) : void 0;
  if (a)
    return a;
  if (t.validators.length === 0)
    return;
  const i = e.join(LP);
  return (r = t.validators.find(({
    validator: s
  }) => s(i))) == null ? void 0 : r.classGroupId;
}, $9 = /^\[(.+)\]$/, i0e = (e) => {
  if ($9.test(e)) {
    const t = $9.exec(e)[1], r = t == null ? void 0 : t.substring(0, t.indexOf(":"));
    if (r)
      return "arbitrary.." + r;
  }
}, s0e = (e) => {
  const {
    theme: t,
    prefix: r
  } = e, n = {
    nextPart: /* @__PURE__ */ new Map(),
    validators: []
  };
  return c0e(Object.entries(e.classGroups), r).forEach(([o, a]) => {
    U3(a, n, o, t);
  }), n;
}, U3 = (e, t, r, n) => {
  e.forEach((o) => {
    if (typeof o == "string") {
      const a = o === "" ? t : O9(t, o);
      a.classGroupId = r;
      return;
    }
    if (typeof o == "function") {
      if (l0e(o)) {
        U3(o(n), t, r, n);
        return;
      }
      t.validators.push({
        validator: o,
        classGroupId: r
      });
      return;
    }
    Object.entries(o).forEach(([a, i]) => {
      U3(i, O9(t, a), r, n);
    });
  });
}, O9 = (e, t) => {
  let r = e;
  return t.split(LP).forEach((n) => {
    r.nextPart.has(n) || r.nextPart.set(n, {
      nextPart: /* @__PURE__ */ new Map(),
      validators: []
    }), r = r.nextPart.get(n);
  }), r;
}, l0e = (e) => e.isThemeGetter, c0e = (e, t) => t ? e.map(([r, n]) => {
  const o = n.map((a) => typeof a == "string" ? t + a : typeof a == "object" ? Object.fromEntries(Object.entries(a).map(([i, s]) => [t + i, s])) : a);
  return [r, o];
}) : e, u0e = (e) => {
  if (e < 1)
    return {
      get: () => {
      },
      set: () => {
      }
    };
  let t = 0, r = /* @__PURE__ */ new Map(), n = /* @__PURE__ */ new Map();
  const o = (a, i) => {
    r.set(a, i), t++, t > e && (t = 0, n = r, r = /* @__PURE__ */ new Map());
  };
  return {
    get(a) {
      let i = r.get(a);
      if (i !== void 0)
        return i;
      if ((i = n.get(a)) !== void 0)
        return o(a, i), i;
    },
    set(a, i) {
      r.has(a) ? r.set(a, i) : o(a, i);
    }
  };
}, qY = "!", f0e = (e) => {
  const {
    separator: t,
    experimentalParseClassName: r
  } = e, n = t.length === 1, o = t[0], a = t.length, i = (s) => {
    const l = [];
    let c = 0, u = 0, f;
    for (let m = 0; m < s.length; m++) {
      let w = s[m];
      if (c === 0) {
        if (w === o && (n || s.slice(m, m + a) === t)) {
          l.push(s.slice(u, m)), u = m + a;
          continue;
        }
        if (w === "/") {
          f = m;
          continue;
        }
      }
      w === "[" ? c++ : w === "]" && c--;
    }
    const p = l.length === 0 ? s : s.substring(u), v = p.startsWith(qY), x = v ? p.substring(1) : p, b = f && f > u ? f - u : void 0;
    return {
      modifiers: l,
      hasImportantModifier: v,
      baseClassName: x,
      maybePostfixModifierPosition: b
    };
  };
  return r ? (s) => r({
    className: s,
    parseClassName: i
  }) : i;
}, d0e = (e) => {
  if (e.length <= 1)
    return e;
  const t = [];
  let r = [];
  return e.forEach((n) => {
    n[0] === "[" ? (t.push(...r.sort(), n), r = []) : r.push(n);
  }), t.push(...r.sort()), t;
}, p0e = (e) => ({
  cache: u0e(e.cacheSize),
  parseClassName: f0e(e),
  ...a0e(e)
}), m0e = /\s+/, g0e = (e, t) => {
  const {
    parseClassName: r,
    getClassGroupId: n,
    getConflictingClassGroupIds: o
  } = t, a = [], i = e.trim().split(m0e);
  let s = "";
  for (let l = i.length - 1; l >= 0; l -= 1) {
    const c = i[l], {
      modifiers: u,
      hasImportantModifier: f,
      baseClassName: p,
      maybePostfixModifierPosition: v
    } = r(c);
    let x = !!v, b = n(x ? p.substring(0, v) : p);
    if (!b) {
      if (!x) {
        s = c + (s.length > 0 ? " " + s : s);
        continue;
      }
      if (b = n(p), !b) {
        s = c + (s.length > 0 ? " " + s : s);
        continue;
      }
      x = !1;
    }
    const m = d0e(u).join(":"), w = f ? m + qY : m, $ = w + b;
    if (a.includes($))
      continue;
    a.push($);
    const E = o(b, x);
    for (let S = 0; S < E.length; ++S) {
      const h = E[S];
      a.push(w + h);
    }
    s = c + (s.length > 0 ? " " + s : s);
  }
  return s;
};
function h0e() {
  let e = 0, t, r, n = "";
  for (; e < arguments.length; )
    (t = arguments[e++]) && (r = BY(t)) && (n && (n += " "), n += r);
  return n;
}
const BY = (e) => {
  if (typeof e == "string")
    return e;
  let t, r = "";
  for (let n = 0; n < e.length; n++)
    e[n] && (t = BY(e[n])) && (r && (r += " "), r += t);
  return r;
};
function b0e(e, ...t) {
  let r, n, o, a = i;
  function i(l) {
    const c = t.reduce((u, f) => f(u), e());
    return r = p0e(c), n = r.cache.get, o = r.cache.set, a = s, s(l);
  }
  function s(l) {
    const c = n(l);
    if (c)
      return c;
    const u = g0e(l, r);
    return o(l, u), u;
  }
  return function() {
    return a(h0e.apply(null, arguments));
  };
}
const Or = (e) => {
  const t = (r) => r[e] || [];
  return t.isThemeGetter = !0, t;
}, XY = /^\[(?:([a-z-]+):)?(.+)\]$/i, y0e = /^\d+\/\d+$/, v0e = /* @__PURE__ */ new Set(["px", "full", "screen"]), x0e = /^(\d+(\.\d+)?)?(xs|sm|md|lg|xl)$/, w0e = /\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\b(calc|min|max|clamp)\(.+\)|^0$/, k0e = /^(rgba?|hsla?|hwb|(ok)?(lab|lch))\(.+\)$/, $0e = /^(inset_)?-?((\d+)?\.?(\d+)[a-z]+|0)_-?((\d+)?\.?(\d+)[a-z]+|0)/, O0e = /^(url|image|image-set|cross-fade|element|(repeating-)?(linear|radial|conic)-gradient)\(.+\)$/, Ua = (e) => Vf(e) || v0e.has(e) || y0e.test(e), Vs = (e) => Ld(e, "length", j0e), Vf = (e) => !!e && !Number.isNaN(Number(e)), k2 = (e) => Ld(e, "number", Vf), xm = (e) => !!e && Number.isInteger(Number(e)), E0e = (e) => e.endsWith("%") && Vf(e.slice(0, -1)), ut = (e) => XY.test(e), Ws = (e) => x0e.test(e), S0e = /* @__PURE__ */ new Set(["length", "size", "percentage"]), P0e = (e) => Ld(e, S0e, KY), C0e = (e) => Ld(e, "position", KY), A0e = /* @__PURE__ */ new Set(["image", "url"]), _0e = (e) => Ld(e, A0e, T0e), N0e = (e) => Ld(e, "", I0e), wm = () => !0, Ld = (e, t, r) => {
  const n = XY.exec(e);
  return n ? n[1] ? typeof t == "string" ? n[1] === t : t.has(n[1]) : r(n[2]) : !1;
}, j0e = (e) => (
  // `colorFunctionRegex` check is necessary because color functions can have percentages in them which which would be incorrectly classified as lengths.
  // For example, `hsl(0 0% 0%)` would be classified as a length without this check.
  // I could also use lookbehind assertion in `lengthUnitRegex` but that isn't supported widely enough.
  w0e.test(e) && !k0e.test(e)
), KY = () => !1, I0e = (e) => $0e.test(e), T0e = (e) => O0e.test(e), M0e = () => {
  const e = Or("colors"), t = Or("spacing"), r = Or("blur"), n = Or("brightness"), o = Or("borderColor"), a = Or("borderRadius"), i = Or("borderSpacing"), s = Or("borderWidth"), l = Or("contrast"), c = Or("grayscale"), u = Or("hueRotate"), f = Or("invert"), p = Or("gap"), v = Or("gradientColorStops"), x = Or("gradientColorStopPositions"), b = Or("inset"), m = Or("margin"), w = Or("opacity"), $ = Or("padding"), E = Or("saturate"), S = Or("scale"), h = Or("sepia"), U = Or("skew"), G = Or("space"), Q = Or("translate"), Z = () => ["auto", "contain", "none"], X = () => ["auto", "hidden", "clip", "visible", "scroll"], J = () => ["auto", ut, t], I = () => [ut, t], te = () => ["", Ua, Vs], V = () => ["auto", Vf, ut], D = () => ["bottom", "center", "left", "left-bottom", "left-top", "right", "right-bottom", "right-top", "top"], F = () => ["solid", "dashed", "dotted", "double", "none"], R = () => ["normal", "multiply", "screen", "overlay", "darken", "lighten", "color-dodge", "color-burn", "hard-light", "soft-light", "difference", "exclusion", "hue", "saturation", "color", "luminosity"], H = () => ["start", "end", "center", "between", "around", "evenly", "stretch"], B = () => ["", "0", ut], g = () => ["auto", "avoid", "all", "avoid-page", "page", "left", "right", "column"], d = () => [Vf, ut];
  return {
    cacheSize: 500,
    separator: ":",
    theme: {
      colors: [wm],
      spacing: [Ua, Vs],
      blur: ["none", "", Ws, ut],
      brightness: d(),
      borderColor: [e],
      borderRadius: ["none", "", "full", Ws, ut],
      borderSpacing: I(),
      borderWidth: te(),
      contrast: d(),
      grayscale: B(),
      hueRotate: d(),
      invert: B(),
      gap: I(),
      gradientColorStops: [e],
      gradientColorStopPositions: [E0e, Vs],
      inset: J(),
      margin: J(),
      opacity: d(),
      padding: I(),
      saturate: d(),
      scale: d(),
      sepia: B(),
      skew: d(),
      space: I(),
      translate: I()
    },
    classGroups: {
      // Layout
      /**
       * Aspect Ratio
       * @see https://tailwindcss.com/docs/aspect-ratio
       */
      aspect: [{
        aspect: ["auto", "square", "video", ut]
      }],
      /**
       * Container
       * @see https://tailwindcss.com/docs/container
       */
      container: ["container"],
      /**
       * Columns
       * @see https://tailwindcss.com/docs/columns
       */
      columns: [{
        columns: [Ws]
      }],
      /**
       * Break After
       * @see https://tailwindcss.com/docs/break-after
       */
      "break-after": [{
        "break-after": g()
      }],
      /**
       * Break Before
       * @see https://tailwindcss.com/docs/break-before
       */
      "break-before": [{
        "break-before": g()
      }],
      /**
       * Break Inside
       * @see https://tailwindcss.com/docs/break-inside
       */
      "break-inside": [{
        "break-inside": ["auto", "avoid", "avoid-page", "avoid-column"]
      }],
      /**
       * Box Decoration Break
       * @see https://tailwindcss.com/docs/box-decoration-break
       */
      "box-decoration": [{
        "box-decoration": ["slice", "clone"]
      }],
      /**
       * Box Sizing
       * @see https://tailwindcss.com/docs/box-sizing
       */
      box: [{
        box: ["border", "content"]
      }],
      /**
       * Display
       * @see https://tailwindcss.com/docs/display
       */
      display: ["block", "inline-block", "inline", "flex", "inline-flex", "table", "inline-table", "table-caption", "table-cell", "table-column", "table-column-group", "table-footer-group", "table-header-group", "table-row-group", "table-row", "flow-root", "grid", "inline-grid", "contents", "list-item", "hidden"],
      /**
       * Floats
       * @see https://tailwindcss.com/docs/float
       */
      float: [{
        float: ["right", "left", "none", "start", "end"]
      }],
      /**
       * Clear
       * @see https://tailwindcss.com/docs/clear
       */
      clear: [{
        clear: ["left", "right", "both", "none", "start", "end"]
      }],
      /**
       * Isolation
       * @see https://tailwindcss.com/docs/isolation
       */
      isolation: ["isolate", "isolation-auto"],
      /**
       * Object Fit
       * @see https://tailwindcss.com/docs/object-fit
       */
      "object-fit": [{
        object: ["contain", "cover", "fill", "none", "scale-down"]
      }],
      /**
       * Object Position
       * @see https://tailwindcss.com/docs/object-position
       */
      "object-position": [{
        object: [...D(), ut]
      }],
      /**
       * Overflow
       * @see https://tailwindcss.com/docs/overflow
       */
      overflow: [{
        overflow: X()
      }],
      /**
       * Overflow X
       * @see https://tailwindcss.com/docs/overflow
       */
      "overflow-x": [{
        "overflow-x": X()
      }],
      /**
       * Overflow Y
       * @see https://tailwindcss.com/docs/overflow
       */
      "overflow-y": [{
        "overflow-y": X()
      }],
      /**
       * Overscroll Behavior
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      overscroll: [{
        overscroll: Z()
      }],
      /**
       * Overscroll Behavior X
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      "overscroll-x": [{
        "overscroll-x": Z()
      }],
      /**
       * Overscroll Behavior Y
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      "overscroll-y": [{
        "overscroll-y": Z()
      }],
      /**
       * Position
       * @see https://tailwindcss.com/docs/position
       */
      position: ["static", "fixed", "absolute", "relative", "sticky"],
      /**
       * Top / Right / Bottom / Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      inset: [{
        inset: [b]
      }],
      /**
       * Right / Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      "inset-x": [{
        "inset-x": [b]
      }],
      /**
       * Top / Bottom
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      "inset-y": [{
        "inset-y": [b]
      }],
      /**
       * Start
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      start: [{
        start: [b]
      }],
      /**
       * End
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      end: [{
        end: [b]
      }],
      /**
       * Top
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      top: [{
        top: [b]
      }],
      /**
       * Right
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      right: [{
        right: [b]
      }],
      /**
       * Bottom
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      bottom: [{
        bottom: [b]
      }],
      /**
       * Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      left: [{
        left: [b]
      }],
      /**
       * Visibility
       * @see https://tailwindcss.com/docs/visibility
       */
      visibility: ["visible", "invisible", "collapse"],
      /**
       * Z-Index
       * @see https://tailwindcss.com/docs/z-index
       */
      z: [{
        z: ["auto", xm, ut]
      }],
      // Flexbox and Grid
      /**
       * Flex Basis
       * @see https://tailwindcss.com/docs/flex-basis
       */
      basis: [{
        basis: J()
      }],
      /**
       * Flex Direction
       * @see https://tailwindcss.com/docs/flex-direction
       */
      "flex-direction": [{
        flex: ["row", "row-reverse", "col", "col-reverse"]
      }],
      /**
       * Flex Wrap
       * @see https://tailwindcss.com/docs/flex-wrap
       */
      "flex-wrap": [{
        flex: ["wrap", "wrap-reverse", "nowrap"]
      }],
      /**
       * Flex
       * @see https://tailwindcss.com/docs/flex
       */
      flex: [{
        flex: ["1", "auto", "initial", "none", ut]
      }],
      /**
       * Flex Grow
       * @see https://tailwindcss.com/docs/flex-grow
       */
      grow: [{
        grow: B()
      }],
      /**
       * Flex Shrink
       * @see https://tailwindcss.com/docs/flex-shrink
       */
      shrink: [{
        shrink: B()
      }],
      /**
       * Order
       * @see https://tailwindcss.com/docs/order
       */
      order: [{
        order: ["first", "last", "none", xm, ut]
      }],
      /**
       * Grid Template Columns
       * @see https://tailwindcss.com/docs/grid-template-columns
       */
      "grid-cols": [{
        "grid-cols": [wm]
      }],
      /**
       * Grid Column Start / End
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-start-end": [{
        col: ["auto", {
          span: ["full", xm, ut]
        }, ut]
      }],
      /**
       * Grid Column Start
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-start": [{
        "col-start": V()
      }],
      /**
       * Grid Column End
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-end": [{
        "col-end": V()
      }],
      /**
       * Grid Template Rows
       * @see https://tailwindcss.com/docs/grid-template-rows
       */
      "grid-rows": [{
        "grid-rows": [wm]
      }],
      /**
       * Grid Row Start / End
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-start-end": [{
        row: ["auto", {
          span: [xm, ut]
        }, ut]
      }],
      /**
       * Grid Row Start
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-start": [{
        "row-start": V()
      }],
      /**
       * Grid Row End
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-end": [{
        "row-end": V()
      }],
      /**
       * Grid Auto Flow
       * @see https://tailwindcss.com/docs/grid-auto-flow
       */
      "grid-flow": [{
        "grid-flow": ["row", "col", "dense", "row-dense", "col-dense"]
      }],
      /**
       * Grid Auto Columns
       * @see https://tailwindcss.com/docs/grid-auto-columns
       */
      "auto-cols": [{
        "auto-cols": ["auto", "min", "max", "fr", ut]
      }],
      /**
       * Grid Auto Rows
       * @see https://tailwindcss.com/docs/grid-auto-rows
       */
      "auto-rows": [{
        "auto-rows": ["auto", "min", "max", "fr", ut]
      }],
      /**
       * Gap
       * @see https://tailwindcss.com/docs/gap
       */
      gap: [{
        gap: [p]
      }],
      /**
       * Gap X
       * @see https://tailwindcss.com/docs/gap
       */
      "gap-x": [{
        "gap-x": [p]
      }],
      /**
       * Gap Y
       * @see https://tailwindcss.com/docs/gap
       */
      "gap-y": [{
        "gap-y": [p]
      }],
      /**
       * Justify Content
       * @see https://tailwindcss.com/docs/justify-content
       */
      "justify-content": [{
        justify: ["normal", ...H()]
      }],
      /**
       * Justify Items
       * @see https://tailwindcss.com/docs/justify-items
       */
      "justify-items": [{
        "justify-items": ["start", "end", "center", "stretch"]
      }],
      /**
       * Justify Self
       * @see https://tailwindcss.com/docs/justify-self
       */
      "justify-self": [{
        "justify-self": ["auto", "start", "end", "center", "stretch"]
      }],
      /**
       * Align Content
       * @see https://tailwindcss.com/docs/align-content
       */
      "align-content": [{
        content: ["normal", ...H(), "baseline"]
      }],
      /**
       * Align Items
       * @see https://tailwindcss.com/docs/align-items
       */
      "align-items": [{
        items: ["start", "end", "center", "baseline", "stretch"]
      }],
      /**
       * Align Self
       * @see https://tailwindcss.com/docs/align-self
       */
      "align-self": [{
        self: ["auto", "start", "end", "center", "stretch", "baseline"]
      }],
      /**
       * Place Content
       * @see https://tailwindcss.com/docs/place-content
       */
      "place-content": [{
        "place-content": [...H(), "baseline"]
      }],
      /**
       * Place Items
       * @see https://tailwindcss.com/docs/place-items
       */
      "place-items": [{
        "place-items": ["start", "end", "center", "baseline", "stretch"]
      }],
      /**
       * Place Self
       * @see https://tailwindcss.com/docs/place-self
       */
      "place-self": [{
        "place-self": ["auto", "start", "end", "center", "stretch"]
      }],
      // Spacing
      /**
       * Padding
       * @see https://tailwindcss.com/docs/padding
       */
      p: [{
        p: [$]
      }],
      /**
       * Padding X
       * @see https://tailwindcss.com/docs/padding
       */
      px: [{
        px: [$]
      }],
      /**
       * Padding Y
       * @see https://tailwindcss.com/docs/padding
       */
      py: [{
        py: [$]
      }],
      /**
       * Padding Start
       * @see https://tailwindcss.com/docs/padding
       */
      ps: [{
        ps: [$]
      }],
      /**
       * Padding End
       * @see https://tailwindcss.com/docs/padding
       */
      pe: [{
        pe: [$]
      }],
      /**
       * Padding Top
       * @see https://tailwindcss.com/docs/padding
       */
      pt: [{
        pt: [$]
      }],
      /**
       * Padding Right
       * @see https://tailwindcss.com/docs/padding
       */
      pr: [{
        pr: [$]
      }],
      /**
       * Padding Bottom
       * @see https://tailwindcss.com/docs/padding
       */
      pb: [{
        pb: [$]
      }],
      /**
       * Padding Left
       * @see https://tailwindcss.com/docs/padding
       */
      pl: [{
        pl: [$]
      }],
      /**
       * Margin
       * @see https://tailwindcss.com/docs/margin
       */
      m: [{
        m: [m]
      }],
      /**
       * Margin X
       * @see https://tailwindcss.com/docs/margin
       */
      mx: [{
        mx: [m]
      }],
      /**
       * Margin Y
       * @see https://tailwindcss.com/docs/margin
       */
      my: [{
        my: [m]
      }],
      /**
       * Margin Start
       * @see https://tailwindcss.com/docs/margin
       */
      ms: [{
        ms: [m]
      }],
      /**
       * Margin End
       * @see https://tailwindcss.com/docs/margin
       */
      me: [{
        me: [m]
      }],
      /**
       * Margin Top
       * @see https://tailwindcss.com/docs/margin
       */
      mt: [{
        mt: [m]
      }],
      /**
       * Margin Right
       * @see https://tailwindcss.com/docs/margin
       */
      mr: [{
        mr: [m]
      }],
      /**
       * Margin Bottom
       * @see https://tailwindcss.com/docs/margin
       */
      mb: [{
        mb: [m]
      }],
      /**
       * Margin Left
       * @see https://tailwindcss.com/docs/margin
       */
      ml: [{
        ml: [m]
      }],
      /**
       * Space Between X
       * @see https://tailwindcss.com/docs/space
       */
      "space-x": [{
        "space-x": [G]
      }],
      /**
       * Space Between X Reverse
       * @see https://tailwindcss.com/docs/space
       */
      "space-x-reverse": ["space-x-reverse"],
      /**
       * Space Between Y
       * @see https://tailwindcss.com/docs/space
       */
      "space-y": [{
        "space-y": [G]
      }],
      /**
       * Space Between Y Reverse
       * @see https://tailwindcss.com/docs/space
       */
      "space-y-reverse": ["space-y-reverse"],
      // Sizing
      /**
       * Width
       * @see https://tailwindcss.com/docs/width
       */
      w: [{
        w: ["auto", "min", "max", "fit", "svw", "lvw", "dvw", ut, t]
      }],
      /**
       * Min-Width
       * @see https://tailwindcss.com/docs/min-width
       */
      "min-w": [{
        "min-w": [ut, t, "min", "max", "fit"]
      }],
      /**
       * Max-Width
       * @see https://tailwindcss.com/docs/max-width
       */
      "max-w": [{
        "max-w": [ut, t, "none", "full", "min", "max", "fit", "prose", {
          screen: [Ws]
        }, Ws]
      }],
      /**
       * Height
       * @see https://tailwindcss.com/docs/height
       */
      h: [{
        h: [ut, t, "auto", "min", "max", "fit", "svh", "lvh", "dvh"]
      }],
      /**
       * Min-Height
       * @see https://tailwindcss.com/docs/min-height
       */
      "min-h": [{
        "min-h": [ut, t, "min", "max", "fit", "svh", "lvh", "dvh"]
      }],
      /**
       * Max-Height
       * @see https://tailwindcss.com/docs/max-height
       */
      "max-h": [{
        "max-h": [ut, t, "min", "max", "fit", "svh", "lvh", "dvh"]
      }],
      /**
       * Size
       * @see https://tailwindcss.com/docs/size
       */
      size: [{
        size: [ut, t, "auto", "min", "max", "fit"]
      }],
      // Typography
      /**
       * Font Size
       * @see https://tailwindcss.com/docs/font-size
       */
      "font-size": [{
        text: ["base", Ws, Vs]
      }],
      /**
       * Font Smoothing
       * @see https://tailwindcss.com/docs/font-smoothing
       */
      "font-smoothing": ["antialiased", "subpixel-antialiased"],
      /**
       * Font Style
       * @see https://tailwindcss.com/docs/font-style
       */
      "font-style": ["italic", "not-italic"],
      /**
       * Font Weight
       * @see https://tailwindcss.com/docs/font-weight
       */
      "font-weight": [{
        font: ["thin", "extralight", "light", "normal", "medium", "semibold", "bold", "extrabold", "black", k2]
      }],
      /**
       * Font Family
       * @see https://tailwindcss.com/docs/font-family
       */
      "font-family": [{
        font: [wm]
      }],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-normal": ["normal-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-ordinal": ["ordinal"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-slashed-zero": ["slashed-zero"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-figure": ["lining-nums", "oldstyle-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-spacing": ["proportional-nums", "tabular-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-fraction": ["diagonal-fractions", "stacked-fractions"],
      /**
       * Letter Spacing
       * @see https://tailwindcss.com/docs/letter-spacing
       */
      tracking: [{
        tracking: ["tighter", "tight", "normal", "wide", "wider", "widest", ut]
      }],
      /**
       * Line Clamp
       * @see https://tailwindcss.com/docs/line-clamp
       */
      "line-clamp": [{
        "line-clamp": ["none", Vf, k2]
      }],
      /**
       * Line Height
       * @see https://tailwindcss.com/docs/line-height
       */
      leading: [{
        leading: ["none", "tight", "snug", "normal", "relaxed", "loose", Ua, ut]
      }],
      /**
       * List Style Image
       * @see https://tailwindcss.com/docs/list-style-image
       */
      "list-image": [{
        "list-image": ["none", ut]
      }],
      /**
       * List Style Type
       * @see https://tailwindcss.com/docs/list-style-type
       */
      "list-style-type": [{
        list: ["none", "disc", "decimal", ut]
      }],
      /**
       * List Style Position
       * @see https://tailwindcss.com/docs/list-style-position
       */
      "list-style-position": [{
        list: ["inside", "outside"]
      }],
      /**
       * Placeholder Color
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/placeholder-color
       */
      "placeholder-color": [{
        placeholder: [e]
      }],
      /**
       * Placeholder Opacity
       * @see https://tailwindcss.com/docs/placeholder-opacity
       */
      "placeholder-opacity": [{
        "placeholder-opacity": [w]
      }],
      /**
       * Text Alignment
       * @see https://tailwindcss.com/docs/text-align
       */
      "text-alignment": [{
        text: ["left", "center", "right", "justify", "start", "end"]
      }],
      /**
       * Text Color
       * @see https://tailwindcss.com/docs/text-color
       */
      "text-color": [{
        text: [e]
      }],
      /**
       * Text Opacity
       * @see https://tailwindcss.com/docs/text-opacity
       */
      "text-opacity": [{
        "text-opacity": [w]
      }],
      /**
       * Text Decoration
       * @see https://tailwindcss.com/docs/text-decoration
       */
      "text-decoration": ["underline", "overline", "line-through", "no-underline"],
      /**
       * Text Decoration Style
       * @see https://tailwindcss.com/docs/text-decoration-style
       */
      "text-decoration-style": [{
        decoration: [...F(), "wavy"]
      }],
      /**
       * Text Decoration Thickness
       * @see https://tailwindcss.com/docs/text-decoration-thickness
       */
      "text-decoration-thickness": [{
        decoration: ["auto", "from-font", Ua, Vs]
      }],
      /**
       * Text Underline Offset
       * @see https://tailwindcss.com/docs/text-underline-offset
       */
      "underline-offset": [{
        "underline-offset": ["auto", Ua, ut]
      }],
      /**
       * Text Decoration Color
       * @see https://tailwindcss.com/docs/text-decoration-color
       */
      "text-decoration-color": [{
        decoration: [e]
      }],
      /**
       * Text Transform
       * @see https://tailwindcss.com/docs/text-transform
       */
      "text-transform": ["uppercase", "lowercase", "capitalize", "normal-case"],
      /**
       * Text Overflow
       * @see https://tailwindcss.com/docs/text-overflow
       */
      "text-overflow": ["truncate", "text-ellipsis", "text-clip"],
      /**
       * Text Wrap
       * @see https://tailwindcss.com/docs/text-wrap
       */
      "text-wrap": [{
        text: ["wrap", "nowrap", "balance", "pretty"]
      }],
      /**
       * Text Indent
       * @see https://tailwindcss.com/docs/text-indent
       */
      indent: [{
        indent: I()
      }],
      /**
       * Vertical Alignment
       * @see https://tailwindcss.com/docs/vertical-align
       */
      "vertical-align": [{
        align: ["baseline", "top", "middle", "bottom", "text-top", "text-bottom", "sub", "super", ut]
      }],
      /**
       * Whitespace
       * @see https://tailwindcss.com/docs/whitespace
       */
      whitespace: [{
        whitespace: ["normal", "nowrap", "pre", "pre-line", "pre-wrap", "break-spaces"]
      }],
      /**
       * Word Break
       * @see https://tailwindcss.com/docs/word-break
       */
      break: [{
        break: ["normal", "words", "all", "keep"]
      }],
      /**
       * Hyphens
       * @see https://tailwindcss.com/docs/hyphens
       */
      hyphens: [{
        hyphens: ["none", "manual", "auto"]
      }],
      /**
       * Content
       * @see https://tailwindcss.com/docs/content
       */
      content: [{
        content: ["none", ut]
      }],
      // Backgrounds
      /**
       * Background Attachment
       * @see https://tailwindcss.com/docs/background-attachment
       */
      "bg-attachment": [{
        bg: ["fixed", "local", "scroll"]
      }],
      /**
       * Background Clip
       * @see https://tailwindcss.com/docs/background-clip
       */
      "bg-clip": [{
        "bg-clip": ["border", "padding", "content", "text"]
      }],
      /**
       * Background Opacity
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/background-opacity
       */
      "bg-opacity": [{
        "bg-opacity": [w]
      }],
      /**
       * Background Origin
       * @see https://tailwindcss.com/docs/background-origin
       */
      "bg-origin": [{
        "bg-origin": ["border", "padding", "content"]
      }],
      /**
       * Background Position
       * @see https://tailwindcss.com/docs/background-position
       */
      "bg-position": [{
        bg: [...D(), C0e]
      }],
      /**
       * Background Repeat
       * @see https://tailwindcss.com/docs/background-repeat
       */
      "bg-repeat": [{
        bg: ["no-repeat", {
          repeat: ["", "x", "y", "round", "space"]
        }]
      }],
      /**
       * Background Size
       * @see https://tailwindcss.com/docs/background-size
       */
      "bg-size": [{
        bg: ["auto", "cover", "contain", P0e]
      }],
      /**
       * Background Image
       * @see https://tailwindcss.com/docs/background-image
       */
      "bg-image": [{
        bg: ["none", {
          "gradient-to": ["t", "tr", "r", "br", "b", "bl", "l", "tl"]
        }, _0e]
      }],
      /**
       * Background Color
       * @see https://tailwindcss.com/docs/background-color
       */
      "bg-color": [{
        bg: [e]
      }],
      /**
       * Gradient Color Stops From Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-from-pos": [{
        from: [x]
      }],
      /**
       * Gradient Color Stops Via Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-via-pos": [{
        via: [x]
      }],
      /**
       * Gradient Color Stops To Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-to-pos": [{
        to: [x]
      }],
      /**
       * Gradient Color Stops From
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-from": [{
        from: [v]
      }],
      /**
       * Gradient Color Stops Via
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-via": [{
        via: [v]
      }],
      /**
       * Gradient Color Stops To
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-to": [{
        to: [v]
      }],
      // Borders
      /**
       * Border Radius
       * @see https://tailwindcss.com/docs/border-radius
       */
      rounded: [{
        rounded: [a]
      }],
      /**
       * Border Radius Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-s": [{
        "rounded-s": [a]
      }],
      /**
       * Border Radius End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-e": [{
        "rounded-e": [a]
      }],
      /**
       * Border Radius Top
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-t": [{
        "rounded-t": [a]
      }],
      /**
       * Border Radius Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-r": [{
        "rounded-r": [a]
      }],
      /**
       * Border Radius Bottom
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-b": [{
        "rounded-b": [a]
      }],
      /**
       * Border Radius Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-l": [{
        "rounded-l": [a]
      }],
      /**
       * Border Radius Start Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-ss": [{
        "rounded-ss": [a]
      }],
      /**
       * Border Radius Start End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-se": [{
        "rounded-se": [a]
      }],
      /**
       * Border Radius End End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-ee": [{
        "rounded-ee": [a]
      }],
      /**
       * Border Radius End Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-es": [{
        "rounded-es": [a]
      }],
      /**
       * Border Radius Top Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-tl": [{
        "rounded-tl": [a]
      }],
      /**
       * Border Radius Top Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-tr": [{
        "rounded-tr": [a]
      }],
      /**
       * Border Radius Bottom Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-br": [{
        "rounded-br": [a]
      }],
      /**
       * Border Radius Bottom Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-bl": [{
        "rounded-bl": [a]
      }],
      /**
       * Border Width
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w": [{
        border: [s]
      }],
      /**
       * Border Width X
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-x": [{
        "border-x": [s]
      }],
      /**
       * Border Width Y
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-y": [{
        "border-y": [s]
      }],
      /**
       * Border Width Start
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-s": [{
        "border-s": [s]
      }],
      /**
       * Border Width End
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-e": [{
        "border-e": [s]
      }],
      /**
       * Border Width Top
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-t": [{
        "border-t": [s]
      }],
      /**
       * Border Width Right
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-r": [{
        "border-r": [s]
      }],
      /**
       * Border Width Bottom
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-b": [{
        "border-b": [s]
      }],
      /**
       * Border Width Left
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-l": [{
        "border-l": [s]
      }],
      /**
       * Border Opacity
       * @see https://tailwindcss.com/docs/border-opacity
       */
      "border-opacity": [{
        "border-opacity": [w]
      }],
      /**
       * Border Style
       * @see https://tailwindcss.com/docs/border-style
       */
      "border-style": [{
        border: [...F(), "hidden"]
      }],
      /**
       * Divide Width X
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-x": [{
        "divide-x": [s]
      }],
      /**
       * Divide Width X Reverse
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-x-reverse": ["divide-x-reverse"],
      /**
       * Divide Width Y
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-y": [{
        "divide-y": [s]
      }],
      /**
       * Divide Width Y Reverse
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-y-reverse": ["divide-y-reverse"],
      /**
       * Divide Opacity
       * @see https://tailwindcss.com/docs/divide-opacity
       */
      "divide-opacity": [{
        "divide-opacity": [w]
      }],
      /**
       * Divide Style
       * @see https://tailwindcss.com/docs/divide-style
       */
      "divide-style": [{
        divide: F()
      }],
      /**
       * Border Color
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color": [{
        border: [o]
      }],
      /**
       * Border Color X
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-x": [{
        "border-x": [o]
      }],
      /**
       * Border Color Y
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-y": [{
        "border-y": [o]
      }],
      /**
       * Border Color S
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-s": [{
        "border-s": [o]
      }],
      /**
       * Border Color E
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-e": [{
        "border-e": [o]
      }],
      /**
       * Border Color Top
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-t": [{
        "border-t": [o]
      }],
      /**
       * Border Color Right
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-r": [{
        "border-r": [o]
      }],
      /**
       * Border Color Bottom
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-b": [{
        "border-b": [o]
      }],
      /**
       * Border Color Left
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-l": [{
        "border-l": [o]
      }],
      /**
       * Divide Color
       * @see https://tailwindcss.com/docs/divide-color
       */
      "divide-color": [{
        divide: [o]
      }],
      /**
       * Outline Style
       * @see https://tailwindcss.com/docs/outline-style
       */
      "outline-style": [{
        outline: ["", ...F()]
      }],
      /**
       * Outline Offset
       * @see https://tailwindcss.com/docs/outline-offset
       */
      "outline-offset": [{
        "outline-offset": [Ua, ut]
      }],
      /**
       * Outline Width
       * @see https://tailwindcss.com/docs/outline-width
       */
      "outline-w": [{
        outline: [Ua, Vs]
      }],
      /**
       * Outline Color
       * @see https://tailwindcss.com/docs/outline-color
       */
      "outline-color": [{
        outline: [e]
      }],
      /**
       * Ring Width
       * @see https://tailwindcss.com/docs/ring-width
       */
      "ring-w": [{
        ring: te()
      }],
      /**
       * Ring Width Inset
       * @see https://tailwindcss.com/docs/ring-width
       */
      "ring-w-inset": ["ring-inset"],
      /**
       * Ring Color
       * @see https://tailwindcss.com/docs/ring-color
       */
      "ring-color": [{
        ring: [e]
      }],
      /**
       * Ring Opacity
       * @see https://tailwindcss.com/docs/ring-opacity
       */
      "ring-opacity": [{
        "ring-opacity": [w]
      }],
      /**
       * Ring Offset Width
       * @see https://tailwindcss.com/docs/ring-offset-width
       */
      "ring-offset-w": [{
        "ring-offset": [Ua, Vs]
      }],
      /**
       * Ring Offset Color
       * @see https://tailwindcss.com/docs/ring-offset-color
       */
      "ring-offset-color": [{
        "ring-offset": [e]
      }],
      // Effects
      /**
       * Box Shadow
       * @see https://tailwindcss.com/docs/box-shadow
       */
      shadow: [{
        shadow: ["", "inner", "none", Ws, N0e]
      }],
      /**
       * Box Shadow Color
       * @see https://tailwindcss.com/docs/box-shadow-color
       */
      "shadow-color": [{
        shadow: [wm]
      }],
      /**
       * Opacity
       * @see https://tailwindcss.com/docs/opacity
       */
      opacity: [{
        opacity: [w]
      }],
      /**
       * Mix Blend Mode
       * @see https://tailwindcss.com/docs/mix-blend-mode
       */
      "mix-blend": [{
        "mix-blend": [...R(), "plus-lighter", "plus-darker"]
      }],
      /**
       * Background Blend Mode
       * @see https://tailwindcss.com/docs/background-blend-mode
       */
      "bg-blend": [{
        "bg-blend": R()
      }],
      // Filters
      /**
       * Filter
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/filter
       */
      filter: [{
        filter: ["", "none"]
      }],
      /**
       * Blur
       * @see https://tailwindcss.com/docs/blur
       */
      blur: [{
        blur: [r]
      }],
      /**
       * Brightness
       * @see https://tailwindcss.com/docs/brightness
       */
      brightness: [{
        brightness: [n]
      }],
      /**
       * Contrast
       * @see https://tailwindcss.com/docs/contrast
       */
      contrast: [{
        contrast: [l]
      }],
      /**
       * Drop Shadow
       * @see https://tailwindcss.com/docs/drop-shadow
       */
      "drop-shadow": [{
        "drop-shadow": ["", "none", Ws, ut]
      }],
      /**
       * Grayscale
       * @see https://tailwindcss.com/docs/grayscale
       */
      grayscale: [{
        grayscale: [c]
      }],
      /**
       * Hue Rotate
       * @see https://tailwindcss.com/docs/hue-rotate
       */
      "hue-rotate": [{
        "hue-rotate": [u]
      }],
      /**
       * Invert
       * @see https://tailwindcss.com/docs/invert
       */
      invert: [{
        invert: [f]
      }],
      /**
       * Saturate
       * @see https://tailwindcss.com/docs/saturate
       */
      saturate: [{
        saturate: [E]
      }],
      /**
       * Sepia
       * @see https://tailwindcss.com/docs/sepia
       */
      sepia: [{
        sepia: [h]
      }],
      /**
       * Backdrop Filter
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/backdrop-filter
       */
      "backdrop-filter": [{
        "backdrop-filter": ["", "none"]
      }],
      /**
       * Backdrop Blur
       * @see https://tailwindcss.com/docs/backdrop-blur
       */
      "backdrop-blur": [{
        "backdrop-blur": [r]
      }],
      /**
       * Backdrop Brightness
       * @see https://tailwindcss.com/docs/backdrop-brightness
       */
      "backdrop-brightness": [{
        "backdrop-brightness": [n]
      }],
      /**
       * Backdrop Contrast
       * @see https://tailwindcss.com/docs/backdrop-contrast
       */
      "backdrop-contrast": [{
        "backdrop-contrast": [l]
      }],
      /**
       * Backdrop Grayscale
       * @see https://tailwindcss.com/docs/backdrop-grayscale
       */
      "backdrop-grayscale": [{
        "backdrop-grayscale": [c]
      }],
      /**
       * Backdrop Hue Rotate
       * @see https://tailwindcss.com/docs/backdrop-hue-rotate
       */
      "backdrop-hue-rotate": [{
        "backdrop-hue-rotate": [u]
      }],
      /**
       * Backdrop Invert
       * @see https://tailwindcss.com/docs/backdrop-invert
       */
      "backdrop-invert": [{
        "backdrop-invert": [f]
      }],
      /**
       * Backdrop Opacity
       * @see https://tailwindcss.com/docs/backdrop-opacity
       */
      "backdrop-opacity": [{
        "backdrop-opacity": [w]
      }],
      /**
       * Backdrop Saturate
       * @see https://tailwindcss.com/docs/backdrop-saturate
       */
      "backdrop-saturate": [{
        "backdrop-saturate": [E]
      }],
      /**
       * Backdrop Sepia
       * @see https://tailwindcss.com/docs/backdrop-sepia
       */
      "backdrop-sepia": [{
        "backdrop-sepia": [h]
      }],
      // Tables
      /**
       * Border Collapse
       * @see https://tailwindcss.com/docs/border-collapse
       */
      "border-collapse": [{
        border: ["collapse", "separate"]
      }],
      /**
       * Border Spacing
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing": [{
        "border-spacing": [i]
      }],
      /**
       * Border Spacing X
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing-x": [{
        "border-spacing-x": [i]
      }],
      /**
       * Border Spacing Y
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing-y": [{
        "border-spacing-y": [i]
      }],
      /**
       * Table Layout
       * @see https://tailwindcss.com/docs/table-layout
       */
      "table-layout": [{
        table: ["auto", "fixed"]
      }],
      /**
       * Caption Side
       * @see https://tailwindcss.com/docs/caption-side
       */
      caption: [{
        caption: ["top", "bottom"]
      }],
      // Transitions and Animation
      /**
       * Tranisition Property
       * @see https://tailwindcss.com/docs/transition-property
       */
      transition: [{
        transition: ["none", "all", "", "colors", "opacity", "shadow", "transform", ut]
      }],
      /**
       * Transition Duration
       * @see https://tailwindcss.com/docs/transition-duration
       */
      duration: [{
        duration: d()
      }],
      /**
       * Transition Timing Function
       * @see https://tailwindcss.com/docs/transition-timing-function
       */
      ease: [{
        ease: ["linear", "in", "out", "in-out", ut]
      }],
      /**
       * Transition Delay
       * @see https://tailwindcss.com/docs/transition-delay
       */
      delay: [{
        delay: d()
      }],
      /**
       * Animation
       * @see https://tailwindcss.com/docs/animation
       */
      animate: [{
        animate: ["none", "spin", "ping", "pulse", "bounce", ut]
      }],
      // Transforms
      /**
       * Transform
       * @see https://tailwindcss.com/docs/transform
       */
      transform: [{
        transform: ["", "gpu", "none"]
      }],
      /**
       * Scale
       * @see https://tailwindcss.com/docs/scale
       */
      scale: [{
        scale: [S]
      }],
      /**
       * Scale X
       * @see https://tailwindcss.com/docs/scale
       */
      "scale-x": [{
        "scale-x": [S]
      }],
      /**
       * Scale Y
       * @see https://tailwindcss.com/docs/scale
       */
      "scale-y": [{
        "scale-y": [S]
      }],
      /**
       * Rotate
       * @see https://tailwindcss.com/docs/rotate
       */
      rotate: [{
        rotate: [xm, ut]
      }],
      /**
       * Translate X
       * @see https://tailwindcss.com/docs/translate
       */
      "translate-x": [{
        "translate-x": [Q]
      }],
      /**
       * Translate Y
       * @see https://tailwindcss.com/docs/translate
       */
      "translate-y": [{
        "translate-y": [Q]
      }],
      /**
       * Skew X
       * @see https://tailwindcss.com/docs/skew
       */
      "skew-x": [{
        "skew-x": [U]
      }],
      /**
       * Skew Y
       * @see https://tailwindcss.com/docs/skew
       */
      "skew-y": [{
        "skew-y": [U]
      }],
      /**
       * Transform Origin
       * @see https://tailwindcss.com/docs/transform-origin
       */
      "transform-origin": [{
        origin: ["center", "top", "top-right", "right", "bottom-right", "bottom", "bottom-left", "left", "top-left", ut]
      }],
      // Interactivity
      /**
       * Accent Color
       * @see https://tailwindcss.com/docs/accent-color
       */
      accent: [{
        accent: ["auto", e]
      }],
      /**
       * Appearance
       * @see https://tailwindcss.com/docs/appearance
       */
      appearance: [{
        appearance: ["none", "auto"]
      }],
      /**
       * Cursor
       * @see https://tailwindcss.com/docs/cursor
       */
      cursor: [{
        cursor: ["auto", "default", "pointer", "wait", "text", "move", "help", "not-allowed", "none", "context-menu", "progress", "cell", "crosshair", "vertical-text", "alias", "copy", "no-drop", "grab", "grabbing", "all-scroll", "col-resize", "row-resize", "n-resize", "e-resize", "s-resize", "w-resize", "ne-resize", "nw-resize", "se-resize", "sw-resize", "ew-resize", "ns-resize", "nesw-resize", "nwse-resize", "zoom-in", "zoom-out", ut]
      }],
      /**
       * Caret Color
       * @see https://tailwindcss.com/docs/just-in-time-mode#caret-color-utilities
       */
      "caret-color": [{
        caret: [e]
      }],
      /**
       * Pointer Events
       * @see https://tailwindcss.com/docs/pointer-events
       */
      "pointer-events": [{
        "pointer-events": ["none", "auto"]
      }],
      /**
       * Resize
       * @see https://tailwindcss.com/docs/resize
       */
      resize: [{
        resize: ["none", "y", "x", ""]
      }],
      /**
       * Scroll Behavior
       * @see https://tailwindcss.com/docs/scroll-behavior
       */
      "scroll-behavior": [{
        scroll: ["auto", "smooth"]
      }],
      /**
       * Scroll Margin
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-m": [{
        "scroll-m": I()
      }],
      /**
       * Scroll Margin X
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mx": [{
        "scroll-mx": I()
      }],
      /**
       * Scroll Margin Y
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-my": [{
        "scroll-my": I()
      }],
      /**
       * Scroll Margin Start
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-ms": [{
        "scroll-ms": I()
      }],
      /**
       * Scroll Margin End
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-me": [{
        "scroll-me": I()
      }],
      /**
       * Scroll Margin Top
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mt": [{
        "scroll-mt": I()
      }],
      /**
       * Scroll Margin Right
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mr": [{
        "scroll-mr": I()
      }],
      /**
       * Scroll Margin Bottom
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mb": [{
        "scroll-mb": I()
      }],
      /**
       * Scroll Margin Left
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-ml": [{
        "scroll-ml": I()
      }],
      /**
       * Scroll Padding
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-p": [{
        "scroll-p": I()
      }],
      /**
       * Scroll Padding X
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-px": [{
        "scroll-px": I()
      }],
      /**
       * Scroll Padding Y
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-py": [{
        "scroll-py": I()
      }],
      /**
       * Scroll Padding Start
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-ps": [{
        "scroll-ps": I()
      }],
      /**
       * Scroll Padding End
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pe": [{
        "scroll-pe": I()
      }],
      /**
       * Scroll Padding Top
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pt": [{
        "scroll-pt": I()
      }],
      /**
       * Scroll Padding Right
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pr": [{
        "scroll-pr": I()
      }],
      /**
       * Scroll Padding Bottom
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pb": [{
        "scroll-pb": I()
      }],
      /**
       * Scroll Padding Left
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pl": [{
        "scroll-pl": I()
      }],
      /**
       * Scroll Snap Align
       * @see https://tailwindcss.com/docs/scroll-snap-align
       */
      "snap-align": [{
        snap: ["start", "end", "center", "align-none"]
      }],
      /**
       * Scroll Snap Stop
       * @see https://tailwindcss.com/docs/scroll-snap-stop
       */
      "snap-stop": [{
        snap: ["normal", "always"]
      }],
      /**
       * Scroll Snap Type
       * @see https://tailwindcss.com/docs/scroll-snap-type
       */
      "snap-type": [{
        snap: ["none", "x", "y", "both"]
      }],
      /**
       * Scroll Snap Type Strictness
       * @see https://tailwindcss.com/docs/scroll-snap-type
       */
      "snap-strictness": [{
        snap: ["mandatory", "proximity"]
      }],
      /**
       * Touch Action
       * @see https://tailwindcss.com/docs/touch-action
       */
      touch: [{
        touch: ["auto", "none", "manipulation"]
      }],
      /**
       * Touch Action X
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-x": [{
        "touch-pan": ["x", "left", "right"]
      }],
      /**
       * Touch Action Y
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-y": [{
        "touch-pan": ["y", "up", "down"]
      }],
      /**
       * Touch Action Pinch Zoom
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-pz": ["touch-pinch-zoom"],
      /**
       * User Select
       * @see https://tailwindcss.com/docs/user-select
       */
      select: [{
        select: ["none", "text", "all", "auto"]
      }],
      /**
       * Will Change
       * @see https://tailwindcss.com/docs/will-change
       */
      "will-change": [{
        "will-change": ["auto", "scroll", "contents", "transform", ut]
      }],
      // SVG
      /**
       * Fill
       * @see https://tailwindcss.com/docs/fill
       */
      fill: [{
        fill: [e, "none"]
      }],
      /**
       * Stroke Width
       * @see https://tailwindcss.com/docs/stroke-width
       */
      "stroke-w": [{
        stroke: [Ua, Vs, k2]
      }],
      /**
       * Stroke
       * @see https://tailwindcss.com/docs/stroke
       */
      stroke: [{
        stroke: [e, "none"]
      }],
      // Accessibility
      /**
       * Screen Readers
       * @see https://tailwindcss.com/docs/screen-readers
       */
      sr: ["sr-only", "not-sr-only"],
      /**
       * Forced Color Adjust
       * @see https://tailwindcss.com/docs/forced-color-adjust
       */
      "forced-color-adjust": [{
        "forced-color-adjust": ["auto", "none"]
      }]
    },
    conflictingClassGroups: {
      overflow: ["overflow-x", "overflow-y"],
      overscroll: ["overscroll-x", "overscroll-y"],
      inset: ["inset-x", "inset-y", "start", "end", "top", "right", "bottom", "left"],
      "inset-x": ["right", "left"],
      "inset-y": ["top", "bottom"],
      flex: ["basis", "grow", "shrink"],
      gap: ["gap-x", "gap-y"],
      p: ["px", "py", "ps", "pe", "pt", "pr", "pb", "pl"],
      px: ["pr", "pl"],
      py: ["pt", "pb"],
      m: ["mx", "my", "ms", "me", "mt", "mr", "mb", "ml"],
      mx: ["mr", "ml"],
      my: ["mt", "mb"],
      size: ["w", "h"],
      "font-size": ["leading"],
      "fvn-normal": ["fvn-ordinal", "fvn-slashed-zero", "fvn-figure", "fvn-spacing", "fvn-fraction"],
      "fvn-ordinal": ["fvn-normal"],
      "fvn-slashed-zero": ["fvn-normal"],
      "fvn-figure": ["fvn-normal"],
      "fvn-spacing": ["fvn-normal"],
      "fvn-fraction": ["fvn-normal"],
      "line-clamp": ["display", "overflow"],
      rounded: ["rounded-s", "rounded-e", "rounded-t", "rounded-r", "rounded-b", "rounded-l", "rounded-ss", "rounded-se", "rounded-ee", "rounded-es", "rounded-tl", "rounded-tr", "rounded-br", "rounded-bl"],
      "rounded-s": ["rounded-ss", "rounded-es"],
      "rounded-e": ["rounded-se", "rounded-ee"],
      "rounded-t": ["rounded-tl", "rounded-tr"],
      "rounded-r": ["rounded-tr", "rounded-br"],
      "rounded-b": ["rounded-br", "rounded-bl"],
      "rounded-l": ["rounded-tl", "rounded-bl"],
      "border-spacing": ["border-spacing-x", "border-spacing-y"],
      "border-w": ["border-w-s", "border-w-e", "border-w-t", "border-w-r", "border-w-b", "border-w-l"],
      "border-w-x": ["border-w-r", "border-w-l"],
      "border-w-y": ["border-w-t", "border-w-b"],
      "border-color": ["border-color-s", "border-color-e", "border-color-t", "border-color-r", "border-color-b", "border-color-l"],
      "border-color-x": ["border-color-r", "border-color-l"],
      "border-color-y": ["border-color-t", "border-color-b"],
      "scroll-m": ["scroll-mx", "scroll-my", "scroll-ms", "scroll-me", "scroll-mt", "scroll-mr", "scroll-mb", "scroll-ml"],
      "scroll-mx": ["scroll-mr", "scroll-ml"],
      "scroll-my": ["scroll-mt", "scroll-mb"],
      "scroll-p": ["scroll-px", "scroll-py", "scroll-ps", "scroll-pe", "scroll-pt", "scroll-pr", "scroll-pb", "scroll-pl"],
      "scroll-px": ["scroll-pr", "scroll-pl"],
      "scroll-py": ["scroll-pt", "scroll-pb"],
      touch: ["touch-x", "touch-y", "touch-pz"],
      "touch-x": ["touch"],
      "touch-y": ["touch"],
      "touch-pz": ["touch"]
    },
    conflictingClassGroupModifiers: {
      "font-size": ["leading"]
    }
  };
}, R0e = /* @__PURE__ */ b0e(M0e), E9 = ({
  className: e,
  thickness: t = 4
}) => /* @__PURE__ */ Pe(
  "svg",
  {
    className: R0e("h-6 w-6 animate-spin", e),
    xmlns: "http://www.w3.org/2000/svg",
    fill: "none",
    viewBox: "0 0 24 24",
    children: [
      /* @__PURE__ */ q(
        "circle",
        {
          className: "opacity-25",
          cx: "12",
          cy: "12",
          r: "10",
          stroke: "currentColor",
          strokeWidth: t
        }
      ),
      /* @__PURE__ */ q(
        "path",
        {
          className: "opacity-75",
          fill: "currentColor",
          d: "M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
        }
      )
    ]
  }
), ry = function(e, t) {
  console.debug("gtagEvent", e, t), window.gtag("event", e);
};
var z0e = Object.defineProperty, F0e = (e, t, r) => t in e ? z0e(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r }) : e[t] = r, JY = (e, t, r) => F0e(e, typeof t != "symbol" ? t + "" : t, r);
const D0e = "https://api.storyteller.ai";
window.STORYTELLER_API_HOST_STORE = void 0;
let L0e = class QY {
  constructor(t) {
    JY(this, "apiSchemeAndHost"), this.apiSchemeAndHost = t;
  }
  // NB(bt,2025-09-25): 'nx' is creating multiple copies of the library with name 
  //   mangling, so the singleton pattern fails to resolve to a single instance.
  // public static getInstance(): StorytellerApiHostStore {
  //   if (StorytellerApiHostStore.instance !== undefined) {
  //     return StorytellerApiHostStore.instance;
  //   }
  //   const instance = new StorytellerApiHostStore(DEFAULT_API_HOST);
  //   StorytellerApiHostStore.instance = instance;
  //   return instance;
  // }
  static getInstance() {
    if (window.STORYTELLER_API_HOST_STORE !== void 0)
      return window.STORYTELLER_API_HOST_STORE;
    const t = new QY(D0e);
    return window.STORYTELLER_API_HOST_STORE = t, t;
  }
  /** Get the API scheme and host. */
  getApiSchemeAndHost() {
    return console.debug("StorytellerApiHostStore.getApiSchemeAndHost()", this.apiSchemeAndHost, this.constructor.name), this.apiSchemeAndHost;
  }
  /** 
   * Externally update the API host. 
   * This is used to sync with Tauri for enabling easier development.
   */
  setApiSchemeAndHost(t) {
    if (console.debug("StorytellerApiHostStore.setApiSchemeAndHost()", t, this.constructor.name), !t.startsWith("http://") && !t.startsWith("https://"))
      throw new Error(`Scheme not included in URL: ${t}`);
    const r = "https://".lastIndexOf("/");
    if (t.lastIndexOf("/") > r)
      throw new Error(`Path components should not be included in URL: ${t}`);
    this.apiSchemeAndHost = t;
  }
};
var rg = /* @__PURE__ */ ((e) => (e.GOOGLE_API = "https://storage.googleapis.com", e.FUNNEL_API = "https://style.storyteller.ai", e.CDN_API = "https://cdn.storyteller.ai", e.GRAVATAR_API = "https://www.gravatar.com", e))(rg || {}), $2 = { exports: {} }, Et = {};
/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var S9;
function V0e() {
  if (S9) return Et;
  S9 = 1;
  var e = Symbol.for("react.element"), t = Symbol.for("react.portal"), r = Symbol.for("react.fragment"), n = Symbol.for("react.strict_mode"), o = Symbol.for("react.profiler"), a = Symbol.for("react.provider"), i = Symbol.for("react.context"), s = Symbol.for("react.forward_ref"), l = Symbol.for("react.suspense"), c = Symbol.for("react.memo"), u = Symbol.for("react.lazy"), f = Symbol.iterator;
  function p(d) {
    return d === null || typeof d != "object" ? null : (d = f && d[f] || d["@@iterator"], typeof d == "function" ? d : null);
  }
  var v = { isMounted: function() {
    return !1;
  }, enqueueForceUpdate: function() {
  }, enqueueReplaceState: function() {
  }, enqueueSetState: function() {
  } }, x = Object.assign, b = {};
  function m(d, O, C) {
    this.props = d, this.context = O, this.refs = b, this.updater = C || v;
  }
  m.prototype.isReactComponent = {}, m.prototype.setState = function(d, O) {
    if (typeof d != "object" && typeof d != "function" && d != null) throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
    this.updater.enqueueSetState(this, d, O, "setState");
  }, m.prototype.forceUpdate = function(d) {
    this.updater.enqueueForceUpdate(this, d, "forceUpdate");
  };
  function w() {
  }
  w.prototype = m.prototype;
  function $(d, O, C) {
    this.props = d, this.context = O, this.refs = b, this.updater = C || v;
  }
  var E = $.prototype = new w();
  E.constructor = $, x(E, m.prototype), E.isPureReactComponent = !0;
  var S = Array.isArray, h = Object.prototype.hasOwnProperty, U = { current: null }, G = { key: !0, ref: !0, __self: !0, __source: !0 };
  function Q(d, O, C) {
    var A, N = {}, j = null, _ = null;
    if (O != null) for (A in O.ref !== void 0 && (_ = O.ref), O.key !== void 0 && (j = "" + O.key), O) h.call(O, A) && !G.hasOwnProperty(A) && (N[A] = O[A]);
    var T = arguments.length - 2;
    if (T === 1) N.children = C;
    else if (1 < T) {
      for (var M = Array(T), z = 0; z < T; z++) M[z] = arguments[z + 2];
      N.children = M;
    }
    if (d && d.defaultProps) for (A in T = d.defaultProps, T) N[A] === void 0 && (N[A] = T[A]);
    return { $$typeof: e, type: d, key: j, ref: _, props: N, _owner: U.current };
  }
  function Z(d, O) {
    return { $$typeof: e, type: d.type, key: O, ref: d.ref, props: d.props, _owner: d._owner };
  }
  function X(d) {
    return typeof d == "object" && d !== null && d.$$typeof === e;
  }
  function J(d) {
    var O = { "=": "=0", ":": "=2" };
    return "$" + d.replace(/[=:]/g, function(C) {
      return O[C];
    });
  }
  var I = /\/+/g;
  function te(d, O) {
    return typeof d == "object" && d !== null && d.key != null ? J("" + d.key) : O.toString(36);
  }
  function V(d, O, C, A, N) {
    var j = typeof d;
    (j === "undefined" || j === "boolean") && (d = null);
    var _ = !1;
    if (d === null) _ = !0;
    else switch (j) {
      case "string":
      case "number":
        _ = !0;
        break;
      case "object":
        switch (d.$$typeof) {
          case e:
          case t:
            _ = !0;
        }
    }
    if (_) return _ = d, N = N(_), d = A === "" ? "." + te(_, 0) : A, S(N) ? (C = "", d != null && (C = d.replace(I, "$&/") + "/"), V(N, O, C, "", function(z) {
      return z;
    })) : N != null && (X(N) && (N = Z(N, C + (!N.key || _ && _.key === N.key ? "" : ("" + N.key).replace(I, "$&/") + "/") + d)), O.push(N)), 1;
    if (_ = 0, A = A === "" ? "." : A + ":", S(d)) for (var T = 0; T < d.length; T++) {
      j = d[T];
      var M = A + te(j, T);
      _ += V(j, O, C, M, N);
    }
    else if (M = p(d), typeof M == "function") for (d = M.call(d), T = 0; !(j = d.next()).done; ) j = j.value, M = A + te(j, T++), _ += V(j, O, C, M, N);
    else if (j === "object") throw O = String(d), Error("Objects are not valid as a React child (found: " + (O === "[object Object]" ? "object with keys {" + Object.keys(d).join(", ") + "}" : O) + "). If you meant to render a collection of children, use an array instead.");
    return _;
  }
  function D(d, O, C) {
    if (d == null) return d;
    var A = [], N = 0;
    return V(d, A, "", "", function(j) {
      return O.call(C, j, N++);
    }), A;
  }
  function F(d) {
    if (d._status === -1) {
      var O = d._result;
      O = O(), O.then(function(C) {
        (d._status === 0 || d._status === -1) && (d._status = 1, d._result = C);
      }, function(C) {
        (d._status === 0 || d._status === -1) && (d._status = 2, d._result = C);
      }), d._status === -1 && (d._status = 0, d._result = O);
    }
    if (d._status === 1) return d._result.default;
    throw d._result;
  }
  var R = { current: null }, H = { transition: null }, B = { ReactCurrentDispatcher: R, ReactCurrentBatchConfig: H, ReactCurrentOwner: U };
  function g() {
    throw Error("act(...) is not supported in production builds of React.");
  }
  return Et.Children = { map: D, forEach: function(d, O, C) {
    D(d, function() {
      O.apply(this, arguments);
    }, C);
  }, count: function(d) {
    var O = 0;
    return D(d, function() {
      O++;
    }), O;
  }, toArray: function(d) {
    return D(d, function(O) {
      return O;
    }) || [];
  }, only: function(d) {
    if (!X(d)) throw Error("React.Children.only expected to receive a single React element child.");
    return d;
  } }, Et.Component = m, Et.Fragment = r, Et.Profiler = o, Et.PureComponent = $, Et.StrictMode = n, Et.Suspense = l, Et.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = B, Et.act = g, Et.cloneElement = function(d, O, C) {
    if (d == null) throw Error("React.cloneElement(...): The argument must be a React element, but you passed " + d + ".");
    var A = x({}, d.props), N = d.key, j = d.ref, _ = d._owner;
    if (O != null) {
      if (O.ref !== void 0 && (j = O.ref, _ = U.current), O.key !== void 0 && (N = "" + O.key), d.type && d.type.defaultProps) var T = d.type.defaultProps;
      for (M in O) h.call(O, M) && !G.hasOwnProperty(M) && (A[M] = O[M] === void 0 && T !== void 0 ? T[M] : O[M]);
    }
    var M = arguments.length - 2;
    if (M === 1) A.children = C;
    else if (1 < M) {
      T = Array(M);
      for (var z = 0; z < M; z++) T[z] = arguments[z + 2];
      A.children = T;
    }
    return { $$typeof: e, type: d.type, key: N, ref: j, props: A, _owner: _ };
  }, Et.createContext = function(d) {
    return d = { $$typeof: i, _currentValue: d, _currentValue2: d, _threadCount: 0, Provider: null, Consumer: null, _defaultValue: null, _globalName: null }, d.Provider = { $$typeof: a, _context: d }, d.Consumer = d;
  }, Et.createElement = Q, Et.createFactory = function(d) {
    var O = Q.bind(null, d);
    return O.type = d, O;
  }, Et.createRef = function() {
    return { current: null };
  }, Et.forwardRef = function(d) {
    return { $$typeof: s, render: d };
  }, Et.isValidElement = X, Et.lazy = function(d) {
    return { $$typeof: u, _payload: { _status: -1, _result: d }, _init: F };
  }, Et.memo = function(d, O) {
    return { $$typeof: c, type: d, compare: O === void 0 ? null : O };
  }, Et.startTransition = function(d) {
    var O = H.transition;
    H.transition = {};
    try {
      d();
    } finally {
      H.transition = O;
    }
  }, Et.unstable_act = g, Et.useCallback = function(d, O) {
    return R.current.useCallback(d, O);
  }, Et.useContext = function(d) {
    return R.current.useContext(d);
  }, Et.useDebugValue = function() {
  }, Et.useDeferredValue = function(d) {
    return R.current.useDeferredValue(d);
  }, Et.useEffect = function(d, O) {
    return R.current.useEffect(d, O);
  }, Et.useId = function() {
    return R.current.useId();
  }, Et.useImperativeHandle = function(d, O, C) {
    return R.current.useImperativeHandle(d, O, C);
  }, Et.useInsertionEffect = function(d, O) {
    return R.current.useInsertionEffect(d, O);
  }, Et.useLayoutEffect = function(d, O) {
    return R.current.useLayoutEffect(d, O);
  }, Et.useMemo = function(d, O) {
    return R.current.useMemo(d, O);
  }, Et.useReducer = function(d, O, C) {
    return R.current.useReducer(d, O, C);
  }, Et.useRef = function(d) {
    return R.current.useRef(d);
  }, Et.useState = function(d) {
    return R.current.useState(d);
  }, Et.useSyncExternalStore = function(d, O, C) {
    return R.current.useSyncExternalStore(d, O, C);
  }, Et.useTransition = function() {
    return R.current.useTransition();
  }, Et.version = "18.3.1", Et;
}
var rv = { exports: {} };
/**
 * @license React
 * react.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
rv.exports;
var P9;
function W0e() {
  return P9 || (P9 = 1, function(e, t) {
    process.env.NODE_ENV !== "production" && function() {
      typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
      var r = "18.3.1", n = Symbol.for("react.element"), o = Symbol.for("react.portal"), a = Symbol.for("react.fragment"), i = Symbol.for("react.strict_mode"), s = Symbol.for("react.profiler"), l = Symbol.for("react.provider"), c = Symbol.for("react.context"), u = Symbol.for("react.forward_ref"), f = Symbol.for("react.suspense"), p = Symbol.for("react.suspense_list"), v = Symbol.for("react.memo"), x = Symbol.for("react.lazy"), b = Symbol.for("react.offscreen"), m = Symbol.iterator, w = "@@iterator";
      function $(y) {
        if (y === null || typeof y != "object")
          return null;
        var P = m && y[m] || y[w];
        return typeof P == "function" ? P : null;
      }
      var E = {
        /**
         * @internal
         * @type {ReactComponent}
         */
        current: null
      }, S = {
        transition: null
      }, h = {
        current: null,
        // Used to reproduce behavior of `batchedUpdates` in legacy mode.
        isBatchingLegacy: !1,
        didScheduleLegacyUpdate: !1
      }, U = {
        /**
         * @internal
         * @type {ReactComponent}
         */
        current: null
      }, G = {}, Q = null;
      function Z(y) {
        Q = y;
      }
      G.setExtraStackFrame = function(y) {
        Q = y;
      }, G.getCurrentStack = null, G.getStackAddendum = function() {
        var y = "";
        Q && (y += Q);
        var P = G.getCurrentStack;
        return P && (y += P() || ""), y;
      };
      var X = !1, J = !1, I = !1, te = !1, V = !1, D = {
        ReactCurrentDispatcher: E,
        ReactCurrentBatchConfig: S,
        ReactCurrentOwner: U
      };
      D.ReactDebugCurrentFrame = G, D.ReactCurrentActQueue = h;
      function F(y) {
        {
          for (var P = arguments.length, L = new Array(P > 1 ? P - 1 : 0), W = 1; W < P; W++)
            L[W - 1] = arguments[W];
          H("warn", y, L);
        }
      }
      function R(y) {
        {
          for (var P = arguments.length, L = new Array(P > 1 ? P - 1 : 0), W = 1; W < P; W++)
            L[W - 1] = arguments[W];
          H("error", y, L);
        }
      }
      function H(y, P, L) {
        {
          var W = D.ReactDebugCurrentFrame, K = W.getStackAddendum();
          K !== "" && (P += "%s", L = L.concat([K]));
          var ne = L.map(function(re) {
            return String(re);
          });
          ne.unshift("Warning: " + P), Function.prototype.apply.call(console[y], console, ne);
        }
      }
      var B = {};
      function g(y, P) {
        {
          var L = y.constructor, W = L && (L.displayName || L.name) || "ReactClass", K = W + "." + P;
          if (B[K])
            return;
          R("Can't call %s on a component that is not yet mounted. This is a no-op, but it might indicate a bug in your application. Instead, assign to `this.state` directly or define a `state = {};` class property with the desired state in the %s component.", P, W), B[K] = !0;
        }
      }
      var d = {
        /**
         * Checks whether or not this composite component is mounted.
         * @param {ReactClass} publicInstance The instance we want to test.
         * @return {boolean} True if mounted, false otherwise.
         * @protected
         * @final
         */
        isMounted: function(y) {
          return !1;
        },
        /**
         * Forces an update. This should only be invoked when it is known with
         * certainty that we are **not** in a DOM transaction.
         *
         * You may want to call this when you know that some deeper aspect of the
         * component's state has changed but `setState` was not called.
         *
         * This will not invoke `shouldComponentUpdate`, but it will invoke
         * `componentWillUpdate` and `componentDidUpdate`.
         *
         * @param {ReactClass} publicInstance The instance that should rerender.
         * @param {?function} callback Called after component is updated.
         * @param {?string} callerName name of the calling function in the public API.
         * @internal
         */
        enqueueForceUpdate: function(y, P, L) {
          g(y, "forceUpdate");
        },
        /**
         * Replaces all of the state. Always use this or `setState` to mutate state.
         * You should treat `this.state` as immutable.
         *
         * There is no guarantee that `this.state` will be immediately updated, so
         * accessing `this.state` after calling this method may return the old value.
         *
         * @param {ReactClass} publicInstance The instance that should rerender.
         * @param {object} completeState Next state.
         * @param {?function} callback Called after component is updated.
         * @param {?string} callerName name of the calling function in the public API.
         * @internal
         */
        enqueueReplaceState: function(y, P, L, W) {
          g(y, "replaceState");
        },
        /**
         * Sets a subset of the state. This only exists because _pendingState is
         * internal. This provides a merging strategy that is not available to deep
         * properties which is confusing. TODO: Expose pendingState or don't use it
         * during the merge.
         *
         * @param {ReactClass} publicInstance The instance that should rerender.
         * @param {object} partialState Next partial state to be merged with state.
         * @param {?function} callback Called after component is updated.
         * @param {?string} Name of the calling function in the public API.
         * @internal
         */
        enqueueSetState: function(y, P, L, W) {
          g(y, "setState");
        }
      }, O = Object.assign, C = {};
      Object.freeze(C);
      function A(y, P, L) {
        this.props = y, this.context = P, this.refs = C, this.updater = L || d;
      }
      A.prototype.isReactComponent = {}, A.prototype.setState = function(y, P) {
        if (typeof y != "object" && typeof y != "function" && y != null)
          throw new Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
        this.updater.enqueueSetState(this, y, P, "setState");
      }, A.prototype.forceUpdate = function(y) {
        this.updater.enqueueForceUpdate(this, y, "forceUpdate");
      };
      {
        var N = {
          isMounted: ["isMounted", "Instead, make sure to clean up subscriptions and pending requests in componentWillUnmount to prevent memory leaks."],
          replaceState: ["replaceState", "Refactor your code to use setState instead (see https://github.com/facebook/react/issues/3236)."]
        }, j = function(y, P) {
          Object.defineProperty(A.prototype, y, {
            get: function() {
              F("%s(...) is deprecated in plain JavaScript React classes. %s", P[0], P[1]);
            }
          });
        };
        for (var _ in N)
          N.hasOwnProperty(_) && j(_, N[_]);
      }
      function T() {
      }
      T.prototype = A.prototype;
      function M(y, P, L) {
        this.props = y, this.context = P, this.refs = C, this.updater = L || d;
      }
      var z = M.prototype = new T();
      z.constructor = M, O(z, A.prototype), z.isPureReactComponent = !0;
      function ee() {
        var y = {
          current: null
        };
        return Object.seal(y), y;
      }
      var k = Array.isArray;
      function oe(y) {
        return k(y);
      }
      function Ce(y) {
        {
          var P = typeof Symbol == "function" && Symbol.toStringTag, L = P && y[Symbol.toStringTag] || y.constructor.name || "Object";
          return L;
        }
      }
      function Ze(y) {
        try {
          return rn(y), !1;
        } catch {
          return !0;
        }
      }
      function rn(y) {
        return "" + y;
      }
      function Xr(y) {
        if (Ze(y))
          return R("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", Ce(y)), rn(y);
      }
      function le(y, P, L) {
        var W = y.displayName;
        if (W)
          return W;
        var K = P.displayName || P.name || "";
        return K !== "" ? L + "(" + K + ")" : L;
      }
      function se(y) {
        return y.displayName || "Context";
      }
      function de(y) {
        if (y == null)
          return null;
        if (typeof y.tag == "number" && R("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."), typeof y == "function")
          return y.displayName || y.name || null;
        if (typeof y == "string")
          return y;
        switch (y) {
          case a:
            return "Fragment";
          case o:
            return "Portal";
          case s:
            return "Profiler";
          case i:
            return "StrictMode";
          case f:
            return "Suspense";
          case p:
            return "SuspenseList";
        }
        if (typeof y == "object")
          switch (y.$$typeof) {
            case c:
              var P = y;
              return se(P) + ".Consumer";
            case l:
              var L = y;
              return se(L._context) + ".Provider";
            case u:
              return le(y, y.render, "ForwardRef");
            case v:
              var W = y.displayName || null;
              return W !== null ? W : de(y.type) || "Memo";
            case x: {
              var K = y, ne = K._payload, re = K._init;
              try {
                return de(re(ne));
              } catch {
                return null;
              }
            }
          }
        return null;
      }
      var rt = Object.prototype.hasOwnProperty, Ct = {
        key: !0,
        ref: !0,
        __self: !0,
        __source: !0
      }, ue, je, Re;
      Re = {};
      function ze(y) {
        if (rt.call(y, "ref")) {
          var P = Object.getOwnPropertyDescriptor(y, "ref").get;
          if (P && P.isReactWarning)
            return !1;
        }
        return y.ref !== void 0;
      }
      function Ot(y) {
        if (rt.call(y, "key")) {
          var P = Object.getOwnPropertyDescriptor(y, "key").get;
          if (P && P.isReactWarning)
            return !1;
        }
        return y.key !== void 0;
      }
      function Kr(y, P) {
        var L = function() {
          ue || (ue = !0, R("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", P));
        };
        L.isReactWarning = !0, Object.defineProperty(y, "key", {
          get: L,
          configurable: !0
        });
      }
      function xo(y, P) {
        var L = function() {
          je || (je = !0, R("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", P));
        };
        L.isReactWarning = !0, Object.defineProperty(y, "ref", {
          get: L,
          configurable: !0
        });
      }
      function Hn(y) {
        if (typeof y.ref == "string" && U.current && y.__self && U.current.stateNode !== y.__self) {
          var P = de(U.current.type);
          Re[P] || (R('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', P, y.ref), Re[P] = !0);
        }
      }
      var Qr = function(y, P, L, W, K, ne, re) {
        var ae = {
          // This tag allows us to uniquely identify this as a React Element
          $$typeof: n,
          // Built-in properties that belong on the element
          type: y,
          key: P,
          ref: L,
          props: re,
          // Record the component responsible for creating this element.
          _owner: ne
        };
        return ae._store = {}, Object.defineProperty(ae._store, "validated", {
          configurable: !1,
          enumerable: !1,
          writable: !0,
          value: !1
        }), Object.defineProperty(ae, "_self", {
          configurable: !1,
          enumerable: !1,
          writable: !1,
          value: W
        }), Object.defineProperty(ae, "_source", {
          configurable: !1,
          enumerable: !1,
          writable: !1,
          value: K
        }), Object.freeze && (Object.freeze(ae.props), Object.freeze(ae)), ae;
      };
      function wo(y, P, L) {
        var W, K = {}, ne = null, re = null, ae = null, fe = null;
        if (P != null) {
          ze(P) && (re = P.ref, Hn(P)), Ot(P) && (Xr(P.key), ne = "" + P.key), ae = P.__self === void 0 ? null : P.__self, fe = P.__source === void 0 ? null : P.__source;
          for (W in P)
            rt.call(P, W) && !Ct.hasOwnProperty(W) && (K[W] = P[W]);
        }
        var Ae = arguments.length - 2;
        if (Ae === 1)
          K.children = L;
        else if (Ae > 1) {
          for (var Ie = Array(Ae), Te = 0; Te < Ae; Te++)
            Ie[Te] = arguments[Te + 2];
          Object.freeze && Object.freeze(Ie), K.children = Ie;
        }
        if (y && y.defaultProps) {
          var Me = y.defaultProps;
          for (W in Me)
            K[W] === void 0 && (K[W] = Me[W]);
        }
        if (ne || re) {
          var Fe = typeof y == "function" ? y.displayName || y.name || "Unknown" : y;
          ne && Kr(K, Fe), re && xo(K, Fe);
        }
        return Qr(y, ne, re, ae, fe, U.current, K);
      }
      function Ht(y, P) {
        var L = Qr(y.type, P, y.ref, y._self, y._source, y._owner, y.props);
        return L;
      }
      function lo(y, P, L) {
        if (y == null)
          throw new Error("React.cloneElement(...): The argument must be a React element, but you passed " + y + ".");
        var W, K = O({}, y.props), ne = y.key, re = y.ref, ae = y._self, fe = y._source, Ae = y._owner;
        if (P != null) {
          ze(P) && (re = P.ref, Ae = U.current), Ot(P) && (Xr(P.key), ne = "" + P.key);
          var Ie;
          y.type && y.type.defaultProps && (Ie = y.type.defaultProps);
          for (W in P)
            rt.call(P, W) && !Ct.hasOwnProperty(W) && (P[W] === void 0 && Ie !== void 0 ? K[W] = Ie[W] : K[W] = P[W]);
        }
        var Te = arguments.length - 2;
        if (Te === 1)
          K.children = L;
        else if (Te > 1) {
          for (var Me = Array(Te), Fe = 0; Fe < Te; Fe++)
            Me[Fe] = arguments[Fe + 2];
          K.children = Me;
        }
        return Qr(y.type, ne, re, ae, fe, Ae, K);
      }
      function br(y) {
        return typeof y == "object" && y !== null && y.$$typeof === n;
      }
      var co = ".", za = ":";
      function lp(y) {
        var P = /[=:]/g, L = {
          "=": "=0",
          ":": "=2"
        }, W = y.replace(P, function(K) {
          return L[K];
        });
        return "$" + W;
      }
      var Xi = !1, cp = /\/+/g;
      function Ki(y) {
        return y.replace(cp, "$&/");
      }
      function ko(y, P) {
        return typeof y == "object" && y !== null && y.key != null ? (Xr(y.key), lp("" + y.key)) : P.toString(36);
      }
      function Sn(y, P, L, W, K) {
        var ne = typeof y;
        (ne === "undefined" || ne === "boolean") && (y = null);
        var re = !1;
        if (y === null)
          re = !0;
        else
          switch (ne) {
            case "string":
            case "number":
              re = !0;
              break;
            case "object":
              switch (y.$$typeof) {
                case n:
                case o:
                  re = !0;
              }
          }
        if (re) {
          var ae = y, fe = K(ae), Ae = W === "" ? co + ko(ae, 0) : W;
          if (oe(fe)) {
            var Ie = "";
            Ae != null && (Ie = Ki(Ae) + "/"), Sn(fe, P, Ie, "", function(tm) {
              return tm;
            });
          } else fe != null && (br(fe) && (fe.key && (!ae || ae.key !== fe.key) && Xr(fe.key), fe = Ht(
            fe,
            // Keep both the (mapped) and old keys if they differ, just as
            // traverseAllChildren used to do for objects as children
            L + // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key
            (fe.key && (!ae || ae.key !== fe.key) ? (
              // $FlowFixMe Flow incorrectly thinks existing element's key can be a number
              // eslint-disable-next-line react-internal/safe-string-coercion
              Ki("" + fe.key) + "/"
            ) : "") + Ae
          )), P.push(fe));
          return 1;
        }
        var Te, Me, Fe = 0, Je = W === "" ? co : W + za;
        if (oe(y))
          for (var Tn = 0; Tn < y.length; Tn++)
            Te = y[Tn], Me = Je + ko(Te, Tn), Fe += Sn(Te, P, L, Me, K);
        else {
          var No = $(y);
          if (typeof No == "function") {
            var ws = y;
            No === ws.entries && (Xi || F("Using Maps as children is not supported. Use an array of keyed ReactElements instead."), Xi = !0);
            for (var Zp = No.call(ws), ks, em = 0; !(ks = Zp.next()).done; )
              Te = ks.value, Me = Je + ko(Te, em++), Fe += Sn(Te, P, L, Me, K);
          } else if (ne === "object") {
            var $s = String(y);
            throw new Error("Objects are not valid as a React child (found: " + ($s === "[object Object]" ? "object with keys {" + Object.keys(y).join(", ") + "}" : $s) + "). If you meant to render a collection of children, use an array instead.");
          }
        }
        return Fe;
      }
      function Pn(y, P, L) {
        if (y == null)
          return y;
        var W = [], K = 0;
        return Sn(y, W, "", "", function(ne) {
          return P.call(L, ne, K++);
        }), W;
      }
      function up(y) {
        var P = 0;
        return Pn(y, function() {
          P++;
        }), P;
      }
      function fp(y, P, L) {
        Pn(y, function() {
          P.apply(this, arguments);
        }, L);
      }
      function dp(y) {
        return Pn(y, function(P) {
          return P;
        }) || [];
      }
      function pp(y) {
        if (!br(y))
          throw new Error("React.Children.only expected to receive a single React element child.");
        return y;
      }
      function mp(y) {
        var P = {
          $$typeof: c,
          // As a workaround to support multiple concurrent renderers, we categorize
          // some renderers as primary and others as secondary. We only expect
          // there to be two concurrent renderers at most: React Native (primary) and
          // Fabric (secondary); React DOM (primary) and React ART (secondary).
          // Secondary renderers store their context values on separate fields.
          _currentValue: y,
          _currentValue2: y,
          // Used to track how many concurrent renderers this context currently
          // supports within in a single renderer. Such as parallel server rendering.
          _threadCount: 0,
          // These are circular
          Provider: null,
          Consumer: null,
          // Add these to use same hidden class in VM as ServerContext
          _defaultValue: null,
          _globalName: null
        };
        P.Provider = {
          $$typeof: l,
          _context: P
        };
        var L = !1, W = !1, K = !1;
        {
          var ne = {
            $$typeof: c,
            _context: P
          };
          Object.defineProperties(ne, {
            Provider: {
              get: function() {
                return W || (W = !0, R("Rendering <Context.Consumer.Provider> is not supported and will be removed in a future major release. Did you mean to render <Context.Provider> instead?")), P.Provider;
              },
              set: function(re) {
                P.Provider = re;
              }
            },
            _currentValue: {
              get: function() {
                return P._currentValue;
              },
              set: function(re) {
                P._currentValue = re;
              }
            },
            _currentValue2: {
              get: function() {
                return P._currentValue2;
              },
              set: function(re) {
                P._currentValue2 = re;
              }
            },
            _threadCount: {
              get: function() {
                return P._threadCount;
              },
              set: function(re) {
                P._threadCount = re;
              }
            },
            Consumer: {
              get: function() {
                return L || (L = !0, R("Rendering <Context.Consumer.Consumer> is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?")), P.Consumer;
              }
            },
            displayName: {
              get: function() {
                return P.displayName;
              },
              set: function(re) {
                K || (F("Setting `displayName` on Context.Consumer has no effect. You should set it directly on the context with Context.displayName = '%s'.", re), K = !0);
              }
            }
          }), P.Consumer = ne;
        }
        return P._currentRenderer = null, P._currentRenderer2 = null, P;
      }
      var on = -1, $o = 0, Ji = 1, gp = 2;
      function hp(y) {
        if (y._status === on) {
          var P = y._result, L = P();
          if (L.then(function(ne) {
            if (y._status === $o || y._status === on) {
              var re = y;
              re._status = Ji, re._result = ne;
            }
          }, function(ne) {
            if (y._status === $o || y._status === on) {
              var re = y;
              re._status = gp, re._result = ne;
            }
          }), y._status === on) {
            var W = y;
            W._status = $o, W._result = L;
          }
        }
        if (y._status === Ji) {
          var K = y._result;
          return K === void 0 && R(`lazy: Expected the result of a dynamic import() call. Instead received: %s

Your code should look like: 
  const MyComponent = lazy(() => import('./MyComponent'))

Did you accidentally put curly braces around the import?`, K), "default" in K || R(`lazy: Expected the result of a dynamic import() call. Instead received: %s

Your code should look like: 
  const MyComponent = lazy(() => import('./MyComponent'))`, K), K.default;
        } else
          throw y._result;
      }
      function bp(y) {
        var P = {
          // We use these fields to store the result.
          _status: on,
          _result: y
        }, L = {
          $$typeof: x,
          _payload: P,
          _init: hp
        };
        {
          var W, K;
          Object.defineProperties(L, {
            defaultProps: {
              configurable: !0,
              get: function() {
                return W;
              },
              set: function(ne) {
                R("React.lazy(...): It is not supported to assign `defaultProps` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it."), W = ne, Object.defineProperty(L, "defaultProps", {
                  enumerable: !0
                });
              }
            },
            propTypes: {
              configurable: !0,
              get: function() {
                return K;
              },
              set: function(ne) {
                R("React.lazy(...): It is not supported to assign `propTypes` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it."), K = ne, Object.defineProperty(L, "propTypes", {
                  enumerable: !0
                });
              }
            }
          });
        }
        return L;
      }
      function yp(y) {
        y != null && y.$$typeof === v ? R("forwardRef requires a render function but received a `memo` component. Instead of forwardRef(memo(...)), use memo(forwardRef(...)).") : typeof y != "function" ? R("forwardRef requires a render function but was given %s.", y === null ? "null" : typeof y) : y.length !== 0 && y.length !== 2 && R("forwardRef render functions accept exactly two parameters: props and ref. %s", y.length === 1 ? "Did you forget to use the ref parameter?" : "Any additional parameter will be undefined."), y != null && (y.defaultProps != null || y.propTypes != null) && R("forwardRef render functions do not support propTypes or defaultProps. Did you accidentally pass a React component?");
        var P = {
          $$typeof: u,
          render: y
        };
        {
          var L;
          Object.defineProperty(P, "displayName", {
            enumerable: !1,
            configurable: !0,
            get: function() {
              return L;
            },
            set: function(W) {
              L = W, !y.name && !y.displayName && (y.displayName = W);
            }
          });
        }
        return P;
      }
      var Qi;
      Qi = Symbol.for("react.module.reference");
      function Zi(y) {
        return !!(typeof y == "string" || typeof y == "function" || y === a || y === s || V || y === i || y === f || y === p || te || y === b || X || J || I || typeof y == "object" && y !== null && (y.$$typeof === x || y.$$typeof === v || y.$$typeof === l || y.$$typeof === c || y.$$typeof === u || // This needs to include all possible module reference object
        // types supported by any Flight configuration anywhere since
        // we don't know which Flight build this will end up being used
        // with.
        y.$$typeof === Qi || y.getModuleId !== void 0));
      }
      function vp(y, P) {
        Zi(y) || R("memo: The first argument must be a component. Instead received: %s", y === null ? "null" : typeof y);
        var L = {
          $$typeof: v,
          type: y,
          compare: P === void 0 ? null : P
        };
        {
          var W;
          Object.defineProperty(L, "displayName", {
            enumerable: !1,
            configurable: !0,
            get: function() {
              return W;
            },
            set: function(K) {
              W = K, !y.name && !y.displayName && (y.displayName = K);
            }
          });
        }
        return L;
      }
      function tt() {
        var y = E.current;
        return y === null && R(`Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:
1. You might have mismatching versions of React and the renderer (such as React DOM)
2. You might be breaking the Rules of Hooks
3. You might have more than one copy of React in the same app
See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.`), y;
      }
      function xp(y) {
        var P = tt();
        if (y._context !== void 0) {
          var L = y._context;
          L.Consumer === y ? R("Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be removed in a future major release. Did you mean to call useContext(Context) instead?") : L.Provider === y && R("Calling useContext(Context.Provider) is not supported. Did you mean to call useContext(Context) instead?");
        }
        return P.useContext(y);
      }
      function wp(y) {
        var P = tt();
        return P.useState(y);
      }
      function kp(y, P, L) {
        var W = tt();
        return W.useReducer(y, P, L);
      }
      function $p(y) {
        var P = tt();
        return P.useRef(y);
      }
      function Op(y, P) {
        var L = tt();
        return L.useEffect(y, P);
      }
      function Ep(y, P) {
        var L = tt();
        return L.useInsertionEffect(y, P);
      }
      function Sp(y, P) {
        var L = tt();
        return L.useLayoutEffect(y, P);
      }
      function Pp(y, P) {
        var L = tt();
        return L.useCallback(y, P);
      }
      function Cp(y, P) {
        var L = tt();
        return L.useMemo(y, P);
      }
      function Ap(y, P, L) {
        var W = tt();
        return W.useImperativeHandle(y, P, L);
      }
      function _p(y, P) {
        {
          var L = tt();
          return L.useDebugValue(y, P);
        }
      }
      function Np() {
        var y = tt();
        return y.useTransition();
      }
      function jp(y) {
        var P = tt();
        return P.useDeferredValue(y);
      }
      function Ip() {
        var y = tt();
        return y.useId();
      }
      function Tp(y, P, L) {
        var W = tt();
        return W.useSyncExternalStore(y, P, L);
      }
      var an = 0, es, ts, rs, ns, os, as, is;
      function ss() {
      }
      ss.__reactDisabledLog = !0;
      function Mp() {
        {
          if (an === 0) {
            es = console.log, ts = console.info, rs = console.warn, ns = console.error, os = console.group, as = console.groupCollapsed, is = console.groupEnd;
            var y = {
              configurable: !0,
              enumerable: !0,
              value: ss,
              writable: !0
            };
            Object.defineProperties(console, {
              info: y,
              log: y,
              warn: y,
              error: y,
              group: y,
              groupCollapsed: y,
              groupEnd: y
            });
          }
          an++;
        }
      }
      function Rp() {
        {
          if (an--, an === 0) {
            var y = {
              configurable: !0,
              enumerable: !0,
              writable: !0
            };
            Object.defineProperties(console, {
              log: O({}, y, {
                value: es
              }),
              info: O({}, y, {
                value: ts
              }),
              warn: O({}, y, {
                value: rs
              }),
              error: O({}, y, {
                value: ns
              }),
              group: O({}, y, {
                value: os
              }),
              groupCollapsed: O({}, y, {
                value: as
              }),
              groupEnd: O({}, y, {
                value: is
              })
            });
          }
          an < 0 && R("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
        }
      }
      var Oo = D.ReactCurrentDispatcher, Eo;
      function Cn(y, P, L) {
        {
          if (Eo === void 0)
            try {
              throw Error();
            } catch (K) {
              var W = K.stack.trim().match(/\n( *(at )?)/);
              Eo = W && W[1] || "";
            }
          return `
` + Eo + y;
        }
      }
      var So = !1, An;
      {
        var zp = typeof WeakMap == "function" ? WeakMap : Map;
        An = new zp();
      }
      function ls(y, P) {
        if (!y || So)
          return "";
        {
          var L = An.get(y);
          if (L !== void 0)
            return L;
        }
        var W;
        So = !0;
        var K = Error.prepareStackTrace;
        Error.prepareStackTrace = void 0;
        var ne;
        ne = Oo.current, Oo.current = null, Mp();
        try {
          if (P) {
            var re = function() {
              throw Error();
            };
            if (Object.defineProperty(re.prototype, "props", {
              set: function() {
                throw Error();
              }
            }), typeof Reflect == "object" && Reflect.construct) {
              try {
                Reflect.construct(re, []);
              } catch (Je) {
                W = Je;
              }
              Reflect.construct(y, [], re);
            } else {
              try {
                re.call();
              } catch (Je) {
                W = Je;
              }
              y.call(re.prototype);
            }
          } else {
            try {
              throw Error();
            } catch (Je) {
              W = Je;
            }
            y();
          }
        } catch (Je) {
          if (Je && W && typeof Je.stack == "string") {
            for (var ae = Je.stack.split(`
`), fe = W.stack.split(`
`), Ae = ae.length - 1, Ie = fe.length - 1; Ae >= 1 && Ie >= 0 && ae[Ae] !== fe[Ie]; )
              Ie--;
            for (; Ae >= 1 && Ie >= 0; Ae--, Ie--)
              if (ae[Ae] !== fe[Ie]) {
                if (Ae !== 1 || Ie !== 1)
                  do
                    if (Ae--, Ie--, Ie < 0 || ae[Ae] !== fe[Ie]) {
                      var Te = `
` + ae[Ae].replace(" at new ", " at ");
                      return y.displayName && Te.includes("<anonymous>") && (Te = Te.replace("<anonymous>", y.displayName)), typeof y == "function" && An.set(y, Te), Te;
                    }
                  while (Ae >= 1 && Ie >= 0);
                break;
              }
          }
        } finally {
          So = !1, Oo.current = ne, Rp(), Error.prepareStackTrace = K;
        }
        var Me = y ? y.displayName || y.name : "", Fe = Me ? Cn(Me) : "";
        return typeof y == "function" && An.set(y, Fe), Fe;
      }
      function Fp(y, P, L) {
        return ls(y, !1);
      }
      function Dp(y) {
        var P = y.prototype;
        return !!(P && P.isReactComponent);
      }
      function _n(y, P, L) {
        if (y == null)
          return "";
        if (typeof y == "function")
          return ls(y, Dp(y));
        if (typeof y == "string")
          return Cn(y);
        switch (y) {
          case f:
            return Cn("Suspense");
          case p:
            return Cn("SuspenseList");
        }
        if (typeof y == "object")
          switch (y.$$typeof) {
            case u:
              return Fp(y.render);
            case v:
              return _n(y.type, P, L);
            case x: {
              var W = y, K = W._payload, ne = W._init;
              try {
                return _n(ne(K), P, L);
              } catch {
              }
            }
          }
        return "";
      }
      var cs = {}, us = D.ReactDebugCurrentFrame;
      function Nn(y) {
        if (y) {
          var P = y._owner, L = _n(y.type, y._source, P ? P.type : null);
          us.setExtraStackFrame(L);
        } else
          us.setExtraStackFrame(null);
      }
      function Lp(y, P, L, W, K) {
        {
          var ne = Function.call.bind(rt);
          for (var re in y)
            if (ne(y, re)) {
              var ae = void 0;
              try {
                if (typeof y[re] != "function") {
                  var fe = Error((W || "React class") + ": " + L + " type `" + re + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof y[re] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                  throw fe.name = "Invariant Violation", fe;
                }
                ae = y[re](P, re, W, L, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
              } catch (Ae) {
                ae = Ae;
              }
              ae && !(ae instanceof Error) && (Nn(K), R("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", W || "React class", L, re, typeof ae), Nn(null)), ae instanceof Error && !(ae.message in cs) && (cs[ae.message] = !0, Nn(K), R("Failed %s type: %s", L, ae.message), Nn(null));
            }
        }
      }
      function Zr(y) {
        if (y) {
          var P = y._owner, L = _n(y.type, y._source, P ? P.type : null);
          Z(L);
        } else
          Z(null);
      }
      var Po;
      Po = !1;
      function fs() {
        if (U.current) {
          var y = de(U.current.type);
          if (y)
            return `

Check the render method of \`` + y + "`.";
        }
        return "";
      }
      function Vp(y) {
        if (y !== void 0) {
          var P = y.fileName.replace(/^.*[\\\/]/, ""), L = y.lineNumber;
          return `

Check your code at ` + P + ":" + L + ".";
        }
        return "";
      }
      function Wp(y) {
        return y != null ? Vp(y.__source) : "";
      }
      var ds = {};
      function Up(y) {
        var P = fs();
        if (!P) {
          var L = typeof y == "string" ? y : y.displayName || y.name;
          L && (P = `

Check the top-level render call using <` + L + ">.");
        }
        return P;
      }
      function ps(y, P) {
        if (!(!y._store || y._store.validated || y.key != null)) {
          y._store.validated = !0;
          var L = Up(P);
          if (!ds[L]) {
            ds[L] = !0;
            var W = "";
            y && y._owner && y._owner !== U.current && (W = " It was passed a child from " + de(y._owner.type) + "."), Zr(y), R('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', L, W), Zr(null);
          }
        }
      }
      function ms(y, P) {
        if (typeof y == "object") {
          if (oe(y))
            for (var L = 0; L < y.length; L++) {
              var W = y[L];
              br(W) && ps(W, P);
            }
          else if (br(y))
            y._store && (y._store.validated = !0);
          else if (y) {
            var K = $(y);
            if (typeof K == "function" && K !== y.entries)
              for (var ne = K.call(y), re; !(re = ne.next()).done; )
                br(re.value) && ps(re.value, P);
          }
        }
      }
      function gs(y) {
        {
          var P = y.type;
          if (P == null || typeof P == "string")
            return;
          var L;
          if (typeof P == "function")
            L = P.propTypes;
          else if (typeof P == "object" && (P.$$typeof === u || // Note: Memo only checks outer props here.
          // Inner props are checked in the reconciler.
          P.$$typeof === v))
            L = P.propTypes;
          else
            return;
          if (L) {
            var W = de(P);
            Lp(L, y.props, "prop", W, y);
          } else if (P.PropTypes !== void 0 && !Po) {
            Po = !0;
            var K = de(P);
            R("Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?", K || "Unknown");
          }
          typeof P.getDefaultProps == "function" && !P.getDefaultProps.isReactClassApproved && R("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
        }
      }
      function Yp(y) {
        {
          for (var P = Object.keys(y.props), L = 0; L < P.length; L++) {
            var W = P[L];
            if (W !== "children" && W !== "key") {
              Zr(y), R("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", W), Zr(null);
              break;
            }
          }
          y.ref !== null && (Zr(y), R("Invalid attribute `ref` supplied to `React.Fragment`."), Zr(null));
        }
      }
      function hs(y, P, L) {
        var W = Zi(y);
        if (!W) {
          var K = "";
          (y === void 0 || typeof y == "object" && y !== null && Object.keys(y).length === 0) && (K += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.");
          var ne = Wp(P);
          ne ? K += ne : K += fs();
          var re;
          y === null ? re = "null" : oe(y) ? re = "array" : y !== void 0 && y.$$typeof === n ? (re = "<" + (de(y.type) || "Unknown") + " />", K = " Did you accidentally export a JSX literal instead of a component?") : re = typeof y, R("React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", re, K);
        }
        var ae = wo.apply(this, arguments);
        if (ae == null)
          return ae;
        if (W)
          for (var fe = 2; fe < arguments.length; fe++)
            ms(arguments[fe], y);
        return y === a ? Yp(ae) : gs(ae), ae;
      }
      var bs = !1;
      function Hp(y) {
        var P = hs.bind(null, y);
        return P.type = y, bs || (bs = !0, F("React.createFactory() is deprecated and will be removed in a future major release. Consider using JSX or use React.createElement() directly instead.")), Object.defineProperty(P, "type", {
          enumerable: !1,
          get: function() {
            return F("Factory.type is deprecated. Access the class directly before passing it to createFactory."), Object.defineProperty(this, "type", {
              value: y
            }), y;
          }
        }), P;
      }
      function Gp(y, P, L) {
        for (var W = lo.apply(this, arguments), K = 2; K < arguments.length; K++)
          ms(arguments[K], W.type);
        return gs(W), W;
      }
      function qp(y, P) {
        var L = S.transition;
        S.transition = {};
        var W = S.transition;
        S.transition._updatedFibers = /* @__PURE__ */ new Set();
        try {
          y();
        } finally {
          if (S.transition = L, L === null && W._updatedFibers) {
            var K = W._updatedFibers.size;
            K > 10 && F("Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table."), W._updatedFibers.clear();
          }
        }
      }
      var ys = !1, jn = null;
      function Bp(y) {
        if (jn === null)
          try {
            var P = ("require" + Math.random()).slice(0, 7), L = e && e[P];
            jn = L.call(e, "timers").setImmediate;
          } catch {
            jn = function(W) {
              ys === !1 && (ys = !0, typeof MessageChannel > "u" && R("This browser does not have a MessageChannel implementation, so enqueuing tasks via await act(async () => ...) will fail. Please file an issue at https://github.com/facebook/react/issues if you encounter this warning."));
              var K = new MessageChannel();
              K.port1.onmessage = W, K.port2.postMessage(void 0);
            };
          }
        return jn(y);
      }
      var en = 0, vs = !1;
      function xs(y) {
        {
          var P = en;
          en++, h.current === null && (h.current = []);
          var L = h.isBatchingLegacy, W;
          try {
            if (h.isBatchingLegacy = !0, W = y(), !L && h.didScheduleLegacyUpdate) {
              var K = h.current;
              K !== null && (h.didScheduleLegacyUpdate = !1, _o(K));
            }
          } catch (Me) {
            throw In(P), Me;
          } finally {
            h.isBatchingLegacy = L;
          }
          if (W !== null && typeof W == "object" && typeof W.then == "function") {
            var ne = W, re = !1, ae = {
              then: function(Me, Fe) {
                re = !0, ne.then(function(Je) {
                  In(P), en === 0 ? Co(Je, Me, Fe) : Me(Je);
                }, function(Je) {
                  In(P), Fe(Je);
                });
              }
            };
            return !vs && typeof Promise < "u" && Promise.resolve().then(function() {
            }).then(function() {
              re || (vs = !0, R("You called act(async () => ...) without await. This could lead to unexpected testing behaviour, interleaving multiple act calls and mixing their scopes. You should - await act(async () => ...);"));
            }), ae;
          } else {
            var fe = W;
            if (In(P), en === 0) {
              var Ae = h.current;
              Ae !== null && (_o(Ae), h.current = null);
              var Ie = {
                then: function(Me, Fe) {
                  h.current === null ? (h.current = [], Co(fe, Me, Fe)) : Me(fe);
                }
              };
              return Ie;
            } else {
              var Te = {
                then: function(Me, Fe) {
                  Me(fe);
                }
              };
              return Te;
            }
          }
        }
      }
      function In(y) {
        y !== en - 1 && R("You seem to have overlapping act() calls, this is not supported. Be sure to await previous act() calls before making a new one. "), en = y;
      }
      function Co(y, P, L) {
        {
          var W = h.current;
          if (W !== null)
            try {
              _o(W), Bp(function() {
                W.length === 0 ? (h.current = null, P(y)) : Co(y, P, L);
              });
            } catch (K) {
              L(K);
            }
          else
            P(y);
        }
      }
      var Ao = !1;
      function _o(y) {
        if (!Ao) {
          Ao = !0;
          var P = 0;
          try {
            for (; P < y.length; P++) {
              var L = y[P];
              do
                L = L(!0);
              while (L !== null);
            }
            y.length = 0;
          } catch (W) {
            throw y = y.slice(P + 1), W;
          } finally {
            Ao = !1;
          }
        }
      }
      var Xp = hs, Kp = Gp, Jp = Hp, Qp = {
        map: Pn,
        forEach: fp,
        count: up,
        toArray: dp,
        only: pp
      };
      t.Children = Qp, t.Component = A, t.Fragment = a, t.Profiler = s, t.PureComponent = M, t.StrictMode = i, t.Suspense = f, t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = D, t.act = xs, t.cloneElement = Kp, t.createContext = mp, t.createElement = Xp, t.createFactory = Jp, t.createRef = ee, t.forwardRef = yp, t.isValidElement = br, t.lazy = bp, t.memo = vp, t.startTransition = qp, t.unstable_act = xs, t.useCallback = Pp, t.useContext = xp, t.useDebugValue = _p, t.useDeferredValue = jp, t.useEffect = Op, t.useId = Ip, t.useImperativeHandle = Ap, t.useInsertionEffect = Ep, t.useLayoutEffect = Sp, t.useMemo = Cp, t.useReducer = kp, t.useRef = $p, t.useState = wp, t.useSyncExternalStore = Tp, t.useTransition = Np, t.version = r, typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
    }();
  }(rv, rv.exports)), rv.exports;
}
var C9;
function U0e() {
  return C9 || (C9 = 1, process.env.NODE_ENV === "production" ? $2.exports = V0e() : $2.exports = W0e()), $2.exports;
}
U0e();
function ZY() {
  return typeof window < "u" && ("__TAURI_INTERNALS__" in window || "__TAURI__" in window);
}
window.IsDesktopApp = ZY;
function sn(e, t, r, n) {
  if (typeof t == "function" ? e !== t || !0 : !t.has(e)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
  return r === "m" ? n : r === "a" ? n.call(e) : n ? n.value : t.get(e);
}
function km(e, t, r, n, o) {
  if (typeof t == "function" ? e !== t || !0 : !t.has(e)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
  return t.set(e, r), r;
}
var Pc, uo, Gu, ny;
const A9 = "__TAURI_TO_IPC_KEY__";
function Y0e(e, t = !1) {
  return window.__TAURI_INTERNALS__.transformCallback(e, t);
}
class H0e {
  constructor(t) {
    Pc.set(this, void 0), uo.set(this, 0), Gu.set(this, []), ny.set(this, void 0), km(this, Pc, t || (() => {
    })), this.id = Y0e((r) => {
      const n = r.index;
      if ("end" in r) {
        n == sn(this, uo, "f") ? this.cleanupCallback() : km(this, ny, n);
        return;
      }
      const o = r.message;
      if (n == sn(this, uo, "f")) {
        for (sn(this, Pc, "f").call(this, o), km(this, uo, sn(this, uo, "f") + 1); sn(this, uo, "f") in sn(this, Gu, "f"); ) {
          const a = sn(this, Gu, "f")[sn(this, uo, "f")];
          sn(this, Pc, "f").call(this, a), delete sn(this, Gu, "f")[sn(this, uo, "f")], km(this, uo, sn(this, uo, "f") + 1);
        }
        sn(this, uo, "f") === sn(this, ny, "f") && this.cleanupCallback();
      } else
        sn(this, Gu, "f")[n] = o;
    });
  }
  cleanupCallback() {
    window.__TAURI_INTERNALS__.unregisterCallback(this.id);
  }
  set onmessage(t) {
    km(this, Pc, t);
  }
  get onmessage() {
    return sn(this, Pc, "f");
  }
  [(Pc = /* @__PURE__ */ new WeakMap(), uo = /* @__PURE__ */ new WeakMap(), Gu = /* @__PURE__ */ new WeakMap(), ny = /* @__PURE__ */ new WeakMap(), A9)]() {
    return `__CHANNEL__:${this.id}`;
  }
  toJSON() {
    return this[A9]();
  }
}
async function oy(e, t = {}, r) {
  return window.__TAURI_INTERNALS__.invoke(e, t, r);
}
const ay = "Request cancelled";
async function _9(e, t) {
  const r = t == null ? void 0 : t.signal;
  if (r != null && r.aborted)
    throw new Error(ay);
  const n = t == null ? void 0 : t.maxRedirections, o = t == null ? void 0 : t.connectTimeout, a = t == null ? void 0 : t.proxy, i = t == null ? void 0 : t.danger;
  t && (delete t.maxRedirections, delete t.connectTimeout, delete t.proxy, delete t.danger);
  const s = t != null && t.headers ? t.headers instanceof Headers ? t.headers : new Headers(t.headers) : new Headers(), l = new Request(e, t), c = await l.arrayBuffer(), u = c.byteLength !== 0 ? Array.from(new Uint8Array(c)) : null;
  for (const [h, U] of l.headers)
    s.get(h) || s.set(h, U);
  const f = (s instanceof Headers ? Array.from(s.entries()) : Array.isArray(s) ? s : Object.entries(s)).map(([h, U]) => [
    h,
    // we need to ensure we have all header values as strings
    // eslint-disable-next-line
    typeof U == "string" ? U : U.toString()
  ]);
  if (r != null && r.aborted)
    throw new Error(ay);
  const p = await oy("plugin:http|fetch", {
    clientConfig: {
      method: l.method,
      url: l.url,
      headers: f,
      data: u,
      maxRedirections: n,
      connectTimeout: o,
      proxy: a,
      danger: i
    }
  }), v = () => oy("plugin:http|fetch_cancel", { rid: p });
  if (r != null && r.aborted)
    throw v(), new Error(ay);
  r == null || r.addEventListener("abort", () => void v());
  const { status: x, statusText: b, url: m, headers: w, rid: $ } = await oy("plugin:http|fetch_send", {
    rid: p
  }), E = [101, 103, 204, 205, 304].includes(x) ? null : new ReadableStream({
    start: (h) => {
      const U = new H0e();
      U.onmessage = (G) => {
        if (r != null && r.aborted) {
          h.error(ay);
          return;
        }
        const Q = new Uint8Array(G), Z = Q[Q.byteLength - 1], X = Q.slice(0, Q.byteLength - 1);
        if (Z == 1) {
          h.close();
          return;
        }
        h.enqueue(X);
      }, oy("plugin:http|fetch_read_body", {
        rid: $,
        streamChannel: U
      }).catch((G) => {
        h.error(G);
      });
    }
  }), S = new Response(E, {
    status: x,
    statusText: b
  });
  return Object.defineProperty(S, "url", { value: m }), Object.defineProperty(S, "headers", {
    value: new Headers(w)
  }), S;
}
function Ph(e, t) {
  return ZY() ? t !== void 0 ? _9(e, t) : _9(e) : t !== void 0 ? fetch(e, t) : fetch(e);
}
window.FetchProxy = Ph;
let VP = class {
  constructor() {
    JY(this, "ApiTargets", {}), this.ApiTargets = {
      GoggleApi: rg.GOOGLE_API,
      FunnelApi: rg.FUNNEL_API,
      CdnApi: rg.CDN_API,
      GravatarApi: rg.GRAVATAR_API
    };
  }
  getApiSchemeAndHost() {
    return L0e.getInstance().getApiSchemeAndHost();
  }
  async fetch(t, {
    method: r,
    query: n,
    body: o
  }) {
    const a = n && Object.entries(n).reduce(
      (c, [u, f]) => (f && (c[u] = f.toString()), c),
      {}
    ), i = a ? t + "?" + new URLSearchParams(a) : t, s = JSON.stringify(o), l = await Ph(i, {
      method: r,
      headers: {
        Accept: "application/json",
        "Content-Type": "application/json"
      },
      credentials: "include",
      body: s
    });
    if (!l.ok)
      throw new Error(`HTTP error! status: ${l.status}`);
    return l.json();
  }
  async fetchMultipartFormData(t, {
    method: r,
    body: n
  }) {
    return (await Ph(t, {
      method: r,
      headers: {
        Accept: "application/json"
      },
      credentials: "include",
      body: n
    })).json();
  }
  get({
    endpoint: t,
    query: r
  }) {
    return this.fetch(t, { method: "GET", query: r });
  }
  post({
    endpoint: t,
    query: r,
    body: n
  }) {
    return this.fetch(t, {
      method: "POST",
      query: r,
      body: n
    });
  }
  delete({
    endpoint: t,
    query: r,
    body: n
  }) {
    return this.fetch(t, {
      method: "DELETE",
      query: r,
      body: n
    });
  }
  async postFormVideo({
    endpoint: t,
    formRecord: r,
    uuid: n,
    blob: o,
    blobFileName: a
  }) {
    const i = new FormData();
    return i.append("uuid_idempotency_token", n), Object.entries(r).forEach(([s, l]) => {
      i.append(s, l);
    }), o && a ? i.append("video", o, a) : o && i.append("video", o), this.fetchMultipartFormData(t, {
      method: "POST",
      body: i
    });
  }
  async postForm({
    endpoint: t,
    formRecord: r,
    uuid: n,
    blob: o,
    blobFileName: a
  }) {
    const i = new FormData();
    return i.append("uuid_idempotency_token", n), Object.entries(r).forEach(([s, l]) => {
      i.append(s, l);
    }), o && a ? i.append("file", o, a) : o && i.append("file", o), this.fetchMultipartFormData(t, {
      method: "POST",
      body: i
    });
  }
  camelToSnakeCase(t) {
    return t.replace(/([a-z0])([A-Z])/g, "$1_$2").toLowerCase();
  }
  parseQueryValues(t) {
    return Object.entries(t).reduce(
      (r, [n, o]) => {
        if (!o)
          return r;
        const a = this.camelToSnakeCase(n);
        return Array.isArray(o) ? { ...r, [a]: o.join(",") } : { ...r, [a]: o.toString() };
      },
      {}
    );
  }
  parseBodyValues(t) {
    return Object.entries(t).reduce((r, [n, o]) => {
      if (!o)
        return r;
      const a = this.camelToSnakeCase(n);
      return Array.isArray(o) ? { ...r, [a]: o } : { ...r, [a]: o };
    }, {});
  }
};
class G0e extends VP {
  async DeleteMediaFileByToken({
    mediaFileToken: t,
    asMod: r = !0,
    setDelete: n = !0
  }) {
    const o = `${this.getApiSchemeAndHost()}/v1/media_files/file/${t}`, a = { as_mod: r, set_delete: n };
    return await this.delete({ endpoint: o, body: a }).then((i) => ({
      success: i.success ?? !1,
      errorMessage: i.BadInput
    })).catch((i) => ({
      success: !1,
      errorMessage: i.message
    }));
  }
  async ListMediaFilesByTokens({
    mediaTokens: t
  }) {
    const r = `${this.getApiSchemeAndHost()}/v1/media_files/batch`;
    return await this.get({ endpoint: r, query: { tokens: t.join(",") } }).then((n) => ({
      success: n.success,
      data: n.media_files
    })).catch((n) => ({ success: !1, errorMessage: n.message }));
  }
  async GetMediaFileByToken({
    mediaFileToken: t
  }) {
    const r = `${this.getApiSchemeAndHost()}/v1/media_files/file/${t}`;
    return await this.get({ endpoint: r }).then((n) => ({
      success: n.success,
      data: n.media_file
    })).catch((n) => ({
      success: !1,
      errorMessage: n.message
    }));
  }
  async ListMediaFiles(t) {
    const r = `${this.getApiSchemeAndHost()}/v1/media_files/list`, n = {
      ...t,
      filter_media_classes: t.filter_media_classes ? t.filter_media_classes.join(",") : void 0,
      filter_media_type: t.filter_media_type ? t.filter_media_type.join(",") : void 0,
      filter_engine_categories: t.filter_engine_categories ? t.filter_engine_categories.join(",") : void 0
    };
    return await this.get({ endpoint: r, query: n }).then((o) => ({
      success: o.success,
      data: o.results ?? [],
      pagination: o.pagination
    })).catch((o) => ({
      success: !1,
      errorMessage: o.message
    }));
  }
  async ListFeaturedMediaFiles(t) {
    const r = `${this.getApiSchemeAndHost()}/v1/media_files/list_featured`, n = {
      ...t,
      filter_media_classes: t.filter_media_classes ? t.filter_media_classes.join(",") : void 0,
      filter_media_type: t.filter_media_type ? t.filter_media_type.join(",") : void 0,
      filter_engine_categories: t.filter_engine_categories ? t.filter_engine_categories.join(",") : void 0
    };
    return await this.get({ endpoint: r, query: n }).then((o) => ({
      success: !0,
      data: o.results,
      pagination: o.pagination
    })).catch((o) => ({
      success: !1,
      errorMessage: o.message
    }));
  }
  async ListUserMediaFiles(t) {
    const r = t.username, n = `${this.getApiSchemeAndHost()}/v1/media_files/list/user/${r}`, o = {
      ...t,
      include_user_uploads: t.include_user_uploads,
      filter_media_classes: t.filter_media_classes ? t.filter_media_classes.join(",") : void 0,
      filter_media_type: t.filter_media_type ? t.filter_media_type.join(",") : void 0,
      filter_engine_categories: t.filter_engine_categories ? t.filter_engine_categories.join(",") : void 0
    };
    return await this.get({ endpoint: n, query: o }).then((a) => {
      let i = a.results ?? [];
      return t.user_uploads_only && (i = i.filter((s) => s.origin_category === "upload")), {
        success: a.success,
        data: i,
        pagination: a.pagination
      };
    }).catch((a) => ({
      success: !1,
      errorMessage: a.message
    }));
  }
  async SearchFeaturedMediaFiles(t) {
    const r = `${this.getApiSchemeAndHost()}/v1/media_files/search_featured`, n = {
      search_term: t.search_term,
      filter_media_classes: t.filter_media_classes ? t.filter_media_classes.join(",") : void 0,
      filter_media_type: t.filter_media_type ? t.filter_media_type.join(",") : void 0,
      filter_engine_categories: t.filter_engine_categories ? t.filter_engine_categories.join(",") : void 0
    };
    return await this.get({ endpoint: r, query: n }).then((o) => ({
      success: !0,
      data: o.results,
      pagination: o.pagination
    })).catch((o) => ({
      success: !1,
      errorMessage: o.message
    }));
  }
  async SearchUserMediaFiles(t) {
    const r = `${this.getApiSchemeAndHost()}/v1/media_files/search_session`, n = {
      search_term: t.search_term,
      filter_media_classes: t.filter_media_classes ? t.filter_media_classes.join(",") : void 0,
      filter_media_type: t.filter_media_type ? t.filter_media_type.join(",") : void 0,
      filter_engine_categories: t.filter_engine_categories ? t.filter_engine_categories.join(",") : void 0
    };
    return await this.get({ endpoint: r, query: n }).then((o) => ({
      success: !0,
      data: o.results,
      pagination: o.pagination
    })).catch((o) => ({
      success: !1,
      errorMessage: o.message
    }));
  }
  async RenameMediaFileByToken({
    mediaToken: t,
    name: r
  }) {
    const n = `${this.getApiSchemeAndHost()}/v1/media_files/rename/${t}`, o = { name: r };
    return await this.post({ endpoint: n, body: o }).then((a) => ({
      success: a.success ?? !1,
      errorMessage: a.BadInput
    })).catch((a) => ({ success: !1, errorMessage: a.message }));
  }
  async UpdateCoverImage({
    mediaFileToken: t,
    imageToken: r
  }) {
    const n = `${this.getApiSchemeAndHost()}/v1/media_files/cover_image/${t}`;
    return await this.post({ endpoint: n, body: { cover_image_media_file_token: r } }).then((o) => ({
      success: o.success ?? !1,
      errorMessage: o.BadInput
    })).catch((o) => ({
      success: !1,
      errorMessage: o.message
    }));
  }
  async UpdateVisibility({
    mediaFileToken: t,
    visibility: r
  }) {
    const n = `${this.getApiSchemeAndHost()}/v1/media_files/visibility/${t}`;
    return await this.post({ endpoint: n, body: { creator_set_visibility: r } }).then((o) => ({
      success: o.success ?? !1,
      errorMessage: o.BadInput
    })).catch((o) => ({
      success: !1,
      errorMessage: o.message
    }));
  }
}
var N9;
(function(e) {
  e[e.Audio = 1] = "Audio", e[e.Cache = 2] = "Cache", e[e.Config = 3] = "Config", e[e.Data = 4] = "Data", e[e.LocalData = 5] = "LocalData", e[e.Document = 6] = "Document", e[e.Download = 7] = "Download", e[e.Picture = 8] = "Picture", e[e.Public = 9] = "Public", e[e.Video = 10] = "Video", e[e.Resource = 11] = "Resource", e[e.Temp = 12] = "Temp", e[e.AppConfig = 13] = "AppConfig", e[e.AppData = 14] = "AppData", e[e.AppLocalData = 15] = "AppLocalData", e[e.AppCache = 16] = "AppCache", e[e.AppLog = 17] = "AppLog", e[e.Desktop = 18] = "Desktop", e[e.Executable = 19] = "Executable", e[e.Font = 20] = "Font", e[e.Home = 21] = "Home", e[e.Runtime = 22] = "Runtime", e[e.Template = 23] = "Template";
})(N9 || (N9 = {}));
class q0e extends VP {
  async enqueueImageGeneration({
    disableSystemPrompt: t,
    prompt: r,
    snapshotMediaToken: n,
    additionalImages: o
  }) {
    const a = `${this.getApiSchemeAndHost()}/v1/image_studio/prompt`, i = {
      uuid_idempotency_token: crypto.randomUUID(),
      disable_system_prompt: t,
      prompt: r,
      snapshot_media_token: n,
      // Changed from scene_media_token to snapshot_media_token
      additional_images: o
    }, s = await this.post({
      endpoint: a,
      body: i
    }), l = s.success ?? !1;
    return console.log("postResponse FOR ENQUEUE IMAGE GENERATION"), console.log(s), {
      success: l,
      data: l ? s.job_token : void 0,
      errorMessage: l ? void 0 : s.BadInput
    };
  }
  async pollJobSession(t, r = 256) {
    var n, o, a, i, s, l;
    const c = `${this.getApiSchemeAndHost()}/v1/jobs/job/${t}`, u = await this.get({
      endpoint: c
    });
    console.log("Job Polling Response:"), console.log(u);
    const f = (o = (n = u.state.maybe_result) == null ? void 0 : n.media_links) == null ? void 0 : o.cdn_url, p = (a = u.state.maybe_result) == null ? void 0 : a.maybe_public_bucket_media_path, v = (l = (s = (i = u.state.maybe_result) == null ? void 0 : i.media_links) == null ? void 0 : s.maybe_thumbnail_template) == null ? void 0 : l.replace(
      "{WIDTH}",
      r.toString()
    ), x = u.state.status.progress_percentage, b = u.state.status.status;
    console.log("Image URL:", f), console.log("Thumbnail URL:", v), console.log("Progress Percentage:", x), console.log("Status", b), console.log("response FROM JOBS"), console.log(u);
    const m = u.success ?? !1;
    u.status;
    const w = u.BadInput;
    return {
      success: m,
      data: {
        result: {
          image_url: f || "",
          thumbnail_url: v || "",
          public_bucket_path: p || "",
          error: void 0
        },
        job_token: t,
        request: {
          maybe_model_title: "Image Generation"
        },
        status: {
          status: b.toLowerCase(),
          progress_percentage: x
        }
      },
      errorMessage: w
    };
  }
  async pollStudioSessionJobs(t) {
    const r = `${this.getApiSchemeAndHost()}/v1/image_studio/session_jobs/${t}`, n = await this.get({
      endpoint: r
    }), o = n.success ?? !1, a = n.status ?? "", i = n.result ?? {
      generated_images: [],
      error: void 0
    }, s = n.BadInput;
    return {
      success: o,
      data: { status: a, result: i },
      errorMessage: s
    };
  }
  GetPromptsByToken({
    token: t
  }) {
    const r = `${this.getApiSchemeAndHost()}/v1/prompts/${t}`;
    return this.get({ endpoint: r }).then((n) => ({
      success: n.success,
      data: n.prompt
    })).catch((n) => ({ success: !1, errorMessage: n.message }));
  }
  async uploadSceneSnapshot({
    screenshot: t,
    sceneMediaToken: r
  }) {
    const n = `${this.getApiSchemeAndHost()}/v1/image_studio/scene_snapshot`, o = new FormData();
    o.append("snapshot", t), r && o.append("scene_media_token", r);
    const a = crypto.randomUUID();
    o.append("uuid_idempotency_token", a);
    const i = await (await Ph(n, {
      method: "POST",
      headers: {
        Accept: "application/json"
      },
      credentials: "include",
      body: o
    })).json();
    console.log(i);
    let s;
    return i.success ? s = {
      success: !0,
      data: i.snapshot_media_token,
      errorMessage: void 0
    } : s = {
      success: !1,
      errorMessage: "Failed to generate snapshot."
    }, s;
  }
}
class B0e extends VP {
  async authFetch(t, {
    method: r,
    body: n
  }) {
    const o = JSON.stringify(n);
    return await (await Ph(t, {
      method: r,
      headers: {
        Accept: "application/json",
        "Content-Type": "application/json"
      },
      credentials: "include",
      body: o
    })).json();
  }
  GetSession() {
    const t = `${this.getApiSchemeAndHost()}/v1/session`;
    return this.get({ endpoint: t }).then((r) => ({
      success: r.success,
      data: {
        loggedIn: r.logged_in,
        user: r.user
      }
    })).catch((r) => ({
      success: !1,
      errorMessage: r.message
    }));
  }
  GetUserProfile(t) {
    const r = `${this.getApiSchemeAndHost()}/v1/user/${t}/profile`;
    return console.log("endpoint", r), this.get({ endpoint: r }).then((n) => ({
      success: n.success,
      data: {
        user: n.user
      }
    })).catch((n) => ({
      success: !1,
      errorMessage: n.message
    }));
  }
  async Login({
    usernameOrEmail: t,
    password: r
  }) {
    console.log("libs/api - Logging in with usernameOrEmail:", t);
    const n = `${this.getApiSchemeAndHost()}/v1/login`;
    console.log("libs/api - Login endpoint", n);
    const o = {
      username_or_email: t,
      password: r
    };
    try {
      const a = await this.authFetch(n, {
        method: "POST",
        body: o
      });
      return {
        success: a.success,
        data: a.success ? { signedSession: a.signed_session } : void 0,
        errorMessage: a.error_message
      };
    } catch (a) {
      return {
        success: !1,
        errorMessage: a.message
      };
    }
  }
  Logout() {
    const t = `${this.getApiSchemeAndHost()}/v1/logout`;
    return this.post({
      endpoint: t
    }).then((r) => ({
      success: r.success
    })).catch((r) => ({
      success: !1,
      errorMessage: r.message
    }));
  }
  async Signup({
    username: t,
    email: r,
    password: n,
    passwordConfirmation: o,
    signupSource: a
  }) {
    const i = `${this.getApiSchemeAndHost()}/v1/create_account`, s = {
      email_address: r,
      password: n,
      password_confirmation: o,
      username: t
    };
    a && (s.signup_source = a);
    try {
      const l = await this.authFetch(i, {
        method: "POST",
        body: s
      });
      return {
        success: l.success,
        data: l.success ? { signedSession: l.signed_session } : void 0,
        errorMessage: l.error_message || Object.values(l.error_fields ?? {}).join(", ")
      };
    } catch (l) {
      return {
        success: !1,
        errorMessage: l.message
      };
    }
  }
}
window.UsersApi = new B0e();
let X0e = { data: "" }, K0e = (e) => typeof window == "object" ? ((e ? e.querySelector("#_goober") : window._goober) || Object.assign((e || document.head).appendChild(document.createElement("style")), { innerHTML: " ", id: "_goober" })).firstChild : e || X0e, J0e = /(?:([\u0080-\uFFFF\w-%@]+) *:? *([^{;]+?);|([^;}{]*?) *{)|(}\s*)/g, Q0e = /\/\*[^]*?\*\/|  +/g, j9 = /\n+/g, kl = (e, t) => {
  let r = "", n = "", o = "";
  for (let a in e) {
    let i = e[a];
    a[0] == "@" ? a[1] == "i" ? r = a + " " + i + ";" : n += a[1] == "f" ? kl(i, a) : a + "{" + kl(i, a[1] == "k" ? "" : t) + "}" : typeof i == "object" ? n += kl(i, t ? t.replace(/([^,])+/g, (s) => a.replace(/([^,]*:\S+\([^)]*\))|([^,])+/g, (l) => /&/.test(l) ? l.replace(/&/g, s) : s ? s + " " + l : l)) : a) : i != null && (a = /^--/.test(a) ? a : a.replace(/[A-Z]/g, "-$&").toLowerCase(), o += kl.p ? kl.p(a, i) : a + ":" + i + ";");
  }
  return r + (t && o ? t + "{" + o + "}" : o) + n;
}, Ya = {}, eH = (e) => {
  if (typeof e == "object") {
    let t = "";
    for (let r in e) t += r + eH(e[r]);
    return t;
  }
  return e;
}, Z0e = (e, t, r, n, o) => {
  let a = eH(e), i = Ya[a] || (Ya[a] = ((l) => {
    let c = 0, u = 11;
    for (; c < l.length; ) u = 101 * u + l.charCodeAt(c++) >>> 0;
    return "go" + u;
  })(a));
  if (!Ya[i]) {
    let l = a !== e ? e : ((c) => {
      let u, f, p = [{}];
      for (; u = J0e.exec(c.replace(Q0e, "")); ) u[4] ? p.shift() : u[3] ? (f = u[3].replace(j9, " ").trim(), p.unshift(p[0][f] = p[0][f] || {})) : p[0][u[1]] = u[2].replace(j9, " ").trim();
      return p[0];
    })(e);
    Ya[i] = kl(o ? { ["@keyframes " + i]: l } : l, r ? "" : "." + i);
  }
  let s = r && Ya.g ? Ya.g : null;
  return r && (Ya.g = Ya[i]), ((l, c, u, f) => {
    f ? c.data = c.data.replace(f, l) : c.data.indexOf(l) === -1 && (c.data = u ? l + c.data : c.data + l);
  })(Ya[i], t, n, s), i;
}, exe = (e, t, r) => e.reduce((n, o, a) => {
  let i = t[a];
  if (i && i.call) {
    let s = i(r), l = s && s.props && s.props.className || /^go/.test(s) && s;
    i = l ? "." + l : s && typeof s == "object" ? s.props ? "" : kl(s, "") : s === !1 ? "" : s;
  }
  return n + o + (i ?? "");
}, "");
function E0(e) {
  let t = this || {}, r = e.call ? e(t.p) : e;
  return Z0e(r.unshift ? r.raw ? exe(r, [].slice.call(arguments, 1), t.p) : r.reduce((n, o) => Object.assign(n, o && o.call ? o(t.p) : o), {}) : r, K0e(t.target), t.g, t.o, t.k);
}
let tH, Y3, H3;
E0.bind({ g: 1 });
let xi = E0.bind({ k: 1 });
function txe(e, t, r, n) {
  kl.p = t, tH = e, Y3 = r, H3 = n;
}
function Ec(e, t) {
  let r = this || {};
  return function() {
    let n = arguments;
    function o(a, i) {
      let s = Object.assign({}, a), l = s.className || o.className;
      r.p = Object.assign({ theme: Y3 && Y3() }, s), r.o = / *go\d+/.test(l), s.className = E0.apply(r, n) + (l ? " " + l : "");
      let c = e;
      return e[0] && (c = s.as || e, delete s.as), H3 && c[0] && H3(s), tH(c, s);
    }
    return o;
  };
}
var rxe = (e) => typeof e == "function", G3 = (e, t) => rxe(e) ? e(t) : e, nxe = /* @__PURE__ */ (() => {
  let e = 0;
  return () => (++e).toString();
})(), oxe = /* @__PURE__ */ (() => {
  let e;
  return () => {
    if (e === void 0 && typeof window < "u") {
      let t = matchMedia("(prefers-reduced-motion: reduce)");
      e = !t || t.matches;
    }
    return e;
  };
})(), axe = 20, rH = (e, t) => {
  switch (t.type) {
    case 0:
      return { ...e, toasts: [t.toast, ...e.toasts].slice(0, axe) };
    case 1:
      return { ...e, toasts: e.toasts.map((a) => a.id === t.toast.id ? { ...a, ...t.toast } : a) };
    case 2:
      let { toast: r } = t;
      return rH(e, { type: e.toasts.find((a) => a.id === r.id) ? 1 : 0, toast: r });
    case 3:
      let { toastId: n } = t;
      return { ...e, toasts: e.toasts.map((a) => a.id === n || n === void 0 ? { ...a, dismissed: !0, visible: !1 } : a) };
    case 4:
      return t.toastId === void 0 ? { ...e, toasts: [] } : { ...e, toasts: e.toasts.filter((a) => a.id !== t.toastId) };
    case 5:
      return { ...e, pausedAt: t.time };
    case 6:
      let o = t.time - (e.pausedAt || 0);
      return { ...e, pausedAt: void 0, toasts: e.toasts.map((a) => ({ ...a, pauseDuration: a.pauseDuration + o })) };
  }
}, ixe = [], O2 = { toasts: [], pausedAt: void 0 }, WP = (e) => {
  O2 = rH(O2, e), ixe.forEach((t) => {
    t(O2);
  });
}, sxe = (e, t = "blank", r) => ({ createdAt: Date.now(), visible: !0, dismissed: !1, type: t, ariaProps: { role: "status", "aria-live": "polite" }, message: e, pauseDuration: 0, ...r, id: (r == null ? void 0 : r.id) || nxe() }), ib = (e) => (t, r) => {
  let n = sxe(t, e, r);
  return WP({ type: 2, toast: n }), n.id;
}, Gn = (e, t) => ib("blank")(e, t);
Gn.error = ib("error");
Gn.success = ib("success");
Gn.loading = ib("loading");
Gn.custom = ib("custom");
Gn.dismiss = (e) => {
  WP({ type: 3, toastId: e });
};
Gn.remove = (e) => WP({ type: 4, toastId: e });
Gn.promise = (e, t, r) => {
  let n = Gn.loading(t.loading, { ...r, ...r == null ? void 0 : r.loading });
  return typeof e == "function" && (e = e()), e.then((o) => {
    let a = t.success ? G3(t.success, o) : void 0;
    return a ? Gn.success(a, { id: n, ...r, ...r == null ? void 0 : r.success }) : Gn.dismiss(n), o;
  }).catch((o) => {
    let a = t.error ? G3(t.error, o) : void 0;
    a ? Gn.error(a, { id: n, ...r, ...r == null ? void 0 : r.error }) : Gn.dismiss(n);
  }), e;
};
var lxe = xi`
from {
  transform: scale(0) rotate(45deg);
	opacity: 0;
}
to {
 transform: scale(1) rotate(45deg);
  opacity: 1;
}`, cxe = xi`
from {
  transform: scale(0);
  opacity: 0;
}
to {
  transform: scale(1);
  opacity: 1;
}`, uxe = xi`
from {
  transform: scale(0) rotate(90deg);
	opacity: 0;
}
to {
  transform: scale(1) rotate(90deg);
	opacity: 1;
}`, fxe = Ec("div")`
  width: 20px;
  opacity: 0;
  height: 20px;
  border-radius: 10px;
  background: ${(e) => e.primary || "#ff4b4b"};
  position: relative;
  transform: rotate(45deg);

  animation: ${lxe} 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275)
    forwards;
  animation-delay: 100ms;

  &:after,
  &:before {
    content: '';
    animation: ${cxe} 0.15s ease-out forwards;
    animation-delay: 150ms;
    position: absolute;
    border-radius: 3px;
    opacity: 0;
    background: ${(e) => e.secondary || "#fff"};
    bottom: 9px;
    left: 4px;
    height: 2px;
    width: 12px;
  }

  &:before {
    animation: ${uxe} 0.15s ease-out forwards;
    animation-delay: 180ms;
    transform: rotate(90deg);
  }
`, dxe = xi`
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
`, pxe = Ec("div")`
  width: 12px;
  height: 12px;
  box-sizing: border-box;
  border: 2px solid;
  border-radius: 100%;
  border-color: ${(e) => e.secondary || "#e0e0e0"};
  border-right-color: ${(e) => e.primary || "#616161"};
  animation: ${dxe} 1s linear infinite;
`, mxe = xi`
from {
  transform: scale(0) rotate(45deg);
	opacity: 0;
}
to {
  transform: scale(1) rotate(45deg);
	opacity: 1;
}`, gxe = xi`
0% {
	height: 0;
	width: 0;
	opacity: 0;
}
40% {
  height: 0;
	width: 6px;
	opacity: 1;
}
100% {
  opacity: 1;
  height: 10px;
}`, hxe = Ec("div")`
  width: 20px;
  opacity: 0;
  height: 20px;
  border-radius: 10px;
  background: ${(e) => e.primary || "#61d345"};
  position: relative;
  transform: rotate(45deg);

  animation: ${mxe} 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275)
    forwards;
  animation-delay: 100ms;
  &:after {
    content: '';
    box-sizing: border-box;
    animation: ${gxe} 0.2s ease-out forwards;
    opacity: 0;
    animation-delay: 200ms;
    position: absolute;
    border-right: 2px solid;
    border-bottom: 2px solid;
    border-color: ${(e) => e.secondary || "#fff"};
    bottom: 6px;
    left: 6px;
    height: 10px;
    width: 6px;
  }
`, bxe = Ec("div")`
  position: absolute;
`, yxe = Ec("div")`
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  min-width: 20px;
  min-height: 20px;
`, vxe = xi`
from {
  transform: scale(0.6);
  opacity: 0.4;
}
to {
  transform: scale(1);
  opacity: 1;
}`, xxe = Ec("div")`
  position: relative;
  transform: scale(0.6);
  opacity: 0.4;
  min-width: 20px;
  animation: ${vxe} 0.3s 0.12s cubic-bezier(0.175, 0.885, 0.32, 1.275)
    forwards;
`, wxe = ({ toast: e }) => {
  let { icon: t, type: r, iconTheme: n } = e;
  return t !== void 0 ? typeof t == "string" ? Y.createElement(xxe, null, t) : t : r === "blank" ? null : Y.createElement(yxe, null, Y.createElement(pxe, { ...n }), r !== "loading" && Y.createElement(bxe, null, r === "error" ? Y.createElement(fxe, { ...n }) : Y.createElement(hxe, { ...n })));
}, kxe = (e) => `
0% {transform: translate3d(0,${e * -200}%,0) scale(.6); opacity:.5;}
100% {transform: translate3d(0,0,0) scale(1); opacity:1;}
`, $xe = (e) => `
0% {transform: translate3d(0,0,-1px) scale(1); opacity:1;}
100% {transform: translate3d(0,${e * -150}%,-1px) scale(.6); opacity:0;}
`, Oxe = "0%{opacity:0;} 100%{opacity:1;}", Exe = "0%{opacity:1;} 100%{opacity:0;}", Sxe = Ec("div")`
  display: flex;
  align-items: center;
  background: #fff;
  color: #363636;
  line-height: 1.3;
  will-change: transform;
  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1), 0 3px 3px rgba(0, 0, 0, 0.05);
  max-width: 350px;
  pointer-events: auto;
  padding: 8px 10px;
  border-radius: 8px;
`, Pxe = Ec("div")`
  display: flex;
  justify-content: center;
  margin: 4px 10px;
  color: inherit;
  flex: 1 1 auto;
  white-space: pre-line;
`, Cxe = (e, t) => {
  let r = e.includes("top") ? 1 : -1, [n, o] = oxe() ? [Oxe, Exe] : [kxe(r), $xe(r)];
  return { animation: t ? `${xi(n)} 0.35s cubic-bezier(.21,1.02,.73,1) forwards` : `${xi(o)} 0.4s forwards cubic-bezier(.06,.71,.55,1)` };
};
Y.memo(({ toast: e, position: t, style: r, children: n }) => {
  let o = e.height ? Cxe(e.position || t || "top-center", e.visible) : { opacity: 0 }, a = Y.createElement(wxe, { toast: e }), i = Y.createElement(Pxe, { ...e.ariaProps }, G3(e.message, e));
  return Y.createElement(Sxe, { className: e.className, style: { ...o, ...r, ...e.style } }, typeof n == "function" ? n({ icon: a, message: i }) : Y.createElement(Y.Fragment, null, a, i));
});
txe(Y.createElement);
E0`
  z-index: 9999;
  > * {
    pointer-events: auto;
  }
`;
var Axe = Gn;
/*!
 * Font Awesome Free 6.7.2 by @fontawesome - https://fontawesome.com
 * License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License)
 * Copyright 2024 Fonticons, Inc.
 */
function _xe(e, t, r) {
  return (t = jxe(t)) in e ? Object.defineProperty(e, t, {
    value: r,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : e[t] = r, e;
}
function I9(e, t) {
  var r = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var n = Object.getOwnPropertySymbols(e);
    t && (n = n.filter(function(o) {
      return Object.getOwnPropertyDescriptor(e, o).enumerable;
    })), r.push.apply(r, n);
  }
  return r;
}
function ye(e) {
  for (var t = 1; t < arguments.length; t++) {
    var r = arguments[t] != null ? arguments[t] : {};
    t % 2 ? I9(Object(r), !0).forEach(function(n) {
      _xe(e, n, r[n]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : I9(Object(r)).forEach(function(n) {
      Object.defineProperty(e, n, Object.getOwnPropertyDescriptor(r, n));
    });
  }
  return e;
}
function Nxe(e, t) {
  if (typeof e != "object" || !e) return e;
  var r = e[Symbol.toPrimitive];
  if (r !== void 0) {
    var n = r.call(e, t);
    if (typeof n != "object") return n;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (t === "string" ? String : Number)(e);
}
function jxe(e) {
  var t = Nxe(e, "string");
  return typeof t == "symbol" ? t : t + "";
}
const T9 = () => {
};
let UP = {}, nH = {}, oH = null, aH = {
  mark: T9,
  measure: T9
};
try {
  typeof window < "u" && (UP = window), typeof document < "u" && (nH = document), typeof MutationObserver < "u" && (oH = MutationObserver), typeof performance < "u" && (aH = performance);
} catch {
}
const {
  userAgent: M9 = ""
} = UP.navigator || {}, rc = UP, Vr = nH, R9 = oH, iy = aH;
rc.document;
const Wi = !!Vr.documentElement && !!Vr.head && typeof Vr.addEventListener == "function" && typeof Vr.createElement == "function", iH = ~M9.indexOf("MSIE") || ~M9.indexOf("Trident/");
var Ixe = /fa(s|r|l|t|d|dr|dl|dt|b|k|kd|ss|sr|sl|st|sds|sdr|sdl|sdt)?[\-\ ]/, Txe = /Font ?Awesome ?([56 ]*)(Solid|Regular|Light|Thin|Duotone|Brands|Free|Pro|Sharp Duotone|Sharp|Kit)?.*/i, sH = {
  classic: {
    fa: "solid",
    fas: "solid",
    "fa-solid": "solid",
    far: "regular",
    "fa-regular": "regular",
    fal: "light",
    "fa-light": "light",
    fat: "thin",
    "fa-thin": "thin",
    fab: "brands",
    "fa-brands": "brands"
  },
  duotone: {
    fa: "solid",
    fad: "solid",
    "fa-solid": "solid",
    "fa-duotone": "solid",
    fadr: "regular",
    "fa-regular": "regular",
    fadl: "light",
    "fa-light": "light",
    fadt: "thin",
    "fa-thin": "thin"
  },
  sharp: {
    fa: "solid",
    fass: "solid",
    "fa-solid": "solid",
    fasr: "regular",
    "fa-regular": "regular",
    fasl: "light",
    "fa-light": "light",
    fast: "thin",
    "fa-thin": "thin"
  },
  "sharp-duotone": {
    fa: "solid",
    fasds: "solid",
    "fa-solid": "solid",
    fasdr: "regular",
    "fa-regular": "regular",
    fasdl: "light",
    "fa-light": "light",
    fasdt: "thin",
    "fa-thin": "thin"
  }
}, Mxe = {
  GROUP: "duotone-group",
  PRIMARY: "primary",
  SECONDARY: "secondary"
}, lH = ["fa-classic", "fa-duotone", "fa-sharp", "fa-sharp-duotone"], hn = "classic", S0 = "duotone", Rxe = "sharp", zxe = "sharp-duotone", cH = [hn, S0, Rxe, zxe], Fxe = {
  classic: {
    900: "fas",
    400: "far",
    normal: "far",
    300: "fal",
    100: "fat"
  },
  duotone: {
    900: "fad",
    400: "fadr",
    300: "fadl",
    100: "fadt"
  },
  sharp: {
    900: "fass",
    400: "fasr",
    300: "fasl",
    100: "fast"
  },
  "sharp-duotone": {
    900: "fasds",
    400: "fasdr",
    300: "fasdl",
    100: "fasdt"
  }
}, Dxe = {
  "Font Awesome 6 Free": {
    900: "fas",
    400: "far"
  },
  "Font Awesome 6 Pro": {
    900: "fas",
    400: "far",
    normal: "far",
    300: "fal",
    100: "fat"
  },
  "Font Awesome 6 Brands": {
    400: "fab",
    normal: "fab"
  },
  "Font Awesome 6 Duotone": {
    900: "fad",
    400: "fadr",
    normal: "fadr",
    300: "fadl",
    100: "fadt"
  },
  "Font Awesome 6 Sharp": {
    900: "fass",
    400: "fasr",
    normal: "fasr",
    300: "fasl",
    100: "fast"
  },
  "Font Awesome 6 Sharp Duotone": {
    900: "fasds",
    400: "fasdr",
    normal: "fasdr",
    300: "fasdl",
    100: "fasdt"
  }
}, Lxe = /* @__PURE__ */ new Map([["classic", {
  defaultShortPrefixId: "fas",
  defaultStyleId: "solid",
  styleIds: ["solid", "regular", "light", "thin", "brands"],
  futureStyleIds: [],
  defaultFontWeight: 900
}], ["sharp", {
  defaultShortPrefixId: "fass",
  defaultStyleId: "solid",
  styleIds: ["solid", "regular", "light", "thin"],
  futureStyleIds: [],
  defaultFontWeight: 900
}], ["duotone", {
  defaultShortPrefixId: "fad",
  defaultStyleId: "solid",
  styleIds: ["solid", "regular", "light", "thin"],
  futureStyleIds: [],
  defaultFontWeight: 900
}], ["sharp-duotone", {
  defaultShortPrefixId: "fasds",
  defaultStyleId: "solid",
  styleIds: ["solid", "regular", "light", "thin"],
  futureStyleIds: [],
  defaultFontWeight: 900
}]]), Vxe = {
  classic: {
    solid: "fas",
    regular: "far",
    light: "fal",
    thin: "fat",
    brands: "fab"
  },
  duotone: {
    solid: "fad",
    regular: "fadr",
    light: "fadl",
    thin: "fadt"
  },
  sharp: {
    solid: "fass",
    regular: "fasr",
    light: "fasl",
    thin: "fast"
  },
  "sharp-duotone": {
    solid: "fasds",
    regular: "fasdr",
    light: "fasdl",
    thin: "fasdt"
  }
}, Wxe = ["fak", "fa-kit", "fakd", "fa-kit-duotone"], z9 = {
  kit: {
    fak: "kit",
    "fa-kit": "kit"
  },
  "kit-duotone": {
    fakd: "kit-duotone",
    "fa-kit-duotone": "kit-duotone"
  }
}, Uxe = ["kit"], Yxe = {
  kit: {
    "fa-kit": "fak"
  }
}, Hxe = ["fak", "fakd"], Gxe = {
  kit: {
    fak: "fa-kit"
  }
}, F9 = {
  kit: {
    kit: "fak"
  },
  "kit-duotone": {
    "kit-duotone": "fakd"
  }
}, sy = {
  GROUP: "duotone-group",
  SWAP_OPACITY: "swap-opacity",
  PRIMARY: "primary",
  SECONDARY: "secondary"
}, qxe = ["fa-classic", "fa-duotone", "fa-sharp", "fa-sharp-duotone"], Bxe = ["fak", "fa-kit", "fakd", "fa-kit-duotone"], Xxe = {
  "Font Awesome Kit": {
    400: "fak",
    normal: "fak"
  },
  "Font Awesome Kit Duotone": {
    400: "fakd",
    normal: "fakd"
  }
}, Kxe = {
  classic: {
    "fa-brands": "fab",
    "fa-duotone": "fad",
    "fa-light": "fal",
    "fa-regular": "far",
    "fa-solid": "fas",
    "fa-thin": "fat"
  },
  duotone: {
    "fa-regular": "fadr",
    "fa-light": "fadl",
    "fa-thin": "fadt"
  },
  sharp: {
    "fa-solid": "fass",
    "fa-regular": "fasr",
    "fa-light": "fasl",
    "fa-thin": "fast"
  },
  "sharp-duotone": {
    "fa-solid": "fasds",
    "fa-regular": "fasdr",
    "fa-light": "fasdl",
    "fa-thin": "fasdt"
  }
}, Jxe = {
  classic: ["fas", "far", "fal", "fat", "fad"],
  duotone: ["fadr", "fadl", "fadt"],
  sharp: ["fass", "fasr", "fasl", "fast"],
  "sharp-duotone": ["fasds", "fasdr", "fasdl", "fasdt"]
}, q3 = {
  classic: {
    fab: "fa-brands",
    fad: "fa-duotone",
    fal: "fa-light",
    far: "fa-regular",
    fas: "fa-solid",
    fat: "fa-thin"
  },
  duotone: {
    fadr: "fa-regular",
    fadl: "fa-light",
    fadt: "fa-thin"
  },
  sharp: {
    fass: "fa-solid",
    fasr: "fa-regular",
    fasl: "fa-light",
    fast: "fa-thin"
  },
  "sharp-duotone": {
    fasds: "fa-solid",
    fasdr: "fa-regular",
    fasdl: "fa-light",
    fasdt: "fa-thin"
  }
}, Qxe = ["fa-solid", "fa-regular", "fa-light", "fa-thin", "fa-duotone", "fa-brands"], B3 = ["fa", "fas", "far", "fal", "fat", "fad", "fadr", "fadl", "fadt", "fab", "fass", "fasr", "fasl", "fast", "fasds", "fasdr", "fasdl", "fasdt", ...qxe, ...Qxe], Zxe = ["solid", "regular", "light", "thin", "duotone", "brands"], uH = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], ewe = uH.concat([11, 12, 13, 14, 15, 16, 17, 18, 19, 20]), twe = [...Object.keys(Jxe), ...Zxe, "2xs", "xs", "sm", "lg", "xl", "2xl", "beat", "border", "fade", "beat-fade", "bounce", "flip-both", "flip-horizontal", "flip-vertical", "flip", "fw", "inverse", "layers-counter", "layers-text", "layers", "li", "pull-left", "pull-right", "pulse", "rotate-180", "rotate-270", "rotate-90", "rotate-by", "shake", "spin-pulse", "spin-reverse", "spin", "stack-1x", "stack-2x", "stack", "ul", sy.GROUP, sy.SWAP_OPACITY, sy.PRIMARY, sy.SECONDARY].concat(uH.map((e) => "".concat(e, "x"))).concat(ewe.map((e) => "w-".concat(e))), rwe = {
  "Font Awesome 5 Free": {
    900: "fas",
    400: "far"
  },
  "Font Awesome 5 Pro": {
    900: "fas",
    400: "far",
    normal: "far",
    300: "fal"
  },
  "Font Awesome 5 Brands": {
    400: "fab",
    normal: "fab"
  },
  "Font Awesome 5 Duotone": {
    900: "fad"
  }
};
const wi = "___FONT_AWESOME___", X3 = 16, fH = "fa", dH = "svg-inline--fa", hu = "data-fa-i2svg", K3 = "data-fa-pseudo-element", nwe = "data-fa-pseudo-element-pending", YP = "data-prefix", HP = "data-icon", D9 = "fontawesome-i2svg", owe = "async", awe = ["HTML", "HEAD", "STYLE", "SCRIPT"], pH = (() => {
  try {
    return process.env.NODE_ENV === "production";
  } catch {
    return !1;
  }
})();
function sb(e) {
  return new Proxy(e, {
    get(t, r) {
      return r in t ? t[r] : t[hn];
    }
  });
}
const mH = ye({}, sH);
mH[hn] = ye(ye(ye(ye({}, {
  "fa-duotone": "duotone"
}), sH[hn]), z9.kit), z9["kit-duotone"]);
const iwe = sb(mH), J3 = ye({}, Vxe);
J3[hn] = ye(ye(ye(ye({}, {
  duotone: "fad"
}), J3[hn]), F9.kit), F9["kit-duotone"]);
const L9 = sb(J3), Q3 = ye({}, q3);
Q3[hn] = ye(ye({}, Q3[hn]), Gxe.kit);
const GP = sb(Q3), Z3 = ye({}, Kxe);
Z3[hn] = ye(ye({}, Z3[hn]), Yxe.kit);
sb(Z3);
const swe = Ixe, gH = "fa-layers-text", lwe = Txe, cwe = ye({}, Fxe);
sb(cwe);
const uwe = ["class", "data-prefix", "data-icon", "data-fa-transform", "data-fa-mask"], E2 = Mxe, fwe = [...Uxe, ...twe], Ng = rc.FontAwesomeConfig || {};
function dwe(e) {
  var t = Vr.querySelector("script[" + e + "]");
  if (t)
    return t.getAttribute(e);
}
function pwe(e) {
  return e === "" ? !0 : e === "false" ? !1 : e === "true" ? !0 : e;
}
Vr && typeof Vr.querySelector == "function" && [["data-family-prefix", "familyPrefix"], ["data-css-prefix", "cssPrefix"], ["data-family-default", "familyDefault"], ["data-style-default", "styleDefault"], ["data-replacement-class", "replacementClass"], ["data-auto-replace-svg", "autoReplaceSvg"], ["data-auto-add-css", "autoAddCss"], ["data-auto-a11y", "autoA11y"], ["data-search-pseudo-elements", "searchPseudoElements"], ["data-observe-mutations", "observeMutations"], ["data-mutate-approach", "mutateApproach"], ["data-keep-original-source", "keepOriginalSource"], ["data-measure-performance", "measurePerformance"], ["data-show-missing-icons", "showMissingIcons"]].forEach((e) => {
  let [t, r] = e;
  const n = pwe(dwe(t));
  n != null && (Ng[r] = n);
});
const hH = {
  styleDefault: "solid",
  familyDefault: hn,
  cssPrefix: fH,
  replacementClass: dH,
  autoReplaceSvg: !0,
  autoAddCss: !0,
  autoA11y: !0,
  searchPseudoElements: !1,
  observeMutations: !0,
  mutateApproach: "async",
  keepOriginalSource: !0,
  measurePerformance: !1,
  showMissingIcons: !0
};
Ng.familyPrefix && (Ng.cssPrefix = Ng.familyPrefix);
const bd = ye(ye({}, hH), Ng);
bd.autoReplaceSvg || (bd.observeMutations = !1);
const Ye = {};
Object.keys(hH).forEach((e) => {
  Object.defineProperty(Ye, e, {
    enumerable: !0,
    set: function(t) {
      bd[e] = t, jg.forEach((r) => r(Ye));
    },
    get: function() {
      return bd[e];
    }
  });
});
Object.defineProperty(Ye, "familyPrefix", {
  enumerable: !0,
  set: function(e) {
    bd.cssPrefix = e, jg.forEach((t) => t(Ye));
  },
  get: function() {
    return bd.cssPrefix;
  }
});
rc.FontAwesomeConfig = Ye;
const jg = [];
function mwe(e) {
  return jg.push(e), () => {
    jg.splice(jg.indexOf(e), 1);
  };
}
const Us = X3, ha = {
  size: 16,
  x: 0,
  y: 0,
  rotate: 0,
  flipX: !1,
  flipY: !1
};
function gwe(e) {
  if (!e || !Wi)
    return;
  const t = Vr.createElement("style");
  t.setAttribute("type", "text/css"), t.innerHTML = e;
  const r = Vr.head.childNodes;
  let n = null;
  for (let o = r.length - 1; o > -1; o--) {
    const a = r[o], i = (a.tagName || "").toUpperCase();
    ["STYLE", "LINK"].indexOf(i) > -1 && (n = a);
  }
  return Vr.head.insertBefore(t, n), e;
}
const hwe = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
function Ch() {
  let e = 12, t = "";
  for (; e-- > 0; )
    t += hwe[Math.random() * 62 | 0];
  return t;
}
function Vd(e) {
  const t = [];
  for (let r = (e || []).length >>> 0; r--; )
    t[r] = e[r];
  return t;
}
function qP(e) {
  return e.classList ? Vd(e.classList) : (e.getAttribute("class") || "").split(" ").filter((t) => t);
}
function bH(e) {
  return "".concat(e).replace(/&/g, "&amp;").replace(/"/g, "&quot;").replace(/'/g, "&#39;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
}
function bwe(e) {
  return Object.keys(e || {}).reduce((t, r) => t + "".concat(r, '="').concat(bH(e[r]), '" '), "").trim();
}
function P0(e) {
  return Object.keys(e || {}).reduce((t, r) => t + "".concat(r, ": ").concat(e[r].trim(), ";"), "");
}
function BP(e) {
  return e.size !== ha.size || e.x !== ha.x || e.y !== ha.y || e.rotate !== ha.rotate || e.flipX || e.flipY;
}
function ywe(e) {
  let {
    transform: t,
    containerWidth: r,
    iconWidth: n
  } = e;
  const o = {
    transform: "translate(".concat(r / 2, " 256)")
  }, a = "translate(".concat(t.x * 32, ", ").concat(t.y * 32, ") "), i = "scale(".concat(t.size / 16 * (t.flipX ? -1 : 1), ", ").concat(t.size / 16 * (t.flipY ? -1 : 1), ") "), s = "rotate(".concat(t.rotate, " 0 0)"), l = {
    transform: "".concat(a, " ").concat(i, " ").concat(s)
  }, c = {
    transform: "translate(".concat(n / 2 * -1, " -256)")
  };
  return {
    outer: o,
    inner: l,
    path: c
  };
}
function vwe(e) {
  let {
    transform: t,
    width: r = X3,
    height: n = X3,
    startCentered: o = !1
  } = e, a = "";
  return o && iH ? a += "translate(".concat(t.x / Us - r / 2, "em, ").concat(t.y / Us - n / 2, "em) ") : o ? a += "translate(calc(-50% + ".concat(t.x / Us, "em), calc(-50% + ").concat(t.y / Us, "em)) ") : a += "translate(".concat(t.x / Us, "em, ").concat(t.y / Us, "em) "), a += "scale(".concat(t.size / Us * (t.flipX ? -1 : 1), ", ").concat(t.size / Us * (t.flipY ? -1 : 1), ") "), a += "rotate(".concat(t.rotate, "deg) "), a;
}
var xwe = `:root, :host {
  --fa-font-solid: normal 900 1em/1 "Font Awesome 6 Free";
  --fa-font-regular: normal 400 1em/1 "Font Awesome 6 Free";
  --fa-font-light: normal 300 1em/1 "Font Awesome 6 Pro";
  --fa-font-thin: normal 100 1em/1 "Font Awesome 6 Pro";
  --fa-font-duotone: normal 900 1em/1 "Font Awesome 6 Duotone";
  --fa-font-duotone-regular: normal 400 1em/1 "Font Awesome 6 Duotone";
  --fa-font-duotone-light: normal 300 1em/1 "Font Awesome 6 Duotone";
  --fa-font-duotone-thin: normal 100 1em/1 "Font Awesome 6 Duotone";
  --fa-font-brands: normal 400 1em/1 "Font Awesome 6 Brands";
  --fa-font-sharp-solid: normal 900 1em/1 "Font Awesome 6 Sharp";
  --fa-font-sharp-regular: normal 400 1em/1 "Font Awesome 6 Sharp";
  --fa-font-sharp-light: normal 300 1em/1 "Font Awesome 6 Sharp";
  --fa-font-sharp-thin: normal 100 1em/1 "Font Awesome 6 Sharp";
  --fa-font-sharp-duotone-solid: normal 900 1em/1 "Font Awesome 6 Sharp Duotone";
  --fa-font-sharp-duotone-regular: normal 400 1em/1 "Font Awesome 6 Sharp Duotone";
  --fa-font-sharp-duotone-light: normal 300 1em/1 "Font Awesome 6 Sharp Duotone";
  --fa-font-sharp-duotone-thin: normal 100 1em/1 "Font Awesome 6 Sharp Duotone";
}

svg:not(:root).svg-inline--fa, svg:not(:host).svg-inline--fa {
  overflow: visible;
  box-sizing: content-box;
}

.svg-inline--fa {
  display: var(--fa-display, inline-block);
  height: 1em;
  overflow: visible;
  vertical-align: -0.125em;
}
.svg-inline--fa.fa-2xs {
  vertical-align: 0.1em;
}
.svg-inline--fa.fa-xs {
  vertical-align: 0em;
}
.svg-inline--fa.fa-sm {
  vertical-align: -0.0714285705em;
}
.svg-inline--fa.fa-lg {
  vertical-align: -0.2em;
}
.svg-inline--fa.fa-xl {
  vertical-align: -0.25em;
}
.svg-inline--fa.fa-2xl {
  vertical-align: -0.3125em;
}
.svg-inline--fa.fa-pull-left {
  margin-right: var(--fa-pull-margin, 0.3em);
  width: auto;
}
.svg-inline--fa.fa-pull-right {
  margin-left: var(--fa-pull-margin, 0.3em);
  width: auto;
}
.svg-inline--fa.fa-li {
  width: var(--fa-li-width, 2em);
  top: 0.25em;
}
.svg-inline--fa.fa-fw {
  width: var(--fa-fw-width, 1.25em);
}

.fa-layers svg.svg-inline--fa {
  bottom: 0;
  left: 0;
  margin: auto;
  position: absolute;
  right: 0;
  top: 0;
}

.fa-layers-counter, .fa-layers-text {
  display: inline-block;
  position: absolute;
  text-align: center;
}

.fa-layers {
  display: inline-block;
  height: 1em;
  position: relative;
  text-align: center;
  vertical-align: -0.125em;
  width: 1em;
}
.fa-layers svg.svg-inline--fa {
  transform-origin: center center;
}

.fa-layers-text {
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  transform-origin: center center;
}

.fa-layers-counter {
  background-color: var(--fa-counter-background-color, #ff253a);
  border-radius: var(--fa-counter-border-radius, 1em);
  box-sizing: border-box;
  color: var(--fa-inverse, #fff);
  line-height: var(--fa-counter-line-height, 1);
  max-width: var(--fa-counter-max-width, 5em);
  min-width: var(--fa-counter-min-width, 1.5em);
  overflow: hidden;
  padding: var(--fa-counter-padding, 0.25em 0.5em);
  right: var(--fa-right, 0);
  text-overflow: ellipsis;
  top: var(--fa-top, 0);
  transform: scale(var(--fa-counter-scale, 0.25));
  transform-origin: top right;
}

.fa-layers-bottom-right {
  bottom: var(--fa-bottom, 0);
  right: var(--fa-right, 0);
  top: auto;
  transform: scale(var(--fa-layers-scale, 0.25));
  transform-origin: bottom right;
}

.fa-layers-bottom-left {
  bottom: var(--fa-bottom, 0);
  left: var(--fa-left, 0);
  right: auto;
  top: auto;
  transform: scale(var(--fa-layers-scale, 0.25));
  transform-origin: bottom left;
}

.fa-layers-top-right {
  top: var(--fa-top, 0);
  right: var(--fa-right, 0);
  transform: scale(var(--fa-layers-scale, 0.25));
  transform-origin: top right;
}

.fa-layers-top-left {
  left: var(--fa-left, 0);
  right: auto;
  top: var(--fa-top, 0);
  transform: scale(var(--fa-layers-scale, 0.25));
  transform-origin: top left;
}

.fa-1x {
  font-size: 1em;
}

.fa-2x {
  font-size: 2em;
}

.fa-3x {
  font-size: 3em;
}

.fa-4x {
  font-size: 4em;
}

.fa-5x {
  font-size: 5em;
}

.fa-6x {
  font-size: 6em;
}

.fa-7x {
  font-size: 7em;
}

.fa-8x {
  font-size: 8em;
}

.fa-9x {
  font-size: 9em;
}

.fa-10x {
  font-size: 10em;
}

.fa-2xs {
  font-size: 0.625em;
  line-height: 0.1em;
  vertical-align: 0.225em;
}

.fa-xs {
  font-size: 0.75em;
  line-height: 0.0833333337em;
  vertical-align: 0.125em;
}

.fa-sm {
  font-size: 0.875em;
  line-height: 0.0714285718em;
  vertical-align: 0.0535714295em;
}

.fa-lg {
  font-size: 1.25em;
  line-height: 0.05em;
  vertical-align: -0.075em;
}

.fa-xl {
  font-size: 1.5em;
  line-height: 0.0416666682em;
  vertical-align: -0.125em;
}

.fa-2xl {
  font-size: 2em;
  line-height: 0.03125em;
  vertical-align: -0.1875em;
}

.fa-fw {
  text-align: center;
  width: 1.25em;
}

.fa-ul {
  list-style-type: none;
  margin-left: var(--fa-li-margin, 2.5em);
  padding-left: 0;
}
.fa-ul > li {
  position: relative;
}

.fa-li {
  left: calc(-1 * var(--fa-li-width, 2em));
  position: absolute;
  text-align: center;
  width: var(--fa-li-width, 2em);
  line-height: inherit;
}

.fa-border {
  border-color: var(--fa-border-color, #eee);
  border-radius: var(--fa-border-radius, 0.1em);
  border-style: var(--fa-border-style, solid);
  border-width: var(--fa-border-width, 0.08em);
  padding: var(--fa-border-padding, 0.2em 0.25em 0.15em);
}

.fa-pull-left {
  float: left;
  margin-right: var(--fa-pull-margin, 0.3em);
}

.fa-pull-right {
  float: right;
  margin-left: var(--fa-pull-margin, 0.3em);
}

.fa-beat {
  animation-name: fa-beat;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, ease-in-out);
}

.fa-bounce {
  animation-name: fa-bounce;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.28, 0.84, 0.42, 1));
}

.fa-fade {
  animation-name: fa-fade;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));
}

.fa-beat-fade {
  animation-name: fa-beat-fade;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));
}

.fa-flip {
  animation-name: fa-flip;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, ease-in-out);
}

.fa-shake {
  animation-name: fa-shake;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, linear);
}

.fa-spin {
  animation-name: fa-spin;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 2s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, linear);
}

.fa-spin-reverse {
  --fa-animation-direction: reverse;
}

.fa-pulse,
.fa-spin-pulse {
  animation-name: fa-spin;
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, steps(8));
}

@media (prefers-reduced-motion: reduce) {
  .fa-beat,
.fa-bounce,
.fa-fade,
.fa-beat-fade,
.fa-flip,
.fa-pulse,
.fa-shake,
.fa-spin,
.fa-spin-pulse {
    animation-delay: -1ms;
    animation-duration: 1ms;
    animation-iteration-count: 1;
    transition-delay: 0s;
    transition-duration: 0s;
  }
}
@keyframes fa-beat {
  0%, 90% {
    transform: scale(1);
  }
  45% {
    transform: scale(var(--fa-beat-scale, 1.25));
  }
}
@keyframes fa-bounce {
  0% {
    transform: scale(1, 1) translateY(0);
  }
  10% {
    transform: scale(var(--fa-bounce-start-scale-x, 1.1), var(--fa-bounce-start-scale-y, 0.9)) translateY(0);
  }
  30% {
    transform: scale(var(--fa-bounce-jump-scale-x, 0.9), var(--fa-bounce-jump-scale-y, 1.1)) translateY(var(--fa-bounce-height, -0.5em));
  }
  50% {
    transform: scale(var(--fa-bounce-land-scale-x, 1.05), var(--fa-bounce-land-scale-y, 0.95)) translateY(0);
  }
  57% {
    transform: scale(1, 1) translateY(var(--fa-bounce-rebound, -0.125em));
  }
  64% {
    transform: scale(1, 1) translateY(0);
  }
  100% {
    transform: scale(1, 1) translateY(0);
  }
}
@keyframes fa-fade {
  50% {
    opacity: var(--fa-fade-opacity, 0.4);
  }
}
@keyframes fa-beat-fade {
  0%, 100% {
    opacity: var(--fa-beat-fade-opacity, 0.4);
    transform: scale(1);
  }
  50% {
    opacity: 1;
    transform: scale(var(--fa-beat-fade-scale, 1.125));
  }
}
@keyframes fa-flip {
  50% {
    transform: rotate3d(var(--fa-flip-x, 0), var(--fa-flip-y, 1), var(--fa-flip-z, 0), var(--fa-flip-angle, -180deg));
  }
}
@keyframes fa-shake {
  0% {
    transform: rotate(-15deg);
  }
  4% {
    transform: rotate(15deg);
  }
  8%, 24% {
    transform: rotate(-18deg);
  }
  12%, 28% {
    transform: rotate(18deg);
  }
  16% {
    transform: rotate(-22deg);
  }
  20% {
    transform: rotate(22deg);
  }
  32% {
    transform: rotate(-12deg);
  }
  36% {
    transform: rotate(12deg);
  }
  40%, 100% {
    transform: rotate(0deg);
  }
}
@keyframes fa-spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
.fa-rotate-90 {
  transform: rotate(90deg);
}

.fa-rotate-180 {
  transform: rotate(180deg);
}

.fa-rotate-270 {
  transform: rotate(270deg);
}

.fa-flip-horizontal {
  transform: scale(-1, 1);
}

.fa-flip-vertical {
  transform: scale(1, -1);
}

.fa-flip-both,
.fa-flip-horizontal.fa-flip-vertical {
  transform: scale(-1, -1);
}

.fa-rotate-by {
  transform: rotate(var(--fa-rotate-angle, 0));
}

.fa-stack {
  display: inline-block;
  vertical-align: middle;
  height: 2em;
  position: relative;
  width: 2.5em;
}

.fa-stack-1x,
.fa-stack-2x {
  bottom: 0;
  left: 0;
  margin: auto;
  position: absolute;
  right: 0;
  top: 0;
  z-index: var(--fa-stack-z-index, auto);
}

.svg-inline--fa.fa-stack-1x {
  height: 1em;
  width: 1.25em;
}
.svg-inline--fa.fa-stack-2x {
  height: 2em;
  width: 2.5em;
}

.fa-inverse {
  color: var(--fa-inverse, #fff);
}

.sr-only,
.fa-sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.sr-only-focusable:not(:focus),
.fa-sr-only-focusable:not(:focus) {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.svg-inline--fa .fa-primary {
  fill: var(--fa-primary-color, currentColor);
  opacity: var(--fa-primary-opacity, 1);
}

.svg-inline--fa .fa-secondary {
  fill: var(--fa-secondary-color, currentColor);
  opacity: var(--fa-secondary-opacity, 0.4);
}

.svg-inline--fa.fa-swap-opacity .fa-primary {
  opacity: var(--fa-secondary-opacity, 0.4);
}

.svg-inline--fa.fa-swap-opacity .fa-secondary {
  opacity: var(--fa-primary-opacity, 1);
}

.svg-inline--fa mask .fa-primary,
.svg-inline--fa mask .fa-secondary {
  fill: black;
}`;
function yH() {
  const e = fH, t = dH, r = Ye.cssPrefix, n = Ye.replacementClass;
  let o = xwe;
  if (r !== e || n !== t) {
    const a = new RegExp("\\.".concat(e, "\\-"), "g"), i = new RegExp("\\--".concat(e, "\\-"), "g"), s = new RegExp("\\.".concat(t), "g");
    o = o.replace(a, ".".concat(r, "-")).replace(i, "--".concat(r, "-")).replace(s, ".".concat(n));
  }
  return o;
}
let V9 = !1;
function S2() {
  Ye.autoAddCss && !V9 && (gwe(yH()), V9 = !0);
}
var wwe = {
  mixout() {
    return {
      dom: {
        css: yH,
        insertCss: S2
      }
    };
  },
  hooks() {
    return {
      beforeDOMElementCreation() {
        S2();
      },
      beforeI2svg() {
        S2();
      }
    };
  }
};
const ki = rc || {};
ki[wi] || (ki[wi] = {});
ki[wi].styles || (ki[wi].styles = {});
ki[wi].hooks || (ki[wi].hooks = {});
ki[wi].shims || (ki[wi].shims = []);
var ba = ki[wi];
const vH = [], xH = function() {
  Vr.removeEventListener("DOMContentLoaded", xH), e1 = 1, vH.map((e) => e());
};
let e1 = !1;
Wi && (e1 = (Vr.documentElement.doScroll ? /^loaded|^c/ : /^loaded|^i|^c/).test(Vr.readyState), e1 || Vr.addEventListener("DOMContentLoaded", xH));
function kwe(e) {
  Wi && (e1 ? setTimeout(e, 0) : vH.push(e));
}
function lb(e) {
  const {
    tag: t,
    attributes: r = {},
    children: n = []
  } = e;
  return typeof e == "string" ? bH(e) : "<".concat(t, " ").concat(bwe(r), ">").concat(n.map(lb).join(""), "</").concat(t, ">");
}
function W9(e, t, r) {
  if (e && e[t] && e[t][r])
    return {
      prefix: t,
      iconName: r,
      icon: e[t][r]
    };
}
var P2 = function(e, t, r, n) {
  var o = Object.keys(e), a = o.length, i = t, s, l, c;
  for (r === void 0 ? (s = 1, c = e[o[0]]) : (s = 0, c = r); s < a; s++)
    l = o[s], c = i(c, e[l], l, e);
  return c;
};
function $we(e) {
  const t = [];
  let r = 0;
  const n = e.length;
  for (; r < n; ) {
    const o = e.charCodeAt(r++);
    if (o >= 55296 && o <= 56319 && r < n) {
      const a = e.charCodeAt(r++);
      (a & 64512) == 56320 ? t.push(((o & 1023) << 10) + (a & 1023) + 65536) : (t.push(o), r--);
    } else
      t.push(o);
  }
  return t;
}
function wH(e) {
  const t = $we(e);
  return t.length === 1 ? t[0].toString(16) : null;
}
function Owe(e, t) {
  const r = e.length;
  let n = e.charCodeAt(t), o;
  return n >= 55296 && n <= 56319 && r > t + 1 && (o = e.charCodeAt(t + 1), o >= 56320 && o <= 57343) ? (n - 55296) * 1024 + o - 56320 + 65536 : n;
}
function U9(e) {
  return Object.keys(e).reduce((t, r) => {
    const n = e[r];
    return n.icon ? t[n.iconName] = n.icon : t[r] = n, t;
  }, {});
}
function eO(e, t) {
  let r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
  const {
    skipHooks: n = !1
  } = r, o = U9(t);
  typeof ba.hooks.addPack == "function" && !n ? ba.hooks.addPack(e, U9(t)) : ba.styles[e] = ye(ye({}, ba.styles[e] || {}), o), e === "fas" && eO("fa", t);
}
const {
  styles: Ah,
  shims: Ewe
} = ba, kH = Object.keys(GP), Swe = kH.reduce((e, t) => (e[t] = Object.keys(GP[t]), e), {});
let XP = null, $H = {}, OH = {}, EH = {}, SH = {}, PH = {};
function Pwe(e) {
  return ~fwe.indexOf(e);
}
function Cwe(e, t) {
  const r = t.split("-"), n = r[0], o = r.slice(1).join("-");
  return n === e && o !== "" && !Pwe(o) ? o : null;
}
const CH = () => {
  const e = (n) => P2(Ah, (o, a, i) => (o[i] = P2(a, n, {}), o), {});
  $H = e((n, o, a) => (o[3] && (n[o[3]] = a), o[2] && o[2].filter((i) => typeof i == "number").forEach((i) => {
    n[i.toString(16)] = a;
  }), n)), OH = e((n, o, a) => (n[a] = a, o[2] && o[2].filter((i) => typeof i == "string").forEach((i) => {
    n[i] = a;
  }), n)), PH = e((n, o, a) => {
    const i = o[2];
    return n[a] = a, i.forEach((s) => {
      n[s] = a;
    }), n;
  });
  const t = "far" in Ah || Ye.autoFetchSvg, r = P2(Ewe, (n, o) => {
    const a = o[0];
    let i = o[1];
    const s = o[2];
    return i === "far" && !t && (i = "fas"), typeof a == "string" && (n.names[a] = {
      prefix: i,
      iconName: s
    }), typeof a == "number" && (n.unicodes[a.toString(16)] = {
      prefix: i,
      iconName: s
    }), n;
  }, {
    names: {},
    unicodes: {}
  });
  EH = r.names, SH = r.unicodes, XP = C0(Ye.styleDefault, {
    family: Ye.familyDefault
  });
};
mwe((e) => {
  XP = C0(e.styleDefault, {
    family: Ye.familyDefault
  });
});
CH();
function KP(e, t) {
  return ($H[e] || {})[t];
}
function Awe(e, t) {
  return (OH[e] || {})[t];
}
function Lc(e, t) {
  return (PH[e] || {})[t];
}
function AH(e) {
  return EH[e] || {
    prefix: null,
    iconName: null
  };
}
function _we(e) {
  const t = SH[e], r = KP("fas", e);
  return t || (r ? {
    prefix: "fas",
    iconName: r
  } : null) || {
    prefix: null,
    iconName: null
  };
}
function nc() {
  return XP;
}
const _H = () => ({
  prefix: null,
  iconName: null,
  rest: []
});
function Nwe(e) {
  let t = hn;
  const r = kH.reduce((n, o) => (n[o] = "".concat(Ye.cssPrefix, "-").concat(o), n), {});
  return cH.forEach((n) => {
    (e.includes(r[n]) || e.some((o) => Swe[n].includes(o))) && (t = n);
  }), t;
}
function C0(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  const {
    family: r = hn
  } = t, n = iwe[r][e];
  if (r === S0 && !e)
    return "fad";
  const o = L9[r][e] || L9[r][n], a = e in ba.styles ? e : null;
  return o || a || null;
}
function jwe(e) {
  let t = [], r = null;
  return e.forEach((n) => {
    const o = Cwe(Ye.cssPrefix, n);
    o ? r = o : n && t.push(n);
  }), {
    iconName: r,
    rest: t
  };
}
function Y9(e) {
  return e.sort().filter((t, r, n) => n.indexOf(t) === r);
}
function A0(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  const {
    skipLookups: r = !1
  } = t;
  let n = null;
  const o = B3.concat(Bxe), a = Y9(e.filter((f) => o.includes(f))), i = Y9(e.filter((f) => !B3.includes(f))), s = a.filter((f) => (n = f, !lH.includes(f))), [l = null] = s, c = Nwe(a), u = ye(ye({}, jwe(i)), {}, {
    prefix: C0(l, {
      family: c
    })
  });
  return ye(ye(ye({}, u), Rwe({
    values: e,
    family: c,
    styles: Ah,
    config: Ye,
    canonical: u,
    givenPrefix: n
  })), Iwe(r, n, u));
}
function Iwe(e, t, r) {
  let {
    prefix: n,
    iconName: o
  } = r;
  if (e || !n || !o)
    return {
      prefix: n,
      iconName: o
    };
  const a = t === "fa" ? AH(o) : {}, i = Lc(n, o);
  return o = a.iconName || i || o, n = a.prefix || n, n === "far" && !Ah.far && Ah.fas && !Ye.autoFetchSvg && (n = "fas"), {
    prefix: n,
    iconName: o
  };
}
const Twe = cH.filter((e) => e !== hn || e !== S0), Mwe = Object.keys(q3).filter((e) => e !== hn).map((e) => Object.keys(q3[e])).flat();
function Rwe(e) {
  const {
    values: t,
    family: r,
    canonical: n,
    givenPrefix: o = "",
    styles: a = {},
    config: i = {}
  } = e, s = r === S0, l = t.includes("fa-duotone") || t.includes("fad"), c = i.familyDefault === "duotone", u = n.prefix === "fad" || n.prefix === "fa-duotone";
  if (!s && (l || c || u) && (n.prefix = "fad"), (t.includes("fa-brands") || t.includes("fab")) && (n.prefix = "fab"), !n.prefix && Twe.includes(r) && (Object.keys(a).find((f) => Mwe.includes(f)) || i.autoFetchSvg)) {
    const f = Lxe.get(r).defaultShortPrefixId;
    n.prefix = f, n.iconName = Lc(n.prefix, n.iconName) || n.iconName;
  }
  return (n.prefix === "fa" || o === "fa") && (n.prefix = nc() || "fas"), n;
}
class zwe {
  constructor() {
    this.definitions = {};
  }
  add() {
    for (var t = arguments.length, r = new Array(t), n = 0; n < t; n++)
      r[n] = arguments[n];
    const o = r.reduce(this._pullDefinitions, {});
    Object.keys(o).forEach((a) => {
      this.definitions[a] = ye(ye({}, this.definitions[a] || {}), o[a]), eO(a, o[a]);
      const i = GP[hn][a];
      i && eO(i, o[a]), CH();
    });
  }
  reset() {
    this.definitions = {};
  }
  _pullDefinitions(t, r) {
    const n = r.prefix && r.iconName && r.icon ? {
      0: r
    } : r;
    return Object.keys(n).map((o) => {
      const {
        prefix: a,
        iconName: i,
        icon: s
      } = n[o], l = s[2];
      t[a] || (t[a] = {}), l.length > 0 && l.forEach((c) => {
        typeof c == "string" && (t[a][c] = s);
      }), t[a][i] = s;
    }), t;
  }
}
let H9 = [], ff = {};
const Wf = {}, Fwe = Object.keys(Wf);
function Dwe(e, t) {
  let {
    mixoutsTo: r
  } = t;
  return H9 = e, ff = {}, Object.keys(Wf).forEach((n) => {
    Fwe.indexOf(n) === -1 && delete Wf[n];
  }), H9.forEach((n) => {
    const o = n.mixout ? n.mixout() : {};
    if (Object.keys(o).forEach((a) => {
      typeof o[a] == "function" && (r[a] = o[a]), typeof o[a] == "object" && Object.keys(o[a]).forEach((i) => {
        r[a] || (r[a] = {}), r[a][i] = o[a][i];
      });
    }), n.hooks) {
      const a = n.hooks();
      Object.keys(a).forEach((i) => {
        ff[i] || (ff[i] = []), ff[i].push(a[i]);
      });
    }
    n.provides && n.provides(Wf);
  }), r;
}
function tO(e, t) {
  for (var r = arguments.length, n = new Array(r > 2 ? r - 2 : 0), o = 2; o < r; o++)
    n[o - 2] = arguments[o];
  return (ff[e] || []).forEach((a) => {
    t = a.apply(null, [t, ...n]);
  }), t;
}
function bu(e) {
  for (var t = arguments.length, r = new Array(t > 1 ? t - 1 : 0), n = 1; n < t; n++)
    r[n - 1] = arguments[n];
  (ff[e] || []).forEach((o) => {
    o.apply(null, r);
  });
}
function oc() {
  const e = arguments[0], t = Array.prototype.slice.call(arguments, 1);
  return Wf[e] ? Wf[e].apply(null, t) : void 0;
}
function rO(e) {
  e.prefix === "fa" && (e.prefix = "fas");
  let {
    iconName: t
  } = e;
  const r = e.prefix || nc();
  if (t)
    return t = Lc(r, t) || t, W9(NH.definitions, r, t) || W9(ba.styles, r, t);
}
const NH = new zwe(), Lwe = () => {
  Ye.autoReplaceSvg = !1, Ye.observeMutations = !1, bu("noAuto");
}, Vwe = {
  i2svg: function() {
    let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    return Wi ? (bu("beforeI2svg", e), oc("pseudoElements2svg", e), oc("i2svg", e)) : Promise.reject(new Error("Operation requires a DOM of some kind."));
  },
  watch: function() {
    let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    const {
      autoReplaceSvgRoot: t
    } = e;
    Ye.autoReplaceSvg === !1 && (Ye.autoReplaceSvg = !0), Ye.observeMutations = !0, kwe(() => {
      Uwe({
        autoReplaceSvgRoot: t
      }), bu("watch", e);
    });
  }
}, Wwe = {
  icon: (e) => {
    if (e === null)
      return null;
    if (typeof e == "object" && e.prefix && e.iconName)
      return {
        prefix: e.prefix,
        iconName: Lc(e.prefix, e.iconName) || e.iconName
      };
    if (Array.isArray(e) && e.length === 2) {
      const t = e[1].indexOf("fa-") === 0 ? e[1].slice(3) : e[1], r = C0(e[0]);
      return {
        prefix: r,
        iconName: Lc(r, t) || t
      };
    }
    if (typeof e == "string" && (e.indexOf("".concat(Ye.cssPrefix, "-")) > -1 || e.match(swe))) {
      const t = A0(e.split(" "), {
        skipLookups: !0
      });
      return {
        prefix: t.prefix || nc(),
        iconName: Lc(t.prefix, t.iconName) || t.iconName
      };
    }
    if (typeof e == "string") {
      const t = nc();
      return {
        prefix: t,
        iconName: Lc(t, e) || e
      };
    }
  }
}, eo = {
  noAuto: Lwe,
  config: Ye,
  dom: Vwe,
  parse: Wwe,
  library: NH,
  findIconDefinition: rO,
  toHtml: lb
}, Uwe = function() {
  let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  const {
    autoReplaceSvgRoot: t = Vr
  } = e;
  (Object.keys(ba.styles).length > 0 || Ye.autoFetchSvg) && Wi && Ye.autoReplaceSvg && eo.dom.i2svg({
    node: t
  });
};
function _0(e, t) {
  return Object.defineProperty(e, "abstract", {
    get: t
  }), Object.defineProperty(e, "html", {
    get: function() {
      return e.abstract.map((r) => lb(r));
    }
  }), Object.defineProperty(e, "node", {
    get: function() {
      if (!Wi) return;
      const r = Vr.createElement("div");
      return r.innerHTML = e.html, r.children;
    }
  }), e;
}
function Ywe(e) {
  let {
    children: t,
    main: r,
    mask: n,
    attributes: o,
    styles: a,
    transform: i
  } = e;
  if (BP(i) && r.found && !n.found) {
    const {
      width: s,
      height: l
    } = r, c = {
      x: s / l / 2,
      y: 0.5
    };
    o.style = P0(ye(ye({}, a), {}, {
      "transform-origin": "".concat(c.x + i.x / 16, "em ").concat(c.y + i.y / 16, "em")
    }));
  }
  return [{
    tag: "svg",
    attributes: o,
    children: t
  }];
}
function Hwe(e) {
  let {
    prefix: t,
    iconName: r,
    children: n,
    attributes: o,
    symbol: a
  } = e;
  const i = a === !0 ? "".concat(t, "-").concat(Ye.cssPrefix, "-").concat(r) : a;
  return [{
    tag: "svg",
    attributes: {
      style: "display: none;"
    },
    children: [{
      tag: "symbol",
      attributes: ye(ye({}, o), {}, {
        id: i
      }),
      children: n
    }]
  }];
}
function JP(e) {
  const {
    icons: {
      main: t,
      mask: r
    },
    prefix: n,
    iconName: o,
    transform: a,
    symbol: i,
    title: s,
    maskId: l,
    titleId: c,
    extra: u,
    watchable: f = !1
  } = e, {
    width: p,
    height: v
  } = r.found ? r : t, x = Hxe.includes(n), b = [Ye.replacementClass, o ? "".concat(Ye.cssPrefix, "-").concat(o) : ""].filter((h) => u.classes.indexOf(h) === -1).filter((h) => h !== "" || !!h).concat(u.classes).join(" ");
  let m = {
    children: [],
    attributes: ye(ye({}, u.attributes), {}, {
      "data-prefix": n,
      "data-icon": o,
      class: b,
      role: u.attributes.role || "img",
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 ".concat(p, " ").concat(v)
    })
  };
  const w = x && !~u.classes.indexOf("fa-fw") ? {
    width: "".concat(p / v * 16 * 0.0625, "em")
  } : {};
  f && (m.attributes[hu] = ""), s && (m.children.push({
    tag: "title",
    attributes: {
      id: m.attributes["aria-labelledby"] || "title-".concat(c || Ch())
    },
    children: [s]
  }), delete m.attributes.title);
  const $ = ye(ye({}, m), {}, {
    prefix: n,
    iconName: o,
    main: t,
    mask: r,
    maskId: l,
    transform: a,
    symbol: i,
    styles: ye(ye({}, w), u.styles)
  }), {
    children: E,
    attributes: S
  } = r.found && t.found ? oc("generateAbstractMask", $) || {
    children: [],
    attributes: {}
  } : oc("generateAbstractIcon", $) || {
    children: [],
    attributes: {}
  };
  return $.children = E, $.attributes = S, i ? Hwe($) : Ywe($);
}
function G9(e) {
  const {
    content: t,
    width: r,
    height: n,
    transform: o,
    title: a,
    extra: i,
    watchable: s = !1
  } = e, l = ye(ye(ye({}, i.attributes), a ? {
    title: a
  } : {}), {}, {
    class: i.classes.join(" ")
  });
  s && (l[hu] = "");
  const c = ye({}, i.styles);
  BP(o) && (c.transform = vwe({
    transform: o,
    startCentered: !0,
    width: r,
    height: n
  }), c["-webkit-transform"] = c.transform);
  const u = P0(c);
  u.length > 0 && (l.style = u);
  const f = [];
  return f.push({
    tag: "span",
    attributes: l,
    children: [t]
  }), a && f.push({
    tag: "span",
    attributes: {
      class: "sr-only"
    },
    children: [a]
  }), f;
}
function Gwe(e) {
  const {
    content: t,
    title: r,
    extra: n
  } = e, o = ye(ye(ye({}, n.attributes), r ? {
    title: r
  } : {}), {}, {
    class: n.classes.join(" ")
  }), a = P0(n.styles);
  a.length > 0 && (o.style = a);
  const i = [];
  return i.push({
    tag: "span",
    attributes: o,
    children: [t]
  }), r && i.push({
    tag: "span",
    attributes: {
      class: "sr-only"
    },
    children: [r]
  }), i;
}
const {
  styles: C2
} = ba;
function nO(e) {
  const t = e[0], r = e[1], [n] = e.slice(4);
  let o = null;
  return Array.isArray(n) ? o = {
    tag: "g",
    attributes: {
      class: "".concat(Ye.cssPrefix, "-").concat(E2.GROUP)
    },
    children: [{
      tag: "path",
      attributes: {
        class: "".concat(Ye.cssPrefix, "-").concat(E2.SECONDARY),
        fill: "currentColor",
        d: n[0]
      }
    }, {
      tag: "path",
      attributes: {
        class: "".concat(Ye.cssPrefix, "-").concat(E2.PRIMARY),
        fill: "currentColor",
        d: n[1]
      }
    }]
  } : o = {
    tag: "path",
    attributes: {
      fill: "currentColor",
      d: n
    }
  }, {
    found: !0,
    width: t,
    height: r,
    icon: o
  };
}
const qwe = {
  found: !1,
  width: 512,
  height: 512
};
function Bwe(e, t) {
  !pH && !Ye.showMissingIcons && e && console.error('Icon with name "'.concat(e, '" and prefix "').concat(t, '" is missing.'));
}
function oO(e, t) {
  let r = t;
  return t === "fa" && Ye.styleDefault !== null && (t = nc()), new Promise((n, o) => {
    if (r === "fa") {
      const a = AH(e) || {};
      e = a.iconName || e, t = a.prefix || t;
    }
    if (e && t && C2[t] && C2[t][e]) {
      const a = C2[t][e];
      return n(nO(a));
    }
    Bwe(e, t), n(ye(ye({}, qwe), {}, {
      icon: Ye.showMissingIcons && e ? oc("missingIconAbstract") || {} : {}
    }));
  });
}
const q9 = () => {
}, aO = Ye.measurePerformance && iy && iy.mark && iy.measure ? iy : {
  mark: q9,
  measure: q9
}, ng = 'FA "6.7.2"', Xwe = (e) => (aO.mark("".concat(ng, " ").concat(e, " begins")), () => jH(e)), jH = (e) => {
  aO.mark("".concat(ng, " ").concat(e, " ends")), aO.measure("".concat(ng, " ").concat(e), "".concat(ng, " ").concat(e, " begins"), "".concat(ng, " ").concat(e, " ends"));
};
var QP = {
  begin: Xwe,
  end: jH
};
const nv = () => {
};
function B9(e) {
  return typeof (e.getAttribute ? e.getAttribute(hu) : null) == "string";
}
function Kwe(e) {
  const t = e.getAttribute ? e.getAttribute(YP) : null, r = e.getAttribute ? e.getAttribute(HP) : null;
  return t && r;
}
function Jwe(e) {
  return e && e.classList && e.classList.contains && e.classList.contains(Ye.replacementClass);
}
function Qwe() {
  return Ye.autoReplaceSvg === !0 ? ov.replace : ov[Ye.autoReplaceSvg] || ov.replace;
}
function Zwe(e) {
  return Vr.createElementNS("http://www.w3.org/2000/svg", e);
}
function e2e(e) {
  return Vr.createElement(e);
}
function IH(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  const {
    ceFn: r = e.tag === "svg" ? Zwe : e2e
  } = t;
  if (typeof e == "string")
    return Vr.createTextNode(e);
  const n = r(e.tag);
  return Object.keys(e.attributes || []).forEach(function(o) {
    n.setAttribute(o, e.attributes[o]);
  }), (e.children || []).forEach(function(o) {
    n.appendChild(IH(o, {
      ceFn: r
    }));
  }), n;
}
function t2e(e) {
  let t = " ".concat(e.outerHTML, " ");
  return t = "".concat(t, "Font Awesome fontawesome.com "), t;
}
const ov = {
  replace: function(e) {
    const t = e[0];
    if (t.parentNode)
      if (e[1].forEach((r) => {
        t.parentNode.insertBefore(IH(r), t);
      }), t.getAttribute(hu) === null && Ye.keepOriginalSource) {
        let r = Vr.createComment(t2e(t));
        t.parentNode.replaceChild(r, t);
      } else
        t.remove();
  },
  nest: function(e) {
    const t = e[0], r = e[1];
    if (~qP(t).indexOf(Ye.replacementClass))
      return ov.replace(e);
    const n = new RegExp("".concat(Ye.cssPrefix, "-.*"));
    if (delete r[0].attributes.id, r[0].attributes.class) {
      const a = r[0].attributes.class.split(" ").reduce((i, s) => (s === Ye.replacementClass || s.match(n) ? i.toSvg.push(s) : i.toNode.push(s), i), {
        toNode: [],
        toSvg: []
      });
      r[0].attributes.class = a.toSvg.join(" "), a.toNode.length === 0 ? t.removeAttribute("class") : t.setAttribute("class", a.toNode.join(" "));
    }
    const o = r.map((a) => lb(a)).join(`
`);
    t.setAttribute(hu, ""), t.innerHTML = o;
  }
};
function X9(e) {
  e();
}
function TH(e, t) {
  const r = typeof t == "function" ? t : nv;
  if (e.length === 0)
    r();
  else {
    let n = X9;
    Ye.mutateApproach === owe && (n = rc.requestAnimationFrame || X9), n(() => {
      const o = Qwe(), a = QP.begin("mutate");
      e.map(o), a(), r();
    });
  }
}
let ZP = !1;
function MH() {
  ZP = !0;
}
function iO() {
  ZP = !1;
}
let t1 = null;
function K9(e) {
  if (!R9 || !Ye.observeMutations)
    return;
  const {
    treeCallback: t = nv,
    nodeCallback: r = nv,
    pseudoElementsCallback: n = nv,
    observeMutationsRoot: o = Vr
  } = e;
  t1 = new R9((a) => {
    if (ZP) return;
    const i = nc();
    Vd(a).forEach((s) => {
      if (s.type === "childList" && s.addedNodes.length > 0 && !B9(s.addedNodes[0]) && (Ye.searchPseudoElements && n(s.target), t(s.target)), s.type === "attributes" && s.target.parentNode && Ye.searchPseudoElements && n(s.target.parentNode), s.type === "attributes" && B9(s.target) && ~uwe.indexOf(s.attributeName))
        if (s.attributeName === "class" && Kwe(s.target)) {
          const {
            prefix: l,
            iconName: c
          } = A0(qP(s.target));
          s.target.setAttribute(YP, l || i), c && s.target.setAttribute(HP, c);
        } else Jwe(s.target) && r(s.target);
    });
  }), Wi && t1.observe(o, {
    childList: !0,
    attributes: !0,
    characterData: !0,
    subtree: !0
  });
}
function r2e() {
  t1 && t1.disconnect();
}
function n2e(e) {
  const t = e.getAttribute("style");
  let r = [];
  return t && (r = t.split(";").reduce((n, o) => {
    const a = o.split(":"), i = a[0], s = a.slice(1);
    return i && s.length > 0 && (n[i] = s.join(":").trim()), n;
  }, {})), r;
}
function o2e(e) {
  const t = e.getAttribute("data-prefix"), r = e.getAttribute("data-icon"), n = e.innerText !== void 0 ? e.innerText.trim() : "";
  let o = A0(qP(e));
  return o.prefix || (o.prefix = nc()), t && r && (o.prefix = t, o.iconName = r), o.iconName && o.prefix || (o.prefix && n.length > 0 && (o.iconName = Awe(o.prefix, e.innerText) || KP(o.prefix, wH(e.innerText))), !o.iconName && Ye.autoFetchSvg && e.firstChild && e.firstChild.nodeType === Node.TEXT_NODE && (o.iconName = e.firstChild.data)), o;
}
function a2e(e) {
  const t = Vd(e.attributes).reduce((o, a) => (o.name !== "class" && o.name !== "style" && (o[a.name] = a.value), o), {}), r = e.getAttribute("title"), n = e.getAttribute("data-fa-title-id");
  return Ye.autoA11y && (r ? t["aria-labelledby"] = "".concat(Ye.replacementClass, "-title-").concat(n || Ch()) : (t["aria-hidden"] = "true", t.focusable = "false")), t;
}
function i2e() {
  return {
    iconName: null,
    title: null,
    titleId: null,
    prefix: null,
    transform: ha,
    symbol: !1,
    mask: {
      iconName: null,
      prefix: null,
      rest: []
    },
    maskId: null,
    extra: {
      classes: [],
      styles: {},
      attributes: {}
    }
  };
}
function J9(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {
    styleParser: !0
  };
  const {
    iconName: r,
    prefix: n,
    rest: o
  } = o2e(e), a = a2e(e), i = tO("parseNodeAttributes", {}, e);
  let s = t.styleParser ? n2e(e) : [];
  return ye({
    iconName: r,
    title: e.getAttribute("title"),
    titleId: e.getAttribute("data-fa-title-id"),
    prefix: n,
    transform: ha,
    mask: {
      iconName: null,
      prefix: null,
      rest: []
    },
    maskId: null,
    symbol: !1,
    extra: {
      classes: o,
      styles: s,
      attributes: a
    }
  }, i);
}
const {
  styles: s2e
} = ba;
function RH(e) {
  const t = Ye.autoReplaceSvg === "nest" ? J9(e, {
    styleParser: !1
  }) : J9(e);
  return ~t.extra.classes.indexOf(gH) ? oc("generateLayersText", e, t) : oc("generateSvgReplacementMutation", e, t);
}
function l2e() {
  return [...Wxe, ...B3];
}
function Q9(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
  if (!Wi) return Promise.resolve();
  const r = Vr.documentElement.classList, n = (u) => r.add("".concat(D9, "-").concat(u)), o = (u) => r.remove("".concat(D9, "-").concat(u)), a = Ye.autoFetchSvg ? l2e() : lH.concat(Object.keys(s2e));
  a.includes("fa") || a.push("fa");
  const i = [".".concat(gH, ":not([").concat(hu, "])")].concat(a.map((u) => ".".concat(u, ":not([").concat(hu, "])"))).join(", ");
  if (i.length === 0)
    return Promise.resolve();
  let s = [];
  try {
    s = Vd(e.querySelectorAll(i));
  } catch {
  }
  if (s.length > 0)
    n("pending"), o("complete");
  else
    return Promise.resolve();
  const l = QP.begin("onTree"), c = s.reduce((u, f) => {
    try {
      const p = RH(f);
      p && u.push(p);
    } catch (p) {
      pH || p.name === "MissingIcon" && console.error(p);
    }
    return u;
  }, []);
  return new Promise((u, f) => {
    Promise.all(c).then((p) => {
      TH(p, () => {
        n("active"), n("complete"), o("pending"), typeof t == "function" && t(), l(), u();
      });
    }).catch((p) => {
      l(), f(p);
    });
  });
}
function c2e(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
  RH(e).then((r) => {
    r && TH([r], t);
  });
}
function u2e(e) {
  return function(t) {
    let r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    const n = (t || {}).icon ? t : rO(t || {});
    let {
      mask: o
    } = r;
    return o && (o = (o || {}).icon ? o : rO(o || {})), e(n, ye(ye({}, r), {}, {
      mask: o
    }));
  };
}
const f2e = function(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  const {
    transform: r = ha,
    symbol: n = !1,
    mask: o = null,
    maskId: a = null,
    title: i = null,
    titleId: s = null,
    classes: l = [],
    attributes: c = {},
    styles: u = {}
  } = t;
  if (!e) return;
  const {
    prefix: f,
    iconName: p,
    icon: v
  } = e;
  return _0(ye({
    type: "icon"
  }, e), () => (bu("beforeDOMElementCreation", {
    iconDefinition: e,
    params: t
  }), Ye.autoA11y && (i ? c["aria-labelledby"] = "".concat(Ye.replacementClass, "-title-").concat(s || Ch()) : (c["aria-hidden"] = "true", c.focusable = "false")), JP({
    icons: {
      main: nO(v),
      mask: o ? nO(o.icon) : {
        found: !1,
        width: null,
        height: null,
        icon: {}
      }
    },
    prefix: f,
    iconName: p,
    transform: ye(ye({}, ha), r),
    symbol: n,
    title: i,
    maskId: a,
    titleId: s,
    extra: {
      attributes: c,
      styles: u,
      classes: l
    }
  })));
};
var d2e = {
  mixout() {
    return {
      icon: u2e(f2e)
    };
  },
  hooks() {
    return {
      mutationObserverCallbacks(e) {
        return e.treeCallback = Q9, e.nodeCallback = c2e, e;
      }
    };
  },
  provides(e) {
    e.i2svg = function(t) {
      const {
        node: r = Vr,
        callback: n = () => {
        }
      } = t;
      return Q9(r, n);
    }, e.generateSvgReplacementMutation = function(t, r) {
      const {
        iconName: n,
        title: o,
        titleId: a,
        prefix: i,
        transform: s,
        symbol: l,
        mask: c,
        maskId: u,
        extra: f
      } = r;
      return new Promise((p, v) => {
        Promise.all([oO(n, i), c.iconName ? oO(c.iconName, c.prefix) : Promise.resolve({
          found: !1,
          width: 512,
          height: 512,
          icon: {}
        })]).then((x) => {
          let [b, m] = x;
          p([t, JP({
            icons: {
              main: b,
              mask: m
            },
            prefix: i,
            iconName: n,
            transform: s,
            symbol: l,
            maskId: u,
            title: o,
            titleId: a,
            extra: f,
            watchable: !0
          })]);
        }).catch(v);
      });
    }, e.generateAbstractIcon = function(t) {
      let {
        children: r,
        attributes: n,
        main: o,
        transform: a,
        styles: i
      } = t;
      const s = P0(i);
      s.length > 0 && (n.style = s);
      let l;
      return BP(a) && (l = oc("generateAbstractTransformGrouping", {
        main: o,
        transform: a,
        containerWidth: o.width,
        iconWidth: o.width
      })), r.push(l || o.icon), {
        children: r,
        attributes: n
      };
    };
  }
}, p2e = {
  mixout() {
    return {
      layer(e) {
        let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        const {
          classes: r = []
        } = t;
        return _0({
          type: "layer"
        }, () => {
          bu("beforeDOMElementCreation", {
            assembler: e,
            params: t
          });
          let n = [];
          return e((o) => {
            Array.isArray(o) ? o.map((a) => {
              n = n.concat(a.abstract);
            }) : n = n.concat(o.abstract);
          }), [{
            tag: "span",
            attributes: {
              class: ["".concat(Ye.cssPrefix, "-layers"), ...r].join(" ")
            },
            children: n
          }];
        });
      }
    };
  }
}, m2e = {
  mixout() {
    return {
      counter(e) {
        let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        const {
          title: r = null,
          classes: n = [],
          attributes: o = {},
          styles: a = {}
        } = t;
        return _0({
          type: "counter",
          content: e
        }, () => (bu("beforeDOMElementCreation", {
          content: e,
          params: t
        }), Gwe({
          content: e.toString(),
          title: r,
          extra: {
            attributes: o,
            styles: a,
            classes: ["".concat(Ye.cssPrefix, "-layers-counter"), ...n]
          }
        })));
      }
    };
  }
}, g2e = {
  mixout() {
    return {
      text(e) {
        let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        const {
          transform: r = ha,
          title: n = null,
          classes: o = [],
          attributes: a = {},
          styles: i = {}
        } = t;
        return _0({
          type: "text",
          content: e
        }, () => (bu("beforeDOMElementCreation", {
          content: e,
          params: t
        }), G9({
          content: e,
          transform: ye(ye({}, ha), r),
          title: n,
          extra: {
            attributes: a,
            styles: i,
            classes: ["".concat(Ye.cssPrefix, "-layers-text"), ...o]
          }
        })));
      }
    };
  },
  provides(e) {
    e.generateLayersText = function(t, r) {
      const {
        title: n,
        transform: o,
        extra: a
      } = r;
      let i = null, s = null;
      if (iH) {
        const l = parseInt(getComputedStyle(t).fontSize, 10), c = t.getBoundingClientRect();
        i = c.width / l, s = c.height / l;
      }
      return Ye.autoA11y && !n && (a.attributes["aria-hidden"] = "true"), Promise.resolve([t, G9({
        content: t.innerHTML,
        width: i,
        height: s,
        transform: o,
        title: n,
        extra: a,
        watchable: !0
      })]);
    };
  }
};
const h2e = new RegExp('"', "ug"), Z9 = [1105920, 1112319], e7 = ye(ye(ye(ye({}, {
  FontAwesome: {
    normal: "fas",
    400: "fas"
  }
}), Dxe), rwe), Xxe), sO = Object.keys(e7).reduce((e, t) => (e[t.toLowerCase()] = e7[t], e), {}), b2e = Object.keys(sO).reduce((e, t) => {
  const r = sO[t];
  return e[t] = r[900] || [...Object.entries(r)][0][1], e;
}, {});
function y2e(e) {
  const t = e.replace(h2e, ""), r = Owe(t, 0), n = r >= Z9[0] && r <= Z9[1], o = t.length === 2 ? t[0] === t[1] : !1;
  return {
    value: wH(o ? t[0] : t),
    isSecondary: n || o
  };
}
function v2e(e, t) {
  const r = e.replace(/^['"]|['"]$/g, "").toLowerCase(), n = parseInt(t), o = isNaN(n) ? "normal" : n;
  return (sO[r] || {})[o] || b2e[r];
}
function t7(e, t) {
  const r = "".concat(nwe).concat(t.replace(":", "-"));
  return new Promise((n, o) => {
    if (e.getAttribute(r) !== null)
      return n();
    const a = Vd(e.children).filter((f) => f.getAttribute(K3) === t)[0], i = rc.getComputedStyle(e, t), s = i.getPropertyValue("font-family"), l = s.match(lwe), c = i.getPropertyValue("font-weight"), u = i.getPropertyValue("content");
    if (a && !l)
      return e.removeChild(a), n();
    if (l && u !== "none" && u !== "") {
      const f = i.getPropertyValue("content");
      let p = v2e(s, c);
      const {
        value: v,
        isSecondary: x
      } = y2e(f), b = l[0].startsWith("FontAwesome");
      let m = KP(p, v), w = m;
      if (b) {
        const $ = _we(v);
        $.iconName && $.prefix && (m = $.iconName, p = $.prefix);
      }
      if (m && !x && (!a || a.getAttribute(YP) !== p || a.getAttribute(HP) !== w)) {
        e.setAttribute(r, w), a && e.removeChild(a);
        const $ = i2e(), {
          extra: E
        } = $;
        E.attributes[K3] = t, oO(m, p).then((S) => {
          const h = JP(ye(ye({}, $), {}, {
            icons: {
              main: S,
              mask: _H()
            },
            prefix: p,
            iconName: w,
            extra: E,
            watchable: !0
          })), U = Vr.createElementNS("http://www.w3.org/2000/svg", "svg");
          t === "::before" ? e.insertBefore(U, e.firstChild) : e.appendChild(U), U.outerHTML = h.map((G) => lb(G)).join(`
`), e.removeAttribute(r), n();
        }).catch(o);
      } else
        n();
    } else
      n();
  });
}
function x2e(e) {
  return Promise.all([t7(e, "::before"), t7(e, "::after")]);
}
function w2e(e) {
  return e.parentNode !== document.head && !~awe.indexOf(e.tagName.toUpperCase()) && !e.getAttribute(K3) && (!e.parentNode || e.parentNode.tagName !== "svg");
}
function r7(e) {
  if (Wi)
    return new Promise((t, r) => {
      const n = Vd(e.querySelectorAll("*")).filter(w2e).map(x2e), o = QP.begin("searchPseudoElements");
      MH(), Promise.all(n).then(() => {
        o(), iO(), t();
      }).catch(() => {
        o(), iO(), r();
      });
    });
}
var k2e = {
  hooks() {
    return {
      mutationObserverCallbacks(e) {
        return e.pseudoElementsCallback = r7, e;
      }
    };
  },
  provides(e) {
    e.pseudoElements2svg = function(t) {
      const {
        node: r = Vr
      } = t;
      Ye.searchPseudoElements && r7(r);
    };
  }
};
let n7 = !1;
var $2e = {
  mixout() {
    return {
      dom: {
        unwatch() {
          MH(), n7 = !0;
        }
      }
    };
  },
  hooks() {
    return {
      bootstrap() {
        K9(tO("mutationObserverCallbacks", {}));
      },
      noAuto() {
        r2e();
      },
      watch(e) {
        const {
          observeMutationsRoot: t
        } = e;
        n7 ? iO() : K9(tO("mutationObserverCallbacks", {
          observeMutationsRoot: t
        }));
      }
    };
  }
};
const o7 = (e) => {
  let t = {
    size: 16,
    x: 0,
    y: 0,
    flipX: !1,
    flipY: !1,
    rotate: 0
  };
  return e.toLowerCase().split(" ").reduce((r, n) => {
    const o = n.toLowerCase().split("-"), a = o[0];
    let i = o.slice(1).join("-");
    if (a && i === "h")
      return r.flipX = !0, r;
    if (a && i === "v")
      return r.flipY = !0, r;
    if (i = parseFloat(i), isNaN(i))
      return r;
    switch (a) {
      case "grow":
        r.size = r.size + i;
        break;
      case "shrink":
        r.size = r.size - i;
        break;
      case "left":
        r.x = r.x - i;
        break;
      case "right":
        r.x = r.x + i;
        break;
      case "up":
        r.y = r.y - i;
        break;
      case "down":
        r.y = r.y + i;
        break;
      case "rotate":
        r.rotate = r.rotate + i;
        break;
    }
    return r;
  }, t);
};
var O2e = {
  mixout() {
    return {
      parse: {
        transform: (e) => o7(e)
      }
    };
  },
  hooks() {
    return {
      parseNodeAttributes(e, t) {
        const r = t.getAttribute("data-fa-transform");
        return r && (e.transform = o7(r)), e;
      }
    };
  },
  provides(e) {
    e.generateAbstractTransformGrouping = function(t) {
      let {
        main: r,
        transform: n,
        containerWidth: o,
        iconWidth: a
      } = t;
      const i = {
        transform: "translate(".concat(o / 2, " 256)")
      }, s = "translate(".concat(n.x * 32, ", ").concat(n.y * 32, ") "), l = "scale(".concat(n.size / 16 * (n.flipX ? -1 : 1), ", ").concat(n.size / 16 * (n.flipY ? -1 : 1), ") "), c = "rotate(".concat(n.rotate, " 0 0)"), u = {
        transform: "".concat(s, " ").concat(l, " ").concat(c)
      }, f = {
        transform: "translate(".concat(a / 2 * -1, " -256)")
      }, p = {
        outer: i,
        inner: u,
        path: f
      };
      return {
        tag: "g",
        attributes: ye({}, p.outer),
        children: [{
          tag: "g",
          attributes: ye({}, p.inner),
          children: [{
            tag: r.icon.tag,
            children: r.icon.children,
            attributes: ye(ye({}, r.icon.attributes), p.path)
          }]
        }]
      };
    };
  }
};
const A2 = {
  x: 0,
  y: 0,
  width: "100%",
  height: "100%"
};
function a7(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0;
  return e.attributes && (e.attributes.fill || t) && (e.attributes.fill = "black"), e;
}
function E2e(e) {
  return e.tag === "g" ? e.children : [e];
}
var S2e = {
  hooks() {
    return {
      parseNodeAttributes(e, t) {
        const r = t.getAttribute("data-fa-mask"), n = r ? A0(r.split(" ").map((o) => o.trim())) : _H();
        return n.prefix || (n.prefix = nc()), e.mask = n, e.maskId = t.getAttribute("data-fa-mask-id"), e;
      }
    };
  },
  provides(e) {
    e.generateAbstractMask = function(t) {
      let {
        children: r,
        attributes: n,
        main: o,
        mask: a,
        maskId: i,
        transform: s
      } = t;
      const {
        width: l,
        icon: c
      } = o, {
        width: u,
        icon: f
      } = a, p = ywe({
        transform: s,
        containerWidth: u,
        iconWidth: l
      }), v = {
        tag: "rect",
        attributes: ye(ye({}, A2), {}, {
          fill: "white"
        })
      }, x = c.children ? {
        children: c.children.map(a7)
      } : {}, b = {
        tag: "g",
        attributes: ye({}, p.inner),
        children: [a7(ye({
          tag: c.tag,
          attributes: ye(ye({}, c.attributes), p.path)
        }, x))]
      }, m = {
        tag: "g",
        attributes: ye({}, p.outer),
        children: [b]
      }, w = "mask-".concat(i || Ch()), $ = "clip-".concat(i || Ch()), E = {
        tag: "mask",
        attributes: ye(ye({}, A2), {}, {
          id: w,
          maskUnits: "userSpaceOnUse",
          maskContentUnits: "userSpaceOnUse"
        }),
        children: [v, m]
      }, S = {
        tag: "defs",
        children: [{
          tag: "clipPath",
          attributes: {
            id: $
          },
          children: E2e(f)
        }, E]
      };
      return r.push(S, {
        tag: "rect",
        attributes: ye({
          fill: "currentColor",
          "clip-path": "url(#".concat($, ")"),
          mask: "url(#".concat(w, ")")
        }, A2)
      }), {
        children: r,
        attributes: n
      };
    };
  }
}, P2e = {
  provides(e) {
    let t = !1;
    rc.matchMedia && (t = rc.matchMedia("(prefers-reduced-motion: reduce)").matches), e.missingIconAbstract = function() {
      const r = [], n = {
        fill: "currentColor"
      }, o = {
        attributeType: "XML",
        repeatCount: "indefinite",
        dur: "2s"
      };
      r.push({
        tag: "path",
        attributes: ye(ye({}, n), {}, {
          d: "M156.5,447.7l-12.6,29.5c-18.7-9.5-35.9-21.2-51.5-34.9l22.7-22.7C127.6,430.5,141.5,440,156.5,447.7z M40.6,272H8.5 c1.4,21.2,5.4,41.7,11.7,61.1L50,321.2C45.1,305.5,41.8,289,40.6,272z M40.6,240c1.4-18.8,5.2-37,11.1-54.1l-29.5-12.6 C14.7,194.3,10,216.7,8.5,240H40.6z M64.3,156.5c7.8-14.9,17.2-28.8,28.1-41.5L69.7,92.3c-13.7,15.6-25.5,32.8-34.9,51.5 L64.3,156.5z M397,419.6c-13.9,12-29.4,22.3-46.1,30.4l11.9,29.8c20.7-9.9,39.8-22.6,56.9-37.6L397,419.6z M115,92.4 c13.9-12,29.4-22.3,46.1-30.4l-11.9-29.8c-20.7,9.9-39.8,22.6-56.8,37.6L115,92.4z M447.7,355.5c-7.8,14.9-17.2,28.8-28.1,41.5 l22.7,22.7c13.7-15.6,25.5-32.9,34.9-51.5L447.7,355.5z M471.4,272c-1.4,18.8-5.2,37-11.1,54.1l29.5,12.6 c7.5-21.1,12.2-43.5,13.6-66.8H471.4z M321.2,462c-15.7,5-32.2,8.2-49.2,9.4v32.1c21.2-1.4,41.7-5.4,61.1-11.7L321.2,462z M240,471.4c-18.8-1.4-37-5.2-54.1-11.1l-12.6,29.5c21.1,7.5,43.5,12.2,66.8,13.6V471.4z M462,190.8c5,15.7,8.2,32.2,9.4,49.2h32.1 c-1.4-21.2-5.4-41.7-11.7-61.1L462,190.8z M92.4,397c-12-13.9-22.3-29.4-30.4-46.1l-29.8,11.9c9.9,20.7,22.6,39.8,37.6,56.9 L92.4,397z M272,40.6c18.8,1.4,36.9,5.2,54.1,11.1l12.6-29.5C317.7,14.7,295.3,10,272,8.5V40.6z M190.8,50 c15.7-5,32.2-8.2,49.2-9.4V8.5c-21.2,1.4-41.7,5.4-61.1,11.7L190.8,50z M442.3,92.3L419.6,115c12,13.9,22.3,29.4,30.5,46.1 l29.8-11.9C470,128.5,457.3,109.4,442.3,92.3z M397,92.4l22.7-22.7c-15.6-13.7-32.8-25.5-51.5-34.9l-12.6,29.5 C370.4,72.1,384.4,81.5,397,92.4z"
        })
      });
      const a = ye(ye({}, o), {}, {
        attributeName: "opacity"
      }), i = {
        tag: "circle",
        attributes: ye(ye({}, n), {}, {
          cx: "256",
          cy: "364",
          r: "28"
        }),
        children: []
      };
      return t || i.children.push({
        tag: "animate",
        attributes: ye(ye({}, o), {}, {
          attributeName: "r",
          values: "28;14;28;28;14;28;"
        })
      }, {
        tag: "animate",
        attributes: ye(ye({}, a), {}, {
          values: "1;0;1;1;0;1;"
        })
      }), r.push(i), r.push({
        tag: "path",
        attributes: ye(ye({}, n), {}, {
          opacity: "1",
          d: "M263.7,312h-16c-6.6,0-12-5.4-12-12c0-71,77.4-63.9,77.4-107.8c0-20-17.8-40.2-57.4-40.2c-29.1,0-44.3,9.6-59.2,28.7 c-3.9,5-11.1,6-16.2,2.4l-13.1-9.2c-5.6-3.9-6.9-11.8-2.6-17.2c21.2-27.2,46.4-44.7,91.2-44.7c52.3,0,97.4,29.8,97.4,80.2 c0,67.6-77.4,63.5-77.4,107.8C275.7,306.6,270.3,312,263.7,312z"
        }),
        children: t ? [] : [{
          tag: "animate",
          attributes: ye(ye({}, a), {}, {
            values: "1;0;0;0;0;1;"
          })
        }]
      }), t || r.push({
        tag: "path",
        attributes: ye(ye({}, n), {}, {
          opacity: "0",
          d: "M232.5,134.5l7,168c0.3,6.4,5.6,11.5,12,11.5h9c6.4,0,11.7-5.1,12-11.5l7-168c0.3-6.8-5.2-12.5-12-12.5h-23 C237.7,122,232.2,127.7,232.5,134.5z"
        }),
        children: [{
          tag: "animate",
          attributes: ye(ye({}, a), {}, {
            values: "0;0;1;1;0;0;"
          })
        }]
      }), {
        tag: "g",
        attributes: {
          class: "missing"
        },
        children: r
      };
    };
  }
}, C2e = {
  hooks() {
    return {
      parseNodeAttributes(e, t) {
        const r = t.getAttribute("data-fa-symbol"), n = r === null ? !1 : r === "" ? !0 : r;
        return e.symbol = n, e;
      }
    };
  }
}, A2e = [wwe, d2e, p2e, m2e, g2e, k2e, $2e, O2e, S2e, P2e, C2e];
Dwe(A2e, {
  mixoutsTo: eo
});
eo.noAuto;
eo.config;
eo.library;
eo.dom;
const lO = eo.parse;
eo.findIconDefinition;
eo.toHtml;
const _2e = eo.icon;
eo.layer;
eo.text;
eo.counter;
var ly = { exports: {} }, _2 = { exports: {} }, Jt = {};
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var i7;
function N2e() {
  if (i7) return Jt;
  i7 = 1;
  var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, r = e ? Symbol.for("react.portal") : 60106, n = e ? Symbol.for("react.fragment") : 60107, o = e ? Symbol.for("react.strict_mode") : 60108, a = e ? Symbol.for("react.profiler") : 60114, i = e ? Symbol.for("react.provider") : 60109, s = e ? Symbol.for("react.context") : 60110, l = e ? Symbol.for("react.async_mode") : 60111, c = e ? Symbol.for("react.concurrent_mode") : 60111, u = e ? Symbol.for("react.forward_ref") : 60112, f = e ? Symbol.for("react.suspense") : 60113, p = e ? Symbol.for("react.suspense_list") : 60120, v = e ? Symbol.for("react.memo") : 60115, x = e ? Symbol.for("react.lazy") : 60116, b = e ? Symbol.for("react.block") : 60121, m = e ? Symbol.for("react.fundamental") : 60117, w = e ? Symbol.for("react.responder") : 60118, $ = e ? Symbol.for("react.scope") : 60119;
  function E(h) {
    if (typeof h == "object" && h !== null) {
      var U = h.$$typeof;
      switch (U) {
        case t:
          switch (h = h.type, h) {
            case l:
            case c:
            case n:
            case a:
            case o:
            case f:
              return h;
            default:
              switch (h = h && h.$$typeof, h) {
                case s:
                case u:
                case x:
                case v:
                case i:
                  return h;
                default:
                  return U;
              }
          }
        case r:
          return U;
      }
    }
  }
  function S(h) {
    return E(h) === c;
  }
  return Jt.AsyncMode = l, Jt.ConcurrentMode = c, Jt.ContextConsumer = s, Jt.ContextProvider = i, Jt.Element = t, Jt.ForwardRef = u, Jt.Fragment = n, Jt.Lazy = x, Jt.Memo = v, Jt.Portal = r, Jt.Profiler = a, Jt.StrictMode = o, Jt.Suspense = f, Jt.isAsyncMode = function(h) {
    return S(h) || E(h) === l;
  }, Jt.isConcurrentMode = S, Jt.isContextConsumer = function(h) {
    return E(h) === s;
  }, Jt.isContextProvider = function(h) {
    return E(h) === i;
  }, Jt.isElement = function(h) {
    return typeof h == "object" && h !== null && h.$$typeof === t;
  }, Jt.isForwardRef = function(h) {
    return E(h) === u;
  }, Jt.isFragment = function(h) {
    return E(h) === n;
  }, Jt.isLazy = function(h) {
    return E(h) === x;
  }, Jt.isMemo = function(h) {
    return E(h) === v;
  }, Jt.isPortal = function(h) {
    return E(h) === r;
  }, Jt.isProfiler = function(h) {
    return E(h) === a;
  }, Jt.isStrictMode = function(h) {
    return E(h) === o;
  }, Jt.isSuspense = function(h) {
    return E(h) === f;
  }, Jt.isValidElementType = function(h) {
    return typeof h == "string" || typeof h == "function" || h === n || h === c || h === a || h === o || h === f || h === p || typeof h == "object" && h !== null && (h.$$typeof === x || h.$$typeof === v || h.$$typeof === i || h.$$typeof === s || h.$$typeof === u || h.$$typeof === m || h.$$typeof === w || h.$$typeof === $ || h.$$typeof === b);
  }, Jt.typeOf = E, Jt;
}
var fr = {};
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var s7;
function j2e() {
  return s7 || (s7 = 1, process.env.NODE_ENV !== "production" && function() {
    var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, r = e ? Symbol.for("react.portal") : 60106, n = e ? Symbol.for("react.fragment") : 60107, o = e ? Symbol.for("react.strict_mode") : 60108, a = e ? Symbol.for("react.profiler") : 60114, i = e ? Symbol.for("react.provider") : 60109, s = e ? Symbol.for("react.context") : 60110, l = e ? Symbol.for("react.async_mode") : 60111, c = e ? Symbol.for("react.concurrent_mode") : 60111, u = e ? Symbol.for("react.forward_ref") : 60112, f = e ? Symbol.for("react.suspense") : 60113, p = e ? Symbol.for("react.suspense_list") : 60120, v = e ? Symbol.for("react.memo") : 60115, x = e ? Symbol.for("react.lazy") : 60116, b = e ? Symbol.for("react.block") : 60121, m = e ? Symbol.for("react.fundamental") : 60117, w = e ? Symbol.for("react.responder") : 60118, $ = e ? Symbol.for("react.scope") : 60119;
    function E(k) {
      return typeof k == "string" || typeof k == "function" || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
      k === n || k === c || k === a || k === o || k === f || k === p || typeof k == "object" && k !== null && (k.$$typeof === x || k.$$typeof === v || k.$$typeof === i || k.$$typeof === s || k.$$typeof === u || k.$$typeof === m || k.$$typeof === w || k.$$typeof === $ || k.$$typeof === b);
    }
    function S(k) {
      if (typeof k == "object" && k !== null) {
        var oe = k.$$typeof;
        switch (oe) {
          case t:
            var Ce = k.type;
            switch (Ce) {
              case l:
              case c:
              case n:
              case a:
              case o:
              case f:
                return Ce;
              default:
                var Ze = Ce && Ce.$$typeof;
                switch (Ze) {
                  case s:
                  case u:
                  case x:
                  case v:
                  case i:
                    return Ze;
                  default:
                    return oe;
                }
            }
          case r:
            return oe;
        }
      }
    }
    var h = l, U = c, G = s, Q = i, Z = t, X = u, J = n, I = x, te = v, V = r, D = a, F = o, R = f, H = !1;
    function B(k) {
      return H || (H = !0, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.")), g(k) || S(k) === l;
    }
    function g(k) {
      return S(k) === c;
    }
    function d(k) {
      return S(k) === s;
    }
    function O(k) {
      return S(k) === i;
    }
    function C(k) {
      return typeof k == "object" && k !== null && k.$$typeof === t;
    }
    function A(k) {
      return S(k) === u;
    }
    function N(k) {
      return S(k) === n;
    }
    function j(k) {
      return S(k) === x;
    }
    function _(k) {
      return S(k) === v;
    }
    function T(k) {
      return S(k) === r;
    }
    function M(k) {
      return S(k) === a;
    }
    function z(k) {
      return S(k) === o;
    }
    function ee(k) {
      return S(k) === f;
    }
    fr.AsyncMode = h, fr.ConcurrentMode = U, fr.ContextConsumer = G, fr.ContextProvider = Q, fr.Element = Z, fr.ForwardRef = X, fr.Fragment = J, fr.Lazy = I, fr.Memo = te, fr.Portal = V, fr.Profiler = D, fr.StrictMode = F, fr.Suspense = R, fr.isAsyncMode = B, fr.isConcurrentMode = g, fr.isContextConsumer = d, fr.isContextProvider = O, fr.isElement = C, fr.isForwardRef = A, fr.isFragment = N, fr.isLazy = j, fr.isMemo = _, fr.isPortal = T, fr.isProfiler = M, fr.isStrictMode = z, fr.isSuspense = ee, fr.isValidElementType = E, fr.typeOf = S;
  }()), fr;
}
var l7;
function zH() {
  return l7 || (l7 = 1, process.env.NODE_ENV === "production" ? _2.exports = N2e() : _2.exports = j2e()), _2.exports;
}
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
var N2, c7;
function I2e() {
  if (c7) return N2;
  c7 = 1;
  var e = Object.getOwnPropertySymbols, t = Object.prototype.hasOwnProperty, r = Object.prototype.propertyIsEnumerable;
  function n(a) {
    if (a == null)
      throw new TypeError("Object.assign cannot be called with null or undefined");
    return Object(a);
  }
  function o() {
    try {
      if (!Object.assign)
        return !1;
      var a = new String("abc");
      if (a[5] = "de", Object.getOwnPropertyNames(a)[0] === "5")
        return !1;
      for (var i = {}, s = 0; s < 10; s++)
        i["_" + String.fromCharCode(s)] = s;
      var l = Object.getOwnPropertyNames(i).map(function(u) {
        return i[u];
      });
      if (l.join("") !== "0123456789")
        return !1;
      var c = {};
      return "abcdefghijklmnopqrst".split("").forEach(function(u) {
        c[u] = u;
      }), Object.keys(Object.assign({}, c)).join("") === "abcdefghijklmnopqrst";
    } catch {
      return !1;
    }
  }
  return N2 = o() ? Object.assign : function(a, i) {
    for (var s, l = n(a), c, u = 1; u < arguments.length; u++) {
      s = Object(arguments[u]);
      for (var f in s)
        t.call(s, f) && (l[f] = s[f]);
      if (e) {
        c = e(s);
        for (var p = 0; p < c.length; p++)
          r.call(s, c[p]) && (l[c[p]] = s[c[p]]);
      }
    }
    return l;
  }, N2;
}
var j2, u7;
function eC() {
  if (u7) return j2;
  u7 = 1;
  var e = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
  return j2 = e, j2;
}
var f7, d7;
function FH() {
  return d7 || (d7 = 1, f7 = Function.call.bind(Object.prototype.hasOwnProperty)), f7;
}
var I2, p7;
function T2e() {
  if (p7) return I2;
  p7 = 1;
  var e = function() {
  };
  if (process.env.NODE_ENV !== "production") {
    var t = /* @__PURE__ */ eC(), r = {}, n = /* @__PURE__ */ FH();
    e = function(a) {
      var i = "Warning: " + a;
      typeof console < "u" && console.error(i);
      try {
        throw new Error(i);
      } catch {
      }
    };
  }
  function o(a, i, s, l, c) {
    if (process.env.NODE_ENV !== "production") {
      for (var u in a)
        if (n(a, u)) {
          var f;
          try {
            if (typeof a[u] != "function") {
              var p = Error(
                (l || "React class") + ": " + s + " type `" + u + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof a[u] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`."
              );
              throw p.name = "Invariant Violation", p;
            }
            f = a[u](i, u, l, s, null, t);
          } catch (x) {
            f = x;
          }
          if (f && !(f instanceof Error) && e(
            (l || "React class") + ": type specification of " + s + " `" + u + "` is invalid; the type checker function must return `null` or an `Error` but returned a " + typeof f + ". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument)."
          ), f instanceof Error && !(f.message in r)) {
            r[f.message] = !0;
            var v = c ? c() : "";
            e(
              "Failed " + s + " type: " + f.message + (v ?? "")
            );
          }
        }
    }
  }
  return o.resetWarningCache = function() {
    process.env.NODE_ENV !== "production" && (r = {});
  }, I2 = o, I2;
}
var T2, m7;
function M2e() {
  if (m7) return T2;
  m7 = 1;
  var e = zH(), t = I2e(), r = /* @__PURE__ */ eC(), n = /* @__PURE__ */ FH(), o = /* @__PURE__ */ T2e(), a = function() {
  };
  process.env.NODE_ENV !== "production" && (a = function(s) {
    var l = "Warning: " + s;
    typeof console < "u" && console.error(l);
    try {
      throw new Error(l);
    } catch {
    }
  });
  function i() {
    return null;
  }
  return T2 = function(s, l) {
    var c = typeof Symbol == "function" && Symbol.iterator, u = "@@iterator";
    function f(g) {
      var d = g && (c && g[c] || g[u]);
      if (typeof d == "function")
        return d;
    }
    var p = "<<anonymous>>", v = {
      array: w("array"),
      bigint: w("bigint"),
      bool: w("boolean"),
      func: w("function"),
      number: w("number"),
      object: w("object"),
      string: w("string"),
      symbol: w("symbol"),
      any: $(),
      arrayOf: E,
      element: S(),
      elementType: h(),
      instanceOf: U,
      node: X(),
      objectOf: Q,
      oneOf: G,
      oneOfType: Z,
      shape: I,
      exact: te
    };
    function x(g, d) {
      return g === d ? g !== 0 || 1 / g === 1 / d : g !== g && d !== d;
    }
    function b(g, d) {
      this.message = g, this.data = d && typeof d == "object" ? d : {}, this.stack = "";
    }
    b.prototype = Error.prototype;
    function m(g) {
      if (process.env.NODE_ENV !== "production")
        var d = {}, O = 0;
      function C(N, j, _, T, M, z, ee) {
        if (T = T || p, z = z || _, ee !== r) {
          if (l) {
            var k = new Error(
              "Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types"
            );
            throw k.name = "Invariant Violation", k;
          } else if (process.env.NODE_ENV !== "production" && typeof console < "u") {
            var oe = T + ":" + _;
            !d[oe] && // Avoid spamming the console because they are often not actionable except for lib authors
            O < 3 && (a(
              "You are manually calling a React.PropTypes validation function for the `" + z + "` prop on `" + T + "`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details."
            ), d[oe] = !0, O++);
          }
        }
        return j[_] == null ? N ? j[_] === null ? new b("The " + M + " `" + z + "` is marked as required " + ("in `" + T + "`, but its value is `null`.")) : new b("The " + M + " `" + z + "` is marked as required in " + ("`" + T + "`, but its value is `undefined`.")) : null : g(j, _, T, M, z);
      }
      var A = C.bind(null, !1);
      return A.isRequired = C.bind(null, !0), A;
    }
    function w(g) {
      function d(O, C, A, N, j, _) {
        var T = O[C], M = F(T);
        if (M !== g) {
          var z = R(T);
          return new b(
            "Invalid " + N + " `" + j + "` of type " + ("`" + z + "` supplied to `" + A + "`, expected ") + ("`" + g + "`."),
            { expectedType: g }
          );
        }
        return null;
      }
      return m(d);
    }
    function $() {
      return m(i);
    }
    function E(g) {
      function d(O, C, A, N, j) {
        if (typeof g != "function")
          return new b("Property `" + j + "` of component `" + A + "` has invalid PropType notation inside arrayOf.");
        var _ = O[C];
        if (!Array.isArray(_)) {
          var T = F(_);
          return new b("Invalid " + N + " `" + j + "` of type " + ("`" + T + "` supplied to `" + A + "`, expected an array."));
        }
        for (var M = 0; M < _.length; M++) {
          var z = g(_, M, A, N, j + "[" + M + "]", r);
          if (z instanceof Error)
            return z;
        }
        return null;
      }
      return m(d);
    }
    function S() {
      function g(d, O, C, A, N) {
        var j = d[O];
        if (!s(j)) {
          var _ = F(j);
          return new b("Invalid " + A + " `" + N + "` of type " + ("`" + _ + "` supplied to `" + C + "`, expected a single ReactElement."));
        }
        return null;
      }
      return m(g);
    }
    function h() {
      function g(d, O, C, A, N) {
        var j = d[O];
        if (!e.isValidElementType(j)) {
          var _ = F(j);
          return new b("Invalid " + A + " `" + N + "` of type " + ("`" + _ + "` supplied to `" + C + "`, expected a single ReactElement type."));
        }
        return null;
      }
      return m(g);
    }
    function U(g) {
      function d(O, C, A, N, j) {
        if (!(O[C] instanceof g)) {
          var _ = g.name || p, T = B(O[C]);
          return new b("Invalid " + N + " `" + j + "` of type " + ("`" + T + "` supplied to `" + A + "`, expected ") + ("instance of `" + _ + "`."));
        }
        return null;
      }
      return m(d);
    }
    function G(g) {
      if (!Array.isArray(g))
        return process.env.NODE_ENV !== "production" && (arguments.length > 1 ? a(
          "Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z])."
        ) : a("Invalid argument supplied to oneOf, expected an array.")), i;
      function d(O, C, A, N, j) {
        for (var _ = O[C], T = 0; T < g.length; T++)
          if (x(_, g[T]))
            return null;
        var M = JSON.stringify(g, function(z, ee) {
          var k = R(ee);
          return k === "symbol" ? String(ee) : ee;
        });
        return new b("Invalid " + N + " `" + j + "` of value `" + String(_) + "` " + ("supplied to `" + A + "`, expected one of " + M + "."));
      }
      return m(d);
    }
    function Q(g) {
      function d(O, C, A, N, j) {
        if (typeof g != "function")
          return new b("Property `" + j + "` of component `" + A + "` has invalid PropType notation inside objectOf.");
        var _ = O[C], T = F(_);
        if (T !== "object")
          return new b("Invalid " + N + " `" + j + "` of type " + ("`" + T + "` supplied to `" + A + "`, expected an object."));
        for (var M in _)
          if (n(_, M)) {
            var z = g(_, M, A, N, j + "." + M, r);
            if (z instanceof Error)
              return z;
          }
        return null;
      }
      return m(d);
    }
    function Z(g) {
      if (!Array.isArray(g))
        return process.env.NODE_ENV !== "production" && a("Invalid argument supplied to oneOfType, expected an instance of array."), i;
      for (var d = 0; d < g.length; d++) {
        var O = g[d];
        if (typeof O != "function")
          return a(
            "Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + H(O) + " at index " + d + "."
          ), i;
      }
      function C(A, N, j, _, T) {
        for (var M = [], z = 0; z < g.length; z++) {
          var ee = g[z], k = ee(A, N, j, _, T, r);
          if (k == null)
            return null;
          k.data && n(k.data, "expectedType") && M.push(k.data.expectedType);
        }
        var oe = M.length > 0 ? ", expected one of type [" + M.join(", ") + "]" : "";
        return new b("Invalid " + _ + " `" + T + "` supplied to " + ("`" + j + "`" + oe + "."));
      }
      return m(C);
    }
    function X() {
      function g(d, O, C, A, N) {
        return V(d[O]) ? null : new b("Invalid " + A + " `" + N + "` supplied to " + ("`" + C + "`, expected a ReactNode."));
      }
      return m(g);
    }
    function J(g, d, O, C, A) {
      return new b(
        (g || "React class") + ": " + d + " type `" + O + "." + C + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + A + "`."
      );
    }
    function I(g) {
      function d(O, C, A, N, j) {
        var _ = O[C], T = F(_);
        if (T !== "object")
          return new b("Invalid " + N + " `" + j + "` of type `" + T + "` " + ("supplied to `" + A + "`, expected `object`."));
        for (var M in g) {
          var z = g[M];
          if (typeof z != "function")
            return J(A, N, j, M, R(z));
          var ee = z(_, M, A, N, j + "." + M, r);
          if (ee)
            return ee;
        }
        return null;
      }
      return m(d);
    }
    function te(g) {
      function d(O, C, A, N, j) {
        var _ = O[C], T = F(_);
        if (T !== "object")
          return new b("Invalid " + N + " `" + j + "` of type `" + T + "` " + ("supplied to `" + A + "`, expected `object`."));
        var M = t({}, O[C], g);
        for (var z in M) {
          var ee = g[z];
          if (n(g, z) && typeof ee != "function")
            return J(A, N, j, z, R(ee));
          if (!ee)
            return new b(
              "Invalid " + N + " `" + j + "` key `" + z + "` supplied to `" + A + "`.\nBad object: " + JSON.stringify(O[C], null, "  ") + `
Valid keys: ` + JSON.stringify(Object.keys(g), null, "  ")
            );
          var k = ee(_, z, A, N, j + "." + z, r);
          if (k)
            return k;
        }
        return null;
      }
      return m(d);
    }
    function V(g) {
      switch (typeof g) {
        case "number":
        case "string":
        case "undefined":
          return !0;
        case "boolean":
          return !g;
        case "object":
          if (Array.isArray(g))
            return g.every(V);
          if (g === null || s(g))
            return !0;
          var d = f(g);
          if (d) {
            var O = d.call(g), C;
            if (d !== g.entries) {
              for (; !(C = O.next()).done; )
                if (!V(C.value))
                  return !1;
            } else
              for (; !(C = O.next()).done; ) {
                var A = C.value;
                if (A && !V(A[1]))
                  return !1;
              }
          } else
            return !1;
          return !0;
        default:
          return !1;
      }
    }
    function D(g, d) {
      return g === "symbol" ? !0 : d ? d["@@toStringTag"] === "Symbol" || typeof Symbol == "function" && d instanceof Symbol : !1;
    }
    function F(g) {
      var d = typeof g;
      return Array.isArray(g) ? "array" : g instanceof RegExp ? "object" : D(d, g) ? "symbol" : d;
    }
    function R(g) {
      if (typeof g > "u" || g === null)
        return "" + g;
      var d = F(g);
      if (d === "object") {
        if (g instanceof Date)
          return "date";
        if (g instanceof RegExp)
          return "regexp";
      }
      return d;
    }
    function H(g) {
      var d = R(g);
      switch (d) {
        case "array":
        case "object":
          return "an " + d;
        case "boolean":
        case "date":
        case "regexp":
          return "a " + d;
        default:
          return d;
      }
    }
    function B(g) {
      return !g.constructor || !g.constructor.name ? p : g.constructor.name;
    }
    return v.checkPropTypes = o, v.resetWarningCache = o.resetWarningCache, v.PropTypes = v, v;
  }, T2;
}
var M2, g7;
function R2e() {
  if (g7) return M2;
  g7 = 1;
  var e = /* @__PURE__ */ eC();
  function t() {
  }
  function r() {
  }
  return r.resetWarningCache = t, M2 = function() {
    function n(i, s, l, c, u, f) {
      if (f !== e) {
        var p = new Error(
          "Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types"
        );
        throw p.name = "Invariant Violation", p;
      }
    }
    n.isRequired = n;
    function o() {
      return n;
    }
    var a = {
      array: n,
      bigint: n,
      bool: n,
      func: n,
      number: n,
      object: n,
      string: n,
      symbol: n,
      any: n,
      arrayOf: o,
      element: n,
      elementType: n,
      instanceOf: o,
      node: n,
      objectOf: o,
      oneOf: o,
      oneOfType: o,
      shape: o,
      exact: o,
      checkPropTypes: r,
      resetWarningCache: t
    };
    return a.PropTypes = a, a;
  }, M2;
}
var h7;
function z2e() {
  if (h7) return ly.exports;
  if (h7 = 1, process.env.NODE_ENV !== "production") {
    var e = zH(), t = !0;
    ly.exports = /* @__PURE__ */ M2e()(e.isElement, t);
  } else
    ly.exports = /* @__PURE__ */ R2e()();
  return ly.exports;
}
var F2e = /* @__PURE__ */ z2e();
const Tt = /* @__PURE__ */ YY(F2e);
function b7(e, t) {
  var r = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var n = Object.getOwnPropertySymbols(e);
    t && (n = n.filter(function(o) {
      return Object.getOwnPropertyDescriptor(e, o).enumerable;
    })), r.push.apply(r, n);
  }
  return r;
}
function Jo(e) {
  for (var t = 1; t < arguments.length; t++) {
    var r = arguments[t] != null ? arguments[t] : {};
    t % 2 ? b7(Object(r), !0).forEach(function(n) {
      df(e, n, r[n]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : b7(Object(r)).forEach(function(n) {
      Object.defineProperty(e, n, Object.getOwnPropertyDescriptor(r, n));
    });
  }
  return e;
}
function r1(e) {
  "@babel/helpers - typeof";
  return r1 = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t) {
    return typeof t;
  } : function(t) {
    return t && typeof Symbol == "function" && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
  }, r1(e);
}
function df(e, t, r) {
  return t in e ? Object.defineProperty(e, t, {
    value: r,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : e[t] = r, e;
}
function D2e(e, t) {
  if (e == null) return {};
  var r = {}, n = Object.keys(e), o, a;
  for (a = 0; a < n.length; a++)
    o = n[a], !(t.indexOf(o) >= 0) && (r[o] = e[o]);
  return r;
}
function L2e(e, t) {
  if (e == null) return {};
  var r = D2e(e, t), n, o;
  if (Object.getOwnPropertySymbols) {
    var a = Object.getOwnPropertySymbols(e);
    for (o = 0; o < a.length; o++)
      n = a[o], !(t.indexOf(n) >= 0) && Object.prototype.propertyIsEnumerable.call(e, n) && (r[n] = e[n]);
  }
  return r;
}
function cO(e) {
  return V2e(e) || W2e(e) || U2e(e) || Y2e();
}
function V2e(e) {
  if (Array.isArray(e)) return uO(e);
}
function W2e(e) {
  if (typeof Symbol < "u" && e[Symbol.iterator] != null || e["@@iterator"] != null) return Array.from(e);
}
function U2e(e, t) {
  if (e) {
    if (typeof e == "string") return uO(e, t);
    var r = Object.prototype.toString.call(e).slice(8, -1);
    if (r === "Object" && e.constructor && (r = e.constructor.name), r === "Map" || r === "Set") return Array.from(e);
    if (r === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return uO(e, t);
  }
}
function uO(e, t) {
  (t == null || t > e.length) && (t = e.length);
  for (var r = 0, n = new Array(t); r < t; r++) n[r] = e[r];
  return n;
}
function Y2e() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function H2e(e) {
  var t, r = e.beat, n = e.fade, o = e.beatFade, a = e.bounce, i = e.shake, s = e.flash, l = e.spin, c = e.spinPulse, u = e.spinReverse, f = e.pulse, p = e.fixedWidth, v = e.inverse, x = e.border, b = e.listItem, m = e.flip, w = e.size, $ = e.rotation, E = e.pull, S = (t = {
    "fa-beat": r,
    "fa-fade": n,
    "fa-beat-fade": o,
    "fa-bounce": a,
    "fa-shake": i,
    "fa-flash": s,
    "fa-spin": l,
    "fa-spin-reverse": u,
    "fa-spin-pulse": c,
    "fa-pulse": f,
    "fa-fw": p,
    "fa-inverse": v,
    "fa-border": x,
    "fa-li": b,
    "fa-flip": m === !0,
    "fa-flip-horizontal": m === "horizontal" || m === "both",
    "fa-flip-vertical": m === "vertical" || m === "both"
  }, df(t, "fa-".concat(w), typeof w < "u" && w !== null), df(t, "fa-rotate-".concat($), typeof $ < "u" && $ !== null && $ !== 0), df(t, "fa-pull-".concat(E), typeof E < "u" && E !== null), df(t, "fa-swap-opacity", e.swapOpacity), t);
  return Object.keys(S).map(function(h) {
    return S[h] ? h : null;
  }).filter(function(h) {
    return h;
  });
}
function G2e(e) {
  return e = e - 0, e === e;
}
function DH(e) {
  return G2e(e) ? e : (e = e.replace(/[\-_\s]+(.)?/g, function(t, r) {
    return r ? r.toUpperCase() : "";
  }), e.substr(0, 1).toLowerCase() + e.substr(1));
}
var q2e = ["style"];
function B2e(e) {
  return e.charAt(0).toUpperCase() + e.slice(1);
}
function X2e(e) {
  return e.split(";").map(function(t) {
    return t.trim();
  }).filter(function(t) {
    return t;
  }).reduce(function(t, r) {
    var n = r.indexOf(":"), o = DH(r.slice(0, n)), a = r.slice(n + 1).trim();
    return o.startsWith("webkit") ? t[B2e(o)] = a : t[o] = a, t;
  }, {});
}
function LH(e, t) {
  var r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
  if (typeof t == "string")
    return t;
  var n = (t.children || []).map(function(l) {
    return LH(e, l);
  }), o = Object.keys(t.attributes || {}).reduce(function(l, c) {
    var u = t.attributes[c];
    switch (c) {
      case "class":
        l.attrs.className = u, delete t.attributes.class;
        break;
      case "style":
        l.attrs.style = X2e(u);
        break;
      default:
        c.indexOf("aria-") === 0 || c.indexOf("data-") === 0 ? l.attrs[c.toLowerCase()] = u : l.attrs[DH(c)] = u;
    }
    return l;
  }, {
    attrs: {}
  }), a = r.style, i = a === void 0 ? {} : a, s = L2e(r, q2e);
  return o.attrs.style = Jo(Jo({}, o.attrs.style), i), e.apply(void 0, [t.tag, Jo(Jo({}, o.attrs), s)].concat(cO(n)));
}
var VH = !1;
try {
  VH = process.env.NODE_ENV === "production";
} catch {
}
function K2e() {
  if (!VH && console && typeof console.error == "function") {
    var e;
    (e = console).error.apply(e, arguments);
  }
}
function y7(e) {
  if (e && r1(e) === "object" && e.prefix && e.iconName && e.icon)
    return e;
  if (lO.icon)
    return lO.icon(e);
  if (e === null)
    return null;
  if (e && r1(e) === "object" && e.prefix && e.iconName)
    return e;
  if (Array.isArray(e) && e.length === 2)
    return {
      prefix: e[0],
      iconName: e[1]
    };
  if (typeof e == "string")
    return {
      prefix: "fas",
      iconName: e
    };
}
function R2(e, t) {
  return Array.isArray(t) && t.length > 0 || !Array.isArray(t) && t ? df({}, e, t) : {};
}
var v7 = {
  border: !1,
  className: "",
  mask: null,
  maskId: null,
  fixedWidth: !1,
  inverse: !1,
  flip: !1,
  icon: null,
  listItem: !1,
  pull: null,
  pulse: !1,
  rotation: null,
  size: null,
  spin: !1,
  spinPulse: !1,
  spinReverse: !1,
  beat: !1,
  fade: !1,
  beatFade: !1,
  bounce: !1,
  shake: !1,
  symbol: !1,
  title: "",
  titleId: null,
  transform: null,
  swapOpacity: !1
}, tC = /* @__PURE__ */ ce.forwardRef(function(e, t) {
  var r = Jo(Jo({}, v7), e), n = r.icon, o = r.mask, a = r.symbol, i = r.className, s = r.title, l = r.titleId, c = r.maskId, u = y7(n), f = R2("classes", [].concat(cO(H2e(r)), cO((i || "").split(" ")))), p = R2("transform", typeof r.transform == "string" ? lO.transform(r.transform) : r.transform), v = R2("mask", y7(o)), x = _2e(u, Jo(Jo(Jo(Jo({}, f), p), v), {}, {
    symbol: a,
    title: s,
    titleId: l,
    maskId: c
  }));
  if (!x)
    return K2e("Could not find icon", u), null;
  var b = x.abstract, m = {
    ref: t
  };
  return Object.keys(r).forEach(function(w) {
    v7.hasOwnProperty(w) || (m[w] = r[w]);
  }), J2e(b[0], m);
});
tC.displayName = "FontAwesomeIcon";
tC.propTypes = {
  beat: Tt.bool,
  border: Tt.bool,
  beatFade: Tt.bool,
  bounce: Tt.bool,
  className: Tt.string,
  fade: Tt.bool,
  flash: Tt.bool,
  mask: Tt.oneOfType([Tt.object, Tt.array, Tt.string]),
  maskId: Tt.string,
  fixedWidth: Tt.bool,
  inverse: Tt.bool,
  flip: Tt.oneOf([!0, !1, "horizontal", "vertical", "both"]),
  icon: Tt.oneOfType([Tt.object, Tt.array, Tt.string]),
  listItem: Tt.bool,
  pull: Tt.oneOf(["right", "left"]),
  pulse: Tt.bool,
  rotation: Tt.oneOf([0, 90, 180, 270]),
  shake: Tt.bool,
  size: Tt.oneOf(["2xs", "xs", "sm", "lg", "xl", "2xl", "1x", "2x", "3x", "4x", "5x", "6x", "7x", "8x", "9x", "10x"]),
  spin: Tt.bool,
  spinPulse: Tt.bool,
  spinReverse: Tt.bool,
  symbol: Tt.oneOfType([Tt.bool, Tt.string]),
  title: Tt.string,
  titleId: Tt.string,
  transform: Tt.oneOfType([Tt.string, Tt.object]),
  swapOpacity: Tt.bool
};
var J2e = LH.bind(null, ce.createElement);
const rC = "-", Q2e = (e) => {
  const t = eke(e), {
    conflictingClassGroups: r,
    conflictingClassGroupModifiers: n
  } = e;
  return {
    getClassGroupId: (o) => {
      const a = o.split(rC);
      return a[0] === "" && a.length !== 1 && a.shift(), WH(a, t) || Z2e(o);
    },
    getConflictingClassGroupIds: (o, a) => {
      const i = r[o] || [];
      return a && n[o] ? [...i, ...n[o]] : i;
    }
  };
}, WH = (e, t) => {
  var r;
  if (e.length === 0)
    return t.classGroupId;
  const n = e[0], o = t.nextPart.get(n), a = o ? WH(e.slice(1), o) : void 0;
  if (a)
    return a;
  if (t.validators.length === 0)
    return;
  const i = e.join(rC);
  return (r = t.validators.find(({
    validator: s
  }) => s(i))) == null ? void 0 : r.classGroupId;
}, x7 = /^\[(.+)\]$/, Z2e = (e) => {
  if (x7.test(e)) {
    const t = x7.exec(e)[1], r = t == null ? void 0 : t.substring(0, t.indexOf(":"));
    if (r)
      return "arbitrary.." + r;
  }
}, eke = (e) => {
  const {
    theme: t,
    prefix: r
  } = e, n = {
    nextPart: /* @__PURE__ */ new Map(),
    validators: []
  };
  return rke(Object.entries(e.classGroups), r).forEach(([o, a]) => {
    fO(a, n, o, t);
  }), n;
}, fO = (e, t, r, n) => {
  e.forEach((o) => {
    if (typeof o == "string") {
      const a = o === "" ? t : w7(t, o);
      a.classGroupId = r;
      return;
    }
    if (typeof o == "function") {
      if (tke(o)) {
        fO(o(n), t, r, n);
        return;
      }
      t.validators.push({
        validator: o,
        classGroupId: r
      });
      return;
    }
    Object.entries(o).forEach(([a, i]) => {
      fO(i, w7(t, a), r, n);
    });
  });
}, w7 = (e, t) => {
  let r = e;
  return t.split(rC).forEach((n) => {
    r.nextPart.has(n) || r.nextPart.set(n, {
      nextPart: /* @__PURE__ */ new Map(),
      validators: []
    }), r = r.nextPart.get(n);
  }), r;
}, tke = (e) => e.isThemeGetter, rke = (e, t) => t ? e.map(([r, n]) => {
  const o = n.map((a) => typeof a == "string" ? t + a : typeof a == "object" ? Object.fromEntries(Object.entries(a).map(([i, s]) => [t + i, s])) : a);
  return [r, o];
}) : e, nke = (e) => {
  if (e < 1)
    return {
      get: () => {
      },
      set: () => {
      }
    };
  let t = 0, r = /* @__PURE__ */ new Map(), n = /* @__PURE__ */ new Map();
  const o = (a, i) => {
    r.set(a, i), t++, t > e && (t = 0, n = r, r = /* @__PURE__ */ new Map());
  };
  return {
    get(a) {
      let i = r.get(a);
      if (i !== void 0)
        return i;
      if ((i = n.get(a)) !== void 0)
        return o(a, i), i;
    },
    set(a, i) {
      r.has(a) ? r.set(a, i) : o(a, i);
    }
  };
}, UH = "!", oke = (e) => {
  const {
    separator: t,
    experimentalParseClassName: r
  } = e, n = t.length === 1, o = t[0], a = t.length, i = (s) => {
    const l = [];
    let c = 0, u = 0, f;
    for (let m = 0; m < s.length; m++) {
      let w = s[m];
      if (c === 0) {
        if (w === o && (n || s.slice(m, m + a) === t)) {
          l.push(s.slice(u, m)), u = m + a;
          continue;
        }
        if (w === "/") {
          f = m;
          continue;
        }
      }
      w === "[" ? c++ : w === "]" && c--;
    }
    const p = l.length === 0 ? s : s.substring(u), v = p.startsWith(UH), x = v ? p.substring(1) : p, b = f && f > u ? f - u : void 0;
    return {
      modifiers: l,
      hasImportantModifier: v,
      baseClassName: x,
      maybePostfixModifierPosition: b
    };
  };
  return r ? (s) => r({
    className: s,
    parseClassName: i
  }) : i;
}, ake = (e) => {
  if (e.length <= 1)
    return e;
  const t = [];
  let r = [];
  return e.forEach((n) => {
    n[0] === "[" ? (t.push(...r.sort(), n), r = []) : r.push(n);
  }), t.push(...r.sort()), t;
}, ike = (e) => ({
  cache: nke(e.cacheSize),
  parseClassName: oke(e),
  ...Q2e(e)
}), ske = /\s+/, lke = (e, t) => {
  const {
    parseClassName: r,
    getClassGroupId: n,
    getConflictingClassGroupIds: o
  } = t, a = [], i = e.trim().split(ske);
  let s = "";
  for (let l = i.length - 1; l >= 0; l -= 1) {
    const c = i[l], {
      modifiers: u,
      hasImportantModifier: f,
      baseClassName: p,
      maybePostfixModifierPosition: v
    } = r(c);
    let x = !!v, b = n(x ? p.substring(0, v) : p);
    if (!b) {
      if (!x) {
        s = c + (s.length > 0 ? " " + s : s);
        continue;
      }
      if (b = n(p), !b) {
        s = c + (s.length > 0 ? " " + s : s);
        continue;
      }
      x = !1;
    }
    const m = ake(u).join(":"), w = f ? m + UH : m, $ = w + b;
    if (a.includes($))
      continue;
    a.push($);
    const E = o(b, x);
    for (let S = 0; S < E.length; ++S) {
      const h = E[S];
      a.push(w + h);
    }
    s = c + (s.length > 0 ? " " + s : s);
  }
  return s;
};
function cke() {
  let e = 0, t, r, n = "";
  for (; e < arguments.length; )
    (t = arguments[e++]) && (r = YH(t)) && (n && (n += " "), n += r);
  return n;
}
const YH = (e) => {
  if (typeof e == "string")
    return e;
  let t, r = "";
  for (let n = 0; n < e.length; n++)
    e[n] && (t = YH(e[n])) && (r && (r += " "), r += t);
  return r;
};
function uke(e, ...t) {
  let r, n, o, a = i;
  function i(l) {
    const c = t.reduce((u, f) => f(u), e());
    return r = ike(c), n = r.cache.get, o = r.cache.set, a = s, s(l);
  }
  function s(l) {
    const c = n(l);
    if (c)
      return c;
    const u = lke(l, r);
    return o(l, u), u;
  }
  return function() {
    return a(cke.apply(null, arguments));
  };
}
const Er = (e) => {
  const t = (r) => r[e] || [];
  return t.isThemeGetter = !0, t;
}, HH = /^\[(?:([a-z-]+):)?(.+)\]$/i, fke = /^\d+\/\d+$/, dke = /* @__PURE__ */ new Set(["px", "full", "screen"]), pke = /^(\d+(\.\d+)?)?(xs|sm|md|lg|xl)$/, mke = /\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\b(calc|min|max|clamp)\(.+\)|^0$/, gke = /^(rgba?|hsla?|hwb|(ok)?(lab|lch))\(.+\)$/, hke = /^(inset_)?-?((\d+)?\.?(\d+)[a-z]+|0)_-?((\d+)?\.?(\d+)[a-z]+|0)/, bke = /^(url|image|image-set|cross-fade|element|(repeating-)?(linear|radial|conic)-gradient)\(.+\)$/, Ha = (e) => Uf(e) || dke.has(e) || fke.test(e), Ys = (e) => Wd(e, "length", Eke), Uf = (e) => !!e && !Number.isNaN(Number(e)), z2 = (e) => Wd(e, "number", Uf), $m = (e) => !!e && Number.isInteger(Number(e)), yke = (e) => e.endsWith("%") && Uf(e.slice(0, -1)), ft = (e) => HH.test(e), Hs = (e) => pke.test(e), vke = /* @__PURE__ */ new Set(["length", "size", "percentage"]), xke = (e) => Wd(e, vke, GH), wke = (e) => Wd(e, "position", GH), kke = /* @__PURE__ */ new Set(["image", "url"]), $ke = (e) => Wd(e, kke, Pke), Oke = (e) => Wd(e, "", Ske), Om = () => !0, Wd = (e, t, r) => {
  const n = HH.exec(e);
  return n ? n[1] ? typeof t == "string" ? n[1] === t : t.has(n[1]) : r(n[2]) : !1;
}, Eke = (e) => (
  // `colorFunctionRegex` check is necessary because color functions can have percentages in them which which would be incorrectly classified as lengths.
  // For example, `hsl(0 0% 0%)` would be classified as a length without this check.
  // I could also use lookbehind assertion in `lengthUnitRegex` but that isn't supported widely enough.
  mke.test(e) && !gke.test(e)
), GH = () => !1, Ske = (e) => hke.test(e), Pke = (e) => bke.test(e), Cke = () => {
  const e = Er("colors"), t = Er("spacing"), r = Er("blur"), n = Er("brightness"), o = Er("borderColor"), a = Er("borderRadius"), i = Er("borderSpacing"), s = Er("borderWidth"), l = Er("contrast"), c = Er("grayscale"), u = Er("hueRotate"), f = Er("invert"), p = Er("gap"), v = Er("gradientColorStops"), x = Er("gradientColorStopPositions"), b = Er("inset"), m = Er("margin"), w = Er("opacity"), $ = Er("padding"), E = Er("saturate"), S = Er("scale"), h = Er("sepia"), U = Er("skew"), G = Er("space"), Q = Er("translate"), Z = () => ["auto", "contain", "none"], X = () => ["auto", "hidden", "clip", "visible", "scroll"], J = () => ["auto", ft, t], I = () => [ft, t], te = () => ["", Ha, Ys], V = () => ["auto", Uf, ft], D = () => ["bottom", "center", "left", "left-bottom", "left-top", "right", "right-bottom", "right-top", "top"], F = () => ["solid", "dashed", "dotted", "double", "none"], R = () => ["normal", "multiply", "screen", "overlay", "darken", "lighten", "color-dodge", "color-burn", "hard-light", "soft-light", "difference", "exclusion", "hue", "saturation", "color", "luminosity"], H = () => ["start", "end", "center", "between", "around", "evenly", "stretch"], B = () => ["", "0", ft], g = () => ["auto", "avoid", "all", "avoid-page", "page", "left", "right", "column"], d = () => [Uf, ft];
  return {
    cacheSize: 500,
    separator: ":",
    theme: {
      colors: [Om],
      spacing: [Ha, Ys],
      blur: ["none", "", Hs, ft],
      brightness: d(),
      borderColor: [e],
      borderRadius: ["none", "", "full", Hs, ft],
      borderSpacing: I(),
      borderWidth: te(),
      contrast: d(),
      grayscale: B(),
      hueRotate: d(),
      invert: B(),
      gap: I(),
      gradientColorStops: [e],
      gradientColorStopPositions: [yke, Ys],
      inset: J(),
      margin: J(),
      opacity: d(),
      padding: I(),
      saturate: d(),
      scale: d(),
      sepia: B(),
      skew: d(),
      space: I(),
      translate: I()
    },
    classGroups: {
      // Layout
      /**
       * Aspect Ratio
       * @see https://tailwindcss.com/docs/aspect-ratio
       */
      aspect: [{
        aspect: ["auto", "square", "video", ft]
      }],
      /**
       * Container
       * @see https://tailwindcss.com/docs/container
       */
      container: ["container"],
      /**
       * Columns
       * @see https://tailwindcss.com/docs/columns
       */
      columns: [{
        columns: [Hs]
      }],
      /**
       * Break After
       * @see https://tailwindcss.com/docs/break-after
       */
      "break-after": [{
        "break-after": g()
      }],
      /**
       * Break Before
       * @see https://tailwindcss.com/docs/break-before
       */
      "break-before": [{
        "break-before": g()
      }],
      /**
       * Break Inside
       * @see https://tailwindcss.com/docs/break-inside
       */
      "break-inside": [{
        "break-inside": ["auto", "avoid", "avoid-page", "avoid-column"]
      }],
      /**
       * Box Decoration Break
       * @see https://tailwindcss.com/docs/box-decoration-break
       */
      "box-decoration": [{
        "box-decoration": ["slice", "clone"]
      }],
      /**
       * Box Sizing
       * @see https://tailwindcss.com/docs/box-sizing
       */
      box: [{
        box: ["border", "content"]
      }],
      /**
       * Display
       * @see https://tailwindcss.com/docs/display
       */
      display: ["block", "inline-block", "inline", "flex", "inline-flex", "table", "inline-table", "table-caption", "table-cell", "table-column", "table-column-group", "table-footer-group", "table-header-group", "table-row-group", "table-row", "flow-root", "grid", "inline-grid", "contents", "list-item", "hidden"],
      /**
       * Floats
       * @see https://tailwindcss.com/docs/float
       */
      float: [{
        float: ["right", "left", "none", "start", "end"]
      }],
      /**
       * Clear
       * @see https://tailwindcss.com/docs/clear
       */
      clear: [{
        clear: ["left", "right", "both", "none", "start", "end"]
      }],
      /**
       * Isolation
       * @see https://tailwindcss.com/docs/isolation
       */
      isolation: ["isolate", "isolation-auto"],
      /**
       * Object Fit
       * @see https://tailwindcss.com/docs/object-fit
       */
      "object-fit": [{
        object: ["contain", "cover", "fill", "none", "scale-down"]
      }],
      /**
       * Object Position
       * @see https://tailwindcss.com/docs/object-position
       */
      "object-position": [{
        object: [...D(), ft]
      }],
      /**
       * Overflow
       * @see https://tailwindcss.com/docs/overflow
       */
      overflow: [{
        overflow: X()
      }],
      /**
       * Overflow X
       * @see https://tailwindcss.com/docs/overflow
       */
      "overflow-x": [{
        "overflow-x": X()
      }],
      /**
       * Overflow Y
       * @see https://tailwindcss.com/docs/overflow
       */
      "overflow-y": [{
        "overflow-y": X()
      }],
      /**
       * Overscroll Behavior
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      overscroll: [{
        overscroll: Z()
      }],
      /**
       * Overscroll Behavior X
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      "overscroll-x": [{
        "overscroll-x": Z()
      }],
      /**
       * Overscroll Behavior Y
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      "overscroll-y": [{
        "overscroll-y": Z()
      }],
      /**
       * Position
       * @see https://tailwindcss.com/docs/position
       */
      position: ["static", "fixed", "absolute", "relative", "sticky"],
      /**
       * Top / Right / Bottom / Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      inset: [{
        inset: [b]
      }],
      /**
       * Right / Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      "inset-x": [{
        "inset-x": [b]
      }],
      /**
       * Top / Bottom
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      "inset-y": [{
        "inset-y": [b]
      }],
      /**
       * Start
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      start: [{
        start: [b]
      }],
      /**
       * End
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      end: [{
        end: [b]
      }],
      /**
       * Top
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      top: [{
        top: [b]
      }],
      /**
       * Right
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      right: [{
        right: [b]
      }],
      /**
       * Bottom
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      bottom: [{
        bottom: [b]
      }],
      /**
       * Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      left: [{
        left: [b]
      }],
      /**
       * Visibility
       * @see https://tailwindcss.com/docs/visibility
       */
      visibility: ["visible", "invisible", "collapse"],
      /**
       * Z-Index
       * @see https://tailwindcss.com/docs/z-index
       */
      z: [{
        z: ["auto", $m, ft]
      }],
      // Flexbox and Grid
      /**
       * Flex Basis
       * @see https://tailwindcss.com/docs/flex-basis
       */
      basis: [{
        basis: J()
      }],
      /**
       * Flex Direction
       * @see https://tailwindcss.com/docs/flex-direction
       */
      "flex-direction": [{
        flex: ["row", "row-reverse", "col", "col-reverse"]
      }],
      /**
       * Flex Wrap
       * @see https://tailwindcss.com/docs/flex-wrap
       */
      "flex-wrap": [{
        flex: ["wrap", "wrap-reverse", "nowrap"]
      }],
      /**
       * Flex
       * @see https://tailwindcss.com/docs/flex
       */
      flex: [{
        flex: ["1", "auto", "initial", "none", ft]
      }],
      /**
       * Flex Grow
       * @see https://tailwindcss.com/docs/flex-grow
       */
      grow: [{
        grow: B()
      }],
      /**
       * Flex Shrink
       * @see https://tailwindcss.com/docs/flex-shrink
       */
      shrink: [{
        shrink: B()
      }],
      /**
       * Order
       * @see https://tailwindcss.com/docs/order
       */
      order: [{
        order: ["first", "last", "none", $m, ft]
      }],
      /**
       * Grid Template Columns
       * @see https://tailwindcss.com/docs/grid-template-columns
       */
      "grid-cols": [{
        "grid-cols": [Om]
      }],
      /**
       * Grid Column Start / End
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-start-end": [{
        col: ["auto", {
          span: ["full", $m, ft]
        }, ft]
      }],
      /**
       * Grid Column Start
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-start": [{
        "col-start": V()
      }],
      /**
       * Grid Column End
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-end": [{
        "col-end": V()
      }],
      /**
       * Grid Template Rows
       * @see https://tailwindcss.com/docs/grid-template-rows
       */
      "grid-rows": [{
        "grid-rows": [Om]
      }],
      /**
       * Grid Row Start / End
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-start-end": [{
        row: ["auto", {
          span: [$m, ft]
        }, ft]
      }],
      /**
       * Grid Row Start
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-start": [{
        "row-start": V()
      }],
      /**
       * Grid Row End
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-end": [{
        "row-end": V()
      }],
      /**
       * Grid Auto Flow
       * @see https://tailwindcss.com/docs/grid-auto-flow
       */
      "grid-flow": [{
        "grid-flow": ["row", "col", "dense", "row-dense", "col-dense"]
      }],
      /**
       * Grid Auto Columns
       * @see https://tailwindcss.com/docs/grid-auto-columns
       */
      "auto-cols": [{
        "auto-cols": ["auto", "min", "max", "fr", ft]
      }],
      /**
       * Grid Auto Rows
       * @see https://tailwindcss.com/docs/grid-auto-rows
       */
      "auto-rows": [{
        "auto-rows": ["auto", "min", "max", "fr", ft]
      }],
      /**
       * Gap
       * @see https://tailwindcss.com/docs/gap
       */
      gap: [{
        gap: [p]
      }],
      /**
       * Gap X
       * @see https://tailwindcss.com/docs/gap
       */
      "gap-x": [{
        "gap-x": [p]
      }],
      /**
       * Gap Y
       * @see https://tailwindcss.com/docs/gap
       */
      "gap-y": [{
        "gap-y": [p]
      }],
      /**
       * Justify Content
       * @see https://tailwindcss.com/docs/justify-content
       */
      "justify-content": [{
        justify: ["normal", ...H()]
      }],
      /**
       * Justify Items
       * @see https://tailwindcss.com/docs/justify-items
       */
      "justify-items": [{
        "justify-items": ["start", "end", "center", "stretch"]
      }],
      /**
       * Justify Self
       * @see https://tailwindcss.com/docs/justify-self
       */
      "justify-self": [{
        "justify-self": ["auto", "start", "end", "center", "stretch"]
      }],
      /**
       * Align Content
       * @see https://tailwindcss.com/docs/align-content
       */
      "align-content": [{
        content: ["normal", ...H(), "baseline"]
      }],
      /**
       * Align Items
       * @see https://tailwindcss.com/docs/align-items
       */
      "align-items": [{
        items: ["start", "end", "center", "baseline", "stretch"]
      }],
      /**
       * Align Self
       * @see https://tailwindcss.com/docs/align-self
       */
      "align-self": [{
        self: ["auto", "start", "end", "center", "stretch", "baseline"]
      }],
      /**
       * Place Content
       * @see https://tailwindcss.com/docs/place-content
       */
      "place-content": [{
        "place-content": [...H(), "baseline"]
      }],
      /**
       * Place Items
       * @see https://tailwindcss.com/docs/place-items
       */
      "place-items": [{
        "place-items": ["start", "end", "center", "baseline", "stretch"]
      }],
      /**
       * Place Self
       * @see https://tailwindcss.com/docs/place-self
       */
      "place-self": [{
        "place-self": ["auto", "start", "end", "center", "stretch"]
      }],
      // Spacing
      /**
       * Padding
       * @see https://tailwindcss.com/docs/padding
       */
      p: [{
        p: [$]
      }],
      /**
       * Padding X
       * @see https://tailwindcss.com/docs/padding
       */
      px: [{
        px: [$]
      }],
      /**
       * Padding Y
       * @see https://tailwindcss.com/docs/padding
       */
      py: [{
        py: [$]
      }],
      /**
       * Padding Start
       * @see https://tailwindcss.com/docs/padding
       */
      ps: [{
        ps: [$]
      }],
      /**
       * Padding End
       * @see https://tailwindcss.com/docs/padding
       */
      pe: [{
        pe: [$]
      }],
      /**
       * Padding Top
       * @see https://tailwindcss.com/docs/padding
       */
      pt: [{
        pt: [$]
      }],
      /**
       * Padding Right
       * @see https://tailwindcss.com/docs/padding
       */
      pr: [{
        pr: [$]
      }],
      /**
       * Padding Bottom
       * @see https://tailwindcss.com/docs/padding
       */
      pb: [{
        pb: [$]
      }],
      /**
       * Padding Left
       * @see https://tailwindcss.com/docs/padding
       */
      pl: [{
        pl: [$]
      }],
      /**
       * Margin
       * @see https://tailwindcss.com/docs/margin
       */
      m: [{
        m: [m]
      }],
      /**
       * Margin X
       * @see https://tailwindcss.com/docs/margin
       */
      mx: [{
        mx: [m]
      }],
      /**
       * Margin Y
       * @see https://tailwindcss.com/docs/margin
       */
      my: [{
        my: [m]
      }],
      /**
       * Margin Start
       * @see https://tailwindcss.com/docs/margin
       */
      ms: [{
        ms: [m]
      }],
      /**
       * Margin End
       * @see https://tailwindcss.com/docs/margin
       */
      me: [{
        me: [m]
      }],
      /**
       * Margin Top
       * @see https://tailwindcss.com/docs/margin
       */
      mt: [{
        mt: [m]
      }],
      /**
       * Margin Right
       * @see https://tailwindcss.com/docs/margin
       */
      mr: [{
        mr: [m]
      }],
      /**
       * Margin Bottom
       * @see https://tailwindcss.com/docs/margin
       */
      mb: [{
        mb: [m]
      }],
      /**
       * Margin Left
       * @see https://tailwindcss.com/docs/margin
       */
      ml: [{
        ml: [m]
      }],
      /**
       * Space Between X
       * @see https://tailwindcss.com/docs/space
       */
      "space-x": [{
        "space-x": [G]
      }],
      /**
       * Space Between X Reverse
       * @see https://tailwindcss.com/docs/space
       */
      "space-x-reverse": ["space-x-reverse"],
      /**
       * Space Between Y
       * @see https://tailwindcss.com/docs/space
       */
      "space-y": [{
        "space-y": [G]
      }],
      /**
       * Space Between Y Reverse
       * @see https://tailwindcss.com/docs/space
       */
      "space-y-reverse": ["space-y-reverse"],
      // Sizing
      /**
       * Width
       * @see https://tailwindcss.com/docs/width
       */
      w: [{
        w: ["auto", "min", "max", "fit", "svw", "lvw", "dvw", ft, t]
      }],
      /**
       * Min-Width
       * @see https://tailwindcss.com/docs/min-width
       */
      "min-w": [{
        "min-w": [ft, t, "min", "max", "fit"]
      }],
      /**
       * Max-Width
       * @see https://tailwindcss.com/docs/max-width
       */
      "max-w": [{
        "max-w": [ft, t, "none", "full", "min", "max", "fit", "prose", {
          screen: [Hs]
        }, Hs]
      }],
      /**
       * Height
       * @see https://tailwindcss.com/docs/height
       */
      h: [{
        h: [ft, t, "auto", "min", "max", "fit", "svh", "lvh", "dvh"]
      }],
      /**
       * Min-Height
       * @see https://tailwindcss.com/docs/min-height
       */
      "min-h": [{
        "min-h": [ft, t, "min", "max", "fit", "svh", "lvh", "dvh"]
      }],
      /**
       * Max-Height
       * @see https://tailwindcss.com/docs/max-height
       */
      "max-h": [{
        "max-h": [ft, t, "min", "max", "fit", "svh", "lvh", "dvh"]
      }],
      /**
       * Size
       * @see https://tailwindcss.com/docs/size
       */
      size: [{
        size: [ft, t, "auto", "min", "max", "fit"]
      }],
      // Typography
      /**
       * Font Size
       * @see https://tailwindcss.com/docs/font-size
       */
      "font-size": [{
        text: ["base", Hs, Ys]
      }],
      /**
       * Font Smoothing
       * @see https://tailwindcss.com/docs/font-smoothing
       */
      "font-smoothing": ["antialiased", "subpixel-antialiased"],
      /**
       * Font Style
       * @see https://tailwindcss.com/docs/font-style
       */
      "font-style": ["italic", "not-italic"],
      /**
       * Font Weight
       * @see https://tailwindcss.com/docs/font-weight
       */
      "font-weight": [{
        font: ["thin", "extralight", "light", "normal", "medium", "semibold", "bold", "extrabold", "black", z2]
      }],
      /**
       * Font Family
       * @see https://tailwindcss.com/docs/font-family
       */
      "font-family": [{
        font: [Om]
      }],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-normal": ["normal-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-ordinal": ["ordinal"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-slashed-zero": ["slashed-zero"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-figure": ["lining-nums", "oldstyle-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-spacing": ["proportional-nums", "tabular-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-fraction": ["diagonal-fractions", "stacked-fractions"],
      /**
       * Letter Spacing
       * @see https://tailwindcss.com/docs/letter-spacing
       */
      tracking: [{
        tracking: ["tighter", "tight", "normal", "wide", "wider", "widest", ft]
      }],
      /**
       * Line Clamp
       * @see https://tailwindcss.com/docs/line-clamp
       */
      "line-clamp": [{
        "line-clamp": ["none", Uf, z2]
      }],
      /**
       * Line Height
       * @see https://tailwindcss.com/docs/line-height
       */
      leading: [{
        leading: ["none", "tight", "snug", "normal", "relaxed", "loose", Ha, ft]
      }],
      /**
       * List Style Image
       * @see https://tailwindcss.com/docs/list-style-image
       */
      "list-image": [{
        "list-image": ["none", ft]
      }],
      /**
       * List Style Type
       * @see https://tailwindcss.com/docs/list-style-type
       */
      "list-style-type": [{
        list: ["none", "disc", "decimal", ft]
      }],
      /**
       * List Style Position
       * @see https://tailwindcss.com/docs/list-style-position
       */
      "list-style-position": [{
        list: ["inside", "outside"]
      }],
      /**
       * Placeholder Color
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/placeholder-color
       */
      "placeholder-color": [{
        placeholder: [e]
      }],
      /**
       * Placeholder Opacity
       * @see https://tailwindcss.com/docs/placeholder-opacity
       */
      "placeholder-opacity": [{
        "placeholder-opacity": [w]
      }],
      /**
       * Text Alignment
       * @see https://tailwindcss.com/docs/text-align
       */
      "text-alignment": [{
        text: ["left", "center", "right", "justify", "start", "end"]
      }],
      /**
       * Text Color
       * @see https://tailwindcss.com/docs/text-color
       */
      "text-color": [{
        text: [e]
      }],
      /**
       * Text Opacity
       * @see https://tailwindcss.com/docs/text-opacity
       */
      "text-opacity": [{
        "text-opacity": [w]
      }],
      /**
       * Text Decoration
       * @see https://tailwindcss.com/docs/text-decoration
       */
      "text-decoration": ["underline", "overline", "line-through", "no-underline"],
      /**
       * Text Decoration Style
       * @see https://tailwindcss.com/docs/text-decoration-style
       */
      "text-decoration-style": [{
        decoration: [...F(), "wavy"]
      }],
      /**
       * Text Decoration Thickness
       * @see https://tailwindcss.com/docs/text-decoration-thickness
       */
      "text-decoration-thickness": [{
        decoration: ["auto", "from-font", Ha, Ys]
      }],
      /**
       * Text Underline Offset
       * @see https://tailwindcss.com/docs/text-underline-offset
       */
      "underline-offset": [{
        "underline-offset": ["auto", Ha, ft]
      }],
      /**
       * Text Decoration Color
       * @see https://tailwindcss.com/docs/text-decoration-color
       */
      "text-decoration-color": [{
        decoration: [e]
      }],
      /**
       * Text Transform
       * @see https://tailwindcss.com/docs/text-transform
       */
      "text-transform": ["uppercase", "lowercase", "capitalize", "normal-case"],
      /**
       * Text Overflow
       * @see https://tailwindcss.com/docs/text-overflow
       */
      "text-overflow": ["truncate", "text-ellipsis", "text-clip"],
      /**
       * Text Wrap
       * @see https://tailwindcss.com/docs/text-wrap
       */
      "text-wrap": [{
        text: ["wrap", "nowrap", "balance", "pretty"]
      }],
      /**
       * Text Indent
       * @see https://tailwindcss.com/docs/text-indent
       */
      indent: [{
        indent: I()
      }],
      /**
       * Vertical Alignment
       * @see https://tailwindcss.com/docs/vertical-align
       */
      "vertical-align": [{
        align: ["baseline", "top", "middle", "bottom", "text-top", "text-bottom", "sub", "super", ft]
      }],
      /**
       * Whitespace
       * @see https://tailwindcss.com/docs/whitespace
       */
      whitespace: [{
        whitespace: ["normal", "nowrap", "pre", "pre-line", "pre-wrap", "break-spaces"]
      }],
      /**
       * Word Break
       * @see https://tailwindcss.com/docs/word-break
       */
      break: [{
        break: ["normal", "words", "all", "keep"]
      }],
      /**
       * Hyphens
       * @see https://tailwindcss.com/docs/hyphens
       */
      hyphens: [{
        hyphens: ["none", "manual", "auto"]
      }],
      /**
       * Content
       * @see https://tailwindcss.com/docs/content
       */
      content: [{
        content: ["none", ft]
      }],
      // Backgrounds
      /**
       * Background Attachment
       * @see https://tailwindcss.com/docs/background-attachment
       */
      "bg-attachment": [{
        bg: ["fixed", "local", "scroll"]
      }],
      /**
       * Background Clip
       * @see https://tailwindcss.com/docs/background-clip
       */
      "bg-clip": [{
        "bg-clip": ["border", "padding", "content", "text"]
      }],
      /**
       * Background Opacity
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/background-opacity
       */
      "bg-opacity": [{
        "bg-opacity": [w]
      }],
      /**
       * Background Origin
       * @see https://tailwindcss.com/docs/background-origin
       */
      "bg-origin": [{
        "bg-origin": ["border", "padding", "content"]
      }],
      /**
       * Background Position
       * @see https://tailwindcss.com/docs/background-position
       */
      "bg-position": [{
        bg: [...D(), wke]
      }],
      /**
       * Background Repeat
       * @see https://tailwindcss.com/docs/background-repeat
       */
      "bg-repeat": [{
        bg: ["no-repeat", {
          repeat: ["", "x", "y", "round", "space"]
        }]
      }],
      /**
       * Background Size
       * @see https://tailwindcss.com/docs/background-size
       */
      "bg-size": [{
        bg: ["auto", "cover", "contain", xke]
      }],
      /**
       * Background Image
       * @see https://tailwindcss.com/docs/background-image
       */
      "bg-image": [{
        bg: ["none", {
          "gradient-to": ["t", "tr", "r", "br", "b", "bl", "l", "tl"]
        }, $ke]
      }],
      /**
       * Background Color
       * @see https://tailwindcss.com/docs/background-color
       */
      "bg-color": [{
        bg: [e]
      }],
      /**
       * Gradient Color Stops From Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-from-pos": [{
        from: [x]
      }],
      /**
       * Gradient Color Stops Via Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-via-pos": [{
        via: [x]
      }],
      /**
       * Gradient Color Stops To Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-to-pos": [{
        to: [x]
      }],
      /**
       * Gradient Color Stops From
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-from": [{
        from: [v]
      }],
      /**
       * Gradient Color Stops Via
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-via": [{
        via: [v]
      }],
      /**
       * Gradient Color Stops To
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-to": [{
        to: [v]
      }],
      // Borders
      /**
       * Border Radius
       * @see https://tailwindcss.com/docs/border-radius
       */
      rounded: [{
        rounded: [a]
      }],
      /**
       * Border Radius Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-s": [{
        "rounded-s": [a]
      }],
      /**
       * Border Radius End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-e": [{
        "rounded-e": [a]
      }],
      /**
       * Border Radius Top
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-t": [{
        "rounded-t": [a]
      }],
      /**
       * Border Radius Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-r": [{
        "rounded-r": [a]
      }],
      /**
       * Border Radius Bottom
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-b": [{
        "rounded-b": [a]
      }],
      /**
       * Border Radius Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-l": [{
        "rounded-l": [a]
      }],
      /**
       * Border Radius Start Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-ss": [{
        "rounded-ss": [a]
      }],
      /**
       * Border Radius Start End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-se": [{
        "rounded-se": [a]
      }],
      /**
       * Border Radius End End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-ee": [{
        "rounded-ee": [a]
      }],
      /**
       * Border Radius End Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-es": [{
        "rounded-es": [a]
      }],
      /**
       * Border Radius Top Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-tl": [{
        "rounded-tl": [a]
      }],
      /**
       * Border Radius Top Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-tr": [{
        "rounded-tr": [a]
      }],
      /**
       * Border Radius Bottom Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-br": [{
        "rounded-br": [a]
      }],
      /**
       * Border Radius Bottom Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-bl": [{
        "rounded-bl": [a]
      }],
      /**
       * Border Width
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w": [{
        border: [s]
      }],
      /**
       * Border Width X
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-x": [{
        "border-x": [s]
      }],
      /**
       * Border Width Y
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-y": [{
        "border-y": [s]
      }],
      /**
       * Border Width Start
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-s": [{
        "border-s": [s]
      }],
      /**
       * Border Width End
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-e": [{
        "border-e": [s]
      }],
      /**
       * Border Width Top
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-t": [{
        "border-t": [s]
      }],
      /**
       * Border Width Right
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-r": [{
        "border-r": [s]
      }],
      /**
       * Border Width Bottom
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-b": [{
        "border-b": [s]
      }],
      /**
       * Border Width Left
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-l": [{
        "border-l": [s]
      }],
      /**
       * Border Opacity
       * @see https://tailwindcss.com/docs/border-opacity
       */
      "border-opacity": [{
        "border-opacity": [w]
      }],
      /**
       * Border Style
       * @see https://tailwindcss.com/docs/border-style
       */
      "border-style": [{
        border: [...F(), "hidden"]
      }],
      /**
       * Divide Width X
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-x": [{
        "divide-x": [s]
      }],
      /**
       * Divide Width X Reverse
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-x-reverse": ["divide-x-reverse"],
      /**
       * Divide Width Y
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-y": [{
        "divide-y": [s]
      }],
      /**
       * Divide Width Y Reverse
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-y-reverse": ["divide-y-reverse"],
      /**
       * Divide Opacity
       * @see https://tailwindcss.com/docs/divide-opacity
       */
      "divide-opacity": [{
        "divide-opacity": [w]
      }],
      /**
       * Divide Style
       * @see https://tailwindcss.com/docs/divide-style
       */
      "divide-style": [{
        divide: F()
      }],
      /**
       * Border Color
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color": [{
        border: [o]
      }],
      /**
       * Border Color X
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-x": [{
        "border-x": [o]
      }],
      /**
       * Border Color Y
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-y": [{
        "border-y": [o]
      }],
      /**
       * Border Color S
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-s": [{
        "border-s": [o]
      }],
      /**
       * Border Color E
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-e": [{
        "border-e": [o]
      }],
      /**
       * Border Color Top
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-t": [{
        "border-t": [o]
      }],
      /**
       * Border Color Right
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-r": [{
        "border-r": [o]
      }],
      /**
       * Border Color Bottom
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-b": [{
        "border-b": [o]
      }],
      /**
       * Border Color Left
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-l": [{
        "border-l": [o]
      }],
      /**
       * Divide Color
       * @see https://tailwindcss.com/docs/divide-color
       */
      "divide-color": [{
        divide: [o]
      }],
      /**
       * Outline Style
       * @see https://tailwindcss.com/docs/outline-style
       */
      "outline-style": [{
        outline: ["", ...F()]
      }],
      /**
       * Outline Offset
       * @see https://tailwindcss.com/docs/outline-offset
       */
      "outline-offset": [{
        "outline-offset": [Ha, ft]
      }],
      /**
       * Outline Width
       * @see https://tailwindcss.com/docs/outline-width
       */
      "outline-w": [{
        outline: [Ha, Ys]
      }],
      /**
       * Outline Color
       * @see https://tailwindcss.com/docs/outline-color
       */
      "outline-color": [{
        outline: [e]
      }],
      /**
       * Ring Width
       * @see https://tailwindcss.com/docs/ring-width
       */
      "ring-w": [{
        ring: te()
      }],
      /**
       * Ring Width Inset
       * @see https://tailwindcss.com/docs/ring-width
       */
      "ring-w-inset": ["ring-inset"],
      /**
       * Ring Color
       * @see https://tailwindcss.com/docs/ring-color
       */
      "ring-color": [{
        ring: [e]
      }],
      /**
       * Ring Opacity
       * @see https://tailwindcss.com/docs/ring-opacity
       */
      "ring-opacity": [{
        "ring-opacity": [w]
      }],
      /**
       * Ring Offset Width
       * @see https://tailwindcss.com/docs/ring-offset-width
       */
      "ring-offset-w": [{
        "ring-offset": [Ha, Ys]
      }],
      /**
       * Ring Offset Color
       * @see https://tailwindcss.com/docs/ring-offset-color
       */
      "ring-offset-color": [{
        "ring-offset": [e]
      }],
      // Effects
      /**
       * Box Shadow
       * @see https://tailwindcss.com/docs/box-shadow
       */
      shadow: [{
        shadow: ["", "inner", "none", Hs, Oke]
      }],
      /**
       * Box Shadow Color
       * @see https://tailwindcss.com/docs/box-shadow-color
       */
      "shadow-color": [{
        shadow: [Om]
      }],
      /**
       * Opacity
       * @see https://tailwindcss.com/docs/opacity
       */
      opacity: [{
        opacity: [w]
      }],
      /**
       * Mix Blend Mode
       * @see https://tailwindcss.com/docs/mix-blend-mode
       */
      "mix-blend": [{
        "mix-blend": [...R(), "plus-lighter", "plus-darker"]
      }],
      /**
       * Background Blend Mode
       * @see https://tailwindcss.com/docs/background-blend-mode
       */
      "bg-blend": [{
        "bg-blend": R()
      }],
      // Filters
      /**
       * Filter
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/filter
       */
      filter: [{
        filter: ["", "none"]
      }],
      /**
       * Blur
       * @see https://tailwindcss.com/docs/blur
       */
      blur: [{
        blur: [r]
      }],
      /**
       * Brightness
       * @see https://tailwindcss.com/docs/brightness
       */
      brightness: [{
        brightness: [n]
      }],
      /**
       * Contrast
       * @see https://tailwindcss.com/docs/contrast
       */
      contrast: [{
        contrast: [l]
      }],
      /**
       * Drop Shadow
       * @see https://tailwindcss.com/docs/drop-shadow
       */
      "drop-shadow": [{
        "drop-shadow": ["", "none", Hs, ft]
      }],
      /**
       * Grayscale
       * @see https://tailwindcss.com/docs/grayscale
       */
      grayscale: [{
        grayscale: [c]
      }],
      /**
       * Hue Rotate
       * @see https://tailwindcss.com/docs/hue-rotate
       */
      "hue-rotate": [{
        "hue-rotate": [u]
      }],
      /**
       * Invert
       * @see https://tailwindcss.com/docs/invert
       */
      invert: [{
        invert: [f]
      }],
      /**
       * Saturate
       * @see https://tailwindcss.com/docs/saturate
       */
      saturate: [{
        saturate: [E]
      }],
      /**
       * Sepia
       * @see https://tailwindcss.com/docs/sepia
       */
      sepia: [{
        sepia: [h]
      }],
      /**
       * Backdrop Filter
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/backdrop-filter
       */
      "backdrop-filter": [{
        "backdrop-filter": ["", "none"]
      }],
      /**
       * Backdrop Blur
       * @see https://tailwindcss.com/docs/backdrop-blur
       */
      "backdrop-blur": [{
        "backdrop-blur": [r]
      }],
      /**
       * Backdrop Brightness
       * @see https://tailwindcss.com/docs/backdrop-brightness
       */
      "backdrop-brightness": [{
        "backdrop-brightness": [n]
      }],
      /**
       * Backdrop Contrast
       * @see https://tailwindcss.com/docs/backdrop-contrast
       */
      "backdrop-contrast": [{
        "backdrop-contrast": [l]
      }],
      /**
       * Backdrop Grayscale
       * @see https://tailwindcss.com/docs/backdrop-grayscale
       */
      "backdrop-grayscale": [{
        "backdrop-grayscale": [c]
      }],
      /**
       * Backdrop Hue Rotate
       * @see https://tailwindcss.com/docs/backdrop-hue-rotate
       */
      "backdrop-hue-rotate": [{
        "backdrop-hue-rotate": [u]
      }],
      /**
       * Backdrop Invert
       * @see https://tailwindcss.com/docs/backdrop-invert
       */
      "backdrop-invert": [{
        "backdrop-invert": [f]
      }],
      /**
       * Backdrop Opacity
       * @see https://tailwindcss.com/docs/backdrop-opacity
       */
      "backdrop-opacity": [{
        "backdrop-opacity": [w]
      }],
      /**
       * Backdrop Saturate
       * @see https://tailwindcss.com/docs/backdrop-saturate
       */
      "backdrop-saturate": [{
        "backdrop-saturate": [E]
      }],
      /**
       * Backdrop Sepia
       * @see https://tailwindcss.com/docs/backdrop-sepia
       */
      "backdrop-sepia": [{
        "backdrop-sepia": [h]
      }],
      // Tables
      /**
       * Border Collapse
       * @see https://tailwindcss.com/docs/border-collapse
       */
      "border-collapse": [{
        border: ["collapse", "separate"]
      }],
      /**
       * Border Spacing
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing": [{
        "border-spacing": [i]
      }],
      /**
       * Border Spacing X
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing-x": [{
        "border-spacing-x": [i]
      }],
      /**
       * Border Spacing Y
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing-y": [{
        "border-spacing-y": [i]
      }],
      /**
       * Table Layout
       * @see https://tailwindcss.com/docs/table-layout
       */
      "table-layout": [{
        table: ["auto", "fixed"]
      }],
      /**
       * Caption Side
       * @see https://tailwindcss.com/docs/caption-side
       */
      caption: [{
        caption: ["top", "bottom"]
      }],
      // Transitions and Animation
      /**
       * Tranisition Property
       * @see https://tailwindcss.com/docs/transition-property
       */
      transition: [{
        transition: ["none", "all", "", "colors", "opacity", "shadow", "transform", ft]
      }],
      /**
       * Transition Duration
       * @see https://tailwindcss.com/docs/transition-duration
       */
      duration: [{
        duration: d()
      }],
      /**
       * Transition Timing Function
       * @see https://tailwindcss.com/docs/transition-timing-function
       */
      ease: [{
        ease: ["linear", "in", "out", "in-out", ft]
      }],
      /**
       * Transition Delay
       * @see https://tailwindcss.com/docs/transition-delay
       */
      delay: [{
        delay: d()
      }],
      /**
       * Animation
       * @see https://tailwindcss.com/docs/animation
       */
      animate: [{
        animate: ["none", "spin", "ping", "pulse", "bounce", ft]
      }],
      // Transforms
      /**
       * Transform
       * @see https://tailwindcss.com/docs/transform
       */
      transform: [{
        transform: ["", "gpu", "none"]
      }],
      /**
       * Scale
       * @see https://tailwindcss.com/docs/scale
       */
      scale: [{
        scale: [S]
      }],
      /**
       * Scale X
       * @see https://tailwindcss.com/docs/scale
       */
      "scale-x": [{
        "scale-x": [S]
      }],
      /**
       * Scale Y
       * @see https://tailwindcss.com/docs/scale
       */
      "scale-y": [{
        "scale-y": [S]
      }],
      /**
       * Rotate
       * @see https://tailwindcss.com/docs/rotate
       */
      rotate: [{
        rotate: [$m, ft]
      }],
      /**
       * Translate X
       * @see https://tailwindcss.com/docs/translate
       */
      "translate-x": [{
        "translate-x": [Q]
      }],
      /**
       * Translate Y
       * @see https://tailwindcss.com/docs/translate
       */
      "translate-y": [{
        "translate-y": [Q]
      }],
      /**
       * Skew X
       * @see https://tailwindcss.com/docs/skew
       */
      "skew-x": [{
        "skew-x": [U]
      }],
      /**
       * Skew Y
       * @see https://tailwindcss.com/docs/skew
       */
      "skew-y": [{
        "skew-y": [U]
      }],
      /**
       * Transform Origin
       * @see https://tailwindcss.com/docs/transform-origin
       */
      "transform-origin": [{
        origin: ["center", "top", "top-right", "right", "bottom-right", "bottom", "bottom-left", "left", "top-left", ft]
      }],
      // Interactivity
      /**
       * Accent Color
       * @see https://tailwindcss.com/docs/accent-color
       */
      accent: [{
        accent: ["auto", e]
      }],
      /**
       * Appearance
       * @see https://tailwindcss.com/docs/appearance
       */
      appearance: [{
        appearance: ["none", "auto"]
      }],
      /**
       * Cursor
       * @see https://tailwindcss.com/docs/cursor
       */
      cursor: [{
        cursor: ["auto", "default", "pointer", "wait", "text", "move", "help", "not-allowed", "none", "context-menu", "progress", "cell", "crosshair", "vertical-text", "alias", "copy", "no-drop", "grab", "grabbing", "all-scroll", "col-resize", "row-resize", "n-resize", "e-resize", "s-resize", "w-resize", "ne-resize", "nw-resize", "se-resize", "sw-resize", "ew-resize", "ns-resize", "nesw-resize", "nwse-resize", "zoom-in", "zoom-out", ft]
      }],
      /**
       * Caret Color
       * @see https://tailwindcss.com/docs/just-in-time-mode#caret-color-utilities
       */
      "caret-color": [{
        caret: [e]
      }],
      /**
       * Pointer Events
       * @see https://tailwindcss.com/docs/pointer-events
       */
      "pointer-events": [{
        "pointer-events": ["none", "auto"]
      }],
      /**
       * Resize
       * @see https://tailwindcss.com/docs/resize
       */
      resize: [{
        resize: ["none", "y", "x", ""]
      }],
      /**
       * Scroll Behavior
       * @see https://tailwindcss.com/docs/scroll-behavior
       */
      "scroll-behavior": [{
        scroll: ["auto", "smooth"]
      }],
      /**
       * Scroll Margin
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-m": [{
        "scroll-m": I()
      }],
      /**
       * Scroll Margin X
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mx": [{
        "scroll-mx": I()
      }],
      /**
       * Scroll Margin Y
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-my": [{
        "scroll-my": I()
      }],
      /**
       * Scroll Margin Start
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-ms": [{
        "scroll-ms": I()
      }],
      /**
       * Scroll Margin End
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-me": [{
        "scroll-me": I()
      }],
      /**
       * Scroll Margin Top
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mt": [{
        "scroll-mt": I()
      }],
      /**
       * Scroll Margin Right
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mr": [{
        "scroll-mr": I()
      }],
      /**
       * Scroll Margin Bottom
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mb": [{
        "scroll-mb": I()
      }],
      /**
       * Scroll Margin Left
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-ml": [{
        "scroll-ml": I()
      }],
      /**
       * Scroll Padding
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-p": [{
        "scroll-p": I()
      }],
      /**
       * Scroll Padding X
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-px": [{
        "scroll-px": I()
      }],
      /**
       * Scroll Padding Y
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-py": [{
        "scroll-py": I()
      }],
      /**
       * Scroll Padding Start
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-ps": [{
        "scroll-ps": I()
      }],
      /**
       * Scroll Padding End
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pe": [{
        "scroll-pe": I()
      }],
      /**
       * Scroll Padding Top
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pt": [{
        "scroll-pt": I()
      }],
      /**
       * Scroll Padding Right
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pr": [{
        "scroll-pr": I()
      }],
      /**
       * Scroll Padding Bottom
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pb": [{
        "scroll-pb": I()
      }],
      /**
       * Scroll Padding Left
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pl": [{
        "scroll-pl": I()
      }],
      /**
       * Scroll Snap Align
       * @see https://tailwindcss.com/docs/scroll-snap-align
       */
      "snap-align": [{
        snap: ["start", "end", "center", "align-none"]
      }],
      /**
       * Scroll Snap Stop
       * @see https://tailwindcss.com/docs/scroll-snap-stop
       */
      "snap-stop": [{
        snap: ["normal", "always"]
      }],
      /**
       * Scroll Snap Type
       * @see https://tailwindcss.com/docs/scroll-snap-type
       */
      "snap-type": [{
        snap: ["none", "x", "y", "both"]
      }],
      /**
       * Scroll Snap Type Strictness
       * @see https://tailwindcss.com/docs/scroll-snap-type
       */
      "snap-strictness": [{
        snap: ["mandatory", "proximity"]
      }],
      /**
       * Touch Action
       * @see https://tailwindcss.com/docs/touch-action
       */
      touch: [{
        touch: ["auto", "none", "manipulation"]
      }],
      /**
       * Touch Action X
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-x": [{
        "touch-pan": ["x", "left", "right"]
      }],
      /**
       * Touch Action Y
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-y": [{
        "touch-pan": ["y", "up", "down"]
      }],
      /**
       * Touch Action Pinch Zoom
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-pz": ["touch-pinch-zoom"],
      /**
       * User Select
       * @see https://tailwindcss.com/docs/user-select
       */
      select: [{
        select: ["none", "text", "all", "auto"]
      }],
      /**
       * Will Change
       * @see https://tailwindcss.com/docs/will-change
       */
      "will-change": [{
        "will-change": ["auto", "scroll", "contents", "transform", ft]
      }],
      // SVG
      /**
       * Fill
       * @see https://tailwindcss.com/docs/fill
       */
      fill: [{
        fill: [e, "none"]
      }],
      /**
       * Stroke Width
       * @see https://tailwindcss.com/docs/stroke-width
       */
      "stroke-w": [{
        stroke: [Ha, Ys, z2]
      }],
      /**
       * Stroke
       * @see https://tailwindcss.com/docs/stroke
       */
      stroke: [{
        stroke: [e, "none"]
      }],
      // Accessibility
      /**
       * Screen Readers
       * @see https://tailwindcss.com/docs/screen-readers
       */
      sr: ["sr-only", "not-sr-only"],
      /**
       * Forced Color Adjust
       * @see https://tailwindcss.com/docs/forced-color-adjust
       */
      "forced-color-adjust": [{
        "forced-color-adjust": ["auto", "none"]
      }]
    },
    conflictingClassGroups: {
      overflow: ["overflow-x", "overflow-y"],
      overscroll: ["overscroll-x", "overscroll-y"],
      inset: ["inset-x", "inset-y", "start", "end", "top", "right", "bottom", "left"],
      "inset-x": ["right", "left"],
      "inset-y": ["top", "bottom"],
      flex: ["basis", "grow", "shrink"],
      gap: ["gap-x", "gap-y"],
      p: ["px", "py", "ps", "pe", "pt", "pr", "pb", "pl"],
      px: ["pr", "pl"],
      py: ["pt", "pb"],
      m: ["mx", "my", "ms", "me", "mt", "mr", "mb", "ml"],
      mx: ["mr", "ml"],
      my: ["mt", "mb"],
      size: ["w", "h"],
      "font-size": ["leading"],
      "fvn-normal": ["fvn-ordinal", "fvn-slashed-zero", "fvn-figure", "fvn-spacing", "fvn-fraction"],
      "fvn-ordinal": ["fvn-normal"],
      "fvn-slashed-zero": ["fvn-normal"],
      "fvn-figure": ["fvn-normal"],
      "fvn-spacing": ["fvn-normal"],
      "fvn-fraction": ["fvn-normal"],
      "line-clamp": ["display", "overflow"],
      rounded: ["rounded-s", "rounded-e", "rounded-t", "rounded-r", "rounded-b", "rounded-l", "rounded-ss", "rounded-se", "rounded-ee", "rounded-es", "rounded-tl", "rounded-tr", "rounded-br", "rounded-bl"],
      "rounded-s": ["rounded-ss", "rounded-es"],
      "rounded-e": ["rounded-se", "rounded-ee"],
      "rounded-t": ["rounded-tl", "rounded-tr"],
      "rounded-r": ["rounded-tr", "rounded-br"],
      "rounded-b": ["rounded-br", "rounded-bl"],
      "rounded-l": ["rounded-tl", "rounded-bl"],
      "border-spacing": ["border-spacing-x", "border-spacing-y"],
      "border-w": ["border-w-s", "border-w-e", "border-w-t", "border-w-r", "border-w-b", "border-w-l"],
      "border-w-x": ["border-w-r", "border-w-l"],
      "border-w-y": ["border-w-t", "border-w-b"],
      "border-color": ["border-color-s", "border-color-e", "border-color-t", "border-color-r", "border-color-b", "border-color-l"],
      "border-color-x": ["border-color-r", "border-color-l"],
      "border-color-y": ["border-color-t", "border-color-b"],
      "scroll-m": ["scroll-mx", "scroll-my", "scroll-ms", "scroll-me", "scroll-mt", "scroll-mr", "scroll-mb", "scroll-ml"],
      "scroll-mx": ["scroll-mr", "scroll-ml"],
      "scroll-my": ["scroll-mt", "scroll-mb"],
      "scroll-p": ["scroll-px", "scroll-py", "scroll-ps", "scroll-pe", "scroll-pt", "scroll-pr", "scroll-pb", "scroll-pl"],
      "scroll-px": ["scroll-pr", "scroll-pl"],
      "scroll-py": ["scroll-pt", "scroll-pb"],
      touch: ["touch-x", "touch-y", "touch-pz"],
      "touch-x": ["touch"],
      "touch-y": ["touch"],
      "touch-pz": ["touch"]
    },
    conflictingClassGroupModifiers: {
      "font-size": ["leading"]
    }
  };
}, k7 = /* @__PURE__ */ uke(Cke);
var Ake = Object.defineProperty, _ke = (e, t, r) => t in e ? Ake(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r }) : e[t] = r, tn = (e, t, r) => _ke(e, typeof t != "symbol" ? t + "" : t, r);
let qH = class {
  constructor(e) {
    tn(this, "kind", "model"), tn(this, "id"), tn(this, "tauriId"), tn(this, "fullName"), tn(this, "category"), tn(this, "creator"), tn(this, "selectorName"), tn(this, "selectorDescription"), tn(this, "selectorBadges"), tn(this, "tags"), this.id = e.id, this.tauriId = e.tauriId, this.fullName = e.fullName, this.category = e.category, this.creator = e.creator, this.selectorName = e.selectorName, this.selectorDescription = e.selectorDescription, this.selectorBadges = e.selectorBadges, this.tags = e.tags ?? [];
  }
  toLegacyBadges() {
    return this.selectorBadges.map((e) => ({ label: e }));
  }
  // TODO: This is a method to support migration. Kill it after we no longer need it.
  toLegacyModelConfig() {
    return {
      id: this.id,
      label: this.selectorName,
      description: this.selectorDescription,
      badges: this.toLegacyBadges(),
      category: this.category,
      info: {
        name: this.fullName,
        tauri_id: this.tauriId,
        creator: this.creator
      },
      capabilities: {
        maxGenerationCount: 9,
        // NB: Sentinel value to detect continued use
        defaultGenerationCount: 9
        // NB: Sentinel value to detect continued use
      },
      tags: []
    };
  }
}, Uo = class extends qH {
  constructor(t) {
    if (t.maxGenerationCount < 1)
      throw new Error("maxGenerationCount must be at least 1");
    if (t.defaultGenerationCount < 1)
      throw new Error("defaultGenerationCount must be at least 1");
    if (t.defaultGenerationCount > t.maxGenerationCount)
      throw new Error(
        "defaultGenerationCount must be less than or equal to maxGenerationCount"
      );
    super(t), tn(this, "kind", "image_model"), tn(this, "maxGenerationCount"), tn(this, "defaultGenerationCount"), tn(this, "canEditImages"), tn(this, "usesInpaintingMask"), tn(this, "canUseImagePrompt"), tn(this, "maxImagePromptCount"), this.maxGenerationCount = t.maxGenerationCount, this.defaultGenerationCount = t.defaultGenerationCount, this.canEditImages = t.canEditImages ?? !1, this.usesInpaintingMask = t.usesInpaintingMask ?? !1, this.canUseImagePrompt = t.canUseImagePrompt ?? !1, this.maxImagePromptCount = Math.max(0, t.maxImagePromptCount ?? 1);
  }
}, Em = class extends qH {
  constructor(t) {
    super(t), tn(this, "kind", "video_model"), tn(this, "startFrame"), tn(this, "endFrame"), this.startFrame = t.startFrame, this.endFrame = t.endFrame;
  }
};
var Qe = /* @__PURE__ */ ((e) => (e.BlackForestLabs = "BlackForestLabs", e.Bytedance = "Bytedance", e.Google = "Google", e.Hailuo = "Hailuo", e.Kling = "Kling", e.Midjourney = "Midjourney", e.OpenAi = "OpenAi", e.Runway = "Runway", e.Stability = "Stability", e.Tencent = "Tencent", e.Recraft = "Recraft", e.Krea = "Krea", e.Fal = "Fal", e.Replicate = "Replicate", e.TensorArt = "TensorArt", e.OpenArt = "OpenArt", e.Higgsfield = "Higgsfield", e.Alibaba = "Alibaba", e.Vidu = "Vidu", e.ArtCraft = "ArtCraft", e))(Qe || {});
function Nke(e) {
  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e;
}
var F2 = { exports: {} }, St = {};
/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var $7;
function jke() {
  if ($7) return St;
  $7 = 1;
  var e = Symbol.for("react.element"), t = Symbol.for("react.portal"), r = Symbol.for("react.fragment"), n = Symbol.for("react.strict_mode"), o = Symbol.for("react.profiler"), a = Symbol.for("react.provider"), i = Symbol.for("react.context"), s = Symbol.for("react.forward_ref"), l = Symbol.for("react.suspense"), c = Symbol.for("react.memo"), u = Symbol.for("react.lazy"), f = Symbol.iterator;
  function p(d) {
    return d === null || typeof d != "object" ? null : (d = f && d[f] || d["@@iterator"], typeof d == "function" ? d : null);
  }
  var v = { isMounted: function() {
    return !1;
  }, enqueueForceUpdate: function() {
  }, enqueueReplaceState: function() {
  }, enqueueSetState: function() {
  } }, x = Object.assign, b = {};
  function m(d, O, C) {
    this.props = d, this.context = O, this.refs = b, this.updater = C || v;
  }
  m.prototype.isReactComponent = {}, m.prototype.setState = function(d, O) {
    if (typeof d != "object" && typeof d != "function" && d != null) throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
    this.updater.enqueueSetState(this, d, O, "setState");
  }, m.prototype.forceUpdate = function(d) {
    this.updater.enqueueForceUpdate(this, d, "forceUpdate");
  };
  function w() {
  }
  w.prototype = m.prototype;
  function $(d, O, C) {
    this.props = d, this.context = O, this.refs = b, this.updater = C || v;
  }
  var E = $.prototype = new w();
  E.constructor = $, x(E, m.prototype), E.isPureReactComponent = !0;
  var S = Array.isArray, h = Object.prototype.hasOwnProperty, U = { current: null }, G = { key: !0, ref: !0, __self: !0, __source: !0 };
  function Q(d, O, C) {
    var A, N = {}, j = null, _ = null;
    if (O != null) for (A in O.ref !== void 0 && (_ = O.ref), O.key !== void 0 && (j = "" + O.key), O) h.call(O, A) && !G.hasOwnProperty(A) && (N[A] = O[A]);
    var T = arguments.length - 2;
    if (T === 1) N.children = C;
    else if (1 < T) {
      for (var M = Array(T), z = 0; z < T; z++) M[z] = arguments[z + 2];
      N.children = M;
    }
    if (d && d.defaultProps) for (A in T = d.defaultProps, T) N[A] === void 0 && (N[A] = T[A]);
    return { $$typeof: e, type: d, key: j, ref: _, props: N, _owner: U.current };
  }
  function Z(d, O) {
    return { $$typeof: e, type: d.type, key: O, ref: d.ref, props: d.props, _owner: d._owner };
  }
  function X(d) {
    return typeof d == "object" && d !== null && d.$$typeof === e;
  }
  function J(d) {
    var O = { "=": "=0", ":": "=2" };
    return "$" + d.replace(/[=:]/g, function(C) {
      return O[C];
    });
  }
  var I = /\/+/g;
  function te(d, O) {
    return typeof d == "object" && d !== null && d.key != null ? J("" + d.key) : O.toString(36);
  }
  function V(d, O, C, A, N) {
    var j = typeof d;
    (j === "undefined" || j === "boolean") && (d = null);
    var _ = !1;
    if (d === null) _ = !0;
    else switch (j) {
      case "string":
      case "number":
        _ = !0;
        break;
      case "object":
        switch (d.$$typeof) {
          case e:
          case t:
            _ = !0;
        }
    }
    if (_) return _ = d, N = N(_), d = A === "" ? "." + te(_, 0) : A, S(N) ? (C = "", d != null && (C = d.replace(I, "$&/") + "/"), V(N, O, C, "", function(z) {
      return z;
    })) : N != null && (X(N) && (N = Z(N, C + (!N.key || _ && _.key === N.key ? "" : ("" + N.key).replace(I, "$&/") + "/") + d)), O.push(N)), 1;
    if (_ = 0, A = A === "" ? "." : A + ":", S(d)) for (var T = 0; T < d.length; T++) {
      j = d[T];
      var M = A + te(j, T);
      _ += V(j, O, C, M, N);
    }
    else if (M = p(d), typeof M == "function") for (d = M.call(d), T = 0; !(j = d.next()).done; ) j = j.value, M = A + te(j, T++), _ += V(j, O, C, M, N);
    else if (j === "object") throw O = String(d), Error("Objects are not valid as a React child (found: " + (O === "[object Object]" ? "object with keys {" + Object.keys(d).join(", ") + "}" : O) + "). If you meant to render a collection of children, use an array instead.");
    return _;
  }
  function D(d, O, C) {
    if (d == null) return d;
    var A = [], N = 0;
    return V(d, A, "", "", function(j) {
      return O.call(C, j, N++);
    }), A;
  }
  function F(d) {
    if (d._status === -1) {
      var O = d._result;
      O = O(), O.then(function(C) {
        (d._status === 0 || d._status === -1) && (d._status = 1, d._result = C);
      }, function(C) {
        (d._status === 0 || d._status === -1) && (d._status = 2, d._result = C);
      }), d._status === -1 && (d._status = 0, d._result = O);
    }
    if (d._status === 1) return d._result.default;
    throw d._result;
  }
  var R = { current: null }, H = { transition: null }, B = { ReactCurrentDispatcher: R, ReactCurrentBatchConfig: H, ReactCurrentOwner: U };
  function g() {
    throw Error("act(...) is not supported in production builds of React.");
  }
  return St.Children = { map: D, forEach: function(d, O, C) {
    D(d, function() {
      O.apply(this, arguments);
    }, C);
  }, count: function(d) {
    var O = 0;
    return D(d, function() {
      O++;
    }), O;
  }, toArray: function(d) {
    return D(d, function(O) {
      return O;
    }) || [];
  }, only: function(d) {
    if (!X(d)) throw Error("React.Children.only expected to receive a single React element child.");
    return d;
  } }, St.Component = m, St.Fragment = r, St.Profiler = o, St.PureComponent = $, St.StrictMode = n, St.Suspense = l, St.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = B, St.act = g, St.cloneElement = function(d, O, C) {
    if (d == null) throw Error("React.cloneElement(...): The argument must be a React element, but you passed " + d + ".");
    var A = x({}, d.props), N = d.key, j = d.ref, _ = d._owner;
    if (O != null) {
      if (O.ref !== void 0 && (j = O.ref, _ = U.current), O.key !== void 0 && (N = "" + O.key), d.type && d.type.defaultProps) var T = d.type.defaultProps;
      for (M in O) h.call(O, M) && !G.hasOwnProperty(M) && (A[M] = O[M] === void 0 && T !== void 0 ? T[M] : O[M]);
    }
    var M = arguments.length - 2;
    if (M === 1) A.children = C;
    else if (1 < M) {
      T = Array(M);
      for (var z = 0; z < M; z++) T[z] = arguments[z + 2];
      A.children = T;
    }
    return { $$typeof: e, type: d.type, key: N, ref: j, props: A, _owner: _ };
  }, St.createContext = function(d) {
    return d = { $$typeof: i, _currentValue: d, _currentValue2: d, _threadCount: 0, Provider: null, Consumer: null, _defaultValue: null, _globalName: null }, d.Provider = { $$typeof: a, _context: d }, d.Consumer = d;
  }, St.createElement = Q, St.createFactory = function(d) {
    var O = Q.bind(null, d);
    return O.type = d, O;
  }, St.createRef = function() {
    return { current: null };
  }, St.forwardRef = function(d) {
    return { $$typeof: s, render: d };
  }, St.isValidElement = X, St.lazy = function(d) {
    return { $$typeof: u, _payload: { _status: -1, _result: d }, _init: F };
  }, St.memo = function(d, O) {
    return { $$typeof: c, type: d, compare: O === void 0 ? null : O };
  }, St.startTransition = function(d) {
    var O = H.transition;
    H.transition = {};
    try {
      d();
    } finally {
      H.transition = O;
    }
  }, St.unstable_act = g, St.useCallback = function(d, O) {
    return R.current.useCallback(d, O);
  }, St.useContext = function(d) {
    return R.current.useContext(d);
  }, St.useDebugValue = function() {
  }, St.useDeferredValue = function(d) {
    return R.current.useDeferredValue(d);
  }, St.useEffect = function(d, O) {
    return R.current.useEffect(d, O);
  }, St.useId = function() {
    return R.current.useId();
  }, St.useImperativeHandle = function(d, O, C) {
    return R.current.useImperativeHandle(d, O, C);
  }, St.useInsertionEffect = function(d, O) {
    return R.current.useInsertionEffect(d, O);
  }, St.useLayoutEffect = function(d, O) {
    return R.current.useLayoutEffect(d, O);
  }, St.useMemo = function(d, O) {
    return R.current.useMemo(d, O);
  }, St.useReducer = function(d, O, C) {
    return R.current.useReducer(d, O, C);
  }, St.useRef = function(d) {
    return R.current.useRef(d);
  }, St.useState = function(d) {
    return R.current.useState(d);
  }, St.useSyncExternalStore = function(d, O, C) {
    return R.current.useSyncExternalStore(d, O, C);
  }, St.useTransition = function() {
    return R.current.useTransition();
  }, St.version = "18.3.1", St;
}
var av = { exports: {} };
/**
 * @license React
 * react.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
av.exports;
var O7;
function Ike() {
  return O7 || (O7 = 1, function(e, t) {
    process.env.NODE_ENV !== "production" && function() {
      typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
      var r = "18.3.1", n = Symbol.for("react.element"), o = Symbol.for("react.portal"), a = Symbol.for("react.fragment"), i = Symbol.for("react.strict_mode"), s = Symbol.for("react.profiler"), l = Symbol.for("react.provider"), c = Symbol.for("react.context"), u = Symbol.for("react.forward_ref"), f = Symbol.for("react.suspense"), p = Symbol.for("react.suspense_list"), v = Symbol.for("react.memo"), x = Symbol.for("react.lazy"), b = Symbol.for("react.offscreen"), m = Symbol.iterator, w = "@@iterator";
      function $(y) {
        if (y === null || typeof y != "object")
          return null;
        var P = m && y[m] || y[w];
        return typeof P == "function" ? P : null;
      }
      var E = {
        /**
         * @internal
         * @type {ReactComponent}
         */
        current: null
      }, S = {
        transition: null
      }, h = {
        current: null,
        // Used to reproduce behavior of `batchedUpdates` in legacy mode.
        isBatchingLegacy: !1,
        didScheduleLegacyUpdate: !1
      }, U = {
        /**
         * @internal
         * @type {ReactComponent}
         */
        current: null
      }, G = {}, Q = null;
      function Z(y) {
        Q = y;
      }
      G.setExtraStackFrame = function(y) {
        Q = y;
      }, G.getCurrentStack = null, G.getStackAddendum = function() {
        var y = "";
        Q && (y += Q);
        var P = G.getCurrentStack;
        return P && (y += P() || ""), y;
      };
      var X = !1, J = !1, I = !1, te = !1, V = !1, D = {
        ReactCurrentDispatcher: E,
        ReactCurrentBatchConfig: S,
        ReactCurrentOwner: U
      };
      D.ReactDebugCurrentFrame = G, D.ReactCurrentActQueue = h;
      function F(y) {
        {
          for (var P = arguments.length, L = new Array(P > 1 ? P - 1 : 0), W = 1; W < P; W++)
            L[W - 1] = arguments[W];
          H("warn", y, L);
        }
      }
      function R(y) {
        {
          for (var P = arguments.length, L = new Array(P > 1 ? P - 1 : 0), W = 1; W < P; W++)
            L[W - 1] = arguments[W];
          H("error", y, L);
        }
      }
      function H(y, P, L) {
        {
          var W = D.ReactDebugCurrentFrame, K = W.getStackAddendum();
          K !== "" && (P += "%s", L = L.concat([K]));
          var ne = L.map(function(re) {
            return String(re);
          });
          ne.unshift("Warning: " + P), Function.prototype.apply.call(console[y], console, ne);
        }
      }
      var B = {};
      function g(y, P) {
        {
          var L = y.constructor, W = L && (L.displayName || L.name) || "ReactClass", K = W + "." + P;
          if (B[K])
            return;
          R("Can't call %s on a component that is not yet mounted. This is a no-op, but it might indicate a bug in your application. Instead, assign to `this.state` directly or define a `state = {};` class property with the desired state in the %s component.", P, W), B[K] = !0;
        }
      }
      var d = {
        /**
         * Checks whether or not this composite component is mounted.
         * @param {ReactClass} publicInstance The instance we want to test.
         * @return {boolean} True if mounted, false otherwise.
         * @protected
         * @final
         */
        isMounted: function(y) {
          return !1;
        },
        /**
         * Forces an update. This should only be invoked when it is known with
         * certainty that we are **not** in a DOM transaction.
         *
         * You may want to call this when you know that some deeper aspect of the
         * component's state has changed but `setState` was not called.
         *
         * This will not invoke `shouldComponentUpdate`, but it will invoke
         * `componentWillUpdate` and `componentDidUpdate`.
         *
         * @param {ReactClass} publicInstance The instance that should rerender.
         * @param {?function} callback Called after component is updated.
         * @param {?string} callerName name of the calling function in the public API.
         * @internal
         */
        enqueueForceUpdate: function(y, P, L) {
          g(y, "forceUpdate");
        },
        /**
         * Replaces all of the state. Always use this or `setState` to mutate state.
         * You should treat `this.state` as immutable.
         *
         * There is no guarantee that `this.state` will be immediately updated, so
         * accessing `this.state` after calling this method may return the old value.
         *
         * @param {ReactClass} publicInstance The instance that should rerender.
         * @param {object} completeState Next state.
         * @param {?function} callback Called after component is updated.
         * @param {?string} callerName name of the calling function in the public API.
         * @internal
         */
        enqueueReplaceState: function(y, P, L, W) {
          g(y, "replaceState");
        },
        /**
         * Sets a subset of the state. This only exists because _pendingState is
         * internal. This provides a merging strategy that is not available to deep
         * properties which is confusing. TODO: Expose pendingState or don't use it
         * during the merge.
         *
         * @param {ReactClass} publicInstance The instance that should rerender.
         * @param {object} partialState Next partial state to be merged with state.
         * @param {?function} callback Called after component is updated.
         * @param {?string} Name of the calling function in the public API.
         * @internal
         */
        enqueueSetState: function(y, P, L, W) {
          g(y, "setState");
        }
      }, O = Object.assign, C = {};
      Object.freeze(C);
      function A(y, P, L) {
        this.props = y, this.context = P, this.refs = C, this.updater = L || d;
      }
      A.prototype.isReactComponent = {}, A.prototype.setState = function(y, P) {
        if (typeof y != "object" && typeof y != "function" && y != null)
          throw new Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
        this.updater.enqueueSetState(this, y, P, "setState");
      }, A.prototype.forceUpdate = function(y) {
        this.updater.enqueueForceUpdate(this, y, "forceUpdate");
      };
      {
        var N = {
          isMounted: ["isMounted", "Instead, make sure to clean up subscriptions and pending requests in componentWillUnmount to prevent memory leaks."],
          replaceState: ["replaceState", "Refactor your code to use setState instead (see https://github.com/facebook/react/issues/3236)."]
        }, j = function(y, P) {
          Object.defineProperty(A.prototype, y, {
            get: function() {
              F("%s(...) is deprecated in plain JavaScript React classes. %s", P[0], P[1]);
            }
          });
        };
        for (var _ in N)
          N.hasOwnProperty(_) && j(_, N[_]);
      }
      function T() {
      }
      T.prototype = A.prototype;
      function M(y, P, L) {
        this.props = y, this.context = P, this.refs = C, this.updater = L || d;
      }
      var z = M.prototype = new T();
      z.constructor = M, O(z, A.prototype), z.isPureReactComponent = !0;
      function ee() {
        var y = {
          current: null
        };
        return Object.seal(y), y;
      }
      var k = Array.isArray;
      function oe(y) {
        return k(y);
      }
      function Ce(y) {
        {
          var P = typeof Symbol == "function" && Symbol.toStringTag, L = P && y[Symbol.toStringTag] || y.constructor.name || "Object";
          return L;
        }
      }
      function Ze(y) {
        try {
          return rn(y), !1;
        } catch {
          return !0;
        }
      }
      function rn(y) {
        return "" + y;
      }
      function Xr(y) {
        if (Ze(y))
          return R("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", Ce(y)), rn(y);
      }
      function le(y, P, L) {
        var W = y.displayName;
        if (W)
          return W;
        var K = P.displayName || P.name || "";
        return K !== "" ? L + "(" + K + ")" : L;
      }
      function se(y) {
        return y.displayName || "Context";
      }
      function de(y) {
        if (y == null)
          return null;
        if (typeof y.tag == "number" && R("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."), typeof y == "function")
          return y.displayName || y.name || null;
        if (typeof y == "string")
          return y;
        switch (y) {
          case a:
            return "Fragment";
          case o:
            return "Portal";
          case s:
            return "Profiler";
          case i:
            return "StrictMode";
          case f:
            return "Suspense";
          case p:
            return "SuspenseList";
        }
        if (typeof y == "object")
          switch (y.$$typeof) {
            case c:
              var P = y;
              return se(P) + ".Consumer";
            case l:
              var L = y;
              return se(L._context) + ".Provider";
            case u:
              return le(y, y.render, "ForwardRef");
            case v:
              var W = y.displayName || null;
              return W !== null ? W : de(y.type) || "Memo";
            case x: {
              var K = y, ne = K._payload, re = K._init;
              try {
                return de(re(ne));
              } catch {
                return null;
              }
            }
          }
        return null;
      }
      var rt = Object.prototype.hasOwnProperty, Ct = {
        key: !0,
        ref: !0,
        __self: !0,
        __source: !0
      }, ue, je, Re;
      Re = {};
      function ze(y) {
        if (rt.call(y, "ref")) {
          var P = Object.getOwnPropertyDescriptor(y, "ref").get;
          if (P && P.isReactWarning)
            return !1;
        }
        return y.ref !== void 0;
      }
      function Ot(y) {
        if (rt.call(y, "key")) {
          var P = Object.getOwnPropertyDescriptor(y, "key").get;
          if (P && P.isReactWarning)
            return !1;
        }
        return y.key !== void 0;
      }
      function Kr(y, P) {
        var L = function() {
          ue || (ue = !0, R("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", P));
        };
        L.isReactWarning = !0, Object.defineProperty(y, "key", {
          get: L,
          configurable: !0
        });
      }
      function xo(y, P) {
        var L = function() {
          je || (je = !0, R("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", P));
        };
        L.isReactWarning = !0, Object.defineProperty(y, "ref", {
          get: L,
          configurable: !0
        });
      }
      function Hn(y) {
        if (typeof y.ref == "string" && U.current && y.__self && U.current.stateNode !== y.__self) {
          var P = de(U.current.type);
          Re[P] || (R('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', P, y.ref), Re[P] = !0);
        }
      }
      var Qr = function(y, P, L, W, K, ne, re) {
        var ae = {
          // This tag allows us to uniquely identify this as a React Element
          $$typeof: n,
          // Built-in properties that belong on the element
          type: y,
          key: P,
          ref: L,
          props: re,
          // Record the component responsible for creating this element.
          _owner: ne
        };
        return ae._store = {}, Object.defineProperty(ae._store, "validated", {
          configurable: !1,
          enumerable: !1,
          writable: !0,
          value: !1
        }), Object.defineProperty(ae, "_self", {
          configurable: !1,
          enumerable: !1,
          writable: !1,
          value: W
        }), Object.defineProperty(ae, "_source", {
          configurable: !1,
          enumerable: !1,
          writable: !1,
          value: K
        }), Object.freeze && (Object.freeze(ae.props), Object.freeze(ae)), ae;
      };
      function wo(y, P, L) {
        var W, K = {}, ne = null, re = null, ae = null, fe = null;
        if (P != null) {
          ze(P) && (re = P.ref, Hn(P)), Ot(P) && (Xr(P.key), ne = "" + P.key), ae = P.__self === void 0 ? null : P.__self, fe = P.__source === void 0 ? null : P.__source;
          for (W in P)
            rt.call(P, W) && !Ct.hasOwnProperty(W) && (K[W] = P[W]);
        }
        var Ae = arguments.length - 2;
        if (Ae === 1)
          K.children = L;
        else if (Ae > 1) {
          for (var Ie = Array(Ae), Te = 0; Te < Ae; Te++)
            Ie[Te] = arguments[Te + 2];
          Object.freeze && Object.freeze(Ie), K.children = Ie;
        }
        if (y && y.defaultProps) {
          var Me = y.defaultProps;
          for (W in Me)
            K[W] === void 0 && (K[W] = Me[W]);
        }
        if (ne || re) {
          var Fe = typeof y == "function" ? y.displayName || y.name || "Unknown" : y;
          ne && Kr(K, Fe), re && xo(K, Fe);
        }
        return Qr(y, ne, re, ae, fe, U.current, K);
      }
      function Ht(y, P) {
        var L = Qr(y.type, P, y.ref, y._self, y._source, y._owner, y.props);
        return L;
      }
      function lo(y, P, L) {
        if (y == null)
          throw new Error("React.cloneElement(...): The argument must be a React element, but you passed " + y + ".");
        var W, K = O({}, y.props), ne = y.key, re = y.ref, ae = y._self, fe = y._source, Ae = y._owner;
        if (P != null) {
          ze(P) && (re = P.ref, Ae = U.current), Ot(P) && (Xr(P.key), ne = "" + P.key);
          var Ie;
          y.type && y.type.defaultProps && (Ie = y.type.defaultProps);
          for (W in P)
            rt.call(P, W) && !Ct.hasOwnProperty(W) && (P[W] === void 0 && Ie !== void 0 ? K[W] = Ie[W] : K[W] = P[W]);
        }
        var Te = arguments.length - 2;
        if (Te === 1)
          K.children = L;
        else if (Te > 1) {
          for (var Me = Array(Te), Fe = 0; Fe < Te; Fe++)
            Me[Fe] = arguments[Fe + 2];
          K.children = Me;
        }
        return Qr(y.type, ne, re, ae, fe, Ae, K);
      }
      function br(y) {
        return typeof y == "object" && y !== null && y.$$typeof === n;
      }
      var co = ".", za = ":";
      function lp(y) {
        var P = /[=:]/g, L = {
          "=": "=0",
          ":": "=2"
        }, W = y.replace(P, function(K) {
          return L[K];
        });
        return "$" + W;
      }
      var Xi = !1, cp = /\/+/g;
      function Ki(y) {
        return y.replace(cp, "$&/");
      }
      function ko(y, P) {
        return typeof y == "object" && y !== null && y.key != null ? (Xr(y.key), lp("" + y.key)) : P.toString(36);
      }
      function Sn(y, P, L, W, K) {
        var ne = typeof y;
        (ne === "undefined" || ne === "boolean") && (y = null);
        var re = !1;
        if (y === null)
          re = !0;
        else
          switch (ne) {
            case "string":
            case "number":
              re = !0;
              break;
            case "object":
              switch (y.$$typeof) {
                case n:
                case o:
                  re = !0;
              }
          }
        if (re) {
          var ae = y, fe = K(ae), Ae = W === "" ? co + ko(ae, 0) : W;
          if (oe(fe)) {
            var Ie = "";
            Ae != null && (Ie = Ki(Ae) + "/"), Sn(fe, P, Ie, "", function(tm) {
              return tm;
            });
          } else fe != null && (br(fe) && (fe.key && (!ae || ae.key !== fe.key) && Xr(fe.key), fe = Ht(
            fe,
            // Keep both the (mapped) and old keys if they differ, just as
            // traverseAllChildren used to do for objects as children
            L + // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key
            (fe.key && (!ae || ae.key !== fe.key) ? (
              // $FlowFixMe Flow incorrectly thinks existing element's key can be a number
              // eslint-disable-next-line react-internal/safe-string-coercion
              Ki("" + fe.key) + "/"
            ) : "") + Ae
          )), P.push(fe));
          return 1;
        }
        var Te, Me, Fe = 0, Je = W === "" ? co : W + za;
        if (oe(y))
          for (var Tn = 0; Tn < y.length; Tn++)
            Te = y[Tn], Me = Je + ko(Te, Tn), Fe += Sn(Te, P, L, Me, K);
        else {
          var No = $(y);
          if (typeof No == "function") {
            var ws = y;
            No === ws.entries && (Xi || F("Using Maps as children is not supported. Use an array of keyed ReactElements instead."), Xi = !0);
            for (var Zp = No.call(ws), ks, em = 0; !(ks = Zp.next()).done; )
              Te = ks.value, Me = Je + ko(Te, em++), Fe += Sn(Te, P, L, Me, K);
          } else if (ne === "object") {
            var $s = String(y);
            throw new Error("Objects are not valid as a React child (found: " + ($s === "[object Object]" ? "object with keys {" + Object.keys(y).join(", ") + "}" : $s) + "). If you meant to render a collection of children, use an array instead.");
          }
        }
        return Fe;
      }
      function Pn(y, P, L) {
        if (y == null)
          return y;
        var W = [], K = 0;
        return Sn(y, W, "", "", function(ne) {
          return P.call(L, ne, K++);
        }), W;
      }
      function up(y) {
        var P = 0;
        return Pn(y, function() {
          P++;
        }), P;
      }
      function fp(y, P, L) {
        Pn(y, function() {
          P.apply(this, arguments);
        }, L);
      }
      function dp(y) {
        return Pn(y, function(P) {
          return P;
        }) || [];
      }
      function pp(y) {
        if (!br(y))
          throw new Error("React.Children.only expected to receive a single React element child.");
        return y;
      }
      function mp(y) {
        var P = {
          $$typeof: c,
          // As a workaround to support multiple concurrent renderers, we categorize
          // some renderers as primary and others as secondary. We only expect
          // there to be two concurrent renderers at most: React Native (primary) and
          // Fabric (secondary); React DOM (primary) and React ART (secondary).
          // Secondary renderers store their context values on separate fields.
          _currentValue: y,
          _currentValue2: y,
          // Used to track how many concurrent renderers this context currently
          // supports within in a single renderer. Such as parallel server rendering.
          _threadCount: 0,
          // These are circular
          Provider: null,
          Consumer: null,
          // Add these to use same hidden class in VM as ServerContext
          _defaultValue: null,
          _globalName: null
        };
        P.Provider = {
          $$typeof: l,
          _context: P
        };
        var L = !1, W = !1, K = !1;
        {
          var ne = {
            $$typeof: c,
            _context: P
          };
          Object.defineProperties(ne, {
            Provider: {
              get: function() {
                return W || (W = !0, R("Rendering <Context.Consumer.Provider> is not supported and will be removed in a future major release. Did you mean to render <Context.Provider> instead?")), P.Provider;
              },
              set: function(re) {
                P.Provider = re;
              }
            },
            _currentValue: {
              get: function() {
                return P._currentValue;
              },
              set: function(re) {
                P._currentValue = re;
              }
            },
            _currentValue2: {
              get: function() {
                return P._currentValue2;
              },
              set: function(re) {
                P._currentValue2 = re;
              }
            },
            _threadCount: {
              get: function() {
                return P._threadCount;
              },
              set: function(re) {
                P._threadCount = re;
              }
            },
            Consumer: {
              get: function() {
                return L || (L = !0, R("Rendering <Context.Consumer.Consumer> is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?")), P.Consumer;
              }
            },
            displayName: {
              get: function() {
                return P.displayName;
              },
              set: function(re) {
                K || (F("Setting `displayName` on Context.Consumer has no effect. You should set it directly on the context with Context.displayName = '%s'.", re), K = !0);
              }
            }
          }), P.Consumer = ne;
        }
        return P._currentRenderer = null, P._currentRenderer2 = null, P;
      }
      var on = -1, $o = 0, Ji = 1, gp = 2;
      function hp(y) {
        if (y._status === on) {
          var P = y._result, L = P();
          if (L.then(function(ne) {
            if (y._status === $o || y._status === on) {
              var re = y;
              re._status = Ji, re._result = ne;
            }
          }, function(ne) {
            if (y._status === $o || y._status === on) {
              var re = y;
              re._status = gp, re._result = ne;
            }
          }), y._status === on) {
            var W = y;
            W._status = $o, W._result = L;
          }
        }
        if (y._status === Ji) {
          var K = y._result;
          return K === void 0 && R(`lazy: Expected the result of a dynamic import() call. Instead received: %s

Your code should look like: 
  const MyComponent = lazy(() => import('./MyComponent'))

Did you accidentally put curly braces around the import?`, K), "default" in K || R(`lazy: Expected the result of a dynamic import() call. Instead received: %s

Your code should look like: 
  const MyComponent = lazy(() => import('./MyComponent'))`, K), K.default;
        } else
          throw y._result;
      }
      function bp(y) {
        var P = {
          // We use these fields to store the result.
          _status: on,
          _result: y
        }, L = {
          $$typeof: x,
          _payload: P,
          _init: hp
        };
        {
          var W, K;
          Object.defineProperties(L, {
            defaultProps: {
              configurable: !0,
              get: function() {
                return W;
              },
              set: function(ne) {
                R("React.lazy(...): It is not supported to assign `defaultProps` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it."), W = ne, Object.defineProperty(L, "defaultProps", {
                  enumerable: !0
                });
              }
            },
            propTypes: {
              configurable: !0,
              get: function() {
                return K;
              },
              set: function(ne) {
                R("React.lazy(...): It is not supported to assign `propTypes` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it."), K = ne, Object.defineProperty(L, "propTypes", {
                  enumerable: !0
                });
              }
            }
          });
        }
        return L;
      }
      function yp(y) {
        y != null && y.$$typeof === v ? R("forwardRef requires a render function but received a `memo` component. Instead of forwardRef(memo(...)), use memo(forwardRef(...)).") : typeof y != "function" ? R("forwardRef requires a render function but was given %s.", y === null ? "null" : typeof y) : y.length !== 0 && y.length !== 2 && R("forwardRef render functions accept exactly two parameters: props and ref. %s", y.length === 1 ? "Did you forget to use the ref parameter?" : "Any additional parameter will be undefined."), y != null && (y.defaultProps != null || y.propTypes != null) && R("forwardRef render functions do not support propTypes or defaultProps. Did you accidentally pass a React component?");
        var P = {
          $$typeof: u,
          render: y
        };
        {
          var L;
          Object.defineProperty(P, "displayName", {
            enumerable: !1,
            configurable: !0,
            get: function() {
              return L;
            },
            set: function(W) {
              L = W, !y.name && !y.displayName && (y.displayName = W);
            }
          });
        }
        return P;
      }
      var Qi;
      Qi = Symbol.for("react.module.reference");
      function Zi(y) {
        return !!(typeof y == "string" || typeof y == "function" || y === a || y === s || V || y === i || y === f || y === p || te || y === b || X || J || I || typeof y == "object" && y !== null && (y.$$typeof === x || y.$$typeof === v || y.$$typeof === l || y.$$typeof === c || y.$$typeof === u || // This needs to include all possible module reference object
        // types supported by any Flight configuration anywhere since
        // we don't know which Flight build this will end up being used
        // with.
        y.$$typeof === Qi || y.getModuleId !== void 0));
      }
      function vp(y, P) {
        Zi(y) || R("memo: The first argument must be a component. Instead received: %s", y === null ? "null" : typeof y);
        var L = {
          $$typeof: v,
          type: y,
          compare: P === void 0 ? null : P
        };
        {
          var W;
          Object.defineProperty(L, "displayName", {
            enumerable: !1,
            configurable: !0,
            get: function() {
              return W;
            },
            set: function(K) {
              W = K, !y.name && !y.displayName && (y.displayName = K);
            }
          });
        }
        return L;
      }
      function tt() {
        var y = E.current;
        return y === null && R(`Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:
1. You might have mismatching versions of React and the renderer (such as React DOM)
2. You might be breaking the Rules of Hooks
3. You might have more than one copy of React in the same app
See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.`), y;
      }
      function xp(y) {
        var P = tt();
        if (y._context !== void 0) {
          var L = y._context;
          L.Consumer === y ? R("Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be removed in a future major release. Did you mean to call useContext(Context) instead?") : L.Provider === y && R("Calling useContext(Context.Provider) is not supported. Did you mean to call useContext(Context) instead?");
        }
        return P.useContext(y);
      }
      function wp(y) {
        var P = tt();
        return P.useState(y);
      }
      function kp(y, P, L) {
        var W = tt();
        return W.useReducer(y, P, L);
      }
      function $p(y) {
        var P = tt();
        return P.useRef(y);
      }
      function Op(y, P) {
        var L = tt();
        return L.useEffect(y, P);
      }
      function Ep(y, P) {
        var L = tt();
        return L.useInsertionEffect(y, P);
      }
      function Sp(y, P) {
        var L = tt();
        return L.useLayoutEffect(y, P);
      }
      function Pp(y, P) {
        var L = tt();
        return L.useCallback(y, P);
      }
      function Cp(y, P) {
        var L = tt();
        return L.useMemo(y, P);
      }
      function Ap(y, P, L) {
        var W = tt();
        return W.useImperativeHandle(y, P, L);
      }
      function _p(y, P) {
        {
          var L = tt();
          return L.useDebugValue(y, P);
        }
      }
      function Np() {
        var y = tt();
        return y.useTransition();
      }
      function jp(y) {
        var P = tt();
        return P.useDeferredValue(y);
      }
      function Ip() {
        var y = tt();
        return y.useId();
      }
      function Tp(y, P, L) {
        var W = tt();
        return W.useSyncExternalStore(y, P, L);
      }
      var an = 0, es, ts, rs, ns, os, as, is;
      function ss() {
      }
      ss.__reactDisabledLog = !0;
      function Mp() {
        {
          if (an === 0) {
            es = console.log, ts = console.info, rs = console.warn, ns = console.error, os = console.group, as = console.groupCollapsed, is = console.groupEnd;
            var y = {
              configurable: !0,
              enumerable: !0,
              value: ss,
              writable: !0
            };
            Object.defineProperties(console, {
              info: y,
              log: y,
              warn: y,
              error: y,
              group: y,
              groupCollapsed: y,
              groupEnd: y
            });
          }
          an++;
        }
      }
      function Rp() {
        {
          if (an--, an === 0) {
            var y = {
              configurable: !0,
              enumerable: !0,
              writable: !0
            };
            Object.defineProperties(console, {
              log: O({}, y, {
                value: es
              }),
              info: O({}, y, {
                value: ts
              }),
              warn: O({}, y, {
                value: rs
              }),
              error: O({}, y, {
                value: ns
              }),
              group: O({}, y, {
                value: os
              }),
              groupCollapsed: O({}, y, {
                value: as
              }),
              groupEnd: O({}, y, {
                value: is
              })
            });
          }
          an < 0 && R("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
        }
      }
      var Oo = D.ReactCurrentDispatcher, Eo;
      function Cn(y, P, L) {
        {
          if (Eo === void 0)
            try {
              throw Error();
            } catch (K) {
              var W = K.stack.trim().match(/\n( *(at )?)/);
              Eo = W && W[1] || "";
            }
          return `
` + Eo + y;
        }
      }
      var So = !1, An;
      {
        var zp = typeof WeakMap == "function" ? WeakMap : Map;
        An = new zp();
      }
      function ls(y, P) {
        if (!y || So)
          return "";
        {
          var L = An.get(y);
          if (L !== void 0)
            return L;
        }
        var W;
        So = !0;
        var K = Error.prepareStackTrace;
        Error.prepareStackTrace = void 0;
        var ne;
        ne = Oo.current, Oo.current = null, Mp();
        try {
          if (P) {
            var re = function() {
              throw Error();
            };
            if (Object.defineProperty(re.prototype, "props", {
              set: function() {
                throw Error();
              }
            }), typeof Reflect == "object" && Reflect.construct) {
              try {
                Reflect.construct(re, []);
              } catch (Je) {
                W = Je;
              }
              Reflect.construct(y, [], re);
            } else {
              try {
                re.call();
              } catch (Je) {
                W = Je;
              }
              y.call(re.prototype);
            }
          } else {
            try {
              throw Error();
            } catch (Je) {
              W = Je;
            }
            y();
          }
        } catch (Je) {
          if (Je && W && typeof Je.stack == "string") {
            for (var ae = Je.stack.split(`
`), fe = W.stack.split(`
`), Ae = ae.length - 1, Ie = fe.length - 1; Ae >= 1 && Ie >= 0 && ae[Ae] !== fe[Ie]; )
              Ie--;
            for (; Ae >= 1 && Ie >= 0; Ae--, Ie--)
              if (ae[Ae] !== fe[Ie]) {
                if (Ae !== 1 || Ie !== 1)
                  do
                    if (Ae--, Ie--, Ie < 0 || ae[Ae] !== fe[Ie]) {
                      var Te = `
` + ae[Ae].replace(" at new ", " at ");
                      return y.displayName && Te.includes("<anonymous>") && (Te = Te.replace("<anonymous>", y.displayName)), typeof y == "function" && An.set(y, Te), Te;
                    }
                  while (Ae >= 1 && Ie >= 0);
                break;
              }
          }
        } finally {
          So = !1, Oo.current = ne, Rp(), Error.prepareStackTrace = K;
        }
        var Me = y ? y.displayName || y.name : "", Fe = Me ? Cn(Me) : "";
        return typeof y == "function" && An.set(y, Fe), Fe;
      }
      function Fp(y, P, L) {
        return ls(y, !1);
      }
      function Dp(y) {
        var P = y.prototype;
        return !!(P && P.isReactComponent);
      }
      function _n(y, P, L) {
        if (y == null)
          return "";
        if (typeof y == "function")
          return ls(y, Dp(y));
        if (typeof y == "string")
          return Cn(y);
        switch (y) {
          case f:
            return Cn("Suspense");
          case p:
            return Cn("SuspenseList");
        }
        if (typeof y == "object")
          switch (y.$$typeof) {
            case u:
              return Fp(y.render);
            case v:
              return _n(y.type, P, L);
            case x: {
              var W = y, K = W._payload, ne = W._init;
              try {
                return _n(ne(K), P, L);
              } catch {
              }
            }
          }
        return "";
      }
      var cs = {}, us = D.ReactDebugCurrentFrame;
      function Nn(y) {
        if (y) {
          var P = y._owner, L = _n(y.type, y._source, P ? P.type : null);
          us.setExtraStackFrame(L);
        } else
          us.setExtraStackFrame(null);
      }
      function Lp(y, P, L, W, K) {
        {
          var ne = Function.call.bind(rt);
          for (var re in y)
            if (ne(y, re)) {
              var ae = void 0;
              try {
                if (typeof y[re] != "function") {
                  var fe = Error((W || "React class") + ": " + L + " type `" + re + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof y[re] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                  throw fe.name = "Invariant Violation", fe;
                }
                ae = y[re](P, re, W, L, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
              } catch (Ae) {
                ae = Ae;
              }
              ae && !(ae instanceof Error) && (Nn(K), R("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", W || "React class", L, re, typeof ae), Nn(null)), ae instanceof Error && !(ae.message in cs) && (cs[ae.message] = !0, Nn(K), R("Failed %s type: %s", L, ae.message), Nn(null));
            }
        }
      }
      function Zr(y) {
        if (y) {
          var P = y._owner, L = _n(y.type, y._source, P ? P.type : null);
          Z(L);
        } else
          Z(null);
      }
      var Po;
      Po = !1;
      function fs() {
        if (U.current) {
          var y = de(U.current.type);
          if (y)
            return `

Check the render method of \`` + y + "`.";
        }
        return "";
      }
      function Vp(y) {
        if (y !== void 0) {
          var P = y.fileName.replace(/^.*[\\\/]/, ""), L = y.lineNumber;
          return `

Check your code at ` + P + ":" + L + ".";
        }
        return "";
      }
      function Wp(y) {
        return y != null ? Vp(y.__source) : "";
      }
      var ds = {};
      function Up(y) {
        var P = fs();
        if (!P) {
          var L = typeof y == "string" ? y : y.displayName || y.name;
          L && (P = `

Check the top-level render call using <` + L + ">.");
        }
        return P;
      }
      function ps(y, P) {
        if (!(!y._store || y._store.validated || y.key != null)) {
          y._store.validated = !0;
          var L = Up(P);
          if (!ds[L]) {
            ds[L] = !0;
            var W = "";
            y && y._owner && y._owner !== U.current && (W = " It was passed a child from " + de(y._owner.type) + "."), Zr(y), R('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', L, W), Zr(null);
          }
        }
      }
      function ms(y, P) {
        if (typeof y == "object") {
          if (oe(y))
            for (var L = 0; L < y.length; L++) {
              var W = y[L];
              br(W) && ps(W, P);
            }
          else if (br(y))
            y._store && (y._store.validated = !0);
          else if (y) {
            var K = $(y);
            if (typeof K == "function" && K !== y.entries)
              for (var ne = K.call(y), re; !(re = ne.next()).done; )
                br(re.value) && ps(re.value, P);
          }
        }
      }
      function gs(y) {
        {
          var P = y.type;
          if (P == null || typeof P == "string")
            return;
          var L;
          if (typeof P == "function")
            L = P.propTypes;
          else if (typeof P == "object" && (P.$$typeof === u || // Note: Memo only checks outer props here.
          // Inner props are checked in the reconciler.
          P.$$typeof === v))
            L = P.propTypes;
          else
            return;
          if (L) {
            var W = de(P);
            Lp(L, y.props, "prop", W, y);
          } else if (P.PropTypes !== void 0 && !Po) {
            Po = !0;
            var K = de(P);
            R("Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?", K || "Unknown");
          }
          typeof P.getDefaultProps == "function" && !P.getDefaultProps.isReactClassApproved && R("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
        }
      }
      function Yp(y) {
        {
          for (var P = Object.keys(y.props), L = 0; L < P.length; L++) {
            var W = P[L];
            if (W !== "children" && W !== "key") {
              Zr(y), R("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", W), Zr(null);
              break;
            }
          }
          y.ref !== null && (Zr(y), R("Invalid attribute `ref` supplied to `React.Fragment`."), Zr(null));
        }
      }
      function hs(y, P, L) {
        var W = Zi(y);
        if (!W) {
          var K = "";
          (y === void 0 || typeof y == "object" && y !== null && Object.keys(y).length === 0) && (K += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.");
          var ne = Wp(P);
          ne ? K += ne : K += fs();
          var re;
          y === null ? re = "null" : oe(y) ? re = "array" : y !== void 0 && y.$$typeof === n ? (re = "<" + (de(y.type) || "Unknown") + " />", K = " Did you accidentally export a JSX literal instead of a component?") : re = typeof y, R("React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", re, K);
        }
        var ae = wo.apply(this, arguments);
        if (ae == null)
          return ae;
        if (W)
          for (var fe = 2; fe < arguments.length; fe++)
            ms(arguments[fe], y);
        return y === a ? Yp(ae) : gs(ae), ae;
      }
      var bs = !1;
      function Hp(y) {
        var P = hs.bind(null, y);
        return P.type = y, bs || (bs = !0, F("React.createFactory() is deprecated and will be removed in a future major release. Consider using JSX or use React.createElement() directly instead.")), Object.defineProperty(P, "type", {
          enumerable: !1,
          get: function() {
            return F("Factory.type is deprecated. Access the class directly before passing it to createFactory."), Object.defineProperty(this, "type", {
              value: y
            }), y;
          }
        }), P;
      }
      function Gp(y, P, L) {
        for (var W = lo.apply(this, arguments), K = 2; K < arguments.length; K++)
          ms(arguments[K], W.type);
        return gs(W), W;
      }
      function qp(y, P) {
        var L = S.transition;
        S.transition = {};
        var W = S.transition;
        S.transition._updatedFibers = /* @__PURE__ */ new Set();
        try {
          y();
        } finally {
          if (S.transition = L, L === null && W._updatedFibers) {
            var K = W._updatedFibers.size;
            K > 10 && F("Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table."), W._updatedFibers.clear();
          }
        }
      }
      var ys = !1, jn = null;
      function Bp(y) {
        if (jn === null)
          try {
            var P = ("require" + Math.random()).slice(0, 7), L = e && e[P];
            jn = L.call(e, "timers").setImmediate;
          } catch {
            jn = function(W) {
              ys === !1 && (ys = !0, typeof MessageChannel > "u" && R("This browser does not have a MessageChannel implementation, so enqueuing tasks via await act(async () => ...) will fail. Please file an issue at https://github.com/facebook/react/issues if you encounter this warning."));
              var K = new MessageChannel();
              K.port1.onmessage = W, K.port2.postMessage(void 0);
            };
          }
        return jn(y);
      }
      var en = 0, vs = !1;
      function xs(y) {
        {
          var P = en;
          en++, h.current === null && (h.current = []);
          var L = h.isBatchingLegacy, W;
          try {
            if (h.isBatchingLegacy = !0, W = y(), !L && h.didScheduleLegacyUpdate) {
              var K = h.current;
              K !== null && (h.didScheduleLegacyUpdate = !1, _o(K));
            }
          } catch (Me) {
            throw In(P), Me;
          } finally {
            h.isBatchingLegacy = L;
          }
          if (W !== null && typeof W == "object" && typeof W.then == "function") {
            var ne = W, re = !1, ae = {
              then: function(Me, Fe) {
                re = !0, ne.then(function(Je) {
                  In(P), en === 0 ? Co(Je, Me, Fe) : Me(Je);
                }, function(Je) {
                  In(P), Fe(Je);
                });
              }
            };
            return !vs && typeof Promise < "u" && Promise.resolve().then(function() {
            }).then(function() {
              re || (vs = !0, R("You called act(async () => ...) without await. This could lead to unexpected testing behaviour, interleaving multiple act calls and mixing their scopes. You should - await act(async () => ...);"));
            }), ae;
          } else {
            var fe = W;
            if (In(P), en === 0) {
              var Ae = h.current;
              Ae !== null && (_o(Ae), h.current = null);
              var Ie = {
                then: function(Me, Fe) {
                  h.current === null ? (h.current = [], Co(fe, Me, Fe)) : Me(fe);
                }
              };
              return Ie;
            } else {
              var Te = {
                then: function(Me, Fe) {
                  Me(fe);
                }
              };
              return Te;
            }
          }
        }
      }
      function In(y) {
        y !== en - 1 && R("You seem to have overlapping act() calls, this is not supported. Be sure to await previous act() calls before making a new one. "), en = y;
      }
      function Co(y, P, L) {
        {
          var W = h.current;
          if (W !== null)
            try {
              _o(W), Bp(function() {
                W.length === 0 ? (h.current = null, P(y)) : Co(y, P, L);
              });
            } catch (K) {
              L(K);
            }
          else
            P(y);
        }
      }
      var Ao = !1;
      function _o(y) {
        if (!Ao) {
          Ao = !0;
          var P = 0;
          try {
            for (; P < y.length; P++) {
              var L = y[P];
              do
                L = L(!0);
              while (L !== null);
            }
            y.length = 0;
          } catch (W) {
            throw y = y.slice(P + 1), W;
          } finally {
            Ao = !1;
          }
        }
      }
      var Xp = hs, Kp = Gp, Jp = Hp, Qp = {
        map: Pn,
        forEach: fp,
        count: up,
        toArray: dp,
        only: pp
      };
      t.Children = Qp, t.Component = A, t.Fragment = a, t.Profiler = s, t.PureComponent = M, t.StrictMode = i, t.Suspense = f, t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = D, t.act = xs, t.cloneElement = Kp, t.createContext = mp, t.createElement = Xp, t.createFactory = Jp, t.createRef = ee, t.forwardRef = yp, t.isValidElement = br, t.lazy = bp, t.memo = vp, t.startTransition = qp, t.unstable_act = xs, t.useCallback = Pp, t.useContext = xp, t.useDebugValue = _p, t.useDeferredValue = jp, t.useEffect = Op, t.useId = Ip, t.useImperativeHandle = Ap, t.useInsertionEffect = Ep, t.useLayoutEffect = Sp, t.useMemo = Cp, t.useReducer = kp, t.useRef = $p, t.useState = wp, t.useSyncExternalStore = Tp, t.useTransition = Np, t.version = r, typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
    }();
  }(av, av.exports)), av.exports;
}
var E7;
function Tke() {
  return E7 || (E7 = 1, process.env.NODE_ENV === "production" ? F2.exports = jke() : F2.exports = Ike()), F2.exports;
}
var Mke = Tke();
const Rke = /* @__PURE__ */ Nke(Mke), zke = {
  [Qe.BlackForestLabs]: "/resources/images/services/blackforestlabs.svg",
  [Qe.Kling]: "/resources/images/services/kling.svg",
  [Qe.Midjourney]: "/resources/images/services/midjourney.svg",
  [Qe.OpenAi]: "/resources/images/services/openai.svg",
  [Qe.Bytedance]: "/resources/images/services/bytedance.svg",
  [Qe.Google]: "/resources/images/services/google.svg",
  [Qe.Recraft]: "/resources/images/services/recraft.svg",
  [Qe.Tencent]: "/resources/images/services/tencent.svg",
  [Qe.Krea]: "/resources/images/services/krea.svg",
  [Qe.Fal]: "/resources/images/services/fal.svg",
  [Qe.Replicate]: "/resources/images/services/replicate.svg",
  [Qe.TensorArt]: "/resources/images/services/tensorart.svg",
  [Qe.OpenArt]: "/resources/images/services/openart.svg",
  [Qe.Higgsfield]: "/resources/images/services/higgsfield.svg",
  [Qe.Alibaba]: "/resources/images/services/alibaba.svg",
  [Qe.Vidu]: "/resources/images/services/vidu.svg",
  [Qe.ArtCraft]: "/resources/images/services/artcraft.svg"
}, Fke = "/resources/images/services/generic.svg", Dke = (e) => zke[e], Lke = (e, t = "h-4 w-4 invert") => {
  const r = Dke(e) ?? Fke;
  return Rke.createElement("img", {
    src: r,
    alt: `${e} logo`,
    className: t
  });
}, Vke = {
  flux_1_dev: Qe.BlackForestLabs,
  flux_1_schnell: Qe.BlackForestLabs,
  flux_pro_1p1: Qe.BlackForestLabs,
  flux_pro_1p1_ultra: Qe.BlackForestLabs,
  gpt_image_1: Qe.OpenAi,
  kling_1p6_pro: Qe.Kling,
  kling_2p1_pro: Qe.Kling,
  kling_2p1_master: Qe.Kling,
  seedance_1p0_lite: Qe.Bytedance,
  veo_2: Qe.Google,
  recraft_3: Qe.Recraft,
  hunyuan_3d: Qe.Tencent,
  midjourney: Qe.Midjourney,
  midjourney_v6: Qe.Midjourney,
  midjourney_v6p1: Qe.Midjourney,
  midjourney_v6p1_raw: Qe.Midjourney,
  midjourney_v7: Qe.Midjourney,
  midjourney_v7_raw: Qe.Midjourney,
  midjourney_v7_draft_raw: Qe.Midjourney
}, Wke = (e) => {
  const t = Vke[e];
  return t ? Lke(t, "h-4 w-4 invert") : null;
}, Uke = (e) => ({
  flux_1_dev: "Flux 1 Dev",
  flux_1_schnell: "Flux 1 Schnell",
  flux_pro_1p1: "Flux Pro 1.1",
  flux_pro_1p1_ultra: "Flux Pro 1.1 Ultra",
  gpt_image_1: "GPT Image 1",
  kling_1p6_pro: "Kling 1.6 Pro",
  kling_2p1_pro: "Kling 2.1 Pro",
  kling_2p1_master: "Kling 2.1 Master",
  seedance_1p0_lite: "Seedance 1.0 Lite",
  veo_2: "Veo 2",
  recraft_3: "Recraft 3",
  hunyuan_3d_2p0: "Hunyuan 3D 2.0",
  hunyuan_3d_2p1: "Hunyuan 3D 2.1",
  hunyuan_3d: "Hunyuan 3D",
  flux_pro_kontext_max: "Flux Pro Kontext Max",
  // Catch-all bucket for Midjourney.
  midjourney: "Midjourney",
  // Specific Midjourney models.
  midjourney_v6: "Midjourney V6",
  midjourney_v6p1: "Midjourney V6.1",
  midjourney_v6p1_raw: "Midjourney V6.1 (Raw)",
  midjourney_v7: "Midjourney V7",
  midjourney_v7_raw: "Midjourney V7 (Raw)",
  midjourney_v7_draft_raw: "Midjourney V7 (Draft Raw)"
  // TODO: add more models here - BFlat
})[e] || e, Yke = (e) => ({
  artcraft: "ArtCraft",
  fal: "FAL",
  midjourney: "Midjourney",
  sora: "Sora"
})[e] || e;
var Pl = /* @__PURE__ */ ((e) => (e.InstructiveEdit = "instructiveEdit", e.MaskedInpainting = "maskedInpainting", e.NonMaskedInpainting = "nonMaskedInpainting", e))(Pl || {});
const Mn = Qe, Hke = {
  maxGenerationCount: 1,
  defaultGenerationCount: 1
}, Rn = (e) => ({
  label: e.label ?? e.info.name,
  description: e.description,
  badges: e.badges,
  capabilities: e.capabilities ?? Hke,
  tags: e.tags ?? [],
  ...e
});
Rn({
  id: "midjourney",
  category: "image",
  info: {
    name: "Midjourney",
    tauri_id: "midjourney",
    creator: Mn.Midjourney
  },
  description: "Incredible style and quality",
  badges: [{ label: "15 sec." }],
  capabilities: { maxGenerationCount: 4, defaultGenerationCount: 4 }
}), Rn({
  id: "flux_pro_1_1_ultra",
  category: "image",
  info: {
    name: "Flux Pro 1.1 Ultra",
    tauri_id: "flux_pro_11_ultra",
    creator: Mn.BlackForestLabs
  },
  description: "High quality model",
  badges: [{ label: "15 sec." }],
  capabilities: { maxGenerationCount: 4, defaultGenerationCount: 4 }
}), Rn({
  id: "flux_pro_1_1",
  category: "image",
  info: {
    name: "Flux Pro 1.1",
    tauri_id: "flux_pro_11",
    creator: Mn.BlackForestLabs
  },
  description: "High quality model",
  badges: [{ label: "15 sec." }],
  capabilities: { maxGenerationCount: 4, defaultGenerationCount: 4 }
}), Rn({
  id: "flux_1_dev",
  category: "image",
  info: {
    name: "Flux 1 Dev",
    tauri_id: "flux_1_dev",
    creator: Mn.BlackForestLabs
  },
  description: "High quality model",
  badges: [{ label: "15 sec." }],
  capabilities: { maxGenerationCount: 4, defaultGenerationCount: 4 }
}), Rn({
  id: "flux_1_schnell",
  category: "image",
  info: {
    name: "Flux 1 Schnell",
    tauri_id: "flux_1_schnell",
    creator: Mn.BlackForestLabs
  },
  description: "High quality model",
  badges: [{ label: "15 sec." }],
  capabilities: { maxGenerationCount: 4, defaultGenerationCount: 4 }
}), Rn({
  id: "gpt_image_1",
  category: "image",
  info: {
    name: "GPT Image 1 (GPT-4o)",
    tauri_id: "gpt_image_1",
    creator: Mn.OpenAi
  },
  description: "Slow, ultra instructive model",
  badges: [{ label: "45 sec." }],
  capabilities: { maxGenerationCount: 1 },
  tags: ["instructiveEdit"]
}), Rn({
  id: "flux_pro_kontext_max",
  category: "image",
  info: {
    name: "Flux Pro Kontext Max",
    tauri_id: "flux_pro_kontext_max",
    creator: Mn.BlackForestLabs
  },
  description: "Fast and high-quality model",
  badges: [{ label: "20 sec." }],
  capabilities: {
    maxGenerationCount: 4
  },
  tags: [Pl.InstructiveEdit, Pl.NonMaskedInpainting]
}), Rn({
  id: "flux_pro_inpaint",
  category: "image",
  info: {
    name: "Flux Pro 1 (Inpainting)",
    tauri_id: "flux_pro_1",
    creator: Mn.BlackForestLabs
  },
  description: "Fast and high-quality model",
  badges: [{ label: "20 sec." }],
  capabilities: {
    maxGenerationCount: 1
    // NB: For some reason Fal only supports ONE image!
  },
  tags: [Pl.MaskedInpainting]
}), Rn({
  id: "flux_dev_juggernaut_inpaint",
  category: "image",
  info: {
    name: "Flux Dev Juggernaut (Inpainting)",
    tauri_id: "flux_dev_juggernaut",
    creator: Mn.BlackForestLabs
  },
  description: "Fast and high-quality model",
  badges: [{ label: "20 sec." }],
  capabilities: {
    maxGenerationCount: 4
  },
  tags: [Pl.MaskedInpainting]
}), //////////////////////////////
// Video models
//////////////////////////////
Rn({
  id: "kling_1_6_pro",
  category: "video",
  info: {
    name: "Kling 1.6 Pro",
    tauri_id: "kling_1.6_pro",
    creator: Mn.Kling
  },
  description: "Good quality model",
  badges: [{ label: "2 min." }],
  capabilities: { maxGenerationCount: 1 }
}), Rn({
  id: "kling_2_1_pro",
  category: "video",
  info: {
    name: "Kling 2.1 Pro",
    tauri_id: "kling_2.1_pro",
    creator: Mn.Kling
  },
  description: "High quality model",
  badges: [{ label: "2 min." }],
  capabilities: { maxGenerationCount: 1 }
}), Rn({
  id: "kling_2_1_master",
  category: "video",
  info: {
    name: "Kling 2.1 Master",
    tauri_id: "kling_2.1_master",
    creator: Mn.Kling
  },
  description: "Master quality model ($$)",
  badges: [{ label: "2 min." }],
  capabilities: { maxGenerationCount: 1 }
}), Rn({
  id: "seedance_1_0_lite",
  category: "video",
  info: {
    name: "Seedance 1.0 Lite",
    tauri_id: "seedance_1.0_lite",
    creator: Mn.Bytedance
  },
  description: "Fast and high-quality model",
  badges: [{ label: "2 min." }],
  capabilities: { maxGenerationCount: 1 }
}), Rn({
  id: "veo_2",
  category: "video",
  info: { name: "Google Veo 2", tauri_id: "veo_2", creator: Mn.Google },
  description: "Fast and high-quality model",
  badges: [{ label: "2 min." }],
  capabilities: { maxGenerationCount: 1 }
});
const nC = [
  new Uo({
    id: "midjourney",
    tauriId: "midjourney",
    fullName: "Midjourney",
    category: "image",
    creator: Qe.Midjourney,
    selectorName: "Midjourney",
    selectorDescription: "Incredible style and quality",
    selectorBadges: ["15 sec."],
    maxGenerationCount: 4,
    defaultGenerationCount: 4,
    canUseImagePrompt: !1,
    maxImagePromptCount: 6
  }),
  new Uo({
    id: "flux_pro_1_1_ultra",
    tauriId: "flux_pro_11_ultra",
    fullName: "Flux Pro 1.1 Ultra",
    category: "image",
    creator: Qe.BlackForestLabs,
    selectorName: "Flux Pro 1.1 Ultra",
    selectorDescription: "High quality model",
    selectorBadges: ["15 sec."],
    maxGenerationCount: 4,
    defaultGenerationCount: 4,
    canUseImagePrompt: !0,
    maxImagePromptCount: 6
  }),
  new Uo({
    id: "flux_pro_1_1",
    tauriId: "flux_pro_11",
    fullName: "Flux Pro 1.1",
    category: "image",
    creator: Qe.BlackForestLabs,
    selectorName: "Flux Pro 1.1",
    selectorDescription: "High quality model",
    selectorBadges: ["15 sec."],
    maxGenerationCount: 4,
    defaultGenerationCount: 4,
    canUseImagePrompt: !0,
    maxImagePromptCount: 6
  }),
  new Uo({
    id: "flux_1_dev",
    tauriId: "flux_1_dev",
    fullName: "Flux 1 Dev",
    category: "image",
    creator: Qe.BlackForestLabs,
    selectorName: "Flux 1 Dev",
    selectorDescription: "High quality model",
    selectorBadges: ["15 sec."],
    maxGenerationCount: 4,
    defaultGenerationCount: 4,
    canUseImagePrompt: !0,
    maxImagePromptCount: 6
  }),
  new Uo({
    id: "flux_1_schnell",
    tauriId: "flux_1_schnell",
    fullName: "Flux 1 Schnell",
    category: "image",
    creator: Qe.BlackForestLabs,
    selectorName: "Flux 1 Schnell",
    selectorDescription: "High quality model",
    selectorBadges: ["15 sec."],
    maxGenerationCount: 4,
    defaultGenerationCount: 4,
    canUseImagePrompt: !0,
    maxImagePromptCount: 6
  }),
  new Uo({
    id: "gemini_25_flash",
    tauriId: "gemini_25_flash",
    fullName: "Gemini 2.5 Flash",
    category: "image",
    creator: Qe.Google,
    selectorName: "Gemini 2.5 Flash",
    selectorDescription: "Ultra instructive model",
    selectorBadges: ["35 sec."],
    maxGenerationCount: 4,
    defaultGenerationCount: 1,
    canEditImages: !0,
    canUseImagePrompt: !0,
    maxImagePromptCount: 6,
    tags: [Pl.InstructiveEdit]
  }),
  new Uo({
    id: "gpt_image_1",
    tauriId: "gpt_image_1",
    fullName: "GPT Image 1 (GPT-4o)",
    category: "image",
    creator: Qe.OpenAi,
    selectorName: "GPT Image 1 (GPT-4o)",
    selectorDescription: "Slow, ultra instructive model",
    selectorBadges: ["45 sec."],
    maxGenerationCount: 1,
    defaultGenerationCount: 1,
    tags: [Pl.InstructiveEdit],
    canEditImages: !0,
    canUseImagePrompt: !0,
    maxImagePromptCount: 6
  }),
  new Uo({
    id: "flux_pro_kontext_max",
    tauriId: "flux_pro_kontext_max",
    fullName: "Flux Pro Kontext Max",
    category: "image",
    creator: Qe.BlackForestLabs,
    selectorName: "Flux Pro Kontext Max",
    selectorDescription: "Fast instructive editing",
    selectorBadges: ["20 sec."],
    maxGenerationCount: 4,
    defaultGenerationCount: 4,
    canEditImages: !0,
    tags: [Pl.InstructiveEdit]
  }),
  new Uo({
    id: "flux_pro_inpaint",
    tauriId: "flux_pro_1",
    fullName: "Flux Pro Inpaint",
    category: "image",
    creator: Qe.BlackForestLabs,
    selectorName: "Flux Pro",
    selectorDescription: "Fast inpainting",
    selectorBadges: ["30 sec."],
    maxGenerationCount: 1,
    // NB: Fal only allows one image for some reason!
    defaultGenerationCount: 1,
    // NB: Fal only allows one image for some reason!
    canEditImages: !0,
    usesInpaintingMask: !0
  }),
  new Uo({
    id: "flux_dev_juggernaut_inpaint",
    tauriId: "flux_dev_juggernaut",
    fullName: "Flux Dev Juggernaut Inpaint",
    category: "image",
    creator: Qe.BlackForestLabs,
    selectorName: "Flux Dev Juggernaut",
    selectorDescription: "Fast inpainting",
    selectorBadges: ["15 sec."],
    maxGenerationCount: 4,
    defaultGenerationCount: 4,
    canEditImages: !0,
    usesInpaintingMask: !0
  })
], Gke = new Map(
  nC.map((e) => [e.id, e])
);
if (Gke.size !== nC.length)
  throw new Error("All image models must have unique IDs");
const qke = [
  new Em({
    id: "kling_1_6_pro",
    tauriId: "kling_1.6_pro",
    fullName: "Kling 1.6 Pro",
    category: "video",
    creator: Qe.Kling,
    selectorName: "Kling 1.6 Pro",
    selectorDescription: "Fast video model",
    selectorBadges: ["2 min."],
    startFrame: !0,
    endFrame: !0
  }),
  new Em({
    id: "kling_2_1_pro",
    tauriId: "kling_2.1_pro",
    fullName: "Kling 2.1 Pro",
    category: "video",
    creator: Qe.Kling,
    selectorName: "Kling 2.1 Pro",
    selectorDescription: "Fast video model",
    selectorBadges: ["2 min."],
    startFrame: !0,
    endFrame: !0
  }),
  new Em({
    id: "kling_2_1_master",
    tauriId: "kling_2.1_master",
    fullName: "Kling 2.1 Master",
    category: "video",
    creator: Qe.Kling,
    selectorName: "Kling 2.1 Master",
    selectorDescription: "Fast video model",
    selectorBadges: ["2 min."],
    startFrame: !0,
    endFrame: !1
  }),
  new Em({
    id: "seedance_1_0_lite",
    tauriId: "seedance_1.0_lite",
    fullName: "Seedance 1.0 Lite",
    category: "video",
    creator: Qe.Bytedance,
    selectorName: "Seedance 1.0 Lite",
    selectorDescription: "Fast video model",
    selectorBadges: ["2 min."],
    startFrame: !0,
    endFrame: !1
  }),
  new Em({
    id: "veo_2",
    tauriId: "veo_2",
    fullName: "Google Veo 2",
    category: "video",
    creator: Qe.Google,
    selectorName: "Google Veo 2",
    selectorDescription: "Fast video model",
    selectorBadges: ["2 min."],
    startFrame: !0,
    endFrame: !1
  })
], BH = [...nC, ...qke], Bke = new Map(
  BH.map((e) => [e.id, e])
);
if (Bke.size !== BH.length)
  throw new Error("All models must have unique IDs");
var Xke = Object.defineProperty, Kke = (e, t, r) => t in e ? Xke(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r }) : e[t] = r, D2 = (e, t, r) => (Kke(e, typeof t != "symbol" ? t + "" : t, r), r);
let Jke = class {
  constructor() {
    D2(this, "current", this.detect()), D2(this, "handoffState", "pending"), D2(this, "currentId", 0);
  }
  set(e) {
    this.current !== e && (this.handoffState = "pending", this.currentId = 0, this.current = e);
  }
  reset() {
    this.set(this.detect());
  }
  nextId() {
    return ++this.currentId;
  }
  get isServer() {
    return this.current === "server";
  }
  get isClient() {
    return this.current === "client";
  }
  detect() {
    return typeof window > "u" || typeof document > "u" ? "server" : "client";
  }
  handoff() {
    this.handoffState === "pending" && (this.handoffState = "complete");
  }
  get isHandoffComplete() {
    return this.handoffState === "complete";
  }
}, iv = new Jke();
function Qke(e) {
  typeof queueMicrotask == "function" ? queueMicrotask(e) : Promise.resolve().then(e).catch((t) => setTimeout(() => {
    throw t;
  }));
}
function N0() {
  let e = [], t = { addEventListener(r, n, o, a) {
    return r.addEventListener(n, o, a), t.add(() => r.removeEventListener(n, o, a));
  }, requestAnimationFrame(...r) {
    let n = requestAnimationFrame(...r);
    return t.add(() => cancelAnimationFrame(n));
  }, nextFrame(...r) {
    return t.requestAnimationFrame(() => t.requestAnimationFrame(...r));
  }, setTimeout(...r) {
    let n = setTimeout(...r);
    return t.add(() => clearTimeout(n));
  }, microTask(...r) {
    let n = { current: !0 };
    return Qke(() => {
      n.current && r[0]();
    }), t.add(() => {
      n.current = !1;
    });
  }, style(r, n, o) {
    let a = r.style.getPropertyValue(n);
    return Object.assign(r.style, { [n]: o }), this.add(() => {
      Object.assign(r.style, { [n]: a });
    });
  }, group(r) {
    let n = N0();
    return r(n), this.add(() => n.dispose());
  }, add(r) {
    return e.includes(r) || e.push(r), () => {
      let n = e.indexOf(r);
      if (n >= 0) for (let o of e.splice(n, 1)) o();
    };
  }, dispose() {
    for (let r of e.splice(0)) r();
  } };
  return t;
}
function XH() {
  let [e] = _e(N0);
  return Ne(() => () => e.dispose(), [e]), e;
}
let Rl = (e, t) => {
  iv.isServer ? Ne(e, t) : Ri(e, t);
};
function KH(e) {
  let t = ie(e);
  return Rl(() => {
    t.current = e;
  }, [e]), t;
}
let ai = function(e) {
  let t = KH(e);
  return ce.useCallback((...r) => t.current(...r), [t]);
};
function dO(...e) {
  return Array.from(new Set(e.flatMap((t) => typeof t == "string" ? t.split(" ") : []))).filter(Boolean).join(" ");
}
function j0(e, t, ...r) {
  if (e in t) {
    let o = t[e];
    return typeof o == "function" ? o(...r) : o;
  }
  let n = new Error(`Tried to handle "${e}" but there is no handler defined. Only defined handlers are: ${Object.keys(t).map((o) => `"${o}"`).join(", ")}.`);
  throw Error.captureStackTrace && Error.captureStackTrace(n, j0), n;
}
var JH = ((e) => (e[e.None = 0] = "None", e[e.RenderStrategy = 1] = "RenderStrategy", e[e.Static = 2] = "Static", e))(JH || {}), Cl = ((e) => (e[e.Unmount = 0] = "Unmount", e[e.Hidden = 1] = "Hidden", e))(Cl || {});
function QH() {
  let e = e$e();
  return et((t) => Zke({ mergeRefs: e, ...t }), [e]);
}
function Zke({ ourProps: e, theirProps: t, slot: r, defaultTag: n, features: o, visible: a = !0, name: i, mergeRefs: s }) {
  s = s ?? t$e;
  let l = ZH(t, e);
  if (a) return cy(l, r, n, i, s);
  let c = o ?? 0;
  if (c & 2) {
    let { static: u = !1, ...f } = l;
    if (u) return cy(f, r, n, i, s);
  }
  if (c & 1) {
    let { unmount: u = !0, ...f } = l;
    return j0(u ? 0 : 1, { 0() {
      return null;
    }, 1() {
      return cy({ ...f, hidden: !0, style: { display: "none" } }, r, n, i, s);
    } });
  }
  return cy(l, r, n, i, s);
}
function cy(e, t = {}, r, n, o) {
  let { as: a = r, children: i, refName: s = "ref", ...l } = L2(e, ["unmount", "static"]), c = e.ref !== void 0 ? { [s]: e.ref } : {}, u = typeof i == "function" ? i(t) : i;
  "className" in l && l.className && typeof l.className == "function" && (l.className = l.className(t)), l["aria-labelledby"] && l["aria-labelledby"] === l.id && (l["aria-labelledby"] = void 0);
  let f = {};
  if (t) {
    let p = !1, v = [];
    for (let [x, b] of Object.entries(t)) typeof b == "boolean" && (p = !0), b === !0 && v.push(x.replace(/([A-Z])/g, (m) => `-${m.toLowerCase()}`));
    if (p) {
      f["data-headlessui-state"] = v.join(" ");
      for (let x of v) f[`data-${x}`] = "";
    }
  }
  if (a === ar && (Object.keys(Ac(l)).length > 0 || Object.keys(Ac(f)).length > 0)) if (!Dl(u) || Array.isArray(u) && u.length > 1) {
    if (Object.keys(Ac(l)).length > 0) throw new Error(['Passing props on "Fragment"!', "", `The current component <${n} /> is rendering a "Fragment".`, "However we need to passthrough the following props:", Object.keys(Ac(l)).concat(Object.keys(Ac(f))).map((p) => `  - ${p}`).join(`
`), "", "You can apply a few solutions:", ['Add an `as="..."` prop, to ensure that we render an actual element instead of a "Fragment".', "Render a single element as the child so that we can forward the props onto that element."].map((p) => `  - ${p}`).join(`
`)].join(`
`));
  } else {
    let p = u.props, v = p == null ? void 0 : p.className, x = typeof v == "function" ? (...w) => dO(v(...w), l.className) : dO(v, l.className), b = x ? { className: x } : {}, m = ZH(u.props, Ac(L2(l, ["ref"])));
    for (let w in f) w in m && delete f[w];
    return Ll(u, Object.assign({}, m, f, c, { ref: o(r$e(u), c.ref) }, b));
  }
  return N1(a, Object.assign({}, L2(l, ["ref"]), a !== ar && c, a !== ar && f), u);
}
function e$e() {
  let e = ie([]), t = et((r) => {
    for (let n of e.current) n != null && (typeof n == "function" ? n(r) : n.current = r);
  }, []);
  return (...r) => {
    if (!r.every((n) => n == null)) return e.current = r, t;
  };
}
function t$e(...e) {
  return e.every((t) => t == null) ? void 0 : (t) => {
    for (let r of e) r != null && (typeof r == "function" ? r(t) : r.current = t);
  };
}
function ZH(...e) {
  if (e.length === 0) return {};
  if (e.length === 1) return e[0];
  let t = {}, r = {};
  for (let n of e) for (let o in n) o.startsWith("on") && typeof n[o] == "function" ? (r[o] != null || (r[o] = []), r[o].push(n[o])) : t[o] = n[o];
  if (t.disabled || t["aria-disabled"]) for (let n in r) /^(on(?:Click|Pointer|Mouse|Key)(?:Down|Up|Press)?)$/.test(n) && (r[n] = [(o) => {
    var a;
    return (a = o == null ? void 0 : o.preventDefault) == null ? void 0 : a.call(o);
  }]);
  for (let n in r) Object.assign(t, { [n](o, ...a) {
    let i = r[n];
    for (let s of i) {
      if ((o instanceof Event || (o == null ? void 0 : o.nativeEvent) instanceof Event) && o.defaultPrevented) return;
      s(o, ...a);
    }
  } });
  return t;
}
function oC(e) {
  var t;
  return Object.assign(Pd(e), { displayName: (t = e.displayName) != null ? t : e.name });
}
function Ac(e) {
  let t = Object.assign({}, e);
  for (let r in t) t[r] === void 0 && delete t[r];
  return t;
}
function L2(e, t = []) {
  let r = Object.assign({}, e);
  for (let n of t) n in r && delete r[n];
  return r;
}
function r$e(e) {
  return ce.version.split(".")[0] >= "19" ? e.props.ref : e.ref;
}
let n$e = Symbol();
function eG(...e) {
  let t = ie(e);
  Ne(() => {
    t.current = e;
  }, [e]);
  let r = ai((n) => {
    for (let o of t.current) o != null && (typeof o == "function" ? o(n) : o.current = n);
  });
  return e.every((n) => n == null || (n == null ? void 0 : n[n$e])) ? void 0 : r;
}
function o$e(e = 0) {
  let [t, r] = _e(e), n = et((l) => r(l), [t]), o = et((l) => r((c) => c | l), [t]), a = et((l) => (t & l) === l, [t]), i = et((l) => r((c) => c & ~l), [r]), s = et((l) => r((c) => c ^ l), [r]);
  return { flags: t, setFlag: n, addFlag: o, hasFlag: a, removeFlag: i, toggleFlag: s };
}
var S7, P7;
typeof process < "u" && typeof globalThis < "u" && typeof Element < "u" && ((S7 = process == null ? void 0 : process.env) == null ? void 0 : S7.NODE_ENV) === "test" && typeof ((P7 = Element == null ? void 0 : Element.prototype) == null ? void 0 : P7.getAnimations) > "u" && (Element.prototype.getAnimations = function() {
  return console.warn(["Headless UI has polyfilled `Element.prototype.getAnimations` for your tests.", "Please install a proper polyfill e.g. `jsdom-testing-mocks`, to silence these warnings.", "", "Example usage:", "```js", "import { mockAnimationsApi } from 'jsdom-testing-mocks'", "mockAnimationsApi()", "```"].join(`
`)), [];
});
var a$e = ((e) => (e[e.None = 0] = "None", e[e.Closed = 1] = "Closed", e[e.Enter = 2] = "Enter", e[e.Leave = 4] = "Leave", e))(a$e || {});
function i$e(e) {
  let t = {};
  for (let r in e) e[r] === !0 && (t[`data-${r}`] = "");
  return t;
}
function s$e(e, t, r, n) {
  let [o, a] = _e(r), { hasFlag: i, addFlag: s, removeFlag: l } = o$e(e && o ? 3 : 0), c = ie(!1), u = ie(!1), f = XH();
  return Rl(() => {
    var p;
    if (e) {
      if (r && a(!0), !t) {
        r && s(3);
        return;
      }
      return (p = n == null ? void 0 : n.start) == null || p.call(n, r), l$e(t, { inFlight: c, prepare() {
        u.current ? u.current = !1 : u.current = c.current, c.current = !0, !u.current && (r ? (s(3), l(4)) : (s(4), l(2)));
      }, run() {
        u.current ? r ? (l(3), s(4)) : (l(4), s(3)) : r ? l(1) : s(1);
      }, done() {
        var v;
        u.current && typeof t.getAnimations == "function" && t.getAnimations().length > 0 || (c.current = !1, l(7), r || a(!1), (v = n == null ? void 0 : n.end) == null || v.call(n, r));
      } });
    }
  }, [e, r, t, f]), e ? [o, { closed: i(1), enter: i(2), leave: i(4), transition: i(2) || i(4) }] : [r, { closed: void 0, enter: void 0, leave: void 0, transition: void 0 }];
}
function l$e(e, { prepare: t, run: r, done: n, inFlight: o }) {
  let a = N0();
  return u$e(e, { prepare: t, inFlight: o }), a.nextFrame(() => {
    r(), a.requestAnimationFrame(() => {
      a.add(c$e(e, n));
    });
  }), a.dispose;
}
function c$e(e, t) {
  var r, n;
  let o = N0();
  if (!e) return o.dispose;
  let a = !1;
  o.add(() => {
    a = !0;
  });
  let i = (n = (r = e.getAnimations) == null ? void 0 : r.call(e).filter((s) => s instanceof CSSTransition)) != null ? n : [];
  return i.length === 0 ? (t(), o.dispose) : (Promise.allSettled(i.map((s) => s.finished)).then(() => {
    a || t();
  }), o.dispose);
}
function u$e(e, { inFlight: t, prepare: r }) {
  if (t != null && t.current) {
    r();
    return;
  }
  let n = e.style.transition;
  e.style.transition = "none", r(), e.offsetHeight, e.style.transition = n;
}
let aC = Br(null);
aC.displayName = "OpenClosedContext";
var Vc = ((e) => (e[e.Open = 1] = "Open", e[e.Closed = 2] = "Closed", e[e.Closing = 4] = "Closing", e[e.Opening = 8] = "Opening", e))(Vc || {});
function tG() {
  return Ut(aC);
}
function f$e({ value: e, children: t }) {
  return ce.createElement(aC.Provider, { value: e }, t);
}
function d$e() {
  let e = typeof document > "u";
  return "useSyncExternalStore" in Y ? ((t) => t.useSyncExternalStore)(Y)(() => () => {
  }, () => !1, () => !e) : !1;
}
function rG() {
  let e = d$e(), [t, r] = Y.useState(iv.isHandoffComplete);
  return t && iv.isHandoffComplete === !1 && r(!1), Y.useEffect(() => {
    t !== !0 && r(!0);
  }, [t]), Y.useEffect(() => iv.handoff(), []), e ? !1 : t;
}
function p$e() {
  let e = ie(!1);
  return Rl(() => (e.current = !0, () => {
    e.current = !1;
  }), []), e;
}
function nG(e) {
  var t;
  return !!(e.enter || e.enterFrom || e.enterTo || e.leave || e.leaveFrom || e.leaveTo) || ((t = e.as) != null ? t : aG) !== ar || ce.Children.count(e.children) === 1;
}
let I0 = Br(null);
I0.displayName = "TransitionContext";
var m$e = ((e) => (e.Visible = "visible", e.Hidden = "hidden", e))(m$e || {});
function g$e() {
  let e = Ut(I0);
  if (e === null) throw new Error("A <Transition.Child /> is used but it is missing a parent <Transition /> or <Transition.Root />.");
  return e;
}
function h$e() {
  let e = Ut(T0);
  if (e === null) throw new Error("A <Transition.Child /> is used but it is missing a parent <Transition /> or <Transition.Root />.");
  return e;
}
let T0 = Br(null);
T0.displayName = "NestingContext";
function M0(e) {
  return "children" in e ? M0(e.children) : e.current.filter(({ el: t }) => t.current !== null).filter(({ state: t }) => t === "visible").length > 0;
}
function oG(e, t) {
  let r = KH(e), n = ie([]), o = p$e(), a = XH(), i = ai((v, x = Cl.Hidden) => {
    let b = n.current.findIndex(({ el: m }) => m === v);
    b !== -1 && (j0(x, { [Cl.Unmount]() {
      n.current.splice(b, 1);
    }, [Cl.Hidden]() {
      n.current[b].state = "hidden";
    } }), a.microTask(() => {
      var m;
      !M0(n) && o.current && ((m = r.current) == null || m.call(r));
    }));
  }), s = ai((v) => {
    let x = n.current.find(({ el: b }) => b === v);
    return x ? x.state !== "visible" && (x.state = "visible") : n.current.push({ el: v, state: "visible" }), () => i(v, Cl.Unmount);
  }), l = ie([]), c = ie(Promise.resolve()), u = ie({ enter: [], leave: [] }), f = ai((v, x, b) => {
    l.current.splice(0), t && (t.chains.current[x] = t.chains.current[x].filter(([m]) => m !== v)), t == null || t.chains.current[x].push([v, new Promise((m) => {
      l.current.push(m);
    })]), t == null || t.chains.current[x].push([v, new Promise((m) => {
      Promise.all(u.current[x].map(([w, $]) => $)).then(() => m());
    })]), x === "enter" ? c.current = c.current.then(() => t == null ? void 0 : t.wait.current).then(() => b(x)) : b(x);
  }), p = ai((v, x, b) => {
    Promise.all(u.current[x].splice(0).map(([m, w]) => w)).then(() => {
      var m;
      (m = l.current.shift()) == null || m();
    }).then(() => b(x));
  });
  return Yt(() => ({ children: n, register: s, unregister: i, onStart: f, onStop: p, wait: c, chains: u }), [s, i, n, f, p, u, c]);
}
let aG = ar, iG = JH.RenderStrategy;
function b$e(e, t) {
  var r, n;
  let { transition: o = !0, beforeEnter: a, afterEnter: i, beforeLeave: s, afterLeave: l, enter: c, enterFrom: u, enterTo: f, entered: p, leave: v, leaveFrom: x, leaveTo: b, ...m } = e, [w, $] = _e(null), E = ie(null), S = nG(e), h = eG(...S ? [E, t, $] : t === null ? [] : [t]), U = (r = m.unmount) == null || r ? Cl.Unmount : Cl.Hidden, { show: G, appear: Q, initial: Z } = g$e(), [X, J] = _e(G ? "visible" : "hidden"), I = h$e(), { register: te, unregister: V } = I;
  Rl(() => te(E), [te, E]), Rl(() => {
    if (U === Cl.Hidden && E.current) {
      if (G && X !== "visible") {
        J("visible");
        return;
      }
      return j0(X, { hidden: () => V(E), visible: () => te(E) });
    }
  }, [X, E, te, V, G, U]);
  let D = rG();
  Rl(() => {
    if (S && D && X === "visible" && E.current === null) throw new Error("Did you forget to passthrough the `ref` to the actual DOM node?");
  }, [E, X, D, S]);
  let F = Z && !Q, R = Q && G && Z, H = ie(!1), B = oG(() => {
    H.current || (J("hidden"), V(E));
  }, I), g = ai((_) => {
    H.current = !0;
    let T = _ ? "enter" : "leave";
    B.onStart(E, T, (M) => {
      M === "enter" ? a == null || a() : M === "leave" && (s == null || s());
    });
  }), d = ai((_) => {
    let T = _ ? "enter" : "leave";
    H.current = !1, B.onStop(E, T, (M) => {
      M === "enter" ? i == null || i() : M === "leave" && (l == null || l());
    }), T === "leave" && !M0(B) && (J("hidden"), V(E));
  });
  Ne(() => {
    S && o || (g(G), d(G));
  }, [G, S, o]);
  let O = !(!o || !S || !D || F), [, C] = s$e(O, w, G, { start: g, end: d }), A = Ac({ ref: h, className: ((n = dO(m.className, R && c, R && u, C.enter && c, C.enter && C.closed && u, C.enter && !C.closed && f, C.leave && v, C.leave && !C.closed && x, C.leave && C.closed && b, !C.transition && G && p)) == null ? void 0 : n.trim()) || void 0, ...i$e(C) }), N = 0;
  X === "visible" && (N |= Vc.Open), X === "hidden" && (N |= Vc.Closed), G && X === "hidden" && (N |= Vc.Opening), !G && X === "visible" && (N |= Vc.Closing);
  let j = QH();
  return ce.createElement(T0.Provider, { value: B }, ce.createElement(f$e, { value: N }, j({ ourProps: A, theirProps: m, defaultTag: aG, features: iG, visible: X === "visible", name: "Transition.Child" })));
}
function y$e(e, t) {
  let { show: r, appear: n = !1, unmount: o = !0, ...a } = e, i = ie(null), s = nG(e), l = eG(...s ? [i, t] : t === null ? [] : [t]);
  rG();
  let c = tG();
  if (r === void 0 && c !== null && (r = (c & Vc.Open) === Vc.Open), r === void 0) throw new Error("A <Transition /> is used but it is missing a `show={true | false}` prop.");
  let [u, f] = _e(r ? "visible" : "hidden"), p = oG(() => {
    r || f("hidden");
  }), [v, x] = _e(!0), b = ie([r]);
  Rl(() => {
    v !== !1 && b.current[b.current.length - 1] !== r && (b.current.push(r), x(!1));
  }, [b, r]);
  let m = Yt(() => ({ show: r, appear: n, initial: v }), [r, n, v]);
  Rl(() => {
    r ? f("visible") : !M0(p) && i.current !== null && f("hidden");
  }, [r, p]);
  let w = { unmount: o }, $ = ai(() => {
    var h;
    v && x(!1), (h = e.beforeEnter) == null || h.call(e);
  }), E = ai(() => {
    var h;
    v && x(!1), (h = e.beforeLeave) == null || h.call(e);
  }), S = QH();
  return ce.createElement(T0.Provider, { value: p }, ce.createElement(I0.Provider, { value: m }, S({ ourProps: { ...w, as: ar, children: ce.createElement(sG, { ref: l, ...w, ...a, beforeEnter: $, beforeLeave: E }) }, theirProps: {}, defaultTag: ar, features: iG, visible: u === "visible", name: "Transition" })));
}
function v$e(e, t) {
  let r = Ut(I0) !== null, n = tG() !== null;
  return ce.createElement(ce.Fragment, null, !r && n ? ce.createElement(pO, { ref: t, ...e }) : ce.createElement(sG, { ref: t, ...e }));
}
let pO = oC(y$e), sG = oC(b$e), x$e = oC(v$e), w$e = Object.assign(pO, { Child: x$e, Root: pO });
const iC = "-", k$e = (e) => {
  const t = O$e(e), {
    conflictingClassGroups: r,
    conflictingClassGroupModifiers: n
  } = e;
  return {
    getClassGroupId: (o) => {
      const a = o.split(iC);
      return a[0] === "" && a.length !== 1 && a.shift(), lG(a, t) || $$e(o);
    },
    getConflictingClassGroupIds: (o, a) => {
      const i = r[o] || [];
      return a && n[o] ? [...i, ...n[o]] : i;
    }
  };
}, lG = (e, t) => {
  var r;
  if (e.length === 0)
    return t.classGroupId;
  const n = e[0], o = t.nextPart.get(n), a = o ? lG(e.slice(1), o) : void 0;
  if (a)
    return a;
  if (t.validators.length === 0)
    return;
  const i = e.join(iC);
  return (r = t.validators.find(({
    validator: s
  }) => s(i))) == null ? void 0 : r.classGroupId;
}, C7 = /^\[(.+)\]$/, $$e = (e) => {
  if (C7.test(e)) {
    const t = C7.exec(e)[1], r = t == null ? void 0 : t.substring(0, t.indexOf(":"));
    if (r)
      return "arbitrary.." + r;
  }
}, O$e = (e) => {
  const {
    theme: t,
    prefix: r
  } = e, n = {
    nextPart: /* @__PURE__ */ new Map(),
    validators: []
  };
  return S$e(Object.entries(e.classGroups), r).forEach(([o, a]) => {
    mO(a, n, o, t);
  }), n;
}, mO = (e, t, r, n) => {
  e.forEach((o) => {
    if (typeof o == "string") {
      const a = o === "" ? t : A7(t, o);
      a.classGroupId = r;
      return;
    }
    if (typeof o == "function") {
      if (E$e(o)) {
        mO(o(n), t, r, n);
        return;
      }
      t.validators.push({
        validator: o,
        classGroupId: r
      });
      return;
    }
    Object.entries(o).forEach(([a, i]) => {
      mO(i, A7(t, a), r, n);
    });
  });
}, A7 = (e, t) => {
  let r = e;
  return t.split(iC).forEach((n) => {
    r.nextPart.has(n) || r.nextPart.set(n, {
      nextPart: /* @__PURE__ */ new Map(),
      validators: []
    }), r = r.nextPart.get(n);
  }), r;
}, E$e = (e) => e.isThemeGetter, S$e = (e, t) => t ? e.map(([r, n]) => {
  const o = n.map((a) => typeof a == "string" ? t + a : typeof a == "object" ? Object.fromEntries(Object.entries(a).map(([i, s]) => [t + i, s])) : a);
  return [r, o];
}) : e, P$e = (e) => {
  if (e < 1)
    return {
      get: () => {
      },
      set: () => {
      }
    };
  let t = 0, r = /* @__PURE__ */ new Map(), n = /* @__PURE__ */ new Map();
  const o = (a, i) => {
    r.set(a, i), t++, t > e && (t = 0, n = r, r = /* @__PURE__ */ new Map());
  };
  return {
    get(a) {
      let i = r.get(a);
      if (i !== void 0)
        return i;
      if ((i = n.get(a)) !== void 0)
        return o(a, i), i;
    },
    set(a, i) {
      r.has(a) ? r.set(a, i) : o(a, i);
    }
  };
}, cG = "!", C$e = (e) => {
  const {
    separator: t,
    experimentalParseClassName: r
  } = e, n = t.length === 1, o = t[0], a = t.length, i = (s) => {
    const l = [];
    let c = 0, u = 0, f;
    for (let m = 0; m < s.length; m++) {
      let w = s[m];
      if (c === 0) {
        if (w === o && (n || s.slice(m, m + a) === t)) {
          l.push(s.slice(u, m)), u = m + a;
          continue;
        }
        if (w === "/") {
          f = m;
          continue;
        }
      }
      w === "[" ? c++ : w === "]" && c--;
    }
    const p = l.length === 0 ? s : s.substring(u), v = p.startsWith(cG), x = v ? p.substring(1) : p, b = f && f > u ? f - u : void 0;
    return {
      modifiers: l,
      hasImportantModifier: v,
      baseClassName: x,
      maybePostfixModifierPosition: b
    };
  };
  return r ? (s) => r({
    className: s,
    parseClassName: i
  }) : i;
}, A$e = (e) => {
  if (e.length <= 1)
    return e;
  const t = [];
  let r = [];
  return e.forEach((n) => {
    n[0] === "[" ? (t.push(...r.sort(), n), r = []) : r.push(n);
  }), t.push(...r.sort()), t;
}, _$e = (e) => ({
  cache: P$e(e.cacheSize),
  parseClassName: C$e(e),
  ...k$e(e)
}), N$e = /\s+/, j$e = (e, t) => {
  const {
    parseClassName: r,
    getClassGroupId: n,
    getConflictingClassGroupIds: o
  } = t, a = [], i = e.trim().split(N$e);
  let s = "";
  for (let l = i.length - 1; l >= 0; l -= 1) {
    const c = i[l], {
      modifiers: u,
      hasImportantModifier: f,
      baseClassName: p,
      maybePostfixModifierPosition: v
    } = r(c);
    let x = !!v, b = n(x ? p.substring(0, v) : p);
    if (!b) {
      if (!x) {
        s = c + (s.length > 0 ? " " + s : s);
        continue;
      }
      if (b = n(p), !b) {
        s = c + (s.length > 0 ? " " + s : s);
        continue;
      }
      x = !1;
    }
    const m = A$e(u).join(":"), w = f ? m + cG : m, $ = w + b;
    if (a.includes($))
      continue;
    a.push($);
    const E = o(b, x);
    for (let S = 0; S < E.length; ++S) {
      const h = E[S];
      a.push(w + h);
    }
    s = c + (s.length > 0 ? " " + s : s);
  }
  return s;
};
function I$e() {
  let e = 0, t, r, n = "";
  for (; e < arguments.length; )
    (t = arguments[e++]) && (r = uG(t)) && (n && (n += " "), n += r);
  return n;
}
const uG = (e) => {
  if (typeof e == "string")
    return e;
  let t, r = "";
  for (let n = 0; n < e.length; n++)
    e[n] && (t = uG(e[n])) && (r && (r += " "), r += t);
  return r;
};
function T$e(e, ...t) {
  let r, n, o, a = i;
  function i(l) {
    const c = t.reduce((u, f) => f(u), e());
    return r = _$e(c), n = r.cache.get, o = r.cache.set, a = s, s(l);
  }
  function s(l) {
    const c = n(l);
    if (c)
      return c;
    const u = j$e(l, r);
    return o(l, u), u;
  }
  return function() {
    return a(I$e.apply(null, arguments));
  };
}
const Sr = (e) => {
  const t = (r) => r[e] || [];
  return t.isThemeGetter = !0, t;
}, fG = /^\[(?:([a-z-]+):)?(.+)\]$/i, M$e = /^\d+\/\d+$/, R$e = /* @__PURE__ */ new Set(["px", "full", "screen"]), z$e = /^(\d+(\.\d+)?)?(xs|sm|md|lg|xl)$/, F$e = /\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\b(calc|min|max|clamp)\(.+\)|^0$/, D$e = /^(rgba?|hsla?|hwb|(ok)?(lab|lch))\(.+\)$/, L$e = /^(inset_)?-?((\d+)?\.?(\d+)[a-z]+|0)_-?((\d+)?\.?(\d+)[a-z]+|0)/, V$e = /^(url|image|image-set|cross-fade|element|(repeating-)?(linear|radial|conic)-gradient)\(.+\)$/, Ga = (e) => Yf(e) || R$e.has(e) || M$e.test(e), Gs = (e) => Ud(e, "length", X$e), Yf = (e) => !!e && !Number.isNaN(Number(e)), V2 = (e) => Ud(e, "number", Yf), Sm = (e) => !!e && Number.isInteger(Number(e)), W$e = (e) => e.endsWith("%") && Yf(e.slice(0, -1)), dt = (e) => fG.test(e), qs = (e) => z$e.test(e), U$e = /* @__PURE__ */ new Set(["length", "size", "percentage"]), Y$e = (e) => Ud(e, U$e, dG), H$e = (e) => Ud(e, "position", dG), G$e = /* @__PURE__ */ new Set(["image", "url"]), q$e = (e) => Ud(e, G$e, J$e), B$e = (e) => Ud(e, "", K$e), Pm = () => !0, Ud = (e, t, r) => {
  const n = fG.exec(e);
  return n ? n[1] ? typeof t == "string" ? n[1] === t : t.has(n[1]) : r(n[2]) : !1;
}, X$e = (e) => (
  // `colorFunctionRegex` check is necessary because color functions can have percentages in them which which would be incorrectly classified as lengths.
  // For example, `hsl(0 0% 0%)` would be classified as a length without this check.
  // I could also use lookbehind assertion in `lengthUnitRegex` but that isn't supported widely enough.
  F$e.test(e) && !D$e.test(e)
), dG = () => !1, K$e = (e) => L$e.test(e), J$e = (e) => V$e.test(e), Q$e = () => {
  const e = Sr("colors"), t = Sr("spacing"), r = Sr("blur"), n = Sr("brightness"), o = Sr("borderColor"), a = Sr("borderRadius"), i = Sr("borderSpacing"), s = Sr("borderWidth"), l = Sr("contrast"), c = Sr("grayscale"), u = Sr("hueRotate"), f = Sr("invert"), p = Sr("gap"), v = Sr("gradientColorStops"), x = Sr("gradientColorStopPositions"), b = Sr("inset"), m = Sr("margin"), w = Sr("opacity"), $ = Sr("padding"), E = Sr("saturate"), S = Sr("scale"), h = Sr("sepia"), U = Sr("skew"), G = Sr("space"), Q = Sr("translate"), Z = () => ["auto", "contain", "none"], X = () => ["auto", "hidden", "clip", "visible", "scroll"], J = () => ["auto", dt, t], I = () => [dt, t], te = () => ["", Ga, Gs], V = () => ["auto", Yf, dt], D = () => ["bottom", "center", "left", "left-bottom", "left-top", "right", "right-bottom", "right-top", "top"], F = () => ["solid", "dashed", "dotted", "double", "none"], R = () => ["normal", "multiply", "screen", "overlay", "darken", "lighten", "color-dodge", "color-burn", "hard-light", "soft-light", "difference", "exclusion", "hue", "saturation", "color", "luminosity"], H = () => ["start", "end", "center", "between", "around", "evenly", "stretch"], B = () => ["", "0", dt], g = () => ["auto", "avoid", "all", "avoid-page", "page", "left", "right", "column"], d = () => [Yf, dt];
  return {
    cacheSize: 500,
    separator: ":",
    theme: {
      colors: [Pm],
      spacing: [Ga, Gs],
      blur: ["none", "", qs, dt],
      brightness: d(),
      borderColor: [e],
      borderRadius: ["none", "", "full", qs, dt],
      borderSpacing: I(),
      borderWidth: te(),
      contrast: d(),
      grayscale: B(),
      hueRotate: d(),
      invert: B(),
      gap: I(),
      gradientColorStops: [e],
      gradientColorStopPositions: [W$e, Gs],
      inset: J(),
      margin: J(),
      opacity: d(),
      padding: I(),
      saturate: d(),
      scale: d(),
      sepia: B(),
      skew: d(),
      space: I(),
      translate: I()
    },
    classGroups: {
      // Layout
      /**
       * Aspect Ratio
       * @see https://tailwindcss.com/docs/aspect-ratio
       */
      aspect: [{
        aspect: ["auto", "square", "video", dt]
      }],
      /**
       * Container
       * @see https://tailwindcss.com/docs/container
       */
      container: ["container"],
      /**
       * Columns
       * @see https://tailwindcss.com/docs/columns
       */
      columns: [{
        columns: [qs]
      }],
      /**
       * Break After
       * @see https://tailwindcss.com/docs/break-after
       */
      "break-after": [{
        "break-after": g()
      }],
      /**
       * Break Before
       * @see https://tailwindcss.com/docs/break-before
       */
      "break-before": [{
        "break-before": g()
      }],
      /**
       * Break Inside
       * @see https://tailwindcss.com/docs/break-inside
       */
      "break-inside": [{
        "break-inside": ["auto", "avoid", "avoid-page", "avoid-column"]
      }],
      /**
       * Box Decoration Break
       * @see https://tailwindcss.com/docs/box-decoration-break
       */
      "box-decoration": [{
        "box-decoration": ["slice", "clone"]
      }],
      /**
       * Box Sizing
       * @see https://tailwindcss.com/docs/box-sizing
       */
      box: [{
        box: ["border", "content"]
      }],
      /**
       * Display
       * @see https://tailwindcss.com/docs/display
       */
      display: ["block", "inline-block", "inline", "flex", "inline-flex", "table", "inline-table", "table-caption", "table-cell", "table-column", "table-column-group", "table-footer-group", "table-header-group", "table-row-group", "table-row", "flow-root", "grid", "inline-grid", "contents", "list-item", "hidden"],
      /**
       * Floats
       * @see https://tailwindcss.com/docs/float
       */
      float: [{
        float: ["right", "left", "none", "start", "end"]
      }],
      /**
       * Clear
       * @see https://tailwindcss.com/docs/clear
       */
      clear: [{
        clear: ["left", "right", "both", "none", "start", "end"]
      }],
      /**
       * Isolation
       * @see https://tailwindcss.com/docs/isolation
       */
      isolation: ["isolate", "isolation-auto"],
      /**
       * Object Fit
       * @see https://tailwindcss.com/docs/object-fit
       */
      "object-fit": [{
        object: ["contain", "cover", "fill", "none", "scale-down"]
      }],
      /**
       * Object Position
       * @see https://tailwindcss.com/docs/object-position
       */
      "object-position": [{
        object: [...D(), dt]
      }],
      /**
       * Overflow
       * @see https://tailwindcss.com/docs/overflow
       */
      overflow: [{
        overflow: X()
      }],
      /**
       * Overflow X
       * @see https://tailwindcss.com/docs/overflow
       */
      "overflow-x": [{
        "overflow-x": X()
      }],
      /**
       * Overflow Y
       * @see https://tailwindcss.com/docs/overflow
       */
      "overflow-y": [{
        "overflow-y": X()
      }],
      /**
       * Overscroll Behavior
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      overscroll: [{
        overscroll: Z()
      }],
      /**
       * Overscroll Behavior X
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      "overscroll-x": [{
        "overscroll-x": Z()
      }],
      /**
       * Overscroll Behavior Y
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      "overscroll-y": [{
        "overscroll-y": Z()
      }],
      /**
       * Position
       * @see https://tailwindcss.com/docs/position
       */
      position: ["static", "fixed", "absolute", "relative", "sticky"],
      /**
       * Top / Right / Bottom / Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      inset: [{
        inset: [b]
      }],
      /**
       * Right / Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      "inset-x": [{
        "inset-x": [b]
      }],
      /**
       * Top / Bottom
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      "inset-y": [{
        "inset-y": [b]
      }],
      /**
       * Start
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      start: [{
        start: [b]
      }],
      /**
       * End
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      end: [{
        end: [b]
      }],
      /**
       * Top
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      top: [{
        top: [b]
      }],
      /**
       * Right
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      right: [{
        right: [b]
      }],
      /**
       * Bottom
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      bottom: [{
        bottom: [b]
      }],
      /**
       * Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      left: [{
        left: [b]
      }],
      /**
       * Visibility
       * @see https://tailwindcss.com/docs/visibility
       */
      visibility: ["visible", "invisible", "collapse"],
      /**
       * Z-Index
       * @see https://tailwindcss.com/docs/z-index
       */
      z: [{
        z: ["auto", Sm, dt]
      }],
      // Flexbox and Grid
      /**
       * Flex Basis
       * @see https://tailwindcss.com/docs/flex-basis
       */
      basis: [{
        basis: J()
      }],
      /**
       * Flex Direction
       * @see https://tailwindcss.com/docs/flex-direction
       */
      "flex-direction": [{
        flex: ["row", "row-reverse", "col", "col-reverse"]
      }],
      /**
       * Flex Wrap
       * @see https://tailwindcss.com/docs/flex-wrap
       */
      "flex-wrap": [{
        flex: ["wrap", "wrap-reverse", "nowrap"]
      }],
      /**
       * Flex
       * @see https://tailwindcss.com/docs/flex
       */
      flex: [{
        flex: ["1", "auto", "initial", "none", dt]
      }],
      /**
       * Flex Grow
       * @see https://tailwindcss.com/docs/flex-grow
       */
      grow: [{
        grow: B()
      }],
      /**
       * Flex Shrink
       * @see https://tailwindcss.com/docs/flex-shrink
       */
      shrink: [{
        shrink: B()
      }],
      /**
       * Order
       * @see https://tailwindcss.com/docs/order
       */
      order: [{
        order: ["first", "last", "none", Sm, dt]
      }],
      /**
       * Grid Template Columns
       * @see https://tailwindcss.com/docs/grid-template-columns
       */
      "grid-cols": [{
        "grid-cols": [Pm]
      }],
      /**
       * Grid Column Start / End
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-start-end": [{
        col: ["auto", {
          span: ["full", Sm, dt]
        }, dt]
      }],
      /**
       * Grid Column Start
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-start": [{
        "col-start": V()
      }],
      /**
       * Grid Column End
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-end": [{
        "col-end": V()
      }],
      /**
       * Grid Template Rows
       * @see https://tailwindcss.com/docs/grid-template-rows
       */
      "grid-rows": [{
        "grid-rows": [Pm]
      }],
      /**
       * Grid Row Start / End
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-start-end": [{
        row: ["auto", {
          span: [Sm, dt]
        }, dt]
      }],
      /**
       * Grid Row Start
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-start": [{
        "row-start": V()
      }],
      /**
       * Grid Row End
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-end": [{
        "row-end": V()
      }],
      /**
       * Grid Auto Flow
       * @see https://tailwindcss.com/docs/grid-auto-flow
       */
      "grid-flow": [{
        "grid-flow": ["row", "col", "dense", "row-dense", "col-dense"]
      }],
      /**
       * Grid Auto Columns
       * @see https://tailwindcss.com/docs/grid-auto-columns
       */
      "auto-cols": [{
        "auto-cols": ["auto", "min", "max", "fr", dt]
      }],
      /**
       * Grid Auto Rows
       * @see https://tailwindcss.com/docs/grid-auto-rows
       */
      "auto-rows": [{
        "auto-rows": ["auto", "min", "max", "fr", dt]
      }],
      /**
       * Gap
       * @see https://tailwindcss.com/docs/gap
       */
      gap: [{
        gap: [p]
      }],
      /**
       * Gap X
       * @see https://tailwindcss.com/docs/gap
       */
      "gap-x": [{
        "gap-x": [p]
      }],
      /**
       * Gap Y
       * @see https://tailwindcss.com/docs/gap
       */
      "gap-y": [{
        "gap-y": [p]
      }],
      /**
       * Justify Content
       * @see https://tailwindcss.com/docs/justify-content
       */
      "justify-content": [{
        justify: ["normal", ...H()]
      }],
      /**
       * Justify Items
       * @see https://tailwindcss.com/docs/justify-items
       */
      "justify-items": [{
        "justify-items": ["start", "end", "center", "stretch"]
      }],
      /**
       * Justify Self
       * @see https://tailwindcss.com/docs/justify-self
       */
      "justify-self": [{
        "justify-self": ["auto", "start", "end", "center", "stretch"]
      }],
      /**
       * Align Content
       * @see https://tailwindcss.com/docs/align-content
       */
      "align-content": [{
        content: ["normal", ...H(), "baseline"]
      }],
      /**
       * Align Items
       * @see https://tailwindcss.com/docs/align-items
       */
      "align-items": [{
        items: ["start", "end", "center", "baseline", "stretch"]
      }],
      /**
       * Align Self
       * @see https://tailwindcss.com/docs/align-self
       */
      "align-self": [{
        self: ["auto", "start", "end", "center", "stretch", "baseline"]
      }],
      /**
       * Place Content
       * @see https://tailwindcss.com/docs/place-content
       */
      "place-content": [{
        "place-content": [...H(), "baseline"]
      }],
      /**
       * Place Items
       * @see https://tailwindcss.com/docs/place-items
       */
      "place-items": [{
        "place-items": ["start", "end", "center", "baseline", "stretch"]
      }],
      /**
       * Place Self
       * @see https://tailwindcss.com/docs/place-self
       */
      "place-self": [{
        "place-self": ["auto", "start", "end", "center", "stretch"]
      }],
      // Spacing
      /**
       * Padding
       * @see https://tailwindcss.com/docs/padding
       */
      p: [{
        p: [$]
      }],
      /**
       * Padding X
       * @see https://tailwindcss.com/docs/padding
       */
      px: [{
        px: [$]
      }],
      /**
       * Padding Y
       * @see https://tailwindcss.com/docs/padding
       */
      py: [{
        py: [$]
      }],
      /**
       * Padding Start
       * @see https://tailwindcss.com/docs/padding
       */
      ps: [{
        ps: [$]
      }],
      /**
       * Padding End
       * @see https://tailwindcss.com/docs/padding
       */
      pe: [{
        pe: [$]
      }],
      /**
       * Padding Top
       * @see https://tailwindcss.com/docs/padding
       */
      pt: [{
        pt: [$]
      }],
      /**
       * Padding Right
       * @see https://tailwindcss.com/docs/padding
       */
      pr: [{
        pr: [$]
      }],
      /**
       * Padding Bottom
       * @see https://tailwindcss.com/docs/padding
       */
      pb: [{
        pb: [$]
      }],
      /**
       * Padding Left
       * @see https://tailwindcss.com/docs/padding
       */
      pl: [{
        pl: [$]
      }],
      /**
       * Margin
       * @see https://tailwindcss.com/docs/margin
       */
      m: [{
        m: [m]
      }],
      /**
       * Margin X
       * @see https://tailwindcss.com/docs/margin
       */
      mx: [{
        mx: [m]
      }],
      /**
       * Margin Y
       * @see https://tailwindcss.com/docs/margin
       */
      my: [{
        my: [m]
      }],
      /**
       * Margin Start
       * @see https://tailwindcss.com/docs/margin
       */
      ms: [{
        ms: [m]
      }],
      /**
       * Margin End
       * @see https://tailwindcss.com/docs/margin
       */
      me: [{
        me: [m]
      }],
      /**
       * Margin Top
       * @see https://tailwindcss.com/docs/margin
       */
      mt: [{
        mt: [m]
      }],
      /**
       * Margin Right
       * @see https://tailwindcss.com/docs/margin
       */
      mr: [{
        mr: [m]
      }],
      /**
       * Margin Bottom
       * @see https://tailwindcss.com/docs/margin
       */
      mb: [{
        mb: [m]
      }],
      /**
       * Margin Left
       * @see https://tailwindcss.com/docs/margin
       */
      ml: [{
        ml: [m]
      }],
      /**
       * Space Between X
       * @see https://tailwindcss.com/docs/space
       */
      "space-x": [{
        "space-x": [G]
      }],
      /**
       * Space Between X Reverse
       * @see https://tailwindcss.com/docs/space
       */
      "space-x-reverse": ["space-x-reverse"],
      /**
       * Space Between Y
       * @see https://tailwindcss.com/docs/space
       */
      "space-y": [{
        "space-y": [G]
      }],
      /**
       * Space Between Y Reverse
       * @see https://tailwindcss.com/docs/space
       */
      "space-y-reverse": ["space-y-reverse"],
      // Sizing
      /**
       * Width
       * @see https://tailwindcss.com/docs/width
       */
      w: [{
        w: ["auto", "min", "max", "fit", "svw", "lvw", "dvw", dt, t]
      }],
      /**
       * Min-Width
       * @see https://tailwindcss.com/docs/min-width
       */
      "min-w": [{
        "min-w": [dt, t, "min", "max", "fit"]
      }],
      /**
       * Max-Width
       * @see https://tailwindcss.com/docs/max-width
       */
      "max-w": [{
        "max-w": [dt, t, "none", "full", "min", "max", "fit", "prose", {
          screen: [qs]
        }, qs]
      }],
      /**
       * Height
       * @see https://tailwindcss.com/docs/height
       */
      h: [{
        h: [dt, t, "auto", "min", "max", "fit", "svh", "lvh", "dvh"]
      }],
      /**
       * Min-Height
       * @see https://tailwindcss.com/docs/min-height
       */
      "min-h": [{
        "min-h": [dt, t, "min", "max", "fit", "svh", "lvh", "dvh"]
      }],
      /**
       * Max-Height
       * @see https://tailwindcss.com/docs/max-height
       */
      "max-h": [{
        "max-h": [dt, t, "min", "max", "fit", "svh", "lvh", "dvh"]
      }],
      /**
       * Size
       * @see https://tailwindcss.com/docs/size
       */
      size: [{
        size: [dt, t, "auto", "min", "max", "fit"]
      }],
      // Typography
      /**
       * Font Size
       * @see https://tailwindcss.com/docs/font-size
       */
      "font-size": [{
        text: ["base", qs, Gs]
      }],
      /**
       * Font Smoothing
       * @see https://tailwindcss.com/docs/font-smoothing
       */
      "font-smoothing": ["antialiased", "subpixel-antialiased"],
      /**
       * Font Style
       * @see https://tailwindcss.com/docs/font-style
       */
      "font-style": ["italic", "not-italic"],
      /**
       * Font Weight
       * @see https://tailwindcss.com/docs/font-weight
       */
      "font-weight": [{
        font: ["thin", "extralight", "light", "normal", "medium", "semibold", "bold", "extrabold", "black", V2]
      }],
      /**
       * Font Family
       * @see https://tailwindcss.com/docs/font-family
       */
      "font-family": [{
        font: [Pm]
      }],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-normal": ["normal-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-ordinal": ["ordinal"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-slashed-zero": ["slashed-zero"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-figure": ["lining-nums", "oldstyle-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-spacing": ["proportional-nums", "tabular-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-fraction": ["diagonal-fractions", "stacked-fractions"],
      /**
       * Letter Spacing
       * @see https://tailwindcss.com/docs/letter-spacing
       */
      tracking: [{
        tracking: ["tighter", "tight", "normal", "wide", "wider", "widest", dt]
      }],
      /**
       * Line Clamp
       * @see https://tailwindcss.com/docs/line-clamp
       */
      "line-clamp": [{
        "line-clamp": ["none", Yf, V2]
      }],
      /**
       * Line Height
       * @see https://tailwindcss.com/docs/line-height
       */
      leading: [{
        leading: ["none", "tight", "snug", "normal", "relaxed", "loose", Ga, dt]
      }],
      /**
       * List Style Image
       * @see https://tailwindcss.com/docs/list-style-image
       */
      "list-image": [{
        "list-image": ["none", dt]
      }],
      /**
       * List Style Type
       * @see https://tailwindcss.com/docs/list-style-type
       */
      "list-style-type": [{
        list: ["none", "disc", "decimal", dt]
      }],
      /**
       * List Style Position
       * @see https://tailwindcss.com/docs/list-style-position
       */
      "list-style-position": [{
        list: ["inside", "outside"]
      }],
      /**
       * Placeholder Color
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/placeholder-color
       */
      "placeholder-color": [{
        placeholder: [e]
      }],
      /**
       * Placeholder Opacity
       * @see https://tailwindcss.com/docs/placeholder-opacity
       */
      "placeholder-opacity": [{
        "placeholder-opacity": [w]
      }],
      /**
       * Text Alignment
       * @see https://tailwindcss.com/docs/text-align
       */
      "text-alignment": [{
        text: ["left", "center", "right", "justify", "start", "end"]
      }],
      /**
       * Text Color
       * @see https://tailwindcss.com/docs/text-color
       */
      "text-color": [{
        text: [e]
      }],
      /**
       * Text Opacity
       * @see https://tailwindcss.com/docs/text-opacity
       */
      "text-opacity": [{
        "text-opacity": [w]
      }],
      /**
       * Text Decoration
       * @see https://tailwindcss.com/docs/text-decoration
       */
      "text-decoration": ["underline", "overline", "line-through", "no-underline"],
      /**
       * Text Decoration Style
       * @see https://tailwindcss.com/docs/text-decoration-style
       */
      "text-decoration-style": [{
        decoration: [...F(), "wavy"]
      }],
      /**
       * Text Decoration Thickness
       * @see https://tailwindcss.com/docs/text-decoration-thickness
       */
      "text-decoration-thickness": [{
        decoration: ["auto", "from-font", Ga, Gs]
      }],
      /**
       * Text Underline Offset
       * @see https://tailwindcss.com/docs/text-underline-offset
       */
      "underline-offset": [{
        "underline-offset": ["auto", Ga, dt]
      }],
      /**
       * Text Decoration Color
       * @see https://tailwindcss.com/docs/text-decoration-color
       */
      "text-decoration-color": [{
        decoration: [e]
      }],
      /**
       * Text Transform
       * @see https://tailwindcss.com/docs/text-transform
       */
      "text-transform": ["uppercase", "lowercase", "capitalize", "normal-case"],
      /**
       * Text Overflow
       * @see https://tailwindcss.com/docs/text-overflow
       */
      "text-overflow": ["truncate", "text-ellipsis", "text-clip"],
      /**
       * Text Wrap
       * @see https://tailwindcss.com/docs/text-wrap
       */
      "text-wrap": [{
        text: ["wrap", "nowrap", "balance", "pretty"]
      }],
      /**
       * Text Indent
       * @see https://tailwindcss.com/docs/text-indent
       */
      indent: [{
        indent: I()
      }],
      /**
       * Vertical Alignment
       * @see https://tailwindcss.com/docs/vertical-align
       */
      "vertical-align": [{
        align: ["baseline", "top", "middle", "bottom", "text-top", "text-bottom", "sub", "super", dt]
      }],
      /**
       * Whitespace
       * @see https://tailwindcss.com/docs/whitespace
       */
      whitespace: [{
        whitespace: ["normal", "nowrap", "pre", "pre-line", "pre-wrap", "break-spaces"]
      }],
      /**
       * Word Break
       * @see https://tailwindcss.com/docs/word-break
       */
      break: [{
        break: ["normal", "words", "all", "keep"]
      }],
      /**
       * Hyphens
       * @see https://tailwindcss.com/docs/hyphens
       */
      hyphens: [{
        hyphens: ["none", "manual", "auto"]
      }],
      /**
       * Content
       * @see https://tailwindcss.com/docs/content
       */
      content: [{
        content: ["none", dt]
      }],
      // Backgrounds
      /**
       * Background Attachment
       * @see https://tailwindcss.com/docs/background-attachment
       */
      "bg-attachment": [{
        bg: ["fixed", "local", "scroll"]
      }],
      /**
       * Background Clip
       * @see https://tailwindcss.com/docs/background-clip
       */
      "bg-clip": [{
        "bg-clip": ["border", "padding", "content", "text"]
      }],
      /**
       * Background Opacity
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/background-opacity
       */
      "bg-opacity": [{
        "bg-opacity": [w]
      }],
      /**
       * Background Origin
       * @see https://tailwindcss.com/docs/background-origin
       */
      "bg-origin": [{
        "bg-origin": ["border", "padding", "content"]
      }],
      /**
       * Background Position
       * @see https://tailwindcss.com/docs/background-position
       */
      "bg-position": [{
        bg: [...D(), H$e]
      }],
      /**
       * Background Repeat
       * @see https://tailwindcss.com/docs/background-repeat
       */
      "bg-repeat": [{
        bg: ["no-repeat", {
          repeat: ["", "x", "y", "round", "space"]
        }]
      }],
      /**
       * Background Size
       * @see https://tailwindcss.com/docs/background-size
       */
      "bg-size": [{
        bg: ["auto", "cover", "contain", Y$e]
      }],
      /**
       * Background Image
       * @see https://tailwindcss.com/docs/background-image
       */
      "bg-image": [{
        bg: ["none", {
          "gradient-to": ["t", "tr", "r", "br", "b", "bl", "l", "tl"]
        }, q$e]
      }],
      /**
       * Background Color
       * @see https://tailwindcss.com/docs/background-color
       */
      "bg-color": [{
        bg: [e]
      }],
      /**
       * Gradient Color Stops From Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-from-pos": [{
        from: [x]
      }],
      /**
       * Gradient Color Stops Via Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-via-pos": [{
        via: [x]
      }],
      /**
       * Gradient Color Stops To Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-to-pos": [{
        to: [x]
      }],
      /**
       * Gradient Color Stops From
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-from": [{
        from: [v]
      }],
      /**
       * Gradient Color Stops Via
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-via": [{
        via: [v]
      }],
      /**
       * Gradient Color Stops To
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-to": [{
        to: [v]
      }],
      // Borders
      /**
       * Border Radius
       * @see https://tailwindcss.com/docs/border-radius
       */
      rounded: [{
        rounded: [a]
      }],
      /**
       * Border Radius Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-s": [{
        "rounded-s": [a]
      }],
      /**
       * Border Radius End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-e": [{
        "rounded-e": [a]
      }],
      /**
       * Border Radius Top
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-t": [{
        "rounded-t": [a]
      }],
      /**
       * Border Radius Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-r": [{
        "rounded-r": [a]
      }],
      /**
       * Border Radius Bottom
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-b": [{
        "rounded-b": [a]
      }],
      /**
       * Border Radius Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-l": [{
        "rounded-l": [a]
      }],
      /**
       * Border Radius Start Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-ss": [{
        "rounded-ss": [a]
      }],
      /**
       * Border Radius Start End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-se": [{
        "rounded-se": [a]
      }],
      /**
       * Border Radius End End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-ee": [{
        "rounded-ee": [a]
      }],
      /**
       * Border Radius End Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-es": [{
        "rounded-es": [a]
      }],
      /**
       * Border Radius Top Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-tl": [{
        "rounded-tl": [a]
      }],
      /**
       * Border Radius Top Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-tr": [{
        "rounded-tr": [a]
      }],
      /**
       * Border Radius Bottom Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-br": [{
        "rounded-br": [a]
      }],
      /**
       * Border Radius Bottom Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-bl": [{
        "rounded-bl": [a]
      }],
      /**
       * Border Width
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w": [{
        border: [s]
      }],
      /**
       * Border Width X
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-x": [{
        "border-x": [s]
      }],
      /**
       * Border Width Y
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-y": [{
        "border-y": [s]
      }],
      /**
       * Border Width Start
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-s": [{
        "border-s": [s]
      }],
      /**
       * Border Width End
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-e": [{
        "border-e": [s]
      }],
      /**
       * Border Width Top
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-t": [{
        "border-t": [s]
      }],
      /**
       * Border Width Right
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-r": [{
        "border-r": [s]
      }],
      /**
       * Border Width Bottom
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-b": [{
        "border-b": [s]
      }],
      /**
       * Border Width Left
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-l": [{
        "border-l": [s]
      }],
      /**
       * Border Opacity
       * @see https://tailwindcss.com/docs/border-opacity
       */
      "border-opacity": [{
        "border-opacity": [w]
      }],
      /**
       * Border Style
       * @see https://tailwindcss.com/docs/border-style
       */
      "border-style": [{
        border: [...F(), "hidden"]
      }],
      /**
       * Divide Width X
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-x": [{
        "divide-x": [s]
      }],
      /**
       * Divide Width X Reverse
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-x-reverse": ["divide-x-reverse"],
      /**
       * Divide Width Y
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-y": [{
        "divide-y": [s]
      }],
      /**
       * Divide Width Y Reverse
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-y-reverse": ["divide-y-reverse"],
      /**
       * Divide Opacity
       * @see https://tailwindcss.com/docs/divide-opacity
       */
      "divide-opacity": [{
        "divide-opacity": [w]
      }],
      /**
       * Divide Style
       * @see https://tailwindcss.com/docs/divide-style
       */
      "divide-style": [{
        divide: F()
      }],
      /**
       * Border Color
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color": [{
        border: [o]
      }],
      /**
       * Border Color X
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-x": [{
        "border-x": [o]
      }],
      /**
       * Border Color Y
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-y": [{
        "border-y": [o]
      }],
      /**
       * Border Color S
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-s": [{
        "border-s": [o]
      }],
      /**
       * Border Color E
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-e": [{
        "border-e": [o]
      }],
      /**
       * Border Color Top
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-t": [{
        "border-t": [o]
      }],
      /**
       * Border Color Right
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-r": [{
        "border-r": [o]
      }],
      /**
       * Border Color Bottom
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-b": [{
        "border-b": [o]
      }],
      /**
       * Border Color Left
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-l": [{
        "border-l": [o]
      }],
      /**
       * Divide Color
       * @see https://tailwindcss.com/docs/divide-color
       */
      "divide-color": [{
        divide: [o]
      }],
      /**
       * Outline Style
       * @see https://tailwindcss.com/docs/outline-style
       */
      "outline-style": [{
        outline: ["", ...F()]
      }],
      /**
       * Outline Offset
       * @see https://tailwindcss.com/docs/outline-offset
       */
      "outline-offset": [{
        "outline-offset": [Ga, dt]
      }],
      /**
       * Outline Width
       * @see https://tailwindcss.com/docs/outline-width
       */
      "outline-w": [{
        outline: [Ga, Gs]
      }],
      /**
       * Outline Color
       * @see https://tailwindcss.com/docs/outline-color
       */
      "outline-color": [{
        outline: [e]
      }],
      /**
       * Ring Width
       * @see https://tailwindcss.com/docs/ring-width
       */
      "ring-w": [{
        ring: te()
      }],
      /**
       * Ring Width Inset
       * @see https://tailwindcss.com/docs/ring-width
       */
      "ring-w-inset": ["ring-inset"],
      /**
       * Ring Color
       * @see https://tailwindcss.com/docs/ring-color
       */
      "ring-color": [{
        ring: [e]
      }],
      /**
       * Ring Opacity
       * @see https://tailwindcss.com/docs/ring-opacity
       */
      "ring-opacity": [{
        "ring-opacity": [w]
      }],
      /**
       * Ring Offset Width
       * @see https://tailwindcss.com/docs/ring-offset-width
       */
      "ring-offset-w": [{
        "ring-offset": [Ga, Gs]
      }],
      /**
       * Ring Offset Color
       * @see https://tailwindcss.com/docs/ring-offset-color
       */
      "ring-offset-color": [{
        "ring-offset": [e]
      }],
      // Effects
      /**
       * Box Shadow
       * @see https://tailwindcss.com/docs/box-shadow
       */
      shadow: [{
        shadow: ["", "inner", "none", qs, B$e]
      }],
      /**
       * Box Shadow Color
       * @see https://tailwindcss.com/docs/box-shadow-color
       */
      "shadow-color": [{
        shadow: [Pm]
      }],
      /**
       * Opacity
       * @see https://tailwindcss.com/docs/opacity
       */
      opacity: [{
        opacity: [w]
      }],
      /**
       * Mix Blend Mode
       * @see https://tailwindcss.com/docs/mix-blend-mode
       */
      "mix-blend": [{
        "mix-blend": [...R(), "plus-lighter", "plus-darker"]
      }],
      /**
       * Background Blend Mode
       * @see https://tailwindcss.com/docs/background-blend-mode
       */
      "bg-blend": [{
        "bg-blend": R()
      }],
      // Filters
      /**
       * Filter
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/filter
       */
      filter: [{
        filter: ["", "none"]
      }],
      /**
       * Blur
       * @see https://tailwindcss.com/docs/blur
       */
      blur: [{
        blur: [r]
      }],
      /**
       * Brightness
       * @see https://tailwindcss.com/docs/brightness
       */
      brightness: [{
        brightness: [n]
      }],
      /**
       * Contrast
       * @see https://tailwindcss.com/docs/contrast
       */
      contrast: [{
        contrast: [l]
      }],
      /**
       * Drop Shadow
       * @see https://tailwindcss.com/docs/drop-shadow
       */
      "drop-shadow": [{
        "drop-shadow": ["", "none", qs, dt]
      }],
      /**
       * Grayscale
       * @see https://tailwindcss.com/docs/grayscale
       */
      grayscale: [{
        grayscale: [c]
      }],
      /**
       * Hue Rotate
       * @see https://tailwindcss.com/docs/hue-rotate
       */
      "hue-rotate": [{
        "hue-rotate": [u]
      }],
      /**
       * Invert
       * @see https://tailwindcss.com/docs/invert
       */
      invert: [{
        invert: [f]
      }],
      /**
       * Saturate
       * @see https://tailwindcss.com/docs/saturate
       */
      saturate: [{
        saturate: [E]
      }],
      /**
       * Sepia
       * @see https://tailwindcss.com/docs/sepia
       */
      sepia: [{
        sepia: [h]
      }],
      /**
       * Backdrop Filter
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/backdrop-filter
       */
      "backdrop-filter": [{
        "backdrop-filter": ["", "none"]
      }],
      /**
       * Backdrop Blur
       * @see https://tailwindcss.com/docs/backdrop-blur
       */
      "backdrop-blur": [{
        "backdrop-blur": [r]
      }],
      /**
       * Backdrop Brightness
       * @see https://tailwindcss.com/docs/backdrop-brightness
       */
      "backdrop-brightness": [{
        "backdrop-brightness": [n]
      }],
      /**
       * Backdrop Contrast
       * @see https://tailwindcss.com/docs/backdrop-contrast
       */
      "backdrop-contrast": [{
        "backdrop-contrast": [l]
      }],
      /**
       * Backdrop Grayscale
       * @see https://tailwindcss.com/docs/backdrop-grayscale
       */
      "backdrop-grayscale": [{
        "backdrop-grayscale": [c]
      }],
      /**
       * Backdrop Hue Rotate
       * @see https://tailwindcss.com/docs/backdrop-hue-rotate
       */
      "backdrop-hue-rotate": [{
        "backdrop-hue-rotate": [u]
      }],
      /**
       * Backdrop Invert
       * @see https://tailwindcss.com/docs/backdrop-invert
       */
      "backdrop-invert": [{
        "backdrop-invert": [f]
      }],
      /**
       * Backdrop Opacity
       * @see https://tailwindcss.com/docs/backdrop-opacity
       */
      "backdrop-opacity": [{
        "backdrop-opacity": [w]
      }],
      /**
       * Backdrop Saturate
       * @see https://tailwindcss.com/docs/backdrop-saturate
       */
      "backdrop-saturate": [{
        "backdrop-saturate": [E]
      }],
      /**
       * Backdrop Sepia
       * @see https://tailwindcss.com/docs/backdrop-sepia
       */
      "backdrop-sepia": [{
        "backdrop-sepia": [h]
      }],
      // Tables
      /**
       * Border Collapse
       * @see https://tailwindcss.com/docs/border-collapse
       */
      "border-collapse": [{
        border: ["collapse", "separate"]
      }],
      /**
       * Border Spacing
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing": [{
        "border-spacing": [i]
      }],
      /**
       * Border Spacing X
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing-x": [{
        "border-spacing-x": [i]
      }],
      /**
       * Border Spacing Y
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing-y": [{
        "border-spacing-y": [i]
      }],
      /**
       * Table Layout
       * @see https://tailwindcss.com/docs/table-layout
       */
      "table-layout": [{
        table: ["auto", "fixed"]
      }],
      /**
       * Caption Side
       * @see https://tailwindcss.com/docs/caption-side
       */
      caption: [{
        caption: ["top", "bottom"]
      }],
      // Transitions and Animation
      /**
       * Tranisition Property
       * @see https://tailwindcss.com/docs/transition-property
       */
      transition: [{
        transition: ["none", "all", "", "colors", "opacity", "shadow", "transform", dt]
      }],
      /**
       * Transition Duration
       * @see https://tailwindcss.com/docs/transition-duration
       */
      duration: [{
        duration: d()
      }],
      /**
       * Transition Timing Function
       * @see https://tailwindcss.com/docs/transition-timing-function
       */
      ease: [{
        ease: ["linear", "in", "out", "in-out", dt]
      }],
      /**
       * Transition Delay
       * @see https://tailwindcss.com/docs/transition-delay
       */
      delay: [{
        delay: d()
      }],
      /**
       * Animation
       * @see https://tailwindcss.com/docs/animation
       */
      animate: [{
        animate: ["none", "spin", "ping", "pulse", "bounce", dt]
      }],
      // Transforms
      /**
       * Transform
       * @see https://tailwindcss.com/docs/transform
       */
      transform: [{
        transform: ["", "gpu", "none"]
      }],
      /**
       * Scale
       * @see https://tailwindcss.com/docs/scale
       */
      scale: [{
        scale: [S]
      }],
      /**
       * Scale X
       * @see https://tailwindcss.com/docs/scale
       */
      "scale-x": [{
        "scale-x": [S]
      }],
      /**
       * Scale Y
       * @see https://tailwindcss.com/docs/scale
       */
      "scale-y": [{
        "scale-y": [S]
      }],
      /**
       * Rotate
       * @see https://tailwindcss.com/docs/rotate
       */
      rotate: [{
        rotate: [Sm, dt]
      }],
      /**
       * Translate X
       * @see https://tailwindcss.com/docs/translate
       */
      "translate-x": [{
        "translate-x": [Q]
      }],
      /**
       * Translate Y
       * @see https://tailwindcss.com/docs/translate
       */
      "translate-y": [{
        "translate-y": [Q]
      }],
      /**
       * Skew X
       * @see https://tailwindcss.com/docs/skew
       */
      "skew-x": [{
        "skew-x": [U]
      }],
      /**
       * Skew Y
       * @see https://tailwindcss.com/docs/skew
       */
      "skew-y": [{
        "skew-y": [U]
      }],
      /**
       * Transform Origin
       * @see https://tailwindcss.com/docs/transform-origin
       */
      "transform-origin": [{
        origin: ["center", "top", "top-right", "right", "bottom-right", "bottom", "bottom-left", "left", "top-left", dt]
      }],
      // Interactivity
      /**
       * Accent Color
       * @see https://tailwindcss.com/docs/accent-color
       */
      accent: [{
        accent: ["auto", e]
      }],
      /**
       * Appearance
       * @see https://tailwindcss.com/docs/appearance
       */
      appearance: [{
        appearance: ["none", "auto"]
      }],
      /**
       * Cursor
       * @see https://tailwindcss.com/docs/cursor
       */
      cursor: [{
        cursor: ["auto", "default", "pointer", "wait", "text", "move", "help", "not-allowed", "none", "context-menu", "progress", "cell", "crosshair", "vertical-text", "alias", "copy", "no-drop", "grab", "grabbing", "all-scroll", "col-resize", "row-resize", "n-resize", "e-resize", "s-resize", "w-resize", "ne-resize", "nw-resize", "se-resize", "sw-resize", "ew-resize", "ns-resize", "nesw-resize", "nwse-resize", "zoom-in", "zoom-out", dt]
      }],
      /**
       * Caret Color
       * @see https://tailwindcss.com/docs/just-in-time-mode#caret-color-utilities
       */
      "caret-color": [{
        caret: [e]
      }],
      /**
       * Pointer Events
       * @see https://tailwindcss.com/docs/pointer-events
       */
      "pointer-events": [{
        "pointer-events": ["none", "auto"]
      }],
      /**
       * Resize
       * @see https://tailwindcss.com/docs/resize
       */
      resize: [{
        resize: ["none", "y", "x", ""]
      }],
      /**
       * Scroll Behavior
       * @see https://tailwindcss.com/docs/scroll-behavior
       */
      "scroll-behavior": [{
        scroll: ["auto", "smooth"]
      }],
      /**
       * Scroll Margin
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-m": [{
        "scroll-m": I()
      }],
      /**
       * Scroll Margin X
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mx": [{
        "scroll-mx": I()
      }],
      /**
       * Scroll Margin Y
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-my": [{
        "scroll-my": I()
      }],
      /**
       * Scroll Margin Start
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-ms": [{
        "scroll-ms": I()
      }],
      /**
       * Scroll Margin End
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-me": [{
        "scroll-me": I()
      }],
      /**
       * Scroll Margin Top
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mt": [{
        "scroll-mt": I()
      }],
      /**
       * Scroll Margin Right
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mr": [{
        "scroll-mr": I()
      }],
      /**
       * Scroll Margin Bottom
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mb": [{
        "scroll-mb": I()
      }],
      /**
       * Scroll Margin Left
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-ml": [{
        "scroll-ml": I()
      }],
      /**
       * Scroll Padding
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-p": [{
        "scroll-p": I()
      }],
      /**
       * Scroll Padding X
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-px": [{
        "scroll-px": I()
      }],
      /**
       * Scroll Padding Y
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-py": [{
        "scroll-py": I()
      }],
      /**
       * Scroll Padding Start
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-ps": [{
        "scroll-ps": I()
      }],
      /**
       * Scroll Padding End
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pe": [{
        "scroll-pe": I()
      }],
      /**
       * Scroll Padding Top
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pt": [{
        "scroll-pt": I()
      }],
      /**
       * Scroll Padding Right
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pr": [{
        "scroll-pr": I()
      }],
      /**
       * Scroll Padding Bottom
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pb": [{
        "scroll-pb": I()
      }],
      /**
       * Scroll Padding Left
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pl": [{
        "scroll-pl": I()
      }],
      /**
       * Scroll Snap Align
       * @see https://tailwindcss.com/docs/scroll-snap-align
       */
      "snap-align": [{
        snap: ["start", "end", "center", "align-none"]
      }],
      /**
       * Scroll Snap Stop
       * @see https://tailwindcss.com/docs/scroll-snap-stop
       */
      "snap-stop": [{
        snap: ["normal", "always"]
      }],
      /**
       * Scroll Snap Type
       * @see https://tailwindcss.com/docs/scroll-snap-type
       */
      "snap-type": [{
        snap: ["none", "x", "y", "both"]
      }],
      /**
       * Scroll Snap Type Strictness
       * @see https://tailwindcss.com/docs/scroll-snap-type
       */
      "snap-strictness": [{
        snap: ["mandatory", "proximity"]
      }],
      /**
       * Touch Action
       * @see https://tailwindcss.com/docs/touch-action
       */
      touch: [{
        touch: ["auto", "none", "manipulation"]
      }],
      /**
       * Touch Action X
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-x": [{
        "touch-pan": ["x", "left", "right"]
      }],
      /**
       * Touch Action Y
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-y": [{
        "touch-pan": ["y", "up", "down"]
      }],
      /**
       * Touch Action Pinch Zoom
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-pz": ["touch-pinch-zoom"],
      /**
       * User Select
       * @see https://tailwindcss.com/docs/user-select
       */
      select: [{
        select: ["none", "text", "all", "auto"]
      }],
      /**
       * Will Change
       * @see https://tailwindcss.com/docs/will-change
       */
      "will-change": [{
        "will-change": ["auto", "scroll", "contents", "transform", dt]
      }],
      // SVG
      /**
       * Fill
       * @see https://tailwindcss.com/docs/fill
       */
      fill: [{
        fill: [e, "none"]
      }],
      /**
       * Stroke Width
       * @see https://tailwindcss.com/docs/stroke-width
       */
      "stroke-w": [{
        stroke: [Ga, Gs, V2]
      }],
      /**
       * Stroke
       * @see https://tailwindcss.com/docs/stroke
       */
      stroke: [{
        stroke: [e, "none"]
      }],
      // Accessibility
      /**
       * Screen Readers
       * @see https://tailwindcss.com/docs/screen-readers
       */
      sr: ["sr-only", "not-sr-only"],
      /**
       * Forced Color Adjust
       * @see https://tailwindcss.com/docs/forced-color-adjust
       */
      "forced-color-adjust": [{
        "forced-color-adjust": ["auto", "none"]
      }]
    },
    conflictingClassGroups: {
      overflow: ["overflow-x", "overflow-y"],
      overscroll: ["overscroll-x", "overscroll-y"],
      inset: ["inset-x", "inset-y", "start", "end", "top", "right", "bottom", "left"],
      "inset-x": ["right", "left"],
      "inset-y": ["top", "bottom"],
      flex: ["basis", "grow", "shrink"],
      gap: ["gap-x", "gap-y"],
      p: ["px", "py", "ps", "pe", "pt", "pr", "pb", "pl"],
      px: ["pr", "pl"],
      py: ["pt", "pb"],
      m: ["mx", "my", "ms", "me", "mt", "mr", "mb", "ml"],
      mx: ["mr", "ml"],
      my: ["mt", "mb"],
      size: ["w", "h"],
      "font-size": ["leading"],
      "fvn-normal": ["fvn-ordinal", "fvn-slashed-zero", "fvn-figure", "fvn-spacing", "fvn-fraction"],
      "fvn-ordinal": ["fvn-normal"],
      "fvn-slashed-zero": ["fvn-normal"],
      "fvn-figure": ["fvn-normal"],
      "fvn-spacing": ["fvn-normal"],
      "fvn-fraction": ["fvn-normal"],
      "line-clamp": ["display", "overflow"],
      rounded: ["rounded-s", "rounded-e", "rounded-t", "rounded-r", "rounded-b", "rounded-l", "rounded-ss", "rounded-se", "rounded-ee", "rounded-es", "rounded-tl", "rounded-tr", "rounded-br", "rounded-bl"],
      "rounded-s": ["rounded-ss", "rounded-es"],
      "rounded-e": ["rounded-se", "rounded-ee"],
      "rounded-t": ["rounded-tl", "rounded-tr"],
      "rounded-r": ["rounded-tr", "rounded-br"],
      "rounded-b": ["rounded-br", "rounded-bl"],
      "rounded-l": ["rounded-tl", "rounded-bl"],
      "border-spacing": ["border-spacing-x", "border-spacing-y"],
      "border-w": ["border-w-s", "border-w-e", "border-w-t", "border-w-r", "border-w-b", "border-w-l"],
      "border-w-x": ["border-w-r", "border-w-l"],
      "border-w-y": ["border-w-t", "border-w-b"],
      "border-color": ["border-color-s", "border-color-e", "border-color-t", "border-color-r", "border-color-b", "border-color-l"],
      "border-color-x": ["border-color-r", "border-color-l"],
      "border-color-y": ["border-color-t", "border-color-b"],
      "scroll-m": ["scroll-mx", "scroll-my", "scroll-ms", "scroll-me", "scroll-mt", "scroll-mr", "scroll-mb", "scroll-ml"],
      "scroll-mx": ["scroll-mr", "scroll-ml"],
      "scroll-my": ["scroll-mt", "scroll-mb"],
      "scroll-p": ["scroll-px", "scroll-py", "scroll-ps", "scroll-pe", "scroll-pt", "scroll-pr", "scroll-pb", "scroll-pl"],
      "scroll-px": ["scroll-pr", "scroll-pl"],
      "scroll-py": ["scroll-pt", "scroll-pb"],
      touch: ["touch-x", "touch-y", "touch-pz"],
      "touch-x": ["touch"],
      "touch-y": ["touch"],
      "touch-pz": ["touch"]
    },
    conflictingClassGroupModifiers: {
      "font-size": ["leading"]
    }
  };
}, _7 = /* @__PURE__ */ T$e(Q$e), Z$e = ({
  children: e,
  content: t,
  position: r,
  className: n,
  delay: o = 300,
  closeOnClick: a = !1,
  imageSrc: i,
  description: s,
  interactive: l = !1
}) => {
  const [c, u] = _e(!1), f = ie(null), p = ie(null), [v, x] = _e(!1), [b, m] = _e(!1), w = () => f.current ? f.current.querySelectorAll('[data-headlessui-state="open"]').length > 0 : !1;
  Ne(() => {
    const S = new MutationObserver((h) => {
      h.forEach((U) => {
        U.type === "attributes" && U.attributeName === "data-headlessui-state" && U.target.getAttribute("data-headlessui-state") === "open" && u(!1);
      });
    });
    return f.current && S.observe(f.current, {
      attributes: !0,
      subtree: !0,
      attributeFilter: ["data-headlessui-state"]
    }), () => {
      S.disconnect();
    };
  }, []);
  const $ = () => {
    if (f.current) {
      const S = f.current.getBoundingClientRect();
      switch (r) {
        case "top":
          return {
            bottom: S.height + 10,
            left: "50%",
            transform: "translateX(-50%)"
          };
        case "bottom":
          return {
            top: S.height + 10,
            left: "50%",
            transform: "translateX(-50%)"
          };
        case "left":
          return {
            right: S.width + 10,
            top: "50%",
            transform: "translateY(-50%)"
          };
        case "right":
          return {
            left: S.width + 10,
            top: "50%",
            transform: "translateY(-50%)"
          };
        default:
          return {};
      }
    }
    return {};
  }, E = (S) => {
    a && (u(!1), S.stopPropagation());
  };
  return Ne(() => {
    w() || u(v || l && b);
  }, [v, b, l]), /* @__PURE__ */ Pe(
    "div",
    {
      ref: f,
      onMouseEnter: () => {
        x(!0), w() || u(!0);
      },
      onMouseLeave: () => {
        x(!1), l || u(!1);
      },
      onClick: E,
      className: "relative",
      children: [
        e,
        /* @__PURE__ */ q(
          w$e,
          {
            show: c,
            enter: _7(
              "transition ease-out duration-200",
              o ? `delay-[${o}ms]` : "delay-[300ms]"
            ),
            enterFrom: "opacity-0",
            enterTo: "opacity-100",
            leave: "transition ease-in duration-150",
            leaveFrom: "opacity-100",
            leaveTo: "opacity-0",
            children: /* @__PURE__ */ q(
              "div",
              {
                ref: p,
                onMouseEnter: () => l && m(!0),
                onMouseLeave: () => l && m(!1),
                style: {
                  ...$(),
                  transitionDelay: `${o}ms`,
                  transitionProperty: "opacity",
                  transitionDuration: "200ms",
                  transitionTimingFunction: "ease-out"
                },
                className: _7(
                  "absolute z-10 w-max rounded-lg bg-ui-controls px-2.5 py-1.5 text-[13px] font-medium text-base-fg shadow-xl border border-ui-panel-border",
                  l ? "pointer-events-auto" : "pointer-events-none",
                  n || ""
                ),
                children: /* @__PURE__ */ Pe("div", { className: "flex flex-col gap-1", children: [
                  t,
                  i && /* @__PURE__ */ q(
                    "img",
                    {
                      src: i,
                      alt: "tooltip",
                      className: "mb-1 aspect-square w-56 rounded-md"
                    }
                  ),
                  s && /* @__PURE__ */ q("p", { className: "text-sm text-base-fg font-normal", children: s })
                ] })
              }
            )
          }
        )
      ]
    }
  );
};
function e5e({
  isOpen: e,
  onClose: t,
  onCloseGallery: r,
  imageUrl: n,
  imageAlt: o = "",
  onImageError: a,
  title: i,
  createdAt: s,
  additionalInfo: l,
  downloadUrl: c,
  // cdn url of the image
  mediaId: u,
  // media id of the image
  onDownloadClicked: f,
  onAddToSceneClicked: p,
  mediaClass: v,
  onEditClicked: x
}) {
  const b = n ? n + "?cors=1" : "", [m, w] = ce.useState(!1), [$, E] = ce.useState(null), [S, h] = ce.useState(!1), [U, G] = ce.useState(!1), [Q, Z] = ce.useState(!1), [X, J] = ce.useState(null), [I, te] = ce.useState(null), [V, D] = ce.useState(null);
  return ce.useEffect(() => {
    w(!1);
  }, [n]), ce.useEffect(() => {
    (async () => {
      var F;
      if (!u) {
        E(null), G(!1), J(null), te(null), D(null);
        return;
      }
      h(!0);
      try {
        const R = await new G0e().GetMediaFileByToken({
          mediaFileToken: u
        });
        if (R.success && (F = R.data) != null && F.maybe_prompt_token) {
          G(!0);
          const H = await new q0e().GetPromptsByToken({
            token: R.data.maybe_prompt_token
          });
          if (H.success && H.data) {
            const B = H.data;
            E(B.maybe_positive_prompt || null), J(B.maybe_generation_provider || null), te(B.maybe_model_type || null), D(B.maybe_context_images || null);
          } else
            E(null), J(null), te(null), D(null);
        } else
          G(!1), E(null), J(null), te(null), D(null);
      } catch (R) {
        console.error("Error fetching prompt:", R), G(!1), E(null), J(null), te(null), D(null);
      } finally {
        h(!1);
      }
    })();
  }, [u]), /* @__PURE__ */ Pe(
    gd,
    {
      isOpen: e,
      onClose: t,
      className: "rounded-xl bg-[#2C2C2C] h-[75vh] w-[60vw] max-w-screen min-w-[35vw] min-h-[40vh] p-4",
      draggable: !0,
      allowBackgroundInteraction: !0,
      showClose: !0,
      closeOnOutsideClick: !1,
      resizable: !0,
      backdropClassName: "pointer-events-none hidden",
      expandable: !0,
      children: [
        /* @__PURE__ */ q(gd.DragHandle, { children: /* @__PURE__ */ q("div", { className: "absolute left-0 top-0 z-20 h-12 w-full cursor-move rounded-t-xl" }) }),
        /* @__PURE__ */ Pe("div", { className: "grid h-full grid-cols-3 gap-6", children: [
          /* @__PURE__ */ Pe("div", { className: "col-span-2 relative flex h-full items-center justify-center overflow-hidden rounded-l-xl bg-[#1A1A1A]", children: [
            n ? v === "video" ? /* @__PURE__ */ Pe(
              "video",
              {
                controls: !0,
                loop: !0,
                autoPlay: !0,
                className: "h-full w-full object-contain",
                onLoadedData: () => w(!0),
                children: [
                  /* @__PURE__ */ q("source", { src: n, type: "video/mp4" }),
                  "Your browser does not support the video tag."
                ]
              }
            ) : /* @__PURE__ */ q(
              "img",
              {
                "data-lightbox-modal": "true",
                src: b,
                alt: o,
                className: "h-full w-full object-contain",
                onError: a,
                onLoad: () => w(!0)
              }
            ) : /* @__PURE__ */ q("div", { className: "flex h-full w-full items-center justify-center bg-gray-800", children: /* @__PURE__ */ q("span", { className: "text-white/60", children: "Image not available" }) }),
            !m && n && /* @__PURE__ */ q("div", { className: "absolute inset-0 bg-[#1A1A1A] flex items-center justify-center", children: /* @__PURE__ */ q(E9, { className: "h-12 w-12 text-white" }) })
          ] }),
          /* @__PURE__ */ Pe("div", { className: "flex h-full flex-col", children: [
            /* @__PURE__ */ Pe("div", { className: "flex-1 space-y-5", children: [
              s && /* @__PURE__ */ Pe("div", { className: "space-y-1.5", children: [
                /* @__PURE__ */ q("div", { className: "text-sm font-medium text-white/90", children: "Created" }),
                /* @__PURE__ */ Pe("div", { className: "text-sm text-white/70", children: [
                  w9(s).format("MMM D, YYYY"),
                  " at",
                  " ",
                  w9(s).format("hh:mm A")
                ] })
              ] }),
              U && /* @__PURE__ */ Pe(Vt, { children: [
                /* @__PURE__ */ Pe("div", { className: "relative space-y-1.5", children: [
                  /* @__PURE__ */ q("div", { className: "text-sm font-medium text-white/90", children: "Prompt" }),
                  /* @__PURE__ */ q(
                    "div",
                    {
                      className: k7(
                        "relative text-sm text-white/90 break-words bg-black/20 p-3 rounded-lg cursor-pointer transition-colors duration-100 leading-relaxed",
                        Q && "bg-black/30"
                      ),
                      onMouseEnter: () => Z(!0),
                      onMouseLeave: () => Z(!1),
                      onClick: () => {
                        $ && (navigator.clipboard.writeText($).catch(() => {
                        }), Axe.success("Prompt copied"));
                      },
                      children: S ? /* @__PURE__ */ Pe("div", { className: "flex items-center gap-2", children: [
                        /* @__PURE__ */ q(E9, { className: "h-4 w-4" }),
                        /* @__PURE__ */ q("span", { className: "text-sm text-white/80", children: "Loading prompt..." })
                      ] }) : $ || /* @__PURE__ */ q("span", { className: "text-sm text-white/90", children: "No prompt" })
                    }
                  ),
                  !S && /* @__PURE__ */ q(
                    "div",
                    {
                      className: k7(
                        "pointer-events-none absolute inset-0 flex items-end justify-end opacity-0 transition-opacity duration-50",
                        Q && "opacity-100"
                      ),
                      children: /* @__PURE__ */ Pe("div", { className: "flex items-center gap-1 text-xs text-white/80 bg-black/80 backdrop-blur-md p-1.5 rounded-tl-lg rounded-br-lg", children: [
                        /* @__PURE__ */ q(tC, { icon: r0e, className: "h-3 w-3" }),
                        /* @__PURE__ */ q("span", { children: "Copy prompt" })
                      ] })
                    }
                  )
                ] }),
                V && V.length > 0 && /* @__PURE__ */ Pe("div", { className: "space-y-1.5", children: [
                  /* @__PURE__ */ q("div", { className: "text-sm font-medium text-white/90", children: "Reference Images" }),
                  /* @__PURE__ */ q("div", { className: "grid grid-cols-6 gap-2", children: V.map((F, R) => {
                    const H = F.media_links.maybe_thumbnail_template ? F.media_links.maybe_thumbnail_template.replace(
                      "{WIDTH}",
                      "128"
                    ) : F.media_links.cdn_url, B = F.media_links.maybe_thumbnail_template ? F.media_links.maybe_thumbnail_template.replace(
                      "{WIDTH}",
                      "512"
                    ) : F.media_links.cdn_url;
                    return (
                      // Hover preview
                      /* @__PURE__ */ q(
                        Z$e,
                        {
                          className: "bg-black p-1.5",
                          content: /* @__PURE__ */ Pe("div", { children: [
                            /* @__PURE__ */ q("div", { className: "flex flex-col items-center bg-white/10 rounded-lg", children: /* @__PURE__ */ q(
                              "img",
                              {
                                src: B,
                                alt: `Reference image ${R + 1} preview`,
                                className: "w-auto h-48 object-cover rounded-lg"
                              }
                            ) }),
                            F.semantic && /* @__PURE__ */ q("div", { className: "mt-2 text-xs text-white/90 text-center max-w-48 px-1", children: F.semantic })
                          ] }),
                          position: "top",
                          delay: 300,
                          closeOnClick: !0,
                          children: /* @__PURE__ */ q(
                            "div",
                            {
                              className: "relative group cursor-pointer",
                              onClick: () => {
                                window.open(
                                  F.media_links.cdn_url,
                                  "_blank"
                                );
                              },
                              children: /* @__PURE__ */ q("div", { className: "relative overflow-hidden rounded-lg border border-white/5 bg-white/10 aspect-square", children: /* @__PURE__ */ q(
                                "img",
                                {
                                  src: H,
                                  alt: `Reference image ${R + 1}`,
                                  className: "w-full h-full object-cover transition-transform duration-200 group-hover:scale-105"
                                }
                              ) })
                            }
                          )
                        },
                        F.media_token
                      )
                    );
                  }) })
                ] }),
                (X || I) && /* @__PURE__ */ Pe("div", { className: "space-y-1.5", children: [
                  /* @__PURE__ */ q("div", { className: "text-sm font-medium text-white/90", children: "Generation Details" }),
                  /* @__PURE__ */ Pe("div", { className: "flex flex-col gap-1.5", children: [
                    I && /* @__PURE__ */ Pe("div", { className: "flex items-center justify-between py-2 px-3 bg-black/20 rounded-lg border border-white/5", children: [
                      /* @__PURE__ */ q("span", { className: "text-sm text-white/70 font-medium", children: "Model" }),
                      /* @__PURE__ */ Pe("div", { className: "flex items-center gap-2", children: [
                        Wke(I),
                        /* @__PURE__ */ q("span", { className: "text-sm text-white/90 rounded", children: Uke(I) })
                      ] })
                    ] }),
                    X && /* @__PURE__ */ Pe("div", { className: "flex items-center justify-between py-2 px-3 bg-black/20 rounded-lg border border-white/5", children: [
                      /* @__PURE__ */ q("span", { className: "text-sm text-white/70 font-medium", children: "Provider" }),
                      /* @__PURE__ */ q("span", { className: "text-sm text-white/90 rounded", children: Yke(X) })
                    ] })
                  ] })
                ] })
              ] }),
              l
            ] }),
            p && c || c ? /* @__PURE__ */ Pe("div", { className: "mt-15 mb-15 flex justify-end gap-2", children: [
              /* @__PURE__ */ q(
                ty,
                {
                  onClick: async (F) => {
                    ry("image_to_3d_clicked"), await o0e({
                      image_media_token: u,
                      model: HY.Hunyuan3d2_0
                    });
                  },
                  children: "3D"
                }
              ),
              x && c && /* @__PURE__ */ q(
                ty,
                {
                  icon: e0e,
                  onClick: async (F) => {
                    F.stopPropagation(), ry("edit_image_clicked"), await x(c, u);
                  },
                  children: "Edit"
                }
              ),
              p && c && /* @__PURE__ */ q(
                ty,
                {
                  onClick: async (F) => {
                    F.stopPropagation(), ry("add_to_scene_clicked"), await p(c, u), t(), r();
                  },
                  children: "Add to Current Scene"
                }
              ),
              f && c && /* @__PURE__ */ q(
                ty,
                {
                  icon: t0e,
                  onClick: async (F) => {
                    F.stopPropagation(), ry("download_clicked"), await f(c, v);
                  },
                  children: "Download"
                }
              )
            ] }) : null
          ] })
        ] })
      ]
    }
  );
}
/*!
 * Font Awesome Free 6.7.2 by @fontawesome - https://fontawesome.com
 * License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License)
 * Copyright 2024 Fonticons, Inc.
 */
function t5e(e, t, r) {
  return (t = n5e(t)) in e ? Object.defineProperty(e, t, {
    value: r,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : e[t] = r, e;
}
function N7(e, t) {
  var r = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var n = Object.getOwnPropertySymbols(e);
    t && (n = n.filter(function(o) {
      return Object.getOwnPropertyDescriptor(e, o).enumerable;
    })), r.push.apply(r, n);
  }
  return r;
}
function ve(e) {
  for (var t = 1; t < arguments.length; t++) {
    var r = arguments[t] != null ? arguments[t] : {};
    t % 2 ? N7(Object(r), !0).forEach(function(n) {
      t5e(e, n, r[n]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : N7(Object(r)).forEach(function(n) {
      Object.defineProperty(e, n, Object.getOwnPropertyDescriptor(r, n));
    });
  }
  return e;
}
function r5e(e, t) {
  if (typeof e != "object" || !e) return e;
  var r = e[Symbol.toPrimitive];
  if (r !== void 0) {
    var n = r.call(e, t);
    if (typeof n != "object") return n;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (t === "string" ? String : Number)(e);
}
function n5e(e) {
  var t = r5e(e, "string");
  return typeof t == "symbol" ? t : t + "";
}
const j7 = () => {
};
let sC = {}, pG = {}, mG = null, gG = {
  mark: j7,
  measure: j7
};
try {
  typeof window < "u" && (sC = window), typeof document < "u" && (pG = document), typeof MutationObserver < "u" && (mG = MutationObserver), typeof performance < "u" && (gG = performance);
} catch {
}
const {
  userAgent: I7 = ""
} = sC.navigator || {}, ac = sC, Wr = pG, T7 = mG, uy = gG;
ac.document;
const Ui = !!Wr.documentElement && !!Wr.head && typeof Wr.addEventListener == "function" && typeof Wr.createElement == "function", hG = ~I7.indexOf("MSIE") || ~I7.indexOf("Trident/");
var o5e = /fa(s|r|l|t|d|dr|dl|dt|b|k|kd|ss|sr|sl|st|sds|sdr|sdl|sdt)?[\-\ ]/, a5e = /Font ?Awesome ?([56 ]*)(Solid|Regular|Light|Thin|Duotone|Brands|Free|Pro|Sharp Duotone|Sharp|Kit)?.*/i, bG = {
  classic: {
    fa: "solid",
    fas: "solid",
    "fa-solid": "solid",
    far: "regular",
    "fa-regular": "regular",
    fal: "light",
    "fa-light": "light",
    fat: "thin",
    "fa-thin": "thin",
    fab: "brands",
    "fa-brands": "brands"
  },
  duotone: {
    fa: "solid",
    fad: "solid",
    "fa-solid": "solid",
    "fa-duotone": "solid",
    fadr: "regular",
    "fa-regular": "regular",
    fadl: "light",
    "fa-light": "light",
    fadt: "thin",
    "fa-thin": "thin"
  },
  sharp: {
    fa: "solid",
    fass: "solid",
    "fa-solid": "solid",
    fasr: "regular",
    "fa-regular": "regular",
    fasl: "light",
    "fa-light": "light",
    fast: "thin",
    "fa-thin": "thin"
  },
  "sharp-duotone": {
    fa: "solid",
    fasds: "solid",
    "fa-solid": "solid",
    fasdr: "regular",
    "fa-regular": "regular",
    fasdl: "light",
    "fa-light": "light",
    fasdt: "thin",
    "fa-thin": "thin"
  }
}, i5e = {
  GROUP: "duotone-group",
  PRIMARY: "primary",
  SECONDARY: "secondary"
}, yG = ["fa-classic", "fa-duotone", "fa-sharp", "fa-sharp-duotone"], bn = "classic", R0 = "duotone", s5e = "sharp", l5e = "sharp-duotone", vG = [bn, R0, s5e, l5e], c5e = {
  classic: {
    900: "fas",
    400: "far",
    normal: "far",
    300: "fal",
    100: "fat"
  },
  duotone: {
    900: "fad",
    400: "fadr",
    300: "fadl",
    100: "fadt"
  },
  sharp: {
    900: "fass",
    400: "fasr",
    300: "fasl",
    100: "fast"
  },
  "sharp-duotone": {
    900: "fasds",
    400: "fasdr",
    300: "fasdl",
    100: "fasdt"
  }
}, u5e = {
  "Font Awesome 6 Free": {
    900: "fas",
    400: "far"
  },
  "Font Awesome 6 Pro": {
    900: "fas",
    400: "far",
    normal: "far",
    300: "fal",
    100: "fat"
  },
  "Font Awesome 6 Brands": {
    400: "fab",
    normal: "fab"
  },
  "Font Awesome 6 Duotone": {
    900: "fad",
    400: "fadr",
    normal: "fadr",
    300: "fadl",
    100: "fadt"
  },
  "Font Awesome 6 Sharp": {
    900: "fass",
    400: "fasr",
    normal: "fasr",
    300: "fasl",
    100: "fast"
  },
  "Font Awesome 6 Sharp Duotone": {
    900: "fasds",
    400: "fasdr",
    normal: "fasdr",
    300: "fasdl",
    100: "fasdt"
  }
}, f5e = /* @__PURE__ */ new Map([["classic", {
  defaultShortPrefixId: "fas",
  defaultStyleId: "solid",
  styleIds: ["solid", "regular", "light", "thin", "brands"],
  futureStyleIds: [],
  defaultFontWeight: 900
}], ["sharp", {
  defaultShortPrefixId: "fass",
  defaultStyleId: "solid",
  styleIds: ["solid", "regular", "light", "thin"],
  futureStyleIds: [],
  defaultFontWeight: 900
}], ["duotone", {
  defaultShortPrefixId: "fad",
  defaultStyleId: "solid",
  styleIds: ["solid", "regular", "light", "thin"],
  futureStyleIds: [],
  defaultFontWeight: 900
}], ["sharp-duotone", {
  defaultShortPrefixId: "fasds",
  defaultStyleId: "solid",
  styleIds: ["solid", "regular", "light", "thin"],
  futureStyleIds: [],
  defaultFontWeight: 900
}]]), d5e = {
  classic: {
    solid: "fas",
    regular: "far",
    light: "fal",
    thin: "fat",
    brands: "fab"
  },
  duotone: {
    solid: "fad",
    regular: "fadr",
    light: "fadl",
    thin: "fadt"
  },
  sharp: {
    solid: "fass",
    regular: "fasr",
    light: "fasl",
    thin: "fast"
  },
  "sharp-duotone": {
    solid: "fasds",
    regular: "fasdr",
    light: "fasdl",
    thin: "fasdt"
  }
}, p5e = ["fak", "fa-kit", "fakd", "fa-kit-duotone"], M7 = {
  kit: {
    fak: "kit",
    "fa-kit": "kit"
  },
  "kit-duotone": {
    fakd: "kit-duotone",
    "fa-kit-duotone": "kit-duotone"
  }
}, m5e = ["kit"], g5e = {
  kit: {
    "fa-kit": "fak"
  }
}, h5e = ["fak", "fakd"], b5e = {
  kit: {
    fak: "fa-kit"
  }
}, R7 = {
  kit: {
    kit: "fak"
  },
  "kit-duotone": {
    "kit-duotone": "fakd"
  }
}, fy = {
  GROUP: "duotone-group",
  SWAP_OPACITY: "swap-opacity",
  PRIMARY: "primary",
  SECONDARY: "secondary"
}, y5e = ["fa-classic", "fa-duotone", "fa-sharp", "fa-sharp-duotone"], v5e = ["fak", "fa-kit", "fakd", "fa-kit-duotone"], x5e = {
  "Font Awesome Kit": {
    400: "fak",
    normal: "fak"
  },
  "Font Awesome Kit Duotone": {
    400: "fakd",
    normal: "fakd"
  }
}, w5e = {
  classic: {
    "fa-brands": "fab",
    "fa-duotone": "fad",
    "fa-light": "fal",
    "fa-regular": "far",
    "fa-solid": "fas",
    "fa-thin": "fat"
  },
  duotone: {
    "fa-regular": "fadr",
    "fa-light": "fadl",
    "fa-thin": "fadt"
  },
  sharp: {
    "fa-solid": "fass",
    "fa-regular": "fasr",
    "fa-light": "fasl",
    "fa-thin": "fast"
  },
  "sharp-duotone": {
    "fa-solid": "fasds",
    "fa-regular": "fasdr",
    "fa-light": "fasdl",
    "fa-thin": "fasdt"
  }
}, k5e = {
  classic: ["fas", "far", "fal", "fat", "fad"],
  duotone: ["fadr", "fadl", "fadt"],
  sharp: ["fass", "fasr", "fasl", "fast"],
  "sharp-duotone": ["fasds", "fasdr", "fasdl", "fasdt"]
}, gO = {
  classic: {
    fab: "fa-brands",
    fad: "fa-duotone",
    fal: "fa-light",
    far: "fa-regular",
    fas: "fa-solid",
    fat: "fa-thin"
  },
  duotone: {
    fadr: "fa-regular",
    fadl: "fa-light",
    fadt: "fa-thin"
  },
  sharp: {
    fass: "fa-solid",
    fasr: "fa-regular",
    fasl: "fa-light",
    fast: "fa-thin"
  },
  "sharp-duotone": {
    fasds: "fa-solid",
    fasdr: "fa-regular",
    fasdl: "fa-light",
    fasdt: "fa-thin"
  }
}, $5e = ["fa-solid", "fa-regular", "fa-light", "fa-thin", "fa-duotone", "fa-brands"], hO = ["fa", "fas", "far", "fal", "fat", "fad", "fadr", "fadl", "fadt", "fab", "fass", "fasr", "fasl", "fast", "fasds", "fasdr", "fasdl", "fasdt", ...y5e, ...$5e], O5e = ["solid", "regular", "light", "thin", "duotone", "brands"], xG = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], E5e = xG.concat([11, 12, 13, 14, 15, 16, 17, 18, 19, 20]), S5e = [...Object.keys(k5e), ...O5e, "2xs", "xs", "sm", "lg", "xl", "2xl", "beat", "border", "fade", "beat-fade", "bounce", "flip-both", "flip-horizontal", "flip-vertical", "flip", "fw", "inverse", "layers-counter", "layers-text", "layers", "li", "pull-left", "pull-right", "pulse", "rotate-180", "rotate-270", "rotate-90", "rotate-by", "shake", "spin-pulse", "spin-reverse", "spin", "stack-1x", "stack-2x", "stack", "ul", fy.GROUP, fy.SWAP_OPACITY, fy.PRIMARY, fy.SECONDARY].concat(xG.map((e) => "".concat(e, "x"))).concat(E5e.map((e) => "w-".concat(e))), P5e = {
  "Font Awesome 5 Free": {
    900: "fas",
    400: "far"
  },
  "Font Awesome 5 Pro": {
    900: "fas",
    400: "far",
    normal: "far",
    300: "fal"
  },
  "Font Awesome 5 Brands": {
    400: "fab",
    normal: "fab"
  },
  "Font Awesome 5 Duotone": {
    900: "fad"
  }
};
const $i = "___FONT_AWESOME___", bO = 16, wG = "fa", kG = "svg-inline--fa", yu = "data-fa-i2svg", yO = "data-fa-pseudo-element", C5e = "data-fa-pseudo-element-pending", lC = "data-prefix", cC = "data-icon", z7 = "fontawesome-i2svg", A5e = "async", _5e = ["HTML", "HEAD", "STYLE", "SCRIPT"], $G = (() => {
  try {
    return process.env.NODE_ENV === "production";
  } catch {
    return !1;
  }
})();
function cb(e) {
  return new Proxy(e, {
    get(t, r) {
      return r in t ? t[r] : t[bn];
    }
  });
}
const OG = ve({}, bG);
OG[bn] = ve(ve(ve(ve({}, {
  "fa-duotone": "duotone"
}), bG[bn]), M7.kit), M7["kit-duotone"]);
const N5e = cb(OG), vO = ve({}, d5e);
vO[bn] = ve(ve(ve(ve({}, {
  duotone: "fad"
}), vO[bn]), R7.kit), R7["kit-duotone"]);
const F7 = cb(vO), xO = ve({}, gO);
xO[bn] = ve(ve({}, xO[bn]), b5e.kit);
const uC = cb(xO), wO = ve({}, w5e);
wO[bn] = ve(ve({}, wO[bn]), g5e.kit);
cb(wO);
const j5e = o5e, EG = "fa-layers-text", I5e = a5e, T5e = ve({}, c5e);
cb(T5e);
const M5e = ["class", "data-prefix", "data-icon", "data-fa-transform", "data-fa-mask"], W2 = i5e, R5e = [...m5e, ...S5e], Ig = ac.FontAwesomeConfig || {};
function z5e(e) {
  var t = Wr.querySelector("script[" + e + "]");
  if (t)
    return t.getAttribute(e);
}
function F5e(e) {
  return e === "" ? !0 : e === "false" ? !1 : e === "true" ? !0 : e;
}
Wr && typeof Wr.querySelector == "function" && [["data-family-prefix", "familyPrefix"], ["data-css-prefix", "cssPrefix"], ["data-family-default", "familyDefault"], ["data-style-default", "styleDefault"], ["data-replacement-class", "replacementClass"], ["data-auto-replace-svg", "autoReplaceSvg"], ["data-auto-add-css", "autoAddCss"], ["data-auto-a11y", "autoA11y"], ["data-search-pseudo-elements", "searchPseudoElements"], ["data-observe-mutations", "observeMutations"], ["data-mutate-approach", "mutateApproach"], ["data-keep-original-source", "keepOriginalSource"], ["data-measure-performance", "measurePerformance"], ["data-show-missing-icons", "showMissingIcons"]].forEach((e) => {
  let [t, r] = e;
  const n = F5e(z5e(t));
  n != null && (Ig[r] = n);
});
const SG = {
  styleDefault: "solid",
  familyDefault: bn,
  cssPrefix: wG,
  replacementClass: kG,
  autoReplaceSvg: !0,
  autoAddCss: !0,
  autoA11y: !0,
  searchPseudoElements: !1,
  observeMutations: !0,
  mutateApproach: "async",
  keepOriginalSource: !0,
  measurePerformance: !1,
  showMissingIcons: !0
};
Ig.familyPrefix && (Ig.cssPrefix = Ig.familyPrefix);
const yd = ve(ve({}, SG), Ig);
yd.autoReplaceSvg || (yd.observeMutations = !1);
const He = {};
Object.keys(SG).forEach((e) => {
  Object.defineProperty(He, e, {
    enumerable: !0,
    set: function(t) {
      yd[e] = t, Tg.forEach((r) => r(He));
    },
    get: function() {
      return yd[e];
    }
  });
});
Object.defineProperty(He, "familyPrefix", {
  enumerable: !0,
  set: function(e) {
    yd.cssPrefix = e, Tg.forEach((t) => t(He));
  },
  get: function() {
    return yd.cssPrefix;
  }
});
ac.FontAwesomeConfig = He;
const Tg = [];
function D5e(e) {
  return Tg.push(e), () => {
    Tg.splice(Tg.indexOf(e), 1);
  };
}
const Bs = bO, ya = {
  size: 16,
  x: 0,
  y: 0,
  rotate: 0,
  flipX: !1,
  flipY: !1
};
function L5e(e) {
  if (!e || !Ui)
    return;
  const t = Wr.createElement("style");
  t.setAttribute("type", "text/css"), t.innerHTML = e;
  const r = Wr.head.childNodes;
  let n = null;
  for (let o = r.length - 1; o > -1; o--) {
    const a = r[o], i = (a.tagName || "").toUpperCase();
    ["STYLE", "LINK"].indexOf(i) > -1 && (n = a);
  }
  return Wr.head.insertBefore(t, n), e;
}
const V5e = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
function _h() {
  let e = 12, t = "";
  for (; e-- > 0; )
    t += V5e[Math.random() * 62 | 0];
  return t;
}
function Yd(e) {
  const t = [];
  for (let r = (e || []).length >>> 0; r--; )
    t[r] = e[r];
  return t;
}
function fC(e) {
  return e.classList ? Yd(e.classList) : (e.getAttribute("class") || "").split(" ").filter((t) => t);
}
function PG(e) {
  return "".concat(e).replace(/&/g, "&amp;").replace(/"/g, "&quot;").replace(/'/g, "&#39;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
}
function W5e(e) {
  return Object.keys(e || {}).reduce((t, r) => t + "".concat(r, '="').concat(PG(e[r]), '" '), "").trim();
}
function z0(e) {
  return Object.keys(e || {}).reduce((t, r) => t + "".concat(r, ": ").concat(e[r].trim(), ";"), "");
}
function dC(e) {
  return e.size !== ya.size || e.x !== ya.x || e.y !== ya.y || e.rotate !== ya.rotate || e.flipX || e.flipY;
}
function U5e(e) {
  let {
    transform: t,
    containerWidth: r,
    iconWidth: n
  } = e;
  const o = {
    transform: "translate(".concat(r / 2, " 256)")
  }, a = "translate(".concat(t.x * 32, ", ").concat(t.y * 32, ") "), i = "scale(".concat(t.size / 16 * (t.flipX ? -1 : 1), ", ").concat(t.size / 16 * (t.flipY ? -1 : 1), ") "), s = "rotate(".concat(t.rotate, " 0 0)"), l = {
    transform: "".concat(a, " ").concat(i, " ").concat(s)
  }, c = {
    transform: "translate(".concat(n / 2 * -1, " -256)")
  };
  return {
    outer: o,
    inner: l,
    path: c
  };
}
function Y5e(e) {
  let {
    transform: t,
    width: r = bO,
    height: n = bO,
    startCentered: o = !1
  } = e, a = "";
  return o && hG ? a += "translate(".concat(t.x / Bs - r / 2, "em, ").concat(t.y / Bs - n / 2, "em) ") : o ? a += "translate(calc(-50% + ".concat(t.x / Bs, "em), calc(-50% + ").concat(t.y / Bs, "em)) ") : a += "translate(".concat(t.x / Bs, "em, ").concat(t.y / Bs, "em) "), a += "scale(".concat(t.size / Bs * (t.flipX ? -1 : 1), ", ").concat(t.size / Bs * (t.flipY ? -1 : 1), ") "), a += "rotate(".concat(t.rotate, "deg) "), a;
}
var H5e = `:root, :host {
  --fa-font-solid: normal 900 1em/1 "Font Awesome 6 Free";
  --fa-font-regular: normal 400 1em/1 "Font Awesome 6 Free";
  --fa-font-light: normal 300 1em/1 "Font Awesome 6 Pro";
  --fa-font-thin: normal 100 1em/1 "Font Awesome 6 Pro";
  --fa-font-duotone: normal 900 1em/1 "Font Awesome 6 Duotone";
  --fa-font-duotone-regular: normal 400 1em/1 "Font Awesome 6 Duotone";
  --fa-font-duotone-light: normal 300 1em/1 "Font Awesome 6 Duotone";
  --fa-font-duotone-thin: normal 100 1em/1 "Font Awesome 6 Duotone";
  --fa-font-brands: normal 400 1em/1 "Font Awesome 6 Brands";
  --fa-font-sharp-solid: normal 900 1em/1 "Font Awesome 6 Sharp";
  --fa-font-sharp-regular: normal 400 1em/1 "Font Awesome 6 Sharp";
  --fa-font-sharp-light: normal 300 1em/1 "Font Awesome 6 Sharp";
  --fa-font-sharp-thin: normal 100 1em/1 "Font Awesome 6 Sharp";
  --fa-font-sharp-duotone-solid: normal 900 1em/1 "Font Awesome 6 Sharp Duotone";
  --fa-font-sharp-duotone-regular: normal 400 1em/1 "Font Awesome 6 Sharp Duotone";
  --fa-font-sharp-duotone-light: normal 300 1em/1 "Font Awesome 6 Sharp Duotone";
  --fa-font-sharp-duotone-thin: normal 100 1em/1 "Font Awesome 6 Sharp Duotone";
}

svg:not(:root).svg-inline--fa, svg:not(:host).svg-inline--fa {
  overflow: visible;
  box-sizing: content-box;
}

.svg-inline--fa {
  display: var(--fa-display, inline-block);
  height: 1em;
  overflow: visible;
  vertical-align: -0.125em;
}
.svg-inline--fa.fa-2xs {
  vertical-align: 0.1em;
}
.svg-inline--fa.fa-xs {
  vertical-align: 0em;
}
.svg-inline--fa.fa-sm {
  vertical-align: -0.0714285705em;
}
.svg-inline--fa.fa-lg {
  vertical-align: -0.2em;
}
.svg-inline--fa.fa-xl {
  vertical-align: -0.25em;
}
.svg-inline--fa.fa-2xl {
  vertical-align: -0.3125em;
}
.svg-inline--fa.fa-pull-left {
  margin-right: var(--fa-pull-margin, 0.3em);
  width: auto;
}
.svg-inline--fa.fa-pull-right {
  margin-left: var(--fa-pull-margin, 0.3em);
  width: auto;
}
.svg-inline--fa.fa-li {
  width: var(--fa-li-width, 2em);
  top: 0.25em;
}
.svg-inline--fa.fa-fw {
  width: var(--fa-fw-width, 1.25em);
}

.fa-layers svg.svg-inline--fa {
  bottom: 0;
  left: 0;
  margin: auto;
  position: absolute;
  right: 0;
  top: 0;
}

.fa-layers-counter, .fa-layers-text {
  display: inline-block;
  position: absolute;
  text-align: center;
}

.fa-layers {
  display: inline-block;
  height: 1em;
  position: relative;
  text-align: center;
  vertical-align: -0.125em;
  width: 1em;
}
.fa-layers svg.svg-inline--fa {
  transform-origin: center center;
}

.fa-layers-text {
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  transform-origin: center center;
}

.fa-layers-counter {
  background-color: var(--fa-counter-background-color, #ff253a);
  border-radius: var(--fa-counter-border-radius, 1em);
  box-sizing: border-box;
  color: var(--fa-inverse, #fff);
  line-height: var(--fa-counter-line-height, 1);
  max-width: var(--fa-counter-max-width, 5em);
  min-width: var(--fa-counter-min-width, 1.5em);
  overflow: hidden;
  padding: var(--fa-counter-padding, 0.25em 0.5em);
  right: var(--fa-right, 0);
  text-overflow: ellipsis;
  top: var(--fa-top, 0);
  transform: scale(var(--fa-counter-scale, 0.25));
  transform-origin: top right;
}

.fa-layers-bottom-right {
  bottom: var(--fa-bottom, 0);
  right: var(--fa-right, 0);
  top: auto;
  transform: scale(var(--fa-layers-scale, 0.25));
  transform-origin: bottom right;
}

.fa-layers-bottom-left {
  bottom: var(--fa-bottom, 0);
  left: var(--fa-left, 0);
  right: auto;
  top: auto;
  transform: scale(var(--fa-layers-scale, 0.25));
  transform-origin: bottom left;
}

.fa-layers-top-right {
  top: var(--fa-top, 0);
  right: var(--fa-right, 0);
  transform: scale(var(--fa-layers-scale, 0.25));
  transform-origin: top right;
}

.fa-layers-top-left {
  left: var(--fa-left, 0);
  right: auto;
  top: var(--fa-top, 0);
  transform: scale(var(--fa-layers-scale, 0.25));
  transform-origin: top left;
}

.fa-1x {
  font-size: 1em;
}

.fa-2x {
  font-size: 2em;
}

.fa-3x {
  font-size: 3em;
}

.fa-4x {
  font-size: 4em;
}

.fa-5x {
  font-size: 5em;
}

.fa-6x {
  font-size: 6em;
}

.fa-7x {
  font-size: 7em;
}

.fa-8x {
  font-size: 8em;
}

.fa-9x {
  font-size: 9em;
}

.fa-10x {
  font-size: 10em;
}

.fa-2xs {
  font-size: 0.625em;
  line-height: 0.1em;
  vertical-align: 0.225em;
}

.fa-xs {
  font-size: 0.75em;
  line-height: 0.0833333337em;
  vertical-align: 0.125em;
}

.fa-sm {
  font-size: 0.875em;
  line-height: 0.0714285718em;
  vertical-align: 0.0535714295em;
}

.fa-lg {
  font-size: 1.25em;
  line-height: 0.05em;
  vertical-align: -0.075em;
}

.fa-xl {
  font-size: 1.5em;
  line-height: 0.0416666682em;
  vertical-align: -0.125em;
}

.fa-2xl {
  font-size: 2em;
  line-height: 0.03125em;
  vertical-align: -0.1875em;
}

.fa-fw {
  text-align: center;
  width: 1.25em;
}

.fa-ul {
  list-style-type: none;
  margin-left: var(--fa-li-margin, 2.5em);
  padding-left: 0;
}
.fa-ul > li {
  position: relative;
}

.fa-li {
  left: calc(-1 * var(--fa-li-width, 2em));
  position: absolute;
  text-align: center;
  width: var(--fa-li-width, 2em);
  line-height: inherit;
}

.fa-border {
  border-color: var(--fa-border-color, #eee);
  border-radius: var(--fa-border-radius, 0.1em);
  border-style: var(--fa-border-style, solid);
  border-width: var(--fa-border-width, 0.08em);
  padding: var(--fa-border-padding, 0.2em 0.25em 0.15em);
}

.fa-pull-left {
  float: left;
  margin-right: var(--fa-pull-margin, 0.3em);
}

.fa-pull-right {
  float: right;
  margin-left: var(--fa-pull-margin, 0.3em);
}

.fa-beat {
  animation-name: fa-beat;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, ease-in-out);
}

.fa-bounce {
  animation-name: fa-bounce;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.28, 0.84, 0.42, 1));
}

.fa-fade {
  animation-name: fa-fade;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));
}

.fa-beat-fade {
  animation-name: fa-beat-fade;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));
}

.fa-flip {
  animation-name: fa-flip;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, ease-in-out);
}

.fa-shake {
  animation-name: fa-shake;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, linear);
}

.fa-spin {
  animation-name: fa-spin;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 2s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, linear);
}

.fa-spin-reverse {
  --fa-animation-direction: reverse;
}

.fa-pulse,
.fa-spin-pulse {
  animation-name: fa-spin;
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, steps(8));
}

@media (prefers-reduced-motion: reduce) {
  .fa-beat,
.fa-bounce,
.fa-fade,
.fa-beat-fade,
.fa-flip,
.fa-pulse,
.fa-shake,
.fa-spin,
.fa-spin-pulse {
    animation-delay: -1ms;
    animation-duration: 1ms;
    animation-iteration-count: 1;
    transition-delay: 0s;
    transition-duration: 0s;
  }
}
@keyframes fa-beat {
  0%, 90% {
    transform: scale(1);
  }
  45% {
    transform: scale(var(--fa-beat-scale, 1.25));
  }
}
@keyframes fa-bounce {
  0% {
    transform: scale(1, 1) translateY(0);
  }
  10% {
    transform: scale(var(--fa-bounce-start-scale-x, 1.1), var(--fa-bounce-start-scale-y, 0.9)) translateY(0);
  }
  30% {
    transform: scale(var(--fa-bounce-jump-scale-x, 0.9), var(--fa-bounce-jump-scale-y, 1.1)) translateY(var(--fa-bounce-height, -0.5em));
  }
  50% {
    transform: scale(var(--fa-bounce-land-scale-x, 1.05), var(--fa-bounce-land-scale-y, 0.95)) translateY(0);
  }
  57% {
    transform: scale(1, 1) translateY(var(--fa-bounce-rebound, -0.125em));
  }
  64% {
    transform: scale(1, 1) translateY(0);
  }
  100% {
    transform: scale(1, 1) translateY(0);
  }
}
@keyframes fa-fade {
  50% {
    opacity: var(--fa-fade-opacity, 0.4);
  }
}
@keyframes fa-beat-fade {
  0%, 100% {
    opacity: var(--fa-beat-fade-opacity, 0.4);
    transform: scale(1);
  }
  50% {
    opacity: 1;
    transform: scale(var(--fa-beat-fade-scale, 1.125));
  }
}
@keyframes fa-flip {
  50% {
    transform: rotate3d(var(--fa-flip-x, 0), var(--fa-flip-y, 1), var(--fa-flip-z, 0), var(--fa-flip-angle, -180deg));
  }
}
@keyframes fa-shake {
  0% {
    transform: rotate(-15deg);
  }
  4% {
    transform: rotate(15deg);
  }
  8%, 24% {
    transform: rotate(-18deg);
  }
  12%, 28% {
    transform: rotate(18deg);
  }
  16% {
    transform: rotate(-22deg);
  }
  20% {
    transform: rotate(22deg);
  }
  32% {
    transform: rotate(-12deg);
  }
  36% {
    transform: rotate(12deg);
  }
  40%, 100% {
    transform: rotate(0deg);
  }
}
@keyframes fa-spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
.fa-rotate-90 {
  transform: rotate(90deg);
}

.fa-rotate-180 {
  transform: rotate(180deg);
}

.fa-rotate-270 {
  transform: rotate(270deg);
}

.fa-flip-horizontal {
  transform: scale(-1, 1);
}

.fa-flip-vertical {
  transform: scale(1, -1);
}

.fa-flip-both,
.fa-flip-horizontal.fa-flip-vertical {
  transform: scale(-1, -1);
}

.fa-rotate-by {
  transform: rotate(var(--fa-rotate-angle, 0));
}

.fa-stack {
  display: inline-block;
  vertical-align: middle;
  height: 2em;
  position: relative;
  width: 2.5em;
}

.fa-stack-1x,
.fa-stack-2x {
  bottom: 0;
  left: 0;
  margin: auto;
  position: absolute;
  right: 0;
  top: 0;
  z-index: var(--fa-stack-z-index, auto);
}

.svg-inline--fa.fa-stack-1x {
  height: 1em;
  width: 1.25em;
}
.svg-inline--fa.fa-stack-2x {
  height: 2em;
  width: 2.5em;
}

.fa-inverse {
  color: var(--fa-inverse, #fff);
}

.sr-only,
.fa-sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.sr-only-focusable:not(:focus),
.fa-sr-only-focusable:not(:focus) {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.svg-inline--fa .fa-primary {
  fill: var(--fa-primary-color, currentColor);
  opacity: var(--fa-primary-opacity, 1);
}

.svg-inline--fa .fa-secondary {
  fill: var(--fa-secondary-color, currentColor);
  opacity: var(--fa-secondary-opacity, 0.4);
}

.svg-inline--fa.fa-swap-opacity .fa-primary {
  opacity: var(--fa-secondary-opacity, 0.4);
}

.svg-inline--fa.fa-swap-opacity .fa-secondary {
  opacity: var(--fa-primary-opacity, 1);
}

.svg-inline--fa mask .fa-primary,
.svg-inline--fa mask .fa-secondary {
  fill: black;
}`;
function CG() {
  const e = wG, t = kG, r = He.cssPrefix, n = He.replacementClass;
  let o = H5e;
  if (r !== e || n !== t) {
    const a = new RegExp("\\.".concat(e, "\\-"), "g"), i = new RegExp("\\--".concat(e, "\\-"), "g"), s = new RegExp("\\.".concat(t), "g");
    o = o.replace(a, ".".concat(r, "-")).replace(i, "--".concat(r, "-")).replace(s, ".".concat(n));
  }
  return o;
}
let D7 = !1;
function U2() {
  He.autoAddCss && !D7 && (L5e(CG()), D7 = !0);
}
var G5e = {
  mixout() {
    return {
      dom: {
        css: CG,
        insertCss: U2
      }
    };
  },
  hooks() {
    return {
      beforeDOMElementCreation() {
        U2();
      },
      beforeI2svg() {
        U2();
      }
    };
  }
};
const Oi = ac || {};
Oi[$i] || (Oi[$i] = {});
Oi[$i].styles || (Oi[$i].styles = {});
Oi[$i].hooks || (Oi[$i].hooks = {});
Oi[$i].shims || (Oi[$i].shims = []);
var va = Oi[$i];
const AG = [], _G = function() {
  Wr.removeEventListener("DOMContentLoaded", _G), n1 = 1, AG.map((e) => e());
};
let n1 = !1;
Ui && (n1 = (Wr.documentElement.doScroll ? /^loaded|^c/ : /^loaded|^i|^c/).test(Wr.readyState), n1 || Wr.addEventListener("DOMContentLoaded", _G));
function q5e(e) {
  Ui && (n1 ? setTimeout(e, 0) : AG.push(e));
}
function ub(e) {
  const {
    tag: t,
    attributes: r = {},
    children: n = []
  } = e;
  return typeof e == "string" ? PG(e) : "<".concat(t, " ").concat(W5e(r), ">").concat(n.map(ub).join(""), "</").concat(t, ">");
}
function L7(e, t, r) {
  if (e && e[t] && e[t][r])
    return {
      prefix: t,
      iconName: r,
      icon: e[t][r]
    };
}
var Y2 = function(e, t, r, n) {
  var o = Object.keys(e), a = o.length, i = t, s, l, c;
  for (r === void 0 ? (s = 1, c = e[o[0]]) : (s = 0, c = r); s < a; s++)
    l = o[s], c = i(c, e[l], l, e);
  return c;
};
function B5e(e) {
  const t = [];
  let r = 0;
  const n = e.length;
  for (; r < n; ) {
    const o = e.charCodeAt(r++);
    if (o >= 55296 && o <= 56319 && r < n) {
      const a = e.charCodeAt(r++);
      (a & 64512) == 56320 ? t.push(((o & 1023) << 10) + (a & 1023) + 65536) : (t.push(o), r--);
    } else
      t.push(o);
  }
  return t;
}
function NG(e) {
  const t = B5e(e);
  return t.length === 1 ? t[0].toString(16) : null;
}
function X5e(e, t) {
  const r = e.length;
  let n = e.charCodeAt(t), o;
  return n >= 55296 && n <= 56319 && r > t + 1 && (o = e.charCodeAt(t + 1), o >= 56320 && o <= 57343) ? (n - 55296) * 1024 + o - 56320 + 65536 : n;
}
function V7(e) {
  return Object.keys(e).reduce((t, r) => {
    const n = e[r];
    return n.icon ? t[n.iconName] = n.icon : t[r] = n, t;
  }, {});
}
function kO(e, t) {
  let r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
  const {
    skipHooks: n = !1
  } = r, o = V7(t);
  typeof va.hooks.addPack == "function" && !n ? va.hooks.addPack(e, V7(t)) : va.styles[e] = ve(ve({}, va.styles[e] || {}), o), e === "fas" && kO("fa", t);
}
const {
  styles: Nh,
  shims: K5e
} = va, jG = Object.keys(uC), J5e = jG.reduce((e, t) => (e[t] = Object.keys(uC[t]), e), {});
let pC = null, IG = {}, TG = {}, MG = {}, RG = {}, zG = {};
function Q5e(e) {
  return ~R5e.indexOf(e);
}
function Z5e(e, t) {
  const r = t.split("-"), n = r[0], o = r.slice(1).join("-");
  return n === e && o !== "" && !Q5e(o) ? o : null;
}
const FG = () => {
  const e = (n) => Y2(Nh, (o, a, i) => (o[i] = Y2(a, n, {}), o), {});
  IG = e((n, o, a) => (o[3] && (n[o[3]] = a), o[2] && o[2].filter((i) => typeof i == "number").forEach((i) => {
    n[i.toString(16)] = a;
  }), n)), TG = e((n, o, a) => (n[a] = a, o[2] && o[2].filter((i) => typeof i == "string").forEach((i) => {
    n[i] = a;
  }), n)), zG = e((n, o, a) => {
    const i = o[2];
    return n[a] = a, i.forEach((s) => {
      n[s] = a;
    }), n;
  });
  const t = "far" in Nh || He.autoFetchSvg, r = Y2(K5e, (n, o) => {
    const a = o[0];
    let i = o[1];
    const s = o[2];
    return i === "far" && !t && (i = "fas"), typeof a == "string" && (n.names[a] = {
      prefix: i,
      iconName: s
    }), typeof a == "number" && (n.unicodes[a.toString(16)] = {
      prefix: i,
      iconName: s
    }), n;
  }, {
    names: {},
    unicodes: {}
  });
  MG = r.names, RG = r.unicodes, pC = F0(He.styleDefault, {
    family: He.familyDefault
  });
};
D5e((e) => {
  pC = F0(e.styleDefault, {
    family: He.familyDefault
  });
});
FG();
function mC(e, t) {
  return (IG[e] || {})[t];
}
function e3e(e, t) {
  return (TG[e] || {})[t];
}
function Wc(e, t) {
  return (zG[e] || {})[t];
}
function DG(e) {
  return MG[e] || {
    prefix: null,
    iconName: null
  };
}
function t3e(e) {
  const t = RG[e], r = mC("fas", e);
  return t || (r ? {
    prefix: "fas",
    iconName: r
  } : null) || {
    prefix: null,
    iconName: null
  };
}
function ic() {
  return pC;
}
const LG = () => ({
  prefix: null,
  iconName: null,
  rest: []
});
function r3e(e) {
  let t = bn;
  const r = jG.reduce((n, o) => (n[o] = "".concat(He.cssPrefix, "-").concat(o), n), {});
  return vG.forEach((n) => {
    (e.includes(r[n]) || e.some((o) => J5e[n].includes(o))) && (t = n);
  }), t;
}
function F0(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  const {
    family: r = bn
  } = t, n = N5e[r][e];
  if (r === R0 && !e)
    return "fad";
  const o = F7[r][e] || F7[r][n], a = e in va.styles ? e : null;
  return o || a || null;
}
function n3e(e) {
  let t = [], r = null;
  return e.forEach((n) => {
    const o = Z5e(He.cssPrefix, n);
    o ? r = o : n && t.push(n);
  }), {
    iconName: r,
    rest: t
  };
}
function W7(e) {
  return e.sort().filter((t, r, n) => n.indexOf(t) === r);
}
function D0(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  const {
    skipLookups: r = !1
  } = t;
  let n = null;
  const o = hO.concat(v5e), a = W7(e.filter((f) => o.includes(f))), i = W7(e.filter((f) => !hO.includes(f))), s = a.filter((f) => (n = f, !yG.includes(f))), [l = null] = s, c = r3e(a), u = ve(ve({}, n3e(i)), {}, {
    prefix: F0(l, {
      family: c
    })
  });
  return ve(ve(ve({}, u), s3e({
    values: e,
    family: c,
    styles: Nh,
    config: He,
    canonical: u,
    givenPrefix: n
  })), o3e(r, n, u));
}
function o3e(e, t, r) {
  let {
    prefix: n,
    iconName: o
  } = r;
  if (e || !n || !o)
    return {
      prefix: n,
      iconName: o
    };
  const a = t === "fa" ? DG(o) : {}, i = Wc(n, o);
  return o = a.iconName || i || o, n = a.prefix || n, n === "far" && !Nh.far && Nh.fas && !He.autoFetchSvg && (n = "fas"), {
    prefix: n,
    iconName: o
  };
}
const a3e = vG.filter((e) => e !== bn || e !== R0), i3e = Object.keys(gO).filter((e) => e !== bn).map((e) => Object.keys(gO[e])).flat();
function s3e(e) {
  const {
    values: t,
    family: r,
    canonical: n,
    givenPrefix: o = "",
    styles: a = {},
    config: i = {}
  } = e, s = r === R0, l = t.includes("fa-duotone") || t.includes("fad"), c = i.familyDefault === "duotone", u = n.prefix === "fad" || n.prefix === "fa-duotone";
  if (!s && (l || c || u) && (n.prefix = "fad"), (t.includes("fa-brands") || t.includes("fab")) && (n.prefix = "fab"), !n.prefix && a3e.includes(r) && (Object.keys(a).find((f) => i3e.includes(f)) || i.autoFetchSvg)) {
    const f = f5e.get(r).defaultShortPrefixId;
    n.prefix = f, n.iconName = Wc(n.prefix, n.iconName) || n.iconName;
  }
  return (n.prefix === "fa" || o === "fa") && (n.prefix = ic() || "fas"), n;
}
let l3e = class {
  constructor() {
    this.definitions = {};
  }
  add() {
    for (var t = arguments.length, r = new Array(t), n = 0; n < t; n++)
      r[n] = arguments[n];
    const o = r.reduce(this._pullDefinitions, {});
    Object.keys(o).forEach((a) => {
      this.definitions[a] = ve(ve({}, this.definitions[a] || {}), o[a]), kO(a, o[a]);
      const i = uC[bn][a];
      i && kO(i, o[a]), FG();
    });
  }
  reset() {
    this.definitions = {};
  }
  _pullDefinitions(t, r) {
    const n = r.prefix && r.iconName && r.icon ? {
      0: r
    } : r;
    return Object.keys(n).map((o) => {
      const {
        prefix: a,
        iconName: i,
        icon: s
      } = n[o], l = s[2];
      t[a] || (t[a] = {}), l.length > 0 && l.forEach((c) => {
        typeof c == "string" && (t[a][c] = s);
      }), t[a][i] = s;
    }), t;
  }
}, U7 = [], pf = {};
const Hf = {}, c3e = Object.keys(Hf);
function u3e(e, t) {
  let {
    mixoutsTo: r
  } = t;
  return U7 = e, pf = {}, Object.keys(Hf).forEach((n) => {
    c3e.indexOf(n) === -1 && delete Hf[n];
  }), U7.forEach((n) => {
    const o = n.mixout ? n.mixout() : {};
    if (Object.keys(o).forEach((a) => {
      typeof o[a] == "function" && (r[a] = o[a]), typeof o[a] == "object" && Object.keys(o[a]).forEach((i) => {
        r[a] || (r[a] = {}), r[a][i] = o[a][i];
      });
    }), n.hooks) {
      const a = n.hooks();
      Object.keys(a).forEach((i) => {
        pf[i] || (pf[i] = []), pf[i].push(a[i]);
      });
    }
    n.provides && n.provides(Hf);
  }), r;
}
function $O(e, t) {
  for (var r = arguments.length, n = new Array(r > 2 ? r - 2 : 0), o = 2; o < r; o++)
    n[o - 2] = arguments[o];
  return (pf[e] || []).forEach((a) => {
    t = a.apply(null, [t, ...n]);
  }), t;
}
function vu(e) {
  for (var t = arguments.length, r = new Array(t > 1 ? t - 1 : 0), n = 1; n < t; n++)
    r[n - 1] = arguments[n];
  (pf[e] || []).forEach((o) => {
    o.apply(null, r);
  });
}
function sc() {
  const e = arguments[0], t = Array.prototype.slice.call(arguments, 1);
  return Hf[e] ? Hf[e].apply(null, t) : void 0;
}
function OO(e) {
  e.prefix === "fa" && (e.prefix = "fas");
  let {
    iconName: t
  } = e;
  const r = e.prefix || ic();
  if (t)
    return t = Wc(r, t) || t, L7(VG.definitions, r, t) || L7(va.styles, r, t);
}
const VG = new l3e(), f3e = () => {
  He.autoReplaceSvg = !1, He.observeMutations = !1, vu("noAuto");
}, d3e = {
  i2svg: function() {
    let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    return Ui ? (vu("beforeI2svg", e), sc("pseudoElements2svg", e), sc("i2svg", e)) : Promise.reject(new Error("Operation requires a DOM of some kind."));
  },
  watch: function() {
    let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    const {
      autoReplaceSvgRoot: t
    } = e;
    He.autoReplaceSvg === !1 && (He.autoReplaceSvg = !0), He.observeMutations = !0, q5e(() => {
      m3e({
        autoReplaceSvgRoot: t
      }), vu("watch", e);
    });
  }
}, p3e = {
  icon: (e) => {
    if (e === null)
      return null;
    if (typeof e == "object" && e.prefix && e.iconName)
      return {
        prefix: e.prefix,
        iconName: Wc(e.prefix, e.iconName) || e.iconName
      };
    if (Array.isArray(e) && e.length === 2) {
      const t = e[1].indexOf("fa-") === 0 ? e[1].slice(3) : e[1], r = F0(e[0]);
      return {
        prefix: r,
        iconName: Wc(r, t) || t
      };
    }
    if (typeof e == "string" && (e.indexOf("".concat(He.cssPrefix, "-")) > -1 || e.match(j5e))) {
      const t = D0(e.split(" "), {
        skipLookups: !0
      });
      return {
        prefix: t.prefix || ic(),
        iconName: Wc(t.prefix, t.iconName) || t.iconName
      };
    }
    if (typeof e == "string") {
      const t = ic();
      return {
        prefix: t,
        iconName: Wc(t, e) || e
      };
    }
  }
}, to = {
  noAuto: f3e,
  config: He,
  dom: d3e,
  parse: p3e,
  library: VG,
  findIconDefinition: OO,
  toHtml: ub
}, m3e = function() {
  let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  const {
    autoReplaceSvgRoot: t = Wr
  } = e;
  (Object.keys(va.styles).length > 0 || He.autoFetchSvg) && Ui && He.autoReplaceSvg && to.dom.i2svg({
    node: t
  });
};
function L0(e, t) {
  return Object.defineProperty(e, "abstract", {
    get: t
  }), Object.defineProperty(e, "html", {
    get: function() {
      return e.abstract.map((r) => ub(r));
    }
  }), Object.defineProperty(e, "node", {
    get: function() {
      if (!Ui) return;
      const r = Wr.createElement("div");
      return r.innerHTML = e.html, r.children;
    }
  }), e;
}
function g3e(e) {
  let {
    children: t,
    main: r,
    mask: n,
    attributes: o,
    styles: a,
    transform: i
  } = e;
  if (dC(i) && r.found && !n.found) {
    const {
      width: s,
      height: l
    } = r, c = {
      x: s / l / 2,
      y: 0.5
    };
    o.style = z0(ve(ve({}, a), {}, {
      "transform-origin": "".concat(c.x + i.x / 16, "em ").concat(c.y + i.y / 16, "em")
    }));
  }
  return [{
    tag: "svg",
    attributes: o,
    children: t
  }];
}
function h3e(e) {
  let {
    prefix: t,
    iconName: r,
    children: n,
    attributes: o,
    symbol: a
  } = e;
  const i = a === !0 ? "".concat(t, "-").concat(He.cssPrefix, "-").concat(r) : a;
  return [{
    tag: "svg",
    attributes: {
      style: "display: none;"
    },
    children: [{
      tag: "symbol",
      attributes: ve(ve({}, o), {}, {
        id: i
      }),
      children: n
    }]
  }];
}
function gC(e) {
  const {
    icons: {
      main: t,
      mask: r
    },
    prefix: n,
    iconName: o,
    transform: a,
    symbol: i,
    title: s,
    maskId: l,
    titleId: c,
    extra: u,
    watchable: f = !1
  } = e, {
    width: p,
    height: v
  } = r.found ? r : t, x = h5e.includes(n), b = [He.replacementClass, o ? "".concat(He.cssPrefix, "-").concat(o) : ""].filter((h) => u.classes.indexOf(h) === -1).filter((h) => h !== "" || !!h).concat(u.classes).join(" ");
  let m = {
    children: [],
    attributes: ve(ve({}, u.attributes), {}, {
      "data-prefix": n,
      "data-icon": o,
      class: b,
      role: u.attributes.role || "img",
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 ".concat(p, " ").concat(v)
    })
  };
  const w = x && !~u.classes.indexOf("fa-fw") ? {
    width: "".concat(p / v * 16 * 0.0625, "em")
  } : {};
  f && (m.attributes[yu] = ""), s && (m.children.push({
    tag: "title",
    attributes: {
      id: m.attributes["aria-labelledby"] || "title-".concat(c || _h())
    },
    children: [s]
  }), delete m.attributes.title);
  const $ = ve(ve({}, m), {}, {
    prefix: n,
    iconName: o,
    main: t,
    mask: r,
    maskId: l,
    transform: a,
    symbol: i,
    styles: ve(ve({}, w), u.styles)
  }), {
    children: E,
    attributes: S
  } = r.found && t.found ? sc("generateAbstractMask", $) || {
    children: [],
    attributes: {}
  } : sc("generateAbstractIcon", $) || {
    children: [],
    attributes: {}
  };
  return $.children = E, $.attributes = S, i ? h3e($) : g3e($);
}
function Y7(e) {
  const {
    content: t,
    width: r,
    height: n,
    transform: o,
    title: a,
    extra: i,
    watchable: s = !1
  } = e, l = ve(ve(ve({}, i.attributes), a ? {
    title: a
  } : {}), {}, {
    class: i.classes.join(" ")
  });
  s && (l[yu] = "");
  const c = ve({}, i.styles);
  dC(o) && (c.transform = Y5e({
    transform: o,
    startCentered: !0,
    width: r,
    height: n
  }), c["-webkit-transform"] = c.transform);
  const u = z0(c);
  u.length > 0 && (l.style = u);
  const f = [];
  return f.push({
    tag: "span",
    attributes: l,
    children: [t]
  }), a && f.push({
    tag: "span",
    attributes: {
      class: "sr-only"
    },
    children: [a]
  }), f;
}
function b3e(e) {
  const {
    content: t,
    title: r,
    extra: n
  } = e, o = ve(ve(ve({}, n.attributes), r ? {
    title: r
  } : {}), {}, {
    class: n.classes.join(" ")
  }), a = z0(n.styles);
  a.length > 0 && (o.style = a);
  const i = [];
  return i.push({
    tag: "span",
    attributes: o,
    children: [t]
  }), r && i.push({
    tag: "span",
    attributes: {
      class: "sr-only"
    },
    children: [r]
  }), i;
}
const {
  styles: H2
} = va;
function EO(e) {
  const t = e[0], r = e[1], [n] = e.slice(4);
  let o = null;
  return Array.isArray(n) ? o = {
    tag: "g",
    attributes: {
      class: "".concat(He.cssPrefix, "-").concat(W2.GROUP)
    },
    children: [{
      tag: "path",
      attributes: {
        class: "".concat(He.cssPrefix, "-").concat(W2.SECONDARY),
        fill: "currentColor",
        d: n[0]
      }
    }, {
      tag: "path",
      attributes: {
        class: "".concat(He.cssPrefix, "-").concat(W2.PRIMARY),
        fill: "currentColor",
        d: n[1]
      }
    }]
  } : o = {
    tag: "path",
    attributes: {
      fill: "currentColor",
      d: n
    }
  }, {
    found: !0,
    width: t,
    height: r,
    icon: o
  };
}
const y3e = {
  found: !1,
  width: 512,
  height: 512
};
function v3e(e, t) {
  !$G && !He.showMissingIcons && e && console.error('Icon with name "'.concat(e, '" and prefix "').concat(t, '" is missing.'));
}
function SO(e, t) {
  let r = t;
  return t === "fa" && He.styleDefault !== null && (t = ic()), new Promise((n, o) => {
    if (r === "fa") {
      const a = DG(e) || {};
      e = a.iconName || e, t = a.prefix || t;
    }
    if (e && t && H2[t] && H2[t][e]) {
      const a = H2[t][e];
      return n(EO(a));
    }
    v3e(e, t), n(ve(ve({}, y3e), {}, {
      icon: He.showMissingIcons && e ? sc("missingIconAbstract") || {} : {}
    }));
  });
}
const H7 = () => {
}, PO = He.measurePerformance && uy && uy.mark && uy.measure ? uy : {
  mark: H7,
  measure: H7
}, og = 'FA "6.7.2"', x3e = (e) => (PO.mark("".concat(og, " ").concat(e, " begins")), () => WG(e)), WG = (e) => {
  PO.mark("".concat(og, " ").concat(e, " ends")), PO.measure("".concat(og, " ").concat(e), "".concat(og, " ").concat(e, " begins"), "".concat(og, " ").concat(e, " ends"));
};
var hC = {
  begin: x3e,
  end: WG
};
const sv = () => {
};
function G7(e) {
  return typeof (e.getAttribute ? e.getAttribute(yu) : null) == "string";
}
function w3e(e) {
  const t = e.getAttribute ? e.getAttribute(lC) : null, r = e.getAttribute ? e.getAttribute(cC) : null;
  return t && r;
}
function k3e(e) {
  return e && e.classList && e.classList.contains && e.classList.contains(He.replacementClass);
}
function $3e() {
  return He.autoReplaceSvg === !0 ? lv.replace : lv[He.autoReplaceSvg] || lv.replace;
}
function O3e(e) {
  return Wr.createElementNS("http://www.w3.org/2000/svg", e);
}
function E3e(e) {
  return Wr.createElement(e);
}
function UG(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  const {
    ceFn: r = e.tag === "svg" ? O3e : E3e
  } = t;
  if (typeof e == "string")
    return Wr.createTextNode(e);
  const n = r(e.tag);
  return Object.keys(e.attributes || []).forEach(function(o) {
    n.setAttribute(o, e.attributes[o]);
  }), (e.children || []).forEach(function(o) {
    n.appendChild(UG(o, {
      ceFn: r
    }));
  }), n;
}
function S3e(e) {
  let t = " ".concat(e.outerHTML, " ");
  return t = "".concat(t, "Font Awesome fontawesome.com "), t;
}
const lv = {
  replace: function(e) {
    const t = e[0];
    if (t.parentNode)
      if (e[1].forEach((r) => {
        t.parentNode.insertBefore(UG(r), t);
      }), t.getAttribute(yu) === null && He.keepOriginalSource) {
        let r = Wr.createComment(S3e(t));
        t.parentNode.replaceChild(r, t);
      } else
        t.remove();
  },
  nest: function(e) {
    const t = e[0], r = e[1];
    if (~fC(t).indexOf(He.replacementClass))
      return lv.replace(e);
    const n = new RegExp("".concat(He.cssPrefix, "-.*"));
    if (delete r[0].attributes.id, r[0].attributes.class) {
      const a = r[0].attributes.class.split(" ").reduce((i, s) => (s === He.replacementClass || s.match(n) ? i.toSvg.push(s) : i.toNode.push(s), i), {
        toNode: [],
        toSvg: []
      });
      r[0].attributes.class = a.toSvg.join(" "), a.toNode.length === 0 ? t.removeAttribute("class") : t.setAttribute("class", a.toNode.join(" "));
    }
    const o = r.map((a) => ub(a)).join(`
`);
    t.setAttribute(yu, ""), t.innerHTML = o;
  }
};
function q7(e) {
  e();
}
function YG(e, t) {
  const r = typeof t == "function" ? t : sv;
  if (e.length === 0)
    r();
  else {
    let n = q7;
    He.mutateApproach === A5e && (n = ac.requestAnimationFrame || q7), n(() => {
      const o = $3e(), a = hC.begin("mutate");
      e.map(o), a(), r();
    });
  }
}
let bC = !1;
function HG() {
  bC = !0;
}
function CO() {
  bC = !1;
}
let o1 = null;
function B7(e) {
  if (!T7 || !He.observeMutations)
    return;
  const {
    treeCallback: t = sv,
    nodeCallback: r = sv,
    pseudoElementsCallback: n = sv,
    observeMutationsRoot: o = Wr
  } = e;
  o1 = new T7((a) => {
    if (bC) return;
    const i = ic();
    Yd(a).forEach((s) => {
      if (s.type === "childList" && s.addedNodes.length > 0 && !G7(s.addedNodes[0]) && (He.searchPseudoElements && n(s.target), t(s.target)), s.type === "attributes" && s.target.parentNode && He.searchPseudoElements && n(s.target.parentNode), s.type === "attributes" && G7(s.target) && ~M5e.indexOf(s.attributeName))
        if (s.attributeName === "class" && w3e(s.target)) {
          const {
            prefix: l,
            iconName: c
          } = D0(fC(s.target));
          s.target.setAttribute(lC, l || i), c && s.target.setAttribute(cC, c);
        } else k3e(s.target) && r(s.target);
    });
  }), Ui && o1.observe(o, {
    childList: !0,
    attributes: !0,
    characterData: !0,
    subtree: !0
  });
}
function P3e() {
  o1 && o1.disconnect();
}
function C3e(e) {
  const t = e.getAttribute("style");
  let r = [];
  return t && (r = t.split(";").reduce((n, o) => {
    const a = o.split(":"), i = a[0], s = a.slice(1);
    return i && s.length > 0 && (n[i] = s.join(":").trim()), n;
  }, {})), r;
}
function A3e(e) {
  const t = e.getAttribute("data-prefix"), r = e.getAttribute("data-icon"), n = e.innerText !== void 0 ? e.innerText.trim() : "";
  let o = D0(fC(e));
  return o.prefix || (o.prefix = ic()), t && r && (o.prefix = t, o.iconName = r), o.iconName && o.prefix || (o.prefix && n.length > 0 && (o.iconName = e3e(o.prefix, e.innerText) || mC(o.prefix, NG(e.innerText))), !o.iconName && He.autoFetchSvg && e.firstChild && e.firstChild.nodeType === Node.TEXT_NODE && (o.iconName = e.firstChild.data)), o;
}
function _3e(e) {
  const t = Yd(e.attributes).reduce((o, a) => (o.name !== "class" && o.name !== "style" && (o[a.name] = a.value), o), {}), r = e.getAttribute("title"), n = e.getAttribute("data-fa-title-id");
  return He.autoA11y && (r ? t["aria-labelledby"] = "".concat(He.replacementClass, "-title-").concat(n || _h()) : (t["aria-hidden"] = "true", t.focusable = "false")), t;
}
function N3e() {
  return {
    iconName: null,
    title: null,
    titleId: null,
    prefix: null,
    transform: ya,
    symbol: !1,
    mask: {
      iconName: null,
      prefix: null,
      rest: []
    },
    maskId: null,
    extra: {
      classes: [],
      styles: {},
      attributes: {}
    }
  };
}
function X7(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {
    styleParser: !0
  };
  const {
    iconName: r,
    prefix: n,
    rest: o
  } = A3e(e), a = _3e(e), i = $O("parseNodeAttributes", {}, e);
  let s = t.styleParser ? C3e(e) : [];
  return ve({
    iconName: r,
    title: e.getAttribute("title"),
    titleId: e.getAttribute("data-fa-title-id"),
    prefix: n,
    transform: ya,
    mask: {
      iconName: null,
      prefix: null,
      rest: []
    },
    maskId: null,
    symbol: !1,
    extra: {
      classes: o,
      styles: s,
      attributes: a
    }
  }, i);
}
const {
  styles: j3e
} = va;
function GG(e) {
  const t = He.autoReplaceSvg === "nest" ? X7(e, {
    styleParser: !1
  }) : X7(e);
  return ~t.extra.classes.indexOf(EG) ? sc("generateLayersText", e, t) : sc("generateSvgReplacementMutation", e, t);
}
function I3e() {
  return [...p5e, ...hO];
}
function K7(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
  if (!Ui) return Promise.resolve();
  const r = Wr.documentElement.classList, n = (u) => r.add("".concat(z7, "-").concat(u)), o = (u) => r.remove("".concat(z7, "-").concat(u)), a = He.autoFetchSvg ? I3e() : yG.concat(Object.keys(j3e));
  a.includes("fa") || a.push("fa");
  const i = [".".concat(EG, ":not([").concat(yu, "])")].concat(a.map((u) => ".".concat(u, ":not([").concat(yu, "])"))).join(", ");
  if (i.length === 0)
    return Promise.resolve();
  let s = [];
  try {
    s = Yd(e.querySelectorAll(i));
  } catch {
  }
  if (s.length > 0)
    n("pending"), o("complete");
  else
    return Promise.resolve();
  const l = hC.begin("onTree"), c = s.reduce((u, f) => {
    try {
      const p = GG(f);
      p && u.push(p);
    } catch (p) {
      $G || p.name === "MissingIcon" && console.error(p);
    }
    return u;
  }, []);
  return new Promise((u, f) => {
    Promise.all(c).then((p) => {
      YG(p, () => {
        n("active"), n("complete"), o("pending"), typeof t == "function" && t(), l(), u();
      });
    }).catch((p) => {
      l(), f(p);
    });
  });
}
function T3e(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
  GG(e).then((r) => {
    r && YG([r], t);
  });
}
function M3e(e) {
  return function(t) {
    let r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    const n = (t || {}).icon ? t : OO(t || {});
    let {
      mask: o
    } = r;
    return o && (o = (o || {}).icon ? o : OO(o || {})), e(n, ve(ve({}, r), {}, {
      mask: o
    }));
  };
}
const R3e = function(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  const {
    transform: r = ya,
    symbol: n = !1,
    mask: o = null,
    maskId: a = null,
    title: i = null,
    titleId: s = null,
    classes: l = [],
    attributes: c = {},
    styles: u = {}
  } = t;
  if (!e) return;
  const {
    prefix: f,
    iconName: p,
    icon: v
  } = e;
  return L0(ve({
    type: "icon"
  }, e), () => (vu("beforeDOMElementCreation", {
    iconDefinition: e,
    params: t
  }), He.autoA11y && (i ? c["aria-labelledby"] = "".concat(He.replacementClass, "-title-").concat(s || _h()) : (c["aria-hidden"] = "true", c.focusable = "false")), gC({
    icons: {
      main: EO(v),
      mask: o ? EO(o.icon) : {
        found: !1,
        width: null,
        height: null,
        icon: {}
      }
    },
    prefix: f,
    iconName: p,
    transform: ve(ve({}, ya), r),
    symbol: n,
    title: i,
    maskId: a,
    titleId: s,
    extra: {
      attributes: c,
      styles: u,
      classes: l
    }
  })));
};
var z3e = {
  mixout() {
    return {
      icon: M3e(R3e)
    };
  },
  hooks() {
    return {
      mutationObserverCallbacks(e) {
        return e.treeCallback = K7, e.nodeCallback = T3e, e;
      }
    };
  },
  provides(e) {
    e.i2svg = function(t) {
      const {
        node: r = Wr,
        callback: n = () => {
        }
      } = t;
      return K7(r, n);
    }, e.generateSvgReplacementMutation = function(t, r) {
      const {
        iconName: n,
        title: o,
        titleId: a,
        prefix: i,
        transform: s,
        symbol: l,
        mask: c,
        maskId: u,
        extra: f
      } = r;
      return new Promise((p, v) => {
        Promise.all([SO(n, i), c.iconName ? SO(c.iconName, c.prefix) : Promise.resolve({
          found: !1,
          width: 512,
          height: 512,
          icon: {}
        })]).then((x) => {
          let [b, m] = x;
          p([t, gC({
            icons: {
              main: b,
              mask: m
            },
            prefix: i,
            iconName: n,
            transform: s,
            symbol: l,
            maskId: u,
            title: o,
            titleId: a,
            extra: f,
            watchable: !0
          })]);
        }).catch(v);
      });
    }, e.generateAbstractIcon = function(t) {
      let {
        children: r,
        attributes: n,
        main: o,
        transform: a,
        styles: i
      } = t;
      const s = z0(i);
      s.length > 0 && (n.style = s);
      let l;
      return dC(a) && (l = sc("generateAbstractTransformGrouping", {
        main: o,
        transform: a,
        containerWidth: o.width,
        iconWidth: o.width
      })), r.push(l || o.icon), {
        children: r,
        attributes: n
      };
    };
  }
}, F3e = {
  mixout() {
    return {
      layer(e) {
        let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        const {
          classes: r = []
        } = t;
        return L0({
          type: "layer"
        }, () => {
          vu("beforeDOMElementCreation", {
            assembler: e,
            params: t
          });
          let n = [];
          return e((o) => {
            Array.isArray(o) ? o.map((a) => {
              n = n.concat(a.abstract);
            }) : n = n.concat(o.abstract);
          }), [{
            tag: "span",
            attributes: {
              class: ["".concat(He.cssPrefix, "-layers"), ...r].join(" ")
            },
            children: n
          }];
        });
      }
    };
  }
}, D3e = {
  mixout() {
    return {
      counter(e) {
        let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        const {
          title: r = null,
          classes: n = [],
          attributes: o = {},
          styles: a = {}
        } = t;
        return L0({
          type: "counter",
          content: e
        }, () => (vu("beforeDOMElementCreation", {
          content: e,
          params: t
        }), b3e({
          content: e.toString(),
          title: r,
          extra: {
            attributes: o,
            styles: a,
            classes: ["".concat(He.cssPrefix, "-layers-counter"), ...n]
          }
        })));
      }
    };
  }
}, L3e = {
  mixout() {
    return {
      text(e) {
        let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        const {
          transform: r = ya,
          title: n = null,
          classes: o = [],
          attributes: a = {},
          styles: i = {}
        } = t;
        return L0({
          type: "text",
          content: e
        }, () => (vu("beforeDOMElementCreation", {
          content: e,
          params: t
        }), Y7({
          content: e,
          transform: ve(ve({}, ya), r),
          title: n,
          extra: {
            attributes: a,
            styles: i,
            classes: ["".concat(He.cssPrefix, "-layers-text"), ...o]
          }
        })));
      }
    };
  },
  provides(e) {
    e.generateLayersText = function(t, r) {
      const {
        title: n,
        transform: o,
        extra: a
      } = r;
      let i = null, s = null;
      if (hG) {
        const l = parseInt(getComputedStyle(t).fontSize, 10), c = t.getBoundingClientRect();
        i = c.width / l, s = c.height / l;
      }
      return He.autoA11y && !n && (a.attributes["aria-hidden"] = "true"), Promise.resolve([t, Y7({
        content: t.innerHTML,
        width: i,
        height: s,
        transform: o,
        title: n,
        extra: a,
        watchable: !0
      })]);
    };
  }
};
const V3e = new RegExp('"', "ug"), J7 = [1105920, 1112319], Q7 = ve(ve(ve(ve({}, {
  FontAwesome: {
    normal: "fas",
    400: "fas"
  }
}), u5e), P5e), x5e), AO = Object.keys(Q7).reduce((e, t) => (e[t.toLowerCase()] = Q7[t], e), {}), W3e = Object.keys(AO).reduce((e, t) => {
  const r = AO[t];
  return e[t] = r[900] || [...Object.entries(r)][0][1], e;
}, {});
function U3e(e) {
  const t = e.replace(V3e, ""), r = X5e(t, 0), n = r >= J7[0] && r <= J7[1], o = t.length === 2 ? t[0] === t[1] : !1;
  return {
    value: NG(o ? t[0] : t),
    isSecondary: n || o
  };
}
function Y3e(e, t) {
  const r = e.replace(/^['"]|['"]$/g, "").toLowerCase(), n = parseInt(t), o = isNaN(n) ? "normal" : n;
  return (AO[r] || {})[o] || W3e[r];
}
function Z7(e, t) {
  const r = "".concat(C5e).concat(t.replace(":", "-"));
  return new Promise((n, o) => {
    if (e.getAttribute(r) !== null)
      return n();
    const a = Yd(e.children).filter((f) => f.getAttribute(yO) === t)[0], i = ac.getComputedStyle(e, t), s = i.getPropertyValue("font-family"), l = s.match(I5e), c = i.getPropertyValue("font-weight"), u = i.getPropertyValue("content");
    if (a && !l)
      return e.removeChild(a), n();
    if (l && u !== "none" && u !== "") {
      const f = i.getPropertyValue("content");
      let p = Y3e(s, c);
      const {
        value: v,
        isSecondary: x
      } = U3e(f), b = l[0].startsWith("FontAwesome");
      let m = mC(p, v), w = m;
      if (b) {
        const $ = t3e(v);
        $.iconName && $.prefix && (m = $.iconName, p = $.prefix);
      }
      if (m && !x && (!a || a.getAttribute(lC) !== p || a.getAttribute(cC) !== w)) {
        e.setAttribute(r, w), a && e.removeChild(a);
        const $ = N3e(), {
          extra: E
        } = $;
        E.attributes[yO] = t, SO(m, p).then((S) => {
          const h = gC(ve(ve({}, $), {}, {
            icons: {
              main: S,
              mask: LG()
            },
            prefix: p,
            iconName: w,
            extra: E,
            watchable: !0
          })), U = Wr.createElementNS("http://www.w3.org/2000/svg", "svg");
          t === "::before" ? e.insertBefore(U, e.firstChild) : e.appendChild(U), U.outerHTML = h.map((G) => ub(G)).join(`
`), e.removeAttribute(r), n();
        }).catch(o);
      } else
        n();
    } else
      n();
  });
}
function H3e(e) {
  return Promise.all([Z7(e, "::before"), Z7(e, "::after")]);
}
function G3e(e) {
  return e.parentNode !== document.head && !~_5e.indexOf(e.tagName.toUpperCase()) && !e.getAttribute(yO) && (!e.parentNode || e.parentNode.tagName !== "svg");
}
function eT(e) {
  if (Ui)
    return new Promise((t, r) => {
      const n = Yd(e.querySelectorAll("*")).filter(G3e).map(H3e), o = hC.begin("searchPseudoElements");
      HG(), Promise.all(n).then(() => {
        o(), CO(), t();
      }).catch(() => {
        o(), CO(), r();
      });
    });
}
var q3e = {
  hooks() {
    return {
      mutationObserverCallbacks(e) {
        return e.pseudoElementsCallback = eT, e;
      }
    };
  },
  provides(e) {
    e.pseudoElements2svg = function(t) {
      const {
        node: r = Wr
      } = t;
      He.searchPseudoElements && eT(r);
    };
  }
};
let tT = !1;
var B3e = {
  mixout() {
    return {
      dom: {
        unwatch() {
          HG(), tT = !0;
        }
      }
    };
  },
  hooks() {
    return {
      bootstrap() {
        B7($O("mutationObserverCallbacks", {}));
      },
      noAuto() {
        P3e();
      },
      watch(e) {
        const {
          observeMutationsRoot: t
        } = e;
        tT ? CO() : B7($O("mutationObserverCallbacks", {
          observeMutationsRoot: t
        }));
      }
    };
  }
};
const rT = (e) => {
  let t = {
    size: 16,
    x: 0,
    y: 0,
    flipX: !1,
    flipY: !1,
    rotate: 0
  };
  return e.toLowerCase().split(" ").reduce((r, n) => {
    const o = n.toLowerCase().split("-"), a = o[0];
    let i = o.slice(1).join("-");
    if (a && i === "h")
      return r.flipX = !0, r;
    if (a && i === "v")
      return r.flipY = !0, r;
    if (i = parseFloat(i), isNaN(i))
      return r;
    switch (a) {
      case "grow":
        r.size = r.size + i;
        break;
      case "shrink":
        r.size = r.size - i;
        break;
      case "left":
        r.x = r.x - i;
        break;
      case "right":
        r.x = r.x + i;
        break;
      case "up":
        r.y = r.y - i;
        break;
      case "down":
        r.y = r.y + i;
        break;
      case "rotate":
        r.rotate = r.rotate + i;
        break;
    }
    return r;
  }, t);
};
var X3e = {
  mixout() {
    return {
      parse: {
        transform: (e) => rT(e)
      }
    };
  },
  hooks() {
    return {
      parseNodeAttributes(e, t) {
        const r = t.getAttribute("data-fa-transform");
        return r && (e.transform = rT(r)), e;
      }
    };
  },
  provides(e) {
    e.generateAbstractTransformGrouping = function(t) {
      let {
        main: r,
        transform: n,
        containerWidth: o,
        iconWidth: a
      } = t;
      const i = {
        transform: "translate(".concat(o / 2, " 256)")
      }, s = "translate(".concat(n.x * 32, ", ").concat(n.y * 32, ") "), l = "scale(".concat(n.size / 16 * (n.flipX ? -1 : 1), ", ").concat(n.size / 16 * (n.flipY ? -1 : 1), ") "), c = "rotate(".concat(n.rotate, " 0 0)"), u = {
        transform: "".concat(s, " ").concat(l, " ").concat(c)
      }, f = {
        transform: "translate(".concat(a / 2 * -1, " -256)")
      }, p = {
        outer: i,
        inner: u,
        path: f
      };
      return {
        tag: "g",
        attributes: ve({}, p.outer),
        children: [{
          tag: "g",
          attributes: ve({}, p.inner),
          children: [{
            tag: r.icon.tag,
            children: r.icon.children,
            attributes: ve(ve({}, r.icon.attributes), p.path)
          }]
        }]
      };
    };
  }
};
const G2 = {
  x: 0,
  y: 0,
  width: "100%",
  height: "100%"
};
function nT(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0;
  return e.attributes && (e.attributes.fill || t) && (e.attributes.fill = "black"), e;
}
function K3e(e) {
  return e.tag === "g" ? e.children : [e];
}
var J3e = {
  hooks() {
    return {
      parseNodeAttributes(e, t) {
        const r = t.getAttribute("data-fa-mask"), n = r ? D0(r.split(" ").map((o) => o.trim())) : LG();
        return n.prefix || (n.prefix = ic()), e.mask = n, e.maskId = t.getAttribute("data-fa-mask-id"), e;
      }
    };
  },
  provides(e) {
    e.generateAbstractMask = function(t) {
      let {
        children: r,
        attributes: n,
        main: o,
        mask: a,
        maskId: i,
        transform: s
      } = t;
      const {
        width: l,
        icon: c
      } = o, {
        width: u,
        icon: f
      } = a, p = U5e({
        transform: s,
        containerWidth: u,
        iconWidth: l
      }), v = {
        tag: "rect",
        attributes: ve(ve({}, G2), {}, {
          fill: "white"
        })
      }, x = c.children ? {
        children: c.children.map(nT)
      } : {}, b = {
        tag: "g",
        attributes: ve({}, p.inner),
        children: [nT(ve({
          tag: c.tag,
          attributes: ve(ve({}, c.attributes), p.path)
        }, x))]
      }, m = {
        tag: "g",
        attributes: ve({}, p.outer),
        children: [b]
      }, w = "mask-".concat(i || _h()), $ = "clip-".concat(i || _h()), E = {
        tag: "mask",
        attributes: ve(ve({}, G2), {}, {
          id: w,
          maskUnits: "userSpaceOnUse",
          maskContentUnits: "userSpaceOnUse"
        }),
        children: [v, m]
      }, S = {
        tag: "defs",
        children: [{
          tag: "clipPath",
          attributes: {
            id: $
          },
          children: K3e(f)
        }, E]
      };
      return r.push(S, {
        tag: "rect",
        attributes: ve({
          fill: "currentColor",
          "clip-path": "url(#".concat($, ")"),
          mask: "url(#".concat(w, ")")
        }, G2)
      }), {
        children: r,
        attributes: n
      };
    };
  }
}, Q3e = {
  provides(e) {
    let t = !1;
    ac.matchMedia && (t = ac.matchMedia("(prefers-reduced-motion: reduce)").matches), e.missingIconAbstract = function() {
      const r = [], n = {
        fill: "currentColor"
      }, o = {
        attributeType: "XML",
        repeatCount: "indefinite",
        dur: "2s"
      };
      r.push({
        tag: "path",
        attributes: ve(ve({}, n), {}, {
          d: "M156.5,447.7l-12.6,29.5c-18.7-9.5-35.9-21.2-51.5-34.9l22.7-22.7C127.6,430.5,141.5,440,156.5,447.7z M40.6,272H8.5 c1.4,21.2,5.4,41.7,11.7,61.1L50,321.2C45.1,305.5,41.8,289,40.6,272z M40.6,240c1.4-18.8,5.2-37,11.1-54.1l-29.5-12.6 C14.7,194.3,10,216.7,8.5,240H40.6z M64.3,156.5c7.8-14.9,17.2-28.8,28.1-41.5L69.7,92.3c-13.7,15.6-25.5,32.8-34.9,51.5 L64.3,156.5z M397,419.6c-13.9,12-29.4,22.3-46.1,30.4l11.9,29.8c20.7-9.9,39.8-22.6,56.9-37.6L397,419.6z M115,92.4 c13.9-12,29.4-22.3,46.1-30.4l-11.9-29.8c-20.7,9.9-39.8,22.6-56.8,37.6L115,92.4z M447.7,355.5c-7.8,14.9-17.2,28.8-28.1,41.5 l22.7,22.7c13.7-15.6,25.5-32.9,34.9-51.5L447.7,355.5z M471.4,272c-1.4,18.8-5.2,37-11.1,54.1l29.5,12.6 c7.5-21.1,12.2-43.5,13.6-66.8H471.4z M321.2,462c-15.7,5-32.2,8.2-49.2,9.4v32.1c21.2-1.4,41.7-5.4,61.1-11.7L321.2,462z M240,471.4c-18.8-1.4-37-5.2-54.1-11.1l-12.6,29.5c21.1,7.5,43.5,12.2,66.8,13.6V471.4z M462,190.8c5,15.7,8.2,32.2,9.4,49.2h32.1 c-1.4-21.2-5.4-41.7-11.7-61.1L462,190.8z M92.4,397c-12-13.9-22.3-29.4-30.4-46.1l-29.8,11.9c9.9,20.7,22.6,39.8,37.6,56.9 L92.4,397z M272,40.6c18.8,1.4,36.9,5.2,54.1,11.1l12.6-29.5C317.7,14.7,295.3,10,272,8.5V40.6z M190.8,50 c15.7-5,32.2-8.2,49.2-9.4V8.5c-21.2,1.4-41.7,5.4-61.1,11.7L190.8,50z M442.3,92.3L419.6,115c12,13.9,22.3,29.4,30.5,46.1 l29.8-11.9C470,128.5,457.3,109.4,442.3,92.3z M397,92.4l22.7-22.7c-15.6-13.7-32.8-25.5-51.5-34.9l-12.6,29.5 C370.4,72.1,384.4,81.5,397,92.4z"
        })
      });
      const a = ve(ve({}, o), {}, {
        attributeName: "opacity"
      }), i = {
        tag: "circle",
        attributes: ve(ve({}, n), {}, {
          cx: "256",
          cy: "364",
          r: "28"
        }),
        children: []
      };
      return t || i.children.push({
        tag: "animate",
        attributes: ve(ve({}, o), {}, {
          attributeName: "r",
          values: "28;14;28;28;14;28;"
        })
      }, {
        tag: "animate",
        attributes: ve(ve({}, a), {}, {
          values: "1;0;1;1;0;1;"
        })
      }), r.push(i), r.push({
        tag: "path",
        attributes: ve(ve({}, n), {}, {
          opacity: "1",
          d: "M263.7,312h-16c-6.6,0-12-5.4-12-12c0-71,77.4-63.9,77.4-107.8c0-20-17.8-40.2-57.4-40.2c-29.1,0-44.3,9.6-59.2,28.7 c-3.9,5-11.1,6-16.2,2.4l-13.1-9.2c-5.6-3.9-6.9-11.8-2.6-17.2c21.2-27.2,46.4-44.7,91.2-44.7c52.3,0,97.4,29.8,97.4,80.2 c0,67.6-77.4,63.5-77.4,107.8C275.7,306.6,270.3,312,263.7,312z"
        }),
        children: t ? [] : [{
          tag: "animate",
          attributes: ve(ve({}, a), {}, {
            values: "1;0;0;0;0;1;"
          })
        }]
      }), t || r.push({
        tag: "path",
        attributes: ve(ve({}, n), {}, {
          opacity: "0",
          d: "M232.5,134.5l7,168c0.3,6.4,5.6,11.5,12,11.5h9c6.4,0,11.7-5.1,12-11.5l7-168c0.3-6.8-5.2-12.5-12-12.5h-23 C237.7,122,232.2,127.7,232.5,134.5z"
        }),
        children: [{
          tag: "animate",
          attributes: ve(ve({}, a), {}, {
            values: "0;0;1;1;0;0;"
          })
        }]
      }), {
        tag: "g",
        attributes: {
          class: "missing"
        },
        children: r
      };
    };
  }
}, Z3e = {
  hooks() {
    return {
      parseNodeAttributes(e, t) {
        const r = t.getAttribute("data-fa-symbol"), n = r === null ? !1 : r === "" ? !0 : r;
        return e.symbol = n, e;
      }
    };
  }
}, eOe = [G5e, z3e, F3e, D3e, L3e, q3e, B3e, X3e, J3e, Q3e, Z3e];
u3e(eOe, {
  mixoutsTo: to
});
to.noAuto;
to.config;
to.library;
to.dom;
const _O = to.parse;
to.findIconDefinition;
to.toHtml;
const tOe = to.icon;
to.layer;
to.text;
to.counter;
function rOe(e) {
  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e;
}
var dy = { exports: {} }, q2 = { exports: {} }, Qt = {};
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var oT;
function nOe() {
  if (oT) return Qt;
  oT = 1;
  var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, r = e ? Symbol.for("react.portal") : 60106, n = e ? Symbol.for("react.fragment") : 60107, o = e ? Symbol.for("react.strict_mode") : 60108, a = e ? Symbol.for("react.profiler") : 60114, i = e ? Symbol.for("react.provider") : 60109, s = e ? Symbol.for("react.context") : 60110, l = e ? Symbol.for("react.async_mode") : 60111, c = e ? Symbol.for("react.concurrent_mode") : 60111, u = e ? Symbol.for("react.forward_ref") : 60112, f = e ? Symbol.for("react.suspense") : 60113, p = e ? Symbol.for("react.suspense_list") : 60120, v = e ? Symbol.for("react.memo") : 60115, x = e ? Symbol.for("react.lazy") : 60116, b = e ? Symbol.for("react.block") : 60121, m = e ? Symbol.for("react.fundamental") : 60117, w = e ? Symbol.for("react.responder") : 60118, $ = e ? Symbol.for("react.scope") : 60119;
  function E(h) {
    if (typeof h == "object" && h !== null) {
      var U = h.$$typeof;
      switch (U) {
        case t:
          switch (h = h.type, h) {
            case l:
            case c:
            case n:
            case a:
            case o:
            case f:
              return h;
            default:
              switch (h = h && h.$$typeof, h) {
                case s:
                case u:
                case x:
                case v:
                case i:
                  return h;
                default:
                  return U;
              }
          }
        case r:
          return U;
      }
    }
  }
  function S(h) {
    return E(h) === c;
  }
  return Qt.AsyncMode = l, Qt.ConcurrentMode = c, Qt.ContextConsumer = s, Qt.ContextProvider = i, Qt.Element = t, Qt.ForwardRef = u, Qt.Fragment = n, Qt.Lazy = x, Qt.Memo = v, Qt.Portal = r, Qt.Profiler = a, Qt.StrictMode = o, Qt.Suspense = f, Qt.isAsyncMode = function(h) {
    return S(h) || E(h) === l;
  }, Qt.isConcurrentMode = S, Qt.isContextConsumer = function(h) {
    return E(h) === s;
  }, Qt.isContextProvider = function(h) {
    return E(h) === i;
  }, Qt.isElement = function(h) {
    return typeof h == "object" && h !== null && h.$$typeof === t;
  }, Qt.isForwardRef = function(h) {
    return E(h) === u;
  }, Qt.isFragment = function(h) {
    return E(h) === n;
  }, Qt.isLazy = function(h) {
    return E(h) === x;
  }, Qt.isMemo = function(h) {
    return E(h) === v;
  }, Qt.isPortal = function(h) {
    return E(h) === r;
  }, Qt.isProfiler = function(h) {
    return E(h) === a;
  }, Qt.isStrictMode = function(h) {
    return E(h) === o;
  }, Qt.isSuspense = function(h) {
    return E(h) === f;
  }, Qt.isValidElementType = function(h) {
    return typeof h == "string" || typeof h == "function" || h === n || h === c || h === a || h === o || h === f || h === p || typeof h == "object" && h !== null && (h.$$typeof === x || h.$$typeof === v || h.$$typeof === i || h.$$typeof === s || h.$$typeof === u || h.$$typeof === m || h.$$typeof === w || h.$$typeof === $ || h.$$typeof === b);
  }, Qt.typeOf = E, Qt;
}
var dr = {};
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var aT;
function oOe() {
  return aT || (aT = 1, process.env.NODE_ENV !== "production" && function() {
    var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, r = e ? Symbol.for("react.portal") : 60106, n = e ? Symbol.for("react.fragment") : 60107, o = e ? Symbol.for("react.strict_mode") : 60108, a = e ? Symbol.for("react.profiler") : 60114, i = e ? Symbol.for("react.provider") : 60109, s = e ? Symbol.for("react.context") : 60110, l = e ? Symbol.for("react.async_mode") : 60111, c = e ? Symbol.for("react.concurrent_mode") : 60111, u = e ? Symbol.for("react.forward_ref") : 60112, f = e ? Symbol.for("react.suspense") : 60113, p = e ? Symbol.for("react.suspense_list") : 60120, v = e ? Symbol.for("react.memo") : 60115, x = e ? Symbol.for("react.lazy") : 60116, b = e ? Symbol.for("react.block") : 60121, m = e ? Symbol.for("react.fundamental") : 60117, w = e ? Symbol.for("react.responder") : 60118, $ = e ? Symbol.for("react.scope") : 60119;
    function E(k) {
      return typeof k == "string" || typeof k == "function" || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
      k === n || k === c || k === a || k === o || k === f || k === p || typeof k == "object" && k !== null && (k.$$typeof === x || k.$$typeof === v || k.$$typeof === i || k.$$typeof === s || k.$$typeof === u || k.$$typeof === m || k.$$typeof === w || k.$$typeof === $ || k.$$typeof === b);
    }
    function S(k) {
      if (typeof k == "object" && k !== null) {
        var oe = k.$$typeof;
        switch (oe) {
          case t:
            var Ce = k.type;
            switch (Ce) {
              case l:
              case c:
              case n:
              case a:
              case o:
              case f:
                return Ce;
              default:
                var Ze = Ce && Ce.$$typeof;
                switch (Ze) {
                  case s:
                  case u:
                  case x:
                  case v:
                  case i:
                    return Ze;
                  default:
                    return oe;
                }
            }
          case r:
            return oe;
        }
      }
    }
    var h = l, U = c, G = s, Q = i, Z = t, X = u, J = n, I = x, te = v, V = r, D = a, F = o, R = f, H = !1;
    function B(k) {
      return H || (H = !0, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.")), g(k) || S(k) === l;
    }
    function g(k) {
      return S(k) === c;
    }
    function d(k) {
      return S(k) === s;
    }
    function O(k) {
      return S(k) === i;
    }
    function C(k) {
      return typeof k == "object" && k !== null && k.$$typeof === t;
    }
    function A(k) {
      return S(k) === u;
    }
    function N(k) {
      return S(k) === n;
    }
    function j(k) {
      return S(k) === x;
    }
    function _(k) {
      return S(k) === v;
    }
    function T(k) {
      return S(k) === r;
    }
    function M(k) {
      return S(k) === a;
    }
    function z(k) {
      return S(k) === o;
    }
    function ee(k) {
      return S(k) === f;
    }
    dr.AsyncMode = h, dr.ConcurrentMode = U, dr.ContextConsumer = G, dr.ContextProvider = Q, dr.Element = Z, dr.ForwardRef = X, dr.Fragment = J, dr.Lazy = I, dr.Memo = te, dr.Portal = V, dr.Profiler = D, dr.StrictMode = F, dr.Suspense = R, dr.isAsyncMode = B, dr.isConcurrentMode = g, dr.isContextConsumer = d, dr.isContextProvider = O, dr.isElement = C, dr.isForwardRef = A, dr.isFragment = N, dr.isLazy = j, dr.isMemo = _, dr.isPortal = T, dr.isProfiler = M, dr.isStrictMode = z, dr.isSuspense = ee, dr.isValidElementType = E, dr.typeOf = S;
  }()), dr;
}
var iT;
function qG() {
  return iT || (iT = 1, process.env.NODE_ENV === "production" ? q2.exports = nOe() : q2.exports = oOe()), q2.exports;
}
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
var B2, sT;
function aOe() {
  if (sT) return B2;
  sT = 1;
  var e = Object.getOwnPropertySymbols, t = Object.prototype.hasOwnProperty, r = Object.prototype.propertyIsEnumerable;
  function n(a) {
    if (a == null)
      throw new TypeError("Object.assign cannot be called with null or undefined");
    return Object(a);
  }
  function o() {
    try {
      if (!Object.assign)
        return !1;
      var a = new String("abc");
      if (a[5] = "de", Object.getOwnPropertyNames(a)[0] === "5")
        return !1;
      for (var i = {}, s = 0; s < 10; s++)
        i["_" + String.fromCharCode(s)] = s;
      var l = Object.getOwnPropertyNames(i).map(function(u) {
        return i[u];
      });
      if (l.join("") !== "0123456789")
        return !1;
      var c = {};
      return "abcdefghijklmnopqrst".split("").forEach(function(u) {
        c[u] = u;
      }), Object.keys(Object.assign({}, c)).join("") === "abcdefghijklmnopqrst";
    } catch {
      return !1;
    }
  }
  return B2 = o() ? Object.assign : function(a, i) {
    for (var s, l = n(a), c, u = 1; u < arguments.length; u++) {
      s = Object(arguments[u]);
      for (var f in s)
        t.call(s, f) && (l[f] = s[f]);
      if (e) {
        c = e(s);
        for (var p = 0; p < c.length; p++)
          r.call(s, c[p]) && (l[c[p]] = s[c[p]]);
      }
    }
    return l;
  }, B2;
}
var X2, lT;
function yC() {
  if (lT) return X2;
  lT = 1;
  var e = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
  return X2 = e, X2;
}
var cT, uT;
function BG() {
  return uT || (uT = 1, cT = Function.call.bind(Object.prototype.hasOwnProperty)), cT;
}
var K2, fT;
function iOe() {
  if (fT) return K2;
  fT = 1;
  var e = function() {
  };
  if (process.env.NODE_ENV !== "production") {
    var t = /* @__PURE__ */ yC(), r = {}, n = /* @__PURE__ */ BG();
    e = function(a) {
      var i = "Warning: " + a;
      typeof console < "u" && console.error(i);
      try {
        throw new Error(i);
      } catch {
      }
    };
  }
  function o(a, i, s, l, c) {
    if (process.env.NODE_ENV !== "production") {
      for (var u in a)
        if (n(a, u)) {
          var f;
          try {
            if (typeof a[u] != "function") {
              var p = Error(
                (l || "React class") + ": " + s + " type `" + u + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof a[u] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`."
              );
              throw p.name = "Invariant Violation", p;
            }
            f = a[u](i, u, l, s, null, t);
          } catch (x) {
            f = x;
          }
          if (f && !(f instanceof Error) && e(
            (l || "React class") + ": type specification of " + s + " `" + u + "` is invalid; the type checker function must return `null` or an `Error` but returned a " + typeof f + ". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument)."
          ), f instanceof Error && !(f.message in r)) {
            r[f.message] = !0;
            var v = c ? c() : "";
            e(
              "Failed " + s + " type: " + f.message + (v ?? "")
            );
          }
        }
    }
  }
  return o.resetWarningCache = function() {
    process.env.NODE_ENV !== "production" && (r = {});
  }, K2 = o, K2;
}
var J2, dT;
function sOe() {
  if (dT) return J2;
  dT = 1;
  var e = qG(), t = aOe(), r = /* @__PURE__ */ yC(), n = /* @__PURE__ */ BG(), o = /* @__PURE__ */ iOe(), a = function() {
  };
  process.env.NODE_ENV !== "production" && (a = function(s) {
    var l = "Warning: " + s;
    typeof console < "u" && console.error(l);
    try {
      throw new Error(l);
    } catch {
    }
  });
  function i() {
    return null;
  }
  return J2 = function(s, l) {
    var c = typeof Symbol == "function" && Symbol.iterator, u = "@@iterator";
    function f(g) {
      var d = g && (c && g[c] || g[u]);
      if (typeof d == "function")
        return d;
    }
    var p = "<<anonymous>>", v = {
      array: w("array"),
      bigint: w("bigint"),
      bool: w("boolean"),
      func: w("function"),
      number: w("number"),
      object: w("object"),
      string: w("string"),
      symbol: w("symbol"),
      any: $(),
      arrayOf: E,
      element: S(),
      elementType: h(),
      instanceOf: U,
      node: X(),
      objectOf: Q,
      oneOf: G,
      oneOfType: Z,
      shape: I,
      exact: te
    };
    function x(g, d) {
      return g === d ? g !== 0 || 1 / g === 1 / d : g !== g && d !== d;
    }
    function b(g, d) {
      this.message = g, this.data = d && typeof d == "object" ? d : {}, this.stack = "";
    }
    b.prototype = Error.prototype;
    function m(g) {
      if (process.env.NODE_ENV !== "production")
        var d = {}, O = 0;
      function C(N, j, _, T, M, z, ee) {
        if (T = T || p, z = z || _, ee !== r) {
          if (l) {
            var k = new Error(
              "Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types"
            );
            throw k.name = "Invariant Violation", k;
          } else if (process.env.NODE_ENV !== "production" && typeof console < "u") {
            var oe = T + ":" + _;
            !d[oe] && // Avoid spamming the console because they are often not actionable except for lib authors
            O < 3 && (a(
              "You are manually calling a React.PropTypes validation function for the `" + z + "` prop on `" + T + "`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details."
            ), d[oe] = !0, O++);
          }
        }
        return j[_] == null ? N ? j[_] === null ? new b("The " + M + " `" + z + "` is marked as required " + ("in `" + T + "`, but its value is `null`.")) : new b("The " + M + " `" + z + "` is marked as required in " + ("`" + T + "`, but its value is `undefined`.")) : null : g(j, _, T, M, z);
      }
      var A = C.bind(null, !1);
      return A.isRequired = C.bind(null, !0), A;
    }
    function w(g) {
      function d(O, C, A, N, j, _) {
        var T = O[C], M = F(T);
        if (M !== g) {
          var z = R(T);
          return new b(
            "Invalid " + N + " `" + j + "` of type " + ("`" + z + "` supplied to `" + A + "`, expected ") + ("`" + g + "`."),
            { expectedType: g }
          );
        }
        return null;
      }
      return m(d);
    }
    function $() {
      return m(i);
    }
    function E(g) {
      function d(O, C, A, N, j) {
        if (typeof g != "function")
          return new b("Property `" + j + "` of component `" + A + "` has invalid PropType notation inside arrayOf.");
        var _ = O[C];
        if (!Array.isArray(_)) {
          var T = F(_);
          return new b("Invalid " + N + " `" + j + "` of type " + ("`" + T + "` supplied to `" + A + "`, expected an array."));
        }
        for (var M = 0; M < _.length; M++) {
          var z = g(_, M, A, N, j + "[" + M + "]", r);
          if (z instanceof Error)
            return z;
        }
        return null;
      }
      return m(d);
    }
    function S() {
      function g(d, O, C, A, N) {
        var j = d[O];
        if (!s(j)) {
          var _ = F(j);
          return new b("Invalid " + A + " `" + N + "` of type " + ("`" + _ + "` supplied to `" + C + "`, expected a single ReactElement."));
        }
        return null;
      }
      return m(g);
    }
    function h() {
      function g(d, O, C, A, N) {
        var j = d[O];
        if (!e.isValidElementType(j)) {
          var _ = F(j);
          return new b("Invalid " + A + " `" + N + "` of type " + ("`" + _ + "` supplied to `" + C + "`, expected a single ReactElement type."));
        }
        return null;
      }
      return m(g);
    }
    function U(g) {
      function d(O, C, A, N, j) {
        if (!(O[C] instanceof g)) {
          var _ = g.name || p, T = B(O[C]);
          return new b("Invalid " + N + " `" + j + "` of type " + ("`" + T + "` supplied to `" + A + "`, expected ") + ("instance of `" + _ + "`."));
        }
        return null;
      }
      return m(d);
    }
    function G(g) {
      if (!Array.isArray(g))
        return process.env.NODE_ENV !== "production" && (arguments.length > 1 ? a(
          "Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z])."
        ) : a("Invalid argument supplied to oneOf, expected an array.")), i;
      function d(O, C, A, N, j) {
        for (var _ = O[C], T = 0; T < g.length; T++)
          if (x(_, g[T]))
            return null;
        var M = JSON.stringify(g, function(z, ee) {
          var k = R(ee);
          return k === "symbol" ? String(ee) : ee;
        });
        return new b("Invalid " + N + " `" + j + "` of value `" + String(_) + "` " + ("supplied to `" + A + "`, expected one of " + M + "."));
      }
      return m(d);
    }
    function Q(g) {
      function d(O, C, A, N, j) {
        if (typeof g != "function")
          return new b("Property `" + j + "` of component `" + A + "` has invalid PropType notation inside objectOf.");
        var _ = O[C], T = F(_);
        if (T !== "object")
          return new b("Invalid " + N + " `" + j + "` of type " + ("`" + T + "` supplied to `" + A + "`, expected an object."));
        for (var M in _)
          if (n(_, M)) {
            var z = g(_, M, A, N, j + "." + M, r);
            if (z instanceof Error)
              return z;
          }
        return null;
      }
      return m(d);
    }
    function Z(g) {
      if (!Array.isArray(g))
        return process.env.NODE_ENV !== "production" && a("Invalid argument supplied to oneOfType, expected an instance of array."), i;
      for (var d = 0; d < g.length; d++) {
        var O = g[d];
        if (typeof O != "function")
          return a(
            "Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + H(O) + " at index " + d + "."
          ), i;
      }
      function C(A, N, j, _, T) {
        for (var M = [], z = 0; z < g.length; z++) {
          var ee = g[z], k = ee(A, N, j, _, T, r);
          if (k == null)
            return null;
          k.data && n(k.data, "expectedType") && M.push(k.data.expectedType);
        }
        var oe = M.length > 0 ? ", expected one of type [" + M.join(", ") + "]" : "";
        return new b("Invalid " + _ + " `" + T + "` supplied to " + ("`" + j + "`" + oe + "."));
      }
      return m(C);
    }
    function X() {
      function g(d, O, C, A, N) {
        return V(d[O]) ? null : new b("Invalid " + A + " `" + N + "` supplied to " + ("`" + C + "`, expected a ReactNode."));
      }
      return m(g);
    }
    function J(g, d, O, C, A) {
      return new b(
        (g || "React class") + ": " + d + " type `" + O + "." + C + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + A + "`."
      );
    }
    function I(g) {
      function d(O, C, A, N, j) {
        var _ = O[C], T = F(_);
        if (T !== "object")
          return new b("Invalid " + N + " `" + j + "` of type `" + T + "` " + ("supplied to `" + A + "`, expected `object`."));
        for (var M in g) {
          var z = g[M];
          if (typeof z != "function")
            return J(A, N, j, M, R(z));
          var ee = z(_, M, A, N, j + "." + M, r);
          if (ee)
            return ee;
        }
        return null;
      }
      return m(d);
    }
    function te(g) {
      function d(O, C, A, N, j) {
        var _ = O[C], T = F(_);
        if (T !== "object")
          return new b("Invalid " + N + " `" + j + "` of type `" + T + "` " + ("supplied to `" + A + "`, expected `object`."));
        var M = t({}, O[C], g);
        for (var z in M) {
          var ee = g[z];
          if (n(g, z) && typeof ee != "function")
            return J(A, N, j, z, R(ee));
          if (!ee)
            return new b(
              "Invalid " + N + " `" + j + "` key `" + z + "` supplied to `" + A + "`.\nBad object: " + JSON.stringify(O[C], null, "  ") + `
Valid keys: ` + JSON.stringify(Object.keys(g), null, "  ")
            );
          var k = ee(_, z, A, N, j + "." + z, r);
          if (k)
            return k;
        }
        return null;
      }
      return m(d);
    }
    function V(g) {
      switch (typeof g) {
        case "number":
        case "string":
        case "undefined":
          return !0;
        case "boolean":
          return !g;
        case "object":
          if (Array.isArray(g))
            return g.every(V);
          if (g === null || s(g))
            return !0;
          var d = f(g);
          if (d) {
            var O = d.call(g), C;
            if (d !== g.entries) {
              for (; !(C = O.next()).done; )
                if (!V(C.value))
                  return !1;
            } else
              for (; !(C = O.next()).done; ) {
                var A = C.value;
                if (A && !V(A[1]))
                  return !1;
              }
          } else
            return !1;
          return !0;
        default:
          return !1;
      }
    }
    function D(g, d) {
      return g === "symbol" ? !0 : d ? d["@@toStringTag"] === "Symbol" || typeof Symbol == "function" && d instanceof Symbol : !1;
    }
    function F(g) {
      var d = typeof g;
      return Array.isArray(g) ? "array" : g instanceof RegExp ? "object" : D(d, g) ? "symbol" : d;
    }
    function R(g) {
      if (typeof g > "u" || g === null)
        return "" + g;
      var d = F(g);
      if (d === "object") {
        if (g instanceof Date)
          return "date";
        if (g instanceof RegExp)
          return "regexp";
      }
      return d;
    }
    function H(g) {
      var d = R(g);
      switch (d) {
        case "array":
        case "object":
          return "an " + d;
        case "boolean":
        case "date":
        case "regexp":
          return "a " + d;
        default:
          return d;
      }
    }
    function B(g) {
      return !g.constructor || !g.constructor.name ? p : g.constructor.name;
    }
    return v.checkPropTypes = o, v.resetWarningCache = o.resetWarningCache, v.PropTypes = v, v;
  }, J2;
}
var Q2, pT;
function lOe() {
  if (pT) return Q2;
  pT = 1;
  var e = /* @__PURE__ */ yC();
  function t() {
  }
  function r() {
  }
  return r.resetWarningCache = t, Q2 = function() {
    function n(i, s, l, c, u, f) {
      if (f !== e) {
        var p = new Error(
          "Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types"
        );
        throw p.name = "Invariant Violation", p;
      }
    }
    n.isRequired = n;
    function o() {
      return n;
    }
    var a = {
      array: n,
      bigint: n,
      bool: n,
      func: n,
      number: n,
      object: n,
      string: n,
      symbol: n,
      any: n,
      arrayOf: o,
      element: n,
      elementType: n,
      instanceOf: o,
      node: n,
      objectOf: o,
      oneOf: o,
      oneOfType: o,
      shape: o,
      exact: o,
      checkPropTypes: r,
      resetWarningCache: t
    };
    return a.PropTypes = a, a;
  }, Q2;
}
var mT;
function cOe() {
  if (mT) return dy.exports;
  if (mT = 1, process.env.NODE_ENV !== "production") {
    var e = qG(), t = !0;
    dy.exports = /* @__PURE__ */ sOe()(e.isElement, t);
  } else
    dy.exports = /* @__PURE__ */ lOe()();
  return dy.exports;
}
var uOe = /* @__PURE__ */ cOe();
const Mt = /* @__PURE__ */ rOe(uOe);
function gT(e, t) {
  var r = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var n = Object.getOwnPropertySymbols(e);
    t && (n = n.filter(function(o) {
      return Object.getOwnPropertyDescriptor(e, o).enumerable;
    })), r.push.apply(r, n);
  }
  return r;
}
function Qo(e) {
  for (var t = 1; t < arguments.length; t++) {
    var r = arguments[t] != null ? arguments[t] : {};
    t % 2 ? gT(Object(r), !0).forEach(function(n) {
      mf(e, n, r[n]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : gT(Object(r)).forEach(function(n) {
      Object.defineProperty(e, n, Object.getOwnPropertyDescriptor(r, n));
    });
  }
  return e;
}
function a1(e) {
  "@babel/helpers - typeof";
  return a1 = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t) {
    return typeof t;
  } : function(t) {
    return t && typeof Symbol == "function" && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
  }, a1(e);
}
function mf(e, t, r) {
  return t in e ? Object.defineProperty(e, t, {
    value: r,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : e[t] = r, e;
}
function fOe(e, t) {
  if (e == null) return {};
  var r = {}, n = Object.keys(e), o, a;
  for (a = 0; a < n.length; a++)
    o = n[a], !(t.indexOf(o) >= 0) && (r[o] = e[o]);
  return r;
}
function dOe(e, t) {
  if (e == null) return {};
  var r = fOe(e, t), n, o;
  if (Object.getOwnPropertySymbols) {
    var a = Object.getOwnPropertySymbols(e);
    for (o = 0; o < a.length; o++)
      n = a[o], !(t.indexOf(n) >= 0) && Object.prototype.propertyIsEnumerable.call(e, n) && (r[n] = e[n]);
  }
  return r;
}
function NO(e) {
  return pOe(e) || mOe(e) || gOe(e) || hOe();
}
function pOe(e) {
  if (Array.isArray(e)) return jO(e);
}
function mOe(e) {
  if (typeof Symbol < "u" && e[Symbol.iterator] != null || e["@@iterator"] != null) return Array.from(e);
}
function gOe(e, t) {
  if (e) {
    if (typeof e == "string") return jO(e, t);
    var r = Object.prototype.toString.call(e).slice(8, -1);
    if (r === "Object" && e.constructor && (r = e.constructor.name), r === "Map" || r === "Set") return Array.from(e);
    if (r === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return jO(e, t);
  }
}
function jO(e, t) {
  (t == null || t > e.length) && (t = e.length);
  for (var r = 0, n = new Array(t); r < t; r++) n[r] = e[r];
  return n;
}
function hOe() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function bOe(e) {
  var t, r = e.beat, n = e.fade, o = e.beatFade, a = e.bounce, i = e.shake, s = e.flash, l = e.spin, c = e.spinPulse, u = e.spinReverse, f = e.pulse, p = e.fixedWidth, v = e.inverse, x = e.border, b = e.listItem, m = e.flip, w = e.size, $ = e.rotation, E = e.pull, S = (t = {
    "fa-beat": r,
    "fa-fade": n,
    "fa-beat-fade": o,
    "fa-bounce": a,
    "fa-shake": i,
    "fa-flash": s,
    "fa-spin": l,
    "fa-spin-reverse": u,
    "fa-spin-pulse": c,
    "fa-pulse": f,
    "fa-fw": p,
    "fa-inverse": v,
    "fa-border": x,
    "fa-li": b,
    "fa-flip": m === !0,
    "fa-flip-horizontal": m === "horizontal" || m === "both",
    "fa-flip-vertical": m === "vertical" || m === "both"
  }, mf(t, "fa-".concat(w), typeof w < "u" && w !== null), mf(t, "fa-rotate-".concat($), typeof $ < "u" && $ !== null && $ !== 0), mf(t, "fa-pull-".concat(E), typeof E < "u" && E !== null), mf(t, "fa-swap-opacity", e.swapOpacity), t);
  return Object.keys(S).map(function(h) {
    return S[h] ? h : null;
  }).filter(function(h) {
    return h;
  });
}
function yOe(e) {
  return e = e - 0, e === e;
}
function XG(e) {
  return yOe(e) ? e : (e = e.replace(/[\-_\s]+(.)?/g, function(t, r) {
    return r ? r.toUpperCase() : "";
  }), e.substr(0, 1).toLowerCase() + e.substr(1));
}
var vOe = ["style"];
function xOe(e) {
  return e.charAt(0).toUpperCase() + e.slice(1);
}
function wOe(e) {
  return e.split(";").map(function(t) {
    return t.trim();
  }).filter(function(t) {
    return t;
  }).reduce(function(t, r) {
    var n = r.indexOf(":"), o = XG(r.slice(0, n)), a = r.slice(n + 1).trim();
    return o.startsWith("webkit") ? t[xOe(o)] = a : t[o] = a, t;
  }, {});
}
function KG(e, t) {
  var r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
  if (typeof t == "string")
    return t;
  var n = (t.children || []).map(function(l) {
    return KG(e, l);
  }), o = Object.keys(t.attributes || {}).reduce(function(l, c) {
    var u = t.attributes[c];
    switch (c) {
      case "class":
        l.attrs.className = u, delete t.attributes.class;
        break;
      case "style":
        l.attrs.style = wOe(u);
        break;
      default:
        c.indexOf("aria-") === 0 || c.indexOf("data-") === 0 ? l.attrs[c.toLowerCase()] = u : l.attrs[XG(c)] = u;
    }
    return l;
  }, {
    attrs: {}
  }), a = r.style, i = a === void 0 ? {} : a, s = dOe(r, vOe);
  return o.attrs.style = Qo(Qo({}, o.attrs.style), i), e.apply(void 0, [t.tag, Qo(Qo({}, o.attrs), s)].concat(NO(n)));
}
var JG = !1;
try {
  JG = process.env.NODE_ENV === "production";
} catch {
}
function kOe() {
  if (!JG && console && typeof console.error == "function") {
    var e;
    (e = console).error.apply(e, arguments);
  }
}
function hT(e) {
  if (e && a1(e) === "object" && e.prefix && e.iconName && e.icon)
    return e;
  if (_O.icon)
    return _O.icon(e);
  if (e === null)
    return null;
  if (e && a1(e) === "object" && e.prefix && e.iconName)
    return e;
  if (Array.isArray(e) && e.length === 2)
    return {
      prefix: e[0],
      iconName: e[1]
    };
  if (typeof e == "string")
    return {
      prefix: "fas",
      iconName: e
    };
}
function Z2(e, t) {
  return Array.isArray(t) && t.length > 0 || !Array.isArray(t) && t ? mf({}, e, t) : {};
}
var bT = {
  border: !1,
  className: "",
  mask: null,
  maskId: null,
  fixedWidth: !1,
  inverse: !1,
  flip: !1,
  icon: null,
  listItem: !1,
  pull: null,
  pulse: !1,
  rotation: null,
  size: null,
  spin: !1,
  spinPulse: !1,
  spinReverse: !1,
  beat: !1,
  fade: !1,
  beatFade: !1,
  bounce: !1,
  shake: !1,
  symbol: !1,
  title: "",
  titleId: null,
  transform: null,
  swapOpacity: !1
}, Fn = /* @__PURE__ */ ce.forwardRef(function(e, t) {
  var r = Qo(Qo({}, bT), e), n = r.icon, o = r.mask, a = r.symbol, i = r.className, s = r.title, l = r.titleId, c = r.maskId, u = hT(n), f = Z2("classes", [].concat(NO(bOe(r)), NO((i || "").split(" ")))), p = Z2("transform", typeof r.transform == "string" ? _O.transform(r.transform) : r.transform), v = Z2("mask", hT(o)), x = tOe(u, Qo(Qo(Qo(Qo({}, f), p), v), {}, {
    symbol: a,
    title: s,
    titleId: l,
    maskId: c
  }));
  if (!x)
    return kOe("Could not find icon", u), null;
  var b = x.abstract, m = {
    ref: t
  };
  return Object.keys(r).forEach(function(w) {
    bT.hasOwnProperty(w) || (m[w] = r[w]);
  }), $Oe(b[0], m);
});
Fn.displayName = "FontAwesomeIcon";
Fn.propTypes = {
  beat: Mt.bool,
  border: Mt.bool,
  beatFade: Mt.bool,
  bounce: Mt.bool,
  className: Mt.string,
  fade: Mt.bool,
  flash: Mt.bool,
  mask: Mt.oneOfType([Mt.object, Mt.array, Mt.string]),
  maskId: Mt.string,
  fixedWidth: Mt.bool,
  inverse: Mt.bool,
  flip: Mt.oneOf([!0, !1, "horizontal", "vertical", "both"]),
  icon: Mt.oneOfType([Mt.object, Mt.array, Mt.string]),
  listItem: Mt.bool,
  pull: Mt.oneOf(["right", "left"]),
  pulse: Mt.bool,
  rotation: Mt.oneOf([0, 90, 180, 270]),
  shake: Mt.bool,
  size: Mt.oneOf(["2xs", "xs", "sm", "lg", "xl", "2xl", "1x", "2x", "3x", "4x", "5x", "6x", "7x", "8x", "9x", "10x"]),
  spin: Mt.bool,
  spinPulse: Mt.bool,
  spinReverse: Mt.bool,
  symbol: Mt.oneOfType([Mt.bool, Mt.string]),
  title: Mt.string,
  titleId: Mt.string,
  transform: Mt.oneOfType([Mt.string, Mt.object]),
  swapOpacity: Mt.bool
};
var $Oe = KG.bind(null, ce.createElement);
const vC = "-", OOe = (e) => {
  const t = SOe(e), {
    conflictingClassGroups: r,
    conflictingClassGroupModifiers: n
  } = e;
  return {
    getClassGroupId: (o) => {
      const a = o.split(vC);
      return a[0] === "" && a.length !== 1 && a.shift(), QG(a, t) || EOe(o);
    },
    getConflictingClassGroupIds: (o, a) => {
      const i = r[o] || [];
      return a && n[o] ? [...i, ...n[o]] : i;
    }
  };
}, QG = (e, t) => {
  var r;
  if (e.length === 0)
    return t.classGroupId;
  const n = e[0], o = t.nextPart.get(n), a = o ? QG(e.slice(1), o) : void 0;
  if (a)
    return a;
  if (t.validators.length === 0)
    return;
  const i = e.join(vC);
  return (r = t.validators.find(({
    validator: s
  }) => s(i))) == null ? void 0 : r.classGroupId;
}, yT = /^\[(.+)\]$/, EOe = (e) => {
  if (yT.test(e)) {
    const t = yT.exec(e)[1], r = t == null ? void 0 : t.substring(0, t.indexOf(":"));
    if (r)
      return "arbitrary.." + r;
  }
}, SOe = (e) => {
  const {
    theme: t,
    prefix: r
  } = e, n = {
    nextPart: /* @__PURE__ */ new Map(),
    validators: []
  };
  return COe(Object.entries(e.classGroups), r).forEach(([o, a]) => {
    IO(a, n, o, t);
  }), n;
}, IO = (e, t, r, n) => {
  e.forEach((o) => {
    if (typeof o == "string") {
      const a = o === "" ? t : vT(t, o);
      a.classGroupId = r;
      return;
    }
    if (typeof o == "function") {
      if (POe(o)) {
        IO(o(n), t, r, n);
        return;
      }
      t.validators.push({
        validator: o,
        classGroupId: r
      });
      return;
    }
    Object.entries(o).forEach(([a, i]) => {
      IO(i, vT(t, a), r, n);
    });
  });
}, vT = (e, t) => {
  let r = e;
  return t.split(vC).forEach((n) => {
    r.nextPart.has(n) || r.nextPart.set(n, {
      nextPart: /* @__PURE__ */ new Map(),
      validators: []
    }), r = r.nextPart.get(n);
  }), r;
}, POe = (e) => e.isThemeGetter, COe = (e, t) => t ? e.map(([r, n]) => {
  const o = n.map((a) => typeof a == "string" ? t + a : typeof a == "object" ? Object.fromEntries(Object.entries(a).map(([i, s]) => [t + i, s])) : a);
  return [r, o];
}) : e, AOe = (e) => {
  if (e < 1)
    return {
      get: () => {
      },
      set: () => {
      }
    };
  let t = 0, r = /* @__PURE__ */ new Map(), n = /* @__PURE__ */ new Map();
  const o = (a, i) => {
    r.set(a, i), t++, t > e && (t = 0, n = r, r = /* @__PURE__ */ new Map());
  };
  return {
    get(a) {
      let i = r.get(a);
      if (i !== void 0)
        return i;
      if ((i = n.get(a)) !== void 0)
        return o(a, i), i;
    },
    set(a, i) {
      r.has(a) ? r.set(a, i) : o(a, i);
    }
  };
}, ZG = "!", _Oe = (e) => {
  const {
    separator: t,
    experimentalParseClassName: r
  } = e, n = t.length === 1, o = t[0], a = t.length, i = (s) => {
    const l = [];
    let c = 0, u = 0, f;
    for (let m = 0; m < s.length; m++) {
      let w = s[m];
      if (c === 0) {
        if (w === o && (n || s.slice(m, m + a) === t)) {
          l.push(s.slice(u, m)), u = m + a;
          continue;
        }
        if (w === "/") {
          f = m;
          continue;
        }
      }
      w === "[" ? c++ : w === "]" && c--;
    }
    const p = l.length === 0 ? s : s.substring(u), v = p.startsWith(ZG), x = v ? p.substring(1) : p, b = f && f > u ? f - u : void 0;
    return {
      modifiers: l,
      hasImportantModifier: v,
      baseClassName: x,
      maybePostfixModifierPosition: b
    };
  };
  return r ? (s) => r({
    className: s,
    parseClassName: i
  }) : i;
}, NOe = (e) => {
  if (e.length <= 1)
    return e;
  const t = [];
  let r = [];
  return e.forEach((n) => {
    n[0] === "[" ? (t.push(...r.sort(), n), r = []) : r.push(n);
  }), t.push(...r.sort()), t;
}, jOe = (e) => ({
  cache: AOe(e.cacheSize),
  parseClassName: _Oe(e),
  ...OOe(e)
}), IOe = /\s+/, TOe = (e, t) => {
  const {
    parseClassName: r,
    getClassGroupId: n,
    getConflictingClassGroupIds: o
  } = t, a = [], i = e.trim().split(IOe);
  let s = "";
  for (let l = i.length - 1; l >= 0; l -= 1) {
    const c = i[l], {
      modifiers: u,
      hasImportantModifier: f,
      baseClassName: p,
      maybePostfixModifierPosition: v
    } = r(c);
    let x = !!v, b = n(x ? p.substring(0, v) : p);
    if (!b) {
      if (!x) {
        s = c + (s.length > 0 ? " " + s : s);
        continue;
      }
      if (b = n(p), !b) {
        s = c + (s.length > 0 ? " " + s : s);
        continue;
      }
      x = !1;
    }
    const m = NOe(u).join(":"), w = f ? m + ZG : m, $ = w + b;
    if (a.includes($))
      continue;
    a.push($);
    const E = o(b, x);
    for (let S = 0; S < E.length; ++S) {
      const h = E[S];
      a.push(w + h);
    }
    s = c + (s.length > 0 ? " " + s : s);
  }
  return s;
};
function MOe() {
  let e = 0, t, r, n = "";
  for (; e < arguments.length; )
    (t = arguments[e++]) && (r = eq(t)) && (n && (n += " "), n += r);
  return n;
}
const eq = (e) => {
  if (typeof e == "string")
    return e;
  let t, r = "";
  for (let n = 0; n < e.length; n++)
    e[n] && (t = eq(e[n])) && (r && (r += " "), r += t);
  return r;
};
function ROe(e, ...t) {
  let r, n, o, a = i;
  function i(l) {
    const c = t.reduce((u, f) => f(u), e());
    return r = jOe(c), n = r.cache.get, o = r.cache.set, a = s, s(l);
  }
  function s(l) {
    const c = n(l);
    if (c)
      return c;
    const u = TOe(l, r);
    return o(l, u), u;
  }
  return function() {
    return a(MOe.apply(null, arguments));
  };
}
const Pr = (e) => {
  const t = (r) => r[e] || [];
  return t.isThemeGetter = !0, t;
}, tq = /^\[(?:([a-z-]+):)?(.+)\]$/i, zOe = /^\d+\/\d+$/, FOe = /* @__PURE__ */ new Set(["px", "full", "screen"]), DOe = /^(\d+(\.\d+)?)?(xs|sm|md|lg|xl)$/, LOe = /\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\b(calc|min|max|clamp)\(.+\)|^0$/, VOe = /^(rgba?|hsla?|hwb|(ok)?(lab|lch))\(.+\)$/, WOe = /^(inset_)?-?((\d+)?\.?(\d+)[a-z]+|0)_-?((\d+)?\.?(\d+)[a-z]+|0)/, UOe = /^(url|image|image-set|cross-fade|element|(repeating-)?(linear|radial|conic)-gradient)\(.+\)$/, qa = (e) => Gf(e) || FOe.has(e) || zOe.test(e), Xs = (e) => Hd(e, "length", JOe), Gf = (e) => !!e && !Number.isNaN(Number(e)), ek = (e) => Hd(e, "number", Gf), Cm = (e) => !!e && Number.isInteger(Number(e)), YOe = (e) => e.endsWith("%") && Gf(e.slice(0, -1)), pt = (e) => tq.test(e), Ks = (e) => DOe.test(e), HOe = /* @__PURE__ */ new Set(["length", "size", "percentage"]), GOe = (e) => Hd(e, HOe, rq), qOe = (e) => Hd(e, "position", rq), BOe = /* @__PURE__ */ new Set(["image", "url"]), XOe = (e) => Hd(e, BOe, ZOe), KOe = (e) => Hd(e, "", QOe), Am = () => !0, Hd = (e, t, r) => {
  const n = tq.exec(e);
  return n ? n[1] ? typeof t == "string" ? n[1] === t : t.has(n[1]) : r(n[2]) : !1;
}, JOe = (e) => (
  // `colorFunctionRegex` check is necessary because color functions can have percentages in them which which would be incorrectly classified as lengths.
  // For example, `hsl(0 0% 0%)` would be classified as a length without this check.
  // I could also use lookbehind assertion in `lengthUnitRegex` but that isn't supported widely enough.
  LOe.test(e) && !VOe.test(e)
), rq = () => !1, QOe = (e) => WOe.test(e), ZOe = (e) => UOe.test(e), e4e = () => {
  const e = Pr("colors"), t = Pr("spacing"), r = Pr("blur"), n = Pr("brightness"), o = Pr("borderColor"), a = Pr("borderRadius"), i = Pr("borderSpacing"), s = Pr("borderWidth"), l = Pr("contrast"), c = Pr("grayscale"), u = Pr("hueRotate"), f = Pr("invert"), p = Pr("gap"), v = Pr("gradientColorStops"), x = Pr("gradientColorStopPositions"), b = Pr("inset"), m = Pr("margin"), w = Pr("opacity"), $ = Pr("padding"), E = Pr("saturate"), S = Pr("scale"), h = Pr("sepia"), U = Pr("skew"), G = Pr("space"), Q = Pr("translate"), Z = () => ["auto", "contain", "none"], X = () => ["auto", "hidden", "clip", "visible", "scroll"], J = () => ["auto", pt, t], I = () => [pt, t], te = () => ["", qa, Xs], V = () => ["auto", Gf, pt], D = () => ["bottom", "center", "left", "left-bottom", "left-top", "right", "right-bottom", "right-top", "top"], F = () => ["solid", "dashed", "dotted", "double", "none"], R = () => ["normal", "multiply", "screen", "overlay", "darken", "lighten", "color-dodge", "color-burn", "hard-light", "soft-light", "difference", "exclusion", "hue", "saturation", "color", "luminosity"], H = () => ["start", "end", "center", "between", "around", "evenly", "stretch"], B = () => ["", "0", pt], g = () => ["auto", "avoid", "all", "avoid-page", "page", "left", "right", "column"], d = () => [Gf, pt];
  return {
    cacheSize: 500,
    separator: ":",
    theme: {
      colors: [Am],
      spacing: [qa, Xs],
      blur: ["none", "", Ks, pt],
      brightness: d(),
      borderColor: [e],
      borderRadius: ["none", "", "full", Ks, pt],
      borderSpacing: I(),
      borderWidth: te(),
      contrast: d(),
      grayscale: B(),
      hueRotate: d(),
      invert: B(),
      gap: I(),
      gradientColorStops: [e],
      gradientColorStopPositions: [YOe, Xs],
      inset: J(),
      margin: J(),
      opacity: d(),
      padding: I(),
      saturate: d(),
      scale: d(),
      sepia: B(),
      skew: d(),
      space: I(),
      translate: I()
    },
    classGroups: {
      // Layout
      /**
       * Aspect Ratio
       * @see https://tailwindcss.com/docs/aspect-ratio
       */
      aspect: [{
        aspect: ["auto", "square", "video", pt]
      }],
      /**
       * Container
       * @see https://tailwindcss.com/docs/container
       */
      container: ["container"],
      /**
       * Columns
       * @see https://tailwindcss.com/docs/columns
       */
      columns: [{
        columns: [Ks]
      }],
      /**
       * Break After
       * @see https://tailwindcss.com/docs/break-after
       */
      "break-after": [{
        "break-after": g()
      }],
      /**
       * Break Before
       * @see https://tailwindcss.com/docs/break-before
       */
      "break-before": [{
        "break-before": g()
      }],
      /**
       * Break Inside
       * @see https://tailwindcss.com/docs/break-inside
       */
      "break-inside": [{
        "break-inside": ["auto", "avoid", "avoid-page", "avoid-column"]
      }],
      /**
       * Box Decoration Break
       * @see https://tailwindcss.com/docs/box-decoration-break
       */
      "box-decoration": [{
        "box-decoration": ["slice", "clone"]
      }],
      /**
       * Box Sizing
       * @see https://tailwindcss.com/docs/box-sizing
       */
      box: [{
        box: ["border", "content"]
      }],
      /**
       * Display
       * @see https://tailwindcss.com/docs/display
       */
      display: ["block", "inline-block", "inline", "flex", "inline-flex", "table", "inline-table", "table-caption", "table-cell", "table-column", "table-column-group", "table-footer-group", "table-header-group", "table-row-group", "table-row", "flow-root", "grid", "inline-grid", "contents", "list-item", "hidden"],
      /**
       * Floats
       * @see https://tailwindcss.com/docs/float
       */
      float: [{
        float: ["right", "left", "none", "start", "end"]
      }],
      /**
       * Clear
       * @see https://tailwindcss.com/docs/clear
       */
      clear: [{
        clear: ["left", "right", "both", "none", "start", "end"]
      }],
      /**
       * Isolation
       * @see https://tailwindcss.com/docs/isolation
       */
      isolation: ["isolate", "isolation-auto"],
      /**
       * Object Fit
       * @see https://tailwindcss.com/docs/object-fit
       */
      "object-fit": [{
        object: ["contain", "cover", "fill", "none", "scale-down"]
      }],
      /**
       * Object Position
       * @see https://tailwindcss.com/docs/object-position
       */
      "object-position": [{
        object: [...D(), pt]
      }],
      /**
       * Overflow
       * @see https://tailwindcss.com/docs/overflow
       */
      overflow: [{
        overflow: X()
      }],
      /**
       * Overflow X
       * @see https://tailwindcss.com/docs/overflow
       */
      "overflow-x": [{
        "overflow-x": X()
      }],
      /**
       * Overflow Y
       * @see https://tailwindcss.com/docs/overflow
       */
      "overflow-y": [{
        "overflow-y": X()
      }],
      /**
       * Overscroll Behavior
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      overscroll: [{
        overscroll: Z()
      }],
      /**
       * Overscroll Behavior X
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      "overscroll-x": [{
        "overscroll-x": Z()
      }],
      /**
       * Overscroll Behavior Y
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      "overscroll-y": [{
        "overscroll-y": Z()
      }],
      /**
       * Position
       * @see https://tailwindcss.com/docs/position
       */
      position: ["static", "fixed", "absolute", "relative", "sticky"],
      /**
       * Top / Right / Bottom / Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      inset: [{
        inset: [b]
      }],
      /**
       * Right / Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      "inset-x": [{
        "inset-x": [b]
      }],
      /**
       * Top / Bottom
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      "inset-y": [{
        "inset-y": [b]
      }],
      /**
       * Start
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      start: [{
        start: [b]
      }],
      /**
       * End
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      end: [{
        end: [b]
      }],
      /**
       * Top
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      top: [{
        top: [b]
      }],
      /**
       * Right
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      right: [{
        right: [b]
      }],
      /**
       * Bottom
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      bottom: [{
        bottom: [b]
      }],
      /**
       * Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      left: [{
        left: [b]
      }],
      /**
       * Visibility
       * @see https://tailwindcss.com/docs/visibility
       */
      visibility: ["visible", "invisible", "collapse"],
      /**
       * Z-Index
       * @see https://tailwindcss.com/docs/z-index
       */
      z: [{
        z: ["auto", Cm, pt]
      }],
      // Flexbox and Grid
      /**
       * Flex Basis
       * @see https://tailwindcss.com/docs/flex-basis
       */
      basis: [{
        basis: J()
      }],
      /**
       * Flex Direction
       * @see https://tailwindcss.com/docs/flex-direction
       */
      "flex-direction": [{
        flex: ["row", "row-reverse", "col", "col-reverse"]
      }],
      /**
       * Flex Wrap
       * @see https://tailwindcss.com/docs/flex-wrap
       */
      "flex-wrap": [{
        flex: ["wrap", "wrap-reverse", "nowrap"]
      }],
      /**
       * Flex
       * @see https://tailwindcss.com/docs/flex
       */
      flex: [{
        flex: ["1", "auto", "initial", "none", pt]
      }],
      /**
       * Flex Grow
       * @see https://tailwindcss.com/docs/flex-grow
       */
      grow: [{
        grow: B()
      }],
      /**
       * Flex Shrink
       * @see https://tailwindcss.com/docs/flex-shrink
       */
      shrink: [{
        shrink: B()
      }],
      /**
       * Order
       * @see https://tailwindcss.com/docs/order
       */
      order: [{
        order: ["first", "last", "none", Cm, pt]
      }],
      /**
       * Grid Template Columns
       * @see https://tailwindcss.com/docs/grid-template-columns
       */
      "grid-cols": [{
        "grid-cols": [Am]
      }],
      /**
       * Grid Column Start / End
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-start-end": [{
        col: ["auto", {
          span: ["full", Cm, pt]
        }, pt]
      }],
      /**
       * Grid Column Start
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-start": [{
        "col-start": V()
      }],
      /**
       * Grid Column End
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-end": [{
        "col-end": V()
      }],
      /**
       * Grid Template Rows
       * @see https://tailwindcss.com/docs/grid-template-rows
       */
      "grid-rows": [{
        "grid-rows": [Am]
      }],
      /**
       * Grid Row Start / End
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-start-end": [{
        row: ["auto", {
          span: [Cm, pt]
        }, pt]
      }],
      /**
       * Grid Row Start
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-start": [{
        "row-start": V()
      }],
      /**
       * Grid Row End
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-end": [{
        "row-end": V()
      }],
      /**
       * Grid Auto Flow
       * @see https://tailwindcss.com/docs/grid-auto-flow
       */
      "grid-flow": [{
        "grid-flow": ["row", "col", "dense", "row-dense", "col-dense"]
      }],
      /**
       * Grid Auto Columns
       * @see https://tailwindcss.com/docs/grid-auto-columns
       */
      "auto-cols": [{
        "auto-cols": ["auto", "min", "max", "fr", pt]
      }],
      /**
       * Grid Auto Rows
       * @see https://tailwindcss.com/docs/grid-auto-rows
       */
      "auto-rows": [{
        "auto-rows": ["auto", "min", "max", "fr", pt]
      }],
      /**
       * Gap
       * @see https://tailwindcss.com/docs/gap
       */
      gap: [{
        gap: [p]
      }],
      /**
       * Gap X
       * @see https://tailwindcss.com/docs/gap
       */
      "gap-x": [{
        "gap-x": [p]
      }],
      /**
       * Gap Y
       * @see https://tailwindcss.com/docs/gap
       */
      "gap-y": [{
        "gap-y": [p]
      }],
      /**
       * Justify Content
       * @see https://tailwindcss.com/docs/justify-content
       */
      "justify-content": [{
        justify: ["normal", ...H()]
      }],
      /**
       * Justify Items
       * @see https://tailwindcss.com/docs/justify-items
       */
      "justify-items": [{
        "justify-items": ["start", "end", "center", "stretch"]
      }],
      /**
       * Justify Self
       * @see https://tailwindcss.com/docs/justify-self
       */
      "justify-self": [{
        "justify-self": ["auto", "start", "end", "center", "stretch"]
      }],
      /**
       * Align Content
       * @see https://tailwindcss.com/docs/align-content
       */
      "align-content": [{
        content: ["normal", ...H(), "baseline"]
      }],
      /**
       * Align Items
       * @see https://tailwindcss.com/docs/align-items
       */
      "align-items": [{
        items: ["start", "end", "center", "baseline", "stretch"]
      }],
      /**
       * Align Self
       * @see https://tailwindcss.com/docs/align-self
       */
      "align-self": [{
        self: ["auto", "start", "end", "center", "stretch", "baseline"]
      }],
      /**
       * Place Content
       * @see https://tailwindcss.com/docs/place-content
       */
      "place-content": [{
        "place-content": [...H(), "baseline"]
      }],
      /**
       * Place Items
       * @see https://tailwindcss.com/docs/place-items
       */
      "place-items": [{
        "place-items": ["start", "end", "center", "baseline", "stretch"]
      }],
      /**
       * Place Self
       * @see https://tailwindcss.com/docs/place-self
       */
      "place-self": [{
        "place-self": ["auto", "start", "end", "center", "stretch"]
      }],
      // Spacing
      /**
       * Padding
       * @see https://tailwindcss.com/docs/padding
       */
      p: [{
        p: [$]
      }],
      /**
       * Padding X
       * @see https://tailwindcss.com/docs/padding
       */
      px: [{
        px: [$]
      }],
      /**
       * Padding Y
       * @see https://tailwindcss.com/docs/padding
       */
      py: [{
        py: [$]
      }],
      /**
       * Padding Start
       * @see https://tailwindcss.com/docs/padding
       */
      ps: [{
        ps: [$]
      }],
      /**
       * Padding End
       * @see https://tailwindcss.com/docs/padding
       */
      pe: [{
        pe: [$]
      }],
      /**
       * Padding Top
       * @see https://tailwindcss.com/docs/padding
       */
      pt: [{
        pt: [$]
      }],
      /**
       * Padding Right
       * @see https://tailwindcss.com/docs/padding
       */
      pr: [{
        pr: [$]
      }],
      /**
       * Padding Bottom
       * @see https://tailwindcss.com/docs/padding
       */
      pb: [{
        pb: [$]
      }],
      /**
       * Padding Left
       * @see https://tailwindcss.com/docs/padding
       */
      pl: [{
        pl: [$]
      }],
      /**
       * Margin
       * @see https://tailwindcss.com/docs/margin
       */
      m: [{
        m: [m]
      }],
      /**
       * Margin X
       * @see https://tailwindcss.com/docs/margin
       */
      mx: [{
        mx: [m]
      }],
      /**
       * Margin Y
       * @see https://tailwindcss.com/docs/margin
       */
      my: [{
        my: [m]
      }],
      /**
       * Margin Start
       * @see https://tailwindcss.com/docs/margin
       */
      ms: [{
        ms: [m]
      }],
      /**
       * Margin End
       * @see https://tailwindcss.com/docs/margin
       */
      me: [{
        me: [m]
      }],
      /**
       * Margin Top
       * @see https://tailwindcss.com/docs/margin
       */
      mt: [{
        mt: [m]
      }],
      /**
       * Margin Right
       * @see https://tailwindcss.com/docs/margin
       */
      mr: [{
        mr: [m]
      }],
      /**
       * Margin Bottom
       * @see https://tailwindcss.com/docs/margin
       */
      mb: [{
        mb: [m]
      }],
      /**
       * Margin Left
       * @see https://tailwindcss.com/docs/margin
       */
      ml: [{
        ml: [m]
      }],
      /**
       * Space Between X
       * @see https://tailwindcss.com/docs/space
       */
      "space-x": [{
        "space-x": [G]
      }],
      /**
       * Space Between X Reverse
       * @see https://tailwindcss.com/docs/space
       */
      "space-x-reverse": ["space-x-reverse"],
      /**
       * Space Between Y
       * @see https://tailwindcss.com/docs/space
       */
      "space-y": [{
        "space-y": [G]
      }],
      /**
       * Space Between Y Reverse
       * @see https://tailwindcss.com/docs/space
       */
      "space-y-reverse": ["space-y-reverse"],
      // Sizing
      /**
       * Width
       * @see https://tailwindcss.com/docs/width
       */
      w: [{
        w: ["auto", "min", "max", "fit", "svw", "lvw", "dvw", pt, t]
      }],
      /**
       * Min-Width
       * @see https://tailwindcss.com/docs/min-width
       */
      "min-w": [{
        "min-w": [pt, t, "min", "max", "fit"]
      }],
      /**
       * Max-Width
       * @see https://tailwindcss.com/docs/max-width
       */
      "max-w": [{
        "max-w": [pt, t, "none", "full", "min", "max", "fit", "prose", {
          screen: [Ks]
        }, Ks]
      }],
      /**
       * Height
       * @see https://tailwindcss.com/docs/height
       */
      h: [{
        h: [pt, t, "auto", "min", "max", "fit", "svh", "lvh", "dvh"]
      }],
      /**
       * Min-Height
       * @see https://tailwindcss.com/docs/min-height
       */
      "min-h": [{
        "min-h": [pt, t, "min", "max", "fit", "svh", "lvh", "dvh"]
      }],
      /**
       * Max-Height
       * @see https://tailwindcss.com/docs/max-height
       */
      "max-h": [{
        "max-h": [pt, t, "min", "max", "fit", "svh", "lvh", "dvh"]
      }],
      /**
       * Size
       * @see https://tailwindcss.com/docs/size
       */
      size: [{
        size: [pt, t, "auto", "min", "max", "fit"]
      }],
      // Typography
      /**
       * Font Size
       * @see https://tailwindcss.com/docs/font-size
       */
      "font-size": [{
        text: ["base", Ks, Xs]
      }],
      /**
       * Font Smoothing
       * @see https://tailwindcss.com/docs/font-smoothing
       */
      "font-smoothing": ["antialiased", "subpixel-antialiased"],
      /**
       * Font Style
       * @see https://tailwindcss.com/docs/font-style
       */
      "font-style": ["italic", "not-italic"],
      /**
       * Font Weight
       * @see https://tailwindcss.com/docs/font-weight
       */
      "font-weight": [{
        font: ["thin", "extralight", "light", "normal", "medium", "semibold", "bold", "extrabold", "black", ek]
      }],
      /**
       * Font Family
       * @see https://tailwindcss.com/docs/font-family
       */
      "font-family": [{
        font: [Am]
      }],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-normal": ["normal-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-ordinal": ["ordinal"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-slashed-zero": ["slashed-zero"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-figure": ["lining-nums", "oldstyle-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-spacing": ["proportional-nums", "tabular-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-fraction": ["diagonal-fractions", "stacked-fractions"],
      /**
       * Letter Spacing
       * @see https://tailwindcss.com/docs/letter-spacing
       */
      tracking: [{
        tracking: ["tighter", "tight", "normal", "wide", "wider", "widest", pt]
      }],
      /**
       * Line Clamp
       * @see https://tailwindcss.com/docs/line-clamp
       */
      "line-clamp": [{
        "line-clamp": ["none", Gf, ek]
      }],
      /**
       * Line Height
       * @see https://tailwindcss.com/docs/line-height
       */
      leading: [{
        leading: ["none", "tight", "snug", "normal", "relaxed", "loose", qa, pt]
      }],
      /**
       * List Style Image
       * @see https://tailwindcss.com/docs/list-style-image
       */
      "list-image": [{
        "list-image": ["none", pt]
      }],
      /**
       * List Style Type
       * @see https://tailwindcss.com/docs/list-style-type
       */
      "list-style-type": [{
        list: ["none", "disc", "decimal", pt]
      }],
      /**
       * List Style Position
       * @see https://tailwindcss.com/docs/list-style-position
       */
      "list-style-position": [{
        list: ["inside", "outside"]
      }],
      /**
       * Placeholder Color
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/placeholder-color
       */
      "placeholder-color": [{
        placeholder: [e]
      }],
      /**
       * Placeholder Opacity
       * @see https://tailwindcss.com/docs/placeholder-opacity
       */
      "placeholder-opacity": [{
        "placeholder-opacity": [w]
      }],
      /**
       * Text Alignment
       * @see https://tailwindcss.com/docs/text-align
       */
      "text-alignment": [{
        text: ["left", "center", "right", "justify", "start", "end"]
      }],
      /**
       * Text Color
       * @see https://tailwindcss.com/docs/text-color
       */
      "text-color": [{
        text: [e]
      }],
      /**
       * Text Opacity
       * @see https://tailwindcss.com/docs/text-opacity
       */
      "text-opacity": [{
        "text-opacity": [w]
      }],
      /**
       * Text Decoration
       * @see https://tailwindcss.com/docs/text-decoration
       */
      "text-decoration": ["underline", "overline", "line-through", "no-underline"],
      /**
       * Text Decoration Style
       * @see https://tailwindcss.com/docs/text-decoration-style
       */
      "text-decoration-style": [{
        decoration: [...F(), "wavy"]
      }],
      /**
       * Text Decoration Thickness
       * @see https://tailwindcss.com/docs/text-decoration-thickness
       */
      "text-decoration-thickness": [{
        decoration: ["auto", "from-font", qa, Xs]
      }],
      /**
       * Text Underline Offset
       * @see https://tailwindcss.com/docs/text-underline-offset
       */
      "underline-offset": [{
        "underline-offset": ["auto", qa, pt]
      }],
      /**
       * Text Decoration Color
       * @see https://tailwindcss.com/docs/text-decoration-color
       */
      "text-decoration-color": [{
        decoration: [e]
      }],
      /**
       * Text Transform
       * @see https://tailwindcss.com/docs/text-transform
       */
      "text-transform": ["uppercase", "lowercase", "capitalize", "normal-case"],
      /**
       * Text Overflow
       * @see https://tailwindcss.com/docs/text-overflow
       */
      "text-overflow": ["truncate", "text-ellipsis", "text-clip"],
      /**
       * Text Wrap
       * @see https://tailwindcss.com/docs/text-wrap
       */
      "text-wrap": [{
        text: ["wrap", "nowrap", "balance", "pretty"]
      }],
      /**
       * Text Indent
       * @see https://tailwindcss.com/docs/text-indent
       */
      indent: [{
        indent: I()
      }],
      /**
       * Vertical Alignment
       * @see https://tailwindcss.com/docs/vertical-align
       */
      "vertical-align": [{
        align: ["baseline", "top", "middle", "bottom", "text-top", "text-bottom", "sub", "super", pt]
      }],
      /**
       * Whitespace
       * @see https://tailwindcss.com/docs/whitespace
       */
      whitespace: [{
        whitespace: ["normal", "nowrap", "pre", "pre-line", "pre-wrap", "break-spaces"]
      }],
      /**
       * Word Break
       * @see https://tailwindcss.com/docs/word-break
       */
      break: [{
        break: ["normal", "words", "all", "keep"]
      }],
      /**
       * Hyphens
       * @see https://tailwindcss.com/docs/hyphens
       */
      hyphens: [{
        hyphens: ["none", "manual", "auto"]
      }],
      /**
       * Content
       * @see https://tailwindcss.com/docs/content
       */
      content: [{
        content: ["none", pt]
      }],
      // Backgrounds
      /**
       * Background Attachment
       * @see https://tailwindcss.com/docs/background-attachment
       */
      "bg-attachment": [{
        bg: ["fixed", "local", "scroll"]
      }],
      /**
       * Background Clip
       * @see https://tailwindcss.com/docs/background-clip
       */
      "bg-clip": [{
        "bg-clip": ["border", "padding", "content", "text"]
      }],
      /**
       * Background Opacity
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/background-opacity
       */
      "bg-opacity": [{
        "bg-opacity": [w]
      }],
      /**
       * Background Origin
       * @see https://tailwindcss.com/docs/background-origin
       */
      "bg-origin": [{
        "bg-origin": ["border", "padding", "content"]
      }],
      /**
       * Background Position
       * @see https://tailwindcss.com/docs/background-position
       */
      "bg-position": [{
        bg: [...D(), qOe]
      }],
      /**
       * Background Repeat
       * @see https://tailwindcss.com/docs/background-repeat
       */
      "bg-repeat": [{
        bg: ["no-repeat", {
          repeat: ["", "x", "y", "round", "space"]
        }]
      }],
      /**
       * Background Size
       * @see https://tailwindcss.com/docs/background-size
       */
      "bg-size": [{
        bg: ["auto", "cover", "contain", GOe]
      }],
      /**
       * Background Image
       * @see https://tailwindcss.com/docs/background-image
       */
      "bg-image": [{
        bg: ["none", {
          "gradient-to": ["t", "tr", "r", "br", "b", "bl", "l", "tl"]
        }, XOe]
      }],
      /**
       * Background Color
       * @see https://tailwindcss.com/docs/background-color
       */
      "bg-color": [{
        bg: [e]
      }],
      /**
       * Gradient Color Stops From Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-from-pos": [{
        from: [x]
      }],
      /**
       * Gradient Color Stops Via Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-via-pos": [{
        via: [x]
      }],
      /**
       * Gradient Color Stops To Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-to-pos": [{
        to: [x]
      }],
      /**
       * Gradient Color Stops From
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-from": [{
        from: [v]
      }],
      /**
       * Gradient Color Stops Via
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-via": [{
        via: [v]
      }],
      /**
       * Gradient Color Stops To
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-to": [{
        to: [v]
      }],
      // Borders
      /**
       * Border Radius
       * @see https://tailwindcss.com/docs/border-radius
       */
      rounded: [{
        rounded: [a]
      }],
      /**
       * Border Radius Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-s": [{
        "rounded-s": [a]
      }],
      /**
       * Border Radius End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-e": [{
        "rounded-e": [a]
      }],
      /**
       * Border Radius Top
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-t": [{
        "rounded-t": [a]
      }],
      /**
       * Border Radius Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-r": [{
        "rounded-r": [a]
      }],
      /**
       * Border Radius Bottom
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-b": [{
        "rounded-b": [a]
      }],
      /**
       * Border Radius Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-l": [{
        "rounded-l": [a]
      }],
      /**
       * Border Radius Start Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-ss": [{
        "rounded-ss": [a]
      }],
      /**
       * Border Radius Start End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-se": [{
        "rounded-se": [a]
      }],
      /**
       * Border Radius End End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-ee": [{
        "rounded-ee": [a]
      }],
      /**
       * Border Radius End Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-es": [{
        "rounded-es": [a]
      }],
      /**
       * Border Radius Top Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-tl": [{
        "rounded-tl": [a]
      }],
      /**
       * Border Radius Top Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-tr": [{
        "rounded-tr": [a]
      }],
      /**
       * Border Radius Bottom Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-br": [{
        "rounded-br": [a]
      }],
      /**
       * Border Radius Bottom Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-bl": [{
        "rounded-bl": [a]
      }],
      /**
       * Border Width
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w": [{
        border: [s]
      }],
      /**
       * Border Width X
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-x": [{
        "border-x": [s]
      }],
      /**
       * Border Width Y
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-y": [{
        "border-y": [s]
      }],
      /**
       * Border Width Start
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-s": [{
        "border-s": [s]
      }],
      /**
       * Border Width End
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-e": [{
        "border-e": [s]
      }],
      /**
       * Border Width Top
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-t": [{
        "border-t": [s]
      }],
      /**
       * Border Width Right
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-r": [{
        "border-r": [s]
      }],
      /**
       * Border Width Bottom
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-b": [{
        "border-b": [s]
      }],
      /**
       * Border Width Left
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-l": [{
        "border-l": [s]
      }],
      /**
       * Border Opacity
       * @see https://tailwindcss.com/docs/border-opacity
       */
      "border-opacity": [{
        "border-opacity": [w]
      }],
      /**
       * Border Style
       * @see https://tailwindcss.com/docs/border-style
       */
      "border-style": [{
        border: [...F(), "hidden"]
      }],
      /**
       * Divide Width X
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-x": [{
        "divide-x": [s]
      }],
      /**
       * Divide Width X Reverse
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-x-reverse": ["divide-x-reverse"],
      /**
       * Divide Width Y
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-y": [{
        "divide-y": [s]
      }],
      /**
       * Divide Width Y Reverse
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-y-reverse": ["divide-y-reverse"],
      /**
       * Divide Opacity
       * @see https://tailwindcss.com/docs/divide-opacity
       */
      "divide-opacity": [{
        "divide-opacity": [w]
      }],
      /**
       * Divide Style
       * @see https://tailwindcss.com/docs/divide-style
       */
      "divide-style": [{
        divide: F()
      }],
      /**
       * Border Color
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color": [{
        border: [o]
      }],
      /**
       * Border Color X
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-x": [{
        "border-x": [o]
      }],
      /**
       * Border Color Y
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-y": [{
        "border-y": [o]
      }],
      /**
       * Border Color S
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-s": [{
        "border-s": [o]
      }],
      /**
       * Border Color E
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-e": [{
        "border-e": [o]
      }],
      /**
       * Border Color Top
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-t": [{
        "border-t": [o]
      }],
      /**
       * Border Color Right
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-r": [{
        "border-r": [o]
      }],
      /**
       * Border Color Bottom
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-b": [{
        "border-b": [o]
      }],
      /**
       * Border Color Left
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-l": [{
        "border-l": [o]
      }],
      /**
       * Divide Color
       * @see https://tailwindcss.com/docs/divide-color
       */
      "divide-color": [{
        divide: [o]
      }],
      /**
       * Outline Style
       * @see https://tailwindcss.com/docs/outline-style
       */
      "outline-style": [{
        outline: ["", ...F()]
      }],
      /**
       * Outline Offset
       * @see https://tailwindcss.com/docs/outline-offset
       */
      "outline-offset": [{
        "outline-offset": [qa, pt]
      }],
      /**
       * Outline Width
       * @see https://tailwindcss.com/docs/outline-width
       */
      "outline-w": [{
        outline: [qa, Xs]
      }],
      /**
       * Outline Color
       * @see https://tailwindcss.com/docs/outline-color
       */
      "outline-color": [{
        outline: [e]
      }],
      /**
       * Ring Width
       * @see https://tailwindcss.com/docs/ring-width
       */
      "ring-w": [{
        ring: te()
      }],
      /**
       * Ring Width Inset
       * @see https://tailwindcss.com/docs/ring-width
       */
      "ring-w-inset": ["ring-inset"],
      /**
       * Ring Color
       * @see https://tailwindcss.com/docs/ring-color
       */
      "ring-color": [{
        ring: [e]
      }],
      /**
       * Ring Opacity
       * @see https://tailwindcss.com/docs/ring-opacity
       */
      "ring-opacity": [{
        "ring-opacity": [w]
      }],
      /**
       * Ring Offset Width
       * @see https://tailwindcss.com/docs/ring-offset-width
       */
      "ring-offset-w": [{
        "ring-offset": [qa, Xs]
      }],
      /**
       * Ring Offset Color
       * @see https://tailwindcss.com/docs/ring-offset-color
       */
      "ring-offset-color": [{
        "ring-offset": [e]
      }],
      // Effects
      /**
       * Box Shadow
       * @see https://tailwindcss.com/docs/box-shadow
       */
      shadow: [{
        shadow: ["", "inner", "none", Ks, KOe]
      }],
      /**
       * Box Shadow Color
       * @see https://tailwindcss.com/docs/box-shadow-color
       */
      "shadow-color": [{
        shadow: [Am]
      }],
      /**
       * Opacity
       * @see https://tailwindcss.com/docs/opacity
       */
      opacity: [{
        opacity: [w]
      }],
      /**
       * Mix Blend Mode
       * @see https://tailwindcss.com/docs/mix-blend-mode
       */
      "mix-blend": [{
        "mix-blend": [...R(), "plus-lighter", "plus-darker"]
      }],
      /**
       * Background Blend Mode
       * @see https://tailwindcss.com/docs/background-blend-mode
       */
      "bg-blend": [{
        "bg-blend": R()
      }],
      // Filters
      /**
       * Filter
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/filter
       */
      filter: [{
        filter: ["", "none"]
      }],
      /**
       * Blur
       * @see https://tailwindcss.com/docs/blur
       */
      blur: [{
        blur: [r]
      }],
      /**
       * Brightness
       * @see https://tailwindcss.com/docs/brightness
       */
      brightness: [{
        brightness: [n]
      }],
      /**
       * Contrast
       * @see https://tailwindcss.com/docs/contrast
       */
      contrast: [{
        contrast: [l]
      }],
      /**
       * Drop Shadow
       * @see https://tailwindcss.com/docs/drop-shadow
       */
      "drop-shadow": [{
        "drop-shadow": ["", "none", Ks, pt]
      }],
      /**
       * Grayscale
       * @see https://tailwindcss.com/docs/grayscale
       */
      grayscale: [{
        grayscale: [c]
      }],
      /**
       * Hue Rotate
       * @see https://tailwindcss.com/docs/hue-rotate
       */
      "hue-rotate": [{
        "hue-rotate": [u]
      }],
      /**
       * Invert
       * @see https://tailwindcss.com/docs/invert
       */
      invert: [{
        invert: [f]
      }],
      /**
       * Saturate
       * @see https://tailwindcss.com/docs/saturate
       */
      saturate: [{
        saturate: [E]
      }],
      /**
       * Sepia
       * @see https://tailwindcss.com/docs/sepia
       */
      sepia: [{
        sepia: [h]
      }],
      /**
       * Backdrop Filter
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/backdrop-filter
       */
      "backdrop-filter": [{
        "backdrop-filter": ["", "none"]
      }],
      /**
       * Backdrop Blur
       * @see https://tailwindcss.com/docs/backdrop-blur
       */
      "backdrop-blur": [{
        "backdrop-blur": [r]
      }],
      /**
       * Backdrop Brightness
       * @see https://tailwindcss.com/docs/backdrop-brightness
       */
      "backdrop-brightness": [{
        "backdrop-brightness": [n]
      }],
      /**
       * Backdrop Contrast
       * @see https://tailwindcss.com/docs/backdrop-contrast
       */
      "backdrop-contrast": [{
        "backdrop-contrast": [l]
      }],
      /**
       * Backdrop Grayscale
       * @see https://tailwindcss.com/docs/backdrop-grayscale
       */
      "backdrop-grayscale": [{
        "backdrop-grayscale": [c]
      }],
      /**
       * Backdrop Hue Rotate
       * @see https://tailwindcss.com/docs/backdrop-hue-rotate
       */
      "backdrop-hue-rotate": [{
        "backdrop-hue-rotate": [u]
      }],
      /**
       * Backdrop Invert
       * @see https://tailwindcss.com/docs/backdrop-invert
       */
      "backdrop-invert": [{
        "backdrop-invert": [f]
      }],
      /**
       * Backdrop Opacity
       * @see https://tailwindcss.com/docs/backdrop-opacity
       */
      "backdrop-opacity": [{
        "backdrop-opacity": [w]
      }],
      /**
       * Backdrop Saturate
       * @see https://tailwindcss.com/docs/backdrop-saturate
       */
      "backdrop-saturate": [{
        "backdrop-saturate": [E]
      }],
      /**
       * Backdrop Sepia
       * @see https://tailwindcss.com/docs/backdrop-sepia
       */
      "backdrop-sepia": [{
        "backdrop-sepia": [h]
      }],
      // Tables
      /**
       * Border Collapse
       * @see https://tailwindcss.com/docs/border-collapse
       */
      "border-collapse": [{
        border: ["collapse", "separate"]
      }],
      /**
       * Border Spacing
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing": [{
        "border-spacing": [i]
      }],
      /**
       * Border Spacing X
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing-x": [{
        "border-spacing-x": [i]
      }],
      /**
       * Border Spacing Y
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing-y": [{
        "border-spacing-y": [i]
      }],
      /**
       * Table Layout
       * @see https://tailwindcss.com/docs/table-layout
       */
      "table-layout": [{
        table: ["auto", "fixed"]
      }],
      /**
       * Caption Side
       * @see https://tailwindcss.com/docs/caption-side
       */
      caption: [{
        caption: ["top", "bottom"]
      }],
      // Transitions and Animation
      /**
       * Tranisition Property
       * @see https://tailwindcss.com/docs/transition-property
       */
      transition: [{
        transition: ["none", "all", "", "colors", "opacity", "shadow", "transform", pt]
      }],
      /**
       * Transition Duration
       * @see https://tailwindcss.com/docs/transition-duration
       */
      duration: [{
        duration: d()
      }],
      /**
       * Transition Timing Function
       * @see https://tailwindcss.com/docs/transition-timing-function
       */
      ease: [{
        ease: ["linear", "in", "out", "in-out", pt]
      }],
      /**
       * Transition Delay
       * @see https://tailwindcss.com/docs/transition-delay
       */
      delay: [{
        delay: d()
      }],
      /**
       * Animation
       * @see https://tailwindcss.com/docs/animation
       */
      animate: [{
        animate: ["none", "spin", "ping", "pulse", "bounce", pt]
      }],
      // Transforms
      /**
       * Transform
       * @see https://tailwindcss.com/docs/transform
       */
      transform: [{
        transform: ["", "gpu", "none"]
      }],
      /**
       * Scale
       * @see https://tailwindcss.com/docs/scale
       */
      scale: [{
        scale: [S]
      }],
      /**
       * Scale X
       * @see https://tailwindcss.com/docs/scale
       */
      "scale-x": [{
        "scale-x": [S]
      }],
      /**
       * Scale Y
       * @see https://tailwindcss.com/docs/scale
       */
      "scale-y": [{
        "scale-y": [S]
      }],
      /**
       * Rotate
       * @see https://tailwindcss.com/docs/rotate
       */
      rotate: [{
        rotate: [Cm, pt]
      }],
      /**
       * Translate X
       * @see https://tailwindcss.com/docs/translate
       */
      "translate-x": [{
        "translate-x": [Q]
      }],
      /**
       * Translate Y
       * @see https://tailwindcss.com/docs/translate
       */
      "translate-y": [{
        "translate-y": [Q]
      }],
      /**
       * Skew X
       * @see https://tailwindcss.com/docs/skew
       */
      "skew-x": [{
        "skew-x": [U]
      }],
      /**
       * Skew Y
       * @see https://tailwindcss.com/docs/skew
       */
      "skew-y": [{
        "skew-y": [U]
      }],
      /**
       * Transform Origin
       * @see https://tailwindcss.com/docs/transform-origin
       */
      "transform-origin": [{
        origin: ["center", "top", "top-right", "right", "bottom-right", "bottom", "bottom-left", "left", "top-left", pt]
      }],
      // Interactivity
      /**
       * Accent Color
       * @see https://tailwindcss.com/docs/accent-color
       */
      accent: [{
        accent: ["auto", e]
      }],
      /**
       * Appearance
       * @see https://tailwindcss.com/docs/appearance
       */
      appearance: [{
        appearance: ["none", "auto"]
      }],
      /**
       * Cursor
       * @see https://tailwindcss.com/docs/cursor
       */
      cursor: [{
        cursor: ["auto", "default", "pointer", "wait", "text", "move", "help", "not-allowed", "none", "context-menu", "progress", "cell", "crosshair", "vertical-text", "alias", "copy", "no-drop", "grab", "grabbing", "all-scroll", "col-resize", "row-resize", "n-resize", "e-resize", "s-resize", "w-resize", "ne-resize", "nw-resize", "se-resize", "sw-resize", "ew-resize", "ns-resize", "nesw-resize", "nwse-resize", "zoom-in", "zoom-out", pt]
      }],
      /**
       * Caret Color
       * @see https://tailwindcss.com/docs/just-in-time-mode#caret-color-utilities
       */
      "caret-color": [{
        caret: [e]
      }],
      /**
       * Pointer Events
       * @see https://tailwindcss.com/docs/pointer-events
       */
      "pointer-events": [{
        "pointer-events": ["none", "auto"]
      }],
      /**
       * Resize
       * @see https://tailwindcss.com/docs/resize
       */
      resize: [{
        resize: ["none", "y", "x", ""]
      }],
      /**
       * Scroll Behavior
       * @see https://tailwindcss.com/docs/scroll-behavior
       */
      "scroll-behavior": [{
        scroll: ["auto", "smooth"]
      }],
      /**
       * Scroll Margin
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-m": [{
        "scroll-m": I()
      }],
      /**
       * Scroll Margin X
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mx": [{
        "scroll-mx": I()
      }],
      /**
       * Scroll Margin Y
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-my": [{
        "scroll-my": I()
      }],
      /**
       * Scroll Margin Start
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-ms": [{
        "scroll-ms": I()
      }],
      /**
       * Scroll Margin End
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-me": [{
        "scroll-me": I()
      }],
      /**
       * Scroll Margin Top
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mt": [{
        "scroll-mt": I()
      }],
      /**
       * Scroll Margin Right
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mr": [{
        "scroll-mr": I()
      }],
      /**
       * Scroll Margin Bottom
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mb": [{
        "scroll-mb": I()
      }],
      /**
       * Scroll Margin Left
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-ml": [{
        "scroll-ml": I()
      }],
      /**
       * Scroll Padding
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-p": [{
        "scroll-p": I()
      }],
      /**
       * Scroll Padding X
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-px": [{
        "scroll-px": I()
      }],
      /**
       * Scroll Padding Y
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-py": [{
        "scroll-py": I()
      }],
      /**
       * Scroll Padding Start
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-ps": [{
        "scroll-ps": I()
      }],
      /**
       * Scroll Padding End
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pe": [{
        "scroll-pe": I()
      }],
      /**
       * Scroll Padding Top
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pt": [{
        "scroll-pt": I()
      }],
      /**
       * Scroll Padding Right
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pr": [{
        "scroll-pr": I()
      }],
      /**
       * Scroll Padding Bottom
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pb": [{
        "scroll-pb": I()
      }],
      /**
       * Scroll Padding Left
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pl": [{
        "scroll-pl": I()
      }],
      /**
       * Scroll Snap Align
       * @see https://tailwindcss.com/docs/scroll-snap-align
       */
      "snap-align": [{
        snap: ["start", "end", "center", "align-none"]
      }],
      /**
       * Scroll Snap Stop
       * @see https://tailwindcss.com/docs/scroll-snap-stop
       */
      "snap-stop": [{
        snap: ["normal", "always"]
      }],
      /**
       * Scroll Snap Type
       * @see https://tailwindcss.com/docs/scroll-snap-type
       */
      "snap-type": [{
        snap: ["none", "x", "y", "both"]
      }],
      /**
       * Scroll Snap Type Strictness
       * @see https://tailwindcss.com/docs/scroll-snap-type
       */
      "snap-strictness": [{
        snap: ["mandatory", "proximity"]
      }],
      /**
       * Touch Action
       * @see https://tailwindcss.com/docs/touch-action
       */
      touch: [{
        touch: ["auto", "none", "manipulation"]
      }],
      /**
       * Touch Action X
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-x": [{
        "touch-pan": ["x", "left", "right"]
      }],
      /**
       * Touch Action Y
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-y": [{
        "touch-pan": ["y", "up", "down"]
      }],
      /**
       * Touch Action Pinch Zoom
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-pz": ["touch-pinch-zoom"],
      /**
       * User Select
       * @see https://tailwindcss.com/docs/user-select
       */
      select: [{
        select: ["none", "text", "all", "auto"]
      }],
      /**
       * Will Change
       * @see https://tailwindcss.com/docs/will-change
       */
      "will-change": [{
        "will-change": ["auto", "scroll", "contents", "transform", pt]
      }],
      // SVG
      /**
       * Fill
       * @see https://tailwindcss.com/docs/fill
       */
      fill: [{
        fill: [e, "none"]
      }],
      /**
       * Stroke Width
       * @see https://tailwindcss.com/docs/stroke-width
       */
      "stroke-w": [{
        stroke: [qa, Xs, ek]
      }],
      /**
       * Stroke
       * @see https://tailwindcss.com/docs/stroke
       */
      stroke: [{
        stroke: [e, "none"]
      }],
      // Accessibility
      /**
       * Screen Readers
       * @see https://tailwindcss.com/docs/screen-readers
       */
      sr: ["sr-only", "not-sr-only"],
      /**
       * Forced Color Adjust
       * @see https://tailwindcss.com/docs/forced-color-adjust
       */
      "forced-color-adjust": [{
        "forced-color-adjust": ["auto", "none"]
      }]
    },
    conflictingClassGroups: {
      overflow: ["overflow-x", "overflow-y"],
      overscroll: ["overscroll-x", "overscroll-y"],
      inset: ["inset-x", "inset-y", "start", "end", "top", "right", "bottom", "left"],
      "inset-x": ["right", "left"],
      "inset-y": ["top", "bottom"],
      flex: ["basis", "grow", "shrink"],
      gap: ["gap-x", "gap-y"],
      p: ["px", "py", "ps", "pe", "pt", "pr", "pb", "pl"],
      px: ["pr", "pl"],
      py: ["pt", "pb"],
      m: ["mx", "my", "ms", "me", "mt", "mr", "mb", "ml"],
      mx: ["mr", "ml"],
      my: ["mt", "mb"],
      size: ["w", "h"],
      "font-size": ["leading"],
      "fvn-normal": ["fvn-ordinal", "fvn-slashed-zero", "fvn-figure", "fvn-spacing", "fvn-fraction"],
      "fvn-ordinal": ["fvn-normal"],
      "fvn-slashed-zero": ["fvn-normal"],
      "fvn-figure": ["fvn-normal"],
      "fvn-spacing": ["fvn-normal"],
      "fvn-fraction": ["fvn-normal"],
      "line-clamp": ["display", "overflow"],
      rounded: ["rounded-s", "rounded-e", "rounded-t", "rounded-r", "rounded-b", "rounded-l", "rounded-ss", "rounded-se", "rounded-ee", "rounded-es", "rounded-tl", "rounded-tr", "rounded-br", "rounded-bl"],
      "rounded-s": ["rounded-ss", "rounded-es"],
      "rounded-e": ["rounded-se", "rounded-ee"],
      "rounded-t": ["rounded-tl", "rounded-tr"],
      "rounded-r": ["rounded-tr", "rounded-br"],
      "rounded-b": ["rounded-br", "rounded-bl"],
      "rounded-l": ["rounded-tl", "rounded-bl"],
      "border-spacing": ["border-spacing-x", "border-spacing-y"],
      "border-w": ["border-w-s", "border-w-e", "border-w-t", "border-w-r", "border-w-b", "border-w-l"],
      "border-w-x": ["border-w-r", "border-w-l"],
      "border-w-y": ["border-w-t", "border-w-b"],
      "border-color": ["border-color-s", "border-color-e", "border-color-t", "border-color-r", "border-color-b", "border-color-l"],
      "border-color-x": ["border-color-r", "border-color-l"],
      "border-color-y": ["border-color-t", "border-color-b"],
      "scroll-m": ["scroll-mx", "scroll-my", "scroll-ms", "scroll-me", "scroll-mt", "scroll-mr", "scroll-mb", "scroll-ml"],
      "scroll-mx": ["scroll-mr", "scroll-ml"],
      "scroll-my": ["scroll-mt", "scroll-mb"],
      "scroll-p": ["scroll-px", "scroll-py", "scroll-ps", "scroll-pe", "scroll-pt", "scroll-pr", "scroll-pb", "scroll-pl"],
      "scroll-px": ["scroll-pr", "scroll-pl"],
      "scroll-py": ["scroll-pt", "scroll-pb"],
      touch: ["touch-x", "touch-y", "touch-pz"],
      "touch-x": ["touch"],
      "touch-y": ["touch"],
      "touch-pz": ["touch"]
    },
    conflictingClassGroupModifiers: {
      "font-size": ["leading"]
    }
  };
}, xT = /* @__PURE__ */ ROe(e4e);
/*!
 * Font Awesome Pro 6.7.2 by @fontawesome - https://fontawesome.com
 * License - https://fontawesome.com/license (Commercial License)
 * Copyright 2024 Fonticons, Inc.
 */
const qu = {
  prefix: "fas",
  iconName: "spinner-third",
  icon: [512, 512, [], "f3f4", "M224 32c0-17.7 14.3-32 32-32C397.4 0 512 114.6 512 256c0 46.6-12.5 90.4-34.3 128c-8.8 15.3-28.4 20.5-43.7 11.7s-20.5-28.4-11.7-43.7c16.3-28.2 25.7-61 25.7-96c0-106-86-192-192-192c-17.7 0-32-14.3-32-32z"]
}, tk = ({
  icon: e,
  iconClassName: t,
  children: r,
  className: n,
  htmlFor: o,
  variant: a = "primary",
  disabled: i,
  iconFlip: s = !1,
  loading: l,
  as: c = "button",
  href: u,
  target: f,
  ...p
}) => {
  function v(m) {
    switch (m) {
      case "secondary":
        return "i-am-a-unique-string bg-ui-controls text-base-fg border border-ui-controls-border hover:bg-ui-controls/80 focus-visible:outline-secondary";
      case "action":
        return "bg-ui-controls text-base-fg border border-ui-controls-border hover:bg-ui-controls/80 focus-visible:outline-action";
      case "destructive":
        return "bg-red hover:bg-red/90 text-white focus-visible:outline-red";
      case "ghost":
        return "bg-transparent text-base-fg border border-ui-controls-border/70 hover:bg-ui-controls/30 focus-visible:outline-primary-600";
      case "primary":
      default:
        return "bg-primary hover:bg-primary-400 text-white focus-visible:outline-primary-600";
    }
  }
  const x = xT(
    i || l ? "opacity-50 pointer-events-none" : ""
  ), b = xT(
    "w-fit text-sm font-medium rounded-lg px-3 py-2 border border-transparent shadow-sm focus-visible:outline focus-visible:outline-0 focus-visible:outline-offset-0 transition-all duration-150 flex gap-2 items-center justify-center active:scale-95 transform",
    v(a),
    n,
    x
  );
  return o ? /* @__PURE__ */ Pe("label", { className: b, htmlFor: o, style: p.style, children: [
    l && !s ? /* @__PURE__ */ q(Fn, { icon: qu, className: "animate-spin" }) : /* @__PURE__ */ q(Vt, { children: e && !s ? /* @__PURE__ */ q(Fn, { icon: e, className: t }) : null }),
    r,
    l && s ? /* @__PURE__ */ q(Fn, { icon: qu, className: "animate-spin" }) : /* @__PURE__ */ q(Vt, { children: e && s ? /* @__PURE__ */ q(Fn, { icon: e, className: t }) : null })
  ] }) : c === "link" && u ? /* @__PURE__ */ Pe(
    "a",
    {
      href: u,
      className: b,
      style: p.style,
      ...p,
      target: f,
      children: [
        l && !s ? /* @__PURE__ */ q(Fn, { icon: qu, className: "animate-spin" }) : /* @__PURE__ */ q(Vt, { children: e && !s ? /* @__PURE__ */ q(Fn, { icon: e, className: t }) : null }),
        r,
        l && s ? /* @__PURE__ */ q(Fn, { icon: qu, className: "animate-spin" }) : /* @__PURE__ */ q(Vt, { children: e && s ? /* @__PURE__ */ q(Fn, { icon: e, className: t }) : null })
      ]
    }
  ) : /* @__PURE__ */ Pe(
    "button",
    {
      className: b,
      disabled: i || l,
      ...p,
      htmlFor: o,
      children: [
        l && !s ? /* @__PURE__ */ q(Fn, { icon: qu, className: "animate-spin" }) : /* @__PURE__ */ q(Vt, { children: e && !s ? /* @__PURE__ */ q(Fn, { icon: e, className: t }) : null }),
        r,
        l && s ? /* @__PURE__ */ q(Fn, { icon: qu, className: "animate-spin" }) : /* @__PURE__ */ q(Vt, { children: e && s ? /* @__PURE__ */ q(Fn, { icon: e, className: t }) : null })
      ]
    }
  );
};
var cv = /* @__PURE__ */ ((e) => (e[e.ALL = 0] = "ALL", e[e.FEATURED = 1] = "FEATURED", e[e.MINE = 2] = "MINE", e[e.BOOKMARKED = 3] = "BOOKMARKED", e))(cv || {});
cv.FEATURED, cv.MINE, cv.BOOKMARKED;
/*!
 * Font Awesome Pro 6.7.2 by @fontawesome - https://fontawesome.com
 * License - https://fontawesome.com/license (Commercial License)
 * Copyright 2024 Fonticons, Inc.
 */
const t4e = {
  prefix: "fas",
  iconName: "xmark",
  icon: [384, 512, [128473, 10005, 10006, 10060, 215, "close", "multiply", "remove", "times"], "f00d", "M342.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L192 210.7 86.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L146.7 256 41.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L192 301.3 297.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L237.3 256 342.6 150.6z"]
};
/*!
 * Font Awesome Free 6.7.2 by @fontawesome - https://fontawesome.com
 * License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License)
 * Copyright 2024 Fonticons, Inc.
 */
function r4e(e, t, r) {
  return (t = o4e(t)) in e ? Object.defineProperty(e, t, {
    value: r,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : e[t] = r, e;
}
function wT(e, t) {
  var r = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var n = Object.getOwnPropertySymbols(e);
    t && (n = n.filter(function(o) {
      return Object.getOwnPropertyDescriptor(e, o).enumerable;
    })), r.push.apply(r, n);
  }
  return r;
}
function xe(e) {
  for (var t = 1; t < arguments.length; t++) {
    var r = arguments[t] != null ? arguments[t] : {};
    t % 2 ? wT(Object(r), !0).forEach(function(n) {
      r4e(e, n, r[n]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : wT(Object(r)).forEach(function(n) {
      Object.defineProperty(e, n, Object.getOwnPropertyDescriptor(r, n));
    });
  }
  return e;
}
function n4e(e, t) {
  if (typeof e != "object" || !e) return e;
  var r = e[Symbol.toPrimitive];
  if (r !== void 0) {
    var n = r.call(e, t);
    if (typeof n != "object") return n;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (t === "string" ? String : Number)(e);
}
function o4e(e) {
  var t = n4e(e, "string");
  return typeof t == "symbol" ? t : t + "";
}
const kT = () => {
};
let xC = {}, nq = {}, oq = null, aq = {
  mark: kT,
  measure: kT
};
try {
  typeof window < "u" && (xC = window), typeof document < "u" && (nq = document), typeof MutationObserver < "u" && (oq = MutationObserver), typeof performance < "u" && (aq = performance);
} catch {
}
const {
  userAgent: $T = ""
} = xC.navigator || {}, lc = xC, Ur = nq, OT = oq, py = aq;
lc.document;
const Yi = !!Ur.documentElement && !!Ur.head && typeof Ur.addEventListener == "function" && typeof Ur.createElement == "function", iq = ~$T.indexOf("MSIE") || ~$T.indexOf("Trident/");
var a4e = /fa(s|r|l|t|d|dr|dl|dt|b|k|kd|ss|sr|sl|st|sds|sdr|sdl|sdt)?[\-\ ]/, i4e = /Font ?Awesome ?([56 ]*)(Solid|Regular|Light|Thin|Duotone|Brands|Free|Pro|Sharp Duotone|Sharp|Kit)?.*/i, sq = {
  classic: {
    fa: "solid",
    fas: "solid",
    "fa-solid": "solid",
    far: "regular",
    "fa-regular": "regular",
    fal: "light",
    "fa-light": "light",
    fat: "thin",
    "fa-thin": "thin",
    fab: "brands",
    "fa-brands": "brands"
  },
  duotone: {
    fa: "solid",
    fad: "solid",
    "fa-solid": "solid",
    "fa-duotone": "solid",
    fadr: "regular",
    "fa-regular": "regular",
    fadl: "light",
    "fa-light": "light",
    fadt: "thin",
    "fa-thin": "thin"
  },
  sharp: {
    fa: "solid",
    fass: "solid",
    "fa-solid": "solid",
    fasr: "regular",
    "fa-regular": "regular",
    fasl: "light",
    "fa-light": "light",
    fast: "thin",
    "fa-thin": "thin"
  },
  "sharp-duotone": {
    fa: "solid",
    fasds: "solid",
    "fa-solid": "solid",
    fasdr: "regular",
    "fa-regular": "regular",
    fasdl: "light",
    "fa-light": "light",
    fasdt: "thin",
    "fa-thin": "thin"
  }
}, s4e = {
  GROUP: "duotone-group",
  PRIMARY: "primary",
  SECONDARY: "secondary"
}, lq = ["fa-classic", "fa-duotone", "fa-sharp", "fa-sharp-duotone"], yn = "classic", V0 = "duotone", l4e = "sharp", c4e = "sharp-duotone", cq = [yn, V0, l4e, c4e], u4e = {
  classic: {
    900: "fas",
    400: "far",
    normal: "far",
    300: "fal",
    100: "fat"
  },
  duotone: {
    900: "fad",
    400: "fadr",
    300: "fadl",
    100: "fadt"
  },
  sharp: {
    900: "fass",
    400: "fasr",
    300: "fasl",
    100: "fast"
  },
  "sharp-duotone": {
    900: "fasds",
    400: "fasdr",
    300: "fasdl",
    100: "fasdt"
  }
}, f4e = {
  "Font Awesome 6 Free": {
    900: "fas",
    400: "far"
  },
  "Font Awesome 6 Pro": {
    900: "fas",
    400: "far",
    normal: "far",
    300: "fal",
    100: "fat"
  },
  "Font Awesome 6 Brands": {
    400: "fab",
    normal: "fab"
  },
  "Font Awesome 6 Duotone": {
    900: "fad",
    400: "fadr",
    normal: "fadr",
    300: "fadl",
    100: "fadt"
  },
  "Font Awesome 6 Sharp": {
    900: "fass",
    400: "fasr",
    normal: "fasr",
    300: "fasl",
    100: "fast"
  },
  "Font Awesome 6 Sharp Duotone": {
    900: "fasds",
    400: "fasdr",
    normal: "fasdr",
    300: "fasdl",
    100: "fasdt"
  }
}, d4e = /* @__PURE__ */ new Map([["classic", {
  defaultShortPrefixId: "fas",
  defaultStyleId: "solid",
  styleIds: ["solid", "regular", "light", "thin", "brands"],
  futureStyleIds: [],
  defaultFontWeight: 900
}], ["sharp", {
  defaultShortPrefixId: "fass",
  defaultStyleId: "solid",
  styleIds: ["solid", "regular", "light", "thin"],
  futureStyleIds: [],
  defaultFontWeight: 900
}], ["duotone", {
  defaultShortPrefixId: "fad",
  defaultStyleId: "solid",
  styleIds: ["solid", "regular", "light", "thin"],
  futureStyleIds: [],
  defaultFontWeight: 900
}], ["sharp-duotone", {
  defaultShortPrefixId: "fasds",
  defaultStyleId: "solid",
  styleIds: ["solid", "regular", "light", "thin"],
  futureStyleIds: [],
  defaultFontWeight: 900
}]]), p4e = {
  classic: {
    solid: "fas",
    regular: "far",
    light: "fal",
    thin: "fat",
    brands: "fab"
  },
  duotone: {
    solid: "fad",
    regular: "fadr",
    light: "fadl",
    thin: "fadt"
  },
  sharp: {
    solid: "fass",
    regular: "fasr",
    light: "fasl",
    thin: "fast"
  },
  "sharp-duotone": {
    solid: "fasds",
    regular: "fasdr",
    light: "fasdl",
    thin: "fasdt"
  }
}, m4e = ["fak", "fa-kit", "fakd", "fa-kit-duotone"], ET = {
  kit: {
    fak: "kit",
    "fa-kit": "kit"
  },
  "kit-duotone": {
    fakd: "kit-duotone",
    "fa-kit-duotone": "kit-duotone"
  }
}, g4e = ["kit"], h4e = {
  kit: {
    "fa-kit": "fak"
  }
}, b4e = ["fak", "fakd"], y4e = {
  kit: {
    fak: "fa-kit"
  }
}, ST = {
  kit: {
    kit: "fak"
  },
  "kit-duotone": {
    "kit-duotone": "fakd"
  }
}, my = {
  GROUP: "duotone-group",
  SWAP_OPACITY: "swap-opacity",
  PRIMARY: "primary",
  SECONDARY: "secondary"
}, v4e = ["fa-classic", "fa-duotone", "fa-sharp", "fa-sharp-duotone"], x4e = ["fak", "fa-kit", "fakd", "fa-kit-duotone"], w4e = {
  "Font Awesome Kit": {
    400: "fak",
    normal: "fak"
  },
  "Font Awesome Kit Duotone": {
    400: "fakd",
    normal: "fakd"
  }
}, k4e = {
  classic: {
    "fa-brands": "fab",
    "fa-duotone": "fad",
    "fa-light": "fal",
    "fa-regular": "far",
    "fa-solid": "fas",
    "fa-thin": "fat"
  },
  duotone: {
    "fa-regular": "fadr",
    "fa-light": "fadl",
    "fa-thin": "fadt"
  },
  sharp: {
    "fa-solid": "fass",
    "fa-regular": "fasr",
    "fa-light": "fasl",
    "fa-thin": "fast"
  },
  "sharp-duotone": {
    "fa-solid": "fasds",
    "fa-regular": "fasdr",
    "fa-light": "fasdl",
    "fa-thin": "fasdt"
  }
}, $4e = {
  classic: ["fas", "far", "fal", "fat", "fad"],
  duotone: ["fadr", "fadl", "fadt"],
  sharp: ["fass", "fasr", "fasl", "fast"],
  "sharp-duotone": ["fasds", "fasdr", "fasdl", "fasdt"]
}, TO = {
  classic: {
    fab: "fa-brands",
    fad: "fa-duotone",
    fal: "fa-light",
    far: "fa-regular",
    fas: "fa-solid",
    fat: "fa-thin"
  },
  duotone: {
    fadr: "fa-regular",
    fadl: "fa-light",
    fadt: "fa-thin"
  },
  sharp: {
    fass: "fa-solid",
    fasr: "fa-regular",
    fasl: "fa-light",
    fast: "fa-thin"
  },
  "sharp-duotone": {
    fasds: "fa-solid",
    fasdr: "fa-regular",
    fasdl: "fa-light",
    fasdt: "fa-thin"
  }
}, O4e = ["fa-solid", "fa-regular", "fa-light", "fa-thin", "fa-duotone", "fa-brands"], MO = ["fa", "fas", "far", "fal", "fat", "fad", "fadr", "fadl", "fadt", "fab", "fass", "fasr", "fasl", "fast", "fasds", "fasdr", "fasdl", "fasdt", ...v4e, ...O4e], E4e = ["solid", "regular", "light", "thin", "duotone", "brands"], uq = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], S4e = uq.concat([11, 12, 13, 14, 15, 16, 17, 18, 19, 20]), P4e = [...Object.keys($4e), ...E4e, "2xs", "xs", "sm", "lg", "xl", "2xl", "beat", "border", "fade", "beat-fade", "bounce", "flip-both", "flip-horizontal", "flip-vertical", "flip", "fw", "inverse", "layers-counter", "layers-text", "layers", "li", "pull-left", "pull-right", "pulse", "rotate-180", "rotate-270", "rotate-90", "rotate-by", "shake", "spin-pulse", "spin-reverse", "spin", "stack-1x", "stack-2x", "stack", "ul", my.GROUP, my.SWAP_OPACITY, my.PRIMARY, my.SECONDARY].concat(uq.map((e) => "".concat(e, "x"))).concat(S4e.map((e) => "w-".concat(e))), C4e = {
  "Font Awesome 5 Free": {
    900: "fas",
    400: "far"
  },
  "Font Awesome 5 Pro": {
    900: "fas",
    400: "far",
    normal: "far",
    300: "fal"
  },
  "Font Awesome 5 Brands": {
    400: "fab",
    normal: "fab"
  },
  "Font Awesome 5 Duotone": {
    900: "fad"
  }
};
const Ei = "___FONT_AWESOME___", RO = 16, fq = "fa", dq = "svg-inline--fa", xu = "data-fa-i2svg", zO = "data-fa-pseudo-element", A4e = "data-fa-pseudo-element-pending", wC = "data-prefix", kC = "data-icon", PT = "fontawesome-i2svg", _4e = "async", N4e = ["HTML", "HEAD", "STYLE", "SCRIPT"], pq = (() => {
  try {
    return process.env.NODE_ENV === "production";
  } catch {
    return !1;
  }
})();
function fb(e) {
  return new Proxy(e, {
    get(t, r) {
      return r in t ? t[r] : t[yn];
    }
  });
}
const mq = xe({}, sq);
mq[yn] = xe(xe(xe(xe({}, {
  "fa-duotone": "duotone"
}), sq[yn]), ET.kit), ET["kit-duotone"]);
const j4e = fb(mq), FO = xe({}, p4e);
FO[yn] = xe(xe(xe(xe({}, {
  duotone: "fad"
}), FO[yn]), ST.kit), ST["kit-duotone"]);
const CT = fb(FO), DO = xe({}, TO);
DO[yn] = xe(xe({}, DO[yn]), y4e.kit);
const $C = fb(DO), LO = xe({}, k4e);
LO[yn] = xe(xe({}, LO[yn]), h4e.kit);
fb(LO);
const I4e = a4e, gq = "fa-layers-text", T4e = i4e, M4e = xe({}, u4e);
fb(M4e);
const R4e = ["class", "data-prefix", "data-icon", "data-fa-transform", "data-fa-mask"], rk = s4e, z4e = [...g4e, ...P4e], Mg = lc.FontAwesomeConfig || {};
function F4e(e) {
  var t = Ur.querySelector("script[" + e + "]");
  if (t)
    return t.getAttribute(e);
}
function D4e(e) {
  return e === "" ? !0 : e === "false" ? !1 : e === "true" ? !0 : e;
}
Ur && typeof Ur.querySelector == "function" && [["data-family-prefix", "familyPrefix"], ["data-css-prefix", "cssPrefix"], ["data-family-default", "familyDefault"], ["data-style-default", "styleDefault"], ["data-replacement-class", "replacementClass"], ["data-auto-replace-svg", "autoReplaceSvg"], ["data-auto-add-css", "autoAddCss"], ["data-auto-a11y", "autoA11y"], ["data-search-pseudo-elements", "searchPseudoElements"], ["data-observe-mutations", "observeMutations"], ["data-mutate-approach", "mutateApproach"], ["data-keep-original-source", "keepOriginalSource"], ["data-measure-performance", "measurePerformance"], ["data-show-missing-icons", "showMissingIcons"]].forEach((e) => {
  let [t, r] = e;
  const n = D4e(F4e(t));
  n != null && (Mg[r] = n);
});
const hq = {
  styleDefault: "solid",
  familyDefault: yn,
  cssPrefix: fq,
  replacementClass: dq,
  autoReplaceSvg: !0,
  autoAddCss: !0,
  autoA11y: !0,
  searchPseudoElements: !1,
  observeMutations: !0,
  mutateApproach: "async",
  keepOriginalSource: !0,
  measurePerformance: !1,
  showMissingIcons: !0
};
Mg.familyPrefix && (Mg.cssPrefix = Mg.familyPrefix);
const vd = xe(xe({}, hq), Mg);
vd.autoReplaceSvg || (vd.observeMutations = !1);
const Ge = {};
Object.keys(hq).forEach((e) => {
  Object.defineProperty(Ge, e, {
    enumerable: !0,
    set: function(t) {
      vd[e] = t, Rg.forEach((r) => r(Ge));
    },
    get: function() {
      return vd[e];
    }
  });
});
Object.defineProperty(Ge, "familyPrefix", {
  enumerable: !0,
  set: function(e) {
    vd.cssPrefix = e, Rg.forEach((t) => t(Ge));
  },
  get: function() {
    return vd.cssPrefix;
  }
});
lc.FontAwesomeConfig = Ge;
const Rg = [];
function L4e(e) {
  return Rg.push(e), () => {
    Rg.splice(Rg.indexOf(e), 1);
  };
}
const Js = RO, xa = {
  size: 16,
  x: 0,
  y: 0,
  rotate: 0,
  flipX: !1,
  flipY: !1
};
function V4e(e) {
  if (!e || !Yi)
    return;
  const t = Ur.createElement("style");
  t.setAttribute("type", "text/css"), t.innerHTML = e;
  const r = Ur.head.childNodes;
  let n = null;
  for (let o = r.length - 1; o > -1; o--) {
    const a = r[o], i = (a.tagName || "").toUpperCase();
    ["STYLE", "LINK"].indexOf(i) > -1 && (n = a);
  }
  return Ur.head.insertBefore(t, n), e;
}
const W4e = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
function jh() {
  let e = 12, t = "";
  for (; e-- > 0; )
    t += W4e[Math.random() * 62 | 0];
  return t;
}
function Gd(e) {
  const t = [];
  for (let r = (e || []).length >>> 0; r--; )
    t[r] = e[r];
  return t;
}
function OC(e) {
  return e.classList ? Gd(e.classList) : (e.getAttribute("class") || "").split(" ").filter((t) => t);
}
function bq(e) {
  return "".concat(e).replace(/&/g, "&amp;").replace(/"/g, "&quot;").replace(/'/g, "&#39;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
}
function U4e(e) {
  return Object.keys(e || {}).reduce((t, r) => t + "".concat(r, '="').concat(bq(e[r]), '" '), "").trim();
}
function W0(e) {
  return Object.keys(e || {}).reduce((t, r) => t + "".concat(r, ": ").concat(e[r].trim(), ";"), "");
}
function EC(e) {
  return e.size !== xa.size || e.x !== xa.x || e.y !== xa.y || e.rotate !== xa.rotate || e.flipX || e.flipY;
}
function Y4e(e) {
  let {
    transform: t,
    containerWidth: r,
    iconWidth: n
  } = e;
  const o = {
    transform: "translate(".concat(r / 2, " 256)")
  }, a = "translate(".concat(t.x * 32, ", ").concat(t.y * 32, ") "), i = "scale(".concat(t.size / 16 * (t.flipX ? -1 : 1), ", ").concat(t.size / 16 * (t.flipY ? -1 : 1), ") "), s = "rotate(".concat(t.rotate, " 0 0)"), l = {
    transform: "".concat(a, " ").concat(i, " ").concat(s)
  }, c = {
    transform: "translate(".concat(n / 2 * -1, " -256)")
  };
  return {
    outer: o,
    inner: l,
    path: c
  };
}
function H4e(e) {
  let {
    transform: t,
    width: r = RO,
    height: n = RO,
    startCentered: o = !1
  } = e, a = "";
  return o && iq ? a += "translate(".concat(t.x / Js - r / 2, "em, ").concat(t.y / Js - n / 2, "em) ") : o ? a += "translate(calc(-50% + ".concat(t.x / Js, "em), calc(-50% + ").concat(t.y / Js, "em)) ") : a += "translate(".concat(t.x / Js, "em, ").concat(t.y / Js, "em) "), a += "scale(".concat(t.size / Js * (t.flipX ? -1 : 1), ", ").concat(t.size / Js * (t.flipY ? -1 : 1), ") "), a += "rotate(".concat(t.rotate, "deg) "), a;
}
var G4e = `:root, :host {
  --fa-font-solid: normal 900 1em/1 "Font Awesome 6 Free";
  --fa-font-regular: normal 400 1em/1 "Font Awesome 6 Free";
  --fa-font-light: normal 300 1em/1 "Font Awesome 6 Pro";
  --fa-font-thin: normal 100 1em/1 "Font Awesome 6 Pro";
  --fa-font-duotone: normal 900 1em/1 "Font Awesome 6 Duotone";
  --fa-font-duotone-regular: normal 400 1em/1 "Font Awesome 6 Duotone";
  --fa-font-duotone-light: normal 300 1em/1 "Font Awesome 6 Duotone";
  --fa-font-duotone-thin: normal 100 1em/1 "Font Awesome 6 Duotone";
  --fa-font-brands: normal 400 1em/1 "Font Awesome 6 Brands";
  --fa-font-sharp-solid: normal 900 1em/1 "Font Awesome 6 Sharp";
  --fa-font-sharp-regular: normal 400 1em/1 "Font Awesome 6 Sharp";
  --fa-font-sharp-light: normal 300 1em/1 "Font Awesome 6 Sharp";
  --fa-font-sharp-thin: normal 100 1em/1 "Font Awesome 6 Sharp";
  --fa-font-sharp-duotone-solid: normal 900 1em/1 "Font Awesome 6 Sharp Duotone";
  --fa-font-sharp-duotone-regular: normal 400 1em/1 "Font Awesome 6 Sharp Duotone";
  --fa-font-sharp-duotone-light: normal 300 1em/1 "Font Awesome 6 Sharp Duotone";
  --fa-font-sharp-duotone-thin: normal 100 1em/1 "Font Awesome 6 Sharp Duotone";
}

svg:not(:root).svg-inline--fa, svg:not(:host).svg-inline--fa {
  overflow: visible;
  box-sizing: content-box;
}

.svg-inline--fa {
  display: var(--fa-display, inline-block);
  height: 1em;
  overflow: visible;
  vertical-align: -0.125em;
}
.svg-inline--fa.fa-2xs {
  vertical-align: 0.1em;
}
.svg-inline--fa.fa-xs {
  vertical-align: 0em;
}
.svg-inline--fa.fa-sm {
  vertical-align: -0.0714285705em;
}
.svg-inline--fa.fa-lg {
  vertical-align: -0.2em;
}
.svg-inline--fa.fa-xl {
  vertical-align: -0.25em;
}
.svg-inline--fa.fa-2xl {
  vertical-align: -0.3125em;
}
.svg-inline--fa.fa-pull-left {
  margin-right: var(--fa-pull-margin, 0.3em);
  width: auto;
}
.svg-inline--fa.fa-pull-right {
  margin-left: var(--fa-pull-margin, 0.3em);
  width: auto;
}
.svg-inline--fa.fa-li {
  width: var(--fa-li-width, 2em);
  top: 0.25em;
}
.svg-inline--fa.fa-fw {
  width: var(--fa-fw-width, 1.25em);
}

.fa-layers svg.svg-inline--fa {
  bottom: 0;
  left: 0;
  margin: auto;
  position: absolute;
  right: 0;
  top: 0;
}

.fa-layers-counter, .fa-layers-text {
  display: inline-block;
  position: absolute;
  text-align: center;
}

.fa-layers {
  display: inline-block;
  height: 1em;
  position: relative;
  text-align: center;
  vertical-align: -0.125em;
  width: 1em;
}
.fa-layers svg.svg-inline--fa {
  transform-origin: center center;
}

.fa-layers-text {
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  transform-origin: center center;
}

.fa-layers-counter {
  background-color: var(--fa-counter-background-color, #ff253a);
  border-radius: var(--fa-counter-border-radius, 1em);
  box-sizing: border-box;
  color: var(--fa-inverse, #fff);
  line-height: var(--fa-counter-line-height, 1);
  max-width: var(--fa-counter-max-width, 5em);
  min-width: var(--fa-counter-min-width, 1.5em);
  overflow: hidden;
  padding: var(--fa-counter-padding, 0.25em 0.5em);
  right: var(--fa-right, 0);
  text-overflow: ellipsis;
  top: var(--fa-top, 0);
  transform: scale(var(--fa-counter-scale, 0.25));
  transform-origin: top right;
}

.fa-layers-bottom-right {
  bottom: var(--fa-bottom, 0);
  right: var(--fa-right, 0);
  top: auto;
  transform: scale(var(--fa-layers-scale, 0.25));
  transform-origin: bottom right;
}

.fa-layers-bottom-left {
  bottom: var(--fa-bottom, 0);
  left: var(--fa-left, 0);
  right: auto;
  top: auto;
  transform: scale(var(--fa-layers-scale, 0.25));
  transform-origin: bottom left;
}

.fa-layers-top-right {
  top: var(--fa-top, 0);
  right: var(--fa-right, 0);
  transform: scale(var(--fa-layers-scale, 0.25));
  transform-origin: top right;
}

.fa-layers-top-left {
  left: var(--fa-left, 0);
  right: auto;
  top: var(--fa-top, 0);
  transform: scale(var(--fa-layers-scale, 0.25));
  transform-origin: top left;
}

.fa-1x {
  font-size: 1em;
}

.fa-2x {
  font-size: 2em;
}

.fa-3x {
  font-size: 3em;
}

.fa-4x {
  font-size: 4em;
}

.fa-5x {
  font-size: 5em;
}

.fa-6x {
  font-size: 6em;
}

.fa-7x {
  font-size: 7em;
}

.fa-8x {
  font-size: 8em;
}

.fa-9x {
  font-size: 9em;
}

.fa-10x {
  font-size: 10em;
}

.fa-2xs {
  font-size: 0.625em;
  line-height: 0.1em;
  vertical-align: 0.225em;
}

.fa-xs {
  font-size: 0.75em;
  line-height: 0.0833333337em;
  vertical-align: 0.125em;
}

.fa-sm {
  font-size: 0.875em;
  line-height: 0.0714285718em;
  vertical-align: 0.0535714295em;
}

.fa-lg {
  font-size: 1.25em;
  line-height: 0.05em;
  vertical-align: -0.075em;
}

.fa-xl {
  font-size: 1.5em;
  line-height: 0.0416666682em;
  vertical-align: -0.125em;
}

.fa-2xl {
  font-size: 2em;
  line-height: 0.03125em;
  vertical-align: -0.1875em;
}

.fa-fw {
  text-align: center;
  width: 1.25em;
}

.fa-ul {
  list-style-type: none;
  margin-left: var(--fa-li-margin, 2.5em);
  padding-left: 0;
}
.fa-ul > li {
  position: relative;
}

.fa-li {
  left: calc(-1 * var(--fa-li-width, 2em));
  position: absolute;
  text-align: center;
  width: var(--fa-li-width, 2em);
  line-height: inherit;
}

.fa-border {
  border-color: var(--fa-border-color, #eee);
  border-radius: var(--fa-border-radius, 0.1em);
  border-style: var(--fa-border-style, solid);
  border-width: var(--fa-border-width, 0.08em);
  padding: var(--fa-border-padding, 0.2em 0.25em 0.15em);
}

.fa-pull-left {
  float: left;
  margin-right: var(--fa-pull-margin, 0.3em);
}

.fa-pull-right {
  float: right;
  margin-left: var(--fa-pull-margin, 0.3em);
}

.fa-beat {
  animation-name: fa-beat;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, ease-in-out);
}

.fa-bounce {
  animation-name: fa-bounce;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.28, 0.84, 0.42, 1));
}

.fa-fade {
  animation-name: fa-fade;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));
}

.fa-beat-fade {
  animation-name: fa-beat-fade;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));
}

.fa-flip {
  animation-name: fa-flip;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, ease-in-out);
}

.fa-shake {
  animation-name: fa-shake;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, linear);
}

.fa-spin {
  animation-name: fa-spin;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 2s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, linear);
}

.fa-spin-reverse {
  --fa-animation-direction: reverse;
}

.fa-pulse,
.fa-spin-pulse {
  animation-name: fa-spin;
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, steps(8));
}

@media (prefers-reduced-motion: reduce) {
  .fa-beat,
.fa-bounce,
.fa-fade,
.fa-beat-fade,
.fa-flip,
.fa-pulse,
.fa-shake,
.fa-spin,
.fa-spin-pulse {
    animation-delay: -1ms;
    animation-duration: 1ms;
    animation-iteration-count: 1;
    transition-delay: 0s;
    transition-duration: 0s;
  }
}
@keyframes fa-beat {
  0%, 90% {
    transform: scale(1);
  }
  45% {
    transform: scale(var(--fa-beat-scale, 1.25));
  }
}
@keyframes fa-bounce {
  0% {
    transform: scale(1, 1) translateY(0);
  }
  10% {
    transform: scale(var(--fa-bounce-start-scale-x, 1.1), var(--fa-bounce-start-scale-y, 0.9)) translateY(0);
  }
  30% {
    transform: scale(var(--fa-bounce-jump-scale-x, 0.9), var(--fa-bounce-jump-scale-y, 1.1)) translateY(var(--fa-bounce-height, -0.5em));
  }
  50% {
    transform: scale(var(--fa-bounce-land-scale-x, 1.05), var(--fa-bounce-land-scale-y, 0.95)) translateY(0);
  }
  57% {
    transform: scale(1, 1) translateY(var(--fa-bounce-rebound, -0.125em));
  }
  64% {
    transform: scale(1, 1) translateY(0);
  }
  100% {
    transform: scale(1, 1) translateY(0);
  }
}
@keyframes fa-fade {
  50% {
    opacity: var(--fa-fade-opacity, 0.4);
  }
}
@keyframes fa-beat-fade {
  0%, 100% {
    opacity: var(--fa-beat-fade-opacity, 0.4);
    transform: scale(1);
  }
  50% {
    opacity: 1;
    transform: scale(var(--fa-beat-fade-scale, 1.125));
  }
}
@keyframes fa-flip {
  50% {
    transform: rotate3d(var(--fa-flip-x, 0), var(--fa-flip-y, 1), var(--fa-flip-z, 0), var(--fa-flip-angle, -180deg));
  }
}
@keyframes fa-shake {
  0% {
    transform: rotate(-15deg);
  }
  4% {
    transform: rotate(15deg);
  }
  8%, 24% {
    transform: rotate(-18deg);
  }
  12%, 28% {
    transform: rotate(18deg);
  }
  16% {
    transform: rotate(-22deg);
  }
  20% {
    transform: rotate(22deg);
  }
  32% {
    transform: rotate(-12deg);
  }
  36% {
    transform: rotate(12deg);
  }
  40%, 100% {
    transform: rotate(0deg);
  }
}
@keyframes fa-spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
.fa-rotate-90 {
  transform: rotate(90deg);
}

.fa-rotate-180 {
  transform: rotate(180deg);
}

.fa-rotate-270 {
  transform: rotate(270deg);
}

.fa-flip-horizontal {
  transform: scale(-1, 1);
}

.fa-flip-vertical {
  transform: scale(1, -1);
}

.fa-flip-both,
.fa-flip-horizontal.fa-flip-vertical {
  transform: scale(-1, -1);
}

.fa-rotate-by {
  transform: rotate(var(--fa-rotate-angle, 0));
}

.fa-stack {
  display: inline-block;
  vertical-align: middle;
  height: 2em;
  position: relative;
  width: 2.5em;
}

.fa-stack-1x,
.fa-stack-2x {
  bottom: 0;
  left: 0;
  margin: auto;
  position: absolute;
  right: 0;
  top: 0;
  z-index: var(--fa-stack-z-index, auto);
}

.svg-inline--fa.fa-stack-1x {
  height: 1em;
  width: 1.25em;
}
.svg-inline--fa.fa-stack-2x {
  height: 2em;
  width: 2.5em;
}

.fa-inverse {
  color: var(--fa-inverse, #fff);
}

.sr-only,
.fa-sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.sr-only-focusable:not(:focus),
.fa-sr-only-focusable:not(:focus) {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.svg-inline--fa .fa-primary {
  fill: var(--fa-primary-color, currentColor);
  opacity: var(--fa-primary-opacity, 1);
}

.svg-inline--fa .fa-secondary {
  fill: var(--fa-secondary-color, currentColor);
  opacity: var(--fa-secondary-opacity, 0.4);
}

.svg-inline--fa.fa-swap-opacity .fa-primary {
  opacity: var(--fa-secondary-opacity, 0.4);
}

.svg-inline--fa.fa-swap-opacity .fa-secondary {
  opacity: var(--fa-primary-opacity, 1);
}

.svg-inline--fa mask .fa-primary,
.svg-inline--fa mask .fa-secondary {
  fill: black;
}`;
function yq() {
  const e = fq, t = dq, r = Ge.cssPrefix, n = Ge.replacementClass;
  let o = G4e;
  if (r !== e || n !== t) {
    const a = new RegExp("\\.".concat(e, "\\-"), "g"), i = new RegExp("\\--".concat(e, "\\-"), "g"), s = new RegExp("\\.".concat(t), "g");
    o = o.replace(a, ".".concat(r, "-")).replace(i, "--".concat(r, "-")).replace(s, ".".concat(n));
  }
  return o;
}
let AT = !1;
function nk() {
  Ge.autoAddCss && !AT && (V4e(yq()), AT = !0);
}
var q4e = {
  mixout() {
    return {
      dom: {
        css: yq,
        insertCss: nk
      }
    };
  },
  hooks() {
    return {
      beforeDOMElementCreation() {
        nk();
      },
      beforeI2svg() {
        nk();
      }
    };
  }
};
const Si = lc || {};
Si[Ei] || (Si[Ei] = {});
Si[Ei].styles || (Si[Ei].styles = {});
Si[Ei].hooks || (Si[Ei].hooks = {});
Si[Ei].shims || (Si[Ei].shims = []);
var wa = Si[Ei];
const vq = [], xq = function() {
  Ur.removeEventListener("DOMContentLoaded", xq), i1 = 1, vq.map((e) => e());
};
let i1 = !1;
Yi && (i1 = (Ur.documentElement.doScroll ? /^loaded|^c/ : /^loaded|^i|^c/).test(Ur.readyState), i1 || Ur.addEventListener("DOMContentLoaded", xq));
function B4e(e) {
  Yi && (i1 ? setTimeout(e, 0) : vq.push(e));
}
function db(e) {
  const {
    tag: t,
    attributes: r = {},
    children: n = []
  } = e;
  return typeof e == "string" ? bq(e) : "<".concat(t, " ").concat(U4e(r), ">").concat(n.map(db).join(""), "</").concat(t, ">");
}
function _T(e, t, r) {
  if (e && e[t] && e[t][r])
    return {
      prefix: t,
      iconName: r,
      icon: e[t][r]
    };
}
var ok = function(e, t, r, n) {
  var o = Object.keys(e), a = o.length, i = t, s, l, c;
  for (r === void 0 ? (s = 1, c = e[o[0]]) : (s = 0, c = r); s < a; s++)
    l = o[s], c = i(c, e[l], l, e);
  return c;
};
function X4e(e) {
  const t = [];
  let r = 0;
  const n = e.length;
  for (; r < n; ) {
    const o = e.charCodeAt(r++);
    if (o >= 55296 && o <= 56319 && r < n) {
      const a = e.charCodeAt(r++);
      (a & 64512) == 56320 ? t.push(((o & 1023) << 10) + (a & 1023) + 65536) : (t.push(o), r--);
    } else
      t.push(o);
  }
  return t;
}
function wq(e) {
  const t = X4e(e);
  return t.length === 1 ? t[0].toString(16) : null;
}
function K4e(e, t) {
  const r = e.length;
  let n = e.charCodeAt(t), o;
  return n >= 55296 && n <= 56319 && r > t + 1 && (o = e.charCodeAt(t + 1), o >= 56320 && o <= 57343) ? (n - 55296) * 1024 + o - 56320 + 65536 : n;
}
function NT(e) {
  return Object.keys(e).reduce((t, r) => {
    const n = e[r];
    return n.icon ? t[n.iconName] = n.icon : t[r] = n, t;
  }, {});
}
function VO(e, t) {
  let r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
  const {
    skipHooks: n = !1
  } = r, o = NT(t);
  typeof wa.hooks.addPack == "function" && !n ? wa.hooks.addPack(e, NT(t)) : wa.styles[e] = xe(xe({}, wa.styles[e] || {}), o), e === "fas" && VO("fa", t);
}
const {
  styles: Ih,
  shims: J4e
} = wa, kq = Object.keys($C), Q4e = kq.reduce((e, t) => (e[t] = Object.keys($C[t]), e), {});
let SC = null, $q = {}, Oq = {}, Eq = {}, Sq = {}, Pq = {};
function Z4e(e) {
  return ~z4e.indexOf(e);
}
function eEe(e, t) {
  const r = t.split("-"), n = r[0], o = r.slice(1).join("-");
  return n === e && o !== "" && !Z4e(o) ? o : null;
}
const Cq = () => {
  const e = (n) => ok(Ih, (o, a, i) => (o[i] = ok(a, n, {}), o), {});
  $q = e((n, o, a) => (o[3] && (n[o[3]] = a), o[2] && o[2].filter((i) => typeof i == "number").forEach((i) => {
    n[i.toString(16)] = a;
  }), n)), Oq = e((n, o, a) => (n[a] = a, o[2] && o[2].filter((i) => typeof i == "string").forEach((i) => {
    n[i] = a;
  }), n)), Pq = e((n, o, a) => {
    const i = o[2];
    return n[a] = a, i.forEach((s) => {
      n[s] = a;
    }), n;
  });
  const t = "far" in Ih || Ge.autoFetchSvg, r = ok(J4e, (n, o) => {
    const a = o[0];
    let i = o[1];
    const s = o[2];
    return i === "far" && !t && (i = "fas"), typeof a == "string" && (n.names[a] = {
      prefix: i,
      iconName: s
    }), typeof a == "number" && (n.unicodes[a.toString(16)] = {
      prefix: i,
      iconName: s
    }), n;
  }, {
    names: {},
    unicodes: {}
  });
  Eq = r.names, Sq = r.unicodes, SC = U0(Ge.styleDefault, {
    family: Ge.familyDefault
  });
};
L4e((e) => {
  SC = U0(e.styleDefault, {
    family: Ge.familyDefault
  });
});
Cq();
function PC(e, t) {
  return ($q[e] || {})[t];
}
function tEe(e, t) {
  return (Oq[e] || {})[t];
}
function Uc(e, t) {
  return (Pq[e] || {})[t];
}
function Aq(e) {
  return Eq[e] || {
    prefix: null,
    iconName: null
  };
}
function rEe(e) {
  const t = Sq[e], r = PC("fas", e);
  return t || (r ? {
    prefix: "fas",
    iconName: r
  } : null) || {
    prefix: null,
    iconName: null
  };
}
function cc() {
  return SC;
}
const _q = () => ({
  prefix: null,
  iconName: null,
  rest: []
});
function nEe(e) {
  let t = yn;
  const r = kq.reduce((n, o) => (n[o] = "".concat(Ge.cssPrefix, "-").concat(o), n), {});
  return cq.forEach((n) => {
    (e.includes(r[n]) || e.some((o) => Q4e[n].includes(o))) && (t = n);
  }), t;
}
function U0(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  const {
    family: r = yn
  } = t, n = j4e[r][e];
  if (r === V0 && !e)
    return "fad";
  const o = CT[r][e] || CT[r][n], a = e in wa.styles ? e : null;
  return o || a || null;
}
function oEe(e) {
  let t = [], r = null;
  return e.forEach((n) => {
    const o = eEe(Ge.cssPrefix, n);
    o ? r = o : n && t.push(n);
  }), {
    iconName: r,
    rest: t
  };
}
function jT(e) {
  return e.sort().filter((t, r, n) => n.indexOf(t) === r);
}
function Y0(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  const {
    skipLookups: r = !1
  } = t;
  let n = null;
  const o = MO.concat(x4e), a = jT(e.filter((f) => o.includes(f))), i = jT(e.filter((f) => !MO.includes(f))), s = a.filter((f) => (n = f, !lq.includes(f))), [l = null] = s, c = nEe(a), u = xe(xe({}, oEe(i)), {}, {
    prefix: U0(l, {
      family: c
    })
  });
  return xe(xe(xe({}, u), lEe({
    values: e,
    family: c,
    styles: Ih,
    config: Ge,
    canonical: u,
    givenPrefix: n
  })), aEe(r, n, u));
}
function aEe(e, t, r) {
  let {
    prefix: n,
    iconName: o
  } = r;
  if (e || !n || !o)
    return {
      prefix: n,
      iconName: o
    };
  const a = t === "fa" ? Aq(o) : {}, i = Uc(n, o);
  return o = a.iconName || i || o, n = a.prefix || n, n === "far" && !Ih.far && Ih.fas && !Ge.autoFetchSvg && (n = "fas"), {
    prefix: n,
    iconName: o
  };
}
const iEe = cq.filter((e) => e !== yn || e !== V0), sEe = Object.keys(TO).filter((e) => e !== yn).map((e) => Object.keys(TO[e])).flat();
function lEe(e) {
  const {
    values: t,
    family: r,
    canonical: n,
    givenPrefix: o = "",
    styles: a = {},
    config: i = {}
  } = e, s = r === V0, l = t.includes("fa-duotone") || t.includes("fad"), c = i.familyDefault === "duotone", u = n.prefix === "fad" || n.prefix === "fa-duotone";
  if (!s && (l || c || u) && (n.prefix = "fad"), (t.includes("fa-brands") || t.includes("fab")) && (n.prefix = "fab"), !n.prefix && iEe.includes(r) && (Object.keys(a).find((f) => sEe.includes(f)) || i.autoFetchSvg)) {
    const f = d4e.get(r).defaultShortPrefixId;
    n.prefix = f, n.iconName = Uc(n.prefix, n.iconName) || n.iconName;
  }
  return (n.prefix === "fa" || o === "fa") && (n.prefix = cc() || "fas"), n;
}
let cEe = class {
  constructor() {
    this.definitions = {};
  }
  add() {
    for (var t = arguments.length, r = new Array(t), n = 0; n < t; n++)
      r[n] = arguments[n];
    const o = r.reduce(this._pullDefinitions, {});
    Object.keys(o).forEach((a) => {
      this.definitions[a] = xe(xe({}, this.definitions[a] || {}), o[a]), VO(a, o[a]);
      const i = $C[yn][a];
      i && VO(i, o[a]), Cq();
    });
  }
  reset() {
    this.definitions = {};
  }
  _pullDefinitions(t, r) {
    const n = r.prefix && r.iconName && r.icon ? {
      0: r
    } : r;
    return Object.keys(n).map((o) => {
      const {
        prefix: a,
        iconName: i,
        icon: s
      } = n[o], l = s[2];
      t[a] || (t[a] = {}), l.length > 0 && l.forEach((c) => {
        typeof c == "string" && (t[a][c] = s);
      }), t[a][i] = s;
    }), t;
  }
}, IT = [], gf = {};
const qf = {}, uEe = Object.keys(qf);
function fEe(e, t) {
  let {
    mixoutsTo: r
  } = t;
  return IT = e, gf = {}, Object.keys(qf).forEach((n) => {
    uEe.indexOf(n) === -1 && delete qf[n];
  }), IT.forEach((n) => {
    const o = n.mixout ? n.mixout() : {};
    if (Object.keys(o).forEach((a) => {
      typeof o[a] == "function" && (r[a] = o[a]), typeof o[a] == "object" && Object.keys(o[a]).forEach((i) => {
        r[a] || (r[a] = {}), r[a][i] = o[a][i];
      });
    }), n.hooks) {
      const a = n.hooks();
      Object.keys(a).forEach((i) => {
        gf[i] || (gf[i] = []), gf[i].push(a[i]);
      });
    }
    n.provides && n.provides(qf);
  }), r;
}
function WO(e, t) {
  for (var r = arguments.length, n = new Array(r > 2 ? r - 2 : 0), o = 2; o < r; o++)
    n[o - 2] = arguments[o];
  return (gf[e] || []).forEach((a) => {
    t = a.apply(null, [t, ...n]);
  }), t;
}
function wu(e) {
  for (var t = arguments.length, r = new Array(t > 1 ? t - 1 : 0), n = 1; n < t; n++)
    r[n - 1] = arguments[n];
  (gf[e] || []).forEach((o) => {
    o.apply(null, r);
  });
}
function uc() {
  const e = arguments[0], t = Array.prototype.slice.call(arguments, 1);
  return qf[e] ? qf[e].apply(null, t) : void 0;
}
function UO(e) {
  e.prefix === "fa" && (e.prefix = "fas");
  let {
    iconName: t
  } = e;
  const r = e.prefix || cc();
  if (t)
    return t = Uc(r, t) || t, _T(Nq.definitions, r, t) || _T(wa.styles, r, t);
}
const Nq = new cEe(), dEe = () => {
  Ge.autoReplaceSvg = !1, Ge.observeMutations = !1, wu("noAuto");
}, pEe = {
  i2svg: function() {
    let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    return Yi ? (wu("beforeI2svg", e), uc("pseudoElements2svg", e), uc("i2svg", e)) : Promise.reject(new Error("Operation requires a DOM of some kind."));
  },
  watch: function() {
    let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    const {
      autoReplaceSvgRoot: t
    } = e;
    Ge.autoReplaceSvg === !1 && (Ge.autoReplaceSvg = !0), Ge.observeMutations = !0, B4e(() => {
      gEe({
        autoReplaceSvgRoot: t
      }), wu("watch", e);
    });
  }
}, mEe = {
  icon: (e) => {
    if (e === null)
      return null;
    if (typeof e == "object" && e.prefix && e.iconName)
      return {
        prefix: e.prefix,
        iconName: Uc(e.prefix, e.iconName) || e.iconName
      };
    if (Array.isArray(e) && e.length === 2) {
      const t = e[1].indexOf("fa-") === 0 ? e[1].slice(3) : e[1], r = U0(e[0]);
      return {
        prefix: r,
        iconName: Uc(r, t) || t
      };
    }
    if (typeof e == "string" && (e.indexOf("".concat(Ge.cssPrefix, "-")) > -1 || e.match(I4e))) {
      const t = Y0(e.split(" "), {
        skipLookups: !0
      });
      return {
        prefix: t.prefix || cc(),
        iconName: Uc(t.prefix, t.iconName) || t.iconName
      };
    }
    if (typeof e == "string") {
      const t = cc();
      return {
        prefix: t,
        iconName: Uc(t, e) || e
      };
    }
  }
}, ro = {
  noAuto: dEe,
  config: Ge,
  dom: pEe,
  parse: mEe,
  library: Nq,
  findIconDefinition: UO,
  toHtml: db
}, gEe = function() {
  let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  const {
    autoReplaceSvgRoot: t = Ur
  } = e;
  (Object.keys(wa.styles).length > 0 || Ge.autoFetchSvg) && Yi && Ge.autoReplaceSvg && ro.dom.i2svg({
    node: t
  });
};
function H0(e, t) {
  return Object.defineProperty(e, "abstract", {
    get: t
  }), Object.defineProperty(e, "html", {
    get: function() {
      return e.abstract.map((r) => db(r));
    }
  }), Object.defineProperty(e, "node", {
    get: function() {
      if (!Yi) return;
      const r = Ur.createElement("div");
      return r.innerHTML = e.html, r.children;
    }
  }), e;
}
function hEe(e) {
  let {
    children: t,
    main: r,
    mask: n,
    attributes: o,
    styles: a,
    transform: i
  } = e;
  if (EC(i) && r.found && !n.found) {
    const {
      width: s,
      height: l
    } = r, c = {
      x: s / l / 2,
      y: 0.5
    };
    o.style = W0(xe(xe({}, a), {}, {
      "transform-origin": "".concat(c.x + i.x / 16, "em ").concat(c.y + i.y / 16, "em")
    }));
  }
  return [{
    tag: "svg",
    attributes: o,
    children: t
  }];
}
function bEe(e) {
  let {
    prefix: t,
    iconName: r,
    children: n,
    attributes: o,
    symbol: a
  } = e;
  const i = a === !0 ? "".concat(t, "-").concat(Ge.cssPrefix, "-").concat(r) : a;
  return [{
    tag: "svg",
    attributes: {
      style: "display: none;"
    },
    children: [{
      tag: "symbol",
      attributes: xe(xe({}, o), {}, {
        id: i
      }),
      children: n
    }]
  }];
}
function CC(e) {
  const {
    icons: {
      main: t,
      mask: r
    },
    prefix: n,
    iconName: o,
    transform: a,
    symbol: i,
    title: s,
    maskId: l,
    titleId: c,
    extra: u,
    watchable: f = !1
  } = e, {
    width: p,
    height: v
  } = r.found ? r : t, x = b4e.includes(n), b = [Ge.replacementClass, o ? "".concat(Ge.cssPrefix, "-").concat(o) : ""].filter((h) => u.classes.indexOf(h) === -1).filter((h) => h !== "" || !!h).concat(u.classes).join(" ");
  let m = {
    children: [],
    attributes: xe(xe({}, u.attributes), {}, {
      "data-prefix": n,
      "data-icon": o,
      class: b,
      role: u.attributes.role || "img",
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 ".concat(p, " ").concat(v)
    })
  };
  const w = x && !~u.classes.indexOf("fa-fw") ? {
    width: "".concat(p / v * 16 * 0.0625, "em")
  } : {};
  f && (m.attributes[xu] = ""), s && (m.children.push({
    tag: "title",
    attributes: {
      id: m.attributes["aria-labelledby"] || "title-".concat(c || jh())
    },
    children: [s]
  }), delete m.attributes.title);
  const $ = xe(xe({}, m), {}, {
    prefix: n,
    iconName: o,
    main: t,
    mask: r,
    maskId: l,
    transform: a,
    symbol: i,
    styles: xe(xe({}, w), u.styles)
  }), {
    children: E,
    attributes: S
  } = r.found && t.found ? uc("generateAbstractMask", $) || {
    children: [],
    attributes: {}
  } : uc("generateAbstractIcon", $) || {
    children: [],
    attributes: {}
  };
  return $.children = E, $.attributes = S, i ? bEe($) : hEe($);
}
function TT(e) {
  const {
    content: t,
    width: r,
    height: n,
    transform: o,
    title: a,
    extra: i,
    watchable: s = !1
  } = e, l = xe(xe(xe({}, i.attributes), a ? {
    title: a
  } : {}), {}, {
    class: i.classes.join(" ")
  });
  s && (l[xu] = "");
  const c = xe({}, i.styles);
  EC(o) && (c.transform = H4e({
    transform: o,
    startCentered: !0,
    width: r,
    height: n
  }), c["-webkit-transform"] = c.transform);
  const u = W0(c);
  u.length > 0 && (l.style = u);
  const f = [];
  return f.push({
    tag: "span",
    attributes: l,
    children: [t]
  }), a && f.push({
    tag: "span",
    attributes: {
      class: "sr-only"
    },
    children: [a]
  }), f;
}
function yEe(e) {
  const {
    content: t,
    title: r,
    extra: n
  } = e, o = xe(xe(xe({}, n.attributes), r ? {
    title: r
  } : {}), {}, {
    class: n.classes.join(" ")
  }), a = W0(n.styles);
  a.length > 0 && (o.style = a);
  const i = [];
  return i.push({
    tag: "span",
    attributes: o,
    children: [t]
  }), r && i.push({
    tag: "span",
    attributes: {
      class: "sr-only"
    },
    children: [r]
  }), i;
}
const {
  styles: ak
} = wa;
function YO(e) {
  const t = e[0], r = e[1], [n] = e.slice(4);
  let o = null;
  return Array.isArray(n) ? o = {
    tag: "g",
    attributes: {
      class: "".concat(Ge.cssPrefix, "-").concat(rk.GROUP)
    },
    children: [{
      tag: "path",
      attributes: {
        class: "".concat(Ge.cssPrefix, "-").concat(rk.SECONDARY),
        fill: "currentColor",
        d: n[0]
      }
    }, {
      tag: "path",
      attributes: {
        class: "".concat(Ge.cssPrefix, "-").concat(rk.PRIMARY),
        fill: "currentColor",
        d: n[1]
      }
    }]
  } : o = {
    tag: "path",
    attributes: {
      fill: "currentColor",
      d: n
    }
  }, {
    found: !0,
    width: t,
    height: r,
    icon: o
  };
}
const vEe = {
  found: !1,
  width: 512,
  height: 512
};
function xEe(e, t) {
  !pq && !Ge.showMissingIcons && e && console.error('Icon with name "'.concat(e, '" and prefix "').concat(t, '" is missing.'));
}
function HO(e, t) {
  let r = t;
  return t === "fa" && Ge.styleDefault !== null && (t = cc()), new Promise((n, o) => {
    if (r === "fa") {
      const a = Aq(e) || {};
      e = a.iconName || e, t = a.prefix || t;
    }
    if (e && t && ak[t] && ak[t][e]) {
      const a = ak[t][e];
      return n(YO(a));
    }
    xEe(e, t), n(xe(xe({}, vEe), {}, {
      icon: Ge.showMissingIcons && e ? uc("missingIconAbstract") || {} : {}
    }));
  });
}
const MT = () => {
}, GO = Ge.measurePerformance && py && py.mark && py.measure ? py : {
  mark: MT,
  measure: MT
}, ag = 'FA "6.7.2"', wEe = (e) => (GO.mark("".concat(ag, " ").concat(e, " begins")), () => jq(e)), jq = (e) => {
  GO.mark("".concat(ag, " ").concat(e, " ends")), GO.measure("".concat(ag, " ").concat(e), "".concat(ag, " ").concat(e, " begins"), "".concat(ag, " ").concat(e, " ends"));
};
var AC = {
  begin: wEe,
  end: jq
};
const uv = () => {
};
function RT(e) {
  return typeof (e.getAttribute ? e.getAttribute(xu) : null) == "string";
}
function kEe(e) {
  const t = e.getAttribute ? e.getAttribute(wC) : null, r = e.getAttribute ? e.getAttribute(kC) : null;
  return t && r;
}
function $Ee(e) {
  return e && e.classList && e.classList.contains && e.classList.contains(Ge.replacementClass);
}
function OEe() {
  return Ge.autoReplaceSvg === !0 ? fv.replace : fv[Ge.autoReplaceSvg] || fv.replace;
}
function EEe(e) {
  return Ur.createElementNS("http://www.w3.org/2000/svg", e);
}
function SEe(e) {
  return Ur.createElement(e);
}
function Iq(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  const {
    ceFn: r = e.tag === "svg" ? EEe : SEe
  } = t;
  if (typeof e == "string")
    return Ur.createTextNode(e);
  const n = r(e.tag);
  return Object.keys(e.attributes || []).forEach(function(o) {
    n.setAttribute(o, e.attributes[o]);
  }), (e.children || []).forEach(function(o) {
    n.appendChild(Iq(o, {
      ceFn: r
    }));
  }), n;
}
function PEe(e) {
  let t = " ".concat(e.outerHTML, " ");
  return t = "".concat(t, "Font Awesome fontawesome.com "), t;
}
const fv = {
  replace: function(e) {
    const t = e[0];
    if (t.parentNode)
      if (e[1].forEach((r) => {
        t.parentNode.insertBefore(Iq(r), t);
      }), t.getAttribute(xu) === null && Ge.keepOriginalSource) {
        let r = Ur.createComment(PEe(t));
        t.parentNode.replaceChild(r, t);
      } else
        t.remove();
  },
  nest: function(e) {
    const t = e[0], r = e[1];
    if (~OC(t).indexOf(Ge.replacementClass))
      return fv.replace(e);
    const n = new RegExp("".concat(Ge.cssPrefix, "-.*"));
    if (delete r[0].attributes.id, r[0].attributes.class) {
      const a = r[0].attributes.class.split(" ").reduce((i, s) => (s === Ge.replacementClass || s.match(n) ? i.toSvg.push(s) : i.toNode.push(s), i), {
        toNode: [],
        toSvg: []
      });
      r[0].attributes.class = a.toSvg.join(" "), a.toNode.length === 0 ? t.removeAttribute("class") : t.setAttribute("class", a.toNode.join(" "));
    }
    const o = r.map((a) => db(a)).join(`
`);
    t.setAttribute(xu, ""), t.innerHTML = o;
  }
};
function zT(e) {
  e();
}
function Tq(e, t) {
  const r = typeof t == "function" ? t : uv;
  if (e.length === 0)
    r();
  else {
    let n = zT;
    Ge.mutateApproach === _4e && (n = lc.requestAnimationFrame || zT), n(() => {
      const o = OEe(), a = AC.begin("mutate");
      e.map(o), a(), r();
    });
  }
}
let _C = !1;
function Mq() {
  _C = !0;
}
function qO() {
  _C = !1;
}
let s1 = null;
function FT(e) {
  if (!OT || !Ge.observeMutations)
    return;
  const {
    treeCallback: t = uv,
    nodeCallback: r = uv,
    pseudoElementsCallback: n = uv,
    observeMutationsRoot: o = Ur
  } = e;
  s1 = new OT((a) => {
    if (_C) return;
    const i = cc();
    Gd(a).forEach((s) => {
      if (s.type === "childList" && s.addedNodes.length > 0 && !RT(s.addedNodes[0]) && (Ge.searchPseudoElements && n(s.target), t(s.target)), s.type === "attributes" && s.target.parentNode && Ge.searchPseudoElements && n(s.target.parentNode), s.type === "attributes" && RT(s.target) && ~R4e.indexOf(s.attributeName))
        if (s.attributeName === "class" && kEe(s.target)) {
          const {
            prefix: l,
            iconName: c
          } = Y0(OC(s.target));
          s.target.setAttribute(wC, l || i), c && s.target.setAttribute(kC, c);
        } else $Ee(s.target) && r(s.target);
    });
  }), Yi && s1.observe(o, {
    childList: !0,
    attributes: !0,
    characterData: !0,
    subtree: !0
  });
}
function CEe() {
  s1 && s1.disconnect();
}
function AEe(e) {
  const t = e.getAttribute("style");
  let r = [];
  return t && (r = t.split(";").reduce((n, o) => {
    const a = o.split(":"), i = a[0], s = a.slice(1);
    return i && s.length > 0 && (n[i] = s.join(":").trim()), n;
  }, {})), r;
}
function _Ee(e) {
  const t = e.getAttribute("data-prefix"), r = e.getAttribute("data-icon"), n = e.innerText !== void 0 ? e.innerText.trim() : "";
  let o = Y0(OC(e));
  return o.prefix || (o.prefix = cc()), t && r && (o.prefix = t, o.iconName = r), o.iconName && o.prefix || (o.prefix && n.length > 0 && (o.iconName = tEe(o.prefix, e.innerText) || PC(o.prefix, wq(e.innerText))), !o.iconName && Ge.autoFetchSvg && e.firstChild && e.firstChild.nodeType === Node.TEXT_NODE && (o.iconName = e.firstChild.data)), o;
}
function NEe(e) {
  const t = Gd(e.attributes).reduce((o, a) => (o.name !== "class" && o.name !== "style" && (o[a.name] = a.value), o), {}), r = e.getAttribute("title"), n = e.getAttribute("data-fa-title-id");
  return Ge.autoA11y && (r ? t["aria-labelledby"] = "".concat(Ge.replacementClass, "-title-").concat(n || jh()) : (t["aria-hidden"] = "true", t.focusable = "false")), t;
}
function jEe() {
  return {
    iconName: null,
    title: null,
    titleId: null,
    prefix: null,
    transform: xa,
    symbol: !1,
    mask: {
      iconName: null,
      prefix: null,
      rest: []
    },
    maskId: null,
    extra: {
      classes: [],
      styles: {},
      attributes: {}
    }
  };
}
function DT(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {
    styleParser: !0
  };
  const {
    iconName: r,
    prefix: n,
    rest: o
  } = _Ee(e), a = NEe(e), i = WO("parseNodeAttributes", {}, e);
  let s = t.styleParser ? AEe(e) : [];
  return xe({
    iconName: r,
    title: e.getAttribute("title"),
    titleId: e.getAttribute("data-fa-title-id"),
    prefix: n,
    transform: xa,
    mask: {
      iconName: null,
      prefix: null,
      rest: []
    },
    maskId: null,
    symbol: !1,
    extra: {
      classes: o,
      styles: s,
      attributes: a
    }
  }, i);
}
const {
  styles: IEe
} = wa;
function Rq(e) {
  const t = Ge.autoReplaceSvg === "nest" ? DT(e, {
    styleParser: !1
  }) : DT(e);
  return ~t.extra.classes.indexOf(gq) ? uc("generateLayersText", e, t) : uc("generateSvgReplacementMutation", e, t);
}
function TEe() {
  return [...m4e, ...MO];
}
function LT(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
  if (!Yi) return Promise.resolve();
  const r = Ur.documentElement.classList, n = (u) => r.add("".concat(PT, "-").concat(u)), o = (u) => r.remove("".concat(PT, "-").concat(u)), a = Ge.autoFetchSvg ? TEe() : lq.concat(Object.keys(IEe));
  a.includes("fa") || a.push("fa");
  const i = [".".concat(gq, ":not([").concat(xu, "])")].concat(a.map((u) => ".".concat(u, ":not([").concat(xu, "])"))).join(", ");
  if (i.length === 0)
    return Promise.resolve();
  let s = [];
  try {
    s = Gd(e.querySelectorAll(i));
  } catch {
  }
  if (s.length > 0)
    n("pending"), o("complete");
  else
    return Promise.resolve();
  const l = AC.begin("onTree"), c = s.reduce((u, f) => {
    try {
      const p = Rq(f);
      p && u.push(p);
    } catch (p) {
      pq || p.name === "MissingIcon" && console.error(p);
    }
    return u;
  }, []);
  return new Promise((u, f) => {
    Promise.all(c).then((p) => {
      Tq(p, () => {
        n("active"), n("complete"), o("pending"), typeof t == "function" && t(), l(), u();
      });
    }).catch((p) => {
      l(), f(p);
    });
  });
}
function MEe(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
  Rq(e).then((r) => {
    r && Tq([r], t);
  });
}
function REe(e) {
  return function(t) {
    let r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    const n = (t || {}).icon ? t : UO(t || {});
    let {
      mask: o
    } = r;
    return o && (o = (o || {}).icon ? o : UO(o || {})), e(n, xe(xe({}, r), {}, {
      mask: o
    }));
  };
}
const zEe = function(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  const {
    transform: r = xa,
    symbol: n = !1,
    mask: o = null,
    maskId: a = null,
    title: i = null,
    titleId: s = null,
    classes: l = [],
    attributes: c = {},
    styles: u = {}
  } = t;
  if (!e) return;
  const {
    prefix: f,
    iconName: p,
    icon: v
  } = e;
  return H0(xe({
    type: "icon"
  }, e), () => (wu("beforeDOMElementCreation", {
    iconDefinition: e,
    params: t
  }), Ge.autoA11y && (i ? c["aria-labelledby"] = "".concat(Ge.replacementClass, "-title-").concat(s || jh()) : (c["aria-hidden"] = "true", c.focusable = "false")), CC({
    icons: {
      main: YO(v),
      mask: o ? YO(o.icon) : {
        found: !1,
        width: null,
        height: null,
        icon: {}
      }
    },
    prefix: f,
    iconName: p,
    transform: xe(xe({}, xa), r),
    symbol: n,
    title: i,
    maskId: a,
    titleId: s,
    extra: {
      attributes: c,
      styles: u,
      classes: l
    }
  })));
};
var FEe = {
  mixout() {
    return {
      icon: REe(zEe)
    };
  },
  hooks() {
    return {
      mutationObserverCallbacks(e) {
        return e.treeCallback = LT, e.nodeCallback = MEe, e;
      }
    };
  },
  provides(e) {
    e.i2svg = function(t) {
      const {
        node: r = Ur,
        callback: n = () => {
        }
      } = t;
      return LT(r, n);
    }, e.generateSvgReplacementMutation = function(t, r) {
      const {
        iconName: n,
        title: o,
        titleId: a,
        prefix: i,
        transform: s,
        symbol: l,
        mask: c,
        maskId: u,
        extra: f
      } = r;
      return new Promise((p, v) => {
        Promise.all([HO(n, i), c.iconName ? HO(c.iconName, c.prefix) : Promise.resolve({
          found: !1,
          width: 512,
          height: 512,
          icon: {}
        })]).then((x) => {
          let [b, m] = x;
          p([t, CC({
            icons: {
              main: b,
              mask: m
            },
            prefix: i,
            iconName: n,
            transform: s,
            symbol: l,
            maskId: u,
            title: o,
            titleId: a,
            extra: f,
            watchable: !0
          })]);
        }).catch(v);
      });
    }, e.generateAbstractIcon = function(t) {
      let {
        children: r,
        attributes: n,
        main: o,
        transform: a,
        styles: i
      } = t;
      const s = W0(i);
      s.length > 0 && (n.style = s);
      let l;
      return EC(a) && (l = uc("generateAbstractTransformGrouping", {
        main: o,
        transform: a,
        containerWidth: o.width,
        iconWidth: o.width
      })), r.push(l || o.icon), {
        children: r,
        attributes: n
      };
    };
  }
}, DEe = {
  mixout() {
    return {
      layer(e) {
        let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        const {
          classes: r = []
        } = t;
        return H0({
          type: "layer"
        }, () => {
          wu("beforeDOMElementCreation", {
            assembler: e,
            params: t
          });
          let n = [];
          return e((o) => {
            Array.isArray(o) ? o.map((a) => {
              n = n.concat(a.abstract);
            }) : n = n.concat(o.abstract);
          }), [{
            tag: "span",
            attributes: {
              class: ["".concat(Ge.cssPrefix, "-layers"), ...r].join(" ")
            },
            children: n
          }];
        });
      }
    };
  }
}, LEe = {
  mixout() {
    return {
      counter(e) {
        let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        const {
          title: r = null,
          classes: n = [],
          attributes: o = {},
          styles: a = {}
        } = t;
        return H0({
          type: "counter",
          content: e
        }, () => (wu("beforeDOMElementCreation", {
          content: e,
          params: t
        }), yEe({
          content: e.toString(),
          title: r,
          extra: {
            attributes: o,
            styles: a,
            classes: ["".concat(Ge.cssPrefix, "-layers-counter"), ...n]
          }
        })));
      }
    };
  }
}, VEe = {
  mixout() {
    return {
      text(e) {
        let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        const {
          transform: r = xa,
          title: n = null,
          classes: o = [],
          attributes: a = {},
          styles: i = {}
        } = t;
        return H0({
          type: "text",
          content: e
        }, () => (wu("beforeDOMElementCreation", {
          content: e,
          params: t
        }), TT({
          content: e,
          transform: xe(xe({}, xa), r),
          title: n,
          extra: {
            attributes: a,
            styles: i,
            classes: ["".concat(Ge.cssPrefix, "-layers-text"), ...o]
          }
        })));
      }
    };
  },
  provides(e) {
    e.generateLayersText = function(t, r) {
      const {
        title: n,
        transform: o,
        extra: a
      } = r;
      let i = null, s = null;
      if (iq) {
        const l = parseInt(getComputedStyle(t).fontSize, 10), c = t.getBoundingClientRect();
        i = c.width / l, s = c.height / l;
      }
      return Ge.autoA11y && !n && (a.attributes["aria-hidden"] = "true"), Promise.resolve([t, TT({
        content: t.innerHTML,
        width: i,
        height: s,
        transform: o,
        title: n,
        extra: a,
        watchable: !0
      })]);
    };
  }
};
const WEe = new RegExp('"', "ug"), VT = [1105920, 1112319], WT = xe(xe(xe(xe({}, {
  FontAwesome: {
    normal: "fas",
    400: "fas"
  }
}), f4e), C4e), w4e), BO = Object.keys(WT).reduce((e, t) => (e[t.toLowerCase()] = WT[t], e), {}), UEe = Object.keys(BO).reduce((e, t) => {
  const r = BO[t];
  return e[t] = r[900] || [...Object.entries(r)][0][1], e;
}, {});
function YEe(e) {
  const t = e.replace(WEe, ""), r = K4e(t, 0), n = r >= VT[0] && r <= VT[1], o = t.length === 2 ? t[0] === t[1] : !1;
  return {
    value: wq(o ? t[0] : t),
    isSecondary: n || o
  };
}
function HEe(e, t) {
  const r = e.replace(/^['"]|['"]$/g, "").toLowerCase(), n = parseInt(t), o = isNaN(n) ? "normal" : n;
  return (BO[r] || {})[o] || UEe[r];
}
function UT(e, t) {
  const r = "".concat(A4e).concat(t.replace(":", "-"));
  return new Promise((n, o) => {
    if (e.getAttribute(r) !== null)
      return n();
    const a = Gd(e.children).filter((f) => f.getAttribute(zO) === t)[0], i = lc.getComputedStyle(e, t), s = i.getPropertyValue("font-family"), l = s.match(T4e), c = i.getPropertyValue("font-weight"), u = i.getPropertyValue("content");
    if (a && !l)
      return e.removeChild(a), n();
    if (l && u !== "none" && u !== "") {
      const f = i.getPropertyValue("content");
      let p = HEe(s, c);
      const {
        value: v,
        isSecondary: x
      } = YEe(f), b = l[0].startsWith("FontAwesome");
      let m = PC(p, v), w = m;
      if (b) {
        const $ = rEe(v);
        $.iconName && $.prefix && (m = $.iconName, p = $.prefix);
      }
      if (m && !x && (!a || a.getAttribute(wC) !== p || a.getAttribute(kC) !== w)) {
        e.setAttribute(r, w), a && e.removeChild(a);
        const $ = jEe(), {
          extra: E
        } = $;
        E.attributes[zO] = t, HO(m, p).then((S) => {
          const h = CC(xe(xe({}, $), {}, {
            icons: {
              main: S,
              mask: _q()
            },
            prefix: p,
            iconName: w,
            extra: E,
            watchable: !0
          })), U = Ur.createElementNS("http://www.w3.org/2000/svg", "svg");
          t === "::before" ? e.insertBefore(U, e.firstChild) : e.appendChild(U), U.outerHTML = h.map((G) => db(G)).join(`
`), e.removeAttribute(r), n();
        }).catch(o);
      } else
        n();
    } else
      n();
  });
}
function GEe(e) {
  return Promise.all([UT(e, "::before"), UT(e, "::after")]);
}
function qEe(e) {
  return e.parentNode !== document.head && !~N4e.indexOf(e.tagName.toUpperCase()) && !e.getAttribute(zO) && (!e.parentNode || e.parentNode.tagName !== "svg");
}
function YT(e) {
  if (Yi)
    return new Promise((t, r) => {
      const n = Gd(e.querySelectorAll("*")).filter(qEe).map(GEe), o = AC.begin("searchPseudoElements");
      Mq(), Promise.all(n).then(() => {
        o(), qO(), t();
      }).catch(() => {
        o(), qO(), r();
      });
    });
}
var BEe = {
  hooks() {
    return {
      mutationObserverCallbacks(e) {
        return e.pseudoElementsCallback = YT, e;
      }
    };
  },
  provides(e) {
    e.pseudoElements2svg = function(t) {
      const {
        node: r = Ur
      } = t;
      Ge.searchPseudoElements && YT(r);
    };
  }
};
let HT = !1;
var XEe = {
  mixout() {
    return {
      dom: {
        unwatch() {
          Mq(), HT = !0;
        }
      }
    };
  },
  hooks() {
    return {
      bootstrap() {
        FT(WO("mutationObserverCallbacks", {}));
      },
      noAuto() {
        CEe();
      },
      watch(e) {
        const {
          observeMutationsRoot: t
        } = e;
        HT ? qO() : FT(WO("mutationObserverCallbacks", {
          observeMutationsRoot: t
        }));
      }
    };
  }
};
const GT = (e) => {
  let t = {
    size: 16,
    x: 0,
    y: 0,
    flipX: !1,
    flipY: !1,
    rotate: 0
  };
  return e.toLowerCase().split(" ").reduce((r, n) => {
    const o = n.toLowerCase().split("-"), a = o[0];
    let i = o.slice(1).join("-");
    if (a && i === "h")
      return r.flipX = !0, r;
    if (a && i === "v")
      return r.flipY = !0, r;
    if (i = parseFloat(i), isNaN(i))
      return r;
    switch (a) {
      case "grow":
        r.size = r.size + i;
        break;
      case "shrink":
        r.size = r.size - i;
        break;
      case "left":
        r.x = r.x - i;
        break;
      case "right":
        r.x = r.x + i;
        break;
      case "up":
        r.y = r.y - i;
        break;
      case "down":
        r.y = r.y + i;
        break;
      case "rotate":
        r.rotate = r.rotate + i;
        break;
    }
    return r;
  }, t);
};
var KEe = {
  mixout() {
    return {
      parse: {
        transform: (e) => GT(e)
      }
    };
  },
  hooks() {
    return {
      parseNodeAttributes(e, t) {
        const r = t.getAttribute("data-fa-transform");
        return r && (e.transform = GT(r)), e;
      }
    };
  },
  provides(e) {
    e.generateAbstractTransformGrouping = function(t) {
      let {
        main: r,
        transform: n,
        containerWidth: o,
        iconWidth: a
      } = t;
      const i = {
        transform: "translate(".concat(o / 2, " 256)")
      }, s = "translate(".concat(n.x * 32, ", ").concat(n.y * 32, ") "), l = "scale(".concat(n.size / 16 * (n.flipX ? -1 : 1), ", ").concat(n.size / 16 * (n.flipY ? -1 : 1), ") "), c = "rotate(".concat(n.rotate, " 0 0)"), u = {
        transform: "".concat(s, " ").concat(l, " ").concat(c)
      }, f = {
        transform: "translate(".concat(a / 2 * -1, " -256)")
      }, p = {
        outer: i,
        inner: u,
        path: f
      };
      return {
        tag: "g",
        attributes: xe({}, p.outer),
        children: [{
          tag: "g",
          attributes: xe({}, p.inner),
          children: [{
            tag: r.icon.tag,
            children: r.icon.children,
            attributes: xe(xe({}, r.icon.attributes), p.path)
          }]
        }]
      };
    };
  }
};
const ik = {
  x: 0,
  y: 0,
  width: "100%",
  height: "100%"
};
function qT(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0;
  return e.attributes && (e.attributes.fill || t) && (e.attributes.fill = "black"), e;
}
function JEe(e) {
  return e.tag === "g" ? e.children : [e];
}
var QEe = {
  hooks() {
    return {
      parseNodeAttributes(e, t) {
        const r = t.getAttribute("data-fa-mask"), n = r ? Y0(r.split(" ").map((o) => o.trim())) : _q();
        return n.prefix || (n.prefix = cc()), e.mask = n, e.maskId = t.getAttribute("data-fa-mask-id"), e;
      }
    };
  },
  provides(e) {
    e.generateAbstractMask = function(t) {
      let {
        children: r,
        attributes: n,
        main: o,
        mask: a,
        maskId: i,
        transform: s
      } = t;
      const {
        width: l,
        icon: c
      } = o, {
        width: u,
        icon: f
      } = a, p = Y4e({
        transform: s,
        containerWidth: u,
        iconWidth: l
      }), v = {
        tag: "rect",
        attributes: xe(xe({}, ik), {}, {
          fill: "white"
        })
      }, x = c.children ? {
        children: c.children.map(qT)
      } : {}, b = {
        tag: "g",
        attributes: xe({}, p.inner),
        children: [qT(xe({
          tag: c.tag,
          attributes: xe(xe({}, c.attributes), p.path)
        }, x))]
      }, m = {
        tag: "g",
        attributes: xe({}, p.outer),
        children: [b]
      }, w = "mask-".concat(i || jh()), $ = "clip-".concat(i || jh()), E = {
        tag: "mask",
        attributes: xe(xe({}, ik), {}, {
          id: w,
          maskUnits: "userSpaceOnUse",
          maskContentUnits: "userSpaceOnUse"
        }),
        children: [v, m]
      }, S = {
        tag: "defs",
        children: [{
          tag: "clipPath",
          attributes: {
            id: $
          },
          children: JEe(f)
        }, E]
      };
      return r.push(S, {
        tag: "rect",
        attributes: xe({
          fill: "currentColor",
          "clip-path": "url(#".concat($, ")"),
          mask: "url(#".concat(w, ")")
        }, ik)
      }), {
        children: r,
        attributes: n
      };
    };
  }
}, ZEe = {
  provides(e) {
    let t = !1;
    lc.matchMedia && (t = lc.matchMedia("(prefers-reduced-motion: reduce)").matches), e.missingIconAbstract = function() {
      const r = [], n = {
        fill: "currentColor"
      }, o = {
        attributeType: "XML",
        repeatCount: "indefinite",
        dur: "2s"
      };
      r.push({
        tag: "path",
        attributes: xe(xe({}, n), {}, {
          d: "M156.5,447.7l-12.6,29.5c-18.7-9.5-35.9-21.2-51.5-34.9l22.7-22.7C127.6,430.5,141.5,440,156.5,447.7z M40.6,272H8.5 c1.4,21.2,5.4,41.7,11.7,61.1L50,321.2C45.1,305.5,41.8,289,40.6,272z M40.6,240c1.4-18.8,5.2-37,11.1-54.1l-29.5-12.6 C14.7,194.3,10,216.7,8.5,240H40.6z M64.3,156.5c7.8-14.9,17.2-28.8,28.1-41.5L69.7,92.3c-13.7,15.6-25.5,32.8-34.9,51.5 L64.3,156.5z M397,419.6c-13.9,12-29.4,22.3-46.1,30.4l11.9,29.8c20.7-9.9,39.8-22.6,56.9-37.6L397,419.6z M115,92.4 c13.9-12,29.4-22.3,46.1-30.4l-11.9-29.8c-20.7,9.9-39.8,22.6-56.8,37.6L115,92.4z M447.7,355.5c-7.8,14.9-17.2,28.8-28.1,41.5 l22.7,22.7c13.7-15.6,25.5-32.9,34.9-51.5L447.7,355.5z M471.4,272c-1.4,18.8-5.2,37-11.1,54.1l29.5,12.6 c7.5-21.1,12.2-43.5,13.6-66.8H471.4z M321.2,462c-15.7,5-32.2,8.2-49.2,9.4v32.1c21.2-1.4,41.7-5.4,61.1-11.7L321.2,462z M240,471.4c-18.8-1.4-37-5.2-54.1-11.1l-12.6,29.5c21.1,7.5,43.5,12.2,66.8,13.6V471.4z M462,190.8c5,15.7,8.2,32.2,9.4,49.2h32.1 c-1.4-21.2-5.4-41.7-11.7-61.1L462,190.8z M92.4,397c-12-13.9-22.3-29.4-30.4-46.1l-29.8,11.9c9.9,20.7,22.6,39.8,37.6,56.9 L92.4,397z M272,40.6c18.8,1.4,36.9,5.2,54.1,11.1l12.6-29.5C317.7,14.7,295.3,10,272,8.5V40.6z M190.8,50 c15.7-5,32.2-8.2,49.2-9.4V8.5c-21.2,1.4-41.7,5.4-61.1,11.7L190.8,50z M442.3,92.3L419.6,115c12,13.9,22.3,29.4,30.5,46.1 l29.8-11.9C470,128.5,457.3,109.4,442.3,92.3z M397,92.4l22.7-22.7c-15.6-13.7-32.8-25.5-51.5-34.9l-12.6,29.5 C370.4,72.1,384.4,81.5,397,92.4z"
        })
      });
      const a = xe(xe({}, o), {}, {
        attributeName: "opacity"
      }), i = {
        tag: "circle",
        attributes: xe(xe({}, n), {}, {
          cx: "256",
          cy: "364",
          r: "28"
        }),
        children: []
      };
      return t || i.children.push({
        tag: "animate",
        attributes: xe(xe({}, o), {}, {
          attributeName: "r",
          values: "28;14;28;28;14;28;"
        })
      }, {
        tag: "animate",
        attributes: xe(xe({}, a), {}, {
          values: "1;0;1;1;0;1;"
        })
      }), r.push(i), r.push({
        tag: "path",
        attributes: xe(xe({}, n), {}, {
          opacity: "1",
          d: "M263.7,312h-16c-6.6,0-12-5.4-12-12c0-71,77.4-63.9,77.4-107.8c0-20-17.8-40.2-57.4-40.2c-29.1,0-44.3,9.6-59.2,28.7 c-3.9,5-11.1,6-16.2,2.4l-13.1-9.2c-5.6-3.9-6.9-11.8-2.6-17.2c21.2-27.2,46.4-44.7,91.2-44.7c52.3,0,97.4,29.8,97.4,80.2 c0,67.6-77.4,63.5-77.4,107.8C275.7,306.6,270.3,312,263.7,312z"
        }),
        children: t ? [] : [{
          tag: "animate",
          attributes: xe(xe({}, a), {}, {
            values: "1;0;0;0;0;1;"
          })
        }]
      }), t || r.push({
        tag: "path",
        attributes: xe(xe({}, n), {}, {
          opacity: "0",
          d: "M232.5,134.5l7,168c0.3,6.4,5.6,11.5,12,11.5h9c6.4,0,11.7-5.1,12-11.5l7-168c0.3-6.8-5.2-12.5-12-12.5h-23 C237.7,122,232.2,127.7,232.5,134.5z"
        }),
        children: [{
          tag: "animate",
          attributes: xe(xe({}, a), {}, {
            values: "0;0;1;1;0;0;"
          })
        }]
      }), {
        tag: "g",
        attributes: {
          class: "missing"
        },
        children: r
      };
    };
  }
}, eSe = {
  hooks() {
    return {
      parseNodeAttributes(e, t) {
        const r = t.getAttribute("data-fa-symbol"), n = r === null ? !1 : r === "" ? !0 : r;
        return e.symbol = n, e;
      }
    };
  }
}, tSe = [q4e, FEe, DEe, LEe, VEe, BEe, XEe, KEe, QEe, ZEe, eSe];
fEe(tSe, {
  mixoutsTo: ro
});
ro.noAuto;
ro.config;
ro.library;
ro.dom;
const XO = ro.parse;
ro.findIconDefinition;
ro.toHtml;
const rSe = ro.icon;
ro.layer;
ro.text;
ro.counter;
function nSe(e) {
  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e;
}
var gy = { exports: {} }, sk = { exports: {} }, Zt = {};
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var BT;
function oSe() {
  if (BT) return Zt;
  BT = 1;
  var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, r = e ? Symbol.for("react.portal") : 60106, n = e ? Symbol.for("react.fragment") : 60107, o = e ? Symbol.for("react.strict_mode") : 60108, a = e ? Symbol.for("react.profiler") : 60114, i = e ? Symbol.for("react.provider") : 60109, s = e ? Symbol.for("react.context") : 60110, l = e ? Symbol.for("react.async_mode") : 60111, c = e ? Symbol.for("react.concurrent_mode") : 60111, u = e ? Symbol.for("react.forward_ref") : 60112, f = e ? Symbol.for("react.suspense") : 60113, p = e ? Symbol.for("react.suspense_list") : 60120, v = e ? Symbol.for("react.memo") : 60115, x = e ? Symbol.for("react.lazy") : 60116, b = e ? Symbol.for("react.block") : 60121, m = e ? Symbol.for("react.fundamental") : 60117, w = e ? Symbol.for("react.responder") : 60118, $ = e ? Symbol.for("react.scope") : 60119;
  function E(h) {
    if (typeof h == "object" && h !== null) {
      var U = h.$$typeof;
      switch (U) {
        case t:
          switch (h = h.type, h) {
            case l:
            case c:
            case n:
            case a:
            case o:
            case f:
              return h;
            default:
              switch (h = h && h.$$typeof, h) {
                case s:
                case u:
                case x:
                case v:
                case i:
                  return h;
                default:
                  return U;
              }
          }
        case r:
          return U;
      }
    }
  }
  function S(h) {
    return E(h) === c;
  }
  return Zt.AsyncMode = l, Zt.ConcurrentMode = c, Zt.ContextConsumer = s, Zt.ContextProvider = i, Zt.Element = t, Zt.ForwardRef = u, Zt.Fragment = n, Zt.Lazy = x, Zt.Memo = v, Zt.Portal = r, Zt.Profiler = a, Zt.StrictMode = o, Zt.Suspense = f, Zt.isAsyncMode = function(h) {
    return S(h) || E(h) === l;
  }, Zt.isConcurrentMode = S, Zt.isContextConsumer = function(h) {
    return E(h) === s;
  }, Zt.isContextProvider = function(h) {
    return E(h) === i;
  }, Zt.isElement = function(h) {
    return typeof h == "object" && h !== null && h.$$typeof === t;
  }, Zt.isForwardRef = function(h) {
    return E(h) === u;
  }, Zt.isFragment = function(h) {
    return E(h) === n;
  }, Zt.isLazy = function(h) {
    return E(h) === x;
  }, Zt.isMemo = function(h) {
    return E(h) === v;
  }, Zt.isPortal = function(h) {
    return E(h) === r;
  }, Zt.isProfiler = function(h) {
    return E(h) === a;
  }, Zt.isStrictMode = function(h) {
    return E(h) === o;
  }, Zt.isSuspense = function(h) {
    return E(h) === f;
  }, Zt.isValidElementType = function(h) {
    return typeof h == "string" || typeof h == "function" || h === n || h === c || h === a || h === o || h === f || h === p || typeof h == "object" && h !== null && (h.$$typeof === x || h.$$typeof === v || h.$$typeof === i || h.$$typeof === s || h.$$typeof === u || h.$$typeof === m || h.$$typeof === w || h.$$typeof === $ || h.$$typeof === b);
  }, Zt.typeOf = E, Zt;
}
var pr = {};
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var XT;
function aSe() {
  return XT || (XT = 1, process.env.NODE_ENV !== "production" && function() {
    var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, r = e ? Symbol.for("react.portal") : 60106, n = e ? Symbol.for("react.fragment") : 60107, o = e ? Symbol.for("react.strict_mode") : 60108, a = e ? Symbol.for("react.profiler") : 60114, i = e ? Symbol.for("react.provider") : 60109, s = e ? Symbol.for("react.context") : 60110, l = e ? Symbol.for("react.async_mode") : 60111, c = e ? Symbol.for("react.concurrent_mode") : 60111, u = e ? Symbol.for("react.forward_ref") : 60112, f = e ? Symbol.for("react.suspense") : 60113, p = e ? Symbol.for("react.suspense_list") : 60120, v = e ? Symbol.for("react.memo") : 60115, x = e ? Symbol.for("react.lazy") : 60116, b = e ? Symbol.for("react.block") : 60121, m = e ? Symbol.for("react.fundamental") : 60117, w = e ? Symbol.for("react.responder") : 60118, $ = e ? Symbol.for("react.scope") : 60119;
    function E(k) {
      return typeof k == "string" || typeof k == "function" || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
      k === n || k === c || k === a || k === o || k === f || k === p || typeof k == "object" && k !== null && (k.$$typeof === x || k.$$typeof === v || k.$$typeof === i || k.$$typeof === s || k.$$typeof === u || k.$$typeof === m || k.$$typeof === w || k.$$typeof === $ || k.$$typeof === b);
    }
    function S(k) {
      if (typeof k == "object" && k !== null) {
        var oe = k.$$typeof;
        switch (oe) {
          case t:
            var Ce = k.type;
            switch (Ce) {
              case l:
              case c:
              case n:
              case a:
              case o:
              case f:
                return Ce;
              default:
                var Ze = Ce && Ce.$$typeof;
                switch (Ze) {
                  case s:
                  case u:
                  case x:
                  case v:
                  case i:
                    return Ze;
                  default:
                    return oe;
                }
            }
          case r:
            return oe;
        }
      }
    }
    var h = l, U = c, G = s, Q = i, Z = t, X = u, J = n, I = x, te = v, V = r, D = a, F = o, R = f, H = !1;
    function B(k) {
      return H || (H = !0, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.")), g(k) || S(k) === l;
    }
    function g(k) {
      return S(k) === c;
    }
    function d(k) {
      return S(k) === s;
    }
    function O(k) {
      return S(k) === i;
    }
    function C(k) {
      return typeof k == "object" && k !== null && k.$$typeof === t;
    }
    function A(k) {
      return S(k) === u;
    }
    function N(k) {
      return S(k) === n;
    }
    function j(k) {
      return S(k) === x;
    }
    function _(k) {
      return S(k) === v;
    }
    function T(k) {
      return S(k) === r;
    }
    function M(k) {
      return S(k) === a;
    }
    function z(k) {
      return S(k) === o;
    }
    function ee(k) {
      return S(k) === f;
    }
    pr.AsyncMode = h, pr.ConcurrentMode = U, pr.ContextConsumer = G, pr.ContextProvider = Q, pr.Element = Z, pr.ForwardRef = X, pr.Fragment = J, pr.Lazy = I, pr.Memo = te, pr.Portal = V, pr.Profiler = D, pr.StrictMode = F, pr.Suspense = R, pr.isAsyncMode = B, pr.isConcurrentMode = g, pr.isContextConsumer = d, pr.isContextProvider = O, pr.isElement = C, pr.isForwardRef = A, pr.isFragment = N, pr.isLazy = j, pr.isMemo = _, pr.isPortal = T, pr.isProfiler = M, pr.isStrictMode = z, pr.isSuspense = ee, pr.isValidElementType = E, pr.typeOf = S;
  }()), pr;
}
var KT;
function zq() {
  return KT || (KT = 1, process.env.NODE_ENV === "production" ? sk.exports = oSe() : sk.exports = aSe()), sk.exports;
}
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
var lk, JT;
function iSe() {
  if (JT) return lk;
  JT = 1;
  var e = Object.getOwnPropertySymbols, t = Object.prototype.hasOwnProperty, r = Object.prototype.propertyIsEnumerable;
  function n(a) {
    if (a == null)
      throw new TypeError("Object.assign cannot be called with null or undefined");
    return Object(a);
  }
  function o() {
    try {
      if (!Object.assign)
        return !1;
      var a = new String("abc");
      if (a[5] = "de", Object.getOwnPropertyNames(a)[0] === "5")
        return !1;
      for (var i = {}, s = 0; s < 10; s++)
        i["_" + String.fromCharCode(s)] = s;
      var l = Object.getOwnPropertyNames(i).map(function(u) {
        return i[u];
      });
      if (l.join("") !== "0123456789")
        return !1;
      var c = {};
      return "abcdefghijklmnopqrst".split("").forEach(function(u) {
        c[u] = u;
      }), Object.keys(Object.assign({}, c)).join("") === "abcdefghijklmnopqrst";
    } catch {
      return !1;
    }
  }
  return lk = o() ? Object.assign : function(a, i) {
    for (var s, l = n(a), c, u = 1; u < arguments.length; u++) {
      s = Object(arguments[u]);
      for (var f in s)
        t.call(s, f) && (l[f] = s[f]);
      if (e) {
        c = e(s);
        for (var p = 0; p < c.length; p++)
          r.call(s, c[p]) && (l[c[p]] = s[c[p]]);
      }
    }
    return l;
  }, lk;
}
var ck, QT;
function NC() {
  if (QT) return ck;
  QT = 1;
  var e = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
  return ck = e, ck;
}
var ZT, eM;
function Fq() {
  return eM || (eM = 1, ZT = Function.call.bind(Object.prototype.hasOwnProperty)), ZT;
}
var uk, tM;
function sSe() {
  if (tM) return uk;
  tM = 1;
  var e = function() {
  };
  if (process.env.NODE_ENV !== "production") {
    var t = /* @__PURE__ */ NC(), r = {}, n = /* @__PURE__ */ Fq();
    e = function(a) {
      var i = "Warning: " + a;
      typeof console < "u" && console.error(i);
      try {
        throw new Error(i);
      } catch {
      }
    };
  }
  function o(a, i, s, l, c) {
    if (process.env.NODE_ENV !== "production") {
      for (var u in a)
        if (n(a, u)) {
          var f;
          try {
            if (typeof a[u] != "function") {
              var p = Error(
                (l || "React class") + ": " + s + " type `" + u + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof a[u] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`."
              );
              throw p.name = "Invariant Violation", p;
            }
            f = a[u](i, u, l, s, null, t);
          } catch (x) {
            f = x;
          }
          if (f && !(f instanceof Error) && e(
            (l || "React class") + ": type specification of " + s + " `" + u + "` is invalid; the type checker function must return `null` or an `Error` but returned a " + typeof f + ". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument)."
          ), f instanceof Error && !(f.message in r)) {
            r[f.message] = !0;
            var v = c ? c() : "";
            e(
              "Failed " + s + " type: " + f.message + (v ?? "")
            );
          }
        }
    }
  }
  return o.resetWarningCache = function() {
    process.env.NODE_ENV !== "production" && (r = {});
  }, uk = o, uk;
}
var fk, rM;
function lSe() {
  if (rM) return fk;
  rM = 1;
  var e = zq(), t = iSe(), r = /* @__PURE__ */ NC(), n = /* @__PURE__ */ Fq(), o = /* @__PURE__ */ sSe(), a = function() {
  };
  process.env.NODE_ENV !== "production" && (a = function(s) {
    var l = "Warning: " + s;
    typeof console < "u" && console.error(l);
    try {
      throw new Error(l);
    } catch {
    }
  });
  function i() {
    return null;
  }
  return fk = function(s, l) {
    var c = typeof Symbol == "function" && Symbol.iterator, u = "@@iterator";
    function f(g) {
      var d = g && (c && g[c] || g[u]);
      if (typeof d == "function")
        return d;
    }
    var p = "<<anonymous>>", v = {
      array: w("array"),
      bigint: w("bigint"),
      bool: w("boolean"),
      func: w("function"),
      number: w("number"),
      object: w("object"),
      string: w("string"),
      symbol: w("symbol"),
      any: $(),
      arrayOf: E,
      element: S(),
      elementType: h(),
      instanceOf: U,
      node: X(),
      objectOf: Q,
      oneOf: G,
      oneOfType: Z,
      shape: I,
      exact: te
    };
    function x(g, d) {
      return g === d ? g !== 0 || 1 / g === 1 / d : g !== g && d !== d;
    }
    function b(g, d) {
      this.message = g, this.data = d && typeof d == "object" ? d : {}, this.stack = "";
    }
    b.prototype = Error.prototype;
    function m(g) {
      if (process.env.NODE_ENV !== "production")
        var d = {}, O = 0;
      function C(N, j, _, T, M, z, ee) {
        if (T = T || p, z = z || _, ee !== r) {
          if (l) {
            var k = new Error(
              "Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types"
            );
            throw k.name = "Invariant Violation", k;
          } else if (process.env.NODE_ENV !== "production" && typeof console < "u") {
            var oe = T + ":" + _;
            !d[oe] && // Avoid spamming the console because they are often not actionable except for lib authors
            O < 3 && (a(
              "You are manually calling a React.PropTypes validation function for the `" + z + "` prop on `" + T + "`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details."
            ), d[oe] = !0, O++);
          }
        }
        return j[_] == null ? N ? j[_] === null ? new b("The " + M + " `" + z + "` is marked as required " + ("in `" + T + "`, but its value is `null`.")) : new b("The " + M + " `" + z + "` is marked as required in " + ("`" + T + "`, but its value is `undefined`.")) : null : g(j, _, T, M, z);
      }
      var A = C.bind(null, !1);
      return A.isRequired = C.bind(null, !0), A;
    }
    function w(g) {
      function d(O, C, A, N, j, _) {
        var T = O[C], M = F(T);
        if (M !== g) {
          var z = R(T);
          return new b(
            "Invalid " + N + " `" + j + "` of type " + ("`" + z + "` supplied to `" + A + "`, expected ") + ("`" + g + "`."),
            { expectedType: g }
          );
        }
        return null;
      }
      return m(d);
    }
    function $() {
      return m(i);
    }
    function E(g) {
      function d(O, C, A, N, j) {
        if (typeof g != "function")
          return new b("Property `" + j + "` of component `" + A + "` has invalid PropType notation inside arrayOf.");
        var _ = O[C];
        if (!Array.isArray(_)) {
          var T = F(_);
          return new b("Invalid " + N + " `" + j + "` of type " + ("`" + T + "` supplied to `" + A + "`, expected an array."));
        }
        for (var M = 0; M < _.length; M++) {
          var z = g(_, M, A, N, j + "[" + M + "]", r);
          if (z instanceof Error)
            return z;
        }
        return null;
      }
      return m(d);
    }
    function S() {
      function g(d, O, C, A, N) {
        var j = d[O];
        if (!s(j)) {
          var _ = F(j);
          return new b("Invalid " + A + " `" + N + "` of type " + ("`" + _ + "` supplied to `" + C + "`, expected a single ReactElement."));
        }
        return null;
      }
      return m(g);
    }
    function h() {
      function g(d, O, C, A, N) {
        var j = d[O];
        if (!e.isValidElementType(j)) {
          var _ = F(j);
          return new b("Invalid " + A + " `" + N + "` of type " + ("`" + _ + "` supplied to `" + C + "`, expected a single ReactElement type."));
        }
        return null;
      }
      return m(g);
    }
    function U(g) {
      function d(O, C, A, N, j) {
        if (!(O[C] instanceof g)) {
          var _ = g.name || p, T = B(O[C]);
          return new b("Invalid " + N + " `" + j + "` of type " + ("`" + T + "` supplied to `" + A + "`, expected ") + ("instance of `" + _ + "`."));
        }
        return null;
      }
      return m(d);
    }
    function G(g) {
      if (!Array.isArray(g))
        return process.env.NODE_ENV !== "production" && (arguments.length > 1 ? a(
          "Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z])."
        ) : a("Invalid argument supplied to oneOf, expected an array.")), i;
      function d(O, C, A, N, j) {
        for (var _ = O[C], T = 0; T < g.length; T++)
          if (x(_, g[T]))
            return null;
        var M = JSON.stringify(g, function(z, ee) {
          var k = R(ee);
          return k === "symbol" ? String(ee) : ee;
        });
        return new b("Invalid " + N + " `" + j + "` of value `" + String(_) + "` " + ("supplied to `" + A + "`, expected one of " + M + "."));
      }
      return m(d);
    }
    function Q(g) {
      function d(O, C, A, N, j) {
        if (typeof g != "function")
          return new b("Property `" + j + "` of component `" + A + "` has invalid PropType notation inside objectOf.");
        var _ = O[C], T = F(_);
        if (T !== "object")
          return new b("Invalid " + N + " `" + j + "` of type " + ("`" + T + "` supplied to `" + A + "`, expected an object."));
        for (var M in _)
          if (n(_, M)) {
            var z = g(_, M, A, N, j + "." + M, r);
            if (z instanceof Error)
              return z;
          }
        return null;
      }
      return m(d);
    }
    function Z(g) {
      if (!Array.isArray(g))
        return process.env.NODE_ENV !== "production" && a("Invalid argument supplied to oneOfType, expected an instance of array."), i;
      for (var d = 0; d < g.length; d++) {
        var O = g[d];
        if (typeof O != "function")
          return a(
            "Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + H(O) + " at index " + d + "."
          ), i;
      }
      function C(A, N, j, _, T) {
        for (var M = [], z = 0; z < g.length; z++) {
          var ee = g[z], k = ee(A, N, j, _, T, r);
          if (k == null)
            return null;
          k.data && n(k.data, "expectedType") && M.push(k.data.expectedType);
        }
        var oe = M.length > 0 ? ", expected one of type [" + M.join(", ") + "]" : "";
        return new b("Invalid " + _ + " `" + T + "` supplied to " + ("`" + j + "`" + oe + "."));
      }
      return m(C);
    }
    function X() {
      function g(d, O, C, A, N) {
        return V(d[O]) ? null : new b("Invalid " + A + " `" + N + "` supplied to " + ("`" + C + "`, expected a ReactNode."));
      }
      return m(g);
    }
    function J(g, d, O, C, A) {
      return new b(
        (g || "React class") + ": " + d + " type `" + O + "." + C + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + A + "`."
      );
    }
    function I(g) {
      function d(O, C, A, N, j) {
        var _ = O[C], T = F(_);
        if (T !== "object")
          return new b("Invalid " + N + " `" + j + "` of type `" + T + "` " + ("supplied to `" + A + "`, expected `object`."));
        for (var M in g) {
          var z = g[M];
          if (typeof z != "function")
            return J(A, N, j, M, R(z));
          var ee = z(_, M, A, N, j + "." + M, r);
          if (ee)
            return ee;
        }
        return null;
      }
      return m(d);
    }
    function te(g) {
      function d(O, C, A, N, j) {
        var _ = O[C], T = F(_);
        if (T !== "object")
          return new b("Invalid " + N + " `" + j + "` of type `" + T + "` " + ("supplied to `" + A + "`, expected `object`."));
        var M = t({}, O[C], g);
        for (var z in M) {
          var ee = g[z];
          if (n(g, z) && typeof ee != "function")
            return J(A, N, j, z, R(ee));
          if (!ee)
            return new b(
              "Invalid " + N + " `" + j + "` key `" + z + "` supplied to `" + A + "`.\nBad object: " + JSON.stringify(O[C], null, "  ") + `
Valid keys: ` + JSON.stringify(Object.keys(g), null, "  ")
            );
          var k = ee(_, z, A, N, j + "." + z, r);
          if (k)
            return k;
        }
        return null;
      }
      return m(d);
    }
    function V(g) {
      switch (typeof g) {
        case "number":
        case "string":
        case "undefined":
          return !0;
        case "boolean":
          return !g;
        case "object":
          if (Array.isArray(g))
            return g.every(V);
          if (g === null || s(g))
            return !0;
          var d = f(g);
          if (d) {
            var O = d.call(g), C;
            if (d !== g.entries) {
              for (; !(C = O.next()).done; )
                if (!V(C.value))
                  return !1;
            } else
              for (; !(C = O.next()).done; ) {
                var A = C.value;
                if (A && !V(A[1]))
                  return !1;
              }
          } else
            return !1;
          return !0;
        default:
          return !1;
      }
    }
    function D(g, d) {
      return g === "symbol" ? !0 : d ? d["@@toStringTag"] === "Symbol" || typeof Symbol == "function" && d instanceof Symbol : !1;
    }
    function F(g) {
      var d = typeof g;
      return Array.isArray(g) ? "array" : g instanceof RegExp ? "object" : D(d, g) ? "symbol" : d;
    }
    function R(g) {
      if (typeof g > "u" || g === null)
        return "" + g;
      var d = F(g);
      if (d === "object") {
        if (g instanceof Date)
          return "date";
        if (g instanceof RegExp)
          return "regexp";
      }
      return d;
    }
    function H(g) {
      var d = R(g);
      switch (d) {
        case "array":
        case "object":
          return "an " + d;
        case "boolean":
        case "date":
        case "regexp":
          return "a " + d;
        default:
          return d;
      }
    }
    function B(g) {
      return !g.constructor || !g.constructor.name ? p : g.constructor.name;
    }
    return v.checkPropTypes = o, v.resetWarningCache = o.resetWarningCache, v.PropTypes = v, v;
  }, fk;
}
var dk, nM;
function cSe() {
  if (nM) return dk;
  nM = 1;
  var e = /* @__PURE__ */ NC();
  function t() {
  }
  function r() {
  }
  return r.resetWarningCache = t, dk = function() {
    function n(i, s, l, c, u, f) {
      if (f !== e) {
        var p = new Error(
          "Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types"
        );
        throw p.name = "Invariant Violation", p;
      }
    }
    n.isRequired = n;
    function o() {
      return n;
    }
    var a = {
      array: n,
      bigint: n,
      bool: n,
      func: n,
      number: n,
      object: n,
      string: n,
      symbol: n,
      any: n,
      arrayOf: o,
      element: n,
      elementType: n,
      instanceOf: o,
      node: n,
      objectOf: o,
      oneOf: o,
      oneOfType: o,
      shape: o,
      exact: o,
      checkPropTypes: r,
      resetWarningCache: t
    };
    return a.PropTypes = a, a;
  }, dk;
}
var oM;
function uSe() {
  if (oM) return gy.exports;
  if (oM = 1, process.env.NODE_ENV !== "production") {
    var e = zq(), t = !0;
    gy.exports = /* @__PURE__ */ lSe()(e.isElement, t);
  } else
    gy.exports = /* @__PURE__ */ cSe()();
  return gy.exports;
}
var fSe = /* @__PURE__ */ uSe();
const Rt = /* @__PURE__ */ nSe(fSe);
function aM(e, t) {
  var r = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var n = Object.getOwnPropertySymbols(e);
    t && (n = n.filter(function(o) {
      return Object.getOwnPropertyDescriptor(e, o).enumerable;
    })), r.push.apply(r, n);
  }
  return r;
}
function Zo(e) {
  for (var t = 1; t < arguments.length; t++) {
    var r = arguments[t] != null ? arguments[t] : {};
    t % 2 ? aM(Object(r), !0).forEach(function(n) {
      hf(e, n, r[n]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : aM(Object(r)).forEach(function(n) {
      Object.defineProperty(e, n, Object.getOwnPropertyDescriptor(r, n));
    });
  }
  return e;
}
function l1(e) {
  "@babel/helpers - typeof";
  return l1 = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t) {
    return typeof t;
  } : function(t) {
    return t && typeof Symbol == "function" && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
  }, l1(e);
}
function hf(e, t, r) {
  return t in e ? Object.defineProperty(e, t, {
    value: r,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : e[t] = r, e;
}
function dSe(e, t) {
  if (e == null) return {};
  var r = {}, n = Object.keys(e), o, a;
  for (a = 0; a < n.length; a++)
    o = n[a], !(t.indexOf(o) >= 0) && (r[o] = e[o]);
  return r;
}
function pSe(e, t) {
  if (e == null) return {};
  var r = dSe(e, t), n, o;
  if (Object.getOwnPropertySymbols) {
    var a = Object.getOwnPropertySymbols(e);
    for (o = 0; o < a.length; o++)
      n = a[o], !(t.indexOf(n) >= 0) && Object.prototype.propertyIsEnumerable.call(e, n) && (r[n] = e[n]);
  }
  return r;
}
function KO(e) {
  return mSe(e) || gSe(e) || hSe(e) || bSe();
}
function mSe(e) {
  if (Array.isArray(e)) return JO(e);
}
function gSe(e) {
  if (typeof Symbol < "u" && e[Symbol.iterator] != null || e["@@iterator"] != null) return Array.from(e);
}
function hSe(e, t) {
  if (e) {
    if (typeof e == "string") return JO(e, t);
    var r = Object.prototype.toString.call(e).slice(8, -1);
    if (r === "Object" && e.constructor && (r = e.constructor.name), r === "Map" || r === "Set") return Array.from(e);
    if (r === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return JO(e, t);
  }
}
function JO(e, t) {
  (t == null || t > e.length) && (t = e.length);
  for (var r = 0, n = new Array(t); r < t; r++) n[r] = e[r];
  return n;
}
function bSe() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function ySe(e) {
  var t, r = e.beat, n = e.fade, o = e.beatFade, a = e.bounce, i = e.shake, s = e.flash, l = e.spin, c = e.spinPulse, u = e.spinReverse, f = e.pulse, p = e.fixedWidth, v = e.inverse, x = e.border, b = e.listItem, m = e.flip, w = e.size, $ = e.rotation, E = e.pull, S = (t = {
    "fa-beat": r,
    "fa-fade": n,
    "fa-beat-fade": o,
    "fa-bounce": a,
    "fa-shake": i,
    "fa-flash": s,
    "fa-spin": l,
    "fa-spin-reverse": u,
    "fa-spin-pulse": c,
    "fa-pulse": f,
    "fa-fw": p,
    "fa-inverse": v,
    "fa-border": x,
    "fa-li": b,
    "fa-flip": m === !0,
    "fa-flip-horizontal": m === "horizontal" || m === "both",
    "fa-flip-vertical": m === "vertical" || m === "both"
  }, hf(t, "fa-".concat(w), typeof w < "u" && w !== null), hf(t, "fa-rotate-".concat($), typeof $ < "u" && $ !== null && $ !== 0), hf(t, "fa-pull-".concat(E), typeof E < "u" && E !== null), hf(t, "fa-swap-opacity", e.swapOpacity), t);
  return Object.keys(S).map(function(h) {
    return S[h] ? h : null;
  }).filter(function(h) {
    return h;
  });
}
function vSe(e) {
  return e = e - 0, e === e;
}
function Dq(e) {
  return vSe(e) ? e : (e = e.replace(/[\-_\s]+(.)?/g, function(t, r) {
    return r ? r.toUpperCase() : "";
  }), e.substr(0, 1).toLowerCase() + e.substr(1));
}
var xSe = ["style"];
function wSe(e) {
  return e.charAt(0).toUpperCase() + e.slice(1);
}
function kSe(e) {
  return e.split(";").map(function(t) {
    return t.trim();
  }).filter(function(t) {
    return t;
  }).reduce(function(t, r) {
    var n = r.indexOf(":"), o = Dq(r.slice(0, n)), a = r.slice(n + 1).trim();
    return o.startsWith("webkit") ? t[wSe(o)] = a : t[o] = a, t;
  }, {});
}
function Lq(e, t) {
  var r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
  if (typeof t == "string")
    return t;
  var n = (t.children || []).map(function(l) {
    return Lq(e, l);
  }), o = Object.keys(t.attributes || {}).reduce(function(l, c) {
    var u = t.attributes[c];
    switch (c) {
      case "class":
        l.attrs.className = u, delete t.attributes.class;
        break;
      case "style":
        l.attrs.style = kSe(u);
        break;
      default:
        c.indexOf("aria-") === 0 || c.indexOf("data-") === 0 ? l.attrs[c.toLowerCase()] = u : l.attrs[Dq(c)] = u;
    }
    return l;
  }, {
    attrs: {}
  }), a = r.style, i = a === void 0 ? {} : a, s = pSe(r, xSe);
  return o.attrs.style = Zo(Zo({}, o.attrs.style), i), e.apply(void 0, [t.tag, Zo(Zo({}, o.attrs), s)].concat(KO(n)));
}
var Vq = !1;
try {
  Vq = process.env.NODE_ENV === "production";
} catch {
}
function $Se() {
  if (!Vq && console && typeof console.error == "function") {
    var e;
    (e = console).error.apply(e, arguments);
  }
}
function iM(e) {
  if (e && l1(e) === "object" && e.prefix && e.iconName && e.icon)
    return e;
  if (XO.icon)
    return XO.icon(e);
  if (e === null)
    return null;
  if (e && l1(e) === "object" && e.prefix && e.iconName)
    return e;
  if (Array.isArray(e) && e.length === 2)
    return {
      prefix: e[0],
      iconName: e[1]
    };
  if (typeof e == "string")
    return {
      prefix: "fas",
      iconName: e
    };
}
function pk(e, t) {
  return Array.isArray(t) && t.length > 0 || !Array.isArray(t) && t ? hf({}, e, t) : {};
}
var sM = {
  border: !1,
  className: "",
  mask: null,
  maskId: null,
  fixedWidth: !1,
  inverse: !1,
  flip: !1,
  icon: null,
  listItem: !1,
  pull: null,
  pulse: !1,
  rotation: null,
  size: null,
  spin: !1,
  spinPulse: !1,
  spinReverse: !1,
  beat: !1,
  fade: !1,
  beatFade: !1,
  bounce: !1,
  shake: !1,
  symbol: !1,
  title: "",
  titleId: null,
  transform: null,
  swapOpacity: !1
}, jC = /* @__PURE__ */ ce.forwardRef(function(e, t) {
  var r = Zo(Zo({}, sM), e), n = r.icon, o = r.mask, a = r.symbol, i = r.className, s = r.title, l = r.titleId, c = r.maskId, u = iM(n), f = pk("classes", [].concat(KO(ySe(r)), KO((i || "").split(" ")))), p = pk("transform", typeof r.transform == "string" ? XO.transform(r.transform) : r.transform), v = pk("mask", iM(o)), x = rSe(u, Zo(Zo(Zo(Zo({}, f), p), v), {}, {
    symbol: a,
    title: s,
    titleId: l,
    maskId: c
  }));
  if (!x)
    return $Se("Could not find icon", u), null;
  var b = x.abstract, m = {
    ref: t
  };
  return Object.keys(r).forEach(function(w) {
    sM.hasOwnProperty(w) || (m[w] = r[w]);
  }), OSe(b[0], m);
});
jC.displayName = "FontAwesomeIcon";
jC.propTypes = {
  beat: Rt.bool,
  border: Rt.bool,
  beatFade: Rt.bool,
  bounce: Rt.bool,
  className: Rt.string,
  fade: Rt.bool,
  flash: Rt.bool,
  mask: Rt.oneOfType([Rt.object, Rt.array, Rt.string]),
  maskId: Rt.string,
  fixedWidth: Rt.bool,
  inverse: Rt.bool,
  flip: Rt.oneOf([!0, !1, "horizontal", "vertical", "both"]),
  icon: Rt.oneOfType([Rt.object, Rt.array, Rt.string]),
  listItem: Rt.bool,
  pull: Rt.oneOf(["right", "left"]),
  pulse: Rt.bool,
  rotation: Rt.oneOf([0, 90, 180, 270]),
  shake: Rt.bool,
  size: Rt.oneOf(["2xs", "xs", "sm", "lg", "xl", "2xl", "1x", "2x", "3x", "4x", "5x", "6x", "7x", "8x", "9x", "10x"]),
  spin: Rt.bool,
  spinPulse: Rt.bool,
  spinReverse: Rt.bool,
  symbol: Rt.oneOfType([Rt.bool, Rt.string]),
  title: Rt.string,
  titleId: Rt.string,
  transform: Rt.oneOfType([Rt.string, Rt.object]),
  swapOpacity: Rt.bool
};
var OSe = Lq.bind(null, ce.createElement);
const IC = "-", ESe = (e) => {
  const t = PSe(e), {
    conflictingClassGroups: r,
    conflictingClassGroupModifiers: n
  } = e;
  return {
    getClassGroupId: (o) => {
      const a = o.split(IC);
      return a[0] === "" && a.length !== 1 && a.shift(), Wq(a, t) || SSe(o);
    },
    getConflictingClassGroupIds: (o, a) => {
      const i = r[o] || [];
      return a && n[o] ? [...i, ...n[o]] : i;
    }
  };
}, Wq = (e, t) => {
  var r;
  if (e.length === 0)
    return t.classGroupId;
  const n = e[0], o = t.nextPart.get(n), a = o ? Wq(e.slice(1), o) : void 0;
  if (a)
    return a;
  if (t.validators.length === 0)
    return;
  const i = e.join(IC);
  return (r = t.validators.find(({
    validator: s
  }) => s(i))) == null ? void 0 : r.classGroupId;
}, lM = /^\[(.+)\]$/, SSe = (e) => {
  if (lM.test(e)) {
    const t = lM.exec(e)[1], r = t == null ? void 0 : t.substring(0, t.indexOf(":"));
    if (r)
      return "arbitrary.." + r;
  }
}, PSe = (e) => {
  const {
    theme: t,
    prefix: r
  } = e, n = {
    nextPart: /* @__PURE__ */ new Map(),
    validators: []
  };
  return ASe(Object.entries(e.classGroups), r).forEach(([o, a]) => {
    QO(a, n, o, t);
  }), n;
}, QO = (e, t, r, n) => {
  e.forEach((o) => {
    if (typeof o == "string") {
      const a = o === "" ? t : cM(t, o);
      a.classGroupId = r;
      return;
    }
    if (typeof o == "function") {
      if (CSe(o)) {
        QO(o(n), t, r, n);
        return;
      }
      t.validators.push({
        validator: o,
        classGroupId: r
      });
      return;
    }
    Object.entries(o).forEach(([a, i]) => {
      QO(i, cM(t, a), r, n);
    });
  });
}, cM = (e, t) => {
  let r = e;
  return t.split(IC).forEach((n) => {
    r.nextPart.has(n) || r.nextPart.set(n, {
      nextPart: /* @__PURE__ */ new Map(),
      validators: []
    }), r = r.nextPart.get(n);
  }), r;
}, CSe = (e) => e.isThemeGetter, ASe = (e, t) => t ? e.map(([r, n]) => {
  const o = n.map((a) => typeof a == "string" ? t + a : typeof a == "object" ? Object.fromEntries(Object.entries(a).map(([i, s]) => [t + i, s])) : a);
  return [r, o];
}) : e, _Se = (e) => {
  if (e < 1)
    return {
      get: () => {
      },
      set: () => {
      }
    };
  let t = 0, r = /* @__PURE__ */ new Map(), n = /* @__PURE__ */ new Map();
  const o = (a, i) => {
    r.set(a, i), t++, t > e && (t = 0, n = r, r = /* @__PURE__ */ new Map());
  };
  return {
    get(a) {
      let i = r.get(a);
      if (i !== void 0)
        return i;
      if ((i = n.get(a)) !== void 0)
        return o(a, i), i;
    },
    set(a, i) {
      r.has(a) ? r.set(a, i) : o(a, i);
    }
  };
}, Uq = "!", NSe = (e) => {
  const {
    separator: t,
    experimentalParseClassName: r
  } = e, n = t.length === 1, o = t[0], a = t.length, i = (s) => {
    const l = [];
    let c = 0, u = 0, f;
    for (let m = 0; m < s.length; m++) {
      let w = s[m];
      if (c === 0) {
        if (w === o && (n || s.slice(m, m + a) === t)) {
          l.push(s.slice(u, m)), u = m + a;
          continue;
        }
        if (w === "/") {
          f = m;
          continue;
        }
      }
      w === "[" ? c++ : w === "]" && c--;
    }
    const p = l.length === 0 ? s : s.substring(u), v = p.startsWith(Uq), x = v ? p.substring(1) : p, b = f && f > u ? f - u : void 0;
    return {
      modifiers: l,
      hasImportantModifier: v,
      baseClassName: x,
      maybePostfixModifierPosition: b
    };
  };
  return r ? (s) => r({
    className: s,
    parseClassName: i
  }) : i;
}, jSe = (e) => {
  if (e.length <= 1)
    return e;
  const t = [];
  let r = [];
  return e.forEach((n) => {
    n[0] === "[" ? (t.push(...r.sort(), n), r = []) : r.push(n);
  }), t.push(...r.sort()), t;
}, ISe = (e) => ({
  cache: _Se(e.cacheSize),
  parseClassName: NSe(e),
  ...ESe(e)
}), TSe = /\s+/, MSe = (e, t) => {
  const {
    parseClassName: r,
    getClassGroupId: n,
    getConflictingClassGroupIds: o
  } = t, a = [], i = e.trim().split(TSe);
  let s = "";
  for (let l = i.length - 1; l >= 0; l -= 1) {
    const c = i[l], {
      modifiers: u,
      hasImportantModifier: f,
      baseClassName: p,
      maybePostfixModifierPosition: v
    } = r(c);
    let x = !!v, b = n(x ? p.substring(0, v) : p);
    if (!b) {
      if (!x) {
        s = c + (s.length > 0 ? " " + s : s);
        continue;
      }
      if (b = n(p), !b) {
        s = c + (s.length > 0 ? " " + s : s);
        continue;
      }
      x = !1;
    }
    const m = jSe(u).join(":"), w = f ? m + Uq : m, $ = w + b;
    if (a.includes($))
      continue;
    a.push($);
    const E = o(b, x);
    for (let S = 0; S < E.length; ++S) {
      const h = E[S];
      a.push(w + h);
    }
    s = c + (s.length > 0 ? " " + s : s);
  }
  return s;
};
function RSe() {
  let e = 0, t, r, n = "";
  for (; e < arguments.length; )
    (t = arguments[e++]) && (r = Yq(t)) && (n && (n += " "), n += r);
  return n;
}
const Yq = (e) => {
  if (typeof e == "string")
    return e;
  let t, r = "";
  for (let n = 0; n < e.length; n++)
    e[n] && (t = Yq(e[n])) && (r && (r += " "), r += t);
  return r;
};
function zSe(e, ...t) {
  let r, n, o, a = i;
  function i(l) {
    const c = t.reduce((u, f) => f(u), e());
    return r = ISe(c), n = r.cache.get, o = r.cache.set, a = s, s(l);
  }
  function s(l) {
    const c = n(l);
    if (c)
      return c;
    const u = MSe(l, r);
    return o(l, u), u;
  }
  return function() {
    return a(RSe.apply(null, arguments));
  };
}
const Cr = (e) => {
  const t = (r) => r[e] || [];
  return t.isThemeGetter = !0, t;
}, Hq = /^\[(?:([a-z-]+):)?(.+)\]$/i, FSe = /^\d+\/\d+$/, DSe = /* @__PURE__ */ new Set(["px", "full", "screen"]), LSe = /^(\d+(\.\d+)?)?(xs|sm|md|lg|xl)$/, VSe = /\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\b(calc|min|max|clamp)\(.+\)|^0$/, WSe = /^(rgba?|hsla?|hwb|(ok)?(lab|lch))\(.+\)$/, USe = /^(inset_)?-?((\d+)?\.?(\d+)[a-z]+|0)_-?((\d+)?\.?(\d+)[a-z]+|0)/, YSe = /^(url|image|image-set|cross-fade|element|(repeating-)?(linear|radial|conic)-gradient)\(.+\)$/, Ba = (e) => Bf(e) || DSe.has(e) || FSe.test(e), Qs = (e) => qd(e, "length", QSe), Bf = (e) => !!e && !Number.isNaN(Number(e)), mk = (e) => qd(e, "number", Bf), _m = (e) => !!e && Number.isInteger(Number(e)), HSe = (e) => e.endsWith("%") && Bf(e.slice(0, -1)), mt = (e) => Hq.test(e), Zs = (e) => LSe.test(e), GSe = /* @__PURE__ */ new Set(["length", "size", "percentage"]), qSe = (e) => qd(e, GSe, Gq), BSe = (e) => qd(e, "position", Gq), XSe = /* @__PURE__ */ new Set(["image", "url"]), KSe = (e) => qd(e, XSe, ePe), JSe = (e) => qd(e, "", ZSe), Nm = () => !0, qd = (e, t, r) => {
  const n = Hq.exec(e);
  return n ? n[1] ? typeof t == "string" ? n[1] === t : t.has(n[1]) : r(n[2]) : !1;
}, QSe = (e) => (
  // `colorFunctionRegex` check is necessary because color functions can have percentages in them which which would be incorrectly classified as lengths.
  // For example, `hsl(0 0% 0%)` would be classified as a length without this check.
  // I could also use lookbehind assertion in `lengthUnitRegex` but that isn't supported widely enough.
  VSe.test(e) && !WSe.test(e)
), Gq = () => !1, ZSe = (e) => USe.test(e), ePe = (e) => YSe.test(e), tPe = () => {
  const e = Cr("colors"), t = Cr("spacing"), r = Cr("blur"), n = Cr("brightness"), o = Cr("borderColor"), a = Cr("borderRadius"), i = Cr("borderSpacing"), s = Cr("borderWidth"), l = Cr("contrast"), c = Cr("grayscale"), u = Cr("hueRotate"), f = Cr("invert"), p = Cr("gap"), v = Cr("gradientColorStops"), x = Cr("gradientColorStopPositions"), b = Cr("inset"), m = Cr("margin"), w = Cr("opacity"), $ = Cr("padding"), E = Cr("saturate"), S = Cr("scale"), h = Cr("sepia"), U = Cr("skew"), G = Cr("space"), Q = Cr("translate"), Z = () => ["auto", "contain", "none"], X = () => ["auto", "hidden", "clip", "visible", "scroll"], J = () => ["auto", mt, t], I = () => [mt, t], te = () => ["", Ba, Qs], V = () => ["auto", Bf, mt], D = () => ["bottom", "center", "left", "left-bottom", "left-top", "right", "right-bottom", "right-top", "top"], F = () => ["solid", "dashed", "dotted", "double", "none"], R = () => ["normal", "multiply", "screen", "overlay", "darken", "lighten", "color-dodge", "color-burn", "hard-light", "soft-light", "difference", "exclusion", "hue", "saturation", "color", "luminosity"], H = () => ["start", "end", "center", "between", "around", "evenly", "stretch"], B = () => ["", "0", mt], g = () => ["auto", "avoid", "all", "avoid-page", "page", "left", "right", "column"], d = () => [Bf, mt];
  return {
    cacheSize: 500,
    separator: ":",
    theme: {
      colors: [Nm],
      spacing: [Ba, Qs],
      blur: ["none", "", Zs, mt],
      brightness: d(),
      borderColor: [e],
      borderRadius: ["none", "", "full", Zs, mt],
      borderSpacing: I(),
      borderWidth: te(),
      contrast: d(),
      grayscale: B(),
      hueRotate: d(),
      invert: B(),
      gap: I(),
      gradientColorStops: [e],
      gradientColorStopPositions: [HSe, Qs],
      inset: J(),
      margin: J(),
      opacity: d(),
      padding: I(),
      saturate: d(),
      scale: d(),
      sepia: B(),
      skew: d(),
      space: I(),
      translate: I()
    },
    classGroups: {
      // Layout
      /**
       * Aspect Ratio
       * @see https://tailwindcss.com/docs/aspect-ratio
       */
      aspect: [{
        aspect: ["auto", "square", "video", mt]
      }],
      /**
       * Container
       * @see https://tailwindcss.com/docs/container
       */
      container: ["container"],
      /**
       * Columns
       * @see https://tailwindcss.com/docs/columns
       */
      columns: [{
        columns: [Zs]
      }],
      /**
       * Break After
       * @see https://tailwindcss.com/docs/break-after
       */
      "break-after": [{
        "break-after": g()
      }],
      /**
       * Break Before
       * @see https://tailwindcss.com/docs/break-before
       */
      "break-before": [{
        "break-before": g()
      }],
      /**
       * Break Inside
       * @see https://tailwindcss.com/docs/break-inside
       */
      "break-inside": [{
        "break-inside": ["auto", "avoid", "avoid-page", "avoid-column"]
      }],
      /**
       * Box Decoration Break
       * @see https://tailwindcss.com/docs/box-decoration-break
       */
      "box-decoration": [{
        "box-decoration": ["slice", "clone"]
      }],
      /**
       * Box Sizing
       * @see https://tailwindcss.com/docs/box-sizing
       */
      box: [{
        box: ["border", "content"]
      }],
      /**
       * Display
       * @see https://tailwindcss.com/docs/display
       */
      display: ["block", "inline-block", "inline", "flex", "inline-flex", "table", "inline-table", "table-caption", "table-cell", "table-column", "table-column-group", "table-footer-group", "table-header-group", "table-row-group", "table-row", "flow-root", "grid", "inline-grid", "contents", "list-item", "hidden"],
      /**
       * Floats
       * @see https://tailwindcss.com/docs/float
       */
      float: [{
        float: ["right", "left", "none", "start", "end"]
      }],
      /**
       * Clear
       * @see https://tailwindcss.com/docs/clear
       */
      clear: [{
        clear: ["left", "right", "both", "none", "start", "end"]
      }],
      /**
       * Isolation
       * @see https://tailwindcss.com/docs/isolation
       */
      isolation: ["isolate", "isolation-auto"],
      /**
       * Object Fit
       * @see https://tailwindcss.com/docs/object-fit
       */
      "object-fit": [{
        object: ["contain", "cover", "fill", "none", "scale-down"]
      }],
      /**
       * Object Position
       * @see https://tailwindcss.com/docs/object-position
       */
      "object-position": [{
        object: [...D(), mt]
      }],
      /**
       * Overflow
       * @see https://tailwindcss.com/docs/overflow
       */
      overflow: [{
        overflow: X()
      }],
      /**
       * Overflow X
       * @see https://tailwindcss.com/docs/overflow
       */
      "overflow-x": [{
        "overflow-x": X()
      }],
      /**
       * Overflow Y
       * @see https://tailwindcss.com/docs/overflow
       */
      "overflow-y": [{
        "overflow-y": X()
      }],
      /**
       * Overscroll Behavior
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      overscroll: [{
        overscroll: Z()
      }],
      /**
       * Overscroll Behavior X
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      "overscroll-x": [{
        "overscroll-x": Z()
      }],
      /**
       * Overscroll Behavior Y
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      "overscroll-y": [{
        "overscroll-y": Z()
      }],
      /**
       * Position
       * @see https://tailwindcss.com/docs/position
       */
      position: ["static", "fixed", "absolute", "relative", "sticky"],
      /**
       * Top / Right / Bottom / Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      inset: [{
        inset: [b]
      }],
      /**
       * Right / Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      "inset-x": [{
        "inset-x": [b]
      }],
      /**
       * Top / Bottom
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      "inset-y": [{
        "inset-y": [b]
      }],
      /**
       * Start
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      start: [{
        start: [b]
      }],
      /**
       * End
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      end: [{
        end: [b]
      }],
      /**
       * Top
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      top: [{
        top: [b]
      }],
      /**
       * Right
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      right: [{
        right: [b]
      }],
      /**
       * Bottom
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      bottom: [{
        bottom: [b]
      }],
      /**
       * Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      left: [{
        left: [b]
      }],
      /**
       * Visibility
       * @see https://tailwindcss.com/docs/visibility
       */
      visibility: ["visible", "invisible", "collapse"],
      /**
       * Z-Index
       * @see https://tailwindcss.com/docs/z-index
       */
      z: [{
        z: ["auto", _m, mt]
      }],
      // Flexbox and Grid
      /**
       * Flex Basis
       * @see https://tailwindcss.com/docs/flex-basis
       */
      basis: [{
        basis: J()
      }],
      /**
       * Flex Direction
       * @see https://tailwindcss.com/docs/flex-direction
       */
      "flex-direction": [{
        flex: ["row", "row-reverse", "col", "col-reverse"]
      }],
      /**
       * Flex Wrap
       * @see https://tailwindcss.com/docs/flex-wrap
       */
      "flex-wrap": [{
        flex: ["wrap", "wrap-reverse", "nowrap"]
      }],
      /**
       * Flex
       * @see https://tailwindcss.com/docs/flex
       */
      flex: [{
        flex: ["1", "auto", "initial", "none", mt]
      }],
      /**
       * Flex Grow
       * @see https://tailwindcss.com/docs/flex-grow
       */
      grow: [{
        grow: B()
      }],
      /**
       * Flex Shrink
       * @see https://tailwindcss.com/docs/flex-shrink
       */
      shrink: [{
        shrink: B()
      }],
      /**
       * Order
       * @see https://tailwindcss.com/docs/order
       */
      order: [{
        order: ["first", "last", "none", _m, mt]
      }],
      /**
       * Grid Template Columns
       * @see https://tailwindcss.com/docs/grid-template-columns
       */
      "grid-cols": [{
        "grid-cols": [Nm]
      }],
      /**
       * Grid Column Start / End
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-start-end": [{
        col: ["auto", {
          span: ["full", _m, mt]
        }, mt]
      }],
      /**
       * Grid Column Start
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-start": [{
        "col-start": V()
      }],
      /**
       * Grid Column End
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-end": [{
        "col-end": V()
      }],
      /**
       * Grid Template Rows
       * @see https://tailwindcss.com/docs/grid-template-rows
       */
      "grid-rows": [{
        "grid-rows": [Nm]
      }],
      /**
       * Grid Row Start / End
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-start-end": [{
        row: ["auto", {
          span: [_m, mt]
        }, mt]
      }],
      /**
       * Grid Row Start
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-start": [{
        "row-start": V()
      }],
      /**
       * Grid Row End
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-end": [{
        "row-end": V()
      }],
      /**
       * Grid Auto Flow
       * @see https://tailwindcss.com/docs/grid-auto-flow
       */
      "grid-flow": [{
        "grid-flow": ["row", "col", "dense", "row-dense", "col-dense"]
      }],
      /**
       * Grid Auto Columns
       * @see https://tailwindcss.com/docs/grid-auto-columns
       */
      "auto-cols": [{
        "auto-cols": ["auto", "min", "max", "fr", mt]
      }],
      /**
       * Grid Auto Rows
       * @see https://tailwindcss.com/docs/grid-auto-rows
       */
      "auto-rows": [{
        "auto-rows": ["auto", "min", "max", "fr", mt]
      }],
      /**
       * Gap
       * @see https://tailwindcss.com/docs/gap
       */
      gap: [{
        gap: [p]
      }],
      /**
       * Gap X
       * @see https://tailwindcss.com/docs/gap
       */
      "gap-x": [{
        "gap-x": [p]
      }],
      /**
       * Gap Y
       * @see https://tailwindcss.com/docs/gap
       */
      "gap-y": [{
        "gap-y": [p]
      }],
      /**
       * Justify Content
       * @see https://tailwindcss.com/docs/justify-content
       */
      "justify-content": [{
        justify: ["normal", ...H()]
      }],
      /**
       * Justify Items
       * @see https://tailwindcss.com/docs/justify-items
       */
      "justify-items": [{
        "justify-items": ["start", "end", "center", "stretch"]
      }],
      /**
       * Justify Self
       * @see https://tailwindcss.com/docs/justify-self
       */
      "justify-self": [{
        "justify-self": ["auto", "start", "end", "center", "stretch"]
      }],
      /**
       * Align Content
       * @see https://tailwindcss.com/docs/align-content
       */
      "align-content": [{
        content: ["normal", ...H(), "baseline"]
      }],
      /**
       * Align Items
       * @see https://tailwindcss.com/docs/align-items
       */
      "align-items": [{
        items: ["start", "end", "center", "baseline", "stretch"]
      }],
      /**
       * Align Self
       * @see https://tailwindcss.com/docs/align-self
       */
      "align-self": [{
        self: ["auto", "start", "end", "center", "stretch", "baseline"]
      }],
      /**
       * Place Content
       * @see https://tailwindcss.com/docs/place-content
       */
      "place-content": [{
        "place-content": [...H(), "baseline"]
      }],
      /**
       * Place Items
       * @see https://tailwindcss.com/docs/place-items
       */
      "place-items": [{
        "place-items": ["start", "end", "center", "baseline", "stretch"]
      }],
      /**
       * Place Self
       * @see https://tailwindcss.com/docs/place-self
       */
      "place-self": [{
        "place-self": ["auto", "start", "end", "center", "stretch"]
      }],
      // Spacing
      /**
       * Padding
       * @see https://tailwindcss.com/docs/padding
       */
      p: [{
        p: [$]
      }],
      /**
       * Padding X
       * @see https://tailwindcss.com/docs/padding
       */
      px: [{
        px: [$]
      }],
      /**
       * Padding Y
       * @see https://tailwindcss.com/docs/padding
       */
      py: [{
        py: [$]
      }],
      /**
       * Padding Start
       * @see https://tailwindcss.com/docs/padding
       */
      ps: [{
        ps: [$]
      }],
      /**
       * Padding End
       * @see https://tailwindcss.com/docs/padding
       */
      pe: [{
        pe: [$]
      }],
      /**
       * Padding Top
       * @see https://tailwindcss.com/docs/padding
       */
      pt: [{
        pt: [$]
      }],
      /**
       * Padding Right
       * @see https://tailwindcss.com/docs/padding
       */
      pr: [{
        pr: [$]
      }],
      /**
       * Padding Bottom
       * @see https://tailwindcss.com/docs/padding
       */
      pb: [{
        pb: [$]
      }],
      /**
       * Padding Left
       * @see https://tailwindcss.com/docs/padding
       */
      pl: [{
        pl: [$]
      }],
      /**
       * Margin
       * @see https://tailwindcss.com/docs/margin
       */
      m: [{
        m: [m]
      }],
      /**
       * Margin X
       * @see https://tailwindcss.com/docs/margin
       */
      mx: [{
        mx: [m]
      }],
      /**
       * Margin Y
       * @see https://tailwindcss.com/docs/margin
       */
      my: [{
        my: [m]
      }],
      /**
       * Margin Start
       * @see https://tailwindcss.com/docs/margin
       */
      ms: [{
        ms: [m]
      }],
      /**
       * Margin End
       * @see https://tailwindcss.com/docs/margin
       */
      me: [{
        me: [m]
      }],
      /**
       * Margin Top
       * @see https://tailwindcss.com/docs/margin
       */
      mt: [{
        mt: [m]
      }],
      /**
       * Margin Right
       * @see https://tailwindcss.com/docs/margin
       */
      mr: [{
        mr: [m]
      }],
      /**
       * Margin Bottom
       * @see https://tailwindcss.com/docs/margin
       */
      mb: [{
        mb: [m]
      }],
      /**
       * Margin Left
       * @see https://tailwindcss.com/docs/margin
       */
      ml: [{
        ml: [m]
      }],
      /**
       * Space Between X
       * @see https://tailwindcss.com/docs/space
       */
      "space-x": [{
        "space-x": [G]
      }],
      /**
       * Space Between X Reverse
       * @see https://tailwindcss.com/docs/space
       */
      "space-x-reverse": ["space-x-reverse"],
      /**
       * Space Between Y
       * @see https://tailwindcss.com/docs/space
       */
      "space-y": [{
        "space-y": [G]
      }],
      /**
       * Space Between Y Reverse
       * @see https://tailwindcss.com/docs/space
       */
      "space-y-reverse": ["space-y-reverse"],
      // Sizing
      /**
       * Width
       * @see https://tailwindcss.com/docs/width
       */
      w: [{
        w: ["auto", "min", "max", "fit", "svw", "lvw", "dvw", mt, t]
      }],
      /**
       * Min-Width
       * @see https://tailwindcss.com/docs/min-width
       */
      "min-w": [{
        "min-w": [mt, t, "min", "max", "fit"]
      }],
      /**
       * Max-Width
       * @see https://tailwindcss.com/docs/max-width
       */
      "max-w": [{
        "max-w": [mt, t, "none", "full", "min", "max", "fit", "prose", {
          screen: [Zs]
        }, Zs]
      }],
      /**
       * Height
       * @see https://tailwindcss.com/docs/height
       */
      h: [{
        h: [mt, t, "auto", "min", "max", "fit", "svh", "lvh", "dvh"]
      }],
      /**
       * Min-Height
       * @see https://tailwindcss.com/docs/min-height
       */
      "min-h": [{
        "min-h": [mt, t, "min", "max", "fit", "svh", "lvh", "dvh"]
      }],
      /**
       * Max-Height
       * @see https://tailwindcss.com/docs/max-height
       */
      "max-h": [{
        "max-h": [mt, t, "min", "max", "fit", "svh", "lvh", "dvh"]
      }],
      /**
       * Size
       * @see https://tailwindcss.com/docs/size
       */
      size: [{
        size: [mt, t, "auto", "min", "max", "fit"]
      }],
      // Typography
      /**
       * Font Size
       * @see https://tailwindcss.com/docs/font-size
       */
      "font-size": [{
        text: ["base", Zs, Qs]
      }],
      /**
       * Font Smoothing
       * @see https://tailwindcss.com/docs/font-smoothing
       */
      "font-smoothing": ["antialiased", "subpixel-antialiased"],
      /**
       * Font Style
       * @see https://tailwindcss.com/docs/font-style
       */
      "font-style": ["italic", "not-italic"],
      /**
       * Font Weight
       * @see https://tailwindcss.com/docs/font-weight
       */
      "font-weight": [{
        font: ["thin", "extralight", "light", "normal", "medium", "semibold", "bold", "extrabold", "black", mk]
      }],
      /**
       * Font Family
       * @see https://tailwindcss.com/docs/font-family
       */
      "font-family": [{
        font: [Nm]
      }],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-normal": ["normal-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-ordinal": ["ordinal"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-slashed-zero": ["slashed-zero"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-figure": ["lining-nums", "oldstyle-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-spacing": ["proportional-nums", "tabular-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-fraction": ["diagonal-fractions", "stacked-fractions"],
      /**
       * Letter Spacing
       * @see https://tailwindcss.com/docs/letter-spacing
       */
      tracking: [{
        tracking: ["tighter", "tight", "normal", "wide", "wider", "widest", mt]
      }],
      /**
       * Line Clamp
       * @see https://tailwindcss.com/docs/line-clamp
       */
      "line-clamp": [{
        "line-clamp": ["none", Bf, mk]
      }],
      /**
       * Line Height
       * @see https://tailwindcss.com/docs/line-height
       */
      leading: [{
        leading: ["none", "tight", "snug", "normal", "relaxed", "loose", Ba, mt]
      }],
      /**
       * List Style Image
       * @see https://tailwindcss.com/docs/list-style-image
       */
      "list-image": [{
        "list-image": ["none", mt]
      }],
      /**
       * List Style Type
       * @see https://tailwindcss.com/docs/list-style-type
       */
      "list-style-type": [{
        list: ["none", "disc", "decimal", mt]
      }],
      /**
       * List Style Position
       * @see https://tailwindcss.com/docs/list-style-position
       */
      "list-style-position": [{
        list: ["inside", "outside"]
      }],
      /**
       * Placeholder Color
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/placeholder-color
       */
      "placeholder-color": [{
        placeholder: [e]
      }],
      /**
       * Placeholder Opacity
       * @see https://tailwindcss.com/docs/placeholder-opacity
       */
      "placeholder-opacity": [{
        "placeholder-opacity": [w]
      }],
      /**
       * Text Alignment
       * @see https://tailwindcss.com/docs/text-align
       */
      "text-alignment": [{
        text: ["left", "center", "right", "justify", "start", "end"]
      }],
      /**
       * Text Color
       * @see https://tailwindcss.com/docs/text-color
       */
      "text-color": [{
        text: [e]
      }],
      /**
       * Text Opacity
       * @see https://tailwindcss.com/docs/text-opacity
       */
      "text-opacity": [{
        "text-opacity": [w]
      }],
      /**
       * Text Decoration
       * @see https://tailwindcss.com/docs/text-decoration
       */
      "text-decoration": ["underline", "overline", "line-through", "no-underline"],
      /**
       * Text Decoration Style
       * @see https://tailwindcss.com/docs/text-decoration-style
       */
      "text-decoration-style": [{
        decoration: [...F(), "wavy"]
      }],
      /**
       * Text Decoration Thickness
       * @see https://tailwindcss.com/docs/text-decoration-thickness
       */
      "text-decoration-thickness": [{
        decoration: ["auto", "from-font", Ba, Qs]
      }],
      /**
       * Text Underline Offset
       * @see https://tailwindcss.com/docs/text-underline-offset
       */
      "underline-offset": [{
        "underline-offset": ["auto", Ba, mt]
      }],
      /**
       * Text Decoration Color
       * @see https://tailwindcss.com/docs/text-decoration-color
       */
      "text-decoration-color": [{
        decoration: [e]
      }],
      /**
       * Text Transform
       * @see https://tailwindcss.com/docs/text-transform
       */
      "text-transform": ["uppercase", "lowercase", "capitalize", "normal-case"],
      /**
       * Text Overflow
       * @see https://tailwindcss.com/docs/text-overflow
       */
      "text-overflow": ["truncate", "text-ellipsis", "text-clip"],
      /**
       * Text Wrap
       * @see https://tailwindcss.com/docs/text-wrap
       */
      "text-wrap": [{
        text: ["wrap", "nowrap", "balance", "pretty"]
      }],
      /**
       * Text Indent
       * @see https://tailwindcss.com/docs/text-indent
       */
      indent: [{
        indent: I()
      }],
      /**
       * Vertical Alignment
       * @see https://tailwindcss.com/docs/vertical-align
       */
      "vertical-align": [{
        align: ["baseline", "top", "middle", "bottom", "text-top", "text-bottom", "sub", "super", mt]
      }],
      /**
       * Whitespace
       * @see https://tailwindcss.com/docs/whitespace
       */
      whitespace: [{
        whitespace: ["normal", "nowrap", "pre", "pre-line", "pre-wrap", "break-spaces"]
      }],
      /**
       * Word Break
       * @see https://tailwindcss.com/docs/word-break
       */
      break: [{
        break: ["normal", "words", "all", "keep"]
      }],
      /**
       * Hyphens
       * @see https://tailwindcss.com/docs/hyphens
       */
      hyphens: [{
        hyphens: ["none", "manual", "auto"]
      }],
      /**
       * Content
       * @see https://tailwindcss.com/docs/content
       */
      content: [{
        content: ["none", mt]
      }],
      // Backgrounds
      /**
       * Background Attachment
       * @see https://tailwindcss.com/docs/background-attachment
       */
      "bg-attachment": [{
        bg: ["fixed", "local", "scroll"]
      }],
      /**
       * Background Clip
       * @see https://tailwindcss.com/docs/background-clip
       */
      "bg-clip": [{
        "bg-clip": ["border", "padding", "content", "text"]
      }],
      /**
       * Background Opacity
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/background-opacity
       */
      "bg-opacity": [{
        "bg-opacity": [w]
      }],
      /**
       * Background Origin
       * @see https://tailwindcss.com/docs/background-origin
       */
      "bg-origin": [{
        "bg-origin": ["border", "padding", "content"]
      }],
      /**
       * Background Position
       * @see https://tailwindcss.com/docs/background-position
       */
      "bg-position": [{
        bg: [...D(), BSe]
      }],
      /**
       * Background Repeat
       * @see https://tailwindcss.com/docs/background-repeat
       */
      "bg-repeat": [{
        bg: ["no-repeat", {
          repeat: ["", "x", "y", "round", "space"]
        }]
      }],
      /**
       * Background Size
       * @see https://tailwindcss.com/docs/background-size
       */
      "bg-size": [{
        bg: ["auto", "cover", "contain", qSe]
      }],
      /**
       * Background Image
       * @see https://tailwindcss.com/docs/background-image
       */
      "bg-image": [{
        bg: ["none", {
          "gradient-to": ["t", "tr", "r", "br", "b", "bl", "l", "tl"]
        }, KSe]
      }],
      /**
       * Background Color
       * @see https://tailwindcss.com/docs/background-color
       */
      "bg-color": [{
        bg: [e]
      }],
      /**
       * Gradient Color Stops From Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-from-pos": [{
        from: [x]
      }],
      /**
       * Gradient Color Stops Via Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-via-pos": [{
        via: [x]
      }],
      /**
       * Gradient Color Stops To Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-to-pos": [{
        to: [x]
      }],
      /**
       * Gradient Color Stops From
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-from": [{
        from: [v]
      }],
      /**
       * Gradient Color Stops Via
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-via": [{
        via: [v]
      }],
      /**
       * Gradient Color Stops To
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-to": [{
        to: [v]
      }],
      // Borders
      /**
       * Border Radius
       * @see https://tailwindcss.com/docs/border-radius
       */
      rounded: [{
        rounded: [a]
      }],
      /**
       * Border Radius Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-s": [{
        "rounded-s": [a]
      }],
      /**
       * Border Radius End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-e": [{
        "rounded-e": [a]
      }],
      /**
       * Border Radius Top
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-t": [{
        "rounded-t": [a]
      }],
      /**
       * Border Radius Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-r": [{
        "rounded-r": [a]
      }],
      /**
       * Border Radius Bottom
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-b": [{
        "rounded-b": [a]
      }],
      /**
       * Border Radius Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-l": [{
        "rounded-l": [a]
      }],
      /**
       * Border Radius Start Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-ss": [{
        "rounded-ss": [a]
      }],
      /**
       * Border Radius Start End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-se": [{
        "rounded-se": [a]
      }],
      /**
       * Border Radius End End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-ee": [{
        "rounded-ee": [a]
      }],
      /**
       * Border Radius End Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-es": [{
        "rounded-es": [a]
      }],
      /**
       * Border Radius Top Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-tl": [{
        "rounded-tl": [a]
      }],
      /**
       * Border Radius Top Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-tr": [{
        "rounded-tr": [a]
      }],
      /**
       * Border Radius Bottom Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-br": [{
        "rounded-br": [a]
      }],
      /**
       * Border Radius Bottom Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-bl": [{
        "rounded-bl": [a]
      }],
      /**
       * Border Width
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w": [{
        border: [s]
      }],
      /**
       * Border Width X
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-x": [{
        "border-x": [s]
      }],
      /**
       * Border Width Y
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-y": [{
        "border-y": [s]
      }],
      /**
       * Border Width Start
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-s": [{
        "border-s": [s]
      }],
      /**
       * Border Width End
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-e": [{
        "border-e": [s]
      }],
      /**
       * Border Width Top
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-t": [{
        "border-t": [s]
      }],
      /**
       * Border Width Right
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-r": [{
        "border-r": [s]
      }],
      /**
       * Border Width Bottom
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-b": [{
        "border-b": [s]
      }],
      /**
       * Border Width Left
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-l": [{
        "border-l": [s]
      }],
      /**
       * Border Opacity
       * @see https://tailwindcss.com/docs/border-opacity
       */
      "border-opacity": [{
        "border-opacity": [w]
      }],
      /**
       * Border Style
       * @see https://tailwindcss.com/docs/border-style
       */
      "border-style": [{
        border: [...F(), "hidden"]
      }],
      /**
       * Divide Width X
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-x": [{
        "divide-x": [s]
      }],
      /**
       * Divide Width X Reverse
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-x-reverse": ["divide-x-reverse"],
      /**
       * Divide Width Y
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-y": [{
        "divide-y": [s]
      }],
      /**
       * Divide Width Y Reverse
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-y-reverse": ["divide-y-reverse"],
      /**
       * Divide Opacity
       * @see https://tailwindcss.com/docs/divide-opacity
       */
      "divide-opacity": [{
        "divide-opacity": [w]
      }],
      /**
       * Divide Style
       * @see https://tailwindcss.com/docs/divide-style
       */
      "divide-style": [{
        divide: F()
      }],
      /**
       * Border Color
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color": [{
        border: [o]
      }],
      /**
       * Border Color X
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-x": [{
        "border-x": [o]
      }],
      /**
       * Border Color Y
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-y": [{
        "border-y": [o]
      }],
      /**
       * Border Color S
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-s": [{
        "border-s": [o]
      }],
      /**
       * Border Color E
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-e": [{
        "border-e": [o]
      }],
      /**
       * Border Color Top
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-t": [{
        "border-t": [o]
      }],
      /**
       * Border Color Right
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-r": [{
        "border-r": [o]
      }],
      /**
       * Border Color Bottom
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-b": [{
        "border-b": [o]
      }],
      /**
       * Border Color Left
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-l": [{
        "border-l": [o]
      }],
      /**
       * Divide Color
       * @see https://tailwindcss.com/docs/divide-color
       */
      "divide-color": [{
        divide: [o]
      }],
      /**
       * Outline Style
       * @see https://tailwindcss.com/docs/outline-style
       */
      "outline-style": [{
        outline: ["", ...F()]
      }],
      /**
       * Outline Offset
       * @see https://tailwindcss.com/docs/outline-offset
       */
      "outline-offset": [{
        "outline-offset": [Ba, mt]
      }],
      /**
       * Outline Width
       * @see https://tailwindcss.com/docs/outline-width
       */
      "outline-w": [{
        outline: [Ba, Qs]
      }],
      /**
       * Outline Color
       * @see https://tailwindcss.com/docs/outline-color
       */
      "outline-color": [{
        outline: [e]
      }],
      /**
       * Ring Width
       * @see https://tailwindcss.com/docs/ring-width
       */
      "ring-w": [{
        ring: te()
      }],
      /**
       * Ring Width Inset
       * @see https://tailwindcss.com/docs/ring-width
       */
      "ring-w-inset": ["ring-inset"],
      /**
       * Ring Color
       * @see https://tailwindcss.com/docs/ring-color
       */
      "ring-color": [{
        ring: [e]
      }],
      /**
       * Ring Opacity
       * @see https://tailwindcss.com/docs/ring-opacity
       */
      "ring-opacity": [{
        "ring-opacity": [w]
      }],
      /**
       * Ring Offset Width
       * @see https://tailwindcss.com/docs/ring-offset-width
       */
      "ring-offset-w": [{
        "ring-offset": [Ba, Qs]
      }],
      /**
       * Ring Offset Color
       * @see https://tailwindcss.com/docs/ring-offset-color
       */
      "ring-offset-color": [{
        "ring-offset": [e]
      }],
      // Effects
      /**
       * Box Shadow
       * @see https://tailwindcss.com/docs/box-shadow
       */
      shadow: [{
        shadow: ["", "inner", "none", Zs, JSe]
      }],
      /**
       * Box Shadow Color
       * @see https://tailwindcss.com/docs/box-shadow-color
       */
      "shadow-color": [{
        shadow: [Nm]
      }],
      /**
       * Opacity
       * @see https://tailwindcss.com/docs/opacity
       */
      opacity: [{
        opacity: [w]
      }],
      /**
       * Mix Blend Mode
       * @see https://tailwindcss.com/docs/mix-blend-mode
       */
      "mix-blend": [{
        "mix-blend": [...R(), "plus-lighter", "plus-darker"]
      }],
      /**
       * Background Blend Mode
       * @see https://tailwindcss.com/docs/background-blend-mode
       */
      "bg-blend": [{
        "bg-blend": R()
      }],
      // Filters
      /**
       * Filter
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/filter
       */
      filter: [{
        filter: ["", "none"]
      }],
      /**
       * Blur
       * @see https://tailwindcss.com/docs/blur
       */
      blur: [{
        blur: [r]
      }],
      /**
       * Brightness
       * @see https://tailwindcss.com/docs/brightness
       */
      brightness: [{
        brightness: [n]
      }],
      /**
       * Contrast
       * @see https://tailwindcss.com/docs/contrast
       */
      contrast: [{
        contrast: [l]
      }],
      /**
       * Drop Shadow
       * @see https://tailwindcss.com/docs/drop-shadow
       */
      "drop-shadow": [{
        "drop-shadow": ["", "none", Zs, mt]
      }],
      /**
       * Grayscale
       * @see https://tailwindcss.com/docs/grayscale
       */
      grayscale: [{
        grayscale: [c]
      }],
      /**
       * Hue Rotate
       * @see https://tailwindcss.com/docs/hue-rotate
       */
      "hue-rotate": [{
        "hue-rotate": [u]
      }],
      /**
       * Invert
       * @see https://tailwindcss.com/docs/invert
       */
      invert: [{
        invert: [f]
      }],
      /**
       * Saturate
       * @see https://tailwindcss.com/docs/saturate
       */
      saturate: [{
        saturate: [E]
      }],
      /**
       * Sepia
       * @see https://tailwindcss.com/docs/sepia
       */
      sepia: [{
        sepia: [h]
      }],
      /**
       * Backdrop Filter
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/backdrop-filter
       */
      "backdrop-filter": [{
        "backdrop-filter": ["", "none"]
      }],
      /**
       * Backdrop Blur
       * @see https://tailwindcss.com/docs/backdrop-blur
       */
      "backdrop-blur": [{
        "backdrop-blur": [r]
      }],
      /**
       * Backdrop Brightness
       * @see https://tailwindcss.com/docs/backdrop-brightness
       */
      "backdrop-brightness": [{
        "backdrop-brightness": [n]
      }],
      /**
       * Backdrop Contrast
       * @see https://tailwindcss.com/docs/backdrop-contrast
       */
      "backdrop-contrast": [{
        "backdrop-contrast": [l]
      }],
      /**
       * Backdrop Grayscale
       * @see https://tailwindcss.com/docs/backdrop-grayscale
       */
      "backdrop-grayscale": [{
        "backdrop-grayscale": [c]
      }],
      /**
       * Backdrop Hue Rotate
       * @see https://tailwindcss.com/docs/backdrop-hue-rotate
       */
      "backdrop-hue-rotate": [{
        "backdrop-hue-rotate": [u]
      }],
      /**
       * Backdrop Invert
       * @see https://tailwindcss.com/docs/backdrop-invert
       */
      "backdrop-invert": [{
        "backdrop-invert": [f]
      }],
      /**
       * Backdrop Opacity
       * @see https://tailwindcss.com/docs/backdrop-opacity
       */
      "backdrop-opacity": [{
        "backdrop-opacity": [w]
      }],
      /**
       * Backdrop Saturate
       * @see https://tailwindcss.com/docs/backdrop-saturate
       */
      "backdrop-saturate": [{
        "backdrop-saturate": [E]
      }],
      /**
       * Backdrop Sepia
       * @see https://tailwindcss.com/docs/backdrop-sepia
       */
      "backdrop-sepia": [{
        "backdrop-sepia": [h]
      }],
      // Tables
      /**
       * Border Collapse
       * @see https://tailwindcss.com/docs/border-collapse
       */
      "border-collapse": [{
        border: ["collapse", "separate"]
      }],
      /**
       * Border Spacing
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing": [{
        "border-spacing": [i]
      }],
      /**
       * Border Spacing X
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing-x": [{
        "border-spacing-x": [i]
      }],
      /**
       * Border Spacing Y
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing-y": [{
        "border-spacing-y": [i]
      }],
      /**
       * Table Layout
       * @see https://tailwindcss.com/docs/table-layout
       */
      "table-layout": [{
        table: ["auto", "fixed"]
      }],
      /**
       * Caption Side
       * @see https://tailwindcss.com/docs/caption-side
       */
      caption: [{
        caption: ["top", "bottom"]
      }],
      // Transitions and Animation
      /**
       * Tranisition Property
       * @see https://tailwindcss.com/docs/transition-property
       */
      transition: [{
        transition: ["none", "all", "", "colors", "opacity", "shadow", "transform", mt]
      }],
      /**
       * Transition Duration
       * @see https://tailwindcss.com/docs/transition-duration
       */
      duration: [{
        duration: d()
      }],
      /**
       * Transition Timing Function
       * @see https://tailwindcss.com/docs/transition-timing-function
       */
      ease: [{
        ease: ["linear", "in", "out", "in-out", mt]
      }],
      /**
       * Transition Delay
       * @see https://tailwindcss.com/docs/transition-delay
       */
      delay: [{
        delay: d()
      }],
      /**
       * Animation
       * @see https://tailwindcss.com/docs/animation
       */
      animate: [{
        animate: ["none", "spin", "ping", "pulse", "bounce", mt]
      }],
      // Transforms
      /**
       * Transform
       * @see https://tailwindcss.com/docs/transform
       */
      transform: [{
        transform: ["", "gpu", "none"]
      }],
      /**
       * Scale
       * @see https://tailwindcss.com/docs/scale
       */
      scale: [{
        scale: [S]
      }],
      /**
       * Scale X
       * @see https://tailwindcss.com/docs/scale
       */
      "scale-x": [{
        "scale-x": [S]
      }],
      /**
       * Scale Y
       * @see https://tailwindcss.com/docs/scale
       */
      "scale-y": [{
        "scale-y": [S]
      }],
      /**
       * Rotate
       * @see https://tailwindcss.com/docs/rotate
       */
      rotate: [{
        rotate: [_m, mt]
      }],
      /**
       * Translate X
       * @see https://tailwindcss.com/docs/translate
       */
      "translate-x": [{
        "translate-x": [Q]
      }],
      /**
       * Translate Y
       * @see https://tailwindcss.com/docs/translate
       */
      "translate-y": [{
        "translate-y": [Q]
      }],
      /**
       * Skew X
       * @see https://tailwindcss.com/docs/skew
       */
      "skew-x": [{
        "skew-x": [U]
      }],
      /**
       * Skew Y
       * @see https://tailwindcss.com/docs/skew
       */
      "skew-y": [{
        "skew-y": [U]
      }],
      /**
       * Transform Origin
       * @see https://tailwindcss.com/docs/transform-origin
       */
      "transform-origin": [{
        origin: ["center", "top", "top-right", "right", "bottom-right", "bottom", "bottom-left", "left", "top-left", mt]
      }],
      // Interactivity
      /**
       * Accent Color
       * @see https://tailwindcss.com/docs/accent-color
       */
      accent: [{
        accent: ["auto", e]
      }],
      /**
       * Appearance
       * @see https://tailwindcss.com/docs/appearance
       */
      appearance: [{
        appearance: ["none", "auto"]
      }],
      /**
       * Cursor
       * @see https://tailwindcss.com/docs/cursor
       */
      cursor: [{
        cursor: ["auto", "default", "pointer", "wait", "text", "move", "help", "not-allowed", "none", "context-menu", "progress", "cell", "crosshair", "vertical-text", "alias", "copy", "no-drop", "grab", "grabbing", "all-scroll", "col-resize", "row-resize", "n-resize", "e-resize", "s-resize", "w-resize", "ne-resize", "nw-resize", "se-resize", "sw-resize", "ew-resize", "ns-resize", "nesw-resize", "nwse-resize", "zoom-in", "zoom-out", mt]
      }],
      /**
       * Caret Color
       * @see https://tailwindcss.com/docs/just-in-time-mode#caret-color-utilities
       */
      "caret-color": [{
        caret: [e]
      }],
      /**
       * Pointer Events
       * @see https://tailwindcss.com/docs/pointer-events
       */
      "pointer-events": [{
        "pointer-events": ["none", "auto"]
      }],
      /**
       * Resize
       * @see https://tailwindcss.com/docs/resize
       */
      resize: [{
        resize: ["none", "y", "x", ""]
      }],
      /**
       * Scroll Behavior
       * @see https://tailwindcss.com/docs/scroll-behavior
       */
      "scroll-behavior": [{
        scroll: ["auto", "smooth"]
      }],
      /**
       * Scroll Margin
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-m": [{
        "scroll-m": I()
      }],
      /**
       * Scroll Margin X
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mx": [{
        "scroll-mx": I()
      }],
      /**
       * Scroll Margin Y
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-my": [{
        "scroll-my": I()
      }],
      /**
       * Scroll Margin Start
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-ms": [{
        "scroll-ms": I()
      }],
      /**
       * Scroll Margin End
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-me": [{
        "scroll-me": I()
      }],
      /**
       * Scroll Margin Top
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mt": [{
        "scroll-mt": I()
      }],
      /**
       * Scroll Margin Right
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mr": [{
        "scroll-mr": I()
      }],
      /**
       * Scroll Margin Bottom
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mb": [{
        "scroll-mb": I()
      }],
      /**
       * Scroll Margin Left
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-ml": [{
        "scroll-ml": I()
      }],
      /**
       * Scroll Padding
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-p": [{
        "scroll-p": I()
      }],
      /**
       * Scroll Padding X
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-px": [{
        "scroll-px": I()
      }],
      /**
       * Scroll Padding Y
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-py": [{
        "scroll-py": I()
      }],
      /**
       * Scroll Padding Start
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-ps": [{
        "scroll-ps": I()
      }],
      /**
       * Scroll Padding End
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pe": [{
        "scroll-pe": I()
      }],
      /**
       * Scroll Padding Top
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pt": [{
        "scroll-pt": I()
      }],
      /**
       * Scroll Padding Right
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pr": [{
        "scroll-pr": I()
      }],
      /**
       * Scroll Padding Bottom
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pb": [{
        "scroll-pb": I()
      }],
      /**
       * Scroll Padding Left
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pl": [{
        "scroll-pl": I()
      }],
      /**
       * Scroll Snap Align
       * @see https://tailwindcss.com/docs/scroll-snap-align
       */
      "snap-align": [{
        snap: ["start", "end", "center", "align-none"]
      }],
      /**
       * Scroll Snap Stop
       * @see https://tailwindcss.com/docs/scroll-snap-stop
       */
      "snap-stop": [{
        snap: ["normal", "always"]
      }],
      /**
       * Scroll Snap Type
       * @see https://tailwindcss.com/docs/scroll-snap-type
       */
      "snap-type": [{
        snap: ["none", "x", "y", "both"]
      }],
      /**
       * Scroll Snap Type Strictness
       * @see https://tailwindcss.com/docs/scroll-snap-type
       */
      "snap-strictness": [{
        snap: ["mandatory", "proximity"]
      }],
      /**
       * Touch Action
       * @see https://tailwindcss.com/docs/touch-action
       */
      touch: [{
        touch: ["auto", "none", "manipulation"]
      }],
      /**
       * Touch Action X
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-x": [{
        "touch-pan": ["x", "left", "right"]
      }],
      /**
       * Touch Action Y
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-y": [{
        "touch-pan": ["y", "up", "down"]
      }],
      /**
       * Touch Action Pinch Zoom
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-pz": ["touch-pinch-zoom"],
      /**
       * User Select
       * @see https://tailwindcss.com/docs/user-select
       */
      select: [{
        select: ["none", "text", "all", "auto"]
      }],
      /**
       * Will Change
       * @see https://tailwindcss.com/docs/will-change
       */
      "will-change": [{
        "will-change": ["auto", "scroll", "contents", "transform", mt]
      }],
      // SVG
      /**
       * Fill
       * @see https://tailwindcss.com/docs/fill
       */
      fill: [{
        fill: [e, "none"]
      }],
      /**
       * Stroke Width
       * @see https://tailwindcss.com/docs/stroke-width
       */
      "stroke-w": [{
        stroke: [Ba, Qs, mk]
      }],
      /**
       * Stroke
       * @see https://tailwindcss.com/docs/stroke
       */
      stroke: [{
        stroke: [e, "none"]
      }],
      // Accessibility
      /**
       * Screen Readers
       * @see https://tailwindcss.com/docs/screen-readers
       */
      sr: ["sr-only", "not-sr-only"],
      /**
       * Forced Color Adjust
       * @see https://tailwindcss.com/docs/forced-color-adjust
       */
      "forced-color-adjust": [{
        "forced-color-adjust": ["auto", "none"]
      }]
    },
    conflictingClassGroups: {
      overflow: ["overflow-x", "overflow-y"],
      overscroll: ["overscroll-x", "overscroll-y"],
      inset: ["inset-x", "inset-y", "start", "end", "top", "right", "bottom", "left"],
      "inset-x": ["right", "left"],
      "inset-y": ["top", "bottom"],
      flex: ["basis", "grow", "shrink"],
      gap: ["gap-x", "gap-y"],
      p: ["px", "py", "ps", "pe", "pt", "pr", "pb", "pl"],
      px: ["pr", "pl"],
      py: ["pt", "pb"],
      m: ["mx", "my", "ms", "me", "mt", "mr", "mb", "ml"],
      mx: ["mr", "ml"],
      my: ["mt", "mb"],
      size: ["w", "h"],
      "font-size": ["leading"],
      "fvn-normal": ["fvn-ordinal", "fvn-slashed-zero", "fvn-figure", "fvn-spacing", "fvn-fraction"],
      "fvn-ordinal": ["fvn-normal"],
      "fvn-slashed-zero": ["fvn-normal"],
      "fvn-figure": ["fvn-normal"],
      "fvn-spacing": ["fvn-normal"],
      "fvn-fraction": ["fvn-normal"],
      "line-clamp": ["display", "overflow"],
      rounded: ["rounded-s", "rounded-e", "rounded-t", "rounded-r", "rounded-b", "rounded-l", "rounded-ss", "rounded-se", "rounded-ee", "rounded-es", "rounded-tl", "rounded-tr", "rounded-br", "rounded-bl"],
      "rounded-s": ["rounded-ss", "rounded-es"],
      "rounded-e": ["rounded-se", "rounded-ee"],
      "rounded-t": ["rounded-tl", "rounded-tr"],
      "rounded-r": ["rounded-tr", "rounded-br"],
      "rounded-b": ["rounded-br", "rounded-bl"],
      "rounded-l": ["rounded-tl", "rounded-bl"],
      "border-spacing": ["border-spacing-x", "border-spacing-y"],
      "border-w": ["border-w-s", "border-w-e", "border-w-t", "border-w-r", "border-w-b", "border-w-l"],
      "border-w-x": ["border-w-r", "border-w-l"],
      "border-w-y": ["border-w-t", "border-w-b"],
      "border-color": ["border-color-s", "border-color-e", "border-color-t", "border-color-r", "border-color-b", "border-color-l"],
      "border-color-x": ["border-color-r", "border-color-l"],
      "border-color-y": ["border-color-t", "border-color-b"],
      "scroll-m": ["scroll-mx", "scroll-my", "scroll-ms", "scroll-me", "scroll-mt", "scroll-mr", "scroll-mb", "scroll-ml"],
      "scroll-mx": ["scroll-mr", "scroll-ml"],
      "scroll-my": ["scroll-mt", "scroll-mb"],
      "scroll-p": ["scroll-px", "scroll-py", "scroll-ps", "scroll-pe", "scroll-pt", "scroll-pr", "scroll-pb", "scroll-pl"],
      "scroll-px": ["scroll-pr", "scroll-pl"],
      "scroll-py": ["scroll-pt", "scroll-pb"],
      touch: ["touch-x", "touch-y", "touch-pz"],
      "touch-x": ["touch"],
      "touch-y": ["touch"],
      "touch-pz": ["touch"]
    },
    conflictingClassGroupModifiers: {
      "font-size": ["leading"]
    }
  };
}, rPe = /* @__PURE__ */ zSe(tPe), nPe = ({
  onClick: e,
  className: t,
  size: r = "md"
}) => /* @__PURE__ */ q(
  "button",
  {
    onClick: e,
    className: rPe(
      "flex items-center justify-center rounded-full bg-black/40 text-white/60 transition-all hover:bg-black/70 hover:text-white",
      {
        sm: "h-5 w-5 text-sm",
        md: "h-7 w-7 text-md",
        lg: "h-9 w-9 text-xl"
      }[r],
      t
    ),
    children: /* @__PURE__ */ q(jC, { icon: t4e })
  }
), TC = "-", oPe = (e) => {
  const t = iPe(e), {
    conflictingClassGroups: r,
    conflictingClassGroupModifiers: n
  } = e;
  return {
    getClassGroupId: (o) => {
      const a = o.split(TC);
      return a[0] === "" && a.length !== 1 && a.shift(), qq(a, t) || aPe(o);
    },
    getConflictingClassGroupIds: (o, a) => {
      const i = r[o] || [];
      return a && n[o] ? [...i, ...n[o]] : i;
    }
  };
}, qq = (e, t) => {
  var r;
  if (e.length === 0)
    return t.classGroupId;
  const n = e[0], o = t.nextPart.get(n), a = o ? qq(e.slice(1), o) : void 0;
  if (a)
    return a;
  if (t.validators.length === 0)
    return;
  const i = e.join(TC);
  return (r = t.validators.find(({
    validator: s
  }) => s(i))) == null ? void 0 : r.classGroupId;
}, uM = /^\[(.+)\]$/, aPe = (e) => {
  if (uM.test(e)) {
    const t = uM.exec(e)[1], r = t == null ? void 0 : t.substring(0, t.indexOf(":"));
    if (r)
      return "arbitrary.." + r;
  }
}, iPe = (e) => {
  const {
    theme: t,
    prefix: r
  } = e, n = {
    nextPart: /* @__PURE__ */ new Map(),
    validators: []
  };
  return lPe(Object.entries(e.classGroups), r).forEach(([o, a]) => {
    ZO(a, n, o, t);
  }), n;
}, ZO = (e, t, r, n) => {
  e.forEach((o) => {
    if (typeof o == "string") {
      const a = o === "" ? t : fM(t, o);
      a.classGroupId = r;
      return;
    }
    if (typeof o == "function") {
      if (sPe(o)) {
        ZO(o(n), t, r, n);
        return;
      }
      t.validators.push({
        validator: o,
        classGroupId: r
      });
      return;
    }
    Object.entries(o).forEach(([a, i]) => {
      ZO(i, fM(t, a), r, n);
    });
  });
}, fM = (e, t) => {
  let r = e;
  return t.split(TC).forEach((n) => {
    r.nextPart.has(n) || r.nextPart.set(n, {
      nextPart: /* @__PURE__ */ new Map(),
      validators: []
    }), r = r.nextPart.get(n);
  }), r;
}, sPe = (e) => e.isThemeGetter, lPe = (e, t) => t ? e.map(([r, n]) => {
  const o = n.map((a) => typeof a == "string" ? t + a : typeof a == "object" ? Object.fromEntries(Object.entries(a).map(([i, s]) => [t + i, s])) : a);
  return [r, o];
}) : e, cPe = (e) => {
  if (e < 1)
    return {
      get: () => {
      },
      set: () => {
      }
    };
  let t = 0, r = /* @__PURE__ */ new Map(), n = /* @__PURE__ */ new Map();
  const o = (a, i) => {
    r.set(a, i), t++, t > e && (t = 0, n = r, r = /* @__PURE__ */ new Map());
  };
  return {
    get(a) {
      let i = r.get(a);
      if (i !== void 0)
        return i;
      if ((i = n.get(a)) !== void 0)
        return o(a, i), i;
    },
    set(a, i) {
      r.has(a) ? r.set(a, i) : o(a, i);
    }
  };
}, Bq = "!", uPe = (e) => {
  const {
    separator: t,
    experimentalParseClassName: r
  } = e, n = t.length === 1, o = t[0], a = t.length, i = (s) => {
    const l = [];
    let c = 0, u = 0, f;
    for (let m = 0; m < s.length; m++) {
      let w = s[m];
      if (c === 0) {
        if (w === o && (n || s.slice(m, m + a) === t)) {
          l.push(s.slice(u, m)), u = m + a;
          continue;
        }
        if (w === "/") {
          f = m;
          continue;
        }
      }
      w === "[" ? c++ : w === "]" && c--;
    }
    const p = l.length === 0 ? s : s.substring(u), v = p.startsWith(Bq), x = v ? p.substring(1) : p, b = f && f > u ? f - u : void 0;
    return {
      modifiers: l,
      hasImportantModifier: v,
      baseClassName: x,
      maybePostfixModifierPosition: b
    };
  };
  return r ? (s) => r({
    className: s,
    parseClassName: i
  }) : i;
}, fPe = (e) => {
  if (e.length <= 1)
    return e;
  const t = [];
  let r = [];
  return e.forEach((n) => {
    n[0] === "[" ? (t.push(...r.sort(), n), r = []) : r.push(n);
  }), t.push(...r.sort()), t;
}, dPe = (e) => ({
  cache: cPe(e.cacheSize),
  parseClassName: uPe(e),
  ...oPe(e)
}), pPe = /\s+/, mPe = (e, t) => {
  const {
    parseClassName: r,
    getClassGroupId: n,
    getConflictingClassGroupIds: o
  } = t, a = [], i = e.trim().split(pPe);
  let s = "";
  for (let l = i.length - 1; l >= 0; l -= 1) {
    const c = i[l], {
      modifiers: u,
      hasImportantModifier: f,
      baseClassName: p,
      maybePostfixModifierPosition: v
    } = r(c);
    let x = !!v, b = n(x ? p.substring(0, v) : p);
    if (!b) {
      if (!x) {
        s = c + (s.length > 0 ? " " + s : s);
        continue;
      }
      if (b = n(p), !b) {
        s = c + (s.length > 0 ? " " + s : s);
        continue;
      }
      x = !1;
    }
    const m = fPe(u).join(":"), w = f ? m + Bq : m, $ = w + b;
    if (a.includes($))
      continue;
    a.push($);
    const E = o(b, x);
    for (let S = 0; S < E.length; ++S) {
      const h = E[S];
      a.push(w + h);
    }
    s = c + (s.length > 0 ? " " + s : s);
  }
  return s;
};
function gPe() {
  let e = 0, t, r, n = "";
  for (; e < arguments.length; )
    (t = arguments[e++]) && (r = Xq(t)) && (n && (n += " "), n += r);
  return n;
}
const Xq = (e) => {
  if (typeof e == "string")
    return e;
  let t, r = "";
  for (let n = 0; n < e.length; n++)
    e[n] && (t = Xq(e[n])) && (r && (r += " "), r += t);
  return r;
};
function hPe(e, ...t) {
  let r, n, o, a = i;
  function i(l) {
    const c = t.reduce((u, f) => f(u), e());
    return r = dPe(c), n = r.cache.get, o = r.cache.set, a = s, s(l);
  }
  function s(l) {
    const c = n(l);
    if (c)
      return c;
    const u = mPe(l, r);
    return o(l, u), u;
  }
  return function() {
    return a(gPe.apply(null, arguments));
  };
}
const Ar = (e) => {
  const t = (r) => r[e] || [];
  return t.isThemeGetter = !0, t;
}, Kq = /^\[(?:([a-z-]+):)?(.+)\]$/i, bPe = /^\d+\/\d+$/, yPe = /* @__PURE__ */ new Set(["px", "full", "screen"]), vPe = /^(\d+(\.\d+)?)?(xs|sm|md|lg|xl)$/, xPe = /\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\b(calc|min|max|clamp)\(.+\)|^0$/, wPe = /^(rgba?|hsla?|hwb|(ok)?(lab|lch))\(.+\)$/, kPe = /^(inset_)?-?((\d+)?\.?(\d+)[a-z]+|0)_-?((\d+)?\.?(\d+)[a-z]+|0)/, $Pe = /^(url|image|image-set|cross-fade|element|(repeating-)?(linear|radial|conic)-gradient)\(.+\)$/, Xa = (e) => Xf(e) || yPe.has(e) || bPe.test(e), el = (e) => Bd(e, "length", NPe), Xf = (e) => !!e && !Number.isNaN(Number(e)), gk = (e) => Bd(e, "number", Xf), jm = (e) => !!e && Number.isInteger(Number(e)), OPe = (e) => e.endsWith("%") && Xf(e.slice(0, -1)), gt = (e) => Kq.test(e), tl = (e) => vPe.test(e), EPe = /* @__PURE__ */ new Set(["length", "size", "percentage"]), SPe = (e) => Bd(e, EPe, Jq), PPe = (e) => Bd(e, "position", Jq), CPe = /* @__PURE__ */ new Set(["image", "url"]), APe = (e) => Bd(e, CPe, IPe), _Pe = (e) => Bd(e, "", jPe), Im = () => !0, Bd = (e, t, r) => {
  const n = Kq.exec(e);
  return n ? n[1] ? typeof t == "string" ? n[1] === t : t.has(n[1]) : r(n[2]) : !1;
}, NPe = (e) => (
  // `colorFunctionRegex` check is necessary because color functions can have percentages in them which which would be incorrectly classified as lengths.
  // For example, `hsl(0 0% 0%)` would be classified as a length without this check.
  // I could also use lookbehind assertion in `lengthUnitRegex` but that isn't supported widely enough.
  xPe.test(e) && !wPe.test(e)
), Jq = () => !1, jPe = (e) => kPe.test(e), IPe = (e) => $Pe.test(e), TPe = () => {
  const e = Ar("colors"), t = Ar("spacing"), r = Ar("blur"), n = Ar("brightness"), o = Ar("borderColor"), a = Ar("borderRadius"), i = Ar("borderSpacing"), s = Ar("borderWidth"), l = Ar("contrast"), c = Ar("grayscale"), u = Ar("hueRotate"), f = Ar("invert"), p = Ar("gap"), v = Ar("gradientColorStops"), x = Ar("gradientColorStopPositions"), b = Ar("inset"), m = Ar("margin"), w = Ar("opacity"), $ = Ar("padding"), E = Ar("saturate"), S = Ar("scale"), h = Ar("sepia"), U = Ar("skew"), G = Ar("space"), Q = Ar("translate"), Z = () => ["auto", "contain", "none"], X = () => ["auto", "hidden", "clip", "visible", "scroll"], J = () => ["auto", gt, t], I = () => [gt, t], te = () => ["", Xa, el], V = () => ["auto", Xf, gt], D = () => ["bottom", "center", "left", "left-bottom", "left-top", "right", "right-bottom", "right-top", "top"], F = () => ["solid", "dashed", "dotted", "double", "none"], R = () => ["normal", "multiply", "screen", "overlay", "darken", "lighten", "color-dodge", "color-burn", "hard-light", "soft-light", "difference", "exclusion", "hue", "saturation", "color", "luminosity"], H = () => ["start", "end", "center", "between", "around", "evenly", "stretch"], B = () => ["", "0", gt], g = () => ["auto", "avoid", "all", "avoid-page", "page", "left", "right", "column"], d = () => [Xf, gt];
  return {
    cacheSize: 500,
    separator: ":",
    theme: {
      colors: [Im],
      spacing: [Xa, el],
      blur: ["none", "", tl, gt],
      brightness: d(),
      borderColor: [e],
      borderRadius: ["none", "", "full", tl, gt],
      borderSpacing: I(),
      borderWidth: te(),
      contrast: d(),
      grayscale: B(),
      hueRotate: d(),
      invert: B(),
      gap: I(),
      gradientColorStops: [e],
      gradientColorStopPositions: [OPe, el],
      inset: J(),
      margin: J(),
      opacity: d(),
      padding: I(),
      saturate: d(),
      scale: d(),
      sepia: B(),
      skew: d(),
      space: I(),
      translate: I()
    },
    classGroups: {
      // Layout
      /**
       * Aspect Ratio
       * @see https://tailwindcss.com/docs/aspect-ratio
       */
      aspect: [{
        aspect: ["auto", "square", "video", gt]
      }],
      /**
       * Container
       * @see https://tailwindcss.com/docs/container
       */
      container: ["container"],
      /**
       * Columns
       * @see https://tailwindcss.com/docs/columns
       */
      columns: [{
        columns: [tl]
      }],
      /**
       * Break After
       * @see https://tailwindcss.com/docs/break-after
       */
      "break-after": [{
        "break-after": g()
      }],
      /**
       * Break Before
       * @see https://tailwindcss.com/docs/break-before
       */
      "break-before": [{
        "break-before": g()
      }],
      /**
       * Break Inside
       * @see https://tailwindcss.com/docs/break-inside
       */
      "break-inside": [{
        "break-inside": ["auto", "avoid", "avoid-page", "avoid-column"]
      }],
      /**
       * Box Decoration Break
       * @see https://tailwindcss.com/docs/box-decoration-break
       */
      "box-decoration": [{
        "box-decoration": ["slice", "clone"]
      }],
      /**
       * Box Sizing
       * @see https://tailwindcss.com/docs/box-sizing
       */
      box: [{
        box: ["border", "content"]
      }],
      /**
       * Display
       * @see https://tailwindcss.com/docs/display
       */
      display: ["block", "inline-block", "inline", "flex", "inline-flex", "table", "inline-table", "table-caption", "table-cell", "table-column", "table-column-group", "table-footer-group", "table-header-group", "table-row-group", "table-row", "flow-root", "grid", "inline-grid", "contents", "list-item", "hidden"],
      /**
       * Floats
       * @see https://tailwindcss.com/docs/float
       */
      float: [{
        float: ["right", "left", "none", "start", "end"]
      }],
      /**
       * Clear
       * @see https://tailwindcss.com/docs/clear
       */
      clear: [{
        clear: ["left", "right", "both", "none", "start", "end"]
      }],
      /**
       * Isolation
       * @see https://tailwindcss.com/docs/isolation
       */
      isolation: ["isolate", "isolation-auto"],
      /**
       * Object Fit
       * @see https://tailwindcss.com/docs/object-fit
       */
      "object-fit": [{
        object: ["contain", "cover", "fill", "none", "scale-down"]
      }],
      /**
       * Object Position
       * @see https://tailwindcss.com/docs/object-position
       */
      "object-position": [{
        object: [...D(), gt]
      }],
      /**
       * Overflow
       * @see https://tailwindcss.com/docs/overflow
       */
      overflow: [{
        overflow: X()
      }],
      /**
       * Overflow X
       * @see https://tailwindcss.com/docs/overflow
       */
      "overflow-x": [{
        "overflow-x": X()
      }],
      /**
       * Overflow Y
       * @see https://tailwindcss.com/docs/overflow
       */
      "overflow-y": [{
        "overflow-y": X()
      }],
      /**
       * Overscroll Behavior
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      overscroll: [{
        overscroll: Z()
      }],
      /**
       * Overscroll Behavior X
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      "overscroll-x": [{
        "overscroll-x": Z()
      }],
      /**
       * Overscroll Behavior Y
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      "overscroll-y": [{
        "overscroll-y": Z()
      }],
      /**
       * Position
       * @see https://tailwindcss.com/docs/position
       */
      position: ["static", "fixed", "absolute", "relative", "sticky"],
      /**
       * Top / Right / Bottom / Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      inset: [{
        inset: [b]
      }],
      /**
       * Right / Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      "inset-x": [{
        "inset-x": [b]
      }],
      /**
       * Top / Bottom
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      "inset-y": [{
        "inset-y": [b]
      }],
      /**
       * Start
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      start: [{
        start: [b]
      }],
      /**
       * End
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      end: [{
        end: [b]
      }],
      /**
       * Top
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      top: [{
        top: [b]
      }],
      /**
       * Right
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      right: [{
        right: [b]
      }],
      /**
       * Bottom
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      bottom: [{
        bottom: [b]
      }],
      /**
       * Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      left: [{
        left: [b]
      }],
      /**
       * Visibility
       * @see https://tailwindcss.com/docs/visibility
       */
      visibility: ["visible", "invisible", "collapse"],
      /**
       * Z-Index
       * @see https://tailwindcss.com/docs/z-index
       */
      z: [{
        z: ["auto", jm, gt]
      }],
      // Flexbox and Grid
      /**
       * Flex Basis
       * @see https://tailwindcss.com/docs/flex-basis
       */
      basis: [{
        basis: J()
      }],
      /**
       * Flex Direction
       * @see https://tailwindcss.com/docs/flex-direction
       */
      "flex-direction": [{
        flex: ["row", "row-reverse", "col", "col-reverse"]
      }],
      /**
       * Flex Wrap
       * @see https://tailwindcss.com/docs/flex-wrap
       */
      "flex-wrap": [{
        flex: ["wrap", "wrap-reverse", "nowrap"]
      }],
      /**
       * Flex
       * @see https://tailwindcss.com/docs/flex
       */
      flex: [{
        flex: ["1", "auto", "initial", "none", gt]
      }],
      /**
       * Flex Grow
       * @see https://tailwindcss.com/docs/flex-grow
       */
      grow: [{
        grow: B()
      }],
      /**
       * Flex Shrink
       * @see https://tailwindcss.com/docs/flex-shrink
       */
      shrink: [{
        shrink: B()
      }],
      /**
       * Order
       * @see https://tailwindcss.com/docs/order
       */
      order: [{
        order: ["first", "last", "none", jm, gt]
      }],
      /**
       * Grid Template Columns
       * @see https://tailwindcss.com/docs/grid-template-columns
       */
      "grid-cols": [{
        "grid-cols": [Im]
      }],
      /**
       * Grid Column Start / End
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-start-end": [{
        col: ["auto", {
          span: ["full", jm, gt]
        }, gt]
      }],
      /**
       * Grid Column Start
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-start": [{
        "col-start": V()
      }],
      /**
       * Grid Column End
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-end": [{
        "col-end": V()
      }],
      /**
       * Grid Template Rows
       * @see https://tailwindcss.com/docs/grid-template-rows
       */
      "grid-rows": [{
        "grid-rows": [Im]
      }],
      /**
       * Grid Row Start / End
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-start-end": [{
        row: ["auto", {
          span: [jm, gt]
        }, gt]
      }],
      /**
       * Grid Row Start
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-start": [{
        "row-start": V()
      }],
      /**
       * Grid Row End
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-end": [{
        "row-end": V()
      }],
      /**
       * Grid Auto Flow
       * @see https://tailwindcss.com/docs/grid-auto-flow
       */
      "grid-flow": [{
        "grid-flow": ["row", "col", "dense", "row-dense", "col-dense"]
      }],
      /**
       * Grid Auto Columns
       * @see https://tailwindcss.com/docs/grid-auto-columns
       */
      "auto-cols": [{
        "auto-cols": ["auto", "min", "max", "fr", gt]
      }],
      /**
       * Grid Auto Rows
       * @see https://tailwindcss.com/docs/grid-auto-rows
       */
      "auto-rows": [{
        "auto-rows": ["auto", "min", "max", "fr", gt]
      }],
      /**
       * Gap
       * @see https://tailwindcss.com/docs/gap
       */
      gap: [{
        gap: [p]
      }],
      /**
       * Gap X
       * @see https://tailwindcss.com/docs/gap
       */
      "gap-x": [{
        "gap-x": [p]
      }],
      /**
       * Gap Y
       * @see https://tailwindcss.com/docs/gap
       */
      "gap-y": [{
        "gap-y": [p]
      }],
      /**
       * Justify Content
       * @see https://tailwindcss.com/docs/justify-content
       */
      "justify-content": [{
        justify: ["normal", ...H()]
      }],
      /**
       * Justify Items
       * @see https://tailwindcss.com/docs/justify-items
       */
      "justify-items": [{
        "justify-items": ["start", "end", "center", "stretch"]
      }],
      /**
       * Justify Self
       * @see https://tailwindcss.com/docs/justify-self
       */
      "justify-self": [{
        "justify-self": ["auto", "start", "end", "center", "stretch"]
      }],
      /**
       * Align Content
       * @see https://tailwindcss.com/docs/align-content
       */
      "align-content": [{
        content: ["normal", ...H(), "baseline"]
      }],
      /**
       * Align Items
       * @see https://tailwindcss.com/docs/align-items
       */
      "align-items": [{
        items: ["start", "end", "center", "baseline", "stretch"]
      }],
      /**
       * Align Self
       * @see https://tailwindcss.com/docs/align-self
       */
      "align-self": [{
        self: ["auto", "start", "end", "center", "stretch", "baseline"]
      }],
      /**
       * Place Content
       * @see https://tailwindcss.com/docs/place-content
       */
      "place-content": [{
        "place-content": [...H(), "baseline"]
      }],
      /**
       * Place Items
       * @see https://tailwindcss.com/docs/place-items
       */
      "place-items": [{
        "place-items": ["start", "end", "center", "baseline", "stretch"]
      }],
      /**
       * Place Self
       * @see https://tailwindcss.com/docs/place-self
       */
      "place-self": [{
        "place-self": ["auto", "start", "end", "center", "stretch"]
      }],
      // Spacing
      /**
       * Padding
       * @see https://tailwindcss.com/docs/padding
       */
      p: [{
        p: [$]
      }],
      /**
       * Padding X
       * @see https://tailwindcss.com/docs/padding
       */
      px: [{
        px: [$]
      }],
      /**
       * Padding Y
       * @see https://tailwindcss.com/docs/padding
       */
      py: [{
        py: [$]
      }],
      /**
       * Padding Start
       * @see https://tailwindcss.com/docs/padding
       */
      ps: [{
        ps: [$]
      }],
      /**
       * Padding End
       * @see https://tailwindcss.com/docs/padding
       */
      pe: [{
        pe: [$]
      }],
      /**
       * Padding Top
       * @see https://tailwindcss.com/docs/padding
       */
      pt: [{
        pt: [$]
      }],
      /**
       * Padding Right
       * @see https://tailwindcss.com/docs/padding
       */
      pr: [{
        pr: [$]
      }],
      /**
       * Padding Bottom
       * @see https://tailwindcss.com/docs/padding
       */
      pb: [{
        pb: [$]
      }],
      /**
       * Padding Left
       * @see https://tailwindcss.com/docs/padding
       */
      pl: [{
        pl: [$]
      }],
      /**
       * Margin
       * @see https://tailwindcss.com/docs/margin
       */
      m: [{
        m: [m]
      }],
      /**
       * Margin X
       * @see https://tailwindcss.com/docs/margin
       */
      mx: [{
        mx: [m]
      }],
      /**
       * Margin Y
       * @see https://tailwindcss.com/docs/margin
       */
      my: [{
        my: [m]
      }],
      /**
       * Margin Start
       * @see https://tailwindcss.com/docs/margin
       */
      ms: [{
        ms: [m]
      }],
      /**
       * Margin End
       * @see https://tailwindcss.com/docs/margin
       */
      me: [{
        me: [m]
      }],
      /**
       * Margin Top
       * @see https://tailwindcss.com/docs/margin
       */
      mt: [{
        mt: [m]
      }],
      /**
       * Margin Right
       * @see https://tailwindcss.com/docs/margin
       */
      mr: [{
        mr: [m]
      }],
      /**
       * Margin Bottom
       * @see https://tailwindcss.com/docs/margin
       */
      mb: [{
        mb: [m]
      }],
      /**
       * Margin Left
       * @see https://tailwindcss.com/docs/margin
       */
      ml: [{
        ml: [m]
      }],
      /**
       * Space Between X
       * @see https://tailwindcss.com/docs/space
       */
      "space-x": [{
        "space-x": [G]
      }],
      /**
       * Space Between X Reverse
       * @see https://tailwindcss.com/docs/space
       */
      "space-x-reverse": ["space-x-reverse"],
      /**
       * Space Between Y
       * @see https://tailwindcss.com/docs/space
       */
      "space-y": [{
        "space-y": [G]
      }],
      /**
       * Space Between Y Reverse
       * @see https://tailwindcss.com/docs/space
       */
      "space-y-reverse": ["space-y-reverse"],
      // Sizing
      /**
       * Width
       * @see https://tailwindcss.com/docs/width
       */
      w: [{
        w: ["auto", "min", "max", "fit", "svw", "lvw", "dvw", gt, t]
      }],
      /**
       * Min-Width
       * @see https://tailwindcss.com/docs/min-width
       */
      "min-w": [{
        "min-w": [gt, t, "min", "max", "fit"]
      }],
      /**
       * Max-Width
       * @see https://tailwindcss.com/docs/max-width
       */
      "max-w": [{
        "max-w": [gt, t, "none", "full", "min", "max", "fit", "prose", {
          screen: [tl]
        }, tl]
      }],
      /**
       * Height
       * @see https://tailwindcss.com/docs/height
       */
      h: [{
        h: [gt, t, "auto", "min", "max", "fit", "svh", "lvh", "dvh"]
      }],
      /**
       * Min-Height
       * @see https://tailwindcss.com/docs/min-height
       */
      "min-h": [{
        "min-h": [gt, t, "min", "max", "fit", "svh", "lvh", "dvh"]
      }],
      /**
       * Max-Height
       * @see https://tailwindcss.com/docs/max-height
       */
      "max-h": [{
        "max-h": [gt, t, "min", "max", "fit", "svh", "lvh", "dvh"]
      }],
      /**
       * Size
       * @see https://tailwindcss.com/docs/size
       */
      size: [{
        size: [gt, t, "auto", "min", "max", "fit"]
      }],
      // Typography
      /**
       * Font Size
       * @see https://tailwindcss.com/docs/font-size
       */
      "font-size": [{
        text: ["base", tl, el]
      }],
      /**
       * Font Smoothing
       * @see https://tailwindcss.com/docs/font-smoothing
       */
      "font-smoothing": ["antialiased", "subpixel-antialiased"],
      /**
       * Font Style
       * @see https://tailwindcss.com/docs/font-style
       */
      "font-style": ["italic", "not-italic"],
      /**
       * Font Weight
       * @see https://tailwindcss.com/docs/font-weight
       */
      "font-weight": [{
        font: ["thin", "extralight", "light", "normal", "medium", "semibold", "bold", "extrabold", "black", gk]
      }],
      /**
       * Font Family
       * @see https://tailwindcss.com/docs/font-family
       */
      "font-family": [{
        font: [Im]
      }],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-normal": ["normal-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-ordinal": ["ordinal"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-slashed-zero": ["slashed-zero"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-figure": ["lining-nums", "oldstyle-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-spacing": ["proportional-nums", "tabular-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-fraction": ["diagonal-fractions", "stacked-fractions"],
      /**
       * Letter Spacing
       * @see https://tailwindcss.com/docs/letter-spacing
       */
      tracking: [{
        tracking: ["tighter", "tight", "normal", "wide", "wider", "widest", gt]
      }],
      /**
       * Line Clamp
       * @see https://tailwindcss.com/docs/line-clamp
       */
      "line-clamp": [{
        "line-clamp": ["none", Xf, gk]
      }],
      /**
       * Line Height
       * @see https://tailwindcss.com/docs/line-height
       */
      leading: [{
        leading: ["none", "tight", "snug", "normal", "relaxed", "loose", Xa, gt]
      }],
      /**
       * List Style Image
       * @see https://tailwindcss.com/docs/list-style-image
       */
      "list-image": [{
        "list-image": ["none", gt]
      }],
      /**
       * List Style Type
       * @see https://tailwindcss.com/docs/list-style-type
       */
      "list-style-type": [{
        list: ["none", "disc", "decimal", gt]
      }],
      /**
       * List Style Position
       * @see https://tailwindcss.com/docs/list-style-position
       */
      "list-style-position": [{
        list: ["inside", "outside"]
      }],
      /**
       * Placeholder Color
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/placeholder-color
       */
      "placeholder-color": [{
        placeholder: [e]
      }],
      /**
       * Placeholder Opacity
       * @see https://tailwindcss.com/docs/placeholder-opacity
       */
      "placeholder-opacity": [{
        "placeholder-opacity": [w]
      }],
      /**
       * Text Alignment
       * @see https://tailwindcss.com/docs/text-align
       */
      "text-alignment": [{
        text: ["left", "center", "right", "justify", "start", "end"]
      }],
      /**
       * Text Color
       * @see https://tailwindcss.com/docs/text-color
       */
      "text-color": [{
        text: [e]
      }],
      /**
       * Text Opacity
       * @see https://tailwindcss.com/docs/text-opacity
       */
      "text-opacity": [{
        "text-opacity": [w]
      }],
      /**
       * Text Decoration
       * @see https://tailwindcss.com/docs/text-decoration
       */
      "text-decoration": ["underline", "overline", "line-through", "no-underline"],
      /**
       * Text Decoration Style
       * @see https://tailwindcss.com/docs/text-decoration-style
       */
      "text-decoration-style": [{
        decoration: [...F(), "wavy"]
      }],
      /**
       * Text Decoration Thickness
       * @see https://tailwindcss.com/docs/text-decoration-thickness
       */
      "text-decoration-thickness": [{
        decoration: ["auto", "from-font", Xa, el]
      }],
      /**
       * Text Underline Offset
       * @see https://tailwindcss.com/docs/text-underline-offset
       */
      "underline-offset": [{
        "underline-offset": ["auto", Xa, gt]
      }],
      /**
       * Text Decoration Color
       * @see https://tailwindcss.com/docs/text-decoration-color
       */
      "text-decoration-color": [{
        decoration: [e]
      }],
      /**
       * Text Transform
       * @see https://tailwindcss.com/docs/text-transform
       */
      "text-transform": ["uppercase", "lowercase", "capitalize", "normal-case"],
      /**
       * Text Overflow
       * @see https://tailwindcss.com/docs/text-overflow
       */
      "text-overflow": ["truncate", "text-ellipsis", "text-clip"],
      /**
       * Text Wrap
       * @see https://tailwindcss.com/docs/text-wrap
       */
      "text-wrap": [{
        text: ["wrap", "nowrap", "balance", "pretty"]
      }],
      /**
       * Text Indent
       * @see https://tailwindcss.com/docs/text-indent
       */
      indent: [{
        indent: I()
      }],
      /**
       * Vertical Alignment
       * @see https://tailwindcss.com/docs/vertical-align
       */
      "vertical-align": [{
        align: ["baseline", "top", "middle", "bottom", "text-top", "text-bottom", "sub", "super", gt]
      }],
      /**
       * Whitespace
       * @see https://tailwindcss.com/docs/whitespace
       */
      whitespace: [{
        whitespace: ["normal", "nowrap", "pre", "pre-line", "pre-wrap", "break-spaces"]
      }],
      /**
       * Word Break
       * @see https://tailwindcss.com/docs/word-break
       */
      break: [{
        break: ["normal", "words", "all", "keep"]
      }],
      /**
       * Hyphens
       * @see https://tailwindcss.com/docs/hyphens
       */
      hyphens: [{
        hyphens: ["none", "manual", "auto"]
      }],
      /**
       * Content
       * @see https://tailwindcss.com/docs/content
       */
      content: [{
        content: ["none", gt]
      }],
      // Backgrounds
      /**
       * Background Attachment
       * @see https://tailwindcss.com/docs/background-attachment
       */
      "bg-attachment": [{
        bg: ["fixed", "local", "scroll"]
      }],
      /**
       * Background Clip
       * @see https://tailwindcss.com/docs/background-clip
       */
      "bg-clip": [{
        "bg-clip": ["border", "padding", "content", "text"]
      }],
      /**
       * Background Opacity
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/background-opacity
       */
      "bg-opacity": [{
        "bg-opacity": [w]
      }],
      /**
       * Background Origin
       * @see https://tailwindcss.com/docs/background-origin
       */
      "bg-origin": [{
        "bg-origin": ["border", "padding", "content"]
      }],
      /**
       * Background Position
       * @see https://tailwindcss.com/docs/background-position
       */
      "bg-position": [{
        bg: [...D(), PPe]
      }],
      /**
       * Background Repeat
       * @see https://tailwindcss.com/docs/background-repeat
       */
      "bg-repeat": [{
        bg: ["no-repeat", {
          repeat: ["", "x", "y", "round", "space"]
        }]
      }],
      /**
       * Background Size
       * @see https://tailwindcss.com/docs/background-size
       */
      "bg-size": [{
        bg: ["auto", "cover", "contain", SPe]
      }],
      /**
       * Background Image
       * @see https://tailwindcss.com/docs/background-image
       */
      "bg-image": [{
        bg: ["none", {
          "gradient-to": ["t", "tr", "r", "br", "b", "bl", "l", "tl"]
        }, APe]
      }],
      /**
       * Background Color
       * @see https://tailwindcss.com/docs/background-color
       */
      "bg-color": [{
        bg: [e]
      }],
      /**
       * Gradient Color Stops From Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-from-pos": [{
        from: [x]
      }],
      /**
       * Gradient Color Stops Via Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-via-pos": [{
        via: [x]
      }],
      /**
       * Gradient Color Stops To Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-to-pos": [{
        to: [x]
      }],
      /**
       * Gradient Color Stops From
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-from": [{
        from: [v]
      }],
      /**
       * Gradient Color Stops Via
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-via": [{
        via: [v]
      }],
      /**
       * Gradient Color Stops To
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-to": [{
        to: [v]
      }],
      // Borders
      /**
       * Border Radius
       * @see https://tailwindcss.com/docs/border-radius
       */
      rounded: [{
        rounded: [a]
      }],
      /**
       * Border Radius Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-s": [{
        "rounded-s": [a]
      }],
      /**
       * Border Radius End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-e": [{
        "rounded-e": [a]
      }],
      /**
       * Border Radius Top
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-t": [{
        "rounded-t": [a]
      }],
      /**
       * Border Radius Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-r": [{
        "rounded-r": [a]
      }],
      /**
       * Border Radius Bottom
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-b": [{
        "rounded-b": [a]
      }],
      /**
       * Border Radius Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-l": [{
        "rounded-l": [a]
      }],
      /**
       * Border Radius Start Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-ss": [{
        "rounded-ss": [a]
      }],
      /**
       * Border Radius Start End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-se": [{
        "rounded-se": [a]
      }],
      /**
       * Border Radius End End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-ee": [{
        "rounded-ee": [a]
      }],
      /**
       * Border Radius End Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-es": [{
        "rounded-es": [a]
      }],
      /**
       * Border Radius Top Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-tl": [{
        "rounded-tl": [a]
      }],
      /**
       * Border Radius Top Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-tr": [{
        "rounded-tr": [a]
      }],
      /**
       * Border Radius Bottom Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-br": [{
        "rounded-br": [a]
      }],
      /**
       * Border Radius Bottom Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-bl": [{
        "rounded-bl": [a]
      }],
      /**
       * Border Width
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w": [{
        border: [s]
      }],
      /**
       * Border Width X
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-x": [{
        "border-x": [s]
      }],
      /**
       * Border Width Y
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-y": [{
        "border-y": [s]
      }],
      /**
       * Border Width Start
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-s": [{
        "border-s": [s]
      }],
      /**
       * Border Width End
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-e": [{
        "border-e": [s]
      }],
      /**
       * Border Width Top
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-t": [{
        "border-t": [s]
      }],
      /**
       * Border Width Right
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-r": [{
        "border-r": [s]
      }],
      /**
       * Border Width Bottom
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-b": [{
        "border-b": [s]
      }],
      /**
       * Border Width Left
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-l": [{
        "border-l": [s]
      }],
      /**
       * Border Opacity
       * @see https://tailwindcss.com/docs/border-opacity
       */
      "border-opacity": [{
        "border-opacity": [w]
      }],
      /**
       * Border Style
       * @see https://tailwindcss.com/docs/border-style
       */
      "border-style": [{
        border: [...F(), "hidden"]
      }],
      /**
       * Divide Width X
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-x": [{
        "divide-x": [s]
      }],
      /**
       * Divide Width X Reverse
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-x-reverse": ["divide-x-reverse"],
      /**
       * Divide Width Y
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-y": [{
        "divide-y": [s]
      }],
      /**
       * Divide Width Y Reverse
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-y-reverse": ["divide-y-reverse"],
      /**
       * Divide Opacity
       * @see https://tailwindcss.com/docs/divide-opacity
       */
      "divide-opacity": [{
        "divide-opacity": [w]
      }],
      /**
       * Divide Style
       * @see https://tailwindcss.com/docs/divide-style
       */
      "divide-style": [{
        divide: F()
      }],
      /**
       * Border Color
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color": [{
        border: [o]
      }],
      /**
       * Border Color X
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-x": [{
        "border-x": [o]
      }],
      /**
       * Border Color Y
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-y": [{
        "border-y": [o]
      }],
      /**
       * Border Color S
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-s": [{
        "border-s": [o]
      }],
      /**
       * Border Color E
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-e": [{
        "border-e": [o]
      }],
      /**
       * Border Color Top
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-t": [{
        "border-t": [o]
      }],
      /**
       * Border Color Right
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-r": [{
        "border-r": [o]
      }],
      /**
       * Border Color Bottom
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-b": [{
        "border-b": [o]
      }],
      /**
       * Border Color Left
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-l": [{
        "border-l": [o]
      }],
      /**
       * Divide Color
       * @see https://tailwindcss.com/docs/divide-color
       */
      "divide-color": [{
        divide: [o]
      }],
      /**
       * Outline Style
       * @see https://tailwindcss.com/docs/outline-style
       */
      "outline-style": [{
        outline: ["", ...F()]
      }],
      /**
       * Outline Offset
       * @see https://tailwindcss.com/docs/outline-offset
       */
      "outline-offset": [{
        "outline-offset": [Xa, gt]
      }],
      /**
       * Outline Width
       * @see https://tailwindcss.com/docs/outline-width
       */
      "outline-w": [{
        outline: [Xa, el]
      }],
      /**
       * Outline Color
       * @see https://tailwindcss.com/docs/outline-color
       */
      "outline-color": [{
        outline: [e]
      }],
      /**
       * Ring Width
       * @see https://tailwindcss.com/docs/ring-width
       */
      "ring-w": [{
        ring: te()
      }],
      /**
       * Ring Width Inset
       * @see https://tailwindcss.com/docs/ring-width
       */
      "ring-w-inset": ["ring-inset"],
      /**
       * Ring Color
       * @see https://tailwindcss.com/docs/ring-color
       */
      "ring-color": [{
        ring: [e]
      }],
      /**
       * Ring Opacity
       * @see https://tailwindcss.com/docs/ring-opacity
       */
      "ring-opacity": [{
        "ring-opacity": [w]
      }],
      /**
       * Ring Offset Width
       * @see https://tailwindcss.com/docs/ring-offset-width
       */
      "ring-offset-w": [{
        "ring-offset": [Xa, el]
      }],
      /**
       * Ring Offset Color
       * @see https://tailwindcss.com/docs/ring-offset-color
       */
      "ring-offset-color": [{
        "ring-offset": [e]
      }],
      // Effects
      /**
       * Box Shadow
       * @see https://tailwindcss.com/docs/box-shadow
       */
      shadow: [{
        shadow: ["", "inner", "none", tl, _Pe]
      }],
      /**
       * Box Shadow Color
       * @see https://tailwindcss.com/docs/box-shadow-color
       */
      "shadow-color": [{
        shadow: [Im]
      }],
      /**
       * Opacity
       * @see https://tailwindcss.com/docs/opacity
       */
      opacity: [{
        opacity: [w]
      }],
      /**
       * Mix Blend Mode
       * @see https://tailwindcss.com/docs/mix-blend-mode
       */
      "mix-blend": [{
        "mix-blend": [...R(), "plus-lighter", "plus-darker"]
      }],
      /**
       * Background Blend Mode
       * @see https://tailwindcss.com/docs/background-blend-mode
       */
      "bg-blend": [{
        "bg-blend": R()
      }],
      // Filters
      /**
       * Filter
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/filter
       */
      filter: [{
        filter: ["", "none"]
      }],
      /**
       * Blur
       * @see https://tailwindcss.com/docs/blur
       */
      blur: [{
        blur: [r]
      }],
      /**
       * Brightness
       * @see https://tailwindcss.com/docs/brightness
       */
      brightness: [{
        brightness: [n]
      }],
      /**
       * Contrast
       * @see https://tailwindcss.com/docs/contrast
       */
      contrast: [{
        contrast: [l]
      }],
      /**
       * Drop Shadow
       * @see https://tailwindcss.com/docs/drop-shadow
       */
      "drop-shadow": [{
        "drop-shadow": ["", "none", tl, gt]
      }],
      /**
       * Grayscale
       * @see https://tailwindcss.com/docs/grayscale
       */
      grayscale: [{
        grayscale: [c]
      }],
      /**
       * Hue Rotate
       * @see https://tailwindcss.com/docs/hue-rotate
       */
      "hue-rotate": [{
        "hue-rotate": [u]
      }],
      /**
       * Invert
       * @see https://tailwindcss.com/docs/invert
       */
      invert: [{
        invert: [f]
      }],
      /**
       * Saturate
       * @see https://tailwindcss.com/docs/saturate
       */
      saturate: [{
        saturate: [E]
      }],
      /**
       * Sepia
       * @see https://tailwindcss.com/docs/sepia
       */
      sepia: [{
        sepia: [h]
      }],
      /**
       * Backdrop Filter
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/backdrop-filter
       */
      "backdrop-filter": [{
        "backdrop-filter": ["", "none"]
      }],
      /**
       * Backdrop Blur
       * @see https://tailwindcss.com/docs/backdrop-blur
       */
      "backdrop-blur": [{
        "backdrop-blur": [r]
      }],
      /**
       * Backdrop Brightness
       * @see https://tailwindcss.com/docs/backdrop-brightness
       */
      "backdrop-brightness": [{
        "backdrop-brightness": [n]
      }],
      /**
       * Backdrop Contrast
       * @see https://tailwindcss.com/docs/backdrop-contrast
       */
      "backdrop-contrast": [{
        "backdrop-contrast": [l]
      }],
      /**
       * Backdrop Grayscale
       * @see https://tailwindcss.com/docs/backdrop-grayscale
       */
      "backdrop-grayscale": [{
        "backdrop-grayscale": [c]
      }],
      /**
       * Backdrop Hue Rotate
       * @see https://tailwindcss.com/docs/backdrop-hue-rotate
       */
      "backdrop-hue-rotate": [{
        "backdrop-hue-rotate": [u]
      }],
      /**
       * Backdrop Invert
       * @see https://tailwindcss.com/docs/backdrop-invert
       */
      "backdrop-invert": [{
        "backdrop-invert": [f]
      }],
      /**
       * Backdrop Opacity
       * @see https://tailwindcss.com/docs/backdrop-opacity
       */
      "backdrop-opacity": [{
        "backdrop-opacity": [w]
      }],
      /**
       * Backdrop Saturate
       * @see https://tailwindcss.com/docs/backdrop-saturate
       */
      "backdrop-saturate": [{
        "backdrop-saturate": [E]
      }],
      /**
       * Backdrop Sepia
       * @see https://tailwindcss.com/docs/backdrop-sepia
       */
      "backdrop-sepia": [{
        "backdrop-sepia": [h]
      }],
      // Tables
      /**
       * Border Collapse
       * @see https://tailwindcss.com/docs/border-collapse
       */
      "border-collapse": [{
        border: ["collapse", "separate"]
      }],
      /**
       * Border Spacing
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing": [{
        "border-spacing": [i]
      }],
      /**
       * Border Spacing X
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing-x": [{
        "border-spacing-x": [i]
      }],
      /**
       * Border Spacing Y
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing-y": [{
        "border-spacing-y": [i]
      }],
      /**
       * Table Layout
       * @see https://tailwindcss.com/docs/table-layout
       */
      "table-layout": [{
        table: ["auto", "fixed"]
      }],
      /**
       * Caption Side
       * @see https://tailwindcss.com/docs/caption-side
       */
      caption: [{
        caption: ["top", "bottom"]
      }],
      // Transitions and Animation
      /**
       * Tranisition Property
       * @see https://tailwindcss.com/docs/transition-property
       */
      transition: [{
        transition: ["none", "all", "", "colors", "opacity", "shadow", "transform", gt]
      }],
      /**
       * Transition Duration
       * @see https://tailwindcss.com/docs/transition-duration
       */
      duration: [{
        duration: d()
      }],
      /**
       * Transition Timing Function
       * @see https://tailwindcss.com/docs/transition-timing-function
       */
      ease: [{
        ease: ["linear", "in", "out", "in-out", gt]
      }],
      /**
       * Transition Delay
       * @see https://tailwindcss.com/docs/transition-delay
       */
      delay: [{
        delay: d()
      }],
      /**
       * Animation
       * @see https://tailwindcss.com/docs/animation
       */
      animate: [{
        animate: ["none", "spin", "ping", "pulse", "bounce", gt]
      }],
      // Transforms
      /**
       * Transform
       * @see https://tailwindcss.com/docs/transform
       */
      transform: [{
        transform: ["", "gpu", "none"]
      }],
      /**
       * Scale
       * @see https://tailwindcss.com/docs/scale
       */
      scale: [{
        scale: [S]
      }],
      /**
       * Scale X
       * @see https://tailwindcss.com/docs/scale
       */
      "scale-x": [{
        "scale-x": [S]
      }],
      /**
       * Scale Y
       * @see https://tailwindcss.com/docs/scale
       */
      "scale-y": [{
        "scale-y": [S]
      }],
      /**
       * Rotate
       * @see https://tailwindcss.com/docs/rotate
       */
      rotate: [{
        rotate: [jm, gt]
      }],
      /**
       * Translate X
       * @see https://tailwindcss.com/docs/translate
       */
      "translate-x": [{
        "translate-x": [Q]
      }],
      /**
       * Translate Y
       * @see https://tailwindcss.com/docs/translate
       */
      "translate-y": [{
        "translate-y": [Q]
      }],
      /**
       * Skew X
       * @see https://tailwindcss.com/docs/skew
       */
      "skew-x": [{
        "skew-x": [U]
      }],
      /**
       * Skew Y
       * @see https://tailwindcss.com/docs/skew
       */
      "skew-y": [{
        "skew-y": [U]
      }],
      /**
       * Transform Origin
       * @see https://tailwindcss.com/docs/transform-origin
       */
      "transform-origin": [{
        origin: ["center", "top", "top-right", "right", "bottom-right", "bottom", "bottom-left", "left", "top-left", gt]
      }],
      // Interactivity
      /**
       * Accent Color
       * @see https://tailwindcss.com/docs/accent-color
       */
      accent: [{
        accent: ["auto", e]
      }],
      /**
       * Appearance
       * @see https://tailwindcss.com/docs/appearance
       */
      appearance: [{
        appearance: ["none", "auto"]
      }],
      /**
       * Cursor
       * @see https://tailwindcss.com/docs/cursor
       */
      cursor: [{
        cursor: ["auto", "default", "pointer", "wait", "text", "move", "help", "not-allowed", "none", "context-menu", "progress", "cell", "crosshair", "vertical-text", "alias", "copy", "no-drop", "grab", "grabbing", "all-scroll", "col-resize", "row-resize", "n-resize", "e-resize", "s-resize", "w-resize", "ne-resize", "nw-resize", "se-resize", "sw-resize", "ew-resize", "ns-resize", "nesw-resize", "nwse-resize", "zoom-in", "zoom-out", gt]
      }],
      /**
       * Caret Color
       * @see https://tailwindcss.com/docs/just-in-time-mode#caret-color-utilities
       */
      "caret-color": [{
        caret: [e]
      }],
      /**
       * Pointer Events
       * @see https://tailwindcss.com/docs/pointer-events
       */
      "pointer-events": [{
        "pointer-events": ["none", "auto"]
      }],
      /**
       * Resize
       * @see https://tailwindcss.com/docs/resize
       */
      resize: [{
        resize: ["none", "y", "x", ""]
      }],
      /**
       * Scroll Behavior
       * @see https://tailwindcss.com/docs/scroll-behavior
       */
      "scroll-behavior": [{
        scroll: ["auto", "smooth"]
      }],
      /**
       * Scroll Margin
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-m": [{
        "scroll-m": I()
      }],
      /**
       * Scroll Margin X
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mx": [{
        "scroll-mx": I()
      }],
      /**
       * Scroll Margin Y
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-my": [{
        "scroll-my": I()
      }],
      /**
       * Scroll Margin Start
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-ms": [{
        "scroll-ms": I()
      }],
      /**
       * Scroll Margin End
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-me": [{
        "scroll-me": I()
      }],
      /**
       * Scroll Margin Top
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mt": [{
        "scroll-mt": I()
      }],
      /**
       * Scroll Margin Right
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mr": [{
        "scroll-mr": I()
      }],
      /**
       * Scroll Margin Bottom
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mb": [{
        "scroll-mb": I()
      }],
      /**
       * Scroll Margin Left
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-ml": [{
        "scroll-ml": I()
      }],
      /**
       * Scroll Padding
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-p": [{
        "scroll-p": I()
      }],
      /**
       * Scroll Padding X
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-px": [{
        "scroll-px": I()
      }],
      /**
       * Scroll Padding Y
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-py": [{
        "scroll-py": I()
      }],
      /**
       * Scroll Padding Start
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-ps": [{
        "scroll-ps": I()
      }],
      /**
       * Scroll Padding End
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pe": [{
        "scroll-pe": I()
      }],
      /**
       * Scroll Padding Top
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pt": [{
        "scroll-pt": I()
      }],
      /**
       * Scroll Padding Right
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pr": [{
        "scroll-pr": I()
      }],
      /**
       * Scroll Padding Bottom
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pb": [{
        "scroll-pb": I()
      }],
      /**
       * Scroll Padding Left
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pl": [{
        "scroll-pl": I()
      }],
      /**
       * Scroll Snap Align
       * @see https://tailwindcss.com/docs/scroll-snap-align
       */
      "snap-align": [{
        snap: ["start", "end", "center", "align-none"]
      }],
      /**
       * Scroll Snap Stop
       * @see https://tailwindcss.com/docs/scroll-snap-stop
       */
      "snap-stop": [{
        snap: ["normal", "always"]
      }],
      /**
       * Scroll Snap Type
       * @see https://tailwindcss.com/docs/scroll-snap-type
       */
      "snap-type": [{
        snap: ["none", "x", "y", "both"]
      }],
      /**
       * Scroll Snap Type Strictness
       * @see https://tailwindcss.com/docs/scroll-snap-type
       */
      "snap-strictness": [{
        snap: ["mandatory", "proximity"]
      }],
      /**
       * Touch Action
       * @see https://tailwindcss.com/docs/touch-action
       */
      touch: [{
        touch: ["auto", "none", "manipulation"]
      }],
      /**
       * Touch Action X
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-x": [{
        "touch-pan": ["x", "left", "right"]
      }],
      /**
       * Touch Action Y
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-y": [{
        "touch-pan": ["y", "up", "down"]
      }],
      /**
       * Touch Action Pinch Zoom
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-pz": ["touch-pinch-zoom"],
      /**
       * User Select
       * @see https://tailwindcss.com/docs/user-select
       */
      select: [{
        select: ["none", "text", "all", "auto"]
      }],
      /**
       * Will Change
       * @see https://tailwindcss.com/docs/will-change
       */
      "will-change": [{
        "will-change": ["auto", "scroll", "contents", "transform", gt]
      }],
      // SVG
      /**
       * Fill
       * @see https://tailwindcss.com/docs/fill
       */
      fill: [{
        fill: [e, "none"]
      }],
      /**
       * Stroke Width
       * @see https://tailwindcss.com/docs/stroke-width
       */
      "stroke-w": [{
        stroke: [Xa, el, gk]
      }],
      /**
       * Stroke
       * @see https://tailwindcss.com/docs/stroke
       */
      stroke: [{
        stroke: [e, "none"]
      }],
      // Accessibility
      /**
       * Screen Readers
       * @see https://tailwindcss.com/docs/screen-readers
       */
      sr: ["sr-only", "not-sr-only"],
      /**
       * Forced Color Adjust
       * @see https://tailwindcss.com/docs/forced-color-adjust
       */
      "forced-color-adjust": [{
        "forced-color-adjust": ["auto", "none"]
      }]
    },
    conflictingClassGroups: {
      overflow: ["overflow-x", "overflow-y"],
      overscroll: ["overscroll-x", "overscroll-y"],
      inset: ["inset-x", "inset-y", "start", "end", "top", "right", "bottom", "left"],
      "inset-x": ["right", "left"],
      "inset-y": ["top", "bottom"],
      flex: ["basis", "grow", "shrink"],
      gap: ["gap-x", "gap-y"],
      p: ["px", "py", "ps", "pe", "pt", "pr", "pb", "pl"],
      px: ["pr", "pl"],
      py: ["pt", "pb"],
      m: ["mx", "my", "ms", "me", "mt", "mr", "mb", "ml"],
      mx: ["mr", "ml"],
      my: ["mt", "mb"],
      size: ["w", "h"],
      "font-size": ["leading"],
      "fvn-normal": ["fvn-ordinal", "fvn-slashed-zero", "fvn-figure", "fvn-spacing", "fvn-fraction"],
      "fvn-ordinal": ["fvn-normal"],
      "fvn-slashed-zero": ["fvn-normal"],
      "fvn-figure": ["fvn-normal"],
      "fvn-spacing": ["fvn-normal"],
      "fvn-fraction": ["fvn-normal"],
      "line-clamp": ["display", "overflow"],
      rounded: ["rounded-s", "rounded-e", "rounded-t", "rounded-r", "rounded-b", "rounded-l", "rounded-ss", "rounded-se", "rounded-ee", "rounded-es", "rounded-tl", "rounded-tr", "rounded-br", "rounded-bl"],
      "rounded-s": ["rounded-ss", "rounded-es"],
      "rounded-e": ["rounded-se", "rounded-ee"],
      "rounded-t": ["rounded-tl", "rounded-tr"],
      "rounded-r": ["rounded-tr", "rounded-br"],
      "rounded-b": ["rounded-br", "rounded-bl"],
      "rounded-l": ["rounded-tl", "rounded-bl"],
      "border-spacing": ["border-spacing-x", "border-spacing-y"],
      "border-w": ["border-w-s", "border-w-e", "border-w-t", "border-w-r", "border-w-b", "border-w-l"],
      "border-w-x": ["border-w-r", "border-w-l"],
      "border-w-y": ["border-w-t", "border-w-b"],
      "border-color": ["border-color-s", "border-color-e", "border-color-t", "border-color-r", "border-color-b", "border-color-l"],
      "border-color-x": ["border-color-r", "border-color-l"],
      "border-color-y": ["border-color-t", "border-color-b"],
      "scroll-m": ["scroll-mx", "scroll-my", "scroll-ms", "scroll-me", "scroll-mt", "scroll-mr", "scroll-mb", "scroll-ml"],
      "scroll-mx": ["scroll-mr", "scroll-ml"],
      "scroll-my": ["scroll-mt", "scroll-mb"],
      "scroll-p": ["scroll-px", "scroll-py", "scroll-ps", "scroll-pe", "scroll-pt", "scroll-pr", "scroll-pb", "scroll-pl"],
      "scroll-px": ["scroll-pr", "scroll-pl"],
      "scroll-py": ["scroll-pt", "scroll-pb"],
      touch: ["touch-x", "touch-y", "touch-pz"],
      "touch-x": ["touch"],
      "touch-y": ["touch"],
      "touch-pz": ["touch"]
    },
    conflictingClassGroupModifiers: {
      "font-size": ["leading"]
    }
  };
}, MPe = /* @__PURE__ */ hPe(TPe), dM = ({
  className: e,
  thickness: t = 4
}) => /* @__PURE__ */ Pe(
  "svg",
  {
    className: MPe("h-6 w-6 animate-spin", e),
    xmlns: "http://www.w3.org/2000/svg",
    fill: "none",
    viewBox: "0 0 24 24",
    children: [
      /* @__PURE__ */ q(
        "circle",
        {
          className: "opacity-25",
          cx: "12",
          cy: "12",
          r: "10",
          stroke: "currentColor",
          strokeWidth: t
        }
      ),
      /* @__PURE__ */ q(
        "path",
        {
          className: "opacity-75",
          fill: "currentColor",
          d: "M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
        }
      )
    ]
  }
);
var RPe = Object.defineProperty, zPe = (e, t, r) => t in e ? RPe(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r }) : e[t] = r, Qq = (e, t, r) => zPe(e, typeof t != "symbol" ? t + "" : t, r), _c = /* @__PURE__ */ ((e) => (e.AUDIO = "audio", e.IMAGE = "image", e.VIDEO = "video", e.DIMENSIONAL = "dimensional", e))(_c || {}), Zq = /* @__PURE__ */ ((e) => (e.SCENE_JSON = "scene_json", e.GLB = "glb", e.GLTF = "gltf", e.PMX = "pmx", e.PMD = "pmd", e.VMD = "vmd", e))(Zq || {});
const FPe = "https://api.storyteller.ai";
window.STORYTELLER_API_HOST_STORE = void 0;
let DPe = class eB {
  constructor(t) {
    Qq(this, "apiSchemeAndHost"), this.apiSchemeAndHost = t;
  }
  // NB(bt,2025-09-25): 'nx' is creating multiple copies of the library with name 
  //   mangling, so the singleton pattern fails to resolve to a single instance.
  // public static getInstance(): StorytellerApiHostStore {
  //   if (StorytellerApiHostStore.instance !== undefined) {
  //     return StorytellerApiHostStore.instance;
  //   }
  //   const instance = new StorytellerApiHostStore(DEFAULT_API_HOST);
  //   StorytellerApiHostStore.instance = instance;
  //   return instance;
  // }
  static getInstance() {
    if (window.STORYTELLER_API_HOST_STORE !== void 0)
      return window.STORYTELLER_API_HOST_STORE;
    const t = new eB(FPe);
    return window.STORYTELLER_API_HOST_STORE = t, t;
  }
  /** Get the API scheme and host. */
  getApiSchemeAndHost() {
    return console.debug("StorytellerApiHostStore.getApiSchemeAndHost()", this.apiSchemeAndHost, this.constructor.name), this.apiSchemeAndHost;
  }
  /** 
   * Externally update the API host. 
   * This is used to sync with Tauri for enabling easier development.
   */
  setApiSchemeAndHost(t) {
    if (console.debug("StorytellerApiHostStore.setApiSchemeAndHost()", t, this.constructor.name), !t.startsWith("http://") && !t.startsWith("https://"))
      throw new Error(`Scheme not included in URL: ${t}`);
    const r = "https://".lastIndexOf("/");
    if (t.lastIndexOf("/") > r)
      throw new Error(`Path components should not be included in URL: ${t}`);
    this.apiSchemeAndHost = t;
  }
};
var ig = /* @__PURE__ */ ((e) => (e.GOOGLE_API = "https://storage.googleapis.com", e.FUNNEL_API = "https://style.storyteller.ai", e.CDN_API = "https://cdn.storyteller.ai", e.GRAVATAR_API = "https://www.gravatar.com", e))(ig || {}), hk = { exports: {} }, Pt = {};
/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var pM;
function LPe() {
  if (pM) return Pt;
  pM = 1;
  var e = Symbol.for("react.element"), t = Symbol.for("react.portal"), r = Symbol.for("react.fragment"), n = Symbol.for("react.strict_mode"), o = Symbol.for("react.profiler"), a = Symbol.for("react.provider"), i = Symbol.for("react.context"), s = Symbol.for("react.forward_ref"), l = Symbol.for("react.suspense"), c = Symbol.for("react.memo"), u = Symbol.for("react.lazy"), f = Symbol.iterator;
  function p(d) {
    return d === null || typeof d != "object" ? null : (d = f && d[f] || d["@@iterator"], typeof d == "function" ? d : null);
  }
  var v = { isMounted: function() {
    return !1;
  }, enqueueForceUpdate: function() {
  }, enqueueReplaceState: function() {
  }, enqueueSetState: function() {
  } }, x = Object.assign, b = {};
  function m(d, O, C) {
    this.props = d, this.context = O, this.refs = b, this.updater = C || v;
  }
  m.prototype.isReactComponent = {}, m.prototype.setState = function(d, O) {
    if (typeof d != "object" && typeof d != "function" && d != null) throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
    this.updater.enqueueSetState(this, d, O, "setState");
  }, m.prototype.forceUpdate = function(d) {
    this.updater.enqueueForceUpdate(this, d, "forceUpdate");
  };
  function w() {
  }
  w.prototype = m.prototype;
  function $(d, O, C) {
    this.props = d, this.context = O, this.refs = b, this.updater = C || v;
  }
  var E = $.prototype = new w();
  E.constructor = $, x(E, m.prototype), E.isPureReactComponent = !0;
  var S = Array.isArray, h = Object.prototype.hasOwnProperty, U = { current: null }, G = { key: !0, ref: !0, __self: !0, __source: !0 };
  function Q(d, O, C) {
    var A, N = {}, j = null, _ = null;
    if (O != null) for (A in O.ref !== void 0 && (_ = O.ref), O.key !== void 0 && (j = "" + O.key), O) h.call(O, A) && !G.hasOwnProperty(A) && (N[A] = O[A]);
    var T = arguments.length - 2;
    if (T === 1) N.children = C;
    else if (1 < T) {
      for (var M = Array(T), z = 0; z < T; z++) M[z] = arguments[z + 2];
      N.children = M;
    }
    if (d && d.defaultProps) for (A in T = d.defaultProps, T) N[A] === void 0 && (N[A] = T[A]);
    return { $$typeof: e, type: d, key: j, ref: _, props: N, _owner: U.current };
  }
  function Z(d, O) {
    return { $$typeof: e, type: d.type, key: O, ref: d.ref, props: d.props, _owner: d._owner };
  }
  function X(d) {
    return typeof d == "object" && d !== null && d.$$typeof === e;
  }
  function J(d) {
    var O = { "=": "=0", ":": "=2" };
    return "$" + d.replace(/[=:]/g, function(C) {
      return O[C];
    });
  }
  var I = /\/+/g;
  function te(d, O) {
    return typeof d == "object" && d !== null && d.key != null ? J("" + d.key) : O.toString(36);
  }
  function V(d, O, C, A, N) {
    var j = typeof d;
    (j === "undefined" || j === "boolean") && (d = null);
    var _ = !1;
    if (d === null) _ = !0;
    else switch (j) {
      case "string":
      case "number":
        _ = !0;
        break;
      case "object":
        switch (d.$$typeof) {
          case e:
          case t:
            _ = !0;
        }
    }
    if (_) return _ = d, N = N(_), d = A === "" ? "." + te(_, 0) : A, S(N) ? (C = "", d != null && (C = d.replace(I, "$&/") + "/"), V(N, O, C, "", function(z) {
      return z;
    })) : N != null && (X(N) && (N = Z(N, C + (!N.key || _ && _.key === N.key ? "" : ("" + N.key).replace(I, "$&/") + "/") + d)), O.push(N)), 1;
    if (_ = 0, A = A === "" ? "." : A + ":", S(d)) for (var T = 0; T < d.length; T++) {
      j = d[T];
      var M = A + te(j, T);
      _ += V(j, O, C, M, N);
    }
    else if (M = p(d), typeof M == "function") for (d = M.call(d), T = 0; !(j = d.next()).done; ) j = j.value, M = A + te(j, T++), _ += V(j, O, C, M, N);
    else if (j === "object") throw O = String(d), Error("Objects are not valid as a React child (found: " + (O === "[object Object]" ? "object with keys {" + Object.keys(d).join(", ") + "}" : O) + "). If you meant to render a collection of children, use an array instead.");
    return _;
  }
  function D(d, O, C) {
    if (d == null) return d;
    var A = [], N = 0;
    return V(d, A, "", "", function(j) {
      return O.call(C, j, N++);
    }), A;
  }
  function F(d) {
    if (d._status === -1) {
      var O = d._result;
      O = O(), O.then(function(C) {
        (d._status === 0 || d._status === -1) && (d._status = 1, d._result = C);
      }, function(C) {
        (d._status === 0 || d._status === -1) && (d._status = 2, d._result = C);
      }), d._status === -1 && (d._status = 0, d._result = O);
    }
    if (d._status === 1) return d._result.default;
    throw d._result;
  }
  var R = { current: null }, H = { transition: null }, B = { ReactCurrentDispatcher: R, ReactCurrentBatchConfig: H, ReactCurrentOwner: U };
  function g() {
    throw Error("act(...) is not supported in production builds of React.");
  }
  return Pt.Children = { map: D, forEach: function(d, O, C) {
    D(d, function() {
      O.apply(this, arguments);
    }, C);
  }, count: function(d) {
    var O = 0;
    return D(d, function() {
      O++;
    }), O;
  }, toArray: function(d) {
    return D(d, function(O) {
      return O;
    }) || [];
  }, only: function(d) {
    if (!X(d)) throw Error("React.Children.only expected to receive a single React element child.");
    return d;
  } }, Pt.Component = m, Pt.Fragment = r, Pt.Profiler = o, Pt.PureComponent = $, Pt.StrictMode = n, Pt.Suspense = l, Pt.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = B, Pt.act = g, Pt.cloneElement = function(d, O, C) {
    if (d == null) throw Error("React.cloneElement(...): The argument must be a React element, but you passed " + d + ".");
    var A = x({}, d.props), N = d.key, j = d.ref, _ = d._owner;
    if (O != null) {
      if (O.ref !== void 0 && (j = O.ref, _ = U.current), O.key !== void 0 && (N = "" + O.key), d.type && d.type.defaultProps) var T = d.type.defaultProps;
      for (M in O) h.call(O, M) && !G.hasOwnProperty(M) && (A[M] = O[M] === void 0 && T !== void 0 ? T[M] : O[M]);
    }
    var M = arguments.length - 2;
    if (M === 1) A.children = C;
    else if (1 < M) {
      T = Array(M);
      for (var z = 0; z < M; z++) T[z] = arguments[z + 2];
      A.children = T;
    }
    return { $$typeof: e, type: d.type, key: N, ref: j, props: A, _owner: _ };
  }, Pt.createContext = function(d) {
    return d = { $$typeof: i, _currentValue: d, _currentValue2: d, _threadCount: 0, Provider: null, Consumer: null, _defaultValue: null, _globalName: null }, d.Provider = { $$typeof: a, _context: d }, d.Consumer = d;
  }, Pt.createElement = Q, Pt.createFactory = function(d) {
    var O = Q.bind(null, d);
    return O.type = d, O;
  }, Pt.createRef = function() {
    return { current: null };
  }, Pt.forwardRef = function(d) {
    return { $$typeof: s, render: d };
  }, Pt.isValidElement = X, Pt.lazy = function(d) {
    return { $$typeof: u, _payload: { _status: -1, _result: d }, _init: F };
  }, Pt.memo = function(d, O) {
    return { $$typeof: c, type: d, compare: O === void 0 ? null : O };
  }, Pt.startTransition = function(d) {
    var O = H.transition;
    H.transition = {};
    try {
      d();
    } finally {
      H.transition = O;
    }
  }, Pt.unstable_act = g, Pt.useCallback = function(d, O) {
    return R.current.useCallback(d, O);
  }, Pt.useContext = function(d) {
    return R.current.useContext(d);
  }, Pt.useDebugValue = function() {
  }, Pt.useDeferredValue = function(d) {
    return R.current.useDeferredValue(d);
  }, Pt.useEffect = function(d, O) {
    return R.current.useEffect(d, O);
  }, Pt.useId = function() {
    return R.current.useId();
  }, Pt.useImperativeHandle = function(d, O, C) {
    return R.current.useImperativeHandle(d, O, C);
  }, Pt.useInsertionEffect = function(d, O) {
    return R.current.useInsertionEffect(d, O);
  }, Pt.useLayoutEffect = function(d, O) {
    return R.current.useLayoutEffect(d, O);
  }, Pt.useMemo = function(d, O) {
    return R.current.useMemo(d, O);
  }, Pt.useReducer = function(d, O, C) {
    return R.current.useReducer(d, O, C);
  }, Pt.useRef = function(d) {
    return R.current.useRef(d);
  }, Pt.useState = function(d) {
    return R.current.useState(d);
  }, Pt.useSyncExternalStore = function(d, O, C) {
    return R.current.useSyncExternalStore(d, O, C);
  }, Pt.useTransition = function() {
    return R.current.useTransition();
  }, Pt.version = "18.3.1", Pt;
}
var dv = { exports: {} };
/**
 * @license React
 * react.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
dv.exports;
var mM;
function VPe() {
  return mM || (mM = 1, function(e, t) {
    process.env.NODE_ENV !== "production" && function() {
      typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
      var r = "18.3.1", n = Symbol.for("react.element"), o = Symbol.for("react.portal"), a = Symbol.for("react.fragment"), i = Symbol.for("react.strict_mode"), s = Symbol.for("react.profiler"), l = Symbol.for("react.provider"), c = Symbol.for("react.context"), u = Symbol.for("react.forward_ref"), f = Symbol.for("react.suspense"), p = Symbol.for("react.suspense_list"), v = Symbol.for("react.memo"), x = Symbol.for("react.lazy"), b = Symbol.for("react.offscreen"), m = Symbol.iterator, w = "@@iterator";
      function $(y) {
        if (y === null || typeof y != "object")
          return null;
        var P = m && y[m] || y[w];
        return typeof P == "function" ? P : null;
      }
      var E = {
        /**
         * @internal
         * @type {ReactComponent}
         */
        current: null
      }, S = {
        transition: null
      }, h = {
        current: null,
        // Used to reproduce behavior of `batchedUpdates` in legacy mode.
        isBatchingLegacy: !1,
        didScheduleLegacyUpdate: !1
      }, U = {
        /**
         * @internal
         * @type {ReactComponent}
         */
        current: null
      }, G = {}, Q = null;
      function Z(y) {
        Q = y;
      }
      G.setExtraStackFrame = function(y) {
        Q = y;
      }, G.getCurrentStack = null, G.getStackAddendum = function() {
        var y = "";
        Q && (y += Q);
        var P = G.getCurrentStack;
        return P && (y += P() || ""), y;
      };
      var X = !1, J = !1, I = !1, te = !1, V = !1, D = {
        ReactCurrentDispatcher: E,
        ReactCurrentBatchConfig: S,
        ReactCurrentOwner: U
      };
      D.ReactDebugCurrentFrame = G, D.ReactCurrentActQueue = h;
      function F(y) {
        {
          for (var P = arguments.length, L = new Array(P > 1 ? P - 1 : 0), W = 1; W < P; W++)
            L[W - 1] = arguments[W];
          H("warn", y, L);
        }
      }
      function R(y) {
        {
          for (var P = arguments.length, L = new Array(P > 1 ? P - 1 : 0), W = 1; W < P; W++)
            L[W - 1] = arguments[W];
          H("error", y, L);
        }
      }
      function H(y, P, L) {
        {
          var W = D.ReactDebugCurrentFrame, K = W.getStackAddendum();
          K !== "" && (P += "%s", L = L.concat([K]));
          var ne = L.map(function(re) {
            return String(re);
          });
          ne.unshift("Warning: " + P), Function.prototype.apply.call(console[y], console, ne);
        }
      }
      var B = {};
      function g(y, P) {
        {
          var L = y.constructor, W = L && (L.displayName || L.name) || "ReactClass", K = W + "." + P;
          if (B[K])
            return;
          R("Can't call %s on a component that is not yet mounted. This is a no-op, but it might indicate a bug in your application. Instead, assign to `this.state` directly or define a `state = {};` class property with the desired state in the %s component.", P, W), B[K] = !0;
        }
      }
      var d = {
        /**
         * Checks whether or not this composite component is mounted.
         * @param {ReactClass} publicInstance The instance we want to test.
         * @return {boolean} True if mounted, false otherwise.
         * @protected
         * @final
         */
        isMounted: function(y) {
          return !1;
        },
        /**
         * Forces an update. This should only be invoked when it is known with
         * certainty that we are **not** in a DOM transaction.
         *
         * You may want to call this when you know that some deeper aspect of the
         * component's state has changed but `setState` was not called.
         *
         * This will not invoke `shouldComponentUpdate`, but it will invoke
         * `componentWillUpdate` and `componentDidUpdate`.
         *
         * @param {ReactClass} publicInstance The instance that should rerender.
         * @param {?function} callback Called after component is updated.
         * @param {?string} callerName name of the calling function in the public API.
         * @internal
         */
        enqueueForceUpdate: function(y, P, L) {
          g(y, "forceUpdate");
        },
        /**
         * Replaces all of the state. Always use this or `setState` to mutate state.
         * You should treat `this.state` as immutable.
         *
         * There is no guarantee that `this.state` will be immediately updated, so
         * accessing `this.state` after calling this method may return the old value.
         *
         * @param {ReactClass} publicInstance The instance that should rerender.
         * @param {object} completeState Next state.
         * @param {?function} callback Called after component is updated.
         * @param {?string} callerName name of the calling function in the public API.
         * @internal
         */
        enqueueReplaceState: function(y, P, L, W) {
          g(y, "replaceState");
        },
        /**
         * Sets a subset of the state. This only exists because _pendingState is
         * internal. This provides a merging strategy that is not available to deep
         * properties which is confusing. TODO: Expose pendingState or don't use it
         * during the merge.
         *
         * @param {ReactClass} publicInstance The instance that should rerender.
         * @param {object} partialState Next partial state to be merged with state.
         * @param {?function} callback Called after component is updated.
         * @param {?string} Name of the calling function in the public API.
         * @internal
         */
        enqueueSetState: function(y, P, L, W) {
          g(y, "setState");
        }
      }, O = Object.assign, C = {};
      Object.freeze(C);
      function A(y, P, L) {
        this.props = y, this.context = P, this.refs = C, this.updater = L || d;
      }
      A.prototype.isReactComponent = {}, A.prototype.setState = function(y, P) {
        if (typeof y != "object" && typeof y != "function" && y != null)
          throw new Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
        this.updater.enqueueSetState(this, y, P, "setState");
      }, A.prototype.forceUpdate = function(y) {
        this.updater.enqueueForceUpdate(this, y, "forceUpdate");
      };
      {
        var N = {
          isMounted: ["isMounted", "Instead, make sure to clean up subscriptions and pending requests in componentWillUnmount to prevent memory leaks."],
          replaceState: ["replaceState", "Refactor your code to use setState instead (see https://github.com/facebook/react/issues/3236)."]
        }, j = function(y, P) {
          Object.defineProperty(A.prototype, y, {
            get: function() {
              F("%s(...) is deprecated in plain JavaScript React classes. %s", P[0], P[1]);
            }
          });
        };
        for (var _ in N)
          N.hasOwnProperty(_) && j(_, N[_]);
      }
      function T() {
      }
      T.prototype = A.prototype;
      function M(y, P, L) {
        this.props = y, this.context = P, this.refs = C, this.updater = L || d;
      }
      var z = M.prototype = new T();
      z.constructor = M, O(z, A.prototype), z.isPureReactComponent = !0;
      function ee() {
        var y = {
          current: null
        };
        return Object.seal(y), y;
      }
      var k = Array.isArray;
      function oe(y) {
        return k(y);
      }
      function Ce(y) {
        {
          var P = typeof Symbol == "function" && Symbol.toStringTag, L = P && y[Symbol.toStringTag] || y.constructor.name || "Object";
          return L;
        }
      }
      function Ze(y) {
        try {
          return rn(y), !1;
        } catch {
          return !0;
        }
      }
      function rn(y) {
        return "" + y;
      }
      function Xr(y) {
        if (Ze(y))
          return R("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", Ce(y)), rn(y);
      }
      function le(y, P, L) {
        var W = y.displayName;
        if (W)
          return W;
        var K = P.displayName || P.name || "";
        return K !== "" ? L + "(" + K + ")" : L;
      }
      function se(y) {
        return y.displayName || "Context";
      }
      function de(y) {
        if (y == null)
          return null;
        if (typeof y.tag == "number" && R("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."), typeof y == "function")
          return y.displayName || y.name || null;
        if (typeof y == "string")
          return y;
        switch (y) {
          case a:
            return "Fragment";
          case o:
            return "Portal";
          case s:
            return "Profiler";
          case i:
            return "StrictMode";
          case f:
            return "Suspense";
          case p:
            return "SuspenseList";
        }
        if (typeof y == "object")
          switch (y.$$typeof) {
            case c:
              var P = y;
              return se(P) + ".Consumer";
            case l:
              var L = y;
              return se(L._context) + ".Provider";
            case u:
              return le(y, y.render, "ForwardRef");
            case v:
              var W = y.displayName || null;
              return W !== null ? W : de(y.type) || "Memo";
            case x: {
              var K = y, ne = K._payload, re = K._init;
              try {
                return de(re(ne));
              } catch {
                return null;
              }
            }
          }
        return null;
      }
      var rt = Object.prototype.hasOwnProperty, Ct = {
        key: !0,
        ref: !0,
        __self: !0,
        __source: !0
      }, ue, je, Re;
      Re = {};
      function ze(y) {
        if (rt.call(y, "ref")) {
          var P = Object.getOwnPropertyDescriptor(y, "ref").get;
          if (P && P.isReactWarning)
            return !1;
        }
        return y.ref !== void 0;
      }
      function Ot(y) {
        if (rt.call(y, "key")) {
          var P = Object.getOwnPropertyDescriptor(y, "key").get;
          if (P && P.isReactWarning)
            return !1;
        }
        return y.key !== void 0;
      }
      function Kr(y, P) {
        var L = function() {
          ue || (ue = !0, R("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", P));
        };
        L.isReactWarning = !0, Object.defineProperty(y, "key", {
          get: L,
          configurable: !0
        });
      }
      function xo(y, P) {
        var L = function() {
          je || (je = !0, R("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", P));
        };
        L.isReactWarning = !0, Object.defineProperty(y, "ref", {
          get: L,
          configurable: !0
        });
      }
      function Hn(y) {
        if (typeof y.ref == "string" && U.current && y.__self && U.current.stateNode !== y.__self) {
          var P = de(U.current.type);
          Re[P] || (R('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', P, y.ref), Re[P] = !0);
        }
      }
      var Qr = function(y, P, L, W, K, ne, re) {
        var ae = {
          // This tag allows us to uniquely identify this as a React Element
          $$typeof: n,
          // Built-in properties that belong on the element
          type: y,
          key: P,
          ref: L,
          props: re,
          // Record the component responsible for creating this element.
          _owner: ne
        };
        return ae._store = {}, Object.defineProperty(ae._store, "validated", {
          configurable: !1,
          enumerable: !1,
          writable: !0,
          value: !1
        }), Object.defineProperty(ae, "_self", {
          configurable: !1,
          enumerable: !1,
          writable: !1,
          value: W
        }), Object.defineProperty(ae, "_source", {
          configurable: !1,
          enumerable: !1,
          writable: !1,
          value: K
        }), Object.freeze && (Object.freeze(ae.props), Object.freeze(ae)), ae;
      };
      function wo(y, P, L) {
        var W, K = {}, ne = null, re = null, ae = null, fe = null;
        if (P != null) {
          ze(P) && (re = P.ref, Hn(P)), Ot(P) && (Xr(P.key), ne = "" + P.key), ae = P.__self === void 0 ? null : P.__self, fe = P.__source === void 0 ? null : P.__source;
          for (W in P)
            rt.call(P, W) && !Ct.hasOwnProperty(W) && (K[W] = P[W]);
        }
        var Ae = arguments.length - 2;
        if (Ae === 1)
          K.children = L;
        else if (Ae > 1) {
          for (var Ie = Array(Ae), Te = 0; Te < Ae; Te++)
            Ie[Te] = arguments[Te + 2];
          Object.freeze && Object.freeze(Ie), K.children = Ie;
        }
        if (y && y.defaultProps) {
          var Me = y.defaultProps;
          for (W in Me)
            K[W] === void 0 && (K[W] = Me[W]);
        }
        if (ne || re) {
          var Fe = typeof y == "function" ? y.displayName || y.name || "Unknown" : y;
          ne && Kr(K, Fe), re && xo(K, Fe);
        }
        return Qr(y, ne, re, ae, fe, U.current, K);
      }
      function Ht(y, P) {
        var L = Qr(y.type, P, y.ref, y._self, y._source, y._owner, y.props);
        return L;
      }
      function lo(y, P, L) {
        if (y == null)
          throw new Error("React.cloneElement(...): The argument must be a React element, but you passed " + y + ".");
        var W, K = O({}, y.props), ne = y.key, re = y.ref, ae = y._self, fe = y._source, Ae = y._owner;
        if (P != null) {
          ze(P) && (re = P.ref, Ae = U.current), Ot(P) && (Xr(P.key), ne = "" + P.key);
          var Ie;
          y.type && y.type.defaultProps && (Ie = y.type.defaultProps);
          for (W in P)
            rt.call(P, W) && !Ct.hasOwnProperty(W) && (P[W] === void 0 && Ie !== void 0 ? K[W] = Ie[W] : K[W] = P[W]);
        }
        var Te = arguments.length - 2;
        if (Te === 1)
          K.children = L;
        else if (Te > 1) {
          for (var Me = Array(Te), Fe = 0; Fe < Te; Fe++)
            Me[Fe] = arguments[Fe + 2];
          K.children = Me;
        }
        return Qr(y.type, ne, re, ae, fe, Ae, K);
      }
      function br(y) {
        return typeof y == "object" && y !== null && y.$$typeof === n;
      }
      var co = ".", za = ":";
      function lp(y) {
        var P = /[=:]/g, L = {
          "=": "=0",
          ":": "=2"
        }, W = y.replace(P, function(K) {
          return L[K];
        });
        return "$" + W;
      }
      var Xi = !1, cp = /\/+/g;
      function Ki(y) {
        return y.replace(cp, "$&/");
      }
      function ko(y, P) {
        return typeof y == "object" && y !== null && y.key != null ? (Xr(y.key), lp("" + y.key)) : P.toString(36);
      }
      function Sn(y, P, L, W, K) {
        var ne = typeof y;
        (ne === "undefined" || ne === "boolean") && (y = null);
        var re = !1;
        if (y === null)
          re = !0;
        else
          switch (ne) {
            case "string":
            case "number":
              re = !0;
              break;
            case "object":
              switch (y.$$typeof) {
                case n:
                case o:
                  re = !0;
              }
          }
        if (re) {
          var ae = y, fe = K(ae), Ae = W === "" ? co + ko(ae, 0) : W;
          if (oe(fe)) {
            var Ie = "";
            Ae != null && (Ie = Ki(Ae) + "/"), Sn(fe, P, Ie, "", function(tm) {
              return tm;
            });
          } else fe != null && (br(fe) && (fe.key && (!ae || ae.key !== fe.key) && Xr(fe.key), fe = Ht(
            fe,
            // Keep both the (mapped) and old keys if they differ, just as
            // traverseAllChildren used to do for objects as children
            L + // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key
            (fe.key && (!ae || ae.key !== fe.key) ? (
              // $FlowFixMe Flow incorrectly thinks existing element's key can be a number
              // eslint-disable-next-line react-internal/safe-string-coercion
              Ki("" + fe.key) + "/"
            ) : "") + Ae
          )), P.push(fe));
          return 1;
        }
        var Te, Me, Fe = 0, Je = W === "" ? co : W + za;
        if (oe(y))
          for (var Tn = 0; Tn < y.length; Tn++)
            Te = y[Tn], Me = Je + ko(Te, Tn), Fe += Sn(Te, P, L, Me, K);
        else {
          var No = $(y);
          if (typeof No == "function") {
            var ws = y;
            No === ws.entries && (Xi || F("Using Maps as children is not supported. Use an array of keyed ReactElements instead."), Xi = !0);
            for (var Zp = No.call(ws), ks, em = 0; !(ks = Zp.next()).done; )
              Te = ks.value, Me = Je + ko(Te, em++), Fe += Sn(Te, P, L, Me, K);
          } else if (ne === "object") {
            var $s = String(y);
            throw new Error("Objects are not valid as a React child (found: " + ($s === "[object Object]" ? "object with keys {" + Object.keys(y).join(", ") + "}" : $s) + "). If you meant to render a collection of children, use an array instead.");
          }
        }
        return Fe;
      }
      function Pn(y, P, L) {
        if (y == null)
          return y;
        var W = [], K = 0;
        return Sn(y, W, "", "", function(ne) {
          return P.call(L, ne, K++);
        }), W;
      }
      function up(y) {
        var P = 0;
        return Pn(y, function() {
          P++;
        }), P;
      }
      function fp(y, P, L) {
        Pn(y, function() {
          P.apply(this, arguments);
        }, L);
      }
      function dp(y) {
        return Pn(y, function(P) {
          return P;
        }) || [];
      }
      function pp(y) {
        if (!br(y))
          throw new Error("React.Children.only expected to receive a single React element child.");
        return y;
      }
      function mp(y) {
        var P = {
          $$typeof: c,
          // As a workaround to support multiple concurrent renderers, we categorize
          // some renderers as primary and others as secondary. We only expect
          // there to be two concurrent renderers at most: React Native (primary) and
          // Fabric (secondary); React DOM (primary) and React ART (secondary).
          // Secondary renderers store their context values on separate fields.
          _currentValue: y,
          _currentValue2: y,
          // Used to track how many concurrent renderers this context currently
          // supports within in a single renderer. Such as parallel server rendering.
          _threadCount: 0,
          // These are circular
          Provider: null,
          Consumer: null,
          // Add these to use same hidden class in VM as ServerContext
          _defaultValue: null,
          _globalName: null
        };
        P.Provider = {
          $$typeof: l,
          _context: P
        };
        var L = !1, W = !1, K = !1;
        {
          var ne = {
            $$typeof: c,
            _context: P
          };
          Object.defineProperties(ne, {
            Provider: {
              get: function() {
                return W || (W = !0, R("Rendering <Context.Consumer.Provider> is not supported and will be removed in a future major release. Did you mean to render <Context.Provider> instead?")), P.Provider;
              },
              set: function(re) {
                P.Provider = re;
              }
            },
            _currentValue: {
              get: function() {
                return P._currentValue;
              },
              set: function(re) {
                P._currentValue = re;
              }
            },
            _currentValue2: {
              get: function() {
                return P._currentValue2;
              },
              set: function(re) {
                P._currentValue2 = re;
              }
            },
            _threadCount: {
              get: function() {
                return P._threadCount;
              },
              set: function(re) {
                P._threadCount = re;
              }
            },
            Consumer: {
              get: function() {
                return L || (L = !0, R("Rendering <Context.Consumer.Consumer> is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?")), P.Consumer;
              }
            },
            displayName: {
              get: function() {
                return P.displayName;
              },
              set: function(re) {
                K || (F("Setting `displayName` on Context.Consumer has no effect. You should set it directly on the context with Context.displayName = '%s'.", re), K = !0);
              }
            }
          }), P.Consumer = ne;
        }
        return P._currentRenderer = null, P._currentRenderer2 = null, P;
      }
      var on = -1, $o = 0, Ji = 1, gp = 2;
      function hp(y) {
        if (y._status === on) {
          var P = y._result, L = P();
          if (L.then(function(ne) {
            if (y._status === $o || y._status === on) {
              var re = y;
              re._status = Ji, re._result = ne;
            }
          }, function(ne) {
            if (y._status === $o || y._status === on) {
              var re = y;
              re._status = gp, re._result = ne;
            }
          }), y._status === on) {
            var W = y;
            W._status = $o, W._result = L;
          }
        }
        if (y._status === Ji) {
          var K = y._result;
          return K === void 0 && R(`lazy: Expected the result of a dynamic import() call. Instead received: %s

Your code should look like: 
  const MyComponent = lazy(() => import('./MyComponent'))

Did you accidentally put curly braces around the import?`, K), "default" in K || R(`lazy: Expected the result of a dynamic import() call. Instead received: %s

Your code should look like: 
  const MyComponent = lazy(() => import('./MyComponent'))`, K), K.default;
        } else
          throw y._result;
      }
      function bp(y) {
        var P = {
          // We use these fields to store the result.
          _status: on,
          _result: y
        }, L = {
          $$typeof: x,
          _payload: P,
          _init: hp
        };
        {
          var W, K;
          Object.defineProperties(L, {
            defaultProps: {
              configurable: !0,
              get: function() {
                return W;
              },
              set: function(ne) {
                R("React.lazy(...): It is not supported to assign `defaultProps` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it."), W = ne, Object.defineProperty(L, "defaultProps", {
                  enumerable: !0
                });
              }
            },
            propTypes: {
              configurable: !0,
              get: function() {
                return K;
              },
              set: function(ne) {
                R("React.lazy(...): It is not supported to assign `propTypes` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it."), K = ne, Object.defineProperty(L, "propTypes", {
                  enumerable: !0
                });
              }
            }
          });
        }
        return L;
      }
      function yp(y) {
        y != null && y.$$typeof === v ? R("forwardRef requires a render function but received a `memo` component. Instead of forwardRef(memo(...)), use memo(forwardRef(...)).") : typeof y != "function" ? R("forwardRef requires a render function but was given %s.", y === null ? "null" : typeof y) : y.length !== 0 && y.length !== 2 && R("forwardRef render functions accept exactly two parameters: props and ref. %s", y.length === 1 ? "Did you forget to use the ref parameter?" : "Any additional parameter will be undefined."), y != null && (y.defaultProps != null || y.propTypes != null) && R("forwardRef render functions do not support propTypes or defaultProps. Did you accidentally pass a React component?");
        var P = {
          $$typeof: u,
          render: y
        };
        {
          var L;
          Object.defineProperty(P, "displayName", {
            enumerable: !1,
            configurable: !0,
            get: function() {
              return L;
            },
            set: function(W) {
              L = W, !y.name && !y.displayName && (y.displayName = W);
            }
          });
        }
        return P;
      }
      var Qi;
      Qi = Symbol.for("react.module.reference");
      function Zi(y) {
        return !!(typeof y == "string" || typeof y == "function" || y === a || y === s || V || y === i || y === f || y === p || te || y === b || X || J || I || typeof y == "object" && y !== null && (y.$$typeof === x || y.$$typeof === v || y.$$typeof === l || y.$$typeof === c || y.$$typeof === u || // This needs to include all possible module reference object
        // types supported by any Flight configuration anywhere since
        // we don't know which Flight build this will end up being used
        // with.
        y.$$typeof === Qi || y.getModuleId !== void 0));
      }
      function vp(y, P) {
        Zi(y) || R("memo: The first argument must be a component. Instead received: %s", y === null ? "null" : typeof y);
        var L = {
          $$typeof: v,
          type: y,
          compare: P === void 0 ? null : P
        };
        {
          var W;
          Object.defineProperty(L, "displayName", {
            enumerable: !1,
            configurable: !0,
            get: function() {
              return W;
            },
            set: function(K) {
              W = K, !y.name && !y.displayName && (y.displayName = K);
            }
          });
        }
        return L;
      }
      function tt() {
        var y = E.current;
        return y === null && R(`Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:
1. You might have mismatching versions of React and the renderer (such as React DOM)
2. You might be breaking the Rules of Hooks
3. You might have more than one copy of React in the same app
See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.`), y;
      }
      function xp(y) {
        var P = tt();
        if (y._context !== void 0) {
          var L = y._context;
          L.Consumer === y ? R("Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be removed in a future major release. Did you mean to call useContext(Context) instead?") : L.Provider === y && R("Calling useContext(Context.Provider) is not supported. Did you mean to call useContext(Context) instead?");
        }
        return P.useContext(y);
      }
      function wp(y) {
        var P = tt();
        return P.useState(y);
      }
      function kp(y, P, L) {
        var W = tt();
        return W.useReducer(y, P, L);
      }
      function $p(y) {
        var P = tt();
        return P.useRef(y);
      }
      function Op(y, P) {
        var L = tt();
        return L.useEffect(y, P);
      }
      function Ep(y, P) {
        var L = tt();
        return L.useInsertionEffect(y, P);
      }
      function Sp(y, P) {
        var L = tt();
        return L.useLayoutEffect(y, P);
      }
      function Pp(y, P) {
        var L = tt();
        return L.useCallback(y, P);
      }
      function Cp(y, P) {
        var L = tt();
        return L.useMemo(y, P);
      }
      function Ap(y, P, L) {
        var W = tt();
        return W.useImperativeHandle(y, P, L);
      }
      function _p(y, P) {
        {
          var L = tt();
          return L.useDebugValue(y, P);
        }
      }
      function Np() {
        var y = tt();
        return y.useTransition();
      }
      function jp(y) {
        var P = tt();
        return P.useDeferredValue(y);
      }
      function Ip() {
        var y = tt();
        return y.useId();
      }
      function Tp(y, P, L) {
        var W = tt();
        return W.useSyncExternalStore(y, P, L);
      }
      var an = 0, es, ts, rs, ns, os, as, is;
      function ss() {
      }
      ss.__reactDisabledLog = !0;
      function Mp() {
        {
          if (an === 0) {
            es = console.log, ts = console.info, rs = console.warn, ns = console.error, os = console.group, as = console.groupCollapsed, is = console.groupEnd;
            var y = {
              configurable: !0,
              enumerable: !0,
              value: ss,
              writable: !0
            };
            Object.defineProperties(console, {
              info: y,
              log: y,
              warn: y,
              error: y,
              group: y,
              groupCollapsed: y,
              groupEnd: y
            });
          }
          an++;
        }
      }
      function Rp() {
        {
          if (an--, an === 0) {
            var y = {
              configurable: !0,
              enumerable: !0,
              writable: !0
            };
            Object.defineProperties(console, {
              log: O({}, y, {
                value: es
              }),
              info: O({}, y, {
                value: ts
              }),
              warn: O({}, y, {
                value: rs
              }),
              error: O({}, y, {
                value: ns
              }),
              group: O({}, y, {
                value: os
              }),
              groupCollapsed: O({}, y, {
                value: as
              }),
              groupEnd: O({}, y, {
                value: is
              })
            });
          }
          an < 0 && R("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
        }
      }
      var Oo = D.ReactCurrentDispatcher, Eo;
      function Cn(y, P, L) {
        {
          if (Eo === void 0)
            try {
              throw Error();
            } catch (K) {
              var W = K.stack.trim().match(/\n( *(at )?)/);
              Eo = W && W[1] || "";
            }
          return `
` + Eo + y;
        }
      }
      var So = !1, An;
      {
        var zp = typeof WeakMap == "function" ? WeakMap : Map;
        An = new zp();
      }
      function ls(y, P) {
        if (!y || So)
          return "";
        {
          var L = An.get(y);
          if (L !== void 0)
            return L;
        }
        var W;
        So = !0;
        var K = Error.prepareStackTrace;
        Error.prepareStackTrace = void 0;
        var ne;
        ne = Oo.current, Oo.current = null, Mp();
        try {
          if (P) {
            var re = function() {
              throw Error();
            };
            if (Object.defineProperty(re.prototype, "props", {
              set: function() {
                throw Error();
              }
            }), typeof Reflect == "object" && Reflect.construct) {
              try {
                Reflect.construct(re, []);
              } catch (Je) {
                W = Je;
              }
              Reflect.construct(y, [], re);
            } else {
              try {
                re.call();
              } catch (Je) {
                W = Je;
              }
              y.call(re.prototype);
            }
          } else {
            try {
              throw Error();
            } catch (Je) {
              W = Je;
            }
            y();
          }
        } catch (Je) {
          if (Je && W && typeof Je.stack == "string") {
            for (var ae = Je.stack.split(`
`), fe = W.stack.split(`
`), Ae = ae.length - 1, Ie = fe.length - 1; Ae >= 1 && Ie >= 0 && ae[Ae] !== fe[Ie]; )
              Ie--;
            for (; Ae >= 1 && Ie >= 0; Ae--, Ie--)
              if (ae[Ae] !== fe[Ie]) {
                if (Ae !== 1 || Ie !== 1)
                  do
                    if (Ae--, Ie--, Ie < 0 || ae[Ae] !== fe[Ie]) {
                      var Te = `
` + ae[Ae].replace(" at new ", " at ");
                      return y.displayName && Te.includes("<anonymous>") && (Te = Te.replace("<anonymous>", y.displayName)), typeof y == "function" && An.set(y, Te), Te;
                    }
                  while (Ae >= 1 && Ie >= 0);
                break;
              }
          }
        } finally {
          So = !1, Oo.current = ne, Rp(), Error.prepareStackTrace = K;
        }
        var Me = y ? y.displayName || y.name : "", Fe = Me ? Cn(Me) : "";
        return typeof y == "function" && An.set(y, Fe), Fe;
      }
      function Fp(y, P, L) {
        return ls(y, !1);
      }
      function Dp(y) {
        var P = y.prototype;
        return !!(P && P.isReactComponent);
      }
      function _n(y, P, L) {
        if (y == null)
          return "";
        if (typeof y == "function")
          return ls(y, Dp(y));
        if (typeof y == "string")
          return Cn(y);
        switch (y) {
          case f:
            return Cn("Suspense");
          case p:
            return Cn("SuspenseList");
        }
        if (typeof y == "object")
          switch (y.$$typeof) {
            case u:
              return Fp(y.render);
            case v:
              return _n(y.type, P, L);
            case x: {
              var W = y, K = W._payload, ne = W._init;
              try {
                return _n(ne(K), P, L);
              } catch {
              }
            }
          }
        return "";
      }
      var cs = {}, us = D.ReactDebugCurrentFrame;
      function Nn(y) {
        if (y) {
          var P = y._owner, L = _n(y.type, y._source, P ? P.type : null);
          us.setExtraStackFrame(L);
        } else
          us.setExtraStackFrame(null);
      }
      function Lp(y, P, L, W, K) {
        {
          var ne = Function.call.bind(rt);
          for (var re in y)
            if (ne(y, re)) {
              var ae = void 0;
              try {
                if (typeof y[re] != "function") {
                  var fe = Error((W || "React class") + ": " + L + " type `" + re + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof y[re] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                  throw fe.name = "Invariant Violation", fe;
                }
                ae = y[re](P, re, W, L, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
              } catch (Ae) {
                ae = Ae;
              }
              ae && !(ae instanceof Error) && (Nn(K), R("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", W || "React class", L, re, typeof ae), Nn(null)), ae instanceof Error && !(ae.message in cs) && (cs[ae.message] = !0, Nn(K), R("Failed %s type: %s", L, ae.message), Nn(null));
            }
        }
      }
      function Zr(y) {
        if (y) {
          var P = y._owner, L = _n(y.type, y._source, P ? P.type : null);
          Z(L);
        } else
          Z(null);
      }
      var Po;
      Po = !1;
      function fs() {
        if (U.current) {
          var y = de(U.current.type);
          if (y)
            return `

Check the render method of \`` + y + "`.";
        }
        return "";
      }
      function Vp(y) {
        if (y !== void 0) {
          var P = y.fileName.replace(/^.*[\\\/]/, ""), L = y.lineNumber;
          return `

Check your code at ` + P + ":" + L + ".";
        }
        return "";
      }
      function Wp(y) {
        return y != null ? Vp(y.__source) : "";
      }
      var ds = {};
      function Up(y) {
        var P = fs();
        if (!P) {
          var L = typeof y == "string" ? y : y.displayName || y.name;
          L && (P = `

Check the top-level render call using <` + L + ">.");
        }
        return P;
      }
      function ps(y, P) {
        if (!(!y._store || y._store.validated || y.key != null)) {
          y._store.validated = !0;
          var L = Up(P);
          if (!ds[L]) {
            ds[L] = !0;
            var W = "";
            y && y._owner && y._owner !== U.current && (W = " It was passed a child from " + de(y._owner.type) + "."), Zr(y), R('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', L, W), Zr(null);
          }
        }
      }
      function ms(y, P) {
        if (typeof y == "object") {
          if (oe(y))
            for (var L = 0; L < y.length; L++) {
              var W = y[L];
              br(W) && ps(W, P);
            }
          else if (br(y))
            y._store && (y._store.validated = !0);
          else if (y) {
            var K = $(y);
            if (typeof K == "function" && K !== y.entries)
              for (var ne = K.call(y), re; !(re = ne.next()).done; )
                br(re.value) && ps(re.value, P);
          }
        }
      }
      function gs(y) {
        {
          var P = y.type;
          if (P == null || typeof P == "string")
            return;
          var L;
          if (typeof P == "function")
            L = P.propTypes;
          else if (typeof P == "object" && (P.$$typeof === u || // Note: Memo only checks outer props here.
          // Inner props are checked in the reconciler.
          P.$$typeof === v))
            L = P.propTypes;
          else
            return;
          if (L) {
            var W = de(P);
            Lp(L, y.props, "prop", W, y);
          } else if (P.PropTypes !== void 0 && !Po) {
            Po = !0;
            var K = de(P);
            R("Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?", K || "Unknown");
          }
          typeof P.getDefaultProps == "function" && !P.getDefaultProps.isReactClassApproved && R("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
        }
      }
      function Yp(y) {
        {
          for (var P = Object.keys(y.props), L = 0; L < P.length; L++) {
            var W = P[L];
            if (W !== "children" && W !== "key") {
              Zr(y), R("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", W), Zr(null);
              break;
            }
          }
          y.ref !== null && (Zr(y), R("Invalid attribute `ref` supplied to `React.Fragment`."), Zr(null));
        }
      }
      function hs(y, P, L) {
        var W = Zi(y);
        if (!W) {
          var K = "";
          (y === void 0 || typeof y == "object" && y !== null && Object.keys(y).length === 0) && (K += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.");
          var ne = Wp(P);
          ne ? K += ne : K += fs();
          var re;
          y === null ? re = "null" : oe(y) ? re = "array" : y !== void 0 && y.$$typeof === n ? (re = "<" + (de(y.type) || "Unknown") + " />", K = " Did you accidentally export a JSX literal instead of a component?") : re = typeof y, R("React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", re, K);
        }
        var ae = wo.apply(this, arguments);
        if (ae == null)
          return ae;
        if (W)
          for (var fe = 2; fe < arguments.length; fe++)
            ms(arguments[fe], y);
        return y === a ? Yp(ae) : gs(ae), ae;
      }
      var bs = !1;
      function Hp(y) {
        var P = hs.bind(null, y);
        return P.type = y, bs || (bs = !0, F("React.createFactory() is deprecated and will be removed in a future major release. Consider using JSX or use React.createElement() directly instead.")), Object.defineProperty(P, "type", {
          enumerable: !1,
          get: function() {
            return F("Factory.type is deprecated. Access the class directly before passing it to createFactory."), Object.defineProperty(this, "type", {
              value: y
            }), y;
          }
        }), P;
      }
      function Gp(y, P, L) {
        for (var W = lo.apply(this, arguments), K = 2; K < arguments.length; K++)
          ms(arguments[K], W.type);
        return gs(W), W;
      }
      function qp(y, P) {
        var L = S.transition;
        S.transition = {};
        var W = S.transition;
        S.transition._updatedFibers = /* @__PURE__ */ new Set();
        try {
          y();
        } finally {
          if (S.transition = L, L === null && W._updatedFibers) {
            var K = W._updatedFibers.size;
            K > 10 && F("Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table."), W._updatedFibers.clear();
          }
        }
      }
      var ys = !1, jn = null;
      function Bp(y) {
        if (jn === null)
          try {
            var P = ("require" + Math.random()).slice(0, 7), L = e && e[P];
            jn = L.call(e, "timers").setImmediate;
          } catch {
            jn = function(W) {
              ys === !1 && (ys = !0, typeof MessageChannel > "u" && R("This browser does not have a MessageChannel implementation, so enqueuing tasks via await act(async () => ...) will fail. Please file an issue at https://github.com/facebook/react/issues if you encounter this warning."));
              var K = new MessageChannel();
              K.port1.onmessage = W, K.port2.postMessage(void 0);
            };
          }
        return jn(y);
      }
      var en = 0, vs = !1;
      function xs(y) {
        {
          var P = en;
          en++, h.current === null && (h.current = []);
          var L = h.isBatchingLegacy, W;
          try {
            if (h.isBatchingLegacy = !0, W = y(), !L && h.didScheduleLegacyUpdate) {
              var K = h.current;
              K !== null && (h.didScheduleLegacyUpdate = !1, _o(K));
            }
          } catch (Me) {
            throw In(P), Me;
          } finally {
            h.isBatchingLegacy = L;
          }
          if (W !== null && typeof W == "object" && typeof W.then == "function") {
            var ne = W, re = !1, ae = {
              then: function(Me, Fe) {
                re = !0, ne.then(function(Je) {
                  In(P), en === 0 ? Co(Je, Me, Fe) : Me(Je);
                }, function(Je) {
                  In(P), Fe(Je);
                });
              }
            };
            return !vs && typeof Promise < "u" && Promise.resolve().then(function() {
            }).then(function() {
              re || (vs = !0, R("You called act(async () => ...) without await. This could lead to unexpected testing behaviour, interleaving multiple act calls and mixing their scopes. You should - await act(async () => ...);"));
            }), ae;
          } else {
            var fe = W;
            if (In(P), en === 0) {
              var Ae = h.current;
              Ae !== null && (_o(Ae), h.current = null);
              var Ie = {
                then: function(Me, Fe) {
                  h.current === null ? (h.current = [], Co(fe, Me, Fe)) : Me(fe);
                }
              };
              return Ie;
            } else {
              var Te = {
                then: function(Me, Fe) {
                  Me(fe);
                }
              };
              return Te;
            }
          }
        }
      }
      function In(y) {
        y !== en - 1 && R("You seem to have overlapping act() calls, this is not supported. Be sure to await previous act() calls before making a new one. "), en = y;
      }
      function Co(y, P, L) {
        {
          var W = h.current;
          if (W !== null)
            try {
              _o(W), Bp(function() {
                W.length === 0 ? (h.current = null, P(y)) : Co(y, P, L);
              });
            } catch (K) {
              L(K);
            }
          else
            P(y);
        }
      }
      var Ao = !1;
      function _o(y) {
        if (!Ao) {
          Ao = !0;
          var P = 0;
          try {
            for (; P < y.length; P++) {
              var L = y[P];
              do
                L = L(!0);
              while (L !== null);
            }
            y.length = 0;
          } catch (W) {
            throw y = y.slice(P + 1), W;
          } finally {
            Ao = !1;
          }
        }
      }
      var Xp = hs, Kp = Gp, Jp = Hp, Qp = {
        map: Pn,
        forEach: fp,
        count: up,
        toArray: dp,
        only: pp
      };
      t.Children = Qp, t.Component = A, t.Fragment = a, t.Profiler = s, t.PureComponent = M, t.StrictMode = i, t.Suspense = f, t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = D, t.act = xs, t.cloneElement = Kp, t.createContext = mp, t.createElement = Xp, t.createFactory = Jp, t.createRef = ee, t.forwardRef = yp, t.isValidElement = br, t.lazy = bp, t.memo = vp, t.startTransition = qp, t.unstable_act = xs, t.useCallback = Pp, t.useContext = xp, t.useDebugValue = _p, t.useDeferredValue = jp, t.useEffect = Op, t.useId = Ip, t.useImperativeHandle = Ap, t.useInsertionEffect = Ep, t.useLayoutEffect = Sp, t.useMemo = Cp, t.useReducer = kp, t.useRef = $p, t.useState = wp, t.useSyncExternalStore = Tp, t.useTransition = Np, t.version = r, typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
    }();
  }(dv, dv.exports)), dv.exports;
}
var gM;
function WPe() {
  return gM || (gM = 1, process.env.NODE_ENV === "production" ? hk.exports = LPe() : hk.exports = VPe()), hk.exports;
}
WPe();
function tB() {
  return typeof window < "u" && ("__TAURI_INTERNALS__" in window || "__TAURI__" in window);
}
window.IsDesktopApp = tB;
function ln(e, t, r, n) {
  if (typeof t == "function" ? e !== t || !0 : !t.has(e)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
  return r === "m" ? n : r === "a" ? n.call(e) : n ? n.value : t.get(e);
}
function Tm(e, t, r, n, o) {
  if (typeof t == "function" ? e !== t || !0 : !t.has(e)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
  return t.set(e, r), r;
}
var Cc, fo, Bu, hy;
const hM = "__TAURI_TO_IPC_KEY__";
function UPe(e, t = !1) {
  return window.__TAURI_INTERNALS__.transformCallback(e, t);
}
let YPe = class {
  constructor(t) {
    Cc.set(this, void 0), fo.set(this, 0), Bu.set(this, []), hy.set(this, void 0), Tm(this, Cc, t || (() => {
    })), this.id = UPe((r) => {
      const n = r.index;
      if ("end" in r) {
        n == ln(this, fo, "f") ? this.cleanupCallback() : Tm(this, hy, n);
        return;
      }
      const o = r.message;
      if (n == ln(this, fo, "f")) {
        for (ln(this, Cc, "f").call(this, o), Tm(this, fo, ln(this, fo, "f") + 1); ln(this, fo, "f") in ln(this, Bu, "f"); ) {
          const a = ln(this, Bu, "f")[ln(this, fo, "f")];
          ln(this, Cc, "f").call(this, a), delete ln(this, Bu, "f")[ln(this, fo, "f")], Tm(this, fo, ln(this, fo, "f") + 1);
        }
        ln(this, fo, "f") === ln(this, hy, "f") && this.cleanupCallback();
      } else
        ln(this, Bu, "f")[n] = o;
    });
  }
  cleanupCallback() {
    window.__TAURI_INTERNALS__.unregisterCallback(this.id);
  }
  set onmessage(t) {
    Tm(this, Cc, t);
  }
  get onmessage() {
    return ln(this, Cc, "f");
  }
  [(Cc = /* @__PURE__ */ new WeakMap(), fo = /* @__PURE__ */ new WeakMap(), Bu = /* @__PURE__ */ new WeakMap(), hy = /* @__PURE__ */ new WeakMap(), hM)]() {
    return `__CHANNEL__:${this.id}`;
  }
  toJSON() {
    return this[hM]();
  }
};
async function by(e, t = {}, r) {
  return window.__TAURI_INTERNALS__.invoke(e, t, r);
}
const yy = "Request cancelled";
async function bM(e, t) {
  const r = t == null ? void 0 : t.signal;
  if (r != null && r.aborted)
    throw new Error(yy);
  const n = t == null ? void 0 : t.maxRedirections, o = t == null ? void 0 : t.connectTimeout, a = t == null ? void 0 : t.proxy, i = t == null ? void 0 : t.danger;
  t && (delete t.maxRedirections, delete t.connectTimeout, delete t.proxy, delete t.danger);
  const s = t != null && t.headers ? t.headers instanceof Headers ? t.headers : new Headers(t.headers) : new Headers(), l = new Request(e, t), c = await l.arrayBuffer(), u = c.byteLength !== 0 ? Array.from(new Uint8Array(c)) : null;
  for (const [h, U] of l.headers)
    s.get(h) || s.set(h, U);
  const f = (s instanceof Headers ? Array.from(s.entries()) : Array.isArray(s) ? s : Object.entries(s)).map(([h, U]) => [
    h,
    // we need to ensure we have all header values as strings
    // eslint-disable-next-line
    typeof U == "string" ? U : U.toString()
  ]);
  if (r != null && r.aborted)
    throw new Error(yy);
  const p = await by("plugin:http|fetch", {
    clientConfig: {
      method: l.method,
      url: l.url,
      headers: f,
      data: u,
      maxRedirections: n,
      connectTimeout: o,
      proxy: a,
      danger: i
    }
  }), v = () => by("plugin:http|fetch_cancel", { rid: p });
  if (r != null && r.aborted)
    throw v(), new Error(yy);
  r == null || r.addEventListener("abort", () => void v());
  const { status: x, statusText: b, url: m, headers: w, rid: $ } = await by("plugin:http|fetch_send", {
    rid: p
  }), E = [101, 103, 204, 205, 304].includes(x) ? null : new ReadableStream({
    start: (h) => {
      const U = new YPe();
      U.onmessage = (G) => {
        if (r != null && r.aborted) {
          h.error(yy);
          return;
        }
        const Q = new Uint8Array(G), Z = Q[Q.byteLength - 1], X = Q.slice(0, Q.byteLength - 1);
        if (Z == 1) {
          h.close();
          return;
        }
        h.enqueue(X);
      }, by("plugin:http|fetch_read_body", {
        rid: $,
        streamChannel: U
      }).catch((G) => {
        h.error(G);
      });
    }
  }), S = new Response(E, {
    status: x,
    statusText: b
  });
  return Object.defineProperty(S, "url", { value: m }), Object.defineProperty(S, "headers", {
    value: new Headers(w)
  }), S;
}
function c1(e, t) {
  return tB() ? t !== void 0 ? bM(e, t) : bM(e) : t !== void 0 ? fetch(e, t) : fetch(e);
}
window.FetchProxy = c1;
let rB = class {
  constructor() {
    Qq(this, "ApiTargets", {}), this.ApiTargets = {
      GoggleApi: ig.GOOGLE_API,
      FunnelApi: ig.FUNNEL_API,
      CdnApi: ig.CDN_API,
      GravatarApi: ig.GRAVATAR_API
    };
  }
  getApiSchemeAndHost() {
    return DPe.getInstance().getApiSchemeAndHost();
  }
  async fetch(t, {
    method: r,
    query: n,
    body: o
  }) {
    const a = n && Object.entries(n).reduce(
      (c, [u, f]) => (f && (c[u] = f.toString()), c),
      {}
    ), i = a ? t + "?" + new URLSearchParams(a) : t, s = JSON.stringify(o), l = await c1(i, {
      method: r,
      headers: {
        Accept: "application/json",
        "Content-Type": "application/json"
      },
      credentials: "include",
      body: s
    });
    if (!l.ok)
      throw new Error(`HTTP error! status: ${l.status}`);
    return l.json();
  }
  async fetchMultipartFormData(t, {
    method: r,
    body: n
  }) {
    return (await c1(t, {
      method: r,
      headers: {
        Accept: "application/json"
      },
      credentials: "include",
      body: n
    })).json();
  }
  get({
    endpoint: t,
    query: r
  }) {
    return this.fetch(t, { method: "GET", query: r });
  }
  post({
    endpoint: t,
    query: r,
    body: n
  }) {
    return this.fetch(t, {
      method: "POST",
      query: r,
      body: n
    });
  }
  delete({
    endpoint: t,
    query: r,
    body: n
  }) {
    return this.fetch(t, {
      method: "DELETE",
      query: r,
      body: n
    });
  }
  async postFormVideo({
    endpoint: t,
    formRecord: r,
    uuid: n,
    blob: o,
    blobFileName: a
  }) {
    const i = new FormData();
    return i.append("uuid_idempotency_token", n), Object.entries(r).forEach(([s, l]) => {
      i.append(s, l);
    }), o && a ? i.append("video", o, a) : o && i.append("video", o), this.fetchMultipartFormData(t, {
      method: "POST",
      body: i
    });
  }
  async postForm({
    endpoint: t,
    formRecord: r,
    uuid: n,
    blob: o,
    blobFileName: a
  }) {
    const i = new FormData();
    return i.append("uuid_idempotency_token", n), Object.entries(r).forEach(([s, l]) => {
      i.append(s, l);
    }), o && a ? i.append("file", o, a) : o && i.append("file", o), this.fetchMultipartFormData(t, {
      method: "POST",
      body: i
    });
  }
  camelToSnakeCase(t) {
    return t.replace(/([a-z0])([A-Z])/g, "$1_$2").toLowerCase();
  }
  parseQueryValues(t) {
    return Object.entries(t).reduce(
      (r, [n, o]) => {
        if (!o)
          return r;
        const a = this.camelToSnakeCase(n);
        return Array.isArray(o) ? { ...r, [a]: o.join(",") } : { ...r, [a]: o.toString() };
      },
      {}
    );
  }
  parseBodyValues(t) {
    return Object.entries(t).reduce((r, [n, o]) => {
      if (!o)
        return r;
      const a = this.camelToSnakeCase(n);
      return Array.isArray(o) ? { ...r, [a]: o } : { ...r, [a]: o };
    }, {});
  }
}, HPe = class extends rB {
  async DeleteMediaFileByToken({
    mediaFileToken: t,
    asMod: r = !0,
    setDelete: n = !0
  }) {
    const o = `${this.getApiSchemeAndHost()}/v1/media_files/file/${t}`, a = { as_mod: r, set_delete: n };
    return await this.delete({ endpoint: o, body: a }).then((i) => ({
      success: i.success ?? !1,
      errorMessage: i.BadInput
    })).catch((i) => ({
      success: !1,
      errorMessage: i.message
    }));
  }
  async ListMediaFilesByTokens({
    mediaTokens: t
  }) {
    const r = `${this.getApiSchemeAndHost()}/v1/media_files/batch`;
    return await this.get({ endpoint: r, query: { tokens: t.join(",") } }).then((n) => ({
      success: n.success,
      data: n.media_files
    })).catch((n) => ({ success: !1, errorMessage: n.message }));
  }
  async GetMediaFileByToken({
    mediaFileToken: t
  }) {
    const r = `${this.getApiSchemeAndHost()}/v1/media_files/file/${t}`;
    return await this.get({ endpoint: r }).then((n) => ({
      success: n.success,
      data: n.media_file
    })).catch((n) => ({
      success: !1,
      errorMessage: n.message
    }));
  }
  async ListMediaFiles(t) {
    const r = `${this.getApiSchemeAndHost()}/v1/media_files/list`, n = {
      ...t,
      filter_media_classes: t.filter_media_classes ? t.filter_media_classes.join(",") : void 0,
      filter_media_type: t.filter_media_type ? t.filter_media_type.join(",") : void 0,
      filter_engine_categories: t.filter_engine_categories ? t.filter_engine_categories.join(",") : void 0
    };
    return await this.get({ endpoint: r, query: n }).then((o) => ({
      success: o.success,
      data: o.results ?? [],
      pagination: o.pagination
    })).catch((o) => ({
      success: !1,
      errorMessage: o.message
    }));
  }
  async ListFeaturedMediaFiles(t) {
    const r = `${this.getApiSchemeAndHost()}/v1/media_files/list_featured`, n = {
      ...t,
      filter_media_classes: t.filter_media_classes ? t.filter_media_classes.join(",") : void 0,
      filter_media_type: t.filter_media_type ? t.filter_media_type.join(",") : void 0,
      filter_engine_categories: t.filter_engine_categories ? t.filter_engine_categories.join(",") : void 0
    };
    return await this.get({ endpoint: r, query: n }).then((o) => ({
      success: !0,
      data: o.results,
      pagination: o.pagination
    })).catch((o) => ({
      success: !1,
      errorMessage: o.message
    }));
  }
  async ListUserMediaFiles(t) {
    const r = t.username, n = `${this.getApiSchemeAndHost()}/v1/media_files/list/user/${r}`, o = {
      ...t,
      include_user_uploads: t.include_user_uploads,
      filter_media_classes: t.filter_media_classes ? t.filter_media_classes.join(",") : void 0,
      filter_media_type: t.filter_media_type ? t.filter_media_type.join(",") : void 0,
      filter_engine_categories: t.filter_engine_categories ? t.filter_engine_categories.join(",") : void 0
    };
    return await this.get({ endpoint: n, query: o }).then((a) => {
      let i = a.results ?? [];
      return t.user_uploads_only && (i = i.filter((s) => s.origin_category === "upload")), {
        success: a.success,
        data: i,
        pagination: a.pagination
      };
    }).catch((a) => ({
      success: !1,
      errorMessage: a.message
    }));
  }
  async SearchFeaturedMediaFiles(t) {
    const r = `${this.getApiSchemeAndHost()}/v1/media_files/search_featured`, n = {
      search_term: t.search_term,
      filter_media_classes: t.filter_media_classes ? t.filter_media_classes.join(",") : void 0,
      filter_media_type: t.filter_media_type ? t.filter_media_type.join(",") : void 0,
      filter_engine_categories: t.filter_engine_categories ? t.filter_engine_categories.join(",") : void 0
    };
    return await this.get({ endpoint: r, query: n }).then((o) => ({
      success: !0,
      data: o.results,
      pagination: o.pagination
    })).catch((o) => ({
      success: !1,
      errorMessage: o.message
    }));
  }
  async SearchUserMediaFiles(t) {
    const r = `${this.getApiSchemeAndHost()}/v1/media_files/search_session`, n = {
      search_term: t.search_term,
      filter_media_classes: t.filter_media_classes ? t.filter_media_classes.join(",") : void 0,
      filter_media_type: t.filter_media_type ? t.filter_media_type.join(",") : void 0,
      filter_engine_categories: t.filter_engine_categories ? t.filter_engine_categories.join(",") : void 0
    };
    return await this.get({ endpoint: r, query: n }).then((o) => ({
      success: !0,
      data: o.results,
      pagination: o.pagination
    })).catch((o) => ({
      success: !1,
      errorMessage: o.message
    }));
  }
  async RenameMediaFileByToken({
    mediaToken: t,
    name: r
  }) {
    const n = `${this.getApiSchemeAndHost()}/v1/media_files/rename/${t}`, o = { name: r };
    return await this.post({ endpoint: n, body: o }).then((a) => ({
      success: a.success ?? !1,
      errorMessage: a.BadInput
    })).catch((a) => ({ success: !1, errorMessage: a.message }));
  }
  async UpdateCoverImage({
    mediaFileToken: t,
    imageToken: r
  }) {
    const n = `${this.getApiSchemeAndHost()}/v1/media_files/cover_image/${t}`;
    return await this.post({ endpoint: n, body: { cover_image_media_file_token: r } }).then((o) => ({
      success: o.success ?? !1,
      errorMessage: o.BadInput
    })).catch((o) => ({
      success: !1,
      errorMessage: o.message
    }));
  }
  async UpdateVisibility({
    mediaFileToken: t,
    visibility: r
  }) {
    const n = `${this.getApiSchemeAndHost()}/v1/media_files/visibility/${t}`;
    return await this.post({ endpoint: n, body: { creator_set_visibility: r } }).then((o) => ({
      success: o.success ?? !1,
      errorMessage: o.BadInput
    })).catch((o) => ({
      success: !1,
      errorMessage: o.message
    }));
  }
};
var yM;
(function(e) {
  e[e.Audio = 1] = "Audio", e[e.Cache = 2] = "Cache", e[e.Config = 3] = "Config", e[e.Data = 4] = "Data", e[e.LocalData = 5] = "LocalData", e[e.Document = 6] = "Document", e[e.Download = 7] = "Download", e[e.Picture = 8] = "Picture", e[e.Public = 9] = "Public", e[e.Video = 10] = "Video", e[e.Resource = 11] = "Resource", e[e.Temp = 12] = "Temp", e[e.AppConfig = 13] = "AppConfig", e[e.AppData = 14] = "AppData", e[e.AppLocalData = 15] = "AppLocalData", e[e.AppCache = 16] = "AppCache", e[e.AppLog = 17] = "AppLog", e[e.Desktop = 18] = "Desktop", e[e.Executable = 19] = "Executable", e[e.Font = 20] = "Font", e[e.Home = 21] = "Home", e[e.Runtime = 22] = "Runtime", e[e.Template = 23] = "Template";
})(yM || (yM = {}));
let nB = class extends rB {
  async authFetch(t, {
    method: r,
    body: n
  }) {
    const o = JSON.stringify(n);
    return await (await c1(t, {
      method: r,
      headers: {
        Accept: "application/json",
        "Content-Type": "application/json"
      },
      credentials: "include",
      body: o
    })).json();
  }
  GetSession() {
    const t = `${this.getApiSchemeAndHost()}/v1/session`;
    return this.get({ endpoint: t }).then((r) => ({
      success: r.success,
      data: {
        loggedIn: r.logged_in,
        user: r.user
      }
    })).catch((r) => ({
      success: !1,
      errorMessage: r.message
    }));
  }
  GetUserProfile(t) {
    const r = `${this.getApiSchemeAndHost()}/v1/user/${t}/profile`;
    return console.log("endpoint", r), this.get({ endpoint: r }).then((n) => ({
      success: n.success,
      data: {
        user: n.user
      }
    })).catch((n) => ({
      success: !1,
      errorMessage: n.message
    }));
  }
  async Login({
    usernameOrEmail: t,
    password: r
  }) {
    console.log("libs/api - Logging in with usernameOrEmail:", t);
    const n = `${this.getApiSchemeAndHost()}/v1/login`;
    console.log("libs/api - Login endpoint", n);
    const o = {
      username_or_email: t,
      password: r
    };
    try {
      const a = await this.authFetch(n, {
        method: "POST",
        body: o
      });
      return {
        success: a.success,
        data: a.success ? { signedSession: a.signed_session } : void 0,
        errorMessage: a.error_message
      };
    } catch (a) {
      return {
        success: !1,
        errorMessage: a.message
      };
    }
  }
  Logout() {
    const t = `${this.getApiSchemeAndHost()}/v1/logout`;
    return this.post({
      endpoint: t
    }).then((r) => ({
      success: r.success
    })).catch((r) => ({
      success: !1,
      errorMessage: r.message
    }));
  }
  async Signup({
    username: t,
    email: r,
    password: n,
    passwordConfirmation: o,
    signupSource: a
  }) {
    const i = `${this.getApiSchemeAndHost()}/v1/create_account`, s = {
      email_address: r,
      password: n,
      password_confirmation: o,
      username: t
    };
    a && (s.signup_source = a);
    try {
      const l = await this.authFetch(i, {
        method: "POST",
        body: s
      });
      return {
        success: l.success,
        data: l.success ? { signedSession: l.signed_session } : void 0,
        errorMessage: l.error_message || Object.values(l.error_fields ?? {}).join(", ")
      };
    } catch (l) {
      return {
        success: !1,
        errorMessage: l.message
      };
    }
  }
};
window.UsersApi = new nB();
let GPe = class extends HPe {
  constructor() {
    super();
  }
  async listUserMediaFiles(t) {
    return await this.ListUserMediaFiles({
      ...t,
      filter_media_classes: t.filter_media_classes,
      filter_media_type: t.filter_media_type,
      filter_engine_categories: t.filter_engine_categories,
      username: t.username,
      user_uploads_only: t.user_uploads_only,
      include_user_uploads: t.include_user_uploads,
      page_index: t.page_index,
      page_size: t.page_size
    });
  }
};
const MC = "-", qPe = (e) => {
  const t = XPe(e), {
    conflictingClassGroups: r,
    conflictingClassGroupModifiers: n
  } = e;
  return {
    getClassGroupId: (i) => {
      const s = i.split(MC);
      return s[0] === "" && s.length !== 1 && s.shift(), oB(s, t) || BPe(i);
    },
    getConflictingClassGroupIds: (i, s) => {
      const l = r[i] || [];
      return s && n[i] ? [...l, ...n[i]] : l;
    }
  };
}, oB = (e, t) => {
  var i;
  if (e.length === 0)
    return t.classGroupId;
  const r = e[0], n = t.nextPart.get(r), o = n ? oB(e.slice(1), n) : void 0;
  if (o)
    return o;
  if (t.validators.length === 0)
    return;
  const a = e.join(MC);
  return (i = t.validators.find(({
    validator: s
  }) => s(a))) == null ? void 0 : i.classGroupId;
}, vM = /^\[(.+)\]$/, BPe = (e) => {
  if (vM.test(e)) {
    const t = vM.exec(e)[1], r = t == null ? void 0 : t.substring(0, t.indexOf(":"));
    if (r)
      return "arbitrary.." + r;
  }
}, XPe = (e) => {
  const {
    theme: t,
    prefix: r
  } = e, n = {
    nextPart: /* @__PURE__ */ new Map(),
    validators: []
  };
  return JPe(Object.entries(e.classGroups), r).forEach(([a, i]) => {
    e4(i, n, a, t);
  }), n;
}, e4 = (e, t, r, n) => {
  e.forEach((o) => {
    if (typeof o == "string") {
      const a = o === "" ? t : xM(t, o);
      a.classGroupId = r;
      return;
    }
    if (typeof o == "function") {
      if (KPe(o)) {
        e4(o(n), t, r, n);
        return;
      }
      t.validators.push({
        validator: o,
        classGroupId: r
      });
      return;
    }
    Object.entries(o).forEach(([a, i]) => {
      e4(i, xM(t, a), r, n);
    });
  });
}, xM = (e, t) => {
  let r = e;
  return t.split(MC).forEach((n) => {
    r.nextPart.has(n) || r.nextPart.set(n, {
      nextPart: /* @__PURE__ */ new Map(),
      validators: []
    }), r = r.nextPart.get(n);
  }), r;
}, KPe = (e) => e.isThemeGetter, JPe = (e, t) => t ? e.map(([r, n]) => {
  const o = n.map((a) => typeof a == "string" ? t + a : typeof a == "object" ? Object.fromEntries(Object.entries(a).map(([i, s]) => [t + i, s])) : a);
  return [r, o];
}) : e, QPe = (e) => {
  if (e < 1)
    return {
      get: () => {
      },
      set: () => {
      }
    };
  let t = 0, r = /* @__PURE__ */ new Map(), n = /* @__PURE__ */ new Map();
  const o = (a, i) => {
    r.set(a, i), t++, t > e && (t = 0, n = r, r = /* @__PURE__ */ new Map());
  };
  return {
    get(a) {
      let i = r.get(a);
      if (i !== void 0)
        return i;
      if ((i = n.get(a)) !== void 0)
        return o(a, i), i;
    },
    set(a, i) {
      r.has(a) ? r.set(a, i) : o(a, i);
    }
  };
}, aB = "!", ZPe = (e) => {
  const {
    separator: t,
    experimentalParseClassName: r
  } = e, n = t.length === 1, o = t[0], a = t.length, i = (s) => {
    const l = [];
    let c = 0, u = 0, f;
    for (let m = 0; m < s.length; m++) {
      let w = s[m];
      if (c === 0) {
        if (w === o && (n || s.slice(m, m + a) === t)) {
          l.push(s.slice(u, m)), u = m + a;
          continue;
        }
        if (w === "/") {
          f = m;
          continue;
        }
      }
      w === "[" ? c++ : w === "]" && c--;
    }
    const p = l.length === 0 ? s : s.substring(u), v = p.startsWith(aB), x = v ? p.substring(1) : p, b = f && f > u ? f - u : void 0;
    return {
      modifiers: l,
      hasImportantModifier: v,
      baseClassName: x,
      maybePostfixModifierPosition: b
    };
  };
  return r ? (s) => r({
    className: s,
    parseClassName: i
  }) : i;
}, eCe = (e) => {
  if (e.length <= 1)
    return e;
  const t = [];
  let r = [];
  return e.forEach((n) => {
    n[0] === "[" ? (t.push(...r.sort(), n), r = []) : r.push(n);
  }), t.push(...r.sort()), t;
}, tCe = (e) => ({
  cache: QPe(e.cacheSize),
  parseClassName: ZPe(e),
  ...qPe(e)
}), rCe = /\s+/, nCe = (e, t) => {
  const {
    parseClassName: r,
    getClassGroupId: n,
    getConflictingClassGroupIds: o
  } = t, a = [], i = e.trim().split(rCe);
  let s = "";
  for (let l = i.length - 1; l >= 0; l -= 1) {
    const c = i[l], {
      modifiers: u,
      hasImportantModifier: f,
      baseClassName: p,
      maybePostfixModifierPosition: v
    } = r(c);
    let x = !!v, b = n(x ? p.substring(0, v) : p);
    if (!b) {
      if (!x) {
        s = c + (s.length > 0 ? " " + s : s);
        continue;
      }
      if (b = n(p), !b) {
        s = c + (s.length > 0 ? " " + s : s);
        continue;
      }
      x = !1;
    }
    const m = eCe(u).join(":"), w = f ? m + aB : m, $ = w + b;
    if (a.includes($))
      continue;
    a.push($);
    const E = o(b, x);
    for (let S = 0; S < E.length; ++S) {
      const h = E[S];
      a.push(w + h);
    }
    s = c + (s.length > 0 ? " " + s : s);
  }
  return s;
};
function oCe() {
  let e = 0, t, r, n = "";
  for (; e < arguments.length; )
    (t = arguments[e++]) && (r = iB(t)) && (n && (n += " "), n += r);
  return n;
}
const iB = (e) => {
  if (typeof e == "string")
    return e;
  let t, r = "";
  for (let n = 0; n < e.length; n++)
    e[n] && (t = iB(e[n])) && (r && (r += " "), r += t);
  return r;
};
function aCe(e, ...t) {
  let r, n, o, a = i;
  function i(l) {
    const c = t.reduce((u, f) => f(u), e());
    return r = tCe(c), n = r.cache.get, o = r.cache.set, a = s, s(l);
  }
  function s(l) {
    const c = n(l);
    if (c)
      return c;
    const u = nCe(l, r);
    return o(l, u), u;
  }
  return function() {
    return a(oCe.apply(null, arguments));
  };
}
const _r = (e) => {
  const t = (r) => r[e] || [];
  return t.isThemeGetter = !0, t;
}, sB = /^\[(?:([a-z-]+):)?(.+)\]$/i, iCe = /^\d+\/\d+$/, sCe = /* @__PURE__ */ new Set(["px", "full", "screen"]), lCe = /^(\d+(\.\d+)?)?(xs|sm|md|lg|xl)$/, cCe = /\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\b(calc|min|max|clamp)\(.+\)|^0$/, uCe = /^(rgba?|hsla?|hwb|(ok)?(lab|lch))\(.+\)$/, fCe = /^(inset_)?-?((\d+)?\.?(\d+)[a-z]+|0)_-?((\d+)?\.?(\d+)[a-z]+|0)/, dCe = /^(url|image|image-set|cross-fade|element|(repeating-)?(linear|radial|conic)-gradient)\(.+\)$/, Ka = (e) => Kf(e) || sCe.has(e) || iCe.test(e), rl = (e) => Xd(e, "length", xCe), Kf = (e) => !!e && !Number.isNaN(Number(e)), bk = (e) => Xd(e, "number", Kf), Mm = (e) => !!e && Number.isInteger(Number(e)), pCe = (e) => e.endsWith("%") && Kf(e.slice(0, -1)), ht = (e) => sB.test(e), nl = (e) => lCe.test(e), mCe = /* @__PURE__ */ new Set(["length", "size", "percentage"]), gCe = (e) => Xd(e, mCe, lB), hCe = (e) => Xd(e, "position", lB), bCe = /* @__PURE__ */ new Set(["image", "url"]), yCe = (e) => Xd(e, bCe, kCe), vCe = (e) => Xd(e, "", wCe), Rm = () => !0, Xd = (e, t, r) => {
  const n = sB.exec(e);
  return n ? n[1] ? typeof t == "string" ? n[1] === t : t.has(n[1]) : r(n[2]) : !1;
}, xCe = (e) => (
  // `colorFunctionRegex` check is necessary because color functions can have percentages in them which which would be incorrectly classified as lengths.
  // For example, `hsl(0 0% 0%)` would be classified as a length without this check.
  // I could also use lookbehind assertion in `lengthUnitRegex` but that isn't supported widely enough.
  cCe.test(e) && !uCe.test(e)
), lB = () => !1, wCe = (e) => fCe.test(e), kCe = (e) => dCe.test(e), $Ce = () => {
  const e = _r("colors"), t = _r("spacing"), r = _r("blur"), n = _r("brightness"), o = _r("borderColor"), a = _r("borderRadius"), i = _r("borderSpacing"), s = _r("borderWidth"), l = _r("contrast"), c = _r("grayscale"), u = _r("hueRotate"), f = _r("invert"), p = _r("gap"), v = _r("gradientColorStops"), x = _r("gradientColorStopPositions"), b = _r("inset"), m = _r("margin"), w = _r("opacity"), $ = _r("padding"), E = _r("saturate"), S = _r("scale"), h = _r("sepia"), U = _r("skew"), G = _r("space"), Q = _r("translate"), Z = () => ["auto", "contain", "none"], X = () => ["auto", "hidden", "clip", "visible", "scroll"], J = () => ["auto", ht, t], I = () => [ht, t], te = () => ["", Ka, rl], V = () => ["auto", Kf, ht], D = () => ["bottom", "center", "left", "left-bottom", "left-top", "right", "right-bottom", "right-top", "top"], F = () => ["solid", "dashed", "dotted", "double", "none"], R = () => ["normal", "multiply", "screen", "overlay", "darken", "lighten", "color-dodge", "color-burn", "hard-light", "soft-light", "difference", "exclusion", "hue", "saturation", "color", "luminosity"], H = () => ["start", "end", "center", "between", "around", "evenly", "stretch"], B = () => ["", "0", ht], g = () => ["auto", "avoid", "all", "avoid-page", "page", "left", "right", "column"], d = () => [Kf, ht];
  return {
    cacheSize: 500,
    separator: ":",
    theme: {
      colors: [Rm],
      spacing: [Ka, rl],
      blur: ["none", "", nl, ht],
      brightness: d(),
      borderColor: [e],
      borderRadius: ["none", "", "full", nl, ht],
      borderSpacing: I(),
      borderWidth: te(),
      contrast: d(),
      grayscale: B(),
      hueRotate: d(),
      invert: B(),
      gap: I(),
      gradientColorStops: [e],
      gradientColorStopPositions: [pCe, rl],
      inset: J(),
      margin: J(),
      opacity: d(),
      padding: I(),
      saturate: d(),
      scale: d(),
      sepia: B(),
      skew: d(),
      space: I(),
      translate: I()
    },
    classGroups: {
      // Layout
      /**
       * Aspect Ratio
       * @see https://tailwindcss.com/docs/aspect-ratio
       */
      aspect: [{
        aspect: ["auto", "square", "video", ht]
      }],
      /**
       * Container
       * @see https://tailwindcss.com/docs/container
       */
      container: ["container"],
      /**
       * Columns
       * @see https://tailwindcss.com/docs/columns
       */
      columns: [{
        columns: [nl]
      }],
      /**
       * Break After
       * @see https://tailwindcss.com/docs/break-after
       */
      "break-after": [{
        "break-after": g()
      }],
      /**
       * Break Before
       * @see https://tailwindcss.com/docs/break-before
       */
      "break-before": [{
        "break-before": g()
      }],
      /**
       * Break Inside
       * @see https://tailwindcss.com/docs/break-inside
       */
      "break-inside": [{
        "break-inside": ["auto", "avoid", "avoid-page", "avoid-column"]
      }],
      /**
       * Box Decoration Break
       * @see https://tailwindcss.com/docs/box-decoration-break
       */
      "box-decoration": [{
        "box-decoration": ["slice", "clone"]
      }],
      /**
       * Box Sizing
       * @see https://tailwindcss.com/docs/box-sizing
       */
      box: [{
        box: ["border", "content"]
      }],
      /**
       * Display
       * @see https://tailwindcss.com/docs/display
       */
      display: ["block", "inline-block", "inline", "flex", "inline-flex", "table", "inline-table", "table-caption", "table-cell", "table-column", "table-column-group", "table-footer-group", "table-header-group", "table-row-group", "table-row", "flow-root", "grid", "inline-grid", "contents", "list-item", "hidden"],
      /**
       * Floats
       * @see https://tailwindcss.com/docs/float
       */
      float: [{
        float: ["right", "left", "none", "start", "end"]
      }],
      /**
       * Clear
       * @see https://tailwindcss.com/docs/clear
       */
      clear: [{
        clear: ["left", "right", "both", "none", "start", "end"]
      }],
      /**
       * Isolation
       * @see https://tailwindcss.com/docs/isolation
       */
      isolation: ["isolate", "isolation-auto"],
      /**
       * Object Fit
       * @see https://tailwindcss.com/docs/object-fit
       */
      "object-fit": [{
        object: ["contain", "cover", "fill", "none", "scale-down"]
      }],
      /**
       * Object Position
       * @see https://tailwindcss.com/docs/object-position
       */
      "object-position": [{
        object: [...D(), ht]
      }],
      /**
       * Overflow
       * @see https://tailwindcss.com/docs/overflow
       */
      overflow: [{
        overflow: X()
      }],
      /**
       * Overflow X
       * @see https://tailwindcss.com/docs/overflow
       */
      "overflow-x": [{
        "overflow-x": X()
      }],
      /**
       * Overflow Y
       * @see https://tailwindcss.com/docs/overflow
       */
      "overflow-y": [{
        "overflow-y": X()
      }],
      /**
       * Overscroll Behavior
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      overscroll: [{
        overscroll: Z()
      }],
      /**
       * Overscroll Behavior X
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      "overscroll-x": [{
        "overscroll-x": Z()
      }],
      /**
       * Overscroll Behavior Y
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      "overscroll-y": [{
        "overscroll-y": Z()
      }],
      /**
       * Position
       * @see https://tailwindcss.com/docs/position
       */
      position: ["static", "fixed", "absolute", "relative", "sticky"],
      /**
       * Top / Right / Bottom / Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      inset: [{
        inset: [b]
      }],
      /**
       * Right / Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      "inset-x": [{
        "inset-x": [b]
      }],
      /**
       * Top / Bottom
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      "inset-y": [{
        "inset-y": [b]
      }],
      /**
       * Start
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      start: [{
        start: [b]
      }],
      /**
       * End
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      end: [{
        end: [b]
      }],
      /**
       * Top
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      top: [{
        top: [b]
      }],
      /**
       * Right
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      right: [{
        right: [b]
      }],
      /**
       * Bottom
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      bottom: [{
        bottom: [b]
      }],
      /**
       * Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      left: [{
        left: [b]
      }],
      /**
       * Visibility
       * @see https://tailwindcss.com/docs/visibility
       */
      visibility: ["visible", "invisible", "collapse"],
      /**
       * Z-Index
       * @see https://tailwindcss.com/docs/z-index
       */
      z: [{
        z: ["auto", Mm, ht]
      }],
      // Flexbox and Grid
      /**
       * Flex Basis
       * @see https://tailwindcss.com/docs/flex-basis
       */
      basis: [{
        basis: J()
      }],
      /**
       * Flex Direction
       * @see https://tailwindcss.com/docs/flex-direction
       */
      "flex-direction": [{
        flex: ["row", "row-reverse", "col", "col-reverse"]
      }],
      /**
       * Flex Wrap
       * @see https://tailwindcss.com/docs/flex-wrap
       */
      "flex-wrap": [{
        flex: ["wrap", "wrap-reverse", "nowrap"]
      }],
      /**
       * Flex
       * @see https://tailwindcss.com/docs/flex
       */
      flex: [{
        flex: ["1", "auto", "initial", "none", ht]
      }],
      /**
       * Flex Grow
       * @see https://tailwindcss.com/docs/flex-grow
       */
      grow: [{
        grow: B()
      }],
      /**
       * Flex Shrink
       * @see https://tailwindcss.com/docs/flex-shrink
       */
      shrink: [{
        shrink: B()
      }],
      /**
       * Order
       * @see https://tailwindcss.com/docs/order
       */
      order: [{
        order: ["first", "last", "none", Mm, ht]
      }],
      /**
       * Grid Template Columns
       * @see https://tailwindcss.com/docs/grid-template-columns
       */
      "grid-cols": [{
        "grid-cols": [Rm]
      }],
      /**
       * Grid Column Start / End
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-start-end": [{
        col: ["auto", {
          span: ["full", Mm, ht]
        }, ht]
      }],
      /**
       * Grid Column Start
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-start": [{
        "col-start": V()
      }],
      /**
       * Grid Column End
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-end": [{
        "col-end": V()
      }],
      /**
       * Grid Template Rows
       * @see https://tailwindcss.com/docs/grid-template-rows
       */
      "grid-rows": [{
        "grid-rows": [Rm]
      }],
      /**
       * Grid Row Start / End
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-start-end": [{
        row: ["auto", {
          span: [Mm, ht]
        }, ht]
      }],
      /**
       * Grid Row Start
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-start": [{
        "row-start": V()
      }],
      /**
       * Grid Row End
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-end": [{
        "row-end": V()
      }],
      /**
       * Grid Auto Flow
       * @see https://tailwindcss.com/docs/grid-auto-flow
       */
      "grid-flow": [{
        "grid-flow": ["row", "col", "dense", "row-dense", "col-dense"]
      }],
      /**
       * Grid Auto Columns
       * @see https://tailwindcss.com/docs/grid-auto-columns
       */
      "auto-cols": [{
        "auto-cols": ["auto", "min", "max", "fr", ht]
      }],
      /**
       * Grid Auto Rows
       * @see https://tailwindcss.com/docs/grid-auto-rows
       */
      "auto-rows": [{
        "auto-rows": ["auto", "min", "max", "fr", ht]
      }],
      /**
       * Gap
       * @see https://tailwindcss.com/docs/gap
       */
      gap: [{
        gap: [p]
      }],
      /**
       * Gap X
       * @see https://tailwindcss.com/docs/gap
       */
      "gap-x": [{
        "gap-x": [p]
      }],
      /**
       * Gap Y
       * @see https://tailwindcss.com/docs/gap
       */
      "gap-y": [{
        "gap-y": [p]
      }],
      /**
       * Justify Content
       * @see https://tailwindcss.com/docs/justify-content
       */
      "justify-content": [{
        justify: ["normal", ...H()]
      }],
      /**
       * Justify Items
       * @see https://tailwindcss.com/docs/justify-items
       */
      "justify-items": [{
        "justify-items": ["start", "end", "center", "stretch"]
      }],
      /**
       * Justify Self
       * @see https://tailwindcss.com/docs/justify-self
       */
      "justify-self": [{
        "justify-self": ["auto", "start", "end", "center", "stretch"]
      }],
      /**
       * Align Content
       * @see https://tailwindcss.com/docs/align-content
       */
      "align-content": [{
        content: ["normal", ...H(), "baseline"]
      }],
      /**
       * Align Items
       * @see https://tailwindcss.com/docs/align-items
       */
      "align-items": [{
        items: ["start", "end", "center", "baseline", "stretch"]
      }],
      /**
       * Align Self
       * @see https://tailwindcss.com/docs/align-self
       */
      "align-self": [{
        self: ["auto", "start", "end", "center", "stretch", "baseline"]
      }],
      /**
       * Place Content
       * @see https://tailwindcss.com/docs/place-content
       */
      "place-content": [{
        "place-content": [...H(), "baseline"]
      }],
      /**
       * Place Items
       * @see https://tailwindcss.com/docs/place-items
       */
      "place-items": [{
        "place-items": ["start", "end", "center", "baseline", "stretch"]
      }],
      /**
       * Place Self
       * @see https://tailwindcss.com/docs/place-self
       */
      "place-self": [{
        "place-self": ["auto", "start", "end", "center", "stretch"]
      }],
      // Spacing
      /**
       * Padding
       * @see https://tailwindcss.com/docs/padding
       */
      p: [{
        p: [$]
      }],
      /**
       * Padding X
       * @see https://tailwindcss.com/docs/padding
       */
      px: [{
        px: [$]
      }],
      /**
       * Padding Y
       * @see https://tailwindcss.com/docs/padding
       */
      py: [{
        py: [$]
      }],
      /**
       * Padding Start
       * @see https://tailwindcss.com/docs/padding
       */
      ps: [{
        ps: [$]
      }],
      /**
       * Padding End
       * @see https://tailwindcss.com/docs/padding
       */
      pe: [{
        pe: [$]
      }],
      /**
       * Padding Top
       * @see https://tailwindcss.com/docs/padding
       */
      pt: [{
        pt: [$]
      }],
      /**
       * Padding Right
       * @see https://tailwindcss.com/docs/padding
       */
      pr: [{
        pr: [$]
      }],
      /**
       * Padding Bottom
       * @see https://tailwindcss.com/docs/padding
       */
      pb: [{
        pb: [$]
      }],
      /**
       * Padding Left
       * @see https://tailwindcss.com/docs/padding
       */
      pl: [{
        pl: [$]
      }],
      /**
       * Margin
       * @see https://tailwindcss.com/docs/margin
       */
      m: [{
        m: [m]
      }],
      /**
       * Margin X
       * @see https://tailwindcss.com/docs/margin
       */
      mx: [{
        mx: [m]
      }],
      /**
       * Margin Y
       * @see https://tailwindcss.com/docs/margin
       */
      my: [{
        my: [m]
      }],
      /**
       * Margin Start
       * @see https://tailwindcss.com/docs/margin
       */
      ms: [{
        ms: [m]
      }],
      /**
       * Margin End
       * @see https://tailwindcss.com/docs/margin
       */
      me: [{
        me: [m]
      }],
      /**
       * Margin Top
       * @see https://tailwindcss.com/docs/margin
       */
      mt: [{
        mt: [m]
      }],
      /**
       * Margin Right
       * @see https://tailwindcss.com/docs/margin
       */
      mr: [{
        mr: [m]
      }],
      /**
       * Margin Bottom
       * @see https://tailwindcss.com/docs/margin
       */
      mb: [{
        mb: [m]
      }],
      /**
       * Margin Left
       * @see https://tailwindcss.com/docs/margin
       */
      ml: [{
        ml: [m]
      }],
      /**
       * Space Between X
       * @see https://tailwindcss.com/docs/space
       */
      "space-x": [{
        "space-x": [G]
      }],
      /**
       * Space Between X Reverse
       * @see https://tailwindcss.com/docs/space
       */
      "space-x-reverse": ["space-x-reverse"],
      /**
       * Space Between Y
       * @see https://tailwindcss.com/docs/space
       */
      "space-y": [{
        "space-y": [G]
      }],
      /**
       * Space Between Y Reverse
       * @see https://tailwindcss.com/docs/space
       */
      "space-y-reverse": ["space-y-reverse"],
      // Sizing
      /**
       * Width
       * @see https://tailwindcss.com/docs/width
       */
      w: [{
        w: ["auto", "min", "max", "fit", "svw", "lvw", "dvw", ht, t]
      }],
      /**
       * Min-Width
       * @see https://tailwindcss.com/docs/min-width
       */
      "min-w": [{
        "min-w": [ht, t, "min", "max", "fit"]
      }],
      /**
       * Max-Width
       * @see https://tailwindcss.com/docs/max-width
       */
      "max-w": [{
        "max-w": [ht, t, "none", "full", "min", "max", "fit", "prose", {
          screen: [nl]
        }, nl]
      }],
      /**
       * Height
       * @see https://tailwindcss.com/docs/height
       */
      h: [{
        h: [ht, t, "auto", "min", "max", "fit", "svh", "lvh", "dvh"]
      }],
      /**
       * Min-Height
       * @see https://tailwindcss.com/docs/min-height
       */
      "min-h": [{
        "min-h": [ht, t, "min", "max", "fit", "svh", "lvh", "dvh"]
      }],
      /**
       * Max-Height
       * @see https://tailwindcss.com/docs/max-height
       */
      "max-h": [{
        "max-h": [ht, t, "min", "max", "fit", "svh", "lvh", "dvh"]
      }],
      /**
       * Size
       * @see https://tailwindcss.com/docs/size
       */
      size: [{
        size: [ht, t, "auto", "min", "max", "fit"]
      }],
      // Typography
      /**
       * Font Size
       * @see https://tailwindcss.com/docs/font-size
       */
      "font-size": [{
        text: ["base", nl, rl]
      }],
      /**
       * Font Smoothing
       * @see https://tailwindcss.com/docs/font-smoothing
       */
      "font-smoothing": ["antialiased", "subpixel-antialiased"],
      /**
       * Font Style
       * @see https://tailwindcss.com/docs/font-style
       */
      "font-style": ["italic", "not-italic"],
      /**
       * Font Weight
       * @see https://tailwindcss.com/docs/font-weight
       */
      "font-weight": [{
        font: ["thin", "extralight", "light", "normal", "medium", "semibold", "bold", "extrabold", "black", bk]
      }],
      /**
       * Font Family
       * @see https://tailwindcss.com/docs/font-family
       */
      "font-family": [{
        font: [Rm]
      }],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-normal": ["normal-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-ordinal": ["ordinal"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-slashed-zero": ["slashed-zero"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-figure": ["lining-nums", "oldstyle-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-spacing": ["proportional-nums", "tabular-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-fraction": ["diagonal-fractions", "stacked-fractions"],
      /**
       * Letter Spacing
       * @see https://tailwindcss.com/docs/letter-spacing
       */
      tracking: [{
        tracking: ["tighter", "tight", "normal", "wide", "wider", "widest", ht]
      }],
      /**
       * Line Clamp
       * @see https://tailwindcss.com/docs/line-clamp
       */
      "line-clamp": [{
        "line-clamp": ["none", Kf, bk]
      }],
      /**
       * Line Height
       * @see https://tailwindcss.com/docs/line-height
       */
      leading: [{
        leading: ["none", "tight", "snug", "normal", "relaxed", "loose", Ka, ht]
      }],
      /**
       * List Style Image
       * @see https://tailwindcss.com/docs/list-style-image
       */
      "list-image": [{
        "list-image": ["none", ht]
      }],
      /**
       * List Style Type
       * @see https://tailwindcss.com/docs/list-style-type
       */
      "list-style-type": [{
        list: ["none", "disc", "decimal", ht]
      }],
      /**
       * List Style Position
       * @see https://tailwindcss.com/docs/list-style-position
       */
      "list-style-position": [{
        list: ["inside", "outside"]
      }],
      /**
       * Placeholder Color
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/placeholder-color
       */
      "placeholder-color": [{
        placeholder: [e]
      }],
      /**
       * Placeholder Opacity
       * @see https://tailwindcss.com/docs/placeholder-opacity
       */
      "placeholder-opacity": [{
        "placeholder-opacity": [w]
      }],
      /**
       * Text Alignment
       * @see https://tailwindcss.com/docs/text-align
       */
      "text-alignment": [{
        text: ["left", "center", "right", "justify", "start", "end"]
      }],
      /**
       * Text Color
       * @see https://tailwindcss.com/docs/text-color
       */
      "text-color": [{
        text: [e]
      }],
      /**
       * Text Opacity
       * @see https://tailwindcss.com/docs/text-opacity
       */
      "text-opacity": [{
        "text-opacity": [w]
      }],
      /**
       * Text Decoration
       * @see https://tailwindcss.com/docs/text-decoration
       */
      "text-decoration": ["underline", "overline", "line-through", "no-underline"],
      /**
       * Text Decoration Style
       * @see https://tailwindcss.com/docs/text-decoration-style
       */
      "text-decoration-style": [{
        decoration: [...F(), "wavy"]
      }],
      /**
       * Text Decoration Thickness
       * @see https://tailwindcss.com/docs/text-decoration-thickness
       */
      "text-decoration-thickness": [{
        decoration: ["auto", "from-font", Ka, rl]
      }],
      /**
       * Text Underline Offset
       * @see https://tailwindcss.com/docs/text-underline-offset
       */
      "underline-offset": [{
        "underline-offset": ["auto", Ka, ht]
      }],
      /**
       * Text Decoration Color
       * @see https://tailwindcss.com/docs/text-decoration-color
       */
      "text-decoration-color": [{
        decoration: [e]
      }],
      /**
       * Text Transform
       * @see https://tailwindcss.com/docs/text-transform
       */
      "text-transform": ["uppercase", "lowercase", "capitalize", "normal-case"],
      /**
       * Text Overflow
       * @see https://tailwindcss.com/docs/text-overflow
       */
      "text-overflow": ["truncate", "text-ellipsis", "text-clip"],
      /**
       * Text Wrap
       * @see https://tailwindcss.com/docs/text-wrap
       */
      "text-wrap": [{
        text: ["wrap", "nowrap", "balance", "pretty"]
      }],
      /**
       * Text Indent
       * @see https://tailwindcss.com/docs/text-indent
       */
      indent: [{
        indent: I()
      }],
      /**
       * Vertical Alignment
       * @see https://tailwindcss.com/docs/vertical-align
       */
      "vertical-align": [{
        align: ["baseline", "top", "middle", "bottom", "text-top", "text-bottom", "sub", "super", ht]
      }],
      /**
       * Whitespace
       * @see https://tailwindcss.com/docs/whitespace
       */
      whitespace: [{
        whitespace: ["normal", "nowrap", "pre", "pre-line", "pre-wrap", "break-spaces"]
      }],
      /**
       * Word Break
       * @see https://tailwindcss.com/docs/word-break
       */
      break: [{
        break: ["normal", "words", "all", "keep"]
      }],
      /**
       * Hyphens
       * @see https://tailwindcss.com/docs/hyphens
       */
      hyphens: [{
        hyphens: ["none", "manual", "auto"]
      }],
      /**
       * Content
       * @see https://tailwindcss.com/docs/content
       */
      content: [{
        content: ["none", ht]
      }],
      // Backgrounds
      /**
       * Background Attachment
       * @see https://tailwindcss.com/docs/background-attachment
       */
      "bg-attachment": [{
        bg: ["fixed", "local", "scroll"]
      }],
      /**
       * Background Clip
       * @see https://tailwindcss.com/docs/background-clip
       */
      "bg-clip": [{
        "bg-clip": ["border", "padding", "content", "text"]
      }],
      /**
       * Background Opacity
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/background-opacity
       */
      "bg-opacity": [{
        "bg-opacity": [w]
      }],
      /**
       * Background Origin
       * @see https://tailwindcss.com/docs/background-origin
       */
      "bg-origin": [{
        "bg-origin": ["border", "padding", "content"]
      }],
      /**
       * Background Position
       * @see https://tailwindcss.com/docs/background-position
       */
      "bg-position": [{
        bg: [...D(), hCe]
      }],
      /**
       * Background Repeat
       * @see https://tailwindcss.com/docs/background-repeat
       */
      "bg-repeat": [{
        bg: ["no-repeat", {
          repeat: ["", "x", "y", "round", "space"]
        }]
      }],
      /**
       * Background Size
       * @see https://tailwindcss.com/docs/background-size
       */
      "bg-size": [{
        bg: ["auto", "cover", "contain", gCe]
      }],
      /**
       * Background Image
       * @see https://tailwindcss.com/docs/background-image
       */
      "bg-image": [{
        bg: ["none", {
          "gradient-to": ["t", "tr", "r", "br", "b", "bl", "l", "tl"]
        }, yCe]
      }],
      /**
       * Background Color
       * @see https://tailwindcss.com/docs/background-color
       */
      "bg-color": [{
        bg: [e]
      }],
      /**
       * Gradient Color Stops From Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-from-pos": [{
        from: [x]
      }],
      /**
       * Gradient Color Stops Via Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-via-pos": [{
        via: [x]
      }],
      /**
       * Gradient Color Stops To Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-to-pos": [{
        to: [x]
      }],
      /**
       * Gradient Color Stops From
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-from": [{
        from: [v]
      }],
      /**
       * Gradient Color Stops Via
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-via": [{
        via: [v]
      }],
      /**
       * Gradient Color Stops To
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-to": [{
        to: [v]
      }],
      // Borders
      /**
       * Border Radius
       * @see https://tailwindcss.com/docs/border-radius
       */
      rounded: [{
        rounded: [a]
      }],
      /**
       * Border Radius Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-s": [{
        "rounded-s": [a]
      }],
      /**
       * Border Radius End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-e": [{
        "rounded-e": [a]
      }],
      /**
       * Border Radius Top
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-t": [{
        "rounded-t": [a]
      }],
      /**
       * Border Radius Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-r": [{
        "rounded-r": [a]
      }],
      /**
       * Border Radius Bottom
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-b": [{
        "rounded-b": [a]
      }],
      /**
       * Border Radius Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-l": [{
        "rounded-l": [a]
      }],
      /**
       * Border Radius Start Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-ss": [{
        "rounded-ss": [a]
      }],
      /**
       * Border Radius Start End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-se": [{
        "rounded-se": [a]
      }],
      /**
       * Border Radius End End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-ee": [{
        "rounded-ee": [a]
      }],
      /**
       * Border Radius End Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-es": [{
        "rounded-es": [a]
      }],
      /**
       * Border Radius Top Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-tl": [{
        "rounded-tl": [a]
      }],
      /**
       * Border Radius Top Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-tr": [{
        "rounded-tr": [a]
      }],
      /**
       * Border Radius Bottom Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-br": [{
        "rounded-br": [a]
      }],
      /**
       * Border Radius Bottom Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-bl": [{
        "rounded-bl": [a]
      }],
      /**
       * Border Width
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w": [{
        border: [s]
      }],
      /**
       * Border Width X
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-x": [{
        "border-x": [s]
      }],
      /**
       * Border Width Y
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-y": [{
        "border-y": [s]
      }],
      /**
       * Border Width Start
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-s": [{
        "border-s": [s]
      }],
      /**
       * Border Width End
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-e": [{
        "border-e": [s]
      }],
      /**
       * Border Width Top
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-t": [{
        "border-t": [s]
      }],
      /**
       * Border Width Right
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-r": [{
        "border-r": [s]
      }],
      /**
       * Border Width Bottom
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-b": [{
        "border-b": [s]
      }],
      /**
       * Border Width Left
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-l": [{
        "border-l": [s]
      }],
      /**
       * Border Opacity
       * @see https://tailwindcss.com/docs/border-opacity
       */
      "border-opacity": [{
        "border-opacity": [w]
      }],
      /**
       * Border Style
       * @see https://tailwindcss.com/docs/border-style
       */
      "border-style": [{
        border: [...F(), "hidden"]
      }],
      /**
       * Divide Width X
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-x": [{
        "divide-x": [s]
      }],
      /**
       * Divide Width X Reverse
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-x-reverse": ["divide-x-reverse"],
      /**
       * Divide Width Y
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-y": [{
        "divide-y": [s]
      }],
      /**
       * Divide Width Y Reverse
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-y-reverse": ["divide-y-reverse"],
      /**
       * Divide Opacity
       * @see https://tailwindcss.com/docs/divide-opacity
       */
      "divide-opacity": [{
        "divide-opacity": [w]
      }],
      /**
       * Divide Style
       * @see https://tailwindcss.com/docs/divide-style
       */
      "divide-style": [{
        divide: F()
      }],
      /**
       * Border Color
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color": [{
        border: [o]
      }],
      /**
       * Border Color X
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-x": [{
        "border-x": [o]
      }],
      /**
       * Border Color Y
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-y": [{
        "border-y": [o]
      }],
      /**
       * Border Color S
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-s": [{
        "border-s": [o]
      }],
      /**
       * Border Color E
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-e": [{
        "border-e": [o]
      }],
      /**
       * Border Color Top
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-t": [{
        "border-t": [o]
      }],
      /**
       * Border Color Right
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-r": [{
        "border-r": [o]
      }],
      /**
       * Border Color Bottom
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-b": [{
        "border-b": [o]
      }],
      /**
       * Border Color Left
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-l": [{
        "border-l": [o]
      }],
      /**
       * Divide Color
       * @see https://tailwindcss.com/docs/divide-color
       */
      "divide-color": [{
        divide: [o]
      }],
      /**
       * Outline Style
       * @see https://tailwindcss.com/docs/outline-style
       */
      "outline-style": [{
        outline: ["", ...F()]
      }],
      /**
       * Outline Offset
       * @see https://tailwindcss.com/docs/outline-offset
       */
      "outline-offset": [{
        "outline-offset": [Ka, ht]
      }],
      /**
       * Outline Width
       * @see https://tailwindcss.com/docs/outline-width
       */
      "outline-w": [{
        outline: [Ka, rl]
      }],
      /**
       * Outline Color
       * @see https://tailwindcss.com/docs/outline-color
       */
      "outline-color": [{
        outline: [e]
      }],
      /**
       * Ring Width
       * @see https://tailwindcss.com/docs/ring-width
       */
      "ring-w": [{
        ring: te()
      }],
      /**
       * Ring Width Inset
       * @see https://tailwindcss.com/docs/ring-width
       */
      "ring-w-inset": ["ring-inset"],
      /**
       * Ring Color
       * @see https://tailwindcss.com/docs/ring-color
       */
      "ring-color": [{
        ring: [e]
      }],
      /**
       * Ring Opacity
       * @see https://tailwindcss.com/docs/ring-opacity
       */
      "ring-opacity": [{
        "ring-opacity": [w]
      }],
      /**
       * Ring Offset Width
       * @see https://tailwindcss.com/docs/ring-offset-width
       */
      "ring-offset-w": [{
        "ring-offset": [Ka, rl]
      }],
      /**
       * Ring Offset Color
       * @see https://tailwindcss.com/docs/ring-offset-color
       */
      "ring-offset-color": [{
        "ring-offset": [e]
      }],
      // Effects
      /**
       * Box Shadow
       * @see https://tailwindcss.com/docs/box-shadow
       */
      shadow: [{
        shadow: ["", "inner", "none", nl, vCe]
      }],
      /**
       * Box Shadow Color
       * @see https://tailwindcss.com/docs/box-shadow-color
       */
      "shadow-color": [{
        shadow: [Rm]
      }],
      /**
       * Opacity
       * @see https://tailwindcss.com/docs/opacity
       */
      opacity: [{
        opacity: [w]
      }],
      /**
       * Mix Blend Mode
       * @see https://tailwindcss.com/docs/mix-blend-mode
       */
      "mix-blend": [{
        "mix-blend": [...R(), "plus-lighter", "plus-darker"]
      }],
      /**
       * Background Blend Mode
       * @see https://tailwindcss.com/docs/background-blend-mode
       */
      "bg-blend": [{
        "bg-blend": R()
      }],
      // Filters
      /**
       * Filter
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/filter
       */
      filter: [{
        filter: ["", "none"]
      }],
      /**
       * Blur
       * @see https://tailwindcss.com/docs/blur
       */
      blur: [{
        blur: [r]
      }],
      /**
       * Brightness
       * @see https://tailwindcss.com/docs/brightness
       */
      brightness: [{
        brightness: [n]
      }],
      /**
       * Contrast
       * @see https://tailwindcss.com/docs/contrast
       */
      contrast: [{
        contrast: [l]
      }],
      /**
       * Drop Shadow
       * @see https://tailwindcss.com/docs/drop-shadow
       */
      "drop-shadow": [{
        "drop-shadow": ["", "none", nl, ht]
      }],
      /**
       * Grayscale
       * @see https://tailwindcss.com/docs/grayscale
       */
      grayscale: [{
        grayscale: [c]
      }],
      /**
       * Hue Rotate
       * @see https://tailwindcss.com/docs/hue-rotate
       */
      "hue-rotate": [{
        "hue-rotate": [u]
      }],
      /**
       * Invert
       * @see https://tailwindcss.com/docs/invert
       */
      invert: [{
        invert: [f]
      }],
      /**
       * Saturate
       * @see https://tailwindcss.com/docs/saturate
       */
      saturate: [{
        saturate: [E]
      }],
      /**
       * Sepia
       * @see https://tailwindcss.com/docs/sepia
       */
      sepia: [{
        sepia: [h]
      }],
      /**
       * Backdrop Filter
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/backdrop-filter
       */
      "backdrop-filter": [{
        "backdrop-filter": ["", "none"]
      }],
      /**
       * Backdrop Blur
       * @see https://tailwindcss.com/docs/backdrop-blur
       */
      "backdrop-blur": [{
        "backdrop-blur": [r]
      }],
      /**
       * Backdrop Brightness
       * @see https://tailwindcss.com/docs/backdrop-brightness
       */
      "backdrop-brightness": [{
        "backdrop-brightness": [n]
      }],
      /**
       * Backdrop Contrast
       * @see https://tailwindcss.com/docs/backdrop-contrast
       */
      "backdrop-contrast": [{
        "backdrop-contrast": [l]
      }],
      /**
       * Backdrop Grayscale
       * @see https://tailwindcss.com/docs/backdrop-grayscale
       */
      "backdrop-grayscale": [{
        "backdrop-grayscale": [c]
      }],
      /**
       * Backdrop Hue Rotate
       * @see https://tailwindcss.com/docs/backdrop-hue-rotate
       */
      "backdrop-hue-rotate": [{
        "backdrop-hue-rotate": [u]
      }],
      /**
       * Backdrop Invert
       * @see https://tailwindcss.com/docs/backdrop-invert
       */
      "backdrop-invert": [{
        "backdrop-invert": [f]
      }],
      /**
       * Backdrop Opacity
       * @see https://tailwindcss.com/docs/backdrop-opacity
       */
      "backdrop-opacity": [{
        "backdrop-opacity": [w]
      }],
      /**
       * Backdrop Saturate
       * @see https://tailwindcss.com/docs/backdrop-saturate
       */
      "backdrop-saturate": [{
        "backdrop-saturate": [E]
      }],
      /**
       * Backdrop Sepia
       * @see https://tailwindcss.com/docs/backdrop-sepia
       */
      "backdrop-sepia": [{
        "backdrop-sepia": [h]
      }],
      // Tables
      /**
       * Border Collapse
       * @see https://tailwindcss.com/docs/border-collapse
       */
      "border-collapse": [{
        border: ["collapse", "separate"]
      }],
      /**
       * Border Spacing
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing": [{
        "border-spacing": [i]
      }],
      /**
       * Border Spacing X
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing-x": [{
        "border-spacing-x": [i]
      }],
      /**
       * Border Spacing Y
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing-y": [{
        "border-spacing-y": [i]
      }],
      /**
       * Table Layout
       * @see https://tailwindcss.com/docs/table-layout
       */
      "table-layout": [{
        table: ["auto", "fixed"]
      }],
      /**
       * Caption Side
       * @see https://tailwindcss.com/docs/caption-side
       */
      caption: [{
        caption: ["top", "bottom"]
      }],
      // Transitions and Animation
      /**
       * Tranisition Property
       * @see https://tailwindcss.com/docs/transition-property
       */
      transition: [{
        transition: ["none", "all", "", "colors", "opacity", "shadow", "transform", ht]
      }],
      /**
       * Transition Duration
       * @see https://tailwindcss.com/docs/transition-duration
       */
      duration: [{
        duration: d()
      }],
      /**
       * Transition Timing Function
       * @see https://tailwindcss.com/docs/transition-timing-function
       */
      ease: [{
        ease: ["linear", "in", "out", "in-out", ht]
      }],
      /**
       * Transition Delay
       * @see https://tailwindcss.com/docs/transition-delay
       */
      delay: [{
        delay: d()
      }],
      /**
       * Animation
       * @see https://tailwindcss.com/docs/animation
       */
      animate: [{
        animate: ["none", "spin", "ping", "pulse", "bounce", ht]
      }],
      // Transforms
      /**
       * Transform
       * @see https://tailwindcss.com/docs/transform
       */
      transform: [{
        transform: ["", "gpu", "none"]
      }],
      /**
       * Scale
       * @see https://tailwindcss.com/docs/scale
       */
      scale: [{
        scale: [S]
      }],
      /**
       * Scale X
       * @see https://tailwindcss.com/docs/scale
       */
      "scale-x": [{
        "scale-x": [S]
      }],
      /**
       * Scale Y
       * @see https://tailwindcss.com/docs/scale
       */
      "scale-y": [{
        "scale-y": [S]
      }],
      /**
       * Rotate
       * @see https://tailwindcss.com/docs/rotate
       */
      rotate: [{
        rotate: [Mm, ht]
      }],
      /**
       * Translate X
       * @see https://tailwindcss.com/docs/translate
       */
      "translate-x": [{
        "translate-x": [Q]
      }],
      /**
       * Translate Y
       * @see https://tailwindcss.com/docs/translate
       */
      "translate-y": [{
        "translate-y": [Q]
      }],
      /**
       * Skew X
       * @see https://tailwindcss.com/docs/skew
       */
      "skew-x": [{
        "skew-x": [U]
      }],
      /**
       * Skew Y
       * @see https://tailwindcss.com/docs/skew
       */
      "skew-y": [{
        "skew-y": [U]
      }],
      /**
       * Transform Origin
       * @see https://tailwindcss.com/docs/transform-origin
       */
      "transform-origin": [{
        origin: ["center", "top", "top-right", "right", "bottom-right", "bottom", "bottom-left", "left", "top-left", ht]
      }],
      // Interactivity
      /**
       * Accent Color
       * @see https://tailwindcss.com/docs/accent-color
       */
      accent: [{
        accent: ["auto", e]
      }],
      /**
       * Appearance
       * @see https://tailwindcss.com/docs/appearance
       */
      appearance: [{
        appearance: ["none", "auto"]
      }],
      /**
       * Cursor
       * @see https://tailwindcss.com/docs/cursor
       */
      cursor: [{
        cursor: ["auto", "default", "pointer", "wait", "text", "move", "help", "not-allowed", "none", "context-menu", "progress", "cell", "crosshair", "vertical-text", "alias", "copy", "no-drop", "grab", "grabbing", "all-scroll", "col-resize", "row-resize", "n-resize", "e-resize", "s-resize", "w-resize", "ne-resize", "nw-resize", "se-resize", "sw-resize", "ew-resize", "ns-resize", "nesw-resize", "nwse-resize", "zoom-in", "zoom-out", ht]
      }],
      /**
       * Caret Color
       * @see https://tailwindcss.com/docs/just-in-time-mode#caret-color-utilities
       */
      "caret-color": [{
        caret: [e]
      }],
      /**
       * Pointer Events
       * @see https://tailwindcss.com/docs/pointer-events
       */
      "pointer-events": [{
        "pointer-events": ["none", "auto"]
      }],
      /**
       * Resize
       * @see https://tailwindcss.com/docs/resize
       */
      resize: [{
        resize: ["none", "y", "x", ""]
      }],
      /**
       * Scroll Behavior
       * @see https://tailwindcss.com/docs/scroll-behavior
       */
      "scroll-behavior": [{
        scroll: ["auto", "smooth"]
      }],
      /**
       * Scroll Margin
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-m": [{
        "scroll-m": I()
      }],
      /**
       * Scroll Margin X
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mx": [{
        "scroll-mx": I()
      }],
      /**
       * Scroll Margin Y
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-my": [{
        "scroll-my": I()
      }],
      /**
       * Scroll Margin Start
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-ms": [{
        "scroll-ms": I()
      }],
      /**
       * Scroll Margin End
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-me": [{
        "scroll-me": I()
      }],
      /**
       * Scroll Margin Top
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mt": [{
        "scroll-mt": I()
      }],
      /**
       * Scroll Margin Right
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mr": [{
        "scroll-mr": I()
      }],
      /**
       * Scroll Margin Bottom
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mb": [{
        "scroll-mb": I()
      }],
      /**
       * Scroll Margin Left
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-ml": [{
        "scroll-ml": I()
      }],
      /**
       * Scroll Padding
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-p": [{
        "scroll-p": I()
      }],
      /**
       * Scroll Padding X
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-px": [{
        "scroll-px": I()
      }],
      /**
       * Scroll Padding Y
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-py": [{
        "scroll-py": I()
      }],
      /**
       * Scroll Padding Start
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-ps": [{
        "scroll-ps": I()
      }],
      /**
       * Scroll Padding End
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pe": [{
        "scroll-pe": I()
      }],
      /**
       * Scroll Padding Top
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pt": [{
        "scroll-pt": I()
      }],
      /**
       * Scroll Padding Right
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pr": [{
        "scroll-pr": I()
      }],
      /**
       * Scroll Padding Bottom
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pb": [{
        "scroll-pb": I()
      }],
      /**
       * Scroll Padding Left
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pl": [{
        "scroll-pl": I()
      }],
      /**
       * Scroll Snap Align
       * @see https://tailwindcss.com/docs/scroll-snap-align
       */
      "snap-align": [{
        snap: ["start", "end", "center", "align-none"]
      }],
      /**
       * Scroll Snap Stop
       * @see https://tailwindcss.com/docs/scroll-snap-stop
       */
      "snap-stop": [{
        snap: ["normal", "always"]
      }],
      /**
       * Scroll Snap Type
       * @see https://tailwindcss.com/docs/scroll-snap-type
       */
      "snap-type": [{
        snap: ["none", "x", "y", "both"]
      }],
      /**
       * Scroll Snap Type Strictness
       * @see https://tailwindcss.com/docs/scroll-snap-type
       */
      "snap-strictness": [{
        snap: ["mandatory", "proximity"]
      }],
      /**
       * Touch Action
       * @see https://tailwindcss.com/docs/touch-action
       */
      touch: [{
        touch: ["auto", "none", "manipulation"]
      }],
      /**
       * Touch Action X
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-x": [{
        "touch-pan": ["x", "left", "right"]
      }],
      /**
       * Touch Action Y
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-y": [{
        "touch-pan": ["y", "up", "down"]
      }],
      /**
       * Touch Action Pinch Zoom
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-pz": ["touch-pinch-zoom"],
      /**
       * User Select
       * @see https://tailwindcss.com/docs/user-select
       */
      select: [{
        select: ["none", "text", "all", "auto"]
      }],
      /**
       * Will Change
       * @see https://tailwindcss.com/docs/will-change
       */
      "will-change": [{
        "will-change": ["auto", "scroll", "contents", "transform", ht]
      }],
      // SVG
      /**
       * Fill
       * @see https://tailwindcss.com/docs/fill
       */
      fill: [{
        fill: [e, "none"]
      }],
      /**
       * Stroke Width
       * @see https://tailwindcss.com/docs/stroke-width
       */
      "stroke-w": [{
        stroke: [Ka, rl, bk]
      }],
      /**
       * Stroke
       * @see https://tailwindcss.com/docs/stroke
       */
      stroke: [{
        stroke: [e, "none"]
      }],
      // Accessibility
      /**
       * Screen Readers
       * @see https://tailwindcss.com/docs/screen-readers
       */
      sr: ["sr-only", "not-sr-only"],
      /**
       * Forced Color Adjust
       * @see https://tailwindcss.com/docs/forced-color-adjust
       */
      "forced-color-adjust": [{
        "forced-color-adjust": ["auto", "none"]
      }]
    },
    conflictingClassGroups: {
      overflow: ["overflow-x", "overflow-y"],
      overscroll: ["overscroll-x", "overscroll-y"],
      inset: ["inset-x", "inset-y", "start", "end", "top", "right", "bottom", "left"],
      "inset-x": ["right", "left"],
      "inset-y": ["top", "bottom"],
      flex: ["basis", "grow", "shrink"],
      gap: ["gap-x", "gap-y"],
      p: ["px", "py", "ps", "pe", "pt", "pr", "pb", "pl"],
      px: ["pr", "pl"],
      py: ["pt", "pb"],
      m: ["mx", "my", "ms", "me", "mt", "mr", "mb", "ml"],
      mx: ["mr", "ml"],
      my: ["mt", "mb"],
      size: ["w", "h"],
      "font-size": ["leading"],
      "fvn-normal": ["fvn-ordinal", "fvn-slashed-zero", "fvn-figure", "fvn-spacing", "fvn-fraction"],
      "fvn-ordinal": ["fvn-normal"],
      "fvn-slashed-zero": ["fvn-normal"],
      "fvn-figure": ["fvn-normal"],
      "fvn-spacing": ["fvn-normal"],
      "fvn-fraction": ["fvn-normal"],
      "line-clamp": ["display", "overflow"],
      rounded: ["rounded-s", "rounded-e", "rounded-t", "rounded-r", "rounded-b", "rounded-l", "rounded-ss", "rounded-se", "rounded-ee", "rounded-es", "rounded-tl", "rounded-tr", "rounded-br", "rounded-bl"],
      "rounded-s": ["rounded-ss", "rounded-es"],
      "rounded-e": ["rounded-se", "rounded-ee"],
      "rounded-t": ["rounded-tl", "rounded-tr"],
      "rounded-r": ["rounded-tr", "rounded-br"],
      "rounded-b": ["rounded-br", "rounded-bl"],
      "rounded-l": ["rounded-tl", "rounded-bl"],
      "border-spacing": ["border-spacing-x", "border-spacing-y"],
      "border-w": ["border-w-s", "border-w-e", "border-w-t", "border-w-r", "border-w-b", "border-w-l"],
      "border-w-x": ["border-w-r", "border-w-l"],
      "border-w-y": ["border-w-t", "border-w-b"],
      "border-color": ["border-color-s", "border-color-e", "border-color-t", "border-color-r", "border-color-b", "border-color-l"],
      "border-color-x": ["border-color-r", "border-color-l"],
      "border-color-y": ["border-color-t", "border-color-b"],
      "scroll-m": ["scroll-mx", "scroll-my", "scroll-ms", "scroll-me", "scroll-mt", "scroll-mr", "scroll-mb", "scroll-ml"],
      "scroll-mx": ["scroll-mr", "scroll-ml"],
      "scroll-my": ["scroll-mt", "scroll-mb"],
      "scroll-p": ["scroll-px", "scroll-py", "scroll-ps", "scroll-pe", "scroll-pt", "scroll-pr", "scroll-pb", "scroll-pl"],
      "scroll-px": ["scroll-pr", "scroll-pl"],
      "scroll-py": ["scroll-pt", "scroll-pb"],
      touch: ["touch-x", "touch-y", "touch-pz"],
      "touch-x": ["touch"],
      "touch-y": ["touch"],
      "touch-pz": ["touch"]
    },
    conflictingClassGroupModifiers: {
      "font-size": ["leading"]
    }
  };
}, Tc = /* @__PURE__ */ aCe($Ce);
/*!
 * Font Awesome Free 6.7.2 by @fontawesome - https://fontawesome.com
 * License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License)
 * Copyright 2024 Fonticons, Inc.
 */
function OCe(e, t, r) {
  return (t = SCe(t)) in e ? Object.defineProperty(e, t, {
    value: r,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : e[t] = r, e;
}
function wM(e, t) {
  var r = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var n = Object.getOwnPropertySymbols(e);
    t && (n = n.filter(function(o) {
      return Object.getOwnPropertyDescriptor(e, o).enumerable;
    })), r.push.apply(r, n);
  }
  return r;
}
function we(e) {
  for (var t = 1; t < arguments.length; t++) {
    var r = arguments[t] != null ? arguments[t] : {};
    t % 2 ? wM(Object(r), !0).forEach(function(n) {
      OCe(e, n, r[n]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : wM(Object(r)).forEach(function(n) {
      Object.defineProperty(e, n, Object.getOwnPropertyDescriptor(r, n));
    });
  }
  return e;
}
function ECe(e, t) {
  if (typeof e != "object" || !e) return e;
  var r = e[Symbol.toPrimitive];
  if (r !== void 0) {
    var n = r.call(e, t);
    if (typeof n != "object") return n;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (t === "string" ? String : Number)(e);
}
function SCe(e) {
  var t = ECe(e, "string");
  return typeof t == "symbol" ? t : t + "";
}
const kM = () => {
};
let RC = {}, cB = {}, uB = null, fB = {
  mark: kM,
  measure: kM
};
try {
  typeof window < "u" && (RC = window), typeof document < "u" && (cB = document), typeof MutationObserver < "u" && (uB = MutationObserver), typeof performance < "u" && (fB = performance);
} catch {
}
const {
  userAgent: $M = ""
} = RC.navigator || {}, fc = RC, Yr = cB, OM = uB, vy = fB;
fc.document;
const Hi = !!Yr.documentElement && !!Yr.head && typeof Yr.addEventListener == "function" && typeof Yr.createElement == "function", dB = ~$M.indexOf("MSIE") || ~$M.indexOf("Trident/");
var PCe = /fa(s|r|l|t|d|dr|dl|dt|b|k|kd|ss|sr|sl|st|sds|sdr|sdl|sdt)?[\-\ ]/, CCe = /Font ?Awesome ?([56 ]*)(Solid|Regular|Light|Thin|Duotone|Brands|Free|Pro|Sharp Duotone|Sharp|Kit)?.*/i, pB = {
  classic: {
    fa: "solid",
    fas: "solid",
    "fa-solid": "solid",
    far: "regular",
    "fa-regular": "regular",
    fal: "light",
    "fa-light": "light",
    fat: "thin",
    "fa-thin": "thin",
    fab: "brands",
    "fa-brands": "brands"
  },
  duotone: {
    fa: "solid",
    fad: "solid",
    "fa-solid": "solid",
    "fa-duotone": "solid",
    fadr: "regular",
    "fa-regular": "regular",
    fadl: "light",
    "fa-light": "light",
    fadt: "thin",
    "fa-thin": "thin"
  },
  sharp: {
    fa: "solid",
    fass: "solid",
    "fa-solid": "solid",
    fasr: "regular",
    "fa-regular": "regular",
    fasl: "light",
    "fa-light": "light",
    fast: "thin",
    "fa-thin": "thin"
  },
  "sharp-duotone": {
    fa: "solid",
    fasds: "solid",
    "fa-solid": "solid",
    fasdr: "regular",
    "fa-regular": "regular",
    fasdl: "light",
    "fa-light": "light",
    fasdt: "thin",
    "fa-thin": "thin"
  }
}, ACe = {
  GROUP: "duotone-group",
  PRIMARY: "primary",
  SECONDARY: "secondary"
}, mB = ["fa-classic", "fa-duotone", "fa-sharp", "fa-sharp-duotone"], vn = "classic", G0 = "duotone", _Ce = "sharp", NCe = "sharp-duotone", gB = [vn, G0, _Ce, NCe], jCe = {
  classic: {
    900: "fas",
    400: "far",
    normal: "far",
    300: "fal",
    100: "fat"
  },
  duotone: {
    900: "fad",
    400: "fadr",
    300: "fadl",
    100: "fadt"
  },
  sharp: {
    900: "fass",
    400: "fasr",
    300: "fasl",
    100: "fast"
  },
  "sharp-duotone": {
    900: "fasds",
    400: "fasdr",
    300: "fasdl",
    100: "fasdt"
  }
}, ICe = {
  "Font Awesome 6 Free": {
    900: "fas",
    400: "far"
  },
  "Font Awesome 6 Pro": {
    900: "fas",
    400: "far",
    normal: "far",
    300: "fal",
    100: "fat"
  },
  "Font Awesome 6 Brands": {
    400: "fab",
    normal: "fab"
  },
  "Font Awesome 6 Duotone": {
    900: "fad",
    400: "fadr",
    normal: "fadr",
    300: "fadl",
    100: "fadt"
  },
  "Font Awesome 6 Sharp": {
    900: "fass",
    400: "fasr",
    normal: "fasr",
    300: "fasl",
    100: "fast"
  },
  "Font Awesome 6 Sharp Duotone": {
    900: "fasds",
    400: "fasdr",
    normal: "fasdr",
    300: "fasdl",
    100: "fasdt"
  }
}, TCe = /* @__PURE__ */ new Map([["classic", {
  defaultShortPrefixId: "fas",
  defaultStyleId: "solid",
  styleIds: ["solid", "regular", "light", "thin", "brands"],
  futureStyleIds: [],
  defaultFontWeight: 900
}], ["sharp", {
  defaultShortPrefixId: "fass",
  defaultStyleId: "solid",
  styleIds: ["solid", "regular", "light", "thin"],
  futureStyleIds: [],
  defaultFontWeight: 900
}], ["duotone", {
  defaultShortPrefixId: "fad",
  defaultStyleId: "solid",
  styleIds: ["solid", "regular", "light", "thin"],
  futureStyleIds: [],
  defaultFontWeight: 900
}], ["sharp-duotone", {
  defaultShortPrefixId: "fasds",
  defaultStyleId: "solid",
  styleIds: ["solid", "regular", "light", "thin"],
  futureStyleIds: [],
  defaultFontWeight: 900
}]]), MCe = {
  classic: {
    solid: "fas",
    regular: "far",
    light: "fal",
    thin: "fat",
    brands: "fab"
  },
  duotone: {
    solid: "fad",
    regular: "fadr",
    light: "fadl",
    thin: "fadt"
  },
  sharp: {
    solid: "fass",
    regular: "fasr",
    light: "fasl",
    thin: "fast"
  },
  "sharp-duotone": {
    solid: "fasds",
    regular: "fasdr",
    light: "fasdl",
    thin: "fasdt"
  }
}, RCe = ["fak", "fa-kit", "fakd", "fa-kit-duotone"], EM = {
  kit: {
    fak: "kit",
    "fa-kit": "kit"
  },
  "kit-duotone": {
    fakd: "kit-duotone",
    "fa-kit-duotone": "kit-duotone"
  }
}, zCe = ["kit"], FCe = {
  kit: {
    "fa-kit": "fak"
  }
}, DCe = ["fak", "fakd"], LCe = {
  kit: {
    fak: "fa-kit"
  }
}, SM = {
  kit: {
    kit: "fak"
  },
  "kit-duotone": {
    "kit-duotone": "fakd"
  }
}, xy = {
  GROUP: "duotone-group",
  SWAP_OPACITY: "swap-opacity",
  PRIMARY: "primary",
  SECONDARY: "secondary"
}, VCe = ["fa-classic", "fa-duotone", "fa-sharp", "fa-sharp-duotone"], WCe = ["fak", "fa-kit", "fakd", "fa-kit-duotone"], UCe = {
  "Font Awesome Kit": {
    400: "fak",
    normal: "fak"
  },
  "Font Awesome Kit Duotone": {
    400: "fakd",
    normal: "fakd"
  }
}, YCe = {
  classic: {
    "fa-brands": "fab",
    "fa-duotone": "fad",
    "fa-light": "fal",
    "fa-regular": "far",
    "fa-solid": "fas",
    "fa-thin": "fat"
  },
  duotone: {
    "fa-regular": "fadr",
    "fa-light": "fadl",
    "fa-thin": "fadt"
  },
  sharp: {
    "fa-solid": "fass",
    "fa-regular": "fasr",
    "fa-light": "fasl",
    "fa-thin": "fast"
  },
  "sharp-duotone": {
    "fa-solid": "fasds",
    "fa-regular": "fasdr",
    "fa-light": "fasdl",
    "fa-thin": "fasdt"
  }
}, HCe = {
  classic: ["fas", "far", "fal", "fat", "fad"],
  duotone: ["fadr", "fadl", "fadt"],
  sharp: ["fass", "fasr", "fasl", "fast"],
  "sharp-duotone": ["fasds", "fasdr", "fasdl", "fasdt"]
}, t4 = {
  classic: {
    fab: "fa-brands",
    fad: "fa-duotone",
    fal: "fa-light",
    far: "fa-regular",
    fas: "fa-solid",
    fat: "fa-thin"
  },
  duotone: {
    fadr: "fa-regular",
    fadl: "fa-light",
    fadt: "fa-thin"
  },
  sharp: {
    fass: "fa-solid",
    fasr: "fa-regular",
    fasl: "fa-light",
    fast: "fa-thin"
  },
  "sharp-duotone": {
    fasds: "fa-solid",
    fasdr: "fa-regular",
    fasdl: "fa-light",
    fasdt: "fa-thin"
  }
}, GCe = ["fa-solid", "fa-regular", "fa-light", "fa-thin", "fa-duotone", "fa-brands"], r4 = ["fa", "fas", "far", "fal", "fat", "fad", "fadr", "fadl", "fadt", "fab", "fass", "fasr", "fasl", "fast", "fasds", "fasdr", "fasdl", "fasdt", ...VCe, ...GCe], qCe = ["solid", "regular", "light", "thin", "duotone", "brands"], hB = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], BCe = hB.concat([11, 12, 13, 14, 15, 16, 17, 18, 19, 20]), XCe = [...Object.keys(HCe), ...qCe, "2xs", "xs", "sm", "lg", "xl", "2xl", "beat", "border", "fade", "beat-fade", "bounce", "flip-both", "flip-horizontal", "flip-vertical", "flip", "fw", "inverse", "layers-counter", "layers-text", "layers", "li", "pull-left", "pull-right", "pulse", "rotate-180", "rotate-270", "rotate-90", "rotate-by", "shake", "spin-pulse", "spin-reverse", "spin", "stack-1x", "stack-2x", "stack", "ul", xy.GROUP, xy.SWAP_OPACITY, xy.PRIMARY, xy.SECONDARY].concat(hB.map((e) => "".concat(e, "x"))).concat(BCe.map((e) => "w-".concat(e))), KCe = {
  "Font Awesome 5 Free": {
    900: "fas",
    400: "far"
  },
  "Font Awesome 5 Pro": {
    900: "fas",
    400: "far",
    normal: "far",
    300: "fal"
  },
  "Font Awesome 5 Brands": {
    400: "fab",
    normal: "fab"
  },
  "Font Awesome 5 Duotone": {
    900: "fad"
  }
};
const Pi = "___FONT_AWESOME___", n4 = 16, bB = "fa", yB = "svg-inline--fa", ku = "data-fa-i2svg", o4 = "data-fa-pseudo-element", JCe = "data-fa-pseudo-element-pending", zC = "data-prefix", FC = "data-icon", PM = "fontawesome-i2svg", QCe = "async", ZCe = ["HTML", "HEAD", "STYLE", "SCRIPT"], vB = (() => {
  try {
    return process.env.NODE_ENV === "production";
  } catch {
    return !1;
  }
})();
function pb(e) {
  return new Proxy(e, {
    get(t, r) {
      return r in t ? t[r] : t[vn];
    }
  });
}
const xB = we({}, pB);
xB[vn] = we(we(we(we({}, {
  "fa-duotone": "duotone"
}), pB[vn]), EM.kit), EM["kit-duotone"]);
const e6e = pb(xB), a4 = we({}, MCe);
a4[vn] = we(we(we(we({}, {
  duotone: "fad"
}), a4[vn]), SM.kit), SM["kit-duotone"]);
const CM = pb(a4), i4 = we({}, t4);
i4[vn] = we(we({}, i4[vn]), LCe.kit);
const DC = pb(i4), s4 = we({}, YCe);
s4[vn] = we(we({}, s4[vn]), FCe.kit);
pb(s4);
const t6e = PCe, wB = "fa-layers-text", r6e = CCe, n6e = we({}, jCe);
pb(n6e);
const o6e = ["class", "data-prefix", "data-icon", "data-fa-transform", "data-fa-mask"], yk = ACe, a6e = [...zCe, ...XCe], zg = fc.FontAwesomeConfig || {};
function i6e(e) {
  var t = Yr.querySelector("script[" + e + "]");
  if (t)
    return t.getAttribute(e);
}
function s6e(e) {
  return e === "" ? !0 : e === "false" ? !1 : e === "true" ? !0 : e;
}
Yr && typeof Yr.querySelector == "function" && [["data-family-prefix", "familyPrefix"], ["data-css-prefix", "cssPrefix"], ["data-family-default", "familyDefault"], ["data-style-default", "styleDefault"], ["data-replacement-class", "replacementClass"], ["data-auto-replace-svg", "autoReplaceSvg"], ["data-auto-add-css", "autoAddCss"], ["data-auto-a11y", "autoA11y"], ["data-search-pseudo-elements", "searchPseudoElements"], ["data-observe-mutations", "observeMutations"], ["data-mutate-approach", "mutateApproach"], ["data-keep-original-source", "keepOriginalSource"], ["data-measure-performance", "measurePerformance"], ["data-show-missing-icons", "showMissingIcons"]].forEach((t) => {
  let [r, n] = t;
  const o = s6e(i6e(r));
  o != null && (zg[n] = o);
});
const kB = {
  styleDefault: "solid",
  familyDefault: vn,
  cssPrefix: bB,
  replacementClass: yB,
  autoReplaceSvg: !0,
  autoAddCss: !0,
  autoA11y: !0,
  searchPseudoElements: !1,
  observeMutations: !0,
  mutateApproach: "async",
  keepOriginalSource: !0,
  measurePerformance: !1,
  showMissingIcons: !0
};
zg.familyPrefix && (zg.cssPrefix = zg.familyPrefix);
const xd = we(we({}, kB), zg);
xd.autoReplaceSvg || (xd.observeMutations = !1);
const qe = {};
Object.keys(kB).forEach((e) => {
  Object.defineProperty(qe, e, {
    enumerable: !0,
    set: function(t) {
      xd[e] = t, Fg.forEach((r) => r(qe));
    },
    get: function() {
      return xd[e];
    }
  });
});
Object.defineProperty(qe, "familyPrefix", {
  enumerable: !0,
  set: function(e) {
    xd.cssPrefix = e, Fg.forEach((t) => t(qe));
  },
  get: function() {
    return xd.cssPrefix;
  }
});
fc.FontAwesomeConfig = qe;
const Fg = [];
function l6e(e) {
  return Fg.push(e), () => {
    Fg.splice(Fg.indexOf(e), 1);
  };
}
const ol = n4, ka = {
  size: 16,
  x: 0,
  y: 0,
  rotate: 0,
  flipX: !1,
  flipY: !1
};
function c6e(e) {
  if (!e || !Hi)
    return;
  const t = Yr.createElement("style");
  t.setAttribute("type", "text/css"), t.innerHTML = e;
  const r = Yr.head.childNodes;
  let n = null;
  for (let o = r.length - 1; o > -1; o--) {
    const a = r[o], i = (a.tagName || "").toUpperCase();
    ["STYLE", "LINK"].indexOf(i) > -1 && (n = a);
  }
  return Yr.head.insertBefore(t, n), e;
}
const u6e = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
function Th() {
  let e = 12, t = "";
  for (; e-- > 0; )
    t += u6e[Math.random() * 62 | 0];
  return t;
}
function Kd(e) {
  const t = [];
  for (let r = (e || []).length >>> 0; r--; )
    t[r] = e[r];
  return t;
}
function LC(e) {
  return e.classList ? Kd(e.classList) : (e.getAttribute("class") || "").split(" ").filter((t) => t);
}
function $B(e) {
  return "".concat(e).replace(/&/g, "&amp;").replace(/"/g, "&quot;").replace(/'/g, "&#39;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
}
function f6e(e) {
  return Object.keys(e || {}).reduce((t, r) => t + "".concat(r, '="').concat($B(e[r]), '" '), "").trim();
}
function q0(e) {
  return Object.keys(e || {}).reduce((t, r) => t + "".concat(r, ": ").concat(e[r].trim(), ";"), "");
}
function VC(e) {
  return e.size !== ka.size || e.x !== ka.x || e.y !== ka.y || e.rotate !== ka.rotate || e.flipX || e.flipY;
}
function d6e(e) {
  let {
    transform: t,
    containerWidth: r,
    iconWidth: n
  } = e;
  const o = {
    transform: "translate(".concat(r / 2, " 256)")
  }, a = "translate(".concat(t.x * 32, ", ").concat(t.y * 32, ") "), i = "scale(".concat(t.size / 16 * (t.flipX ? -1 : 1), ", ").concat(t.size / 16 * (t.flipY ? -1 : 1), ") "), s = "rotate(".concat(t.rotate, " 0 0)"), l = {
    transform: "".concat(a, " ").concat(i, " ").concat(s)
  }, c = {
    transform: "translate(".concat(n / 2 * -1, " -256)")
  };
  return {
    outer: o,
    inner: l,
    path: c
  };
}
function p6e(e) {
  let {
    transform: t,
    width: r = n4,
    height: n = n4,
    startCentered: o = !1
  } = e, a = "";
  return o && dB ? a += "translate(".concat(t.x / ol - r / 2, "em, ").concat(t.y / ol - n / 2, "em) ") : o ? a += "translate(calc(-50% + ".concat(t.x / ol, "em), calc(-50% + ").concat(t.y / ol, "em)) ") : a += "translate(".concat(t.x / ol, "em, ").concat(t.y / ol, "em) "), a += "scale(".concat(t.size / ol * (t.flipX ? -1 : 1), ", ").concat(t.size / ol * (t.flipY ? -1 : 1), ") "), a += "rotate(".concat(t.rotate, "deg) "), a;
}
var m6e = `:root, :host {
  --fa-font-solid: normal 900 1em/1 "Font Awesome 6 Free";
  --fa-font-regular: normal 400 1em/1 "Font Awesome 6 Free";
  --fa-font-light: normal 300 1em/1 "Font Awesome 6 Pro";
  --fa-font-thin: normal 100 1em/1 "Font Awesome 6 Pro";
  --fa-font-duotone: normal 900 1em/1 "Font Awesome 6 Duotone";
  --fa-font-duotone-regular: normal 400 1em/1 "Font Awesome 6 Duotone";
  --fa-font-duotone-light: normal 300 1em/1 "Font Awesome 6 Duotone";
  --fa-font-duotone-thin: normal 100 1em/1 "Font Awesome 6 Duotone";
  --fa-font-brands: normal 400 1em/1 "Font Awesome 6 Brands";
  --fa-font-sharp-solid: normal 900 1em/1 "Font Awesome 6 Sharp";
  --fa-font-sharp-regular: normal 400 1em/1 "Font Awesome 6 Sharp";
  --fa-font-sharp-light: normal 300 1em/1 "Font Awesome 6 Sharp";
  --fa-font-sharp-thin: normal 100 1em/1 "Font Awesome 6 Sharp";
  --fa-font-sharp-duotone-solid: normal 900 1em/1 "Font Awesome 6 Sharp Duotone";
  --fa-font-sharp-duotone-regular: normal 400 1em/1 "Font Awesome 6 Sharp Duotone";
  --fa-font-sharp-duotone-light: normal 300 1em/1 "Font Awesome 6 Sharp Duotone";
  --fa-font-sharp-duotone-thin: normal 100 1em/1 "Font Awesome 6 Sharp Duotone";
}

svg:not(:root).svg-inline--fa, svg:not(:host).svg-inline--fa {
  overflow: visible;
  box-sizing: content-box;
}

.svg-inline--fa {
  display: var(--fa-display, inline-block);
  height: 1em;
  overflow: visible;
  vertical-align: -0.125em;
}
.svg-inline--fa.fa-2xs {
  vertical-align: 0.1em;
}
.svg-inline--fa.fa-xs {
  vertical-align: 0em;
}
.svg-inline--fa.fa-sm {
  vertical-align: -0.0714285705em;
}
.svg-inline--fa.fa-lg {
  vertical-align: -0.2em;
}
.svg-inline--fa.fa-xl {
  vertical-align: -0.25em;
}
.svg-inline--fa.fa-2xl {
  vertical-align: -0.3125em;
}
.svg-inline--fa.fa-pull-left {
  margin-right: var(--fa-pull-margin, 0.3em);
  width: auto;
}
.svg-inline--fa.fa-pull-right {
  margin-left: var(--fa-pull-margin, 0.3em);
  width: auto;
}
.svg-inline--fa.fa-li {
  width: var(--fa-li-width, 2em);
  top: 0.25em;
}
.svg-inline--fa.fa-fw {
  width: var(--fa-fw-width, 1.25em);
}

.fa-layers svg.svg-inline--fa {
  bottom: 0;
  left: 0;
  margin: auto;
  position: absolute;
  right: 0;
  top: 0;
}

.fa-layers-counter, .fa-layers-text {
  display: inline-block;
  position: absolute;
  text-align: center;
}

.fa-layers {
  display: inline-block;
  height: 1em;
  position: relative;
  text-align: center;
  vertical-align: -0.125em;
  width: 1em;
}
.fa-layers svg.svg-inline--fa {
  transform-origin: center center;
}

.fa-layers-text {
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  transform-origin: center center;
}

.fa-layers-counter {
  background-color: var(--fa-counter-background-color, #ff253a);
  border-radius: var(--fa-counter-border-radius, 1em);
  box-sizing: border-box;
  color: var(--fa-inverse, #fff);
  line-height: var(--fa-counter-line-height, 1);
  max-width: var(--fa-counter-max-width, 5em);
  min-width: var(--fa-counter-min-width, 1.5em);
  overflow: hidden;
  padding: var(--fa-counter-padding, 0.25em 0.5em);
  right: var(--fa-right, 0);
  text-overflow: ellipsis;
  top: var(--fa-top, 0);
  transform: scale(var(--fa-counter-scale, 0.25));
  transform-origin: top right;
}

.fa-layers-bottom-right {
  bottom: var(--fa-bottom, 0);
  right: var(--fa-right, 0);
  top: auto;
  transform: scale(var(--fa-layers-scale, 0.25));
  transform-origin: bottom right;
}

.fa-layers-bottom-left {
  bottom: var(--fa-bottom, 0);
  left: var(--fa-left, 0);
  right: auto;
  top: auto;
  transform: scale(var(--fa-layers-scale, 0.25));
  transform-origin: bottom left;
}

.fa-layers-top-right {
  top: var(--fa-top, 0);
  right: var(--fa-right, 0);
  transform: scale(var(--fa-layers-scale, 0.25));
  transform-origin: top right;
}

.fa-layers-top-left {
  left: var(--fa-left, 0);
  right: auto;
  top: var(--fa-top, 0);
  transform: scale(var(--fa-layers-scale, 0.25));
  transform-origin: top left;
}

.fa-1x {
  font-size: 1em;
}

.fa-2x {
  font-size: 2em;
}

.fa-3x {
  font-size: 3em;
}

.fa-4x {
  font-size: 4em;
}

.fa-5x {
  font-size: 5em;
}

.fa-6x {
  font-size: 6em;
}

.fa-7x {
  font-size: 7em;
}

.fa-8x {
  font-size: 8em;
}

.fa-9x {
  font-size: 9em;
}

.fa-10x {
  font-size: 10em;
}

.fa-2xs {
  font-size: 0.625em;
  line-height: 0.1em;
  vertical-align: 0.225em;
}

.fa-xs {
  font-size: 0.75em;
  line-height: 0.0833333337em;
  vertical-align: 0.125em;
}

.fa-sm {
  font-size: 0.875em;
  line-height: 0.0714285718em;
  vertical-align: 0.0535714295em;
}

.fa-lg {
  font-size: 1.25em;
  line-height: 0.05em;
  vertical-align: -0.075em;
}

.fa-xl {
  font-size: 1.5em;
  line-height: 0.0416666682em;
  vertical-align: -0.125em;
}

.fa-2xl {
  font-size: 2em;
  line-height: 0.03125em;
  vertical-align: -0.1875em;
}

.fa-fw {
  text-align: center;
  width: 1.25em;
}

.fa-ul {
  list-style-type: none;
  margin-left: var(--fa-li-margin, 2.5em);
  padding-left: 0;
}
.fa-ul > li {
  position: relative;
}

.fa-li {
  left: calc(-1 * var(--fa-li-width, 2em));
  position: absolute;
  text-align: center;
  width: var(--fa-li-width, 2em);
  line-height: inherit;
}

.fa-border {
  border-color: var(--fa-border-color, #eee);
  border-radius: var(--fa-border-radius, 0.1em);
  border-style: var(--fa-border-style, solid);
  border-width: var(--fa-border-width, 0.08em);
  padding: var(--fa-border-padding, 0.2em 0.25em 0.15em);
}

.fa-pull-left {
  float: left;
  margin-right: var(--fa-pull-margin, 0.3em);
}

.fa-pull-right {
  float: right;
  margin-left: var(--fa-pull-margin, 0.3em);
}

.fa-beat {
  animation-name: fa-beat;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, ease-in-out);
}

.fa-bounce {
  animation-name: fa-bounce;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.28, 0.84, 0.42, 1));
}

.fa-fade {
  animation-name: fa-fade;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));
}

.fa-beat-fade {
  animation-name: fa-beat-fade;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));
}

.fa-flip {
  animation-name: fa-flip;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, ease-in-out);
}

.fa-shake {
  animation-name: fa-shake;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, linear);
}

.fa-spin {
  animation-name: fa-spin;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 2s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, linear);
}

.fa-spin-reverse {
  --fa-animation-direction: reverse;
}

.fa-pulse,
.fa-spin-pulse {
  animation-name: fa-spin;
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, steps(8));
}

@media (prefers-reduced-motion: reduce) {
  .fa-beat,
.fa-bounce,
.fa-fade,
.fa-beat-fade,
.fa-flip,
.fa-pulse,
.fa-shake,
.fa-spin,
.fa-spin-pulse {
    animation-delay: -1ms;
    animation-duration: 1ms;
    animation-iteration-count: 1;
    transition-delay: 0s;
    transition-duration: 0s;
  }
}
@keyframes fa-beat {
  0%, 90% {
    transform: scale(1);
  }
  45% {
    transform: scale(var(--fa-beat-scale, 1.25));
  }
}
@keyframes fa-bounce {
  0% {
    transform: scale(1, 1) translateY(0);
  }
  10% {
    transform: scale(var(--fa-bounce-start-scale-x, 1.1), var(--fa-bounce-start-scale-y, 0.9)) translateY(0);
  }
  30% {
    transform: scale(var(--fa-bounce-jump-scale-x, 0.9), var(--fa-bounce-jump-scale-y, 1.1)) translateY(var(--fa-bounce-height, -0.5em));
  }
  50% {
    transform: scale(var(--fa-bounce-land-scale-x, 1.05), var(--fa-bounce-land-scale-y, 0.95)) translateY(0);
  }
  57% {
    transform: scale(1, 1) translateY(var(--fa-bounce-rebound, -0.125em));
  }
  64% {
    transform: scale(1, 1) translateY(0);
  }
  100% {
    transform: scale(1, 1) translateY(0);
  }
}
@keyframes fa-fade {
  50% {
    opacity: var(--fa-fade-opacity, 0.4);
  }
}
@keyframes fa-beat-fade {
  0%, 100% {
    opacity: var(--fa-beat-fade-opacity, 0.4);
    transform: scale(1);
  }
  50% {
    opacity: 1;
    transform: scale(var(--fa-beat-fade-scale, 1.125));
  }
}
@keyframes fa-flip {
  50% {
    transform: rotate3d(var(--fa-flip-x, 0), var(--fa-flip-y, 1), var(--fa-flip-z, 0), var(--fa-flip-angle, -180deg));
  }
}
@keyframes fa-shake {
  0% {
    transform: rotate(-15deg);
  }
  4% {
    transform: rotate(15deg);
  }
  8%, 24% {
    transform: rotate(-18deg);
  }
  12%, 28% {
    transform: rotate(18deg);
  }
  16% {
    transform: rotate(-22deg);
  }
  20% {
    transform: rotate(22deg);
  }
  32% {
    transform: rotate(-12deg);
  }
  36% {
    transform: rotate(12deg);
  }
  40%, 100% {
    transform: rotate(0deg);
  }
}
@keyframes fa-spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
.fa-rotate-90 {
  transform: rotate(90deg);
}

.fa-rotate-180 {
  transform: rotate(180deg);
}

.fa-rotate-270 {
  transform: rotate(270deg);
}

.fa-flip-horizontal {
  transform: scale(-1, 1);
}

.fa-flip-vertical {
  transform: scale(1, -1);
}

.fa-flip-both,
.fa-flip-horizontal.fa-flip-vertical {
  transform: scale(-1, -1);
}

.fa-rotate-by {
  transform: rotate(var(--fa-rotate-angle, 0));
}

.fa-stack {
  display: inline-block;
  vertical-align: middle;
  height: 2em;
  position: relative;
  width: 2.5em;
}

.fa-stack-1x,
.fa-stack-2x {
  bottom: 0;
  left: 0;
  margin: auto;
  position: absolute;
  right: 0;
  top: 0;
  z-index: var(--fa-stack-z-index, auto);
}

.svg-inline--fa.fa-stack-1x {
  height: 1em;
  width: 1.25em;
}
.svg-inline--fa.fa-stack-2x {
  height: 2em;
  width: 2.5em;
}

.fa-inverse {
  color: var(--fa-inverse, #fff);
}

.sr-only,
.fa-sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.sr-only-focusable:not(:focus),
.fa-sr-only-focusable:not(:focus) {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.svg-inline--fa .fa-primary {
  fill: var(--fa-primary-color, currentColor);
  opacity: var(--fa-primary-opacity, 1);
}

.svg-inline--fa .fa-secondary {
  fill: var(--fa-secondary-color, currentColor);
  opacity: var(--fa-secondary-opacity, 0.4);
}

.svg-inline--fa.fa-swap-opacity .fa-primary {
  opacity: var(--fa-secondary-opacity, 0.4);
}

.svg-inline--fa.fa-swap-opacity .fa-secondary {
  opacity: var(--fa-primary-opacity, 1);
}

.svg-inline--fa mask .fa-primary,
.svg-inline--fa mask .fa-secondary {
  fill: black;
}`;
function OB() {
  const e = bB, t = yB, r = qe.cssPrefix, n = qe.replacementClass;
  let o = m6e;
  if (r !== e || n !== t) {
    const a = new RegExp("\\.".concat(e, "\\-"), "g"), i = new RegExp("\\--".concat(e, "\\-"), "g"), s = new RegExp("\\.".concat(t), "g");
    o = o.replace(a, ".".concat(r, "-")).replace(i, "--".concat(r, "-")).replace(s, ".".concat(n));
  }
  return o;
}
let AM = !1;
function vk() {
  qe.autoAddCss && !AM && (c6e(OB()), AM = !0);
}
var g6e = {
  mixout() {
    return {
      dom: {
        css: OB,
        insertCss: vk
      }
    };
  },
  hooks() {
    return {
      beforeDOMElementCreation() {
        vk();
      },
      beforeI2svg() {
        vk();
      }
    };
  }
};
const Ci = fc || {};
Ci[Pi] || (Ci[Pi] = {});
Ci[Pi].styles || (Ci[Pi].styles = {});
Ci[Pi].hooks || (Ci[Pi].hooks = {});
Ci[Pi].shims || (Ci[Pi].shims = []);
var $a = Ci[Pi];
const EB = [], SB = function() {
  Yr.removeEventListener("DOMContentLoaded", SB), u1 = 1, EB.map((e) => e());
};
let u1 = !1;
Hi && (u1 = (Yr.documentElement.doScroll ? /^loaded|^c/ : /^loaded|^i|^c/).test(Yr.readyState), u1 || Yr.addEventListener("DOMContentLoaded", SB));
function h6e(e) {
  Hi && (u1 ? setTimeout(e, 0) : EB.push(e));
}
function mb(e) {
  const {
    tag: t,
    attributes: r = {},
    children: n = []
  } = e;
  return typeof e == "string" ? $B(e) : "<".concat(t, " ").concat(f6e(r), ">").concat(n.map(mb).join(""), "</").concat(t, ">");
}
function _M(e, t, r) {
  if (e && e[t] && e[t][r])
    return {
      prefix: t,
      iconName: r,
      icon: e[t][r]
    };
}
var xk = function(t, r, n, o) {
  var a = Object.keys(t), i = a.length, s = r, l, c, u;
  for (n === void 0 ? (l = 1, u = t[a[0]]) : (l = 0, u = n); l < i; l++)
    c = a[l], u = s(u, t[c], c, t);
  return u;
};
function b6e(e) {
  const t = [];
  let r = 0;
  const n = e.length;
  for (; r < n; ) {
    const o = e.charCodeAt(r++);
    if (o >= 55296 && o <= 56319 && r < n) {
      const a = e.charCodeAt(r++);
      (a & 64512) == 56320 ? t.push(((o & 1023) << 10) + (a & 1023) + 65536) : (t.push(o), r--);
    } else
      t.push(o);
  }
  return t;
}
function l4(e) {
  const t = b6e(e);
  return t.length === 1 ? t[0].toString(16) : null;
}
function y6e(e, t) {
  const r = e.length;
  let n = e.charCodeAt(t), o;
  return n >= 55296 && n <= 56319 && r > t + 1 && (o = e.charCodeAt(t + 1), o >= 56320 && o <= 57343) ? (n - 55296) * 1024 + o - 56320 + 65536 : n;
}
function NM(e) {
  return Object.keys(e).reduce((t, r) => {
    const n = e[r];
    return !!n.icon ? t[n.iconName] = n.icon : t[r] = n, t;
  }, {});
}
function c4(e, t) {
  let r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
  const {
    skipHooks: n = !1
  } = r, o = NM(t);
  typeof $a.hooks.addPack == "function" && !n ? $a.hooks.addPack(e, NM(t)) : $a.styles[e] = we(we({}, $a.styles[e] || {}), o), e === "fas" && c4("fa", t);
}
const {
  styles: Mh,
  shims: v6e
} = $a, PB = Object.keys(DC), x6e = PB.reduce((e, t) => (e[t] = Object.keys(DC[t]), e), {});
let WC = null, CB = {}, AB = {}, _B = {}, NB = {}, jB = {};
function w6e(e) {
  return ~a6e.indexOf(e);
}
function k6e(e, t) {
  const r = t.split("-"), n = r[0], o = r.slice(1).join("-");
  return n === e && o !== "" && !w6e(o) ? o : null;
}
const IB = () => {
  const e = (n) => xk(Mh, (o, a, i) => (o[i] = xk(a, n, {}), o), {});
  CB = e((n, o, a) => (o[3] && (n[o[3]] = a), o[2] && o[2].filter((s) => typeof s == "number").forEach((s) => {
    n[s.toString(16)] = a;
  }), n)), AB = e((n, o, a) => (n[a] = a, o[2] && o[2].filter((s) => typeof s == "string").forEach((s) => {
    n[s] = a;
  }), n)), jB = e((n, o, a) => {
    const i = o[2];
    return n[a] = a, i.forEach((s) => {
      n[s] = a;
    }), n;
  });
  const t = "far" in Mh || qe.autoFetchSvg, r = xk(v6e, (n, o) => {
    const a = o[0];
    let i = o[1];
    const s = o[2];
    return i === "far" && !t && (i = "fas"), typeof a == "string" && (n.names[a] = {
      prefix: i,
      iconName: s
    }), typeof a == "number" && (n.unicodes[a.toString(16)] = {
      prefix: i,
      iconName: s
    }), n;
  }, {
    names: {},
    unicodes: {}
  });
  _B = r.names, NB = r.unicodes, WC = B0(qe.styleDefault, {
    family: qe.familyDefault
  });
};
l6e((e) => {
  WC = B0(e.styleDefault, {
    family: qe.familyDefault
  });
});
IB();
function UC(e, t) {
  return (CB[e] || {})[t];
}
function $6e(e, t) {
  return (AB[e] || {})[t];
}
function Yc(e, t) {
  return (jB[e] || {})[t];
}
function TB(e) {
  return _B[e] || {
    prefix: null,
    iconName: null
  };
}
function O6e(e) {
  const t = NB[e], r = UC("fas", e);
  return t || (r ? {
    prefix: "fas",
    iconName: r
  } : null) || {
    prefix: null,
    iconName: null
  };
}
function dc() {
  return WC;
}
const MB = () => ({
  prefix: null,
  iconName: null,
  rest: []
});
function E6e(e) {
  let t = vn;
  const r = PB.reduce((n, o) => (n[o] = "".concat(qe.cssPrefix, "-").concat(o), n), {});
  return gB.forEach((n) => {
    (e.includes(r[n]) || e.some((o) => x6e[n].includes(o))) && (t = n);
  }), t;
}
function B0(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  const {
    family: r = vn
  } = t, n = e6e[r][e];
  if (r === G0 && !e)
    return "fad";
  const o = CM[r][e] || CM[r][n], a = e in $a.styles ? e : null;
  return o || a || null;
}
function S6e(e) {
  let t = [], r = null;
  return e.forEach((n) => {
    const o = k6e(qe.cssPrefix, n);
    o ? r = o : n && t.push(n);
  }), {
    iconName: r,
    rest: t
  };
}
function jM(e) {
  return e.sort().filter((t, r, n) => n.indexOf(t) === r);
}
function X0(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  const {
    skipLookups: r = !1
  } = t;
  let n = null;
  const o = r4.concat(WCe), a = jM(e.filter((f) => o.includes(f))), i = jM(e.filter((f) => !r4.includes(f))), s = a.filter((f) => (n = f, !mB.includes(f))), [l = null] = s, c = E6e(a), u = we(we({}, S6e(i)), {}, {
    prefix: B0(l, {
      family: c
    })
  });
  return we(we(we({}, u), _6e({
    values: e,
    family: c,
    styles: Mh,
    config: qe,
    canonical: u,
    givenPrefix: n
  })), P6e(r, n, u));
}
function P6e(e, t, r) {
  let {
    prefix: n,
    iconName: o
  } = r;
  if (e || !n || !o)
    return {
      prefix: n,
      iconName: o
    };
  const a = t === "fa" ? TB(o) : {}, i = Yc(n, o);
  return o = a.iconName || i || o, n = a.prefix || n, n === "far" && !Mh.far && Mh.fas && !qe.autoFetchSvg && (n = "fas"), {
    prefix: n,
    iconName: o
  };
}
const C6e = gB.filter((e) => e !== vn || e !== G0), A6e = Object.keys(t4).filter((e) => e !== vn).map((e) => Object.keys(t4[e])).flat();
function _6e(e) {
  const {
    values: t,
    family: r,
    canonical: n,
    givenPrefix: o = "",
    styles: a = {},
    config: i = {}
  } = e, s = r === G0, l = t.includes("fa-duotone") || t.includes("fad"), c = i.familyDefault === "duotone", u = n.prefix === "fad" || n.prefix === "fa-duotone";
  if (!s && (l || c || u) && (n.prefix = "fad"), (t.includes("fa-brands") || t.includes("fab")) && (n.prefix = "fab"), !n.prefix && C6e.includes(r) && (Object.keys(a).find((p) => A6e.includes(p)) || i.autoFetchSvg)) {
    const p = TCe.get(r).defaultShortPrefixId;
    n.prefix = p, n.iconName = Yc(n.prefix, n.iconName) || n.iconName;
  }
  return (n.prefix === "fa" || o === "fa") && (n.prefix = dc() || "fas"), n;
}
class N6e {
  constructor() {
    this.definitions = {};
  }
  add() {
    for (var t = arguments.length, r = new Array(t), n = 0; n < t; n++)
      r[n] = arguments[n];
    const o = r.reduce(this._pullDefinitions, {});
    Object.keys(o).forEach((a) => {
      this.definitions[a] = we(we({}, this.definitions[a] || {}), o[a]), c4(a, o[a]);
      const i = DC[vn][a];
      i && c4(i, o[a]), IB();
    });
  }
  reset() {
    this.definitions = {};
  }
  _pullDefinitions(t, r) {
    const n = r.prefix && r.iconName && r.icon ? {
      0: r
    } : r;
    return Object.keys(n).map((o) => {
      const {
        prefix: a,
        iconName: i,
        icon: s
      } = n[o], l = s[2];
      t[a] || (t[a] = {}), l.length > 0 && l.forEach((c) => {
        typeof c == "string" && (t[a][c] = s);
      }), t[a][i] = s;
    }), t;
  }
}
let IM = [], bf = {};
const Jf = {}, j6e = Object.keys(Jf);
function I6e(e, t) {
  let {
    mixoutsTo: r
  } = t;
  return IM = e, bf = {}, Object.keys(Jf).forEach((n) => {
    j6e.indexOf(n) === -1 && delete Jf[n];
  }), IM.forEach((n) => {
    const o = n.mixout ? n.mixout() : {};
    if (Object.keys(o).forEach((a) => {
      typeof o[a] == "function" && (r[a] = o[a]), typeof o[a] == "object" && Object.keys(o[a]).forEach((i) => {
        r[a] || (r[a] = {}), r[a][i] = o[a][i];
      });
    }), n.hooks) {
      const a = n.hooks();
      Object.keys(a).forEach((i) => {
        bf[i] || (bf[i] = []), bf[i].push(a[i]);
      });
    }
    n.provides && n.provides(Jf);
  }), r;
}
function u4(e, t) {
  for (var r = arguments.length, n = new Array(r > 2 ? r - 2 : 0), o = 2; o < r; o++)
    n[o - 2] = arguments[o];
  return (bf[e] || []).forEach((i) => {
    t = i.apply(null, [t, ...n]);
  }), t;
}
function $u(e) {
  for (var t = arguments.length, r = new Array(t > 1 ? t - 1 : 0), n = 1; n < t; n++)
    r[n - 1] = arguments[n];
  (bf[e] || []).forEach((a) => {
    a.apply(null, r);
  });
}
function pc() {
  const e = arguments[0], t = Array.prototype.slice.call(arguments, 1);
  return Jf[e] ? Jf[e].apply(null, t) : void 0;
}
function f4(e) {
  e.prefix === "fa" && (e.prefix = "fas");
  let {
    iconName: t
  } = e;
  const r = e.prefix || dc();
  if (t)
    return t = Yc(r, t) || t, _M(RB.definitions, r, t) || _M($a.styles, r, t);
}
const RB = new N6e(), T6e = () => {
  qe.autoReplaceSvg = !1, qe.observeMutations = !1, $u("noAuto");
}, M6e = {
  i2svg: function() {
    let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    return Hi ? ($u("beforeI2svg", e), pc("pseudoElements2svg", e), pc("i2svg", e)) : Promise.reject(new Error("Operation requires a DOM of some kind."));
  },
  watch: function() {
    let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    const {
      autoReplaceSvgRoot: t
    } = e;
    qe.autoReplaceSvg === !1 && (qe.autoReplaceSvg = !0), qe.observeMutations = !0, h6e(() => {
      z6e({
        autoReplaceSvgRoot: t
      }), $u("watch", e);
    });
  }
}, R6e = {
  icon: (e) => {
    if (e === null)
      return null;
    if (typeof e == "object" && e.prefix && e.iconName)
      return {
        prefix: e.prefix,
        iconName: Yc(e.prefix, e.iconName) || e.iconName
      };
    if (Array.isArray(e) && e.length === 2) {
      const t = e[1].indexOf("fa-") === 0 ? e[1].slice(3) : e[1], r = B0(e[0]);
      return {
        prefix: r,
        iconName: Yc(r, t) || t
      };
    }
    if (typeof e == "string" && (e.indexOf("".concat(qe.cssPrefix, "-")) > -1 || e.match(t6e))) {
      const t = X0(e.split(" "), {
        skipLookups: !0
      });
      return {
        prefix: t.prefix || dc(),
        iconName: Yc(t.prefix, t.iconName) || t.iconName
      };
    }
    if (typeof e == "string") {
      const t = dc();
      return {
        prefix: t,
        iconName: Yc(t, e) || e
      };
    }
  }
}, no = {
  noAuto: T6e,
  config: qe,
  dom: M6e,
  parse: R6e,
  library: RB,
  findIconDefinition: f4,
  toHtml: mb
}, z6e = function() {
  let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  const {
    autoReplaceSvgRoot: t = Yr
  } = e;
  (Object.keys($a.styles).length > 0 || qe.autoFetchSvg) && Hi && qe.autoReplaceSvg && no.dom.i2svg({
    node: t
  });
};
function K0(e, t) {
  return Object.defineProperty(e, "abstract", {
    get: t
  }), Object.defineProperty(e, "html", {
    get: function() {
      return e.abstract.map((r) => mb(r));
    }
  }), Object.defineProperty(e, "node", {
    get: function() {
      if (!Hi) return;
      const r = Yr.createElement("div");
      return r.innerHTML = e.html, r.children;
    }
  }), e;
}
function F6e(e) {
  let {
    children: t,
    main: r,
    mask: n,
    attributes: o,
    styles: a,
    transform: i
  } = e;
  if (VC(i) && r.found && !n.found) {
    const {
      width: s,
      height: l
    } = r, c = {
      x: s / l / 2,
      y: 0.5
    };
    o.style = q0(we(we({}, a), {}, {
      "transform-origin": "".concat(c.x + i.x / 16, "em ").concat(c.y + i.y / 16, "em")
    }));
  }
  return [{
    tag: "svg",
    attributes: o,
    children: t
  }];
}
function D6e(e) {
  let {
    prefix: t,
    iconName: r,
    children: n,
    attributes: o,
    symbol: a
  } = e;
  const i = a === !0 ? "".concat(t, "-").concat(qe.cssPrefix, "-").concat(r) : a;
  return [{
    tag: "svg",
    attributes: {
      style: "display: none;"
    },
    children: [{
      tag: "symbol",
      attributes: we(we({}, o), {}, {
        id: i
      }),
      children: n
    }]
  }];
}
function YC(e) {
  const {
    icons: {
      main: t,
      mask: r
    },
    prefix: n,
    iconName: o,
    transform: a,
    symbol: i,
    title: s,
    maskId: l,
    titleId: c,
    extra: u,
    watchable: f = !1
  } = e, {
    width: p,
    height: v
  } = r.found ? r : t, x = DCe.includes(n), b = [qe.replacementClass, o ? "".concat(qe.cssPrefix, "-").concat(o) : ""].filter((h) => u.classes.indexOf(h) === -1).filter((h) => h !== "" || !!h).concat(u.classes).join(" ");
  let m = {
    children: [],
    attributes: we(we({}, u.attributes), {}, {
      "data-prefix": n,
      "data-icon": o,
      class: b,
      role: u.attributes.role || "img",
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 ".concat(p, " ").concat(v)
    })
  };
  const w = x && !~u.classes.indexOf("fa-fw") ? {
    width: "".concat(p / v * 16 * 0.0625, "em")
  } : {};
  f && (m.attributes[ku] = ""), s && (m.children.push({
    tag: "title",
    attributes: {
      id: m.attributes["aria-labelledby"] || "title-".concat(c || Th())
    },
    children: [s]
  }), delete m.attributes.title);
  const $ = we(we({}, m), {}, {
    prefix: n,
    iconName: o,
    main: t,
    mask: r,
    maskId: l,
    transform: a,
    symbol: i,
    styles: we(we({}, w), u.styles)
  }), {
    children: E,
    attributes: S
  } = r.found && t.found ? pc("generateAbstractMask", $) || {
    children: [],
    attributes: {}
  } : pc("generateAbstractIcon", $) || {
    children: [],
    attributes: {}
  };
  return $.children = E, $.attributes = S, i ? D6e($) : F6e($);
}
function TM(e) {
  const {
    content: t,
    width: r,
    height: n,
    transform: o,
    title: a,
    extra: i,
    watchable: s = !1
  } = e, l = we(we(we({}, i.attributes), a ? {
    title: a
  } : {}), {}, {
    class: i.classes.join(" ")
  });
  s && (l[ku] = "");
  const c = we({}, i.styles);
  VC(o) && (c.transform = p6e({
    transform: o,
    startCentered: !0,
    width: r,
    height: n
  }), c["-webkit-transform"] = c.transform);
  const u = q0(c);
  u.length > 0 && (l.style = u);
  const f = [];
  return f.push({
    tag: "span",
    attributes: l,
    children: [t]
  }), a && f.push({
    tag: "span",
    attributes: {
      class: "sr-only"
    },
    children: [a]
  }), f;
}
function L6e(e) {
  const {
    content: t,
    title: r,
    extra: n
  } = e, o = we(we(we({}, n.attributes), r ? {
    title: r
  } : {}), {}, {
    class: n.classes.join(" ")
  }), a = q0(n.styles);
  a.length > 0 && (o.style = a);
  const i = [];
  return i.push({
    tag: "span",
    attributes: o,
    children: [t]
  }), r && i.push({
    tag: "span",
    attributes: {
      class: "sr-only"
    },
    children: [r]
  }), i;
}
const {
  styles: wk
} = $a;
function d4(e) {
  const t = e[0], r = e[1], [n] = e.slice(4);
  let o = null;
  return Array.isArray(n) ? o = {
    tag: "g",
    attributes: {
      class: "".concat(qe.cssPrefix, "-").concat(yk.GROUP)
    },
    children: [{
      tag: "path",
      attributes: {
        class: "".concat(qe.cssPrefix, "-").concat(yk.SECONDARY),
        fill: "currentColor",
        d: n[0]
      }
    }, {
      tag: "path",
      attributes: {
        class: "".concat(qe.cssPrefix, "-").concat(yk.PRIMARY),
        fill: "currentColor",
        d: n[1]
      }
    }]
  } : o = {
    tag: "path",
    attributes: {
      fill: "currentColor",
      d: n
    }
  }, {
    found: !0,
    width: t,
    height: r,
    icon: o
  };
}
const V6e = {
  found: !1,
  width: 512,
  height: 512
};
function W6e(e, t) {
  !vB && !qe.showMissingIcons && e && console.error('Icon with name "'.concat(e, '" and prefix "').concat(t, '" is missing.'));
}
function p4(e, t) {
  let r = t;
  return t === "fa" && qe.styleDefault !== null && (t = dc()), new Promise((n, o) => {
    if (r === "fa") {
      const a = TB(e) || {};
      e = a.iconName || e, t = a.prefix || t;
    }
    if (e && t && wk[t] && wk[t][e]) {
      const a = wk[t][e];
      return n(d4(a));
    }
    W6e(e, t), n(we(we({}, V6e), {}, {
      icon: qe.showMissingIcons && e ? pc("missingIconAbstract") || {} : {}
    }));
  });
}
const MM = () => {
}, m4 = qe.measurePerformance && vy && vy.mark && vy.measure ? vy : {
  mark: MM,
  measure: MM
}, sg = 'FA "6.7.2"', U6e = (e) => (m4.mark("".concat(sg, " ").concat(e, " begins")), () => zB(e)), zB = (e) => {
  m4.mark("".concat(sg, " ").concat(e, " ends")), m4.measure("".concat(sg, " ").concat(e), "".concat(sg, " ").concat(e, " begins"), "".concat(sg, " ").concat(e, " ends"));
};
var HC = {
  begin: U6e,
  end: zB
};
const pv = () => {
};
function RM(e) {
  return typeof (e.getAttribute ? e.getAttribute(ku) : null) == "string";
}
function Y6e(e) {
  const t = e.getAttribute ? e.getAttribute(zC) : null, r = e.getAttribute ? e.getAttribute(FC) : null;
  return t && r;
}
function H6e(e) {
  return e && e.classList && e.classList.contains && e.classList.contains(qe.replacementClass);
}
function G6e() {
  return qe.autoReplaceSvg === !0 ? mv.replace : mv[qe.autoReplaceSvg] || mv.replace;
}
function q6e(e) {
  return Yr.createElementNS("http://www.w3.org/2000/svg", e);
}
function B6e(e) {
  return Yr.createElement(e);
}
function FB(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  const {
    ceFn: r = e.tag === "svg" ? q6e : B6e
  } = t;
  if (typeof e == "string")
    return Yr.createTextNode(e);
  const n = r(e.tag);
  return Object.keys(e.attributes || []).forEach(function(a) {
    n.setAttribute(a, e.attributes[a]);
  }), (e.children || []).forEach(function(a) {
    n.appendChild(FB(a, {
      ceFn: r
    }));
  }), n;
}
function X6e(e) {
  let t = " ".concat(e.outerHTML, " ");
  return t = "".concat(t, "Font Awesome fontawesome.com "), t;
}
const mv = {
  replace: function(e) {
    const t = e[0];
    if (t.parentNode)
      if (e[1].forEach((r) => {
        t.parentNode.insertBefore(FB(r), t);
      }), t.getAttribute(ku) === null && qe.keepOriginalSource) {
        let r = Yr.createComment(X6e(t));
        t.parentNode.replaceChild(r, t);
      } else
        t.remove();
  },
  nest: function(e) {
    const t = e[0], r = e[1];
    if (~LC(t).indexOf(qe.replacementClass))
      return mv.replace(e);
    const n = new RegExp("".concat(qe.cssPrefix, "-.*"));
    if (delete r[0].attributes.id, r[0].attributes.class) {
      const a = r[0].attributes.class.split(" ").reduce((i, s) => (s === qe.replacementClass || s.match(n) ? i.toSvg.push(s) : i.toNode.push(s), i), {
        toNode: [],
        toSvg: []
      });
      r[0].attributes.class = a.toSvg.join(" "), a.toNode.length === 0 ? t.removeAttribute("class") : t.setAttribute("class", a.toNode.join(" "));
    }
    const o = r.map((a) => mb(a)).join(`
`);
    t.setAttribute(ku, ""), t.innerHTML = o;
  }
};
function zM(e) {
  e();
}
function DB(e, t) {
  const r = typeof t == "function" ? t : pv;
  if (e.length === 0)
    r();
  else {
    let n = zM;
    qe.mutateApproach === QCe && (n = fc.requestAnimationFrame || zM), n(() => {
      const o = G6e(), a = HC.begin("mutate");
      e.map(o), a(), r();
    });
  }
}
let GC = !1;
function LB() {
  GC = !0;
}
function g4() {
  GC = !1;
}
let f1 = null;
function FM(e) {
  if (!OM || !qe.observeMutations)
    return;
  const {
    treeCallback: t = pv,
    nodeCallback: r = pv,
    pseudoElementsCallback: n = pv,
    observeMutationsRoot: o = Yr
  } = e;
  f1 = new OM((a) => {
    if (GC) return;
    const i = dc();
    Kd(a).forEach((s) => {
      if (s.type === "childList" && s.addedNodes.length > 0 && !RM(s.addedNodes[0]) && (qe.searchPseudoElements && n(s.target), t(s.target)), s.type === "attributes" && s.target.parentNode && qe.searchPseudoElements && n(s.target.parentNode), s.type === "attributes" && RM(s.target) && ~o6e.indexOf(s.attributeName))
        if (s.attributeName === "class" && Y6e(s.target)) {
          const {
            prefix: l,
            iconName: c
          } = X0(LC(s.target));
          s.target.setAttribute(zC, l || i), c && s.target.setAttribute(FC, c);
        } else H6e(s.target) && r(s.target);
    });
  }), Hi && f1.observe(o, {
    childList: !0,
    attributes: !0,
    characterData: !0,
    subtree: !0
  });
}
function K6e() {
  f1 && f1.disconnect();
}
function J6e(e) {
  const t = e.getAttribute("style");
  let r = [];
  return t && (r = t.split(";").reduce((n, o) => {
    const a = o.split(":"), i = a[0], s = a.slice(1);
    return i && s.length > 0 && (n[i] = s.join(":").trim()), n;
  }, {})), r;
}
function Q6e(e) {
  const t = e.getAttribute("data-prefix"), r = e.getAttribute("data-icon"), n = e.innerText !== void 0 ? e.innerText.trim() : "";
  let o = X0(LC(e));
  return o.prefix || (o.prefix = dc()), t && r && (o.prefix = t, o.iconName = r), o.iconName && o.prefix || (o.prefix && n.length > 0 && (o.iconName = $6e(o.prefix, e.innerText) || UC(o.prefix, l4(e.innerText))), !o.iconName && qe.autoFetchSvg && e.firstChild && e.firstChild.nodeType === Node.TEXT_NODE && (o.iconName = e.firstChild.data)), o;
}
function Z6e(e) {
  const t = Kd(e.attributes).reduce((o, a) => (o.name !== "class" && o.name !== "style" && (o[a.name] = a.value), o), {}), r = e.getAttribute("title"), n = e.getAttribute("data-fa-title-id");
  return qe.autoA11y && (r ? t["aria-labelledby"] = "".concat(qe.replacementClass, "-title-").concat(n || Th()) : (t["aria-hidden"] = "true", t.focusable = "false")), t;
}
function eAe() {
  return {
    iconName: null,
    title: null,
    titleId: null,
    prefix: null,
    transform: ka,
    symbol: !1,
    mask: {
      iconName: null,
      prefix: null,
      rest: []
    },
    maskId: null,
    extra: {
      classes: [],
      styles: {},
      attributes: {}
    }
  };
}
function DM(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {
    styleParser: !0
  };
  const {
    iconName: r,
    prefix: n,
    rest: o
  } = Q6e(e), a = Z6e(e), i = u4("parseNodeAttributes", {}, e);
  let s = t.styleParser ? J6e(e) : [];
  return we({
    iconName: r,
    title: e.getAttribute("title"),
    titleId: e.getAttribute("data-fa-title-id"),
    prefix: n,
    transform: ka,
    mask: {
      iconName: null,
      prefix: null,
      rest: []
    },
    maskId: null,
    symbol: !1,
    extra: {
      classes: o,
      styles: s,
      attributes: a
    }
  }, i);
}
const {
  styles: tAe
} = $a;
function VB(e) {
  const t = qe.autoReplaceSvg === "nest" ? DM(e, {
    styleParser: !1
  }) : DM(e);
  return ~t.extra.classes.indexOf(wB) ? pc("generateLayersText", e, t) : pc("generateSvgReplacementMutation", e, t);
}
function rAe() {
  return [...RCe, ...r4];
}
function LM(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
  if (!Hi) return Promise.resolve();
  const r = Yr.documentElement.classList, n = (u) => r.add("".concat(PM, "-").concat(u)), o = (u) => r.remove("".concat(PM, "-").concat(u)), a = qe.autoFetchSvg ? rAe() : mB.concat(Object.keys(tAe));
  a.includes("fa") || a.push("fa");
  const i = [".".concat(wB, ":not([").concat(ku, "])")].concat(a.map((u) => ".".concat(u, ":not([").concat(ku, "])"))).join(", ");
  if (i.length === 0)
    return Promise.resolve();
  let s = [];
  try {
    s = Kd(e.querySelectorAll(i));
  } catch {
  }
  if (s.length > 0)
    n("pending"), o("complete");
  else
    return Promise.resolve();
  const l = HC.begin("onTree"), c = s.reduce((u, f) => {
    try {
      const p = VB(f);
      p && u.push(p);
    } catch (p) {
      vB || p.name === "MissingIcon" && console.error(p);
    }
    return u;
  }, []);
  return new Promise((u, f) => {
    Promise.all(c).then((p) => {
      DB(p, () => {
        n("active"), n("complete"), o("pending"), typeof t == "function" && t(), l(), u();
      });
    }).catch((p) => {
      l(), f(p);
    });
  });
}
function nAe(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
  VB(e).then((r) => {
    r && DB([r], t);
  });
}
function oAe(e) {
  return function(t) {
    let r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    const n = (t || {}).icon ? t : f4(t || {});
    let {
      mask: o
    } = r;
    return o && (o = (o || {}).icon ? o : f4(o || {})), e(n, we(we({}, r), {}, {
      mask: o
    }));
  };
}
const aAe = function(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  const {
    transform: r = ka,
    symbol: n = !1,
    mask: o = null,
    maskId: a = null,
    title: i = null,
    titleId: s = null,
    classes: l = [],
    attributes: c = {},
    styles: u = {}
  } = t;
  if (!e) return;
  const {
    prefix: f,
    iconName: p,
    icon: v
  } = e;
  return K0(we({
    type: "icon"
  }, e), () => ($u("beforeDOMElementCreation", {
    iconDefinition: e,
    params: t
  }), qe.autoA11y && (i ? c["aria-labelledby"] = "".concat(qe.replacementClass, "-title-").concat(s || Th()) : (c["aria-hidden"] = "true", c.focusable = "false")), YC({
    icons: {
      main: d4(v),
      mask: o ? d4(o.icon) : {
        found: !1,
        width: null,
        height: null,
        icon: {}
      }
    },
    prefix: f,
    iconName: p,
    transform: we(we({}, ka), r),
    symbol: n,
    title: i,
    maskId: a,
    titleId: s,
    extra: {
      attributes: c,
      styles: u,
      classes: l
    }
  })));
};
var iAe = {
  mixout() {
    return {
      icon: oAe(aAe)
    };
  },
  hooks() {
    return {
      mutationObserverCallbacks(e) {
        return e.treeCallback = LM, e.nodeCallback = nAe, e;
      }
    };
  },
  provides(e) {
    e.i2svg = function(t) {
      const {
        node: r = Yr,
        callback: n = () => {
        }
      } = t;
      return LM(r, n);
    }, e.generateSvgReplacementMutation = function(t, r) {
      const {
        iconName: n,
        title: o,
        titleId: a,
        prefix: i,
        transform: s,
        symbol: l,
        mask: c,
        maskId: u,
        extra: f
      } = r;
      return new Promise((p, v) => {
        Promise.all([p4(n, i), c.iconName ? p4(c.iconName, c.prefix) : Promise.resolve({
          found: !1,
          width: 512,
          height: 512,
          icon: {}
        })]).then((x) => {
          let [b, m] = x;
          p([t, YC({
            icons: {
              main: b,
              mask: m
            },
            prefix: i,
            iconName: n,
            transform: s,
            symbol: l,
            maskId: u,
            title: o,
            titleId: a,
            extra: f,
            watchable: !0
          })]);
        }).catch(v);
      });
    }, e.generateAbstractIcon = function(t) {
      let {
        children: r,
        attributes: n,
        main: o,
        transform: a,
        styles: i
      } = t;
      const s = q0(i);
      s.length > 0 && (n.style = s);
      let l;
      return VC(a) && (l = pc("generateAbstractTransformGrouping", {
        main: o,
        transform: a,
        containerWidth: o.width,
        iconWidth: o.width
      })), r.push(l || o.icon), {
        children: r,
        attributes: n
      };
    };
  }
}, sAe = {
  mixout() {
    return {
      layer(e) {
        let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        const {
          classes: r = []
        } = t;
        return K0({
          type: "layer"
        }, () => {
          $u("beforeDOMElementCreation", {
            assembler: e,
            params: t
          });
          let n = [];
          return e((o) => {
            Array.isArray(o) ? o.map((a) => {
              n = n.concat(a.abstract);
            }) : n = n.concat(o.abstract);
          }), [{
            tag: "span",
            attributes: {
              class: ["".concat(qe.cssPrefix, "-layers"), ...r].join(" ")
            },
            children: n
          }];
        });
      }
    };
  }
}, lAe = {
  mixout() {
    return {
      counter(e) {
        let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        const {
          title: r = null,
          classes: n = [],
          attributes: o = {},
          styles: a = {}
        } = t;
        return K0({
          type: "counter",
          content: e
        }, () => ($u("beforeDOMElementCreation", {
          content: e,
          params: t
        }), L6e({
          content: e.toString(),
          title: r,
          extra: {
            attributes: o,
            styles: a,
            classes: ["".concat(qe.cssPrefix, "-layers-counter"), ...n]
          }
        })));
      }
    };
  }
}, cAe = {
  mixout() {
    return {
      text(e) {
        let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        const {
          transform: r = ka,
          title: n = null,
          classes: o = [],
          attributes: a = {},
          styles: i = {}
        } = t;
        return K0({
          type: "text",
          content: e
        }, () => ($u("beforeDOMElementCreation", {
          content: e,
          params: t
        }), TM({
          content: e,
          transform: we(we({}, ka), r),
          title: n,
          extra: {
            attributes: a,
            styles: i,
            classes: ["".concat(qe.cssPrefix, "-layers-text"), ...o]
          }
        })));
      }
    };
  },
  provides(e) {
    e.generateLayersText = function(t, r) {
      const {
        title: n,
        transform: o,
        extra: a
      } = r;
      let i = null, s = null;
      if (dB) {
        const l = parseInt(getComputedStyle(t).fontSize, 10), c = t.getBoundingClientRect();
        i = c.width / l, s = c.height / l;
      }
      return qe.autoA11y && !n && (a.attributes["aria-hidden"] = "true"), Promise.resolve([t, TM({
        content: t.innerHTML,
        width: i,
        height: s,
        transform: o,
        title: n,
        extra: a,
        watchable: !0
      })]);
    };
  }
};
const uAe = new RegExp('"', "ug"), VM = [1105920, 1112319], WM = we(we(we(we({}, {
  FontAwesome: {
    normal: "fas",
    400: "fas"
  }
}), ICe), KCe), UCe), h4 = Object.keys(WM).reduce((e, t) => (e[t.toLowerCase()] = WM[t], e), {}), fAe = Object.keys(h4).reduce((e, t) => {
  const r = h4[t];
  return e[t] = r[900] || [...Object.entries(r)][0][1], e;
}, {});
function dAe(e) {
  const t = e.replace(uAe, ""), r = y6e(t, 0), n = r >= VM[0] && r <= VM[1], o = t.length === 2 ? t[0] === t[1] : !1;
  return {
    value: l4(o ? t[0] : t),
    isSecondary: n || o
  };
}
function pAe(e, t) {
  const r = e.replace(/^['"]|['"]$/g, "").toLowerCase(), n = parseInt(t), o = isNaN(n) ? "normal" : n;
  return (h4[r] || {})[o] || fAe[r];
}
function UM(e, t) {
  const r = "".concat(JCe).concat(t.replace(":", "-"));
  return new Promise((n, o) => {
    if (e.getAttribute(r) !== null)
      return n();
    const i = Kd(e.children).filter((p) => p.getAttribute(o4) === t)[0], s = fc.getComputedStyle(e, t), l = s.getPropertyValue("font-family"), c = l.match(r6e), u = s.getPropertyValue("font-weight"), f = s.getPropertyValue("content");
    if (i && !c)
      return e.removeChild(i), n();
    if (c && f !== "none" && f !== "") {
      const p = s.getPropertyValue("content");
      let v = pAe(l, u);
      const {
        value: x,
        isSecondary: b
      } = dAe(p), m = c[0].startsWith("FontAwesome");
      let w = UC(v, x), $ = w;
      if (m) {
        const E = O6e(x);
        E.iconName && E.prefix && (w = E.iconName, v = E.prefix);
      }
      if (w && !b && (!i || i.getAttribute(zC) !== v || i.getAttribute(FC) !== $)) {
        e.setAttribute(r, $), i && e.removeChild(i);
        const E = eAe(), {
          extra: S
        } = E;
        S.attributes[o4] = t, p4(w, v).then((h) => {
          const U = YC(we(we({}, E), {}, {
            icons: {
              main: h,
              mask: MB()
            },
            prefix: v,
            iconName: $,
            extra: S,
            watchable: !0
          })), G = Yr.createElementNS("http://www.w3.org/2000/svg", "svg");
          t === "::before" ? e.insertBefore(G, e.firstChild) : e.appendChild(G), G.outerHTML = U.map((Q) => mb(Q)).join(`
`), e.removeAttribute(r), n();
        }).catch(o);
      } else
        n();
    } else
      n();
  });
}
function mAe(e) {
  return Promise.all([UM(e, "::before"), UM(e, "::after")]);
}
function gAe(e) {
  return e.parentNode !== document.head && !~ZCe.indexOf(e.tagName.toUpperCase()) && !e.getAttribute(o4) && (!e.parentNode || e.parentNode.tagName !== "svg");
}
function YM(e) {
  if (Hi)
    return new Promise((t, r) => {
      const n = Kd(e.querySelectorAll("*")).filter(gAe).map(mAe), o = HC.begin("searchPseudoElements");
      LB(), Promise.all(n).then(() => {
        o(), g4(), t();
      }).catch(() => {
        o(), g4(), r();
      });
    });
}
var hAe = {
  hooks() {
    return {
      mutationObserverCallbacks(e) {
        return e.pseudoElementsCallback = YM, e;
      }
    };
  },
  provides(e) {
    e.pseudoElements2svg = function(t) {
      const {
        node: r = Yr
      } = t;
      qe.searchPseudoElements && YM(r);
    };
  }
};
let HM = !1;
var bAe = {
  mixout() {
    return {
      dom: {
        unwatch() {
          LB(), HM = !0;
        }
      }
    };
  },
  hooks() {
    return {
      bootstrap() {
        FM(u4("mutationObserverCallbacks", {}));
      },
      noAuto() {
        K6e();
      },
      watch(e) {
        const {
          observeMutationsRoot: t
        } = e;
        HM ? g4() : FM(u4("mutationObserverCallbacks", {
          observeMutationsRoot: t
        }));
      }
    };
  }
};
const GM = (e) => {
  let t = {
    size: 16,
    x: 0,
    y: 0,
    flipX: !1,
    flipY: !1,
    rotate: 0
  };
  return e.toLowerCase().split(" ").reduce((r, n) => {
    const o = n.toLowerCase().split("-"), a = o[0];
    let i = o.slice(1).join("-");
    if (a && i === "h")
      return r.flipX = !0, r;
    if (a && i === "v")
      return r.flipY = !0, r;
    if (i = parseFloat(i), isNaN(i))
      return r;
    switch (a) {
      case "grow":
        r.size = r.size + i;
        break;
      case "shrink":
        r.size = r.size - i;
        break;
      case "left":
        r.x = r.x - i;
        break;
      case "right":
        r.x = r.x + i;
        break;
      case "up":
        r.y = r.y - i;
        break;
      case "down":
        r.y = r.y + i;
        break;
      case "rotate":
        r.rotate = r.rotate + i;
        break;
    }
    return r;
  }, t);
};
var yAe = {
  mixout() {
    return {
      parse: {
        transform: (e) => GM(e)
      }
    };
  },
  hooks() {
    return {
      parseNodeAttributes(e, t) {
        const r = t.getAttribute("data-fa-transform");
        return r && (e.transform = GM(r)), e;
      }
    };
  },
  provides(e) {
    e.generateAbstractTransformGrouping = function(t) {
      let {
        main: r,
        transform: n,
        containerWidth: o,
        iconWidth: a
      } = t;
      const i = {
        transform: "translate(".concat(o / 2, " 256)")
      }, s = "translate(".concat(n.x * 32, ", ").concat(n.y * 32, ") "), l = "scale(".concat(n.size / 16 * (n.flipX ? -1 : 1), ", ").concat(n.size / 16 * (n.flipY ? -1 : 1), ") "), c = "rotate(".concat(n.rotate, " 0 0)"), u = {
        transform: "".concat(s, " ").concat(l, " ").concat(c)
      }, f = {
        transform: "translate(".concat(a / 2 * -1, " -256)")
      }, p = {
        outer: i,
        inner: u,
        path: f
      };
      return {
        tag: "g",
        attributes: we({}, p.outer),
        children: [{
          tag: "g",
          attributes: we({}, p.inner),
          children: [{
            tag: r.icon.tag,
            children: r.icon.children,
            attributes: we(we({}, r.icon.attributes), p.path)
          }]
        }]
      };
    };
  }
};
const kk = {
  x: 0,
  y: 0,
  width: "100%",
  height: "100%"
};
function qM(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0;
  return e.attributes && (e.attributes.fill || t) && (e.attributes.fill = "black"), e;
}
function vAe(e) {
  return e.tag === "g" ? e.children : [e];
}
var xAe = {
  hooks() {
    return {
      parseNodeAttributes(e, t) {
        const r = t.getAttribute("data-fa-mask"), n = r ? X0(r.split(" ").map((o) => o.trim())) : MB();
        return n.prefix || (n.prefix = dc()), e.mask = n, e.maskId = t.getAttribute("data-fa-mask-id"), e;
      }
    };
  },
  provides(e) {
    e.generateAbstractMask = function(t) {
      let {
        children: r,
        attributes: n,
        main: o,
        mask: a,
        maskId: i,
        transform: s
      } = t;
      const {
        width: l,
        icon: c
      } = o, {
        width: u,
        icon: f
      } = a, p = d6e({
        transform: s,
        containerWidth: u,
        iconWidth: l
      }), v = {
        tag: "rect",
        attributes: we(we({}, kk), {}, {
          fill: "white"
        })
      }, x = c.children ? {
        children: c.children.map(qM)
      } : {}, b = {
        tag: "g",
        attributes: we({}, p.inner),
        children: [qM(we({
          tag: c.tag,
          attributes: we(we({}, c.attributes), p.path)
        }, x))]
      }, m = {
        tag: "g",
        attributes: we({}, p.outer),
        children: [b]
      }, w = "mask-".concat(i || Th()), $ = "clip-".concat(i || Th()), E = {
        tag: "mask",
        attributes: we(we({}, kk), {}, {
          id: w,
          maskUnits: "userSpaceOnUse",
          maskContentUnits: "userSpaceOnUse"
        }),
        children: [v, m]
      }, S = {
        tag: "defs",
        children: [{
          tag: "clipPath",
          attributes: {
            id: $
          },
          children: vAe(f)
        }, E]
      };
      return r.push(S, {
        tag: "rect",
        attributes: we({
          fill: "currentColor",
          "clip-path": "url(#".concat($, ")"),
          mask: "url(#".concat(w, ")")
        }, kk)
      }), {
        children: r,
        attributes: n
      };
    };
  }
}, wAe = {
  provides(e) {
    let t = !1;
    fc.matchMedia && (t = fc.matchMedia("(prefers-reduced-motion: reduce)").matches), e.missingIconAbstract = function() {
      const r = [], n = {
        fill: "currentColor"
      }, o = {
        attributeType: "XML",
        repeatCount: "indefinite",
        dur: "2s"
      };
      r.push({
        tag: "path",
        attributes: we(we({}, n), {}, {
          d: "M156.5,447.7l-12.6,29.5c-18.7-9.5-35.9-21.2-51.5-34.9l22.7-22.7C127.6,430.5,141.5,440,156.5,447.7z M40.6,272H8.5 c1.4,21.2,5.4,41.7,11.7,61.1L50,321.2C45.1,305.5,41.8,289,40.6,272z M40.6,240c1.4-18.8,5.2-37,11.1-54.1l-29.5-12.6 C14.7,194.3,10,216.7,8.5,240H40.6z M64.3,156.5c7.8-14.9,17.2-28.8,28.1-41.5L69.7,92.3c-13.7,15.6-25.5,32.8-34.9,51.5 L64.3,156.5z M397,419.6c-13.9,12-29.4,22.3-46.1,30.4l11.9,29.8c20.7-9.9,39.8-22.6,56.9-37.6L397,419.6z M115,92.4 c13.9-12,29.4-22.3,46.1-30.4l-11.9-29.8c-20.7,9.9-39.8,22.6-56.8,37.6L115,92.4z M447.7,355.5c-7.8,14.9-17.2,28.8-28.1,41.5 l22.7,22.7c13.7-15.6,25.5-32.9,34.9-51.5L447.7,355.5z M471.4,272c-1.4,18.8-5.2,37-11.1,54.1l29.5,12.6 c7.5-21.1,12.2-43.5,13.6-66.8H471.4z M321.2,462c-15.7,5-32.2,8.2-49.2,9.4v32.1c21.2-1.4,41.7-5.4,61.1-11.7L321.2,462z M240,471.4c-18.8-1.4-37-5.2-54.1-11.1l-12.6,29.5c21.1,7.5,43.5,12.2,66.8,13.6V471.4z M462,190.8c5,15.7,8.2,32.2,9.4,49.2h32.1 c-1.4-21.2-5.4-41.7-11.7-61.1L462,190.8z M92.4,397c-12-13.9-22.3-29.4-30.4-46.1l-29.8,11.9c9.9,20.7,22.6,39.8,37.6,56.9 L92.4,397z M272,40.6c18.8,1.4,36.9,5.2,54.1,11.1l12.6-29.5C317.7,14.7,295.3,10,272,8.5V40.6z M190.8,50 c15.7-5,32.2-8.2,49.2-9.4V8.5c-21.2,1.4-41.7,5.4-61.1,11.7L190.8,50z M442.3,92.3L419.6,115c12,13.9,22.3,29.4,30.5,46.1 l29.8-11.9C470,128.5,457.3,109.4,442.3,92.3z M397,92.4l22.7-22.7c-15.6-13.7-32.8-25.5-51.5-34.9l-12.6,29.5 C370.4,72.1,384.4,81.5,397,92.4z"
        })
      });
      const a = we(we({}, o), {}, {
        attributeName: "opacity"
      }), i = {
        tag: "circle",
        attributes: we(we({}, n), {}, {
          cx: "256",
          cy: "364",
          r: "28"
        }),
        children: []
      };
      return t || i.children.push({
        tag: "animate",
        attributes: we(we({}, o), {}, {
          attributeName: "r",
          values: "28;14;28;28;14;28;"
        })
      }, {
        tag: "animate",
        attributes: we(we({}, a), {}, {
          values: "1;0;1;1;0;1;"
        })
      }), r.push(i), r.push({
        tag: "path",
        attributes: we(we({}, n), {}, {
          opacity: "1",
          d: "M263.7,312h-16c-6.6,0-12-5.4-12-12c0-71,77.4-63.9,77.4-107.8c0-20-17.8-40.2-57.4-40.2c-29.1,0-44.3,9.6-59.2,28.7 c-3.9,5-11.1,6-16.2,2.4l-13.1-9.2c-5.6-3.9-6.9-11.8-2.6-17.2c21.2-27.2,46.4-44.7,91.2-44.7c52.3,0,97.4,29.8,97.4,80.2 c0,67.6-77.4,63.5-77.4,107.8C275.7,306.6,270.3,312,263.7,312z"
        }),
        children: t ? [] : [{
          tag: "animate",
          attributes: we(we({}, a), {}, {
            values: "1;0;0;0;0;1;"
          })
        }]
      }), t || r.push({
        tag: "path",
        attributes: we(we({}, n), {}, {
          opacity: "0",
          d: "M232.5,134.5l7,168c0.3,6.4,5.6,11.5,12,11.5h9c6.4,0,11.7-5.1,12-11.5l7-168c0.3-6.8-5.2-12.5-12-12.5h-23 C237.7,122,232.2,127.7,232.5,134.5z"
        }),
        children: [{
          tag: "animate",
          attributes: we(we({}, a), {}, {
            values: "0;0;1;1;0;0;"
          })
        }]
      }), {
        tag: "g",
        attributes: {
          class: "missing"
        },
        children: r
      };
    };
  }
}, kAe = {
  hooks() {
    return {
      parseNodeAttributes(e, t) {
        const r = t.getAttribute("data-fa-symbol"), n = r === null ? !1 : r === "" ? !0 : r;
        return e.symbol = n, e;
      }
    };
  }
}, $Ae = [g6e, iAe, sAe, lAe, cAe, hAe, bAe, yAe, xAe, wAe, kAe];
I6e($Ae, {
  mixoutsTo: no
});
no.noAuto;
no.config;
no.library;
no.dom;
const b4 = no.parse;
no.findIconDefinition;
no.toHtml;
const OAe = no.icon;
no.layer;
no.text;
no.counter;
function EAe(e) {
  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e;
}
var wy = { exports: {} }, ky = { exports: {} }, er = {};
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var BM;
function SAe() {
  if (BM) return er;
  BM = 1;
  var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, r = e ? Symbol.for("react.portal") : 60106, n = e ? Symbol.for("react.fragment") : 60107, o = e ? Symbol.for("react.strict_mode") : 60108, a = e ? Symbol.for("react.profiler") : 60114, i = e ? Symbol.for("react.provider") : 60109, s = e ? Symbol.for("react.context") : 60110, l = e ? Symbol.for("react.async_mode") : 60111, c = e ? Symbol.for("react.concurrent_mode") : 60111, u = e ? Symbol.for("react.forward_ref") : 60112, f = e ? Symbol.for("react.suspense") : 60113, p = e ? Symbol.for("react.suspense_list") : 60120, v = e ? Symbol.for("react.memo") : 60115, x = e ? Symbol.for("react.lazy") : 60116, b = e ? Symbol.for("react.block") : 60121, m = e ? Symbol.for("react.fundamental") : 60117, w = e ? Symbol.for("react.responder") : 60118, $ = e ? Symbol.for("react.scope") : 60119;
  function E(h) {
    if (typeof h == "object" && h !== null) {
      var U = h.$$typeof;
      switch (U) {
        case t:
          switch (h = h.type, h) {
            case l:
            case c:
            case n:
            case a:
            case o:
            case f:
              return h;
            default:
              switch (h = h && h.$$typeof, h) {
                case s:
                case u:
                case x:
                case v:
                case i:
                  return h;
                default:
                  return U;
              }
          }
        case r:
          return U;
      }
    }
  }
  function S(h) {
    return E(h) === c;
  }
  return er.AsyncMode = l, er.ConcurrentMode = c, er.ContextConsumer = s, er.ContextProvider = i, er.Element = t, er.ForwardRef = u, er.Fragment = n, er.Lazy = x, er.Memo = v, er.Portal = r, er.Profiler = a, er.StrictMode = o, er.Suspense = f, er.isAsyncMode = function(h) {
    return S(h) || E(h) === l;
  }, er.isConcurrentMode = S, er.isContextConsumer = function(h) {
    return E(h) === s;
  }, er.isContextProvider = function(h) {
    return E(h) === i;
  }, er.isElement = function(h) {
    return typeof h == "object" && h !== null && h.$$typeof === t;
  }, er.isForwardRef = function(h) {
    return E(h) === u;
  }, er.isFragment = function(h) {
    return E(h) === n;
  }, er.isLazy = function(h) {
    return E(h) === x;
  }, er.isMemo = function(h) {
    return E(h) === v;
  }, er.isPortal = function(h) {
    return E(h) === r;
  }, er.isProfiler = function(h) {
    return E(h) === a;
  }, er.isStrictMode = function(h) {
    return E(h) === o;
  }, er.isSuspense = function(h) {
    return E(h) === f;
  }, er.isValidElementType = function(h) {
    return typeof h == "string" || typeof h == "function" || h === n || h === c || h === a || h === o || h === f || h === p || typeof h == "object" && h !== null && (h.$$typeof === x || h.$$typeof === v || h.$$typeof === i || h.$$typeof === s || h.$$typeof === u || h.$$typeof === m || h.$$typeof === w || h.$$typeof === $ || h.$$typeof === b);
  }, er.typeOf = E, er;
}
var tr = {};
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var XM;
function PAe() {
  return XM || (XM = 1, process.env.NODE_ENV !== "production" && function() {
    var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, r = e ? Symbol.for("react.portal") : 60106, n = e ? Symbol.for("react.fragment") : 60107, o = e ? Symbol.for("react.strict_mode") : 60108, a = e ? Symbol.for("react.profiler") : 60114, i = e ? Symbol.for("react.provider") : 60109, s = e ? Symbol.for("react.context") : 60110, l = e ? Symbol.for("react.async_mode") : 60111, c = e ? Symbol.for("react.concurrent_mode") : 60111, u = e ? Symbol.for("react.forward_ref") : 60112, f = e ? Symbol.for("react.suspense") : 60113, p = e ? Symbol.for("react.suspense_list") : 60120, v = e ? Symbol.for("react.memo") : 60115, x = e ? Symbol.for("react.lazy") : 60116, b = e ? Symbol.for("react.block") : 60121, m = e ? Symbol.for("react.fundamental") : 60117, w = e ? Symbol.for("react.responder") : 60118, $ = e ? Symbol.for("react.scope") : 60119;
    function E(k) {
      return typeof k == "string" || typeof k == "function" || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
      k === n || k === c || k === a || k === o || k === f || k === p || typeof k == "object" && k !== null && (k.$$typeof === x || k.$$typeof === v || k.$$typeof === i || k.$$typeof === s || k.$$typeof === u || k.$$typeof === m || k.$$typeof === w || k.$$typeof === $ || k.$$typeof === b);
    }
    function S(k) {
      if (typeof k == "object" && k !== null) {
        var oe = k.$$typeof;
        switch (oe) {
          case t:
            var Ce = k.type;
            switch (Ce) {
              case l:
              case c:
              case n:
              case a:
              case o:
              case f:
                return Ce;
              default:
                var Ze = Ce && Ce.$$typeof;
                switch (Ze) {
                  case s:
                  case u:
                  case x:
                  case v:
                  case i:
                    return Ze;
                  default:
                    return oe;
                }
            }
          case r:
            return oe;
        }
      }
    }
    var h = l, U = c, G = s, Q = i, Z = t, X = u, J = n, I = x, te = v, V = r, D = a, F = o, R = f, H = !1;
    function B(k) {
      return H || (H = !0, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.")), g(k) || S(k) === l;
    }
    function g(k) {
      return S(k) === c;
    }
    function d(k) {
      return S(k) === s;
    }
    function O(k) {
      return S(k) === i;
    }
    function C(k) {
      return typeof k == "object" && k !== null && k.$$typeof === t;
    }
    function A(k) {
      return S(k) === u;
    }
    function N(k) {
      return S(k) === n;
    }
    function j(k) {
      return S(k) === x;
    }
    function _(k) {
      return S(k) === v;
    }
    function T(k) {
      return S(k) === r;
    }
    function M(k) {
      return S(k) === a;
    }
    function z(k) {
      return S(k) === o;
    }
    function ee(k) {
      return S(k) === f;
    }
    tr.AsyncMode = h, tr.ConcurrentMode = U, tr.ContextConsumer = G, tr.ContextProvider = Q, tr.Element = Z, tr.ForwardRef = X, tr.Fragment = J, tr.Lazy = I, tr.Memo = te, tr.Portal = V, tr.Profiler = D, tr.StrictMode = F, tr.Suspense = R, tr.isAsyncMode = B, tr.isConcurrentMode = g, tr.isContextConsumer = d, tr.isContextProvider = O, tr.isElement = C, tr.isForwardRef = A, tr.isFragment = N, tr.isLazy = j, tr.isMemo = _, tr.isPortal = T, tr.isProfiler = M, tr.isStrictMode = z, tr.isSuspense = ee, tr.isValidElementType = E, tr.typeOf = S;
  }()), tr;
}
var KM;
function WB() {
  return KM || (KM = 1, process.env.NODE_ENV === "production" ? ky.exports = SAe() : ky.exports = PAe()), ky.exports;
}
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
var $k, JM;
function CAe() {
  if (JM) return $k;
  JM = 1;
  var e = Object.getOwnPropertySymbols, t = Object.prototype.hasOwnProperty, r = Object.prototype.propertyIsEnumerable;
  function n(a) {
    if (a == null)
      throw new TypeError("Object.assign cannot be called with null or undefined");
    return Object(a);
  }
  function o() {
    try {
      if (!Object.assign)
        return !1;
      var a = new String("abc");
      if (a[5] = "de", Object.getOwnPropertyNames(a)[0] === "5")
        return !1;
      for (var i = {}, s = 0; s < 10; s++)
        i["_" + String.fromCharCode(s)] = s;
      var l = Object.getOwnPropertyNames(i).map(function(u) {
        return i[u];
      });
      if (l.join("") !== "0123456789")
        return !1;
      var c = {};
      return "abcdefghijklmnopqrst".split("").forEach(function(u) {
        c[u] = u;
      }), Object.keys(Object.assign({}, c)).join("") === "abcdefghijklmnopqrst";
    } catch {
      return !1;
    }
  }
  return $k = o() ? Object.assign : function(a, i) {
    for (var s, l = n(a), c, u = 1; u < arguments.length; u++) {
      s = Object(arguments[u]);
      for (var f in s)
        t.call(s, f) && (l[f] = s[f]);
      if (e) {
        c = e(s);
        for (var p = 0; p < c.length; p++)
          r.call(s, c[p]) && (l[c[p]] = s[c[p]]);
      }
    }
    return l;
  }, $k;
}
var Ok, QM;
function qC() {
  if (QM) return Ok;
  QM = 1;
  var e = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
  return Ok = e, Ok;
}
var Ek, ZM;
function UB() {
  return ZM || (ZM = 1, Ek = Function.call.bind(Object.prototype.hasOwnProperty)), Ek;
}
var Sk, eR;
function AAe() {
  if (eR) return Sk;
  eR = 1;
  var e = function() {
  };
  if (process.env.NODE_ENV !== "production") {
    var t = /* @__PURE__ */ qC(), r = {}, n = /* @__PURE__ */ UB();
    e = function(a) {
      var i = "Warning: " + a;
      typeof console < "u" && console.error(i);
      try {
        throw new Error(i);
      } catch {
      }
    };
  }
  function o(a, i, s, l, c) {
    if (process.env.NODE_ENV !== "production") {
      for (var u in a)
        if (n(a, u)) {
          var f;
          try {
            if (typeof a[u] != "function") {
              var p = Error(
                (l || "React class") + ": " + s + " type `" + u + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof a[u] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`."
              );
              throw p.name = "Invariant Violation", p;
            }
            f = a[u](i, u, l, s, null, t);
          } catch (x) {
            f = x;
          }
          if (f && !(f instanceof Error) && e(
            (l || "React class") + ": type specification of " + s + " `" + u + "` is invalid; the type checker function must return `null` or an `Error` but returned a " + typeof f + ". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument)."
          ), f instanceof Error && !(f.message in r)) {
            r[f.message] = !0;
            var v = c ? c() : "";
            e(
              "Failed " + s + " type: " + f.message + (v ?? "")
            );
          }
        }
    }
  }
  return o.resetWarningCache = function() {
    process.env.NODE_ENV !== "production" && (r = {});
  }, Sk = o, Sk;
}
var Pk, tR;
function _Ae() {
  if (tR) return Pk;
  tR = 1;
  var e = WB(), t = CAe(), r = /* @__PURE__ */ qC(), n = /* @__PURE__ */ UB(), o = /* @__PURE__ */ AAe(), a = function() {
  };
  process.env.NODE_ENV !== "production" && (a = function(s) {
    var l = "Warning: " + s;
    typeof console < "u" && console.error(l);
    try {
      throw new Error(l);
    } catch {
    }
  });
  function i() {
    return null;
  }
  return Pk = function(s, l) {
    var c = typeof Symbol == "function" && Symbol.iterator, u = "@@iterator";
    function f(g) {
      var d = g && (c && g[c] || g[u]);
      if (typeof d == "function")
        return d;
    }
    var p = "<<anonymous>>", v = {
      array: w("array"),
      bigint: w("bigint"),
      bool: w("boolean"),
      func: w("function"),
      number: w("number"),
      object: w("object"),
      string: w("string"),
      symbol: w("symbol"),
      any: $(),
      arrayOf: E,
      element: S(),
      elementType: h(),
      instanceOf: U,
      node: X(),
      objectOf: Q,
      oneOf: G,
      oneOfType: Z,
      shape: I,
      exact: te
    };
    function x(g, d) {
      return g === d ? g !== 0 || 1 / g === 1 / d : g !== g && d !== d;
    }
    function b(g, d) {
      this.message = g, this.data = d && typeof d == "object" ? d : {}, this.stack = "";
    }
    b.prototype = Error.prototype;
    function m(g) {
      if (process.env.NODE_ENV !== "production")
        var d = {}, O = 0;
      function C(N, j, _, T, M, z, ee) {
        if (T = T || p, z = z || _, ee !== r) {
          if (l) {
            var k = new Error(
              "Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types"
            );
            throw k.name = "Invariant Violation", k;
          } else if (process.env.NODE_ENV !== "production" && typeof console < "u") {
            var oe = T + ":" + _;
            !d[oe] && // Avoid spamming the console because they are often not actionable except for lib authors
            O < 3 && (a(
              "You are manually calling a React.PropTypes validation function for the `" + z + "` prop on `" + T + "`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details."
            ), d[oe] = !0, O++);
          }
        }
        return j[_] == null ? N ? j[_] === null ? new b("The " + M + " `" + z + "` is marked as required " + ("in `" + T + "`, but its value is `null`.")) : new b("The " + M + " `" + z + "` is marked as required in " + ("`" + T + "`, but its value is `undefined`.")) : null : g(j, _, T, M, z);
      }
      var A = C.bind(null, !1);
      return A.isRequired = C.bind(null, !0), A;
    }
    function w(g) {
      function d(O, C, A, N, j, _) {
        var T = O[C], M = F(T);
        if (M !== g) {
          var z = R(T);
          return new b(
            "Invalid " + N + " `" + j + "` of type " + ("`" + z + "` supplied to `" + A + "`, expected ") + ("`" + g + "`."),
            { expectedType: g }
          );
        }
        return null;
      }
      return m(d);
    }
    function $() {
      return m(i);
    }
    function E(g) {
      function d(O, C, A, N, j) {
        if (typeof g != "function")
          return new b("Property `" + j + "` of component `" + A + "` has invalid PropType notation inside arrayOf.");
        var _ = O[C];
        if (!Array.isArray(_)) {
          var T = F(_);
          return new b("Invalid " + N + " `" + j + "` of type " + ("`" + T + "` supplied to `" + A + "`, expected an array."));
        }
        for (var M = 0; M < _.length; M++) {
          var z = g(_, M, A, N, j + "[" + M + "]", r);
          if (z instanceof Error)
            return z;
        }
        return null;
      }
      return m(d);
    }
    function S() {
      function g(d, O, C, A, N) {
        var j = d[O];
        if (!s(j)) {
          var _ = F(j);
          return new b("Invalid " + A + " `" + N + "` of type " + ("`" + _ + "` supplied to `" + C + "`, expected a single ReactElement."));
        }
        return null;
      }
      return m(g);
    }
    function h() {
      function g(d, O, C, A, N) {
        var j = d[O];
        if (!e.isValidElementType(j)) {
          var _ = F(j);
          return new b("Invalid " + A + " `" + N + "` of type " + ("`" + _ + "` supplied to `" + C + "`, expected a single ReactElement type."));
        }
        return null;
      }
      return m(g);
    }
    function U(g) {
      function d(O, C, A, N, j) {
        if (!(O[C] instanceof g)) {
          var _ = g.name || p, T = B(O[C]);
          return new b("Invalid " + N + " `" + j + "` of type " + ("`" + T + "` supplied to `" + A + "`, expected ") + ("instance of `" + _ + "`."));
        }
        return null;
      }
      return m(d);
    }
    function G(g) {
      if (!Array.isArray(g))
        return process.env.NODE_ENV !== "production" && (arguments.length > 1 ? a(
          "Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z])."
        ) : a("Invalid argument supplied to oneOf, expected an array.")), i;
      function d(O, C, A, N, j) {
        for (var _ = O[C], T = 0; T < g.length; T++)
          if (x(_, g[T]))
            return null;
        var M = JSON.stringify(g, function(ee, k) {
          var oe = R(k);
          return oe === "symbol" ? String(k) : k;
        });
        return new b("Invalid " + N + " `" + j + "` of value `" + String(_) + "` " + ("supplied to `" + A + "`, expected one of " + M + "."));
      }
      return m(d);
    }
    function Q(g) {
      function d(O, C, A, N, j) {
        if (typeof g != "function")
          return new b("Property `" + j + "` of component `" + A + "` has invalid PropType notation inside objectOf.");
        var _ = O[C], T = F(_);
        if (T !== "object")
          return new b("Invalid " + N + " `" + j + "` of type " + ("`" + T + "` supplied to `" + A + "`, expected an object."));
        for (var M in _)
          if (n(_, M)) {
            var z = g(_, M, A, N, j + "." + M, r);
            if (z instanceof Error)
              return z;
          }
        return null;
      }
      return m(d);
    }
    function Z(g) {
      if (!Array.isArray(g))
        return process.env.NODE_ENV !== "production" && a("Invalid argument supplied to oneOfType, expected an instance of array."), i;
      for (var d = 0; d < g.length; d++) {
        var O = g[d];
        if (typeof O != "function")
          return a(
            "Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + H(O) + " at index " + d + "."
          ), i;
      }
      function C(A, N, j, _, T) {
        for (var M = [], z = 0; z < g.length; z++) {
          var ee = g[z], k = ee(A, N, j, _, T, r);
          if (k == null)
            return null;
          k.data && n(k.data, "expectedType") && M.push(k.data.expectedType);
        }
        var oe = M.length > 0 ? ", expected one of type [" + M.join(", ") + "]" : "";
        return new b("Invalid " + _ + " `" + T + "` supplied to " + ("`" + j + "`" + oe + "."));
      }
      return m(C);
    }
    function X() {
      function g(d, O, C, A, N) {
        return V(d[O]) ? null : new b("Invalid " + A + " `" + N + "` supplied to " + ("`" + C + "`, expected a ReactNode."));
      }
      return m(g);
    }
    function J(g, d, O, C, A) {
      return new b(
        (g || "React class") + ": " + d + " type `" + O + "." + C + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + A + "`."
      );
    }
    function I(g) {
      function d(O, C, A, N, j) {
        var _ = O[C], T = F(_);
        if (T !== "object")
          return new b("Invalid " + N + " `" + j + "` of type `" + T + "` " + ("supplied to `" + A + "`, expected `object`."));
        for (var M in g) {
          var z = g[M];
          if (typeof z != "function")
            return J(A, N, j, M, R(z));
          var ee = z(_, M, A, N, j + "." + M, r);
          if (ee)
            return ee;
        }
        return null;
      }
      return m(d);
    }
    function te(g) {
      function d(O, C, A, N, j) {
        var _ = O[C], T = F(_);
        if (T !== "object")
          return new b("Invalid " + N + " `" + j + "` of type `" + T + "` " + ("supplied to `" + A + "`, expected `object`."));
        var M = t({}, O[C], g);
        for (var z in M) {
          var ee = g[z];
          if (n(g, z) && typeof ee != "function")
            return J(A, N, j, z, R(ee));
          if (!ee)
            return new b(
              "Invalid " + N + " `" + j + "` key `" + z + "` supplied to `" + A + "`.\nBad object: " + JSON.stringify(O[C], null, "  ") + `
Valid keys: ` + JSON.stringify(Object.keys(g), null, "  ")
            );
          var k = ee(_, z, A, N, j + "." + z, r);
          if (k)
            return k;
        }
        return null;
      }
      return m(d);
    }
    function V(g) {
      switch (typeof g) {
        case "number":
        case "string":
        case "undefined":
          return !0;
        case "boolean":
          return !g;
        case "object":
          if (Array.isArray(g))
            return g.every(V);
          if (g === null || s(g))
            return !0;
          var d = f(g);
          if (d) {
            var O = d.call(g), C;
            if (d !== g.entries) {
              for (; !(C = O.next()).done; )
                if (!V(C.value))
                  return !1;
            } else
              for (; !(C = O.next()).done; ) {
                var A = C.value;
                if (A && !V(A[1]))
                  return !1;
              }
          } else
            return !1;
          return !0;
        default:
          return !1;
      }
    }
    function D(g, d) {
      return g === "symbol" ? !0 : d ? d["@@toStringTag"] === "Symbol" || typeof Symbol == "function" && d instanceof Symbol : !1;
    }
    function F(g) {
      var d = typeof g;
      return Array.isArray(g) ? "array" : g instanceof RegExp ? "object" : D(d, g) ? "symbol" : d;
    }
    function R(g) {
      if (typeof g > "u" || g === null)
        return "" + g;
      var d = F(g);
      if (d === "object") {
        if (g instanceof Date)
          return "date";
        if (g instanceof RegExp)
          return "regexp";
      }
      return d;
    }
    function H(g) {
      var d = R(g);
      switch (d) {
        case "array":
        case "object":
          return "an " + d;
        case "boolean":
        case "date":
        case "regexp":
          return "a " + d;
        default:
          return d;
      }
    }
    function B(g) {
      return !g.constructor || !g.constructor.name ? p : g.constructor.name;
    }
    return v.checkPropTypes = o, v.resetWarningCache = o.resetWarningCache, v.PropTypes = v, v;
  }, Pk;
}
var Ck, rR;
function NAe() {
  if (rR) return Ck;
  rR = 1;
  var e = /* @__PURE__ */ qC();
  function t() {
  }
  function r() {
  }
  return r.resetWarningCache = t, Ck = function() {
    function n(i, s, l, c, u, f) {
      if (f !== e) {
        var p = new Error(
          "Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types"
        );
        throw p.name = "Invariant Violation", p;
      }
    }
    n.isRequired = n;
    function o() {
      return n;
    }
    var a = {
      array: n,
      bigint: n,
      bool: n,
      func: n,
      number: n,
      object: n,
      string: n,
      symbol: n,
      any: n,
      arrayOf: o,
      element: n,
      elementType: n,
      instanceOf: o,
      node: n,
      objectOf: o,
      oneOf: o,
      oneOfType: o,
      shape: o,
      exact: o,
      checkPropTypes: r,
      resetWarningCache: t
    };
    return a.PropTypes = a, a;
  }, Ck;
}
var nR;
function jAe() {
  if (nR) return wy.exports;
  if (nR = 1, process.env.NODE_ENV !== "production") {
    var e = WB(), t = !0;
    wy.exports = /* @__PURE__ */ _Ae()(e.isElement, t);
  } else
    wy.exports = /* @__PURE__ */ NAe()();
  return wy.exports;
}
var IAe = /* @__PURE__ */ jAe();
const zt = /* @__PURE__ */ EAe(IAe);
function oR(e, t) {
  var r = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var n = Object.getOwnPropertySymbols(e);
    t && (n = n.filter(function(o) {
      return Object.getOwnPropertyDescriptor(e, o).enumerable;
    })), r.push.apply(r, n);
  }
  return r;
}
function ea(e) {
  for (var t = 1; t < arguments.length; t++) {
    var r = arguments[t] != null ? arguments[t] : {};
    t % 2 ? oR(Object(r), !0).forEach(function(n) {
      yf(e, n, r[n]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : oR(Object(r)).forEach(function(n) {
      Object.defineProperty(e, n, Object.getOwnPropertyDescriptor(r, n));
    });
  }
  return e;
}
function d1(e) {
  "@babel/helpers - typeof";
  return d1 = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t) {
    return typeof t;
  } : function(t) {
    return t && typeof Symbol == "function" && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
  }, d1(e);
}
function yf(e, t, r) {
  return t in e ? Object.defineProperty(e, t, {
    value: r,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : e[t] = r, e;
}
function TAe(e, t) {
  if (e == null) return {};
  var r = {}, n = Object.keys(e), o, a;
  for (a = 0; a < n.length; a++)
    o = n[a], !(t.indexOf(o) >= 0) && (r[o] = e[o]);
  return r;
}
function MAe(e, t) {
  if (e == null) return {};
  var r = TAe(e, t), n, o;
  if (Object.getOwnPropertySymbols) {
    var a = Object.getOwnPropertySymbols(e);
    for (o = 0; o < a.length; o++)
      n = a[o], !(t.indexOf(n) >= 0) && Object.prototype.propertyIsEnumerable.call(e, n) && (r[n] = e[n]);
  }
  return r;
}
function y4(e) {
  return RAe(e) || zAe(e) || FAe(e) || DAe();
}
function RAe(e) {
  if (Array.isArray(e)) return v4(e);
}
function zAe(e) {
  if (typeof Symbol < "u" && e[Symbol.iterator] != null || e["@@iterator"] != null) return Array.from(e);
}
function FAe(e, t) {
  if (e) {
    if (typeof e == "string") return v4(e, t);
    var r = Object.prototype.toString.call(e).slice(8, -1);
    if (r === "Object" && e.constructor && (r = e.constructor.name), r === "Map" || r === "Set") return Array.from(e);
    if (r === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return v4(e, t);
  }
}
function v4(e, t) {
  (t == null || t > e.length) && (t = e.length);
  for (var r = 0, n = new Array(t); r < t; r++) n[r] = e[r];
  return n;
}
function DAe() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function LAe(e) {
  var t, r = e.beat, n = e.fade, o = e.beatFade, a = e.bounce, i = e.shake, s = e.flash, l = e.spin, c = e.spinPulse, u = e.spinReverse, f = e.pulse, p = e.fixedWidth, v = e.inverse, x = e.border, b = e.listItem, m = e.flip, w = e.size, $ = e.rotation, E = e.pull, S = (t = {
    "fa-beat": r,
    "fa-fade": n,
    "fa-beat-fade": o,
    "fa-bounce": a,
    "fa-shake": i,
    "fa-flash": s,
    "fa-spin": l,
    "fa-spin-reverse": u,
    "fa-spin-pulse": c,
    "fa-pulse": f,
    "fa-fw": p,
    "fa-inverse": v,
    "fa-border": x,
    "fa-li": b,
    "fa-flip": m === !0,
    "fa-flip-horizontal": m === "horizontal" || m === "both",
    "fa-flip-vertical": m === "vertical" || m === "both"
  }, yf(t, "fa-".concat(w), typeof w < "u" && w !== null), yf(t, "fa-rotate-".concat($), typeof $ < "u" && $ !== null && $ !== 0), yf(t, "fa-pull-".concat(E), typeof E < "u" && E !== null), yf(t, "fa-swap-opacity", e.swapOpacity), t);
  return Object.keys(S).map(function(h) {
    return S[h] ? h : null;
  }).filter(function(h) {
    return h;
  });
}
function VAe(e) {
  return e = e - 0, e === e;
}
function YB(e) {
  return VAe(e) ? e : (e = e.replace(/[\-_\s]+(.)?/g, function(t, r) {
    return r ? r.toUpperCase() : "";
  }), e.substr(0, 1).toLowerCase() + e.substr(1));
}
var WAe = ["style"];
function UAe(e) {
  return e.charAt(0).toUpperCase() + e.slice(1);
}
function YAe(e) {
  return e.split(";").map(function(t) {
    return t.trim();
  }).filter(function(t) {
    return t;
  }).reduce(function(t, r) {
    var n = r.indexOf(":"), o = YB(r.slice(0, n)), a = r.slice(n + 1).trim();
    return o.startsWith("webkit") ? t[UAe(o)] = a : t[o] = a, t;
  }, {});
}
function HB(e, t) {
  var r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
  if (typeof t == "string")
    return t;
  var n = (t.children || []).map(function(l) {
    return HB(e, l);
  }), o = Object.keys(t.attributes || {}).reduce(function(l, c) {
    var u = t.attributes[c];
    switch (c) {
      case "class":
        l.attrs.className = u, delete t.attributes.class;
        break;
      case "style":
        l.attrs.style = YAe(u);
        break;
      default:
        c.indexOf("aria-") === 0 || c.indexOf("data-") === 0 ? l.attrs[c.toLowerCase()] = u : l.attrs[YB(c)] = u;
    }
    return l;
  }, {
    attrs: {}
  }), a = r.style, i = a === void 0 ? {} : a, s = MAe(r, WAe);
  return o.attrs.style = ea(ea({}, o.attrs.style), i), e.apply(void 0, [t.tag, ea(ea({}, o.attrs), s)].concat(y4(n)));
}
var GB = !1;
try {
  GB = process.env.NODE_ENV === "production";
} catch {
}
function HAe() {
  if (!GB && console && typeof console.error == "function") {
    var e;
    (e = console).error.apply(e, arguments);
  }
}
function aR(e) {
  if (e && d1(e) === "object" && e.prefix && e.iconName && e.icon)
    return e;
  if (b4.icon)
    return b4.icon(e);
  if (e === null)
    return null;
  if (e && d1(e) === "object" && e.prefix && e.iconName)
    return e;
  if (Array.isArray(e) && e.length === 2)
    return {
      prefix: e[0],
      iconName: e[1]
    };
  if (typeof e == "string")
    return {
      prefix: "fas",
      iconName: e
    };
}
function Ak(e, t) {
  return Array.isArray(t) && t.length > 0 || !Array.isArray(t) && t ? yf({}, e, t) : {};
}
var iR = {
  border: !1,
  className: "",
  mask: null,
  maskId: null,
  fixedWidth: !1,
  inverse: !1,
  flip: !1,
  icon: null,
  listItem: !1,
  pull: null,
  pulse: !1,
  rotation: null,
  size: null,
  spin: !1,
  spinPulse: !1,
  spinReverse: !1,
  beat: !1,
  fade: !1,
  beatFade: !1,
  bounce: !1,
  shake: !1,
  symbol: !1,
  title: "",
  titleId: null,
  transform: null,
  swapOpacity: !1
}, po = /* @__PURE__ */ ce.forwardRef(function(e, t) {
  var r = ea(ea({}, iR), e), n = r.icon, o = r.mask, a = r.symbol, i = r.className, s = r.title, l = r.titleId, c = r.maskId, u = aR(n), f = Ak("classes", [].concat(y4(LAe(r)), y4((i || "").split(" ")))), p = Ak("transform", typeof r.transform == "string" ? b4.transform(r.transform) : r.transform), v = Ak("mask", aR(o)), x = OAe(u, ea(ea(ea(ea({}, f), p), v), {}, {
    symbol: a,
    title: s,
    titleId: l,
    maskId: c
  }));
  if (!x)
    return HAe("Could not find icon", u), null;
  var b = x.abstract, m = {
    ref: t
  };
  return Object.keys(r).forEach(function(w) {
    iR.hasOwnProperty(w) || (m[w] = r[w]);
  }), GAe(b[0], m);
});
po.displayName = "FontAwesomeIcon";
po.propTypes = {
  beat: zt.bool,
  border: zt.bool,
  beatFade: zt.bool,
  bounce: zt.bool,
  className: zt.string,
  fade: zt.bool,
  flash: zt.bool,
  mask: zt.oneOfType([zt.object, zt.array, zt.string]),
  maskId: zt.string,
  fixedWidth: zt.bool,
  inverse: zt.bool,
  flip: zt.oneOf([!0, !1, "horizontal", "vertical", "both"]),
  icon: zt.oneOfType([zt.object, zt.array, zt.string]),
  listItem: zt.bool,
  pull: zt.oneOf(["right", "left"]),
  pulse: zt.bool,
  rotation: zt.oneOf([0, 90, 180, 270]),
  shake: zt.bool,
  size: zt.oneOf(["2xs", "xs", "sm", "lg", "xl", "2xl", "1x", "2x", "3x", "4x", "5x", "6x", "7x", "8x", "9x", "10x"]),
  spin: zt.bool,
  spinPulse: zt.bool,
  spinReverse: zt.bool,
  symbol: zt.oneOfType([zt.bool, zt.string]),
  title: zt.string,
  titleId: zt.string,
  transform: zt.oneOfType([zt.string, zt.object]),
  swapOpacity: zt.bool
};
var GAe = HB.bind(null, ce.createElement);
/*!
 * Font Awesome Pro 6.7.2 by @fontawesome - https://fontawesome.com
 * License - https://fontawesome.com/license (Commercial License)
 * Copyright 2024 Fonticons, Inc.
 */
const qAe = {
  prefix: "fas",
  iconName: "compress",
  icon: [448, 512, [], "f066", "M160 64c0-17.7-14.3-32-32-32s-32 14.3-32 32l0 64-64 0c-17.7 0-32 14.3-32 32s14.3 32 32 32l96 0c17.7 0 32-14.3 32-32l0-96zM32 320c-17.7 0-32 14.3-32 32s14.3 32 32 32l64 0 0 64c0 17.7 14.3 32 32 32s32-14.3 32-32l0-96c0-17.7-14.3-32-32-32l-96 0zM352 64c0-17.7-14.3-32-32-32s-32 14.3-32 32l0 96c0 17.7 14.3 32 32 32l96 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-64 0 0-64zM320 320c-17.7 0-32 14.3-32 32l0 96c0 17.7 14.3 32 32 32s32-14.3 32-32l0-64 64 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-96 0z"]
}, BAe = {
  prefix: "fas",
  iconName: "image",
  icon: [512, 512, [], "f03e", "M0 96C0 60.7 28.7 32 64 32l384 0c35.3 0 64 28.7 64 64l0 320c0 35.3-28.7 64-64 64L64 480c-35.3 0-64-28.7-64-64L0 96zM323.8 202.5c-4.5-6.6-11.9-10.5-19.8-10.5s-15.4 3.9-19.8 10.5l-87 127.6L170.7 297c-4.6-5.7-11.5-9-18.7-9s-14.2 3.3-18.7 9l-64 80c-5.8 7.2-6.9 17.1-2.9 25.4s12.4 13.6 21.6 13.6l96 0 32 0 208 0c8.9 0 17.1-4.9 21.2-12.8s3.6-17.4-1.4-24.7l-120-176zM112 192a48 48 0 1 0 0-96 48 48 0 1 0 0 96z"]
}, XAe = {
  prefix: "fas",
  iconName: "arrows-rotate",
  icon: [512, 512, [128472, "refresh", "sync"], "f021", "M105.1 202.6c7.7-21.8 20.2-42.3 37.8-59.8c62.5-62.5 163.8-62.5 226.3 0L386.3 160 352 160c-17.7 0-32 14.3-32 32s14.3 32 32 32l111.5 0c0 0 0 0 0 0l.4 0c17.7 0 32-14.3 32-32l0-112c0-17.7-14.3-32-32-32s-32 14.3-32 32l0 35.2L414.4 97.6c-87.5-87.5-229.3-87.5-316.8 0C73.2 122 55.6 150.7 44.8 181.4c-5.9 16.7 2.9 34.9 19.5 40.8s34.9-2.9 40.8-19.5zM39 289.3c-5 1.5-9.8 4.2-13.7 8.2c-4 4-6.7 8.8-8.1 14c-.3 1.2-.6 2.5-.8 3.8c-.3 1.7-.4 3.4-.4 5.1L16 432c0 17.7 14.3 32 32 32s32-14.3 32-32l0-35.1 17.6 17.5c0 0 0 0 0 0c87.5 87.4 229.3 87.4 316.7 0c24.4-24.4 42.1-53.1 52.9-83.8c5.9-16.7-2.9-34.9-19.5-40.8s-34.9 2.9-40.8 19.5c-7.7 21.8-20.2 42.3-37.8 59.8c-62.5 62.5-163.8 62.5-226.3 0l-.1-.1L125.6 352l34.4 0c17.7 0 32-14.3 32-32s-14.3-32-32-32L48.4 288c-1.6 0-3.2 .1-4.8 .3s-3.1 .5-4.6 1z"]
}, KAe = {
  prefix: "fas",
  iconName: "filter",
  icon: [512, 512, [], "f0b0", "M3.9 54.9C10.5 40.9 24.5 32 40 32l432 0c15.5 0 29.5 8.9 36.1 22.9s4.6 30.5-5.2 42.5L320 320.9 320 448c0 12.1-6.8 23.2-17.7 28.6s-23.8 4.3-33.5-3l-64-48c-8.1-6-12.8-15.5-12.8-25.6l0-79.1L9 97.3C-.7 85.4-2.8 68.8 3.9 54.9z"]
}, JAe = {
  prefix: "fas",
  iconName: "cube",
  icon: [512, 512, [], "f1b2", "M234.5 5.7c13.9-5 29.1-5 43.1 0l192 68.6C495 83.4 512 107.5 512 134.6l0 242.9c0 27-17 51.2-42.5 60.3l-192 68.6c-13.9 5-29.1 5-43.1 0l-192-68.6C17 428.6 0 404.5 0 377.4L0 134.6c0-27 17-51.2 42.5-60.3l192-68.6zM256 66L82.3 128 256 190l173.7-62L256 66zm32 368.6l160-57.1 0-188L288 246.6l0 188z"]
}, QAe = {
  prefix: "fas",
  iconName: "upload",
  icon: [512, 512, [], "f093", "M288 109.3L288 352c0 17.7-14.3 32-32 32s-32-14.3-32-32l0-242.7-73.4 73.4c-12.5 12.5-32.8 12.5-45.3 0s-12.5-32.8 0-45.3l128-128c12.5-12.5 32.8-12.5 45.3 0l128 128c12.5 12.5 12.5 32.8 0 45.3s-32.8 12.5-45.3 0L288 109.3zM64 352l128 0c0 35.3 28.7 64 64 64s64-28.7 64-64l128 0c35.3 0 64 28.7 64 64l0 32c0 35.3-28.7 64-64 64L64 512c-35.3 0-64-28.7-64-64l0-32c0-35.3 28.7-64 64-64zM432 456a24 24 0 1 0 0-48 24 24 0 1 0 0 48z"]
}, ZAe = {
  prefix: "fas",
  iconName: "expand",
  icon: [448, 512, [], "f065", "M32 32C14.3 32 0 46.3 0 64l0 96c0 17.7 14.3 32 32 32s32-14.3 32-32l0-64 64 0c17.7 0 32-14.3 32-32s-14.3-32-32-32L32 32zM64 352c0-17.7-14.3-32-32-32s-32 14.3-32 32l0 96c0 17.7 14.3 32 32 32l96 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-64 0 0-64zM320 32c-17.7 0-32 14.3-32 32s14.3 32 32 32l64 0 0 64c0 17.7 14.3 32 32 32s32-14.3 32-32l0-96c0-17.7-14.3-32-32-32l-96 0zM448 352c0-17.7-14.3-32-32-32s-32 14.3-32 32l0 64-64 0c-17.7 0-32 14.3-32 32s14.3 32 32 32l96 0c17.7 0 32-14.3 32-32l0-96z"]
}, e_e = {
  prefix: "fas",
  iconName: "border-all",
  icon: [448, 512, [], "f84c", "M384 96l0 128-128 0 0-128 128 0zm0 192l0 128-128 0 0-128 128 0zM192 224L64 224 64 96l128 0 0 128zM64 288l128 0 0 128L64 416l0-128zM64 32C28.7 32 0 60.7 0 96L0 416c0 35.3 28.7 64 64 64l320 0c35.3 0 64-28.7 64-64l0-320c0-35.3-28.7-64-64-64L64 32z"]
}, sR = {
  prefix: "fas",
  iconName: "check",
  icon: [448, 512, [10003, 10004], "f00c", "M438.6 105.4c12.5 12.5 12.5 32.8 0 45.3l-256 256c-12.5 12.5-32.8 12.5-45.3 0l-128-128c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0L160 338.7 393.4 105.4c12.5-12.5 32.8-12.5 45.3 0z"]
}, t_e = {
  prefix: "fas",
  iconName: "video",
  icon: [576, 512, ["video-camera"], "f03d", "M0 128C0 92.7 28.7 64 64 64l256 0c35.3 0 64 28.7 64 64l0 256c0 35.3-28.7 64-64 64L64 448c-35.3 0-64-28.7-64-64L0 128zM559.1 99.8c10.4 5.6 16.9 16.4 16.9 28.2l0 256c0 11.8-6.5 22.6-16.9 28.2s-23 5-32.9-1.6l-96-64L416 337.1l0-17.1 0-128 0-17.1 14.2-9.5 96-64c9.8-6.5 22.4-7.2 32.9-1.6z"]
};
var r_e = Symbol.for("preact-signals");
function BC() {
  if (Qf > 1)
    Qf--;
  else {
    for (var e, t = !1; Dg !== void 0; ) {
      var r = Dg;
      for (Dg = void 0, x4++; r !== void 0; ) {
        var n = r.o;
        if (r.o = void 0, r.f &= -3, !(8 & r.f) && BB(r)) try {
          r.c();
        } catch (o) {
          t || (e = o, t = !0);
        }
        r = n;
      }
    }
    if (x4 = 0, Qf--, t) throw e;
  }
}
var yr = void 0, Dg = void 0, Qf = 0, x4 = 0, p1 = 0;
function qB(e) {
  if (yr !== void 0) {
    var t = e.n;
    if (t === void 0 || t.t !== yr)
      return t = { i: 0, S: e, p: yr.s, n: void 0, t: yr, e: void 0, x: void 0, r: t }, yr.s !== void 0 && (yr.s.n = t), yr.s = t, e.n = t, 32 & yr.f && e.S(t), t;
    if (t.i === -1)
      return t.i = 0, t.n !== void 0 && (t.n.p = t.p, t.p !== void 0 && (t.p.n = t.n), t.p = yr.s, t.n = void 0, yr.s.n = t, yr.s = t), t;
  }
}
function $n(e) {
  this.v = e, this.i = 0, this.n = void 0, this.t = void 0;
}
$n.prototype.brand = r_e;
$n.prototype.h = function() {
  return !0;
};
$n.prototype.S = function(e) {
  this.t !== e && e.e === void 0 && (e.x = this.t, this.t !== void 0 && (this.t.e = e), this.t = e);
};
$n.prototype.U = function(e) {
  if (this.t !== void 0) {
    var t = e.e, r = e.x;
    t !== void 0 && (t.x = r, e.e = void 0), r !== void 0 && (r.e = t, e.x = void 0), e === this.t && (this.t = r);
  }
};
$n.prototype.subscribe = function(e) {
  var t = this;
  return QB(function() {
    var r = t.value, n = yr;
    yr = void 0;
    try {
      e(r);
    } finally {
      yr = n;
    }
  });
};
$n.prototype.valueOf = function() {
  return this.value;
};
$n.prototype.toString = function() {
  return this.value + "";
};
$n.prototype.toJSON = function() {
  return this.value;
};
$n.prototype.peek = function() {
  var e = yr;
  yr = void 0;
  try {
    return this.value;
  } finally {
    yr = e;
  }
};
Object.defineProperty($n.prototype, "value", { get: function() {
  var e = qB(this);
  return e !== void 0 && (e.i = this.i), this.v;
}, set: function(e) {
  if (e !== this.v) {
    if (x4 > 100) throw new Error("Cycle detected");
    this.v = e, this.i++, p1++, Qf++;
    try {
      for (var t = this.t; t !== void 0; t = t.x) t.t.N();
    } finally {
      BC();
    }
  }
} });
function Jd(e) {
  return new $n(e);
}
function BB(e) {
  for (var t = e.s; t !== void 0; t = t.n) if (t.S.i !== t.i || !t.S.h() || t.S.i !== t.i) return !0;
  return !1;
}
function XB(e) {
  for (var t = e.s; t !== void 0; t = t.n) {
    var r = t.S.n;
    if (r !== void 0 && (t.r = r), t.S.n = t, t.i = -1, t.n === void 0) {
      e.s = t;
      break;
    }
  }
}
function KB(e) {
  for (var t = e.s, r = void 0; t !== void 0; ) {
    var n = t.p;
    t.i === -1 ? (t.S.U(t), n !== void 0 && (n.n = t.n), t.n !== void 0 && (t.n.p = n)) : r = t, t.S.n = t.r, t.r !== void 0 && (t.r = void 0), t = n;
  }
  e.s = r;
}
function gb(e) {
  $n.call(this, void 0), this.x = e, this.s = void 0, this.g = p1 - 1, this.f = 4;
}
(gb.prototype = new $n()).h = function() {
  if (this.f &= -3, 1 & this.f) return !1;
  if ((36 & this.f) == 32 || (this.f &= -5, this.g === p1)) return !0;
  if (this.g = p1, this.f |= 1, this.i > 0 && !BB(this))
    return this.f &= -2, !0;
  var e = yr;
  try {
    XB(this), yr = this;
    var t = this.x();
    (16 & this.f || this.v !== t || this.i === 0) && (this.v = t, this.f &= -17, this.i++);
  } catch (r) {
    this.v = r, this.f |= 16, this.i++;
  }
  return yr = e, KB(this), this.f &= -2, !0;
};
gb.prototype.S = function(e) {
  if (this.t === void 0) {
    this.f |= 36;
    for (var t = this.s; t !== void 0; t = t.n) t.S.S(t);
  }
  $n.prototype.S.call(this, e);
};
gb.prototype.U = function(e) {
  if (this.t !== void 0 && ($n.prototype.U.call(this, e), this.t === void 0)) {
    this.f &= -33;
    for (var t = this.s; t !== void 0; t = t.n) t.S.U(t);
  }
};
gb.prototype.N = function() {
  if (!(2 & this.f)) {
    this.f |= 6;
    for (var e = this.t; e !== void 0; e = e.x) e.t.N();
  }
};
Object.defineProperty(gb.prototype, "value", { get: function() {
  if (1 & this.f) throw new Error("Cycle detected");
  var e = qB(this);
  if (this.h(), e !== void 0 && (e.i = this.i), 16 & this.f) throw this.v;
  return this.v;
} });
function JB(e) {
  var t = e.u;
  if (e.u = void 0, typeof t == "function") {
    Qf++;
    var r = yr;
    yr = void 0;
    try {
      t();
    } catch (n) {
      throw e.f &= -2, e.f |= 8, XC(e), n;
    } finally {
      yr = r, BC();
    }
  }
}
function XC(e) {
  for (var t = e.s; t !== void 0; t = t.n) t.S.U(t);
  e.x = void 0, e.s = void 0, JB(e);
}
function n_e(e) {
  if (yr !== this) throw new Error("Out-of-order effect");
  KB(this), yr = e, this.f &= -2, 8 & this.f && XC(this), BC();
}
function hb(e) {
  this.x = e, this.u = void 0, this.s = void 0, this.o = void 0, this.f = 32;
}
hb.prototype.c = function() {
  var e = this.S();
  try {
    if (8 & this.f || this.x === void 0) return;
    var t = this.x();
    typeof t == "function" && (this.u = t);
  } finally {
    e();
  }
};
hb.prototype.S = function() {
  if (1 & this.f) throw new Error("Cycle detected");
  this.f |= 1, this.f &= -9, JB(this), XB(this), Qf++;
  var e = yr;
  return yr = this, n_e.bind(this, e);
};
hb.prototype.N = function() {
  2 & this.f || (this.f |= 2, this.o = Dg, Dg = this);
};
hb.prototype.d = function() {
  this.f |= 8, 1 & this.f || XC(this);
};
function QB(e) {
  var t = new hb(e);
  try {
    t.c();
  } catch (r) {
    throw t.d(), r;
  }
  return t.d.bind(t);
}
var $y = { exports: {} }, _k = {};
/**
 * @license React
 * use-sync-external-store-shim.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var lR;
function o_e() {
  if (lR) return _k;
  lR = 1;
  var e = ce;
  function t(f, p) {
    return f === p && (f !== 0 || 1 / f === 1 / p) || f !== f && p !== p;
  }
  var r = typeof Object.is == "function" ? Object.is : t, n = e.useState, o = e.useEffect, a = e.useLayoutEffect, i = e.useDebugValue;
  function s(f, p) {
    var v = p(), x = n({ inst: { value: v, getSnapshot: p } }), b = x[0].inst, m = x[1];
    return a(
      function() {
        b.value = v, b.getSnapshot = p, l(b) && m({ inst: b });
      },
      [f, v, p]
    ), o(
      function() {
        return l(b) && m({ inst: b }), f(function() {
          l(b) && m({ inst: b });
        });
      },
      [f]
    ), i(v), v;
  }
  function l(f) {
    var p = f.getSnapshot;
    f = f.value;
    try {
      var v = p();
      return !r(f, v);
    } catch {
      return !0;
    }
  }
  function c(f, p) {
    return p();
  }
  var u = typeof window > "u" || typeof window.document > "u" || typeof window.document.createElement > "u" ? c : s;
  return _k.useSyncExternalStore = e.useSyncExternalStore !== void 0 ? e.useSyncExternalStore : u, _k;
}
var Nk = {};
/**
 * @license React
 * use-sync-external-store-shim.development.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var cR;
function a_e() {
  return cR || (cR = 1, process.env.NODE_ENV !== "production" && function() {
    function e(v, x) {
      return v === x && (v !== 0 || 1 / v === 1 / x) || v !== v && x !== x;
    }
    function t(v, x) {
      u || o.startTransition === void 0 || (u = !0, console.error(
        "You are using an outdated, pre-release alpha of React 18 that does not support useSyncExternalStore. The use-sync-external-store shim will not work correctly. Upgrade to a newer pre-release."
      ));
      var b = x();
      if (!f) {
        var m = x();
        a(b, m) || (console.error(
          "The result of getSnapshot should be cached to avoid an infinite loop"
        ), f = !0);
      }
      m = i({
        inst: { value: b, getSnapshot: x }
      });
      var w = m[0].inst, $ = m[1];
      return l(
        function() {
          w.value = b, w.getSnapshot = x, r(w) && $({ inst: w });
        },
        [v, b, x]
      ), s(
        function() {
          return r(w) && $({ inst: w }), v(function() {
            r(w) && $({ inst: w });
          });
        },
        [v]
      ), c(b), b;
    }
    function r(v) {
      var x = v.getSnapshot;
      v = v.value;
      try {
        var b = x();
        return !a(v, b);
      } catch {
        return !0;
      }
    }
    function n(v, x) {
      return x();
    }
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(Error());
    var o = ce, a = typeof Object.is == "function" ? Object.is : e, i = o.useState, s = o.useEffect, l = o.useLayoutEffect, c = o.useDebugValue, u = !1, f = !1, p = typeof window > "u" || typeof window.document > "u" || typeof window.document.createElement > "u" ? n : t;
    Nk.useSyncExternalStore = o.useSyncExternalStore !== void 0 ? o.useSyncExternalStore : p, typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(Error());
  }()), Nk;
}
var uR;
function i_e() {
  return uR || (uR = 1, process.env.NODE_ENV === "production" ? $y.exports = o_e() : $y.exports = a_e()), $y.exports;
}
var s_e = i_e(), l_e = dZ.split(".").map(Number)[0], c_e = Symbol.for(l_e >= 19 ? "react.transitional.element" : "react.element"), Hc, ZB = Symbol.dispose || Symbol.for("Symbol.dispose");
function jk(e, t) {
  var r = t.effect.S();
  return Hc = t, u_e.bind(t, e, r);
}
function u_e(e, t) {
  t(), Hc = e;
}
var fR, w4, dR = function() {
}, f_e = ((fR = { o: 0, effect: { s: void 0, c: function() {
}, S: function() {
  return dR;
}, d: function() {
} }, subscribe: function() {
  return dR;
}, getSnapshot: function() {
  return 0;
}, S: function() {
}, f: function() {
} })[ZB] = function() {
}, fR), d_e = Promise.prototype.then.bind(Promise.resolve());
function p_e() {
  w4 || (w4 = d_e(eX));
}
function eX() {
  var e;
  w4 = void 0, (e = Hc) == null || e.f();
}
var m_e = typeof window < "u" ? Ri : Ne;
function tX(e) {
  e === void 0 && (e = 0), p_e();
  var t = ie();
  t.current == null && (typeof window > "u" ? t.current = f_e : t.current = function(n) {
    var o, a, i, s, l = 0, c = QB(function() {
      a = this;
    });
    return a.c = function() {
      l = l + 1 | 0, s && s();
    }, (o = { o: n, effect: a, subscribe: function(u) {
      return s = u, function() {
        l = l + 1 | 0, s = void 0, c();
      };
    }, getSnapshot: function() {
      return l;
    }, S: function() {
      if (Hc != null) {
        var u = Hc.o, f = this.o;
        u == 0 && f == 0 || u == 0 && f == 1 ? (Hc.f(), i = jk(void 0, this)) : u == 1 && f == 0 || u == 2 && f == 0 || (i = jk(Hc, this));
      } else i = jk(void 0, this);
    }, f: function() {
      var u = i;
      i = void 0, u == null || u();
    } })[ZB] = function() {
      this.f();
    }, o;
  }(e));
  var r = t.current;
  return s_e.useSyncExternalStore(r.subscribe, r.getSnapshot, r.getSnapshot), r.S(), e === 0 && m_e(eX), r;
}
Object.defineProperties($n.prototype, { $$typeof: { configurable: !0, value: c_e }, type: { configurable: !0, value: function(e) {
  var t = e.data, r = tX(1);
  try {
    return t.value;
  } finally {
    r.f();
  }
} }, props: { configurable: !0, get: function() {
  return { data: this };
} }, ref: { configurable: !0, value: null } });
function g_e(e) {
  return tX(e);
}
const KC = Jd(!0), k4 = Jd(!1), al = Jd(!1), zm = Jd(null), h_e = Jd(!1), b_e = Jd(null), Jr = {
  item: null,
  isDragging: !1,
  startX: 0,
  startY: 0,
  currX: 0,
  currY: 0
}, pR = 5;
function y_e(e, t) {
  e.button === 0 && (Jr.item = t, Jr.startX = e.pageX, Jr.startY = e.pageY, Jr.currX = e.pageX, Jr.currY = e.pageY, Jr.isDragging = !1, KC.value = !1, document.body.style.cursor = "grabbing", window.addEventListener("pointermove", rX), window.addEventListener("pointerup", nX));
}
function rX(e) {
  if (!Jr.item) return;
  const t = e.pageX - Jr.startX, r = e.pageY - Jr.startY;
  !Jr.isDragging && (Math.abs(t) > pR || Math.abs(r) > pR) && (Jr.isDragging = !0), Jr.currX = e.pageX, Jr.currY = e.pageY;
}
const JC = "gallery-image-drop";
function v_e(e, t) {
  window.dispatchEvent(
    new CustomEvent(JC, { detail: { item: e, position: t } })
  );
}
function TWe(e) {
  const t = (r) => {
    e(r.detail.item, r.detail.position);
  };
  return window.addEventListener(JC, t), t;
}
function MWe(e) {
  window.removeEventListener(JC, e);
}
function nX(e) {
  Jr.item && Jr.isDragging && (Jr.item.mediaClass === "image" || Jr.item.mediaClass === "dimensional") && v_e(Jr.item, { x: e.pageX, y: e.pageY }), Jr.item = null, Jr.isDragging = !1, KC.value = k4.value, document.body.style.cursor = "", window.removeEventListener("pointermove", rX), window.removeEventListener("pointerup", nX);
}
function x_e() {
  return Jr;
}
const m1 = {
  onPointerDown: y_e,
  getDragState: x_e
};
var w_e = Object.defineProperty, k_e = (e, t, r) => t in e ? w_e(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r }) : e[t] = r, Ik = (e, t, r) => (k_e(e, typeof t != "symbol" ? t + "" : t, r), r);
let $_e = class {
  constructor() {
    Ik(this, "current", this.detect()), Ik(this, "handoffState", "pending"), Ik(this, "currentId", 0);
  }
  set(t) {
    this.current !== t && (this.handoffState = "pending", this.currentId = 0, this.current = t);
  }
  reset() {
    this.set(this.detect());
  }
  nextId() {
    return ++this.currentId;
  }
  get isServer() {
    return this.current === "server";
  }
  get isClient() {
    return this.current === "client";
  }
  detect() {
    return typeof window > "u" || typeof document > "u" ? "server" : "client";
  }
  handoff() {
    this.handoffState === "pending" && (this.handoffState = "complete");
  }
  get isHandoffComplete() {
    return this.handoffState === "complete";
  }
}, gv = new $_e();
function O_e(e) {
  typeof queueMicrotask == "function" ? queueMicrotask(e) : Promise.resolve().then(e).catch((t) => setTimeout(() => {
    throw t;
  }));
}
function J0() {
  let e = [], t = { addEventListener(r, n, o, a) {
    return r.addEventListener(n, o, a), t.add(() => r.removeEventListener(n, o, a));
  }, requestAnimationFrame(...r) {
    let n = requestAnimationFrame(...r);
    return t.add(() => cancelAnimationFrame(n));
  }, nextFrame(...r) {
    return t.requestAnimationFrame(() => t.requestAnimationFrame(...r));
  }, setTimeout(...r) {
    let n = setTimeout(...r);
    return t.add(() => clearTimeout(n));
  }, microTask(...r) {
    let n = { current: !0 };
    return O_e(() => {
      n.current && r[0]();
    }), t.add(() => {
      n.current = !1;
    });
  }, style(r, n, o) {
    let a = r.style.getPropertyValue(n);
    return Object.assign(r.style, { [n]: o }), this.add(() => {
      Object.assign(r.style, { [n]: a });
    });
  }, group(r) {
    let n = J0();
    return r(n), this.add(() => n.dispose());
  }, add(r) {
    return e.includes(r) || e.push(r), () => {
      let n = e.indexOf(r);
      if (n >= 0) for (let o of e.splice(n, 1)) o();
    };
  }, dispose() {
    for (let r of e.splice(0)) r();
  } };
  return t;
}
function oX() {
  let [e] = _e(J0);
  return Ne(() => () => e.dispose(), [e]), e;
}
let zl = (e, t) => {
  gv.isServer ? Ne(e, t) : Ri(e, t);
};
function aX(e) {
  let t = ie(e);
  return zl(() => {
    t.current = e;
  }, [e]), t;
}
let ii = function(e) {
  let t = aX(e);
  return ce.useCallback((...r) => t.current(...r), [t]);
};
function $4(...e) {
  return Array.from(new Set(e.flatMap((t) => typeof t == "string" ? t.split(" ") : []))).filter(Boolean).join(" ");
}
function Q0(e, t, ...r) {
  if (e in t) {
    let o = t[e];
    return typeof o == "function" ? o(...r) : o;
  }
  let n = new Error(`Tried to handle "${e}" but there is no handler defined. Only defined handlers are: ${Object.keys(t).map((o) => `"${o}"`).join(", ")}.`);
  throw Error.captureStackTrace && Error.captureStackTrace(n, Q0), n;
}
var iX = ((e) => (e[e.None = 0] = "None", e[e.RenderStrategy = 1] = "RenderStrategy", e[e.Static = 2] = "Static", e))(iX || {}), Al = ((e) => (e[e.Unmount = 0] = "Unmount", e[e.Hidden = 1] = "Hidden", e))(Al || {});
function sX() {
  let e = S_e();
  return et((t) => E_e({ mergeRefs: e, ...t }), [e]);
}
function E_e({ ourProps: e, theirProps: t, slot: r, defaultTag: n, features: o, visible: a = !0, name: i, mergeRefs: s }) {
  s = s ?? P_e;
  let l = lX(t, e);
  if (a) return Oy(l, r, n, i, s);
  let c = o ?? 0;
  if (c & 2) {
    let { static: u = !1, ...f } = l;
    if (u) return Oy(f, r, n, i, s);
  }
  if (c & 1) {
    let { unmount: u = !0, ...f } = l;
    return Q0(u ? 0 : 1, { 0() {
      return null;
    }, 1() {
      return Oy({ ...f, hidden: !0, style: { display: "none" } }, r, n, i, s);
    } });
  }
  return Oy(l, r, n, i, s);
}
function Oy(e, t = {}, r, n, o) {
  let { as: a = r, children: i, refName: s = "ref", ...l } = Tk(e, ["unmount", "static"]), c = e.ref !== void 0 ? { [s]: e.ref } : {}, u = typeof i == "function" ? i(t) : i;
  "className" in l && l.className && typeof l.className == "function" && (l.className = l.className(t)), l["aria-labelledby"] && l["aria-labelledby"] === l.id && (l["aria-labelledby"] = void 0);
  let f = {};
  if (t) {
    let p = !1, v = [];
    for (let [x, b] of Object.entries(t)) typeof b == "boolean" && (p = !0), b === !0 && v.push(x.replace(/([A-Z])/g, (m) => `-${m.toLowerCase()}`));
    if (p) {
      f["data-headlessui-state"] = v.join(" ");
      for (let x of v) f[`data-${x}`] = "";
    }
  }
  if (a === ar && (Object.keys(Nc(l)).length > 0 || Object.keys(Nc(f)).length > 0)) if (!Dl(u) || Array.isArray(u) && u.length > 1) {
    if (Object.keys(Nc(l)).length > 0) throw new Error(['Passing props on "Fragment"!', "", `The current component <${n} /> is rendering a "Fragment".`, "However we need to passthrough the following props:", Object.keys(Nc(l)).concat(Object.keys(Nc(f))).map((p) => `  - ${p}`).join(`
`), "", "You can apply a few solutions:", ['Add an `as="..."` prop, to ensure that we render an actual element instead of a "Fragment".', "Render a single element as the child so that we can forward the props onto that element."].map((p) => `  - ${p}`).join(`
`)].join(`
`));
  } else {
    let p = u.props, v = p == null ? void 0 : p.className, x = typeof v == "function" ? (...w) => $4(v(...w), l.className) : $4(v, l.className), b = x ? { className: x } : {}, m = lX(u.props, Nc(Tk(l, ["ref"])));
    for (let w in f) w in m && delete f[w];
    return Ll(u, Object.assign({}, m, f, c, { ref: o(C_e(u), c.ref) }, b));
  }
  return N1(a, Object.assign({}, Tk(l, ["ref"]), a !== ar && c, a !== ar && f), u);
}
function S_e() {
  let e = ie([]), t = et((r) => {
    for (let n of e.current) n != null && (typeof n == "function" ? n(r) : n.current = r);
  }, []);
  return (...r) => {
    if (!r.every((n) => n == null)) return e.current = r, t;
  };
}
function P_e(...e) {
  return e.every((t) => t == null) ? void 0 : (t) => {
    for (let r of e) r != null && (typeof r == "function" ? r(t) : r.current = t);
  };
}
function lX(...e) {
  if (e.length === 0) return {};
  if (e.length === 1) return e[0];
  let t = {}, r = {};
  for (let n of e) for (let o in n) o.startsWith("on") && typeof n[o] == "function" ? (r[o] != null || (r[o] = []), r[o].push(n[o])) : t[o] = n[o];
  if (t.disabled || t["aria-disabled"]) for (let n in r) /^(on(?:Click|Pointer|Mouse|Key)(?:Down|Up|Press)?)$/.test(n) && (r[n] = [(o) => {
    var a;
    return (a = o == null ? void 0 : o.preventDefault) == null ? void 0 : a.call(o);
  }]);
  for (let n in r) Object.assign(t, { [n](o, ...a) {
    let i = r[n];
    for (let s of i) {
      if ((o instanceof Event || (o == null ? void 0 : o.nativeEvent) instanceof Event) && o.defaultPrevented) return;
      s(o, ...a);
    }
  } });
  return t;
}
function QC(e) {
  var t;
  return Object.assign(Pd(e), { displayName: (t = e.displayName) != null ? t : e.name });
}
function Nc(e) {
  let t = Object.assign({}, e);
  for (let r in t) t[r] === void 0 && delete t[r];
  return t;
}
function Tk(e, t = []) {
  let r = Object.assign({}, e);
  for (let n of t) n in r && delete r[n];
  return r;
}
function C_e(e) {
  return ce.version.split(".")[0] >= "19" ? e.props.ref : e.ref;
}
let A_e = Symbol();
function cX(...e) {
  let t = ie(e);
  Ne(() => {
    t.current = e;
  }, [e]);
  let r = ii((n) => {
    for (let o of t.current) o != null && (typeof o == "function" ? o(n) : o.current = n);
  });
  return e.every((n) => n == null || (n == null ? void 0 : n[A_e])) ? void 0 : r;
}
function __e(e = 0) {
  let [t, r] = _e(e), n = et((l) => r(l), [t]), o = et((l) => r((c) => c | l), [t]), a = et((l) => (t & l) === l, [t]), i = et((l) => r((c) => c & ~l), [r]), s = et((l) => r((c) => c ^ l), [r]);
  return { flags: t, setFlag: n, addFlag: o, hasFlag: a, removeFlag: i, toggleFlag: s };
}
var mR, gR;
typeof process < "u" && typeof globalThis < "u" && typeof Element < "u" && ((mR = process == null ? void 0 : process.env) == null ? void 0 : mR.NODE_ENV) === "test" && typeof ((gR = Element == null ? void 0 : Element.prototype) == null ? void 0 : gR.getAnimations) > "u" && (Element.prototype.getAnimations = function() {
  return console.warn(["Headless UI has polyfilled `Element.prototype.getAnimations` for your tests.", "Please install a proper polyfill e.g. `jsdom-testing-mocks`, to silence these warnings.", "", "Example usage:", "```js", "import { mockAnimationsApi } from 'jsdom-testing-mocks'", "mockAnimationsApi()", "```"].join(`
`)), [];
});
var N_e = ((e) => (e[e.None = 0] = "None", e[e.Closed = 1] = "Closed", e[e.Enter = 2] = "Enter", e[e.Leave = 4] = "Leave", e))(N_e || {});
function j_e(e) {
  let t = {};
  for (let r in e) e[r] === !0 && (t[`data-${r}`] = "");
  return t;
}
function I_e(e, t, r, n) {
  let [o, a] = _e(r), { hasFlag: i, addFlag: s, removeFlag: l } = __e(e && o ? 3 : 0), c = ie(!1), u = ie(!1), f = oX();
  return zl(() => {
    var p;
    if (e) {
      if (r && a(!0), !t) {
        r && s(3);
        return;
      }
      return (p = n == null ? void 0 : n.start) == null || p.call(n, r), T_e(t, { inFlight: c, prepare() {
        u.current ? u.current = !1 : u.current = c.current, c.current = !0, !u.current && (r ? (s(3), l(4)) : (s(4), l(2)));
      }, run() {
        u.current ? r ? (l(3), s(4)) : (l(4), s(3)) : r ? l(1) : s(1);
      }, done() {
        var v;
        u.current && typeof t.getAnimations == "function" && t.getAnimations().length > 0 || (c.current = !1, l(7), r || a(!1), (v = n == null ? void 0 : n.end) == null || v.call(n, r));
      } });
    }
  }, [e, r, t, f]), e ? [o, { closed: i(1), enter: i(2), leave: i(4), transition: i(2) || i(4) }] : [r, { closed: void 0, enter: void 0, leave: void 0, transition: void 0 }];
}
function T_e(e, { prepare: t, run: r, done: n, inFlight: o }) {
  let a = J0();
  return R_e(e, { prepare: t, inFlight: o }), a.nextFrame(() => {
    r(), a.requestAnimationFrame(() => {
      a.add(M_e(e, n));
    });
  }), a.dispose;
}
function M_e(e, t) {
  var r, n;
  let o = J0();
  if (!e) return o.dispose;
  let a = !1;
  o.add(() => {
    a = !0;
  });
  let i = (n = (r = e.getAnimations) == null ? void 0 : r.call(e).filter((s) => s instanceof CSSTransition)) != null ? n : [];
  return i.length === 0 ? (t(), o.dispose) : (Promise.allSettled(i.map((s) => s.finished)).then(() => {
    a || t();
  }), o.dispose);
}
function R_e(e, { inFlight: t, prepare: r }) {
  if (t != null && t.current) {
    r();
    return;
  }
  let n = e.style.transition;
  e.style.transition = "none", r(), e.offsetHeight, e.style.transition = n;
}
let ZC = Br(null);
ZC.displayName = "OpenClosedContext";
var Gc = ((e) => (e[e.Open = 1] = "Open", e[e.Closed = 2] = "Closed", e[e.Closing = 4] = "Closing", e[e.Opening = 8] = "Opening", e))(Gc || {});
function uX() {
  return Ut(ZC);
}
function z_e({ value: e, children: t }) {
  return ce.createElement(ZC.Provider, { value: e }, t);
}
function F_e() {
  let e = typeof document > "u";
  return "useSyncExternalStore" in Y ? ((t) => t.useSyncExternalStore)(Y)(() => () => {
  }, () => !1, () => !e) : !1;
}
function fX() {
  let e = F_e(), [t, r] = Y.useState(gv.isHandoffComplete);
  return t && gv.isHandoffComplete === !1 && r(!1), Y.useEffect(() => {
    t !== !0 && r(!0);
  }, [t]), Y.useEffect(() => gv.handoff(), []), e ? !1 : t;
}
function D_e() {
  let e = ie(!1);
  return zl(() => (e.current = !0, () => {
    e.current = !1;
  }), []), e;
}
function dX(e) {
  var t;
  return !!(e.enter || e.enterFrom || e.enterTo || e.leave || e.leaveFrom || e.leaveTo) || ((t = e.as) != null ? t : mX) !== ar || ce.Children.count(e.children) === 1;
}
let Z0 = Br(null);
Z0.displayName = "TransitionContext";
var L_e = ((e) => (e.Visible = "visible", e.Hidden = "hidden", e))(L_e || {});
function V_e() {
  let e = Ut(Z0);
  if (e === null) throw new Error("A <Transition.Child /> is used but it is missing a parent <Transition /> or <Transition.Root />.");
  return e;
}
function W_e() {
  let e = Ut(ex);
  if (e === null) throw new Error("A <Transition.Child /> is used but it is missing a parent <Transition /> or <Transition.Root />.");
  return e;
}
let ex = Br(null);
ex.displayName = "NestingContext";
function tx(e) {
  return "children" in e ? tx(e.children) : e.current.filter(({ el: t }) => t.current !== null).filter(({ state: t }) => t === "visible").length > 0;
}
function pX(e, t) {
  let r = aX(e), n = ie([]), o = D_e(), a = oX(), i = ii((v, x = Al.Hidden) => {
    let b = n.current.findIndex(({ el: m }) => m === v);
    b !== -1 && (Q0(x, { [Al.Unmount]() {
      n.current.splice(b, 1);
    }, [Al.Hidden]() {
      n.current[b].state = "hidden";
    } }), a.microTask(() => {
      var m;
      !tx(n) && o.current && ((m = r.current) == null || m.call(r));
    }));
  }), s = ii((v) => {
    let x = n.current.find(({ el: b }) => b === v);
    return x ? x.state !== "visible" && (x.state = "visible") : n.current.push({ el: v, state: "visible" }), () => i(v, Al.Unmount);
  }), l = ie([]), c = ie(Promise.resolve()), u = ie({ enter: [], leave: [] }), f = ii((v, x, b) => {
    l.current.splice(0), t && (t.chains.current[x] = t.chains.current[x].filter(([m]) => m !== v)), t == null || t.chains.current[x].push([v, new Promise((m) => {
      l.current.push(m);
    })]), t == null || t.chains.current[x].push([v, new Promise((m) => {
      Promise.all(u.current[x].map(([w, $]) => $)).then(() => m());
    })]), x === "enter" ? c.current = c.current.then(() => t == null ? void 0 : t.wait.current).then(() => b(x)) : b(x);
  }), p = ii((v, x, b) => {
    Promise.all(u.current[x].splice(0).map(([m, w]) => w)).then(() => {
      var m;
      (m = l.current.shift()) == null || m();
    }).then(() => b(x));
  });
  return Yt(() => ({ children: n, register: s, unregister: i, onStart: f, onStop: p, wait: c, chains: u }), [s, i, n, f, p, u, c]);
}
let mX = ar, gX = iX.RenderStrategy;
function U_e(e, t) {
  var r, n;
  let { transition: o = !0, beforeEnter: a, afterEnter: i, beforeLeave: s, afterLeave: l, enter: c, enterFrom: u, enterTo: f, entered: p, leave: v, leaveFrom: x, leaveTo: b, ...m } = e, [w, $] = _e(null), E = ie(null), S = dX(e), h = cX(...S ? [E, t, $] : t === null ? [] : [t]), U = (r = m.unmount) == null || r ? Al.Unmount : Al.Hidden, { show: G, appear: Q, initial: Z } = V_e(), [X, J] = _e(G ? "visible" : "hidden"), I = W_e(), { register: te, unregister: V } = I;
  zl(() => te(E), [te, E]), zl(() => {
    if (U === Al.Hidden && E.current) {
      if (G && X !== "visible") {
        J("visible");
        return;
      }
      return Q0(X, { hidden: () => V(E), visible: () => te(E) });
    }
  }, [X, E, te, V, G, U]);
  let D = fX();
  zl(() => {
    if (S && D && X === "visible" && E.current === null) throw new Error("Did you forget to passthrough the `ref` to the actual DOM node?");
  }, [E, X, D, S]);
  let F = Z && !Q, R = Q && G && Z, H = ie(!1), B = pX(() => {
    H.current || (J("hidden"), V(E));
  }, I), g = ii((_) => {
    H.current = !0;
    let T = _ ? "enter" : "leave";
    B.onStart(E, T, (M) => {
      M === "enter" ? a == null || a() : M === "leave" && (s == null || s());
    });
  }), d = ii((_) => {
    let T = _ ? "enter" : "leave";
    H.current = !1, B.onStop(E, T, (M) => {
      M === "enter" ? i == null || i() : M === "leave" && (l == null || l());
    }), T === "leave" && !tx(B) && (J("hidden"), V(E));
  });
  Ne(() => {
    S && o || (g(G), d(G));
  }, [G, S, o]);
  let O = !(!o || !S || !D || F), [, C] = I_e(O, w, G, { start: g, end: d }), A = Nc({ ref: h, className: ((n = $4(m.className, R && c, R && u, C.enter && c, C.enter && C.closed && u, C.enter && !C.closed && f, C.leave && v, C.leave && !C.closed && x, C.leave && C.closed && b, !C.transition && G && p)) == null ? void 0 : n.trim()) || void 0, ...j_e(C) }), N = 0;
  X === "visible" && (N |= Gc.Open), X === "hidden" && (N |= Gc.Closed), G && X === "hidden" && (N |= Gc.Opening), !G && X === "visible" && (N |= Gc.Closing);
  let j = sX();
  return ce.createElement(ex.Provider, { value: B }, ce.createElement(z_e, { value: N }, j({ ourProps: A, theirProps: m, defaultTag: mX, features: gX, visible: X === "visible", name: "Transition.Child" })));
}
function Y_e(e, t) {
  let { show: r, appear: n = !1, unmount: o = !0, ...a } = e, i = ie(null), s = dX(e), l = cX(...s ? [i, t] : t === null ? [] : [t]);
  fX();
  let c = uX();
  if (r === void 0 && c !== null && (r = (c & Gc.Open) === Gc.Open), r === void 0) throw new Error("A <Transition /> is used but it is missing a `show={true | false}` prop.");
  let [u, f] = _e(r ? "visible" : "hidden"), p = pX(() => {
    r || f("hidden");
  }), [v, x] = _e(!0), b = ie([r]);
  zl(() => {
    v !== !1 && b.current[b.current.length - 1] !== r && (b.current.push(r), x(!1));
  }, [b, r]);
  let m = Yt(() => ({ show: r, appear: n, initial: v }), [r, n, v]);
  zl(() => {
    r ? f("visible") : !tx(p) && i.current !== null && f("hidden");
  }, [r, p]);
  let w = { unmount: o }, $ = ii(() => {
    var h;
    v && x(!1), (h = e.beforeEnter) == null || h.call(e);
  }), E = ii(() => {
    var h;
    v && x(!1), (h = e.beforeLeave) == null || h.call(e);
  }), S = sX();
  return ce.createElement(ex.Provider, { value: p }, ce.createElement(Z0.Provider, { value: m }, S({ ourProps: { ...w, as: ar, children: ce.createElement(hX, { ref: l, ...w, ...a, beforeEnter: $, beforeLeave: E }) }, theirProps: {}, defaultTag: ar, features: gX, visible: u === "visible", name: "Transition" })));
}
function H_e(e, t) {
  let r = Ut(Z0) !== null, n = uX() !== null;
  return ce.createElement(ce.Fragment, null, !r && n ? ce.createElement(O4, { ref: t, ...e }) : ce.createElement(hX, { ref: t, ...e }));
}
let O4 = QC(Y_e), hX = QC(U_e), G_e = QC(H_e), q_e = Object.assign(O4, { Child: G_e, Root: O4 });
const e6 = "-", B_e = (e) => {
  const t = K_e(e), {
    conflictingClassGroups: r,
    conflictingClassGroupModifiers: n
  } = e;
  return {
    getClassGroupId: (o) => {
      const a = o.split(e6);
      return a[0] === "" && a.length !== 1 && a.shift(), bX(a, t) || X_e(o);
    },
    getConflictingClassGroupIds: (o, a) => {
      const i = r[o] || [];
      return a && n[o] ? [...i, ...n[o]] : i;
    }
  };
}, bX = (e, t) => {
  var r;
  if (e.length === 0)
    return t.classGroupId;
  const n = e[0], o = t.nextPart.get(n), a = o ? bX(e.slice(1), o) : void 0;
  if (a)
    return a;
  if (t.validators.length === 0)
    return;
  const i = e.join(e6);
  return (r = t.validators.find(({
    validator: s
  }) => s(i))) == null ? void 0 : r.classGroupId;
}, hR = /^\[(.+)\]$/, X_e = (e) => {
  if (hR.test(e)) {
    const t = hR.exec(e)[1], r = t == null ? void 0 : t.substring(0, t.indexOf(":"));
    if (r)
      return "arbitrary.." + r;
  }
}, K_e = (e) => {
  const {
    theme: t,
    prefix: r
  } = e, n = {
    nextPart: /* @__PURE__ */ new Map(),
    validators: []
  };
  return Q_e(Object.entries(e.classGroups), r).forEach(([o, a]) => {
    E4(a, n, o, t);
  }), n;
}, E4 = (e, t, r, n) => {
  e.forEach((o) => {
    if (typeof o == "string") {
      const a = o === "" ? t : bR(t, o);
      a.classGroupId = r;
      return;
    }
    if (typeof o == "function") {
      if (J_e(o)) {
        E4(o(n), t, r, n);
        return;
      }
      t.validators.push({
        validator: o,
        classGroupId: r
      });
      return;
    }
    Object.entries(o).forEach(([a, i]) => {
      E4(i, bR(t, a), r, n);
    });
  });
}, bR = (e, t) => {
  let r = e;
  return t.split(e6).forEach((n) => {
    r.nextPart.has(n) || r.nextPart.set(n, {
      nextPart: /* @__PURE__ */ new Map(),
      validators: []
    }), r = r.nextPart.get(n);
  }), r;
}, J_e = (e) => e.isThemeGetter, Q_e = (e, t) => t ? e.map(([r, n]) => {
  const o = n.map((a) => typeof a == "string" ? t + a : typeof a == "object" ? Object.fromEntries(Object.entries(a).map(([i, s]) => [t + i, s])) : a);
  return [r, o];
}) : e, Z_e = (e) => {
  if (e < 1)
    return {
      get: () => {
      },
      set: () => {
      }
    };
  let t = 0, r = /* @__PURE__ */ new Map(), n = /* @__PURE__ */ new Map();
  const o = (a, i) => {
    r.set(a, i), t++, t > e && (t = 0, n = r, r = /* @__PURE__ */ new Map());
  };
  return {
    get(a) {
      let i = r.get(a);
      if (i !== void 0)
        return i;
      if ((i = n.get(a)) !== void 0)
        return o(a, i), i;
    },
    set(a, i) {
      r.has(a) ? r.set(a, i) : o(a, i);
    }
  };
}, yX = "!", eNe = (e) => {
  const {
    separator: t,
    experimentalParseClassName: r
  } = e, n = t.length === 1, o = t[0], a = t.length, i = (s) => {
    const l = [];
    let c = 0, u = 0, f;
    for (let m = 0; m < s.length; m++) {
      let w = s[m];
      if (c === 0) {
        if (w === o && (n || s.slice(m, m + a) === t)) {
          l.push(s.slice(u, m)), u = m + a;
          continue;
        }
        if (w === "/") {
          f = m;
          continue;
        }
      }
      w === "[" ? c++ : w === "]" && c--;
    }
    const p = l.length === 0 ? s : s.substring(u), v = p.startsWith(yX), x = v ? p.substring(1) : p, b = f && f > u ? f - u : void 0;
    return {
      modifiers: l,
      hasImportantModifier: v,
      baseClassName: x,
      maybePostfixModifierPosition: b
    };
  };
  return r ? (s) => r({
    className: s,
    parseClassName: i
  }) : i;
}, tNe = (e) => {
  if (e.length <= 1)
    return e;
  const t = [];
  let r = [];
  return e.forEach((n) => {
    n[0] === "[" ? (t.push(...r.sort(), n), r = []) : r.push(n);
  }), t.push(...r.sort()), t;
}, rNe = (e) => ({
  cache: Z_e(e.cacheSize),
  parseClassName: eNe(e),
  ...B_e(e)
}), nNe = /\s+/, oNe = (e, t) => {
  const {
    parseClassName: r,
    getClassGroupId: n,
    getConflictingClassGroupIds: o
  } = t, a = [], i = e.trim().split(nNe);
  let s = "";
  for (let l = i.length - 1; l >= 0; l -= 1) {
    const c = i[l], {
      modifiers: u,
      hasImportantModifier: f,
      baseClassName: p,
      maybePostfixModifierPosition: v
    } = r(c);
    let x = !!v, b = n(x ? p.substring(0, v) : p);
    if (!b) {
      if (!x) {
        s = c + (s.length > 0 ? " " + s : s);
        continue;
      }
      if (b = n(p), !b) {
        s = c + (s.length > 0 ? " " + s : s);
        continue;
      }
      x = !1;
    }
    const m = tNe(u).join(":"), w = f ? m + yX : m, $ = w + b;
    if (a.includes($))
      continue;
    a.push($);
    const E = o(b, x);
    for (let S = 0; S < E.length; ++S) {
      const h = E[S];
      a.push(w + h);
    }
    s = c + (s.length > 0 ? " " + s : s);
  }
  return s;
};
function aNe() {
  let e = 0, t, r, n = "";
  for (; e < arguments.length; )
    (t = arguments[e++]) && (r = vX(t)) && (n && (n += " "), n += r);
  return n;
}
const vX = (e) => {
  if (typeof e == "string")
    return e;
  let t, r = "";
  for (let n = 0; n < e.length; n++)
    e[n] && (t = vX(e[n])) && (r && (r += " "), r += t);
  return r;
};
function iNe(e, ...t) {
  let r, n, o, a = i;
  function i(l) {
    const c = t.reduce((u, f) => f(u), e());
    return r = rNe(c), n = r.cache.get, o = r.cache.set, a = s, s(l);
  }
  function s(l) {
    const c = n(l);
    if (c)
      return c;
    const u = oNe(l, r);
    return o(l, u), u;
  }
  return function() {
    return a(aNe.apply(null, arguments));
  };
}
const Nr = (e) => {
  const t = (r) => r[e] || [];
  return t.isThemeGetter = !0, t;
}, xX = /^\[(?:([a-z-]+):)?(.+)\]$/i, sNe = /^\d+\/\d+$/, lNe = /* @__PURE__ */ new Set(["px", "full", "screen"]), cNe = /^(\d+(\.\d+)?)?(xs|sm|md|lg|xl)$/, uNe = /\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\b(calc|min|max|clamp)\(.+\)|^0$/, fNe = /^(rgba?|hsla?|hwb|(ok)?(lab|lch))\(.+\)$/, dNe = /^(inset_)?-?((\d+)?\.?(\d+)[a-z]+|0)_-?((\d+)?\.?(\d+)[a-z]+|0)/, pNe = /^(url|image|image-set|cross-fade|element|(repeating-)?(linear|radial|conic)-gradient)\(.+\)$/, Ja = (e) => Zf(e) || lNe.has(e) || sNe.test(e), il = (e) => Qd(e, "length", wNe), Zf = (e) => !!e && !Number.isNaN(Number(e)), Mk = (e) => Qd(e, "number", Zf), Fm = (e) => !!e && Number.isInteger(Number(e)), mNe = (e) => e.endsWith("%") && Zf(e.slice(0, -1)), bt = (e) => xX.test(e), sl = (e) => cNe.test(e), gNe = /* @__PURE__ */ new Set(["length", "size", "percentage"]), hNe = (e) => Qd(e, gNe, wX), bNe = (e) => Qd(e, "position", wX), yNe = /* @__PURE__ */ new Set(["image", "url"]), vNe = (e) => Qd(e, yNe, $Ne), xNe = (e) => Qd(e, "", kNe), Dm = () => !0, Qd = (e, t, r) => {
  const n = xX.exec(e);
  return n ? n[1] ? typeof t == "string" ? n[1] === t : t.has(n[1]) : r(n[2]) : !1;
}, wNe = (e) => (
  // `colorFunctionRegex` check is necessary because color functions can have percentages in them which which would be incorrectly classified as lengths.
  // For example, `hsl(0 0% 0%)` would be classified as a length without this check.
  // I could also use lookbehind assertion in `lengthUnitRegex` but that isn't supported widely enough.
  uNe.test(e) && !fNe.test(e)
), wX = () => !1, kNe = (e) => dNe.test(e), $Ne = (e) => pNe.test(e), ONe = () => {
  const e = Nr("colors"), t = Nr("spacing"), r = Nr("blur"), n = Nr("brightness"), o = Nr("borderColor"), a = Nr("borderRadius"), i = Nr("borderSpacing"), s = Nr("borderWidth"), l = Nr("contrast"), c = Nr("grayscale"), u = Nr("hueRotate"), f = Nr("invert"), p = Nr("gap"), v = Nr("gradientColorStops"), x = Nr("gradientColorStopPositions"), b = Nr("inset"), m = Nr("margin"), w = Nr("opacity"), $ = Nr("padding"), E = Nr("saturate"), S = Nr("scale"), h = Nr("sepia"), U = Nr("skew"), G = Nr("space"), Q = Nr("translate"), Z = () => ["auto", "contain", "none"], X = () => ["auto", "hidden", "clip", "visible", "scroll"], J = () => ["auto", bt, t], I = () => [bt, t], te = () => ["", Ja, il], V = () => ["auto", Zf, bt], D = () => ["bottom", "center", "left", "left-bottom", "left-top", "right", "right-bottom", "right-top", "top"], F = () => ["solid", "dashed", "dotted", "double", "none"], R = () => ["normal", "multiply", "screen", "overlay", "darken", "lighten", "color-dodge", "color-burn", "hard-light", "soft-light", "difference", "exclusion", "hue", "saturation", "color", "luminosity"], H = () => ["start", "end", "center", "between", "around", "evenly", "stretch"], B = () => ["", "0", bt], g = () => ["auto", "avoid", "all", "avoid-page", "page", "left", "right", "column"], d = () => [Zf, bt];
  return {
    cacheSize: 500,
    separator: ":",
    theme: {
      colors: [Dm],
      spacing: [Ja, il],
      blur: ["none", "", sl, bt],
      brightness: d(),
      borderColor: [e],
      borderRadius: ["none", "", "full", sl, bt],
      borderSpacing: I(),
      borderWidth: te(),
      contrast: d(),
      grayscale: B(),
      hueRotate: d(),
      invert: B(),
      gap: I(),
      gradientColorStops: [e],
      gradientColorStopPositions: [mNe, il],
      inset: J(),
      margin: J(),
      opacity: d(),
      padding: I(),
      saturate: d(),
      scale: d(),
      sepia: B(),
      skew: d(),
      space: I(),
      translate: I()
    },
    classGroups: {
      // Layout
      /**
       * Aspect Ratio
       * @see https://tailwindcss.com/docs/aspect-ratio
       */
      aspect: [{
        aspect: ["auto", "square", "video", bt]
      }],
      /**
       * Container
       * @see https://tailwindcss.com/docs/container
       */
      container: ["container"],
      /**
       * Columns
       * @see https://tailwindcss.com/docs/columns
       */
      columns: [{
        columns: [sl]
      }],
      /**
       * Break After
       * @see https://tailwindcss.com/docs/break-after
       */
      "break-after": [{
        "break-after": g()
      }],
      /**
       * Break Before
       * @see https://tailwindcss.com/docs/break-before
       */
      "break-before": [{
        "break-before": g()
      }],
      /**
       * Break Inside
       * @see https://tailwindcss.com/docs/break-inside
       */
      "break-inside": [{
        "break-inside": ["auto", "avoid", "avoid-page", "avoid-column"]
      }],
      /**
       * Box Decoration Break
       * @see https://tailwindcss.com/docs/box-decoration-break
       */
      "box-decoration": [{
        "box-decoration": ["slice", "clone"]
      }],
      /**
       * Box Sizing
       * @see https://tailwindcss.com/docs/box-sizing
       */
      box: [{
        box: ["border", "content"]
      }],
      /**
       * Display
       * @see https://tailwindcss.com/docs/display
       */
      display: ["block", "inline-block", "inline", "flex", "inline-flex", "table", "inline-table", "table-caption", "table-cell", "table-column", "table-column-group", "table-footer-group", "table-header-group", "table-row-group", "table-row", "flow-root", "grid", "inline-grid", "contents", "list-item", "hidden"],
      /**
       * Floats
       * @see https://tailwindcss.com/docs/float
       */
      float: [{
        float: ["right", "left", "none", "start", "end"]
      }],
      /**
       * Clear
       * @see https://tailwindcss.com/docs/clear
       */
      clear: [{
        clear: ["left", "right", "both", "none", "start", "end"]
      }],
      /**
       * Isolation
       * @see https://tailwindcss.com/docs/isolation
       */
      isolation: ["isolate", "isolation-auto"],
      /**
       * Object Fit
       * @see https://tailwindcss.com/docs/object-fit
       */
      "object-fit": [{
        object: ["contain", "cover", "fill", "none", "scale-down"]
      }],
      /**
       * Object Position
       * @see https://tailwindcss.com/docs/object-position
       */
      "object-position": [{
        object: [...D(), bt]
      }],
      /**
       * Overflow
       * @see https://tailwindcss.com/docs/overflow
       */
      overflow: [{
        overflow: X()
      }],
      /**
       * Overflow X
       * @see https://tailwindcss.com/docs/overflow
       */
      "overflow-x": [{
        "overflow-x": X()
      }],
      /**
       * Overflow Y
       * @see https://tailwindcss.com/docs/overflow
       */
      "overflow-y": [{
        "overflow-y": X()
      }],
      /**
       * Overscroll Behavior
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      overscroll: [{
        overscroll: Z()
      }],
      /**
       * Overscroll Behavior X
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      "overscroll-x": [{
        "overscroll-x": Z()
      }],
      /**
       * Overscroll Behavior Y
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      "overscroll-y": [{
        "overscroll-y": Z()
      }],
      /**
       * Position
       * @see https://tailwindcss.com/docs/position
       */
      position: ["static", "fixed", "absolute", "relative", "sticky"],
      /**
       * Top / Right / Bottom / Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      inset: [{
        inset: [b]
      }],
      /**
       * Right / Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      "inset-x": [{
        "inset-x": [b]
      }],
      /**
       * Top / Bottom
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      "inset-y": [{
        "inset-y": [b]
      }],
      /**
       * Start
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      start: [{
        start: [b]
      }],
      /**
       * End
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      end: [{
        end: [b]
      }],
      /**
       * Top
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      top: [{
        top: [b]
      }],
      /**
       * Right
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      right: [{
        right: [b]
      }],
      /**
       * Bottom
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      bottom: [{
        bottom: [b]
      }],
      /**
       * Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      left: [{
        left: [b]
      }],
      /**
       * Visibility
       * @see https://tailwindcss.com/docs/visibility
       */
      visibility: ["visible", "invisible", "collapse"],
      /**
       * Z-Index
       * @see https://tailwindcss.com/docs/z-index
       */
      z: [{
        z: ["auto", Fm, bt]
      }],
      // Flexbox and Grid
      /**
       * Flex Basis
       * @see https://tailwindcss.com/docs/flex-basis
       */
      basis: [{
        basis: J()
      }],
      /**
       * Flex Direction
       * @see https://tailwindcss.com/docs/flex-direction
       */
      "flex-direction": [{
        flex: ["row", "row-reverse", "col", "col-reverse"]
      }],
      /**
       * Flex Wrap
       * @see https://tailwindcss.com/docs/flex-wrap
       */
      "flex-wrap": [{
        flex: ["wrap", "wrap-reverse", "nowrap"]
      }],
      /**
       * Flex
       * @see https://tailwindcss.com/docs/flex
       */
      flex: [{
        flex: ["1", "auto", "initial", "none", bt]
      }],
      /**
       * Flex Grow
       * @see https://tailwindcss.com/docs/flex-grow
       */
      grow: [{
        grow: B()
      }],
      /**
       * Flex Shrink
       * @see https://tailwindcss.com/docs/flex-shrink
       */
      shrink: [{
        shrink: B()
      }],
      /**
       * Order
       * @see https://tailwindcss.com/docs/order
       */
      order: [{
        order: ["first", "last", "none", Fm, bt]
      }],
      /**
       * Grid Template Columns
       * @see https://tailwindcss.com/docs/grid-template-columns
       */
      "grid-cols": [{
        "grid-cols": [Dm]
      }],
      /**
       * Grid Column Start / End
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-start-end": [{
        col: ["auto", {
          span: ["full", Fm, bt]
        }, bt]
      }],
      /**
       * Grid Column Start
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-start": [{
        "col-start": V()
      }],
      /**
       * Grid Column End
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-end": [{
        "col-end": V()
      }],
      /**
       * Grid Template Rows
       * @see https://tailwindcss.com/docs/grid-template-rows
       */
      "grid-rows": [{
        "grid-rows": [Dm]
      }],
      /**
       * Grid Row Start / End
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-start-end": [{
        row: ["auto", {
          span: [Fm, bt]
        }, bt]
      }],
      /**
       * Grid Row Start
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-start": [{
        "row-start": V()
      }],
      /**
       * Grid Row End
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-end": [{
        "row-end": V()
      }],
      /**
       * Grid Auto Flow
       * @see https://tailwindcss.com/docs/grid-auto-flow
       */
      "grid-flow": [{
        "grid-flow": ["row", "col", "dense", "row-dense", "col-dense"]
      }],
      /**
       * Grid Auto Columns
       * @see https://tailwindcss.com/docs/grid-auto-columns
       */
      "auto-cols": [{
        "auto-cols": ["auto", "min", "max", "fr", bt]
      }],
      /**
       * Grid Auto Rows
       * @see https://tailwindcss.com/docs/grid-auto-rows
       */
      "auto-rows": [{
        "auto-rows": ["auto", "min", "max", "fr", bt]
      }],
      /**
       * Gap
       * @see https://tailwindcss.com/docs/gap
       */
      gap: [{
        gap: [p]
      }],
      /**
       * Gap X
       * @see https://tailwindcss.com/docs/gap
       */
      "gap-x": [{
        "gap-x": [p]
      }],
      /**
       * Gap Y
       * @see https://tailwindcss.com/docs/gap
       */
      "gap-y": [{
        "gap-y": [p]
      }],
      /**
       * Justify Content
       * @see https://tailwindcss.com/docs/justify-content
       */
      "justify-content": [{
        justify: ["normal", ...H()]
      }],
      /**
       * Justify Items
       * @see https://tailwindcss.com/docs/justify-items
       */
      "justify-items": [{
        "justify-items": ["start", "end", "center", "stretch"]
      }],
      /**
       * Justify Self
       * @see https://tailwindcss.com/docs/justify-self
       */
      "justify-self": [{
        "justify-self": ["auto", "start", "end", "center", "stretch"]
      }],
      /**
       * Align Content
       * @see https://tailwindcss.com/docs/align-content
       */
      "align-content": [{
        content: ["normal", ...H(), "baseline"]
      }],
      /**
       * Align Items
       * @see https://tailwindcss.com/docs/align-items
       */
      "align-items": [{
        items: ["start", "end", "center", "baseline", "stretch"]
      }],
      /**
       * Align Self
       * @see https://tailwindcss.com/docs/align-self
       */
      "align-self": [{
        self: ["auto", "start", "end", "center", "stretch", "baseline"]
      }],
      /**
       * Place Content
       * @see https://tailwindcss.com/docs/place-content
       */
      "place-content": [{
        "place-content": [...H(), "baseline"]
      }],
      /**
       * Place Items
       * @see https://tailwindcss.com/docs/place-items
       */
      "place-items": [{
        "place-items": ["start", "end", "center", "baseline", "stretch"]
      }],
      /**
       * Place Self
       * @see https://tailwindcss.com/docs/place-self
       */
      "place-self": [{
        "place-self": ["auto", "start", "end", "center", "stretch"]
      }],
      // Spacing
      /**
       * Padding
       * @see https://tailwindcss.com/docs/padding
       */
      p: [{
        p: [$]
      }],
      /**
       * Padding X
       * @see https://tailwindcss.com/docs/padding
       */
      px: [{
        px: [$]
      }],
      /**
       * Padding Y
       * @see https://tailwindcss.com/docs/padding
       */
      py: [{
        py: [$]
      }],
      /**
       * Padding Start
       * @see https://tailwindcss.com/docs/padding
       */
      ps: [{
        ps: [$]
      }],
      /**
       * Padding End
       * @see https://tailwindcss.com/docs/padding
       */
      pe: [{
        pe: [$]
      }],
      /**
       * Padding Top
       * @see https://tailwindcss.com/docs/padding
       */
      pt: [{
        pt: [$]
      }],
      /**
       * Padding Right
       * @see https://tailwindcss.com/docs/padding
       */
      pr: [{
        pr: [$]
      }],
      /**
       * Padding Bottom
       * @see https://tailwindcss.com/docs/padding
       */
      pb: [{
        pb: [$]
      }],
      /**
       * Padding Left
       * @see https://tailwindcss.com/docs/padding
       */
      pl: [{
        pl: [$]
      }],
      /**
       * Margin
       * @see https://tailwindcss.com/docs/margin
       */
      m: [{
        m: [m]
      }],
      /**
       * Margin X
       * @see https://tailwindcss.com/docs/margin
       */
      mx: [{
        mx: [m]
      }],
      /**
       * Margin Y
       * @see https://tailwindcss.com/docs/margin
       */
      my: [{
        my: [m]
      }],
      /**
       * Margin Start
       * @see https://tailwindcss.com/docs/margin
       */
      ms: [{
        ms: [m]
      }],
      /**
       * Margin End
       * @see https://tailwindcss.com/docs/margin
       */
      me: [{
        me: [m]
      }],
      /**
       * Margin Top
       * @see https://tailwindcss.com/docs/margin
       */
      mt: [{
        mt: [m]
      }],
      /**
       * Margin Right
       * @see https://tailwindcss.com/docs/margin
       */
      mr: [{
        mr: [m]
      }],
      /**
       * Margin Bottom
       * @see https://tailwindcss.com/docs/margin
       */
      mb: [{
        mb: [m]
      }],
      /**
       * Margin Left
       * @see https://tailwindcss.com/docs/margin
       */
      ml: [{
        ml: [m]
      }],
      /**
       * Space Between X
       * @see https://tailwindcss.com/docs/space
       */
      "space-x": [{
        "space-x": [G]
      }],
      /**
       * Space Between X Reverse
       * @see https://tailwindcss.com/docs/space
       */
      "space-x-reverse": ["space-x-reverse"],
      /**
       * Space Between Y
       * @see https://tailwindcss.com/docs/space
       */
      "space-y": [{
        "space-y": [G]
      }],
      /**
       * Space Between Y Reverse
       * @see https://tailwindcss.com/docs/space
       */
      "space-y-reverse": ["space-y-reverse"],
      // Sizing
      /**
       * Width
       * @see https://tailwindcss.com/docs/width
       */
      w: [{
        w: ["auto", "min", "max", "fit", "svw", "lvw", "dvw", bt, t]
      }],
      /**
       * Min-Width
       * @see https://tailwindcss.com/docs/min-width
       */
      "min-w": [{
        "min-w": [bt, t, "min", "max", "fit"]
      }],
      /**
       * Max-Width
       * @see https://tailwindcss.com/docs/max-width
       */
      "max-w": [{
        "max-w": [bt, t, "none", "full", "min", "max", "fit", "prose", {
          screen: [sl]
        }, sl]
      }],
      /**
       * Height
       * @see https://tailwindcss.com/docs/height
       */
      h: [{
        h: [bt, t, "auto", "min", "max", "fit", "svh", "lvh", "dvh"]
      }],
      /**
       * Min-Height
       * @see https://tailwindcss.com/docs/min-height
       */
      "min-h": [{
        "min-h": [bt, t, "min", "max", "fit", "svh", "lvh", "dvh"]
      }],
      /**
       * Max-Height
       * @see https://tailwindcss.com/docs/max-height
       */
      "max-h": [{
        "max-h": [bt, t, "min", "max", "fit", "svh", "lvh", "dvh"]
      }],
      /**
       * Size
       * @see https://tailwindcss.com/docs/size
       */
      size: [{
        size: [bt, t, "auto", "min", "max", "fit"]
      }],
      // Typography
      /**
       * Font Size
       * @see https://tailwindcss.com/docs/font-size
       */
      "font-size": [{
        text: ["base", sl, il]
      }],
      /**
       * Font Smoothing
       * @see https://tailwindcss.com/docs/font-smoothing
       */
      "font-smoothing": ["antialiased", "subpixel-antialiased"],
      /**
       * Font Style
       * @see https://tailwindcss.com/docs/font-style
       */
      "font-style": ["italic", "not-italic"],
      /**
       * Font Weight
       * @see https://tailwindcss.com/docs/font-weight
       */
      "font-weight": [{
        font: ["thin", "extralight", "light", "normal", "medium", "semibold", "bold", "extrabold", "black", Mk]
      }],
      /**
       * Font Family
       * @see https://tailwindcss.com/docs/font-family
       */
      "font-family": [{
        font: [Dm]
      }],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-normal": ["normal-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-ordinal": ["ordinal"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-slashed-zero": ["slashed-zero"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-figure": ["lining-nums", "oldstyle-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-spacing": ["proportional-nums", "tabular-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-fraction": ["diagonal-fractions", "stacked-fractions"],
      /**
       * Letter Spacing
       * @see https://tailwindcss.com/docs/letter-spacing
       */
      tracking: [{
        tracking: ["tighter", "tight", "normal", "wide", "wider", "widest", bt]
      }],
      /**
       * Line Clamp
       * @see https://tailwindcss.com/docs/line-clamp
       */
      "line-clamp": [{
        "line-clamp": ["none", Zf, Mk]
      }],
      /**
       * Line Height
       * @see https://tailwindcss.com/docs/line-height
       */
      leading: [{
        leading: ["none", "tight", "snug", "normal", "relaxed", "loose", Ja, bt]
      }],
      /**
       * List Style Image
       * @see https://tailwindcss.com/docs/list-style-image
       */
      "list-image": [{
        "list-image": ["none", bt]
      }],
      /**
       * List Style Type
       * @see https://tailwindcss.com/docs/list-style-type
       */
      "list-style-type": [{
        list: ["none", "disc", "decimal", bt]
      }],
      /**
       * List Style Position
       * @see https://tailwindcss.com/docs/list-style-position
       */
      "list-style-position": [{
        list: ["inside", "outside"]
      }],
      /**
       * Placeholder Color
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/placeholder-color
       */
      "placeholder-color": [{
        placeholder: [e]
      }],
      /**
       * Placeholder Opacity
       * @see https://tailwindcss.com/docs/placeholder-opacity
       */
      "placeholder-opacity": [{
        "placeholder-opacity": [w]
      }],
      /**
       * Text Alignment
       * @see https://tailwindcss.com/docs/text-align
       */
      "text-alignment": [{
        text: ["left", "center", "right", "justify", "start", "end"]
      }],
      /**
       * Text Color
       * @see https://tailwindcss.com/docs/text-color
       */
      "text-color": [{
        text: [e]
      }],
      /**
       * Text Opacity
       * @see https://tailwindcss.com/docs/text-opacity
       */
      "text-opacity": [{
        "text-opacity": [w]
      }],
      /**
       * Text Decoration
       * @see https://tailwindcss.com/docs/text-decoration
       */
      "text-decoration": ["underline", "overline", "line-through", "no-underline"],
      /**
       * Text Decoration Style
       * @see https://tailwindcss.com/docs/text-decoration-style
       */
      "text-decoration-style": [{
        decoration: [...F(), "wavy"]
      }],
      /**
       * Text Decoration Thickness
       * @see https://tailwindcss.com/docs/text-decoration-thickness
       */
      "text-decoration-thickness": [{
        decoration: ["auto", "from-font", Ja, il]
      }],
      /**
       * Text Underline Offset
       * @see https://tailwindcss.com/docs/text-underline-offset
       */
      "underline-offset": [{
        "underline-offset": ["auto", Ja, bt]
      }],
      /**
       * Text Decoration Color
       * @see https://tailwindcss.com/docs/text-decoration-color
       */
      "text-decoration-color": [{
        decoration: [e]
      }],
      /**
       * Text Transform
       * @see https://tailwindcss.com/docs/text-transform
       */
      "text-transform": ["uppercase", "lowercase", "capitalize", "normal-case"],
      /**
       * Text Overflow
       * @see https://tailwindcss.com/docs/text-overflow
       */
      "text-overflow": ["truncate", "text-ellipsis", "text-clip"],
      /**
       * Text Wrap
       * @see https://tailwindcss.com/docs/text-wrap
       */
      "text-wrap": [{
        text: ["wrap", "nowrap", "balance", "pretty"]
      }],
      /**
       * Text Indent
       * @see https://tailwindcss.com/docs/text-indent
       */
      indent: [{
        indent: I()
      }],
      /**
       * Vertical Alignment
       * @see https://tailwindcss.com/docs/vertical-align
       */
      "vertical-align": [{
        align: ["baseline", "top", "middle", "bottom", "text-top", "text-bottom", "sub", "super", bt]
      }],
      /**
       * Whitespace
       * @see https://tailwindcss.com/docs/whitespace
       */
      whitespace: [{
        whitespace: ["normal", "nowrap", "pre", "pre-line", "pre-wrap", "break-spaces"]
      }],
      /**
       * Word Break
       * @see https://tailwindcss.com/docs/word-break
       */
      break: [{
        break: ["normal", "words", "all", "keep"]
      }],
      /**
       * Hyphens
       * @see https://tailwindcss.com/docs/hyphens
       */
      hyphens: [{
        hyphens: ["none", "manual", "auto"]
      }],
      /**
       * Content
       * @see https://tailwindcss.com/docs/content
       */
      content: [{
        content: ["none", bt]
      }],
      // Backgrounds
      /**
       * Background Attachment
       * @see https://tailwindcss.com/docs/background-attachment
       */
      "bg-attachment": [{
        bg: ["fixed", "local", "scroll"]
      }],
      /**
       * Background Clip
       * @see https://tailwindcss.com/docs/background-clip
       */
      "bg-clip": [{
        "bg-clip": ["border", "padding", "content", "text"]
      }],
      /**
       * Background Opacity
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/background-opacity
       */
      "bg-opacity": [{
        "bg-opacity": [w]
      }],
      /**
       * Background Origin
       * @see https://tailwindcss.com/docs/background-origin
       */
      "bg-origin": [{
        "bg-origin": ["border", "padding", "content"]
      }],
      /**
       * Background Position
       * @see https://tailwindcss.com/docs/background-position
       */
      "bg-position": [{
        bg: [...D(), bNe]
      }],
      /**
       * Background Repeat
       * @see https://tailwindcss.com/docs/background-repeat
       */
      "bg-repeat": [{
        bg: ["no-repeat", {
          repeat: ["", "x", "y", "round", "space"]
        }]
      }],
      /**
       * Background Size
       * @see https://tailwindcss.com/docs/background-size
       */
      "bg-size": [{
        bg: ["auto", "cover", "contain", hNe]
      }],
      /**
       * Background Image
       * @see https://tailwindcss.com/docs/background-image
       */
      "bg-image": [{
        bg: ["none", {
          "gradient-to": ["t", "tr", "r", "br", "b", "bl", "l", "tl"]
        }, vNe]
      }],
      /**
       * Background Color
       * @see https://tailwindcss.com/docs/background-color
       */
      "bg-color": [{
        bg: [e]
      }],
      /**
       * Gradient Color Stops From Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-from-pos": [{
        from: [x]
      }],
      /**
       * Gradient Color Stops Via Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-via-pos": [{
        via: [x]
      }],
      /**
       * Gradient Color Stops To Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-to-pos": [{
        to: [x]
      }],
      /**
       * Gradient Color Stops From
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-from": [{
        from: [v]
      }],
      /**
       * Gradient Color Stops Via
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-via": [{
        via: [v]
      }],
      /**
       * Gradient Color Stops To
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-to": [{
        to: [v]
      }],
      // Borders
      /**
       * Border Radius
       * @see https://tailwindcss.com/docs/border-radius
       */
      rounded: [{
        rounded: [a]
      }],
      /**
       * Border Radius Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-s": [{
        "rounded-s": [a]
      }],
      /**
       * Border Radius End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-e": [{
        "rounded-e": [a]
      }],
      /**
       * Border Radius Top
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-t": [{
        "rounded-t": [a]
      }],
      /**
       * Border Radius Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-r": [{
        "rounded-r": [a]
      }],
      /**
       * Border Radius Bottom
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-b": [{
        "rounded-b": [a]
      }],
      /**
       * Border Radius Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-l": [{
        "rounded-l": [a]
      }],
      /**
       * Border Radius Start Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-ss": [{
        "rounded-ss": [a]
      }],
      /**
       * Border Radius Start End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-se": [{
        "rounded-se": [a]
      }],
      /**
       * Border Radius End End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-ee": [{
        "rounded-ee": [a]
      }],
      /**
       * Border Radius End Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-es": [{
        "rounded-es": [a]
      }],
      /**
       * Border Radius Top Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-tl": [{
        "rounded-tl": [a]
      }],
      /**
       * Border Radius Top Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-tr": [{
        "rounded-tr": [a]
      }],
      /**
       * Border Radius Bottom Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-br": [{
        "rounded-br": [a]
      }],
      /**
       * Border Radius Bottom Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-bl": [{
        "rounded-bl": [a]
      }],
      /**
       * Border Width
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w": [{
        border: [s]
      }],
      /**
       * Border Width X
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-x": [{
        "border-x": [s]
      }],
      /**
       * Border Width Y
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-y": [{
        "border-y": [s]
      }],
      /**
       * Border Width Start
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-s": [{
        "border-s": [s]
      }],
      /**
       * Border Width End
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-e": [{
        "border-e": [s]
      }],
      /**
       * Border Width Top
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-t": [{
        "border-t": [s]
      }],
      /**
       * Border Width Right
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-r": [{
        "border-r": [s]
      }],
      /**
       * Border Width Bottom
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-b": [{
        "border-b": [s]
      }],
      /**
       * Border Width Left
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-l": [{
        "border-l": [s]
      }],
      /**
       * Border Opacity
       * @see https://tailwindcss.com/docs/border-opacity
       */
      "border-opacity": [{
        "border-opacity": [w]
      }],
      /**
       * Border Style
       * @see https://tailwindcss.com/docs/border-style
       */
      "border-style": [{
        border: [...F(), "hidden"]
      }],
      /**
       * Divide Width X
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-x": [{
        "divide-x": [s]
      }],
      /**
       * Divide Width X Reverse
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-x-reverse": ["divide-x-reverse"],
      /**
       * Divide Width Y
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-y": [{
        "divide-y": [s]
      }],
      /**
       * Divide Width Y Reverse
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-y-reverse": ["divide-y-reverse"],
      /**
       * Divide Opacity
       * @see https://tailwindcss.com/docs/divide-opacity
       */
      "divide-opacity": [{
        "divide-opacity": [w]
      }],
      /**
       * Divide Style
       * @see https://tailwindcss.com/docs/divide-style
       */
      "divide-style": [{
        divide: F()
      }],
      /**
       * Border Color
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color": [{
        border: [o]
      }],
      /**
       * Border Color X
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-x": [{
        "border-x": [o]
      }],
      /**
       * Border Color Y
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-y": [{
        "border-y": [o]
      }],
      /**
       * Border Color S
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-s": [{
        "border-s": [o]
      }],
      /**
       * Border Color E
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-e": [{
        "border-e": [o]
      }],
      /**
       * Border Color Top
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-t": [{
        "border-t": [o]
      }],
      /**
       * Border Color Right
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-r": [{
        "border-r": [o]
      }],
      /**
       * Border Color Bottom
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-b": [{
        "border-b": [o]
      }],
      /**
       * Border Color Left
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-l": [{
        "border-l": [o]
      }],
      /**
       * Divide Color
       * @see https://tailwindcss.com/docs/divide-color
       */
      "divide-color": [{
        divide: [o]
      }],
      /**
       * Outline Style
       * @see https://tailwindcss.com/docs/outline-style
       */
      "outline-style": [{
        outline: ["", ...F()]
      }],
      /**
       * Outline Offset
       * @see https://tailwindcss.com/docs/outline-offset
       */
      "outline-offset": [{
        "outline-offset": [Ja, bt]
      }],
      /**
       * Outline Width
       * @see https://tailwindcss.com/docs/outline-width
       */
      "outline-w": [{
        outline: [Ja, il]
      }],
      /**
       * Outline Color
       * @see https://tailwindcss.com/docs/outline-color
       */
      "outline-color": [{
        outline: [e]
      }],
      /**
       * Ring Width
       * @see https://tailwindcss.com/docs/ring-width
       */
      "ring-w": [{
        ring: te()
      }],
      /**
       * Ring Width Inset
       * @see https://tailwindcss.com/docs/ring-width
       */
      "ring-w-inset": ["ring-inset"],
      /**
       * Ring Color
       * @see https://tailwindcss.com/docs/ring-color
       */
      "ring-color": [{
        ring: [e]
      }],
      /**
       * Ring Opacity
       * @see https://tailwindcss.com/docs/ring-opacity
       */
      "ring-opacity": [{
        "ring-opacity": [w]
      }],
      /**
       * Ring Offset Width
       * @see https://tailwindcss.com/docs/ring-offset-width
       */
      "ring-offset-w": [{
        "ring-offset": [Ja, il]
      }],
      /**
       * Ring Offset Color
       * @see https://tailwindcss.com/docs/ring-offset-color
       */
      "ring-offset-color": [{
        "ring-offset": [e]
      }],
      // Effects
      /**
       * Box Shadow
       * @see https://tailwindcss.com/docs/box-shadow
       */
      shadow: [{
        shadow: ["", "inner", "none", sl, xNe]
      }],
      /**
       * Box Shadow Color
       * @see https://tailwindcss.com/docs/box-shadow-color
       */
      "shadow-color": [{
        shadow: [Dm]
      }],
      /**
       * Opacity
       * @see https://tailwindcss.com/docs/opacity
       */
      opacity: [{
        opacity: [w]
      }],
      /**
       * Mix Blend Mode
       * @see https://tailwindcss.com/docs/mix-blend-mode
       */
      "mix-blend": [{
        "mix-blend": [...R(), "plus-lighter", "plus-darker"]
      }],
      /**
       * Background Blend Mode
       * @see https://tailwindcss.com/docs/background-blend-mode
       */
      "bg-blend": [{
        "bg-blend": R()
      }],
      // Filters
      /**
       * Filter
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/filter
       */
      filter: [{
        filter: ["", "none"]
      }],
      /**
       * Blur
       * @see https://tailwindcss.com/docs/blur
       */
      blur: [{
        blur: [r]
      }],
      /**
       * Brightness
       * @see https://tailwindcss.com/docs/brightness
       */
      brightness: [{
        brightness: [n]
      }],
      /**
       * Contrast
       * @see https://tailwindcss.com/docs/contrast
       */
      contrast: [{
        contrast: [l]
      }],
      /**
       * Drop Shadow
       * @see https://tailwindcss.com/docs/drop-shadow
       */
      "drop-shadow": [{
        "drop-shadow": ["", "none", sl, bt]
      }],
      /**
       * Grayscale
       * @see https://tailwindcss.com/docs/grayscale
       */
      grayscale: [{
        grayscale: [c]
      }],
      /**
       * Hue Rotate
       * @see https://tailwindcss.com/docs/hue-rotate
       */
      "hue-rotate": [{
        "hue-rotate": [u]
      }],
      /**
       * Invert
       * @see https://tailwindcss.com/docs/invert
       */
      invert: [{
        invert: [f]
      }],
      /**
       * Saturate
       * @see https://tailwindcss.com/docs/saturate
       */
      saturate: [{
        saturate: [E]
      }],
      /**
       * Sepia
       * @see https://tailwindcss.com/docs/sepia
       */
      sepia: [{
        sepia: [h]
      }],
      /**
       * Backdrop Filter
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/backdrop-filter
       */
      "backdrop-filter": [{
        "backdrop-filter": ["", "none"]
      }],
      /**
       * Backdrop Blur
       * @see https://tailwindcss.com/docs/backdrop-blur
       */
      "backdrop-blur": [{
        "backdrop-blur": [r]
      }],
      /**
       * Backdrop Brightness
       * @see https://tailwindcss.com/docs/backdrop-brightness
       */
      "backdrop-brightness": [{
        "backdrop-brightness": [n]
      }],
      /**
       * Backdrop Contrast
       * @see https://tailwindcss.com/docs/backdrop-contrast
       */
      "backdrop-contrast": [{
        "backdrop-contrast": [l]
      }],
      /**
       * Backdrop Grayscale
       * @see https://tailwindcss.com/docs/backdrop-grayscale
       */
      "backdrop-grayscale": [{
        "backdrop-grayscale": [c]
      }],
      /**
       * Backdrop Hue Rotate
       * @see https://tailwindcss.com/docs/backdrop-hue-rotate
       */
      "backdrop-hue-rotate": [{
        "backdrop-hue-rotate": [u]
      }],
      /**
       * Backdrop Invert
       * @see https://tailwindcss.com/docs/backdrop-invert
       */
      "backdrop-invert": [{
        "backdrop-invert": [f]
      }],
      /**
       * Backdrop Opacity
       * @see https://tailwindcss.com/docs/backdrop-opacity
       */
      "backdrop-opacity": [{
        "backdrop-opacity": [w]
      }],
      /**
       * Backdrop Saturate
       * @see https://tailwindcss.com/docs/backdrop-saturate
       */
      "backdrop-saturate": [{
        "backdrop-saturate": [E]
      }],
      /**
       * Backdrop Sepia
       * @see https://tailwindcss.com/docs/backdrop-sepia
       */
      "backdrop-sepia": [{
        "backdrop-sepia": [h]
      }],
      // Tables
      /**
       * Border Collapse
       * @see https://tailwindcss.com/docs/border-collapse
       */
      "border-collapse": [{
        border: ["collapse", "separate"]
      }],
      /**
       * Border Spacing
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing": [{
        "border-spacing": [i]
      }],
      /**
       * Border Spacing X
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing-x": [{
        "border-spacing-x": [i]
      }],
      /**
       * Border Spacing Y
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing-y": [{
        "border-spacing-y": [i]
      }],
      /**
       * Table Layout
       * @see https://tailwindcss.com/docs/table-layout
       */
      "table-layout": [{
        table: ["auto", "fixed"]
      }],
      /**
       * Caption Side
       * @see https://tailwindcss.com/docs/caption-side
       */
      caption: [{
        caption: ["top", "bottom"]
      }],
      // Transitions and Animation
      /**
       * Tranisition Property
       * @see https://tailwindcss.com/docs/transition-property
       */
      transition: [{
        transition: ["none", "all", "", "colors", "opacity", "shadow", "transform", bt]
      }],
      /**
       * Transition Duration
       * @see https://tailwindcss.com/docs/transition-duration
       */
      duration: [{
        duration: d()
      }],
      /**
       * Transition Timing Function
       * @see https://tailwindcss.com/docs/transition-timing-function
       */
      ease: [{
        ease: ["linear", "in", "out", "in-out", bt]
      }],
      /**
       * Transition Delay
       * @see https://tailwindcss.com/docs/transition-delay
       */
      delay: [{
        delay: d()
      }],
      /**
       * Animation
       * @see https://tailwindcss.com/docs/animation
       */
      animate: [{
        animate: ["none", "spin", "ping", "pulse", "bounce", bt]
      }],
      // Transforms
      /**
       * Transform
       * @see https://tailwindcss.com/docs/transform
       */
      transform: [{
        transform: ["", "gpu", "none"]
      }],
      /**
       * Scale
       * @see https://tailwindcss.com/docs/scale
       */
      scale: [{
        scale: [S]
      }],
      /**
       * Scale X
       * @see https://tailwindcss.com/docs/scale
       */
      "scale-x": [{
        "scale-x": [S]
      }],
      /**
       * Scale Y
       * @see https://tailwindcss.com/docs/scale
       */
      "scale-y": [{
        "scale-y": [S]
      }],
      /**
       * Rotate
       * @see https://tailwindcss.com/docs/rotate
       */
      rotate: [{
        rotate: [Fm, bt]
      }],
      /**
       * Translate X
       * @see https://tailwindcss.com/docs/translate
       */
      "translate-x": [{
        "translate-x": [Q]
      }],
      /**
       * Translate Y
       * @see https://tailwindcss.com/docs/translate
       */
      "translate-y": [{
        "translate-y": [Q]
      }],
      /**
       * Skew X
       * @see https://tailwindcss.com/docs/skew
       */
      "skew-x": [{
        "skew-x": [U]
      }],
      /**
       * Skew Y
       * @see https://tailwindcss.com/docs/skew
       */
      "skew-y": [{
        "skew-y": [U]
      }],
      /**
       * Transform Origin
       * @see https://tailwindcss.com/docs/transform-origin
       */
      "transform-origin": [{
        origin: ["center", "top", "top-right", "right", "bottom-right", "bottom", "bottom-left", "left", "top-left", bt]
      }],
      // Interactivity
      /**
       * Accent Color
       * @see https://tailwindcss.com/docs/accent-color
       */
      accent: [{
        accent: ["auto", e]
      }],
      /**
       * Appearance
       * @see https://tailwindcss.com/docs/appearance
       */
      appearance: [{
        appearance: ["none", "auto"]
      }],
      /**
       * Cursor
       * @see https://tailwindcss.com/docs/cursor
       */
      cursor: [{
        cursor: ["auto", "default", "pointer", "wait", "text", "move", "help", "not-allowed", "none", "context-menu", "progress", "cell", "crosshair", "vertical-text", "alias", "copy", "no-drop", "grab", "grabbing", "all-scroll", "col-resize", "row-resize", "n-resize", "e-resize", "s-resize", "w-resize", "ne-resize", "nw-resize", "se-resize", "sw-resize", "ew-resize", "ns-resize", "nesw-resize", "nwse-resize", "zoom-in", "zoom-out", bt]
      }],
      /**
       * Caret Color
       * @see https://tailwindcss.com/docs/just-in-time-mode#caret-color-utilities
       */
      "caret-color": [{
        caret: [e]
      }],
      /**
       * Pointer Events
       * @see https://tailwindcss.com/docs/pointer-events
       */
      "pointer-events": [{
        "pointer-events": ["none", "auto"]
      }],
      /**
       * Resize
       * @see https://tailwindcss.com/docs/resize
       */
      resize: [{
        resize: ["none", "y", "x", ""]
      }],
      /**
       * Scroll Behavior
       * @see https://tailwindcss.com/docs/scroll-behavior
       */
      "scroll-behavior": [{
        scroll: ["auto", "smooth"]
      }],
      /**
       * Scroll Margin
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-m": [{
        "scroll-m": I()
      }],
      /**
       * Scroll Margin X
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mx": [{
        "scroll-mx": I()
      }],
      /**
       * Scroll Margin Y
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-my": [{
        "scroll-my": I()
      }],
      /**
       * Scroll Margin Start
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-ms": [{
        "scroll-ms": I()
      }],
      /**
       * Scroll Margin End
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-me": [{
        "scroll-me": I()
      }],
      /**
       * Scroll Margin Top
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mt": [{
        "scroll-mt": I()
      }],
      /**
       * Scroll Margin Right
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mr": [{
        "scroll-mr": I()
      }],
      /**
       * Scroll Margin Bottom
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mb": [{
        "scroll-mb": I()
      }],
      /**
       * Scroll Margin Left
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-ml": [{
        "scroll-ml": I()
      }],
      /**
       * Scroll Padding
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-p": [{
        "scroll-p": I()
      }],
      /**
       * Scroll Padding X
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-px": [{
        "scroll-px": I()
      }],
      /**
       * Scroll Padding Y
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-py": [{
        "scroll-py": I()
      }],
      /**
       * Scroll Padding Start
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-ps": [{
        "scroll-ps": I()
      }],
      /**
       * Scroll Padding End
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pe": [{
        "scroll-pe": I()
      }],
      /**
       * Scroll Padding Top
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pt": [{
        "scroll-pt": I()
      }],
      /**
       * Scroll Padding Right
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pr": [{
        "scroll-pr": I()
      }],
      /**
       * Scroll Padding Bottom
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pb": [{
        "scroll-pb": I()
      }],
      /**
       * Scroll Padding Left
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pl": [{
        "scroll-pl": I()
      }],
      /**
       * Scroll Snap Align
       * @see https://tailwindcss.com/docs/scroll-snap-align
       */
      "snap-align": [{
        snap: ["start", "end", "center", "align-none"]
      }],
      /**
       * Scroll Snap Stop
       * @see https://tailwindcss.com/docs/scroll-snap-stop
       */
      "snap-stop": [{
        snap: ["normal", "always"]
      }],
      /**
       * Scroll Snap Type
       * @see https://tailwindcss.com/docs/scroll-snap-type
       */
      "snap-type": [{
        snap: ["none", "x", "y", "both"]
      }],
      /**
       * Scroll Snap Type Strictness
       * @see https://tailwindcss.com/docs/scroll-snap-type
       */
      "snap-strictness": [{
        snap: ["mandatory", "proximity"]
      }],
      /**
       * Touch Action
       * @see https://tailwindcss.com/docs/touch-action
       */
      touch: [{
        touch: ["auto", "none", "manipulation"]
      }],
      /**
       * Touch Action X
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-x": [{
        "touch-pan": ["x", "left", "right"]
      }],
      /**
       * Touch Action Y
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-y": [{
        "touch-pan": ["y", "up", "down"]
      }],
      /**
       * Touch Action Pinch Zoom
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-pz": ["touch-pinch-zoom"],
      /**
       * User Select
       * @see https://tailwindcss.com/docs/user-select
       */
      select: [{
        select: ["none", "text", "all", "auto"]
      }],
      /**
       * Will Change
       * @see https://tailwindcss.com/docs/will-change
       */
      "will-change": [{
        "will-change": ["auto", "scroll", "contents", "transform", bt]
      }],
      // SVG
      /**
       * Fill
       * @see https://tailwindcss.com/docs/fill
       */
      fill: [{
        fill: [e, "none"]
      }],
      /**
       * Stroke Width
       * @see https://tailwindcss.com/docs/stroke-width
       */
      "stroke-w": [{
        stroke: [Ja, il, Mk]
      }],
      /**
       * Stroke
       * @see https://tailwindcss.com/docs/stroke
       */
      stroke: [{
        stroke: [e, "none"]
      }],
      // Accessibility
      /**
       * Screen Readers
       * @see https://tailwindcss.com/docs/screen-readers
       */
      sr: ["sr-only", "not-sr-only"],
      /**
       * Forced Color Adjust
       * @see https://tailwindcss.com/docs/forced-color-adjust
       */
      "forced-color-adjust": [{
        "forced-color-adjust": ["auto", "none"]
      }]
    },
    conflictingClassGroups: {
      overflow: ["overflow-x", "overflow-y"],
      overscroll: ["overscroll-x", "overscroll-y"],
      inset: ["inset-x", "inset-y", "start", "end", "top", "right", "bottom", "left"],
      "inset-x": ["right", "left"],
      "inset-y": ["top", "bottom"],
      flex: ["basis", "grow", "shrink"],
      gap: ["gap-x", "gap-y"],
      p: ["px", "py", "ps", "pe", "pt", "pr", "pb", "pl"],
      px: ["pr", "pl"],
      py: ["pt", "pb"],
      m: ["mx", "my", "ms", "me", "mt", "mr", "mb", "ml"],
      mx: ["mr", "ml"],
      my: ["mt", "mb"],
      size: ["w", "h"],
      "font-size": ["leading"],
      "fvn-normal": ["fvn-ordinal", "fvn-slashed-zero", "fvn-figure", "fvn-spacing", "fvn-fraction"],
      "fvn-ordinal": ["fvn-normal"],
      "fvn-slashed-zero": ["fvn-normal"],
      "fvn-figure": ["fvn-normal"],
      "fvn-spacing": ["fvn-normal"],
      "fvn-fraction": ["fvn-normal"],
      "line-clamp": ["display", "overflow"],
      rounded: ["rounded-s", "rounded-e", "rounded-t", "rounded-r", "rounded-b", "rounded-l", "rounded-ss", "rounded-se", "rounded-ee", "rounded-es", "rounded-tl", "rounded-tr", "rounded-br", "rounded-bl"],
      "rounded-s": ["rounded-ss", "rounded-es"],
      "rounded-e": ["rounded-se", "rounded-ee"],
      "rounded-t": ["rounded-tl", "rounded-tr"],
      "rounded-r": ["rounded-tr", "rounded-br"],
      "rounded-b": ["rounded-br", "rounded-bl"],
      "rounded-l": ["rounded-tl", "rounded-bl"],
      "border-spacing": ["border-spacing-x", "border-spacing-y"],
      "border-w": ["border-w-s", "border-w-e", "border-w-t", "border-w-r", "border-w-b", "border-w-l"],
      "border-w-x": ["border-w-r", "border-w-l"],
      "border-w-y": ["border-w-t", "border-w-b"],
      "border-color": ["border-color-s", "border-color-e", "border-color-t", "border-color-r", "border-color-b", "border-color-l"],
      "border-color-x": ["border-color-r", "border-color-l"],
      "border-color-y": ["border-color-t", "border-color-b"],
      "scroll-m": ["scroll-mx", "scroll-my", "scroll-ms", "scroll-me", "scroll-mt", "scroll-mr", "scroll-mb", "scroll-ml"],
      "scroll-mx": ["scroll-mr", "scroll-ml"],
      "scroll-my": ["scroll-mt", "scroll-mb"],
      "scroll-p": ["scroll-px", "scroll-py", "scroll-ps", "scroll-pe", "scroll-pt", "scroll-pr", "scroll-pb", "scroll-pl"],
      "scroll-px": ["scroll-pr", "scroll-pl"],
      "scroll-py": ["scroll-pt", "scroll-pb"],
      touch: ["touch-x", "touch-y", "touch-pz"],
      "touch-x": ["touch"],
      "touch-y": ["touch"],
      "touch-pz": ["touch"]
    },
    conflictingClassGroupModifiers: {
      "font-size": ["leading"]
    }
  };
}, yR = /* @__PURE__ */ iNe(ONe), hv = ({
  children: e,
  content: t,
  position: r,
  className: n,
  delay: o = 300,
  closeOnClick: a = !1,
  imageSrc: i,
  description: s,
  interactive: l = !1
}) => {
  const [c, u] = _e(!1), f = ie(null), p = ie(null), [v, x] = _e(!1), [b, m] = _e(!1), w = () => f.current ? f.current.querySelectorAll('[data-headlessui-state="open"]').length > 0 : !1;
  Ne(() => {
    const S = new MutationObserver((h) => {
      h.forEach((U) => {
        U.type === "attributes" && U.attributeName === "data-headlessui-state" && U.target.getAttribute("data-headlessui-state") === "open" && u(!1);
      });
    });
    return f.current && S.observe(f.current, {
      attributes: !0,
      subtree: !0,
      attributeFilter: ["data-headlessui-state"]
    }), () => {
      S.disconnect();
    };
  }, []);
  const $ = () => {
    if (f.current) {
      const S = f.current.getBoundingClientRect();
      switch (r) {
        case "top":
          return {
            bottom: S.height + 10,
            left: "50%",
            transform: "translateX(-50%)"
          };
        case "bottom":
          return {
            top: S.height + 10,
            left: "50%",
            transform: "translateX(-50%)"
          };
        case "left":
          return {
            right: S.width + 10,
            top: "50%",
            transform: "translateY(-50%)"
          };
        case "right":
          return {
            left: S.width + 10,
            top: "50%",
            transform: "translateY(-50%)"
          };
        default:
          return {};
      }
    }
    return {};
  }, E = (S) => {
    a && (u(!1), S.stopPropagation());
  };
  return Ne(() => {
    w() || u(v || l && b);
  }, [v, b, l]), /* @__PURE__ */ Pe(
    "div",
    {
      ref: f,
      onMouseEnter: () => {
        x(!0), w() || u(!0);
      },
      onMouseLeave: () => {
        x(!1), l || u(!1);
      },
      onClick: E,
      className: "relative",
      children: [
        e,
        /* @__PURE__ */ q(
          q_e,
          {
            show: c,
            enter: yR(
              "transition ease-out duration-200",
              o ? `delay-[${o}ms]` : "delay-[300ms]"
            ),
            enterFrom: "opacity-0",
            enterTo: "opacity-100",
            leave: "transition ease-in duration-150",
            leaveFrom: "opacity-100",
            leaveTo: "opacity-0",
            children: /* @__PURE__ */ q(
              "div",
              {
                ref: p,
                onMouseEnter: () => l && m(!0),
                onMouseLeave: () => l && m(!1),
                style: {
                  ...$(),
                  transitionDelay: `${o}ms`,
                  transitionProperty: "opacity",
                  transitionDuration: "200ms",
                  transitionTimingFunction: "ease-out"
                },
                className: yR(
                  "absolute z-10 w-max rounded-lg bg-ui-controls px-2.5 py-1.5 text-[13px] font-medium text-base-fg shadow-xl border border-ui-panel-border",
                  l ? "pointer-events-auto" : "pointer-events-none",
                  n || ""
                ),
                children: /* @__PURE__ */ Pe("div", { className: "flex flex-col gap-1", children: [
                  t,
                  i && /* @__PURE__ */ q(
                    "img",
                    {
                      src: i,
                      alt: "tooltip",
                      className: "mb-1 aspect-square w-56 rounded-md"
                    }
                  ),
                  s && /* @__PURE__ */ q("p", { className: "text-sm text-base-fg font-normal", children: s })
                ] })
              }
            )
          }
        )
      ]
    }
  );
}, ENe = ({
  item: e,
  mode: t,
  activeFilter: r,
  selected: n,
  onClick: o,
  onImageError: a,
  disableTooltipAndBadge: i = !1,
  imageFit: s = "cover"
}) => {
  const l = ie(null), c = ie(!1), u = (v) => {
    if (e.mediaClass === "video") return;
    c.current = !1;
    const x = (m) => {
      const w = m.pageX - v.pageX, $ = m.pageY - v.pageY;
      !c.current && (Math.abs(w) > 5 || Math.abs($) > 5) && (c.current = !0, m1 && !i && m1.onPointerDown(v, e), window.removeEventListener("pointermove", x));
    };
    window.addEventListener("pointermove", x);
    const b = () => {
      window.removeEventListener("pointermove", x), window.removeEventListener("pointerup", b), c.current || o();
    };
    window.addEventListener("pointerup", b);
  }, f = (v) => {
    !c.current && !i && o();
  }, p = (v) => {
    i || o();
  };
  return /* @__PURE__ */ Pe(
    "div",
    {
      className: Tc(
        "group relative w-full",
        "aspect-square"
      ),
      children: [
        !i && e.mediaClass && /* @__PURE__ */ q("div", { className: "pointer-events-none absolute right-2 top-2 z-20 rounded-full bg-black/50 backdrop-blur-lg px-2 py-0.5 text-[11px] font-semibold uppercase tracking-wide text-white opacity-0 group-hover:opacity-100 transition-opacity duration-150", children: e.mediaClass === "dimensional" ? "3D" : e.mediaClass }),
        i ? /* @__PURE__ */ q(
          "button",
          {
            type: "button",
            tabIndex: 0,
            className: Tc(
              "w-full group relative overflow-visible rounded-md border-transparent border-[3px] transition-all",
              "aspect-square",
              n ? "border-primary" : "border-transparent hover:border-primary/80",
              t === "select" || e.mediaClass === "video" ? "cursor-pointer" : "cursor-grab hover:cursor-grab active:cursor-grabbing"
            ),
            onPointerDown: u,
            onPointerUp: f,
            onClick: p,
            "aria-label": e.label,
            children: /* @__PURE__ */ Pe("div", { className: "relative h-full w-full", children: [
              e.thumbnail ? /* @__PURE__ */ q(
                "img",
                {
                  "data-gallery-draggable-1": "true",
                  loading: "lazy",
                  ref: l,
                  src: e.thumbnail,
                  alt: e.label,
                  className: Tc(
                    "h-full w-full bg-black/30",
                    s === "contain" ? "object-contain" : "object-cover"
                  ),
                  draggable: !1,
                  onError: a
                }
              ) : /* @__PURE__ */ q("div", { className: "flex h-full w-full items-center justify-center bg-black/30", children: /* @__PURE__ */ q("span", { className: "text-white/60", children: "Image not available" }) }),
              n && /* @__PURE__ */ q("div", { className: "absolute right-2 top-2 flex h-6 w-6 items-center justify-center rounded-full bg-primary", children: /* @__PURE__ */ q(po, { icon: sR, className: "text-sm" }) })
            ] })
          }
        ) : /* @__PURE__ */ q(
          hv,
          {
            position: "bottom",
            delay: 200,
            className: "-mt-3 bg-ui-controls text-base-fg border border-ui-panel-border",
            content: /* @__PURE__ */ Pe("div", { className: "flex flex-col items-center text-xs whitespace-nowrap", children: [
              e.mediaClass !== "video" && /* @__PURE__ */ Pe("span", { children: [
                /* @__PURE__ */ q("span", { className: "font-bold", children: "Drag" }),
                /* @__PURE__ */ q("span", { className: "opacity-50", children: e.mediaClass === "dimensional" ? " to add to scene" : " to add" })
              ] }),
              /* @__PURE__ */ Pe("span", { children: [
                /* @__PURE__ */ q("span", { className: "font-bold", children: "Click" }),
                /* @__PURE__ */ q("span", { className: "opacity-50", children: " to view" })
              ] })
            ] }),
            children: /* @__PURE__ */ q(
              "button",
              {
                type: "button",
                tabIndex: 0,
                className: Tc(
                  "w-full group relative overflow-visible rounded-md border-[3px] transition-all focus:outline-none focus:ring-2 focus:ring-primary",
                  "aspect-square",
                  n ? "border-primary" : "border-transparent hover:border-primary",
                  t === "select" || e.mediaClass === "video" ? "cursor-pointer" : "cursor-grab hover:cursor-grab active:cursor-grabbing"
                ),
                onPointerDown: u,
                onPointerUp: f,
                onClick: p,
                "aria-label": e.label,
                children: /* @__PURE__ */ Pe("div", { className: "relative h-full w-full", children: [
                  e.thumbnail ? /* @__PURE__ */ q(
                    "img",
                    {
                      "data-gallery-draggable-2": "true",
                      loading: "lazy",
                      ref: l,
                      src: e.thumbnail,
                      alt: e.label,
                      className: Tc(
                        "h-full w-full bg-black/30",
                        s === "contain" ? "object-contain" : "object-cover"
                      ),
                      draggable: !1,
                      onError: a
                    }
                  ) : /* @__PURE__ */ q("div", { className: "flex h-full w-full items-center justify-center bg-black/30", children: /* @__PURE__ */ q("span", { className: "text-white/60", children: "Image not available" }) }),
                  n && /* @__PURE__ */ q("div", { className: "absolute right-2 top-2 flex h-6 w-6 items-center justify-center rounded-full bg-primary", children: /* @__PURE__ */ q(po, { icon: sR, className: "text-sm" }) })
                ] })
              }
            )
          }
        )
      ]
    }
  );
}, kX = typeof document < "u" ? ce.useLayoutEffect : () => {
};
function SNe(e) {
  const t = ie(null);
  return kX(() => {
    t.current = e;
  }, [
    e
  ]), et((...r) => {
    const n = t.current;
    return n == null ? void 0 : n(...r);
  }, []);
}
const Sc = (e) => {
  var t;
  return (t = e == null ? void 0 : e.ownerDocument) !== null && t !== void 0 ? t : document;
}, qc = (e) => e && "window" in e && e.window === e ? e : Sc(e).defaultView || window;
function $X(e, t) {
  return t && e ? e.contains(t) : !1;
}
const S4 = (e = document) => e.activeElement;
function OX(e) {
  return e.target;
}
function PNe(e) {
  var t;
  return typeof window > "u" || window.navigator == null ? !1 : ((t = window.navigator.userAgentData) === null || t === void 0 ? void 0 : t.brands.some((r) => e.test(r.brand))) || e.test(window.navigator.userAgent);
}
function CNe(e) {
  var t;
  return typeof window < "u" && window.navigator != null ? e.test(((t = window.navigator.userAgentData) === null || t === void 0 ? void 0 : t.platform) || window.navigator.platform) : !1;
}
function EX(e) {
  let t = null;
  return () => (t == null && (t = e()), t);
}
const ANe = EX(function() {
  return CNe(/^Mac/i);
}), _Ne = EX(function() {
  return PNe(/Android/i);
});
function SX() {
  let e = ie(/* @__PURE__ */ new Map()), t = et((o, a, i, s) => {
    let l = s != null && s.once ? (...c) => {
      e.current.delete(i), i(...c);
    } : i;
    e.current.set(i, {
      type: a,
      eventTarget: o,
      fn: l,
      options: s
    }), o.addEventListener(a, l, s);
  }, []), r = et((o, a, i, s) => {
    var l;
    let c = ((l = e.current.get(i)) === null || l === void 0 ? void 0 : l.fn) || i;
    o.removeEventListener(a, c, s), e.current.delete(i);
  }, []), n = et(() => {
    e.current.forEach((o, a) => {
      r(o.eventTarget, o.type, a, o.options);
    });
  }, [
    r
  ]);
  return Ne(() => n, [
    n
  ]), {
    addGlobalListener: t,
    removeGlobalListener: r,
    removeAllGlobalListeners: n
  };
}
function NNe(e) {
  return e.mozInputSource === 0 && e.isTrusted ? !0 : _Ne() && e.pointerType ? e.type === "click" && e.buttons === 1 : e.detail === 0 && !e.pointerType;
}
let PX = class {
  isDefaultPrevented() {
    return this.nativeEvent.defaultPrevented;
  }
  preventDefault() {
    this.defaultPrevented = !0, this.nativeEvent.preventDefault();
  }
  stopPropagation() {
    this.nativeEvent.stopPropagation(), this.isPropagationStopped = () => !0;
  }
  isPropagationStopped() {
    return !1;
  }
  persist() {
  }
  constructor(t, r) {
    this.nativeEvent = r, this.target = r.target, this.currentTarget = r.currentTarget, this.relatedTarget = r.relatedTarget, this.bubbles = r.bubbles, this.cancelable = r.cancelable, this.defaultPrevented = r.defaultPrevented, this.eventPhase = r.eventPhase, this.isTrusted = r.isTrusted, this.timeStamp = r.timeStamp, this.type = t;
  }
};
function CX(e) {
  let t = ie({
    isFocused: !1,
    observer: null
  });
  kX(() => {
    const n = t.current;
    return () => {
      n.observer && (n.observer.disconnect(), n.observer = null);
    };
  }, []);
  let r = SNe((n) => {
    e == null || e(n);
  });
  return et((n) => {
    if (n.target instanceof HTMLButtonElement || n.target instanceof HTMLInputElement || n.target instanceof HTMLTextAreaElement || n.target instanceof HTMLSelectElement) {
      t.current.isFocused = !0;
      let o = n.target, a = (i) => {
        t.current.isFocused = !1, o.disabled && r(new PX("blur", i)), t.current.observer && (t.current.observer.disconnect(), t.current.observer = null);
      };
      o.addEventListener("focusout", a, {
        once: !0
      }), t.current.observer = new MutationObserver(() => {
        if (t.current.isFocused && o.disabled) {
          var i;
          (i = t.current.observer) === null || i === void 0 || i.disconnect();
          let s = o === document.activeElement ? null : document.activeElement;
          o.dispatchEvent(new FocusEvent("blur", {
            relatedTarget: s
          })), o.dispatchEvent(new FocusEvent("focusout", {
            bubbles: !0,
            relatedTarget: s
          }));
        }
      }), t.current.observer.observe(o, {
        attributes: !0,
        attributeFilter: [
          "disabled"
        ]
      });
    }
  }, [
    r
  ]);
}
let jNe = !1, bb = null, P4 = /* @__PURE__ */ new Set(), Lg = /* @__PURE__ */ new Map(), Ou = !1, C4 = !1;
const INe = {
  Tab: !0,
  Escape: !0
};
function t6(e, t) {
  for (let r of P4) r(e, t);
}
function TNe(e) {
  return !(e.metaKey || !ANe() && e.altKey || e.ctrlKey || e.key === "Control" || e.key === "Shift" || e.key === "Meta");
}
function g1(e) {
  Ou = !0, TNe(e) && (bb = "keyboard", t6("keyboard", e));
}
function ho(e) {
  bb = "pointer", (e.type === "mousedown" || e.type === "pointerdown") && (Ou = !0, t6("pointer", e));
}
function AX(e) {
  NNe(e) && (Ou = !0, bb = "virtual");
}
function _X(e) {
  e.target === window || e.target === document || jNe || !e.isTrusted || (!Ou && !C4 && (bb = "virtual", t6("virtual", e)), Ou = !1, C4 = !1);
}
function NX() {
  Ou = !1, C4 = !0;
}
function A4(e) {
  if (typeof window > "u" || Lg.get(qc(e))) return;
  const t = qc(e), r = Sc(e);
  let n = t.HTMLElement.prototype.focus;
  t.HTMLElement.prototype.focus = function() {
    Ou = !0, n.apply(this, arguments);
  }, r.addEventListener("keydown", g1, !0), r.addEventListener("keyup", g1, !0), r.addEventListener("click", AX, !0), t.addEventListener("focus", _X, !0), t.addEventListener("blur", NX, !1), typeof PointerEvent < "u" ? (r.addEventListener("pointerdown", ho, !0), r.addEventListener("pointermove", ho, !0), r.addEventListener("pointerup", ho, !0)) : (r.addEventListener("mousedown", ho, !0), r.addEventListener("mousemove", ho, !0), r.addEventListener("mouseup", ho, !0)), t.addEventListener("beforeunload", () => {
    jX(e);
  }, {
    once: !0
  }), Lg.set(t, {
    focus: n
  });
}
const jX = (e, t) => {
  const r = qc(e), n = Sc(e);
  t && n.removeEventListener("DOMContentLoaded", t), Lg.has(r) && (r.HTMLElement.prototype.focus = Lg.get(r).focus, n.removeEventListener("keydown", g1, !0), n.removeEventListener("keyup", g1, !0), n.removeEventListener("click", AX, !0), r.removeEventListener("focus", _X, !0), r.removeEventListener("blur", NX, !1), typeof PointerEvent < "u" ? (n.removeEventListener("pointerdown", ho, !0), n.removeEventListener("pointermove", ho, !0), n.removeEventListener("pointerup", ho, !0)) : (n.removeEventListener("mousedown", ho, !0), n.removeEventListener("mousemove", ho, !0), n.removeEventListener("mouseup", ho, !0)), Lg.delete(r));
};
function MNe(e) {
  const t = Sc(e);
  let r;
  return t.readyState !== "loading" ? A4(e) : (r = () => {
    A4(e);
  }, t.addEventListener("DOMContentLoaded", r)), () => jX(e, r);
}
typeof document < "u" && MNe();
function IX() {
  return bb !== "pointer";
}
const RNe = /* @__PURE__ */ new Set([
  "checkbox",
  "radio",
  "range",
  "color",
  "file",
  "image",
  "button",
  "submit",
  "reset"
]);
function zNe(e, t, r) {
  let n = Sc(r == null ? void 0 : r.target);
  const o = typeof window < "u" ? qc(r == null ? void 0 : r.target).HTMLInputElement : HTMLInputElement, a = typeof window < "u" ? qc(r == null ? void 0 : r.target).HTMLTextAreaElement : HTMLTextAreaElement, i = typeof window < "u" ? qc(r == null ? void 0 : r.target).HTMLElement : HTMLElement, s = typeof window < "u" ? qc(r == null ? void 0 : r.target).KeyboardEvent : KeyboardEvent;
  return e = e || n.activeElement instanceof o && !RNe.has(n.activeElement.type) || n.activeElement instanceof a || n.activeElement instanceof i && n.activeElement.isContentEditable, !(e && t === "keyboard" && r instanceof s && !INe[r.key]);
}
function FNe(e, t, r) {
  A4(), Ne(() => {
    let n = (o, a) => {
      zNe(!!(r != null && r.isTextInput), o, a) && e(IX());
    };
    return P4.add(n), () => {
      P4.delete(n);
    };
  }, t);
}
function DNe(e) {
  let { isDisabled: t, onFocus: r, onBlur: n, onFocusChange: o } = e;
  const a = et((l) => {
    if (l.target === l.currentTarget)
      return n && n(l), o && o(!1), !0;
  }, [
    n,
    o
  ]), i = CX(a), s = et((l) => {
    const c = Sc(l.target), u = c ? S4(c) : S4();
    l.target === l.currentTarget && u === OX(l.nativeEvent) && (r && r(l), o && o(!0), i(l));
  }, [
    o,
    r,
    i
  ]);
  return {
    focusProps: {
      onFocus: !t && (r || o || n) ? s : void 0,
      onBlur: !t && (n || o) ? a : void 0
    }
  };
}
function LNe(e) {
  let { isDisabled: t, onBlurWithin: r, onFocusWithin: n, onFocusWithinChange: o } = e, a = ie({
    isFocusWithin: !1
  }), { addGlobalListener: i, removeAllGlobalListeners: s } = SX(), l = et((f) => {
    f.currentTarget.contains(f.target) && a.current.isFocusWithin && !f.currentTarget.contains(f.relatedTarget) && (a.current.isFocusWithin = !1, s(), r && r(f), o && o(!1));
  }, [
    r,
    o,
    a,
    s
  ]), c = CX(l), u = et((f) => {
    if (!f.currentTarget.contains(f.target)) return;
    const p = Sc(f.target), v = S4(p);
    if (!a.current.isFocusWithin && v === OX(f.nativeEvent)) {
      n && n(f), o && o(!0), a.current.isFocusWithin = !0, c(f);
      let x = f.currentTarget;
      i(p, "focus", (b) => {
        if (a.current.isFocusWithin && !$X(x, b.target)) {
          let m = new PX("blur", new p.defaultView.FocusEvent("blur", {
            relatedTarget: b.target
          }));
          m.target = x, m.currentTarget = x, l(m);
        }
      }, {
        capture: !0
      });
    }
  }, [
    n,
    o,
    c,
    i,
    l
  ]);
  return t ? {
    focusWithinProps: {
      // These cannot be null, that would conflict in mergeProps
      onFocus: void 0,
      onBlur: void 0
    }
  } : {
    focusWithinProps: {
      onFocus: u,
      onBlur: l
    }
  };
}
let h1 = !1, Rk = 0;
function _4() {
  h1 = !0, setTimeout(() => {
    h1 = !1;
  }, 50);
}
function vR(e) {
  e.pointerType === "touch" && _4();
}
function VNe() {
  if (!(typeof document > "u"))
    return typeof PointerEvent < "u" ? document.addEventListener("pointerup", vR) : document.addEventListener("touchend", _4), Rk++, () => {
      Rk--, !(Rk > 0) && (typeof PointerEvent < "u" ? document.removeEventListener("pointerup", vR) : document.removeEventListener("touchend", _4));
    };
}
function WNe(e) {
  let { onHoverStart: t, onHoverChange: r, onHoverEnd: n, isDisabled: o } = e, [a, i] = _e(!1), s = ie({
    isHovered: !1,
    ignoreEmulatedMouseEvents: !1,
    pointerType: "",
    target: null
  }).current;
  Ne(VNe, []);
  let { addGlobalListener: l, removeAllGlobalListeners: c } = SX(), { hoverProps: u, triggerHoverEnd: f } = Yt(() => {
    let p = (b, m) => {
      if (s.pointerType = m, o || m === "touch" || s.isHovered || !b.currentTarget.contains(b.target)) return;
      s.isHovered = !0;
      let w = b.currentTarget;
      s.target = w, l(Sc(b.target), "pointerover", ($) => {
        s.isHovered && s.target && !$X(s.target, $.target) && v($, $.pointerType);
      }, {
        capture: !0
      }), t && t({
        type: "hoverstart",
        target: w,
        pointerType: m
      }), r && r(!0), i(!0);
    }, v = (b, m) => {
      let w = s.target;
      s.pointerType = "", s.target = null, !(m === "touch" || !s.isHovered || !w) && (s.isHovered = !1, c(), n && n({
        type: "hoverend",
        target: w,
        pointerType: m
      }), r && r(!1), i(!1));
    }, x = {};
    return typeof PointerEvent < "u" ? (x.onPointerEnter = (b) => {
      h1 && b.pointerType === "mouse" || p(b, b.pointerType);
    }, x.onPointerLeave = (b) => {
      !o && b.currentTarget.contains(b.target) && v(b, b.pointerType);
    }) : (x.onTouchStart = () => {
      s.ignoreEmulatedMouseEvents = !0;
    }, x.onMouseEnter = (b) => {
      !s.ignoreEmulatedMouseEvents && !h1 && p(b, "mouse"), s.ignoreEmulatedMouseEvents = !1;
    }, x.onMouseLeave = (b) => {
      !o && b.currentTarget.contains(b.target) && v(b, "mouse");
    }), {
      hoverProps: x,
      triggerHoverEnd: v
    };
  }, [
    t,
    r,
    n,
    o,
    s,
    l,
    c
  ]);
  return Ne(() => {
    o && f({
      currentTarget: s.target
    }, s.pointerType);
  }, [
    o
  ]), {
    hoverProps: u,
    isHovered: a
  };
}
function UNe(e = {}) {
  let { autoFocus: t = !1, isTextInput: r, within: n } = e, o = ie({
    isFocused: !1,
    isFocusVisible: t || IX()
  }), [a, i] = _e(!1), [s, l] = _e(() => o.current.isFocused && o.current.isFocusVisible), c = et(() => l(o.current.isFocused && o.current.isFocusVisible), []), u = et((v) => {
    o.current.isFocused = v, i(v), c();
  }, [
    c
  ]);
  FNe((v) => {
    o.current.isFocusVisible = v, c();
  }, [], {
    isTextInput: r
  });
  let { focusProps: f } = DNe({
    isDisabled: n,
    onFocusChange: u
  }), { focusWithinProps: p } = LNe({
    isDisabled: !n,
    onFocusWithinChange: u
  });
  return {
    isFocused: a,
    isFocusVisible: s,
    focusProps: n ? p : f
  };
}
var YNe = Object.defineProperty, HNe = (e, t, r) => t in e ? YNe(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r }) : e[t] = r, zk = (e, t, r) => (HNe(e, typeof t != "symbol" ? t + "" : t, r), r);
let GNe = class {
  constructor() {
    zk(this, "current", this.detect()), zk(this, "handoffState", "pending"), zk(this, "currentId", 0);
  }
  set(e) {
    this.current !== e && (this.handoffState = "pending", this.currentId = 0, this.current = e);
  }
  reset() {
    this.set(this.detect());
  }
  nextId() {
    return ++this.currentId;
  }
  get isServer() {
    return this.current === "server";
  }
  get isClient() {
    return this.current === "client";
  }
  detect() {
    return typeof window > "u" || typeof document > "u" ? "server" : "client";
  }
  handoff() {
    this.handoffState === "pending" && (this.handoffState = "complete");
  }
  get isHandoffComplete() {
    return this.handoffState === "complete";
  }
}, tu = new GNe();
function yb(e) {
  var t, r;
  return tu.isServer ? null : e ? "ownerDocument" in e ? e.ownerDocument : "current" in e ? (r = (t = e.current) == null ? void 0 : t.ownerDocument) != null ? r : document : null : document;
}
function TX(e) {
  typeof queueMicrotask == "function" ? queueMicrotask(e) : Promise.resolve().then(e).catch((t) => setTimeout(() => {
    throw t;
  }));
}
function Ru() {
  let e = [], t = { addEventListener(r, n, o, a) {
    return r.addEventListener(n, o, a), t.add(() => r.removeEventListener(n, o, a));
  }, requestAnimationFrame(...r) {
    let n = requestAnimationFrame(...r);
    return t.add(() => cancelAnimationFrame(n));
  }, nextFrame(...r) {
    return t.requestAnimationFrame(() => t.requestAnimationFrame(...r));
  }, setTimeout(...r) {
    let n = setTimeout(...r);
    return t.add(() => clearTimeout(n));
  }, microTask(...r) {
    let n = { current: !0 };
    return TX(() => {
      n.current && r[0]();
    }), t.add(() => {
      n.current = !1;
    });
  }, style(r, n, o) {
    let a = r.style.getPropertyValue(n);
    return Object.assign(r.style, { [n]: o }), this.add(() => {
      Object.assign(r.style, { [n]: a });
    });
  }, group(r) {
    let n = Ru();
    return r(n), this.add(() => n.dispose());
  }, add(r) {
    return e.includes(r) || e.push(r), () => {
      let n = e.indexOf(r);
      if (n >= 0) for (let o of e.splice(n, 1)) o();
    };
  }, dispose() {
    for (let r of e.splice(0)) r();
  } };
  return t;
}
function rx() {
  let [e] = _e(Ru);
  return Ne(() => () => e.dispose(), [e]), e;
}
let nn = (e, t) => {
  tu.isServer ? Ne(e, t) : Ri(e, t);
};
function Ai(e) {
  let t = ie(e);
  return nn(() => {
    t.current = e;
  }, [e]), t;
}
let Wt = function(e) {
  let t = Ai(e);
  return ce.useCallback((...r) => t.current(...r), [t]);
};
function qNe(e) {
  let t = e.width / 2, r = e.height / 2;
  return { top: e.clientY - r, right: e.clientX + t, bottom: e.clientY + r, left: e.clientX - t };
}
function BNe(e, t) {
  return !(!e || !t || e.right < t.left || e.left > t.right || e.bottom < t.top || e.top > t.bottom);
}
function XNe({ disabled: e = !1 } = {}) {
  let t = ie(null), [r, n] = _e(!1), o = rx(), a = Wt(() => {
    t.current = null, n(!1), o.dispose();
  }), i = Wt((s) => {
    if (o.dispose(), t.current === null) {
      t.current = s.currentTarget, n(!0);
      {
        let l = yb(s.currentTarget);
        o.addEventListener(l, "pointerup", a, !1), o.addEventListener(l, "pointermove", (c) => {
          if (t.current) {
            let u = qNe(c);
            n(BNe(u, t.current.getBoundingClientRect()));
          }
        }, !1), o.addEventListener(l, "pointercancel", a, !1);
      }
    }
  });
  return { pressed: r, pressProps: e ? {} : { onPointerDown: i, onPointerUp: a, onClick: a } };
}
function N4(...e) {
  return Array.from(new Set(e.flatMap((t) => typeof t == "string" ? t.split(" ") : []))).filter(Boolean).join(" ");
}
function vo(e, t, ...r) {
  if (e in t) {
    let o = t[e];
    return typeof o == "function" ? o(...r) : o;
  }
  let n = new Error(`Tried to handle "${e}" but there is no handler defined. Only defined handlers are: ${Object.keys(t).map((o) => `"${o}"`).join(", ")}.`);
  throw Error.captureStackTrace && Error.captureStackTrace(n, vo), n;
}
var wd = ((e) => (e[e.None = 0] = "None", e[e.RenderStrategy = 1] = "RenderStrategy", e[e.Static = 2] = "Static", e))(wd || {}), _l = ((e) => (e[e.Unmount = 0] = "Unmount", e[e.Hidden = 1] = "Hidden", e))(_l || {});
function Wo() {
  let e = JNe();
  return et((t) => KNe({ mergeRefs: e, ...t }), [e]);
}
function KNe({ ourProps: e, theirProps: t, slot: r, defaultTag: n, features: o, visible: a = !0, name: i, mergeRefs: s }) {
  s = s ?? QNe;
  let l = MX(t, e);
  if (a) return Ey(l, r, n, i, s);
  let c = o ?? 0;
  if (c & 2) {
    let { static: u = !1, ...f } = l;
    if (u) return Ey(f, r, n, i, s);
  }
  if (c & 1) {
    let { unmount: u = !0, ...f } = l;
    return vo(u ? 0 : 1, { 0() {
      return null;
    }, 1() {
      return Ey({ ...f, hidden: !0, style: { display: "none" } }, r, n, i, s);
    } });
  }
  return Ey(l, r, n, i, s);
}
function Ey(e, t = {}, r, n, o) {
  let { as: a = r, children: i, refName: s = "ref", ...l } = Fk(e, ["unmount", "static"]), c = e.ref !== void 0 ? { [s]: e.ref } : {}, u = typeof i == "function" ? i(t) : i;
  "className" in l && l.className && typeof l.className == "function" && (l.className = l.className(t)), l["aria-labelledby"] && l["aria-labelledby"] === l.id && (l["aria-labelledby"] = void 0);
  let f = {};
  if (t) {
    let p = !1, v = [];
    for (let [x, b] of Object.entries(t)) typeof b == "boolean" && (p = !0), b === !0 && v.push(x.replace(/([A-Z])/g, (m) => `-${m.toLowerCase()}`));
    if (p) {
      f["data-headlessui-state"] = v.join(" ");
      for (let x of v) f[`data-${x}`] = "";
    }
  }
  if (a === ar && (Object.keys(jc(l)).length > 0 || Object.keys(jc(f)).length > 0)) if (!Dl(u) || Array.isArray(u) && u.length > 1) {
    if (Object.keys(jc(l)).length > 0) throw new Error(['Passing props on "Fragment"!', "", `The current component <${n} /> is rendering a "Fragment".`, "However we need to passthrough the following props:", Object.keys(jc(l)).concat(Object.keys(jc(f))).map((p) => `  - ${p}`).join(`
`), "", "You can apply a few solutions:", ['Add an `as="..."` prop, to ensure that we render an actual element instead of a "Fragment".', "Render a single element as the child so that we can forward the props onto that element."].map((p) => `  - ${p}`).join(`
`)].join(`
`));
  } else {
    let p = u.props, v = p == null ? void 0 : p.className, x = typeof v == "function" ? (...w) => N4(v(...w), l.className) : N4(v, l.className), b = x ? { className: x } : {}, m = MX(u.props, jc(Fk(l, ["ref"])));
    for (let w in f) w in m && delete f[w];
    return Ll(u, Object.assign({}, m, f, c, { ref: o(ZNe(u), c.ref) }, b));
  }
  return N1(a, Object.assign({}, Fk(l, ["ref"]), a !== ar && c, a !== ar && f), u);
}
function JNe() {
  let e = ie([]), t = et((r) => {
    for (let n of e.current) n != null && (typeof n == "function" ? n(r) : n.current = r);
  }, []);
  return (...r) => {
    if (!r.every((n) => n == null)) return e.current = r, t;
  };
}
function QNe(...e) {
  return e.every((t) => t == null) ? void 0 : (t) => {
    for (let r of e) r != null && (typeof r == "function" ? r(t) : r.current = t);
  };
}
function MX(...e) {
  if (e.length === 0) return {};
  if (e.length === 1) return e[0];
  let t = {}, r = {};
  for (let n of e) for (let o in n) o.startsWith("on") && typeof n[o] == "function" ? (r[o] != null || (r[o] = []), r[o].push(n[o])) : t[o] = n[o];
  if (t.disabled || t["aria-disabled"]) for (let n in r) /^(on(?:Click|Pointer|Mouse|Key)(?:Down|Up|Press)?)$/.test(n) && (r[n] = [(o) => {
    var a;
    return (a = o == null ? void 0 : o.preventDefault) == null ? void 0 : a.call(o);
  }]);
  for (let n in r) Object.assign(t, { [n](o, ...a) {
    let i = r[n];
    for (let s of i) {
      if ((o instanceof Event || (o == null ? void 0 : o.nativeEvent) instanceof Event) && o.defaultPrevented) return;
      s(o, ...a);
    }
  } });
  return t;
}
function RX(...e) {
  if (e.length === 0) return {};
  if (e.length === 1) return e[0];
  let t = {}, r = {};
  for (let n of e) for (let o in n) o.startsWith("on") && typeof n[o] == "function" ? (r[o] != null || (r[o] = []), r[o].push(n[o])) : t[o] = n[o];
  for (let n in r) Object.assign(t, { [n](...o) {
    let a = r[n];
    for (let i of a) i == null || i(...o);
  } });
  return t;
}
function oo(e) {
  var t;
  return Object.assign(Pd(e), { displayName: (t = e.displayName) != null ? t : e.name });
}
function jc(e) {
  let t = Object.assign({}, e);
  for (let r in t) t[r] === void 0 && delete t[r];
  return t;
}
function Fk(e, t = []) {
  let r = Object.assign({}, e);
  for (let n of t) n in r && delete r[n];
  return r;
}
function ZNe(e) {
  return ce.version.split(".")[0] >= "19" ? e.props.ref : e.ref;
}
let eje = "span";
var Rh = ((e) => (e[e.None = 1] = "None", e[e.Focusable = 2] = "Focusable", e[e.Hidden = 4] = "Hidden", e))(Rh || {});
function tje(e, t) {
  var r;
  let { features: n = 1, ...o } = e, a = { ref: t, "aria-hidden": (n & 2) === 2 ? !0 : (r = o["aria-hidden"]) != null ? r : void 0, hidden: (n & 4) === 4 ? !0 : void 0, style: { position: "fixed", top: 1, left: 1, width: 1, height: 0, padding: 0, margin: -1, overflow: "hidden", clip: "rect(0, 0, 0, 0)", whiteSpace: "nowrap", borderWidth: "0", ...(n & 4) === 4 && (n & 2) !== 2 && { display: "none" } } };
  return Wo()({ ourProps: a, theirProps: o, slot: {}, defaultTag: eje, name: "Hidden" });
}
let b1 = oo(tje);
function zX(e) {
  let t = e.parentElement, r = null;
  for (; t && !(t instanceof HTMLFieldSetElement); ) t instanceof HTMLLegendElement && (r = t), t = t.parentElement;
  let n = (t == null ? void 0 : t.getAttribute("disabled")) === "";
  return n && rje(r) ? !1 : n;
}
function rje(e) {
  if (!e) return !1;
  let t = e.previousElementSibling;
  for (; t !== null; ) {
    if (t instanceof HTMLLegendElement) return !1;
    t = t.previousElementSibling;
  }
  return !0;
}
let FX = Symbol();
function DX(e, t = !0) {
  return Object.assign(e, { [FX]: t });
}
function Fo(...e) {
  let t = ie(e);
  Ne(() => {
    t.current = e;
  }, [e]);
  let r = Wt((n) => {
    for (let o of t.current) o != null && (typeof o == "function" ? o(n) : o.current = n);
  });
  return e.every((n) => n == null || (n == null ? void 0 : n[FX])) ? void 0 : r;
}
var wl = ((e) => (e.Space = " ", e.Enter = "Enter", e.Escape = "Escape", e.Backspace = "Backspace", e.Delete = "Delete", e.ArrowLeft = "ArrowLeft", e.ArrowUp = "ArrowUp", e.ArrowRight = "ArrowRight", e.ArrowDown = "ArrowDown", e.Home = "Home", e.End = "End", e.PageUp = "PageUp", e.PageDown = "PageDown", e.Tab = "Tab", e))(wl || {});
let nje = Br(() => {
});
function oje({ value: e, children: t }) {
  return ce.createElement(nje.Provider, { value: e }, t);
}
function aje(e) {
  if (e === null) return { width: 0, height: 0 };
  let { width: t, height: r } = e.getBoundingClientRect();
  return { width: t, height: r };
}
function ije(e, t = !1) {
  let [r, n] = uF(() => ({}), {}), o = Yt(() => aje(e), [e, r]);
  return nn(() => {
    if (!e) return;
    let a = new ResizeObserver(n);
    return a.observe(e), () => {
      a.disconnect();
    };
  }, [e]), t ? { width: `${o.width}px`, height: `${o.height}px` } : o;
}
let sje = class extends Map {
  constructor(e) {
    super(), this.factory = e;
  }
  get(e) {
    let t = super.get(e);
    return t === void 0 && (t = this.factory(e), this.set(e, t)), t;
  }
};
function LX(e, t) {
  let r = e(), n = /* @__PURE__ */ new Set();
  return { getSnapshot() {
    return r;
  }, subscribe(o) {
    return n.add(o), () => n.delete(o);
  }, dispatch(o, ...a) {
    let i = t[o].call(r, ...a);
    i && (r = i, n.forEach((s) => s()));
  } };
}
function VX(e) {
  return pZ(e.subscribe, e.getSnapshot, e.getSnapshot);
}
let lje = new sje(() => LX(() => [], { ADD(e) {
  return this.includes(e) ? this : [...this, e];
}, REMOVE(e) {
  let t = this.indexOf(e);
  if (t === -1) return this;
  let r = this.slice();
  return r.splice(t, 1), r;
} }));
function WX(e, t) {
  let r = lje.get(t), n = Bg(), o = VX(r);
  if (nn(() => {
    if (e) return r.dispatch("ADD", n), () => r.dispatch("REMOVE", n);
  }, [r, e]), !e) return !1;
  let a = o.indexOf(n), i = o.length;
  return a === -1 && (a = i, i += 1), a === i - 1;
}
function cje(e, t, r) {
  let n = Ai((o) => {
    let a = o.getBoundingClientRect();
    a.x === 0 && a.y === 0 && a.width === 0 && a.height === 0 && r();
  });
  Ne(() => {
    if (!e) return;
    let o = t === null ? null : t instanceof HTMLElement ? t : t.current;
    if (!o) return;
    let a = Ru();
    if (typeof ResizeObserver < "u") {
      let i = new ResizeObserver(() => n.current(o));
      i.observe(o), a.add(() => i.disconnect());
    }
    if (typeof IntersectionObserver < "u") {
      let i = new IntersectionObserver(() => n.current(o));
      i.observe(o), a.add(() => i.disconnect());
    }
    return () => a.dispose();
  }, [t, n, e]);
}
let j4 = ["[contentEditable=true]", "[tabindex]", "a[href]", "area[href]", "button:not([disabled])", "iframe", "input:not([disabled])", "select:not([disabled])", "textarea:not([disabled])"].map((e) => `${e}:not([tabindex='-1'])`).join(","), uje = ["[data-autofocus]"].map((e) => `${e}:not([tabindex='-1'])`).join(",");
var si = ((e) => (e[e.First = 1] = "First", e[e.Previous = 2] = "Previous", e[e.Next = 4] = "Next", e[e.Last = 8] = "Last", e[e.WrapAround = 16] = "WrapAround", e[e.NoScroll = 32] = "NoScroll", e[e.AutoFocus = 64] = "AutoFocus", e))(si || {}), y1 = ((e) => (e[e.Error = 0] = "Error", e[e.Overflow = 1] = "Overflow", e[e.Success = 2] = "Success", e[e.Underflow = 3] = "Underflow", e))(y1 || {}), fje = ((e) => (e[e.Previous = -1] = "Previous", e[e.Next = 1] = "Next", e))(fje || {});
function nx(e = document.body) {
  return e == null ? [] : Array.from(e.querySelectorAll(j4)).sort((t, r) => Math.sign((t.tabIndex || Number.MAX_SAFE_INTEGER) - (r.tabIndex || Number.MAX_SAFE_INTEGER)));
}
function dje(e = document.body) {
  return e == null ? [] : Array.from(e.querySelectorAll(uje)).sort((t, r) => Math.sign((t.tabIndex || Number.MAX_SAFE_INTEGER) - (r.tabIndex || Number.MAX_SAFE_INTEGER)));
}
var r6 = ((e) => (e[e.Strict = 0] = "Strict", e[e.Loose = 1] = "Loose", e))(r6 || {});
function UX(e, t = 0) {
  var r;
  return e === ((r = yb(e)) == null ? void 0 : r.body) ? !1 : vo(t, { 0() {
    return e.matches(j4);
  }, 1() {
    let n = e;
    for (; n !== null; ) {
      if (n.matches(j4)) return !0;
      n = n.parentElement;
    }
    return !1;
  } });
}
var pje = ((e) => (e[e.Keyboard = 0] = "Keyboard", e[e.Mouse = 1] = "Mouse", e))(pje || {});
typeof window < "u" && typeof document < "u" && (document.addEventListener("keydown", (e) => {
  e.metaKey || e.altKey || e.ctrlKey || (document.documentElement.dataset.headlessuiFocusVisible = "");
}, !0), document.addEventListener("click", (e) => {
  e.detail === 1 ? delete document.documentElement.dataset.headlessuiFocusVisible : e.detail === 0 && (document.documentElement.dataset.headlessuiFocusVisible = "");
}, !0));
let mje = ["textarea", "input"].join(",");
function gje(e) {
  var t, r;
  return (r = (t = e == null ? void 0 : e.matches) == null ? void 0 : t.call(e, mje)) != null ? r : !1;
}
function hje(e, t = (r) => r) {
  return e.slice().sort((r, n) => {
    let o = t(r), a = t(n);
    if (o === null || a === null) return 0;
    let i = o.compareDocumentPosition(a);
    return i & Node.DOCUMENT_POSITION_FOLLOWING ? -1 : i & Node.DOCUMENT_POSITION_PRECEDING ? 1 : 0;
  });
}
function Bc(e, t, { sorted: r = !0, relativeTo: n = null, skipElements: o = [] } = {}) {
  let a = Array.isArray(e) ? e.length > 0 ? e[0].ownerDocument : document : e.ownerDocument, i = Array.isArray(e) ? r ? hje(e) : e : t & 64 ? dje(e) : nx(e);
  o.length > 0 && i.length > 1 && (i = i.filter((v) => !o.some((x) => x != null && "current" in x ? (x == null ? void 0 : x.current) === v : x === v))), n = n ?? a.activeElement;
  let s = (() => {
    if (t & 5) return 1;
    if (t & 10) return -1;
    throw new Error("Missing Focus.First, Focus.Previous, Focus.Next or Focus.Last");
  })(), l = (() => {
    if (t & 1) return 0;
    if (t & 2) return Math.max(0, i.indexOf(n)) - 1;
    if (t & 4) return Math.max(0, i.indexOf(n)) + 1;
    if (t & 8) return i.length - 1;
    throw new Error("Missing Focus.First, Focus.Previous, Focus.Next or Focus.Last");
  })(), c = t & 32 ? { preventScroll: !0 } : {}, u = 0, f = i.length, p;
  do {
    if (u >= f || u + f <= 0) return 0;
    let v = l + u;
    if (t & 16) v = (v + f) % f;
    else {
      if (v < 0) return 3;
      if (v >= f) return 1;
    }
    p = i[v], p == null || p.focus(c), u += s;
  } while (p !== a.activeElement);
  return t & 6 && gje(p) && p.select(), 2;
}
function YX() {
  return /iPhone/gi.test(window.navigator.platform) || /Mac/gi.test(window.navigator.platform) && window.navigator.maxTouchPoints > 0;
}
function bje() {
  return /Android/gi.test(window.navigator.userAgent);
}
function yje() {
  return YX() || bje();
}
function Lm(e, t, r, n) {
  let o = Ai(r);
  Ne(() => {
    if (!e) return;
    function a(i) {
      o.current(i);
    }
    return document.addEventListener(t, a, n), () => document.removeEventListener(t, a, n);
  }, [e, t, n]);
}
function HX(e, t, r, n) {
  let o = Ai(r);
  Ne(() => {
    if (!e) return;
    function a(i) {
      o.current(i);
    }
    return window.addEventListener(t, a, n), () => window.removeEventListener(t, a, n);
  }, [e, t, n]);
}
const xR = 30;
function vje(e, t, r) {
  let n = WX(e, "outside-click"), o = Ai(r), a = et(function(l, c) {
    if (l.defaultPrevented) return;
    let u = c(l);
    if (u === null || !u.getRootNode().contains(u) || !u.isConnected) return;
    let f = function p(v) {
      return typeof v == "function" ? p(v()) : Array.isArray(v) || v instanceof Set ? v : [v];
    }(t);
    for (let p of f) if (p !== null && (p.contains(u) || l.composed && l.composedPath().includes(p))) return;
    return !UX(u, r6.Loose) && u.tabIndex !== -1 && l.preventDefault(), o.current(l, u);
  }, [o, t]), i = ie(null);
  Lm(n, "pointerdown", (l) => {
    var c, u;
    i.current = ((u = (c = l.composedPath) == null ? void 0 : c.call(l)) == null ? void 0 : u[0]) || l.target;
  }, !0), Lm(n, "mousedown", (l) => {
    var c, u;
    i.current = ((u = (c = l.composedPath) == null ? void 0 : c.call(l)) == null ? void 0 : u[0]) || l.target;
  }, !0), Lm(n, "click", (l) => {
    yje() || i.current && (a(l, () => i.current), i.current = null);
  }, !0);
  let s = ie({ x: 0, y: 0 });
  Lm(n, "touchstart", (l) => {
    s.current.x = l.touches[0].clientX, s.current.y = l.touches[0].clientY;
  }, !0), Lm(n, "touchend", (l) => {
    let c = { x: l.changedTouches[0].clientX, y: l.changedTouches[0].clientY };
    if (!(Math.abs(c.x - s.current.x) >= xR || Math.abs(c.y - s.current.y) >= xR)) return a(l, () => l.target instanceof HTMLElement ? l.target : null);
  }, !0), HX(n, "blur", (l) => a(l, () => window.document.activeElement instanceof HTMLIFrameElement ? window.document.activeElement : null), !0);
}
function kd(...e) {
  return Yt(() => yb(...e), [...e]);
}
function xje(e, t, r, n) {
  let o = Ai(r);
  Ne(() => {
    e = e ?? window;
    function a(i) {
      o.current(i);
    }
    return e.addEventListener(t, a, n), () => e.removeEventListener(t, a, n);
  }, [e, t, n]);
}
function wje(e, t) {
  return Yt(() => {
    var r;
    if (e.type) return e.type;
    let n = (r = e.as) != null ? r : "button";
    if (typeof n == "string" && n.toLowerCase() === "button" || (t == null ? void 0 : t.tagName) === "BUTTON" && !t.hasAttribute("type")) return "button";
  }, [e.type, e.as, t]);
}
function kje() {
  let e;
  return { before({ doc: t }) {
    var r;
    let n = t.documentElement, o = (r = t.defaultView) != null ? r : window;
    e = Math.max(0, o.innerWidth - n.clientWidth);
  }, after({ doc: t, d: r }) {
    let n = t.documentElement, o = Math.max(0, n.clientWidth - n.offsetWidth), a = Math.max(0, e - o);
    r.style(n, "paddingRight", `${a}px`);
  } };
}
function $je() {
  return YX() ? { before({ doc: e, d: t, meta: r }) {
    function n(o) {
      return r.containers.flatMap((a) => a()).some((a) => a.contains(o));
    }
    t.microTask(() => {
      var o;
      if (window.getComputedStyle(e.documentElement).scrollBehavior !== "auto") {
        let s = Ru();
        s.style(e.documentElement, "scrollBehavior", "auto"), t.add(() => t.microTask(() => s.dispose()));
      }
      let a = (o = window.scrollY) != null ? o : window.pageYOffset, i = null;
      t.addEventListener(e, "click", (s) => {
        if (s.target instanceof HTMLElement) try {
          let l = s.target.closest("a");
          if (!l) return;
          let { hash: c } = new URL(l.href), u = e.querySelector(c);
          u && !n(u) && (i = u);
        } catch {
        }
      }, !0), t.addEventListener(e, "touchstart", (s) => {
        if (s.target instanceof HTMLElement) if (n(s.target)) {
          let l = s.target;
          for (; l.parentElement && n(l.parentElement); ) l = l.parentElement;
          t.style(l, "overscrollBehavior", "contain");
        } else t.style(s.target, "touchAction", "none");
      }), t.addEventListener(e, "touchmove", (s) => {
        if (s.target instanceof HTMLElement) {
          if (s.target.tagName === "INPUT") return;
          if (n(s.target)) {
            let l = s.target;
            for (; l.parentElement && l.dataset.headlessuiPortal !== "" && !(l.scrollHeight > l.clientHeight || l.scrollWidth > l.clientWidth); ) l = l.parentElement;
            l.dataset.headlessuiPortal === "" && s.preventDefault();
          } else s.preventDefault();
        }
      }, { passive: !1 }), t.add(() => {
        var s;
        let l = (s = window.scrollY) != null ? s : window.pageYOffset;
        a !== l && window.scrollTo(0, a), i && i.isConnected && (i.scrollIntoView({ block: "nearest" }), i = null);
      });
    });
  } } : {};
}
function Oje() {
  return { before({ doc: e, d: t }) {
    t.style(e.documentElement, "overflow", "hidden");
  } };
}
function Eje(e) {
  let t = {};
  for (let r of e) Object.assign(t, r(t));
  return t;
}
let Xc = LX(() => /* @__PURE__ */ new Map(), { PUSH(e, t) {
  var r;
  let n = (r = this.get(e)) != null ? r : { doc: e, count: 0, d: Ru(), meta: /* @__PURE__ */ new Set() };
  return n.count++, n.meta.add(t), this.set(e, n), this;
}, POP(e, t) {
  let r = this.get(e);
  return r && (r.count--, r.meta.delete(t)), this;
}, SCROLL_PREVENT({ doc: e, d: t, meta: r }) {
  let n = { doc: e, d: t, meta: Eje(r) }, o = [$je(), kje(), Oje()];
  o.forEach(({ before: a }) => a == null ? void 0 : a(n)), o.forEach(({ after: a }) => a == null ? void 0 : a(n));
}, SCROLL_ALLOW({ d: e }) {
  e.dispose();
}, TEARDOWN({ doc: e }) {
  this.delete(e);
} });
Xc.subscribe(() => {
  let e = Xc.getSnapshot(), t = /* @__PURE__ */ new Map();
  for (let [r] of e) t.set(r, r.documentElement.style.overflow);
  for (let r of e.values()) {
    let n = t.get(r.doc) === "hidden", o = r.count !== 0;
    (o && !n || !o && n) && Xc.dispatch(r.count > 0 ? "SCROLL_PREVENT" : "SCROLL_ALLOW", r), r.count === 0 && Xc.dispatch("TEARDOWN", r);
  }
});
function Sje(e, t, r = () => ({ containers: [] })) {
  let n = VX(Xc), o = t ? n.get(t) : void 0, a = o ? o.count > 0 : !1;
  return nn(() => {
    if (!(!t || !e)) return Xc.dispatch("PUSH", t, r), () => Xc.dispatch("POP", t, r);
  }, [e, t]), a;
}
function Pje(e, t, r = () => [document.body]) {
  let n = WX(e, "scroll-lock");
  Sje(n, t, (o) => {
    var a;
    return { containers: [...(a = o.containers) != null ? a : [], r] };
  });
}
function Cje(e = 0) {
  let [t, r] = _e(e), n = et((l) => r(l), [t]), o = et((l) => r((c) => c | l), [t]), a = et((l) => (t & l) === l, [t]), i = et((l) => r((c) => c & ~l), [r]), s = et((l) => r((c) => c ^ l), [r]);
  return { flags: t, setFlag: n, addFlag: o, hasFlag: a, removeFlag: i, toggleFlag: s };
}
var wR, kR;
typeof process < "u" && typeof globalThis < "u" && typeof Element < "u" && ((wR = process == null ? void 0 : process.env) == null ? void 0 : wR.NODE_ENV) === "test" && typeof ((kR = Element == null ? void 0 : Element.prototype) == null ? void 0 : kR.getAnimations) > "u" && (Element.prototype.getAnimations = function() {
  return console.warn(["Headless UI has polyfilled `Element.prototype.getAnimations` for your tests.", "Please install a proper polyfill e.g. `jsdom-testing-mocks`, to silence these warnings.", "", "Example usage:", "```js", "import { mockAnimationsApi } from 'jsdom-testing-mocks'", "mockAnimationsApi()", "```"].join(`
`)), [];
});
var Aje = ((e) => (e[e.None = 0] = "None", e[e.Closed = 1] = "Closed", e[e.Enter = 2] = "Enter", e[e.Leave = 4] = "Leave", e))(Aje || {});
function n6(e) {
  let t = {};
  for (let r in e) e[r] === !0 && (t[`data-${r}`] = "");
  return t;
}
function o6(e, t, r, n) {
  let [o, a] = _e(r), { hasFlag: i, addFlag: s, removeFlag: l } = Cje(e && o ? 3 : 0), c = ie(!1), u = ie(!1), f = rx();
  return nn(() => {
    var p;
    if (e) {
      if (r && a(!0), !t) {
        r && s(3);
        return;
      }
      return (p = n == null ? void 0 : n.start) == null || p.call(n, r), _je(t, { inFlight: c, prepare() {
        u.current ? u.current = !1 : u.current = c.current, c.current = !0, !u.current && (r ? (s(3), l(4)) : (s(4), l(2)));
      }, run() {
        u.current ? r ? (l(3), s(4)) : (l(4), s(3)) : r ? l(1) : s(1);
      }, done() {
        var v;
        u.current && typeof t.getAnimations == "function" && t.getAnimations().length > 0 || (c.current = !1, l(7), r || a(!1), (v = n == null ? void 0 : n.end) == null || v.call(n, r));
      } });
    }
  }, [e, r, t, f]), e ? [o, { closed: i(1), enter: i(2), leave: i(4), transition: i(2) || i(4) }] : [r, { closed: void 0, enter: void 0, leave: void 0, transition: void 0 }];
}
function _je(e, { prepare: t, run: r, done: n, inFlight: o }) {
  let a = Ru();
  return jje(e, { prepare: t, inFlight: o }), a.nextFrame(() => {
    r(), a.requestAnimationFrame(() => {
      a.add(Nje(e, n));
    });
  }), a.dispose;
}
function Nje(e, t) {
  var r, n;
  let o = Ru();
  if (!e) return o.dispose;
  let a = !1;
  o.add(() => {
    a = !0;
  });
  let i = (n = (r = e.getAnimations) == null ? void 0 : r.call(e).filter((s) => s instanceof CSSTransition)) != null ? n : [];
  return i.length === 0 ? (t(), o.dispose) : (Promise.allSettled(i.map((s) => s.finished)).then(() => {
    a || t();
  }), o.dispose);
}
function jje(e, { inFlight: t, prepare: r }) {
  if (t != null && t.current) {
    r();
    return;
  }
  let n = e.style.transition;
  e.style.transition = "none", r(), e.offsetHeight, e.style.transition = n;
}
function ox() {
  return typeof window < "u";
}
function Zd(e) {
  return GX(e) ? (e.nodeName || "").toLowerCase() : "#document";
}
function Bn(e) {
  var t;
  return (e == null || (t = e.ownerDocument) == null ? void 0 : t.defaultView) || window;
}
function Ra(e) {
  var t;
  return (t = (GX(e) ? e.ownerDocument : e.document) || window.document) == null ? void 0 : t.documentElement;
}
function GX(e) {
  return ox() ? e instanceof Node || e instanceof Bn(e).Node : !1;
}
function un(e) {
  return ox() ? e instanceof Element || e instanceof Bn(e).Element : !1;
}
function Ia(e) {
  return ox() ? e instanceof HTMLElement || e instanceof Bn(e).HTMLElement : !1;
}
function $R(e) {
  return !ox() || typeof ShadowRoot > "u" ? !1 : e instanceof ShadowRoot || e instanceof Bn(e).ShadowRoot;
}
function vb(e) {
  const {
    overflow: t,
    overflowX: r,
    overflowY: n,
    display: o
  } = Do(e);
  return /auto|scroll|overlay|hidden|clip/.test(t + n + r) && !["inline", "contents"].includes(o);
}
function Ije(e) {
  return ["table", "td", "th"].includes(Zd(e));
}
function ax(e) {
  return [":popover-open", ":modal"].some((t) => {
    try {
      return e.matches(t);
    } catch {
      return !1;
    }
  });
}
function a6(e) {
  const t = i6(), r = un(e) ? Do(e) : e;
  return ["transform", "translate", "scale", "rotate", "perspective"].some((n) => r[n] ? r[n] !== "none" : !1) || (r.containerType ? r.containerType !== "normal" : !1) || !t && (r.backdropFilter ? r.backdropFilter !== "none" : !1) || !t && (r.filter ? r.filter !== "none" : !1) || ["transform", "translate", "scale", "rotate", "perspective", "filter"].some((n) => (r.willChange || "").includes(n)) || ["paint", "layout", "strict", "content"].some((n) => (r.contain || "").includes(n));
}
function Tje(e) {
  let t = mc(e);
  for (; Ia(t) && !$d(t); ) {
    if (a6(t))
      return t;
    if (ax(t))
      return null;
    t = mc(t);
  }
  return null;
}
function i6() {
  return typeof CSS > "u" || !CSS.supports ? !1 : CSS.supports("-webkit-backdrop-filter", "none");
}
function $d(e) {
  return ["html", "body", "#document"].includes(Zd(e));
}
function Do(e) {
  return Bn(e).getComputedStyle(e);
}
function ix(e) {
  return un(e) ? {
    scrollLeft: e.scrollLeft,
    scrollTop: e.scrollTop
  } : {
    scrollLeft: e.scrollX,
    scrollTop: e.scrollY
  };
}
function mc(e) {
  if (Zd(e) === "html")
    return e;
  const t = (
    // Step into the shadow DOM of the parent of a slotted node.
    e.assignedSlot || // DOM Element detected.
    e.parentNode || // ShadowRoot detected.
    $R(e) && e.host || // Fallback.
    Ra(e)
  );
  return $R(t) ? t.host : t;
}
function qX(e) {
  const t = mc(e);
  return $d(t) ? e.ownerDocument ? e.ownerDocument.body : e.body : Ia(t) && vb(t) ? t : qX(t);
}
function zh(e, t, r) {
  var n;
  t === void 0 && (t = []), r === void 0 && (r = !0);
  const o = qX(e), a = o === ((n = e.ownerDocument) == null ? void 0 : n.body), i = Bn(o);
  if (a) {
    const s = I4(i);
    return t.concat(i, i.visualViewport || [], vb(o) ? o : [], s && r ? zh(s) : []);
  }
  return t.concat(o, zh(o, [], r));
}
function I4(e) {
  return e.parent && Object.getPrototypeOf(e.parent) ? e.frameElement : null;
}
function Mje() {
  const e = navigator.userAgentData;
  return e && Array.isArray(e.brands) ? e.brands.map((t) => {
    let {
      brand: r,
      version: n
    } = t;
    return r + "/" + n;
  }).join(" ") : navigator.userAgent;
}
const Eu = Math.min, cn = Math.max, Fh = Math.round, Sy = Math.floor, _a = (e) => ({
  x: e,
  y: e
}), Rje = {
  left: "right",
  right: "left",
  bottom: "top",
  top: "bottom"
}, zje = {
  start: "end",
  end: "start"
};
function OR(e, t, r) {
  return cn(e, Eu(t, r));
}
function ep(e, t) {
  return typeof e == "function" ? e(t) : e;
}
function gc(e) {
  return e.split("-")[0];
}
function xb(e) {
  return e.split("-")[1];
}
function BX(e) {
  return e === "x" ? "y" : "x";
}
function XX(e) {
  return e === "y" ? "height" : "width";
}
function Su(e) {
  return ["top", "bottom"].includes(gc(e)) ? "y" : "x";
}
function KX(e) {
  return BX(Su(e));
}
function Fje(e, t, r) {
  r === void 0 && (r = !1);
  const n = xb(e), o = KX(e), a = XX(o);
  let i = o === "x" ? n === (r ? "end" : "start") ? "right" : "left" : n === "start" ? "bottom" : "top";
  return t.reference[a] > t.floating[a] && (i = v1(i)), [i, v1(i)];
}
function Dje(e) {
  const t = v1(e);
  return [T4(e), t, T4(t)];
}
function T4(e) {
  return e.replace(/start|end/g, (t) => zje[t]);
}
function Lje(e, t, r) {
  const n = ["left", "right"], o = ["right", "left"], a = ["top", "bottom"], i = ["bottom", "top"];
  switch (e) {
    case "top":
    case "bottom":
      return r ? t ? o : n : t ? n : o;
    case "left":
    case "right":
      return t ? a : i;
    default:
      return [];
  }
}
function Vje(e, t, r, n) {
  const o = xb(e);
  let a = Lje(gc(e), r === "start", n);
  return o && (a = a.map((i) => i + "-" + o), t && (a = a.concat(a.map(T4)))), a;
}
function v1(e) {
  return e.replace(/left|right|bottom|top/g, (t) => Rje[t]);
}
function Wje(e) {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0,
    ...e
  };
}
function Uje(e) {
  return typeof e != "number" ? Wje(e) : {
    top: e,
    right: e,
    bottom: e,
    left: e
  };
}
function x1(e) {
  const {
    x: t,
    y: r,
    width: n,
    height: o
  } = e;
  return {
    width: n,
    height: o,
    top: r,
    left: t,
    right: t + n,
    bottom: r + o,
    x: t,
    y: r
  };
}
function ER(e, t, r) {
  let {
    reference: n,
    floating: o
  } = e;
  const a = Su(t), i = KX(t), s = XX(i), l = gc(t), c = a === "y", u = n.x + n.width / 2 - o.width / 2, f = n.y + n.height / 2 - o.height / 2, p = n[s] / 2 - o[s] / 2;
  let v;
  switch (l) {
    case "top":
      v = {
        x: u,
        y: n.y - o.height
      };
      break;
    case "bottom":
      v = {
        x: u,
        y: n.y + n.height
      };
      break;
    case "right":
      v = {
        x: n.x + n.width,
        y: f
      };
      break;
    case "left":
      v = {
        x: n.x - o.width,
        y: f
      };
      break;
    default:
      v = {
        x: n.x,
        y: n.y
      };
  }
  switch (xb(t)) {
    case "start":
      v[i] -= p * (r && c ? -1 : 1);
      break;
    case "end":
      v[i] += p * (r && c ? -1 : 1);
      break;
  }
  return v;
}
const Yje = async (e, t, r) => {
  const {
    placement: n = "bottom",
    strategy: o = "absolute",
    middleware: a = [],
    platform: i
  } = r, s = a.filter(Boolean), l = await (i.isRTL == null ? void 0 : i.isRTL(t));
  let c = await i.getElementRects({
    reference: e,
    floating: t,
    strategy: o
  }), {
    x: u,
    y: f
  } = ER(c, n, l), p = n, v = {}, x = 0;
  for (let b = 0; b < s.length; b++) {
    const {
      name: m,
      fn: w
    } = s[b], {
      x: $,
      y: E,
      data: S,
      reset: h
    } = await w({
      x: u,
      y: f,
      initialPlacement: n,
      placement: p,
      strategy: o,
      middlewareData: v,
      rects: c,
      platform: i,
      elements: {
        reference: e,
        floating: t
      }
    });
    u = $ ?? u, f = E ?? f, v = {
      ...v,
      [m]: {
        ...v[m],
        ...S
      }
    }, h && x <= 50 && (x++, typeof h == "object" && (h.placement && (p = h.placement), h.rects && (c = h.rects === !0 ? await i.getElementRects({
      reference: e,
      floating: t,
      strategy: o
    }) : h.rects), {
      x: u,
      y: f
    } = ER(c, p, l)), b = -1);
  }
  return {
    x: u,
    y: f,
    placement: p,
    strategy: o,
    middlewareData: v
  };
};
async function sx(e, t) {
  var r;
  t === void 0 && (t = {});
  const {
    x: n,
    y: o,
    platform: a,
    rects: i,
    elements: s,
    strategy: l
  } = e, {
    boundary: c = "clippingAncestors",
    rootBoundary: u = "viewport",
    elementContext: f = "floating",
    altBoundary: p = !1,
    padding: v = 0
  } = ep(t, e), x = Uje(v), b = s[p ? f === "floating" ? "reference" : "floating" : f], m = x1(await a.getClippingRect({
    element: (r = await (a.isElement == null ? void 0 : a.isElement(b))) == null || r ? b : b.contextElement || await (a.getDocumentElement == null ? void 0 : a.getDocumentElement(s.floating)),
    boundary: c,
    rootBoundary: u,
    strategy: l
  })), w = f === "floating" ? {
    x: n,
    y: o,
    width: i.floating.width,
    height: i.floating.height
  } : i.reference, $ = await (a.getOffsetParent == null ? void 0 : a.getOffsetParent(s.floating)), E = await (a.isElement == null ? void 0 : a.isElement($)) ? await (a.getScale == null ? void 0 : a.getScale($)) || {
    x: 1,
    y: 1
  } : {
    x: 1,
    y: 1
  }, S = x1(a.convertOffsetParentRelativeRectToViewportRelativeRect ? await a.convertOffsetParentRelativeRectToViewportRelativeRect({
    elements: s,
    rect: w,
    offsetParent: $,
    strategy: l
  }) : w);
  return {
    top: (m.top - S.top + x.top) / E.y,
    bottom: (S.bottom - m.bottom + x.bottom) / E.y,
    left: (m.left - S.left + x.left) / E.x,
    right: (S.right - m.right + x.right) / E.x
  };
}
const Hje = function(e) {
  return e === void 0 && (e = {}), {
    name: "flip",
    options: e,
    async fn(t) {
      var r, n;
      const {
        placement: o,
        middlewareData: a,
        rects: i,
        initialPlacement: s,
        platform: l,
        elements: c
      } = t, {
        mainAxis: u = !0,
        crossAxis: f = !0,
        fallbackPlacements: p,
        fallbackStrategy: v = "bestFit",
        fallbackAxisSideDirection: x = "none",
        flipAlignment: b = !0,
        ...m
      } = ep(e, t);
      if ((r = a.arrow) != null && r.alignmentOffset)
        return {};
      const w = gc(o), $ = Su(s), E = gc(s) === s, S = await (l.isRTL == null ? void 0 : l.isRTL(c.floating)), h = p || (E || !b ? [v1(s)] : Dje(s)), U = x !== "none";
      !p && U && h.push(...Vje(s, b, x, S));
      const G = [s, ...h], Q = await sx(t, m), Z = [];
      let X = ((n = a.flip) == null ? void 0 : n.overflows) || [];
      if (u && Z.push(Q[w]), f) {
        const V = Fje(o, i, S);
        Z.push(Q[V[0]], Q[V[1]]);
      }
      if (X = [...X, {
        placement: o,
        overflows: Z
      }], !Z.every((V) => V <= 0)) {
        var J, I;
        const V = (((J = a.flip) == null ? void 0 : J.index) || 0) + 1, D = G[V];
        if (D)
          return {
            data: {
              index: V,
              overflows: X
            },
            reset: {
              placement: D
            }
          };
        let F = (I = X.filter((R) => R.overflows[0] <= 0).sort((R, H) => R.overflows[1] - H.overflows[1])[0]) == null ? void 0 : I.placement;
        if (!F)
          switch (v) {
            case "bestFit": {
              var te;
              const R = (te = X.filter((H) => {
                if (U) {
                  const B = Su(H.placement);
                  return B === $ || // Create a bias to the `y` side axis due to horizontal
                  // reading directions favoring greater width.
                  B === "y";
                }
                return !0;
              }).map((H) => [H.placement, H.overflows.filter((B) => B > 0).reduce((B, g) => B + g, 0)]).sort((H, B) => H[1] - B[1])[0]) == null ? void 0 : te[0];
              R && (F = R);
              break;
            }
            case "initialPlacement":
              F = s;
              break;
          }
        if (o !== F)
          return {
            reset: {
              placement: F
            }
          };
      }
      return {};
    }
  };
};
async function Gje(e, t) {
  const {
    placement: r,
    platform: n,
    elements: o
  } = e, a = await (n.isRTL == null ? void 0 : n.isRTL(o.floating)), i = gc(r), s = xb(r), l = Su(r) === "y", c = ["left", "top"].includes(i) ? -1 : 1, u = a && l ? -1 : 1, f = ep(t, e);
  let {
    mainAxis: p,
    crossAxis: v,
    alignmentAxis: x
  } = typeof f == "number" ? {
    mainAxis: f,
    crossAxis: 0,
    alignmentAxis: null
  } : {
    mainAxis: f.mainAxis || 0,
    crossAxis: f.crossAxis || 0,
    alignmentAxis: f.alignmentAxis
  };
  return s && typeof x == "number" && (v = s === "end" ? x * -1 : x), l ? {
    x: v * u,
    y: p * c
  } : {
    x: p * c,
    y: v * u
  };
}
const qje = function(e) {
  return e === void 0 && (e = 0), {
    name: "offset",
    options: e,
    async fn(t) {
      var r, n;
      const {
        x: o,
        y: a,
        placement: i,
        middlewareData: s
      } = t, l = await Gje(t, e);
      return i === ((r = s.offset) == null ? void 0 : r.placement) && (n = s.arrow) != null && n.alignmentOffset ? {} : {
        x: o + l.x,
        y: a + l.y,
        data: {
          ...l,
          placement: i
        }
      };
    }
  };
}, Bje = function(e) {
  return e === void 0 && (e = {}), {
    name: "shift",
    options: e,
    async fn(t) {
      const {
        x: r,
        y: n,
        placement: o
      } = t, {
        mainAxis: a = !0,
        crossAxis: i = !1,
        limiter: s = {
          fn: (m) => {
            let {
              x: w,
              y: $
            } = m;
            return {
              x: w,
              y: $
            };
          }
        },
        ...l
      } = ep(e, t), c = {
        x: r,
        y: n
      }, u = await sx(t, l), f = Su(gc(o)), p = BX(f);
      let v = c[p], x = c[f];
      if (a) {
        const m = p === "y" ? "top" : "left", w = p === "y" ? "bottom" : "right", $ = v + u[m], E = v - u[w];
        v = OR($, v, E);
      }
      if (i) {
        const m = f === "y" ? "top" : "left", w = f === "y" ? "bottom" : "right", $ = x + u[m], E = x - u[w];
        x = OR($, x, E);
      }
      const b = s.fn({
        ...t,
        [p]: v,
        [f]: x
      });
      return {
        ...b,
        data: {
          x: b.x - r,
          y: b.y - n,
          enabled: {
            [p]: a,
            [f]: i
          }
        }
      };
    }
  };
}, Xje = function(e) {
  return e === void 0 && (e = {}), {
    name: "size",
    options: e,
    async fn(t) {
      var r, n;
      const {
        placement: o,
        rects: a,
        platform: i,
        elements: s
      } = t, {
        apply: l = () => {
        },
        ...c
      } = ep(e, t), u = await sx(t, c), f = gc(o), p = xb(o), v = Su(o) === "y", {
        width: x,
        height: b
      } = a.floating;
      let m, w;
      f === "top" || f === "bottom" ? (m = f, w = p === (await (i.isRTL == null ? void 0 : i.isRTL(s.floating)) ? "start" : "end") ? "left" : "right") : (w = f, m = p === "end" ? "top" : "bottom");
      const $ = b - u.top - u.bottom, E = x - u.left - u.right, S = Eu(b - u[m], $), h = Eu(x - u[w], E), U = !t.middlewareData.shift;
      let G = S, Q = h;
      if ((r = t.middlewareData.shift) != null && r.enabled.x && (Q = E), (n = t.middlewareData.shift) != null && n.enabled.y && (G = $), U && !p) {
        const X = cn(u.left, 0), J = cn(u.right, 0), I = cn(u.top, 0), te = cn(u.bottom, 0);
        v ? Q = x - 2 * (X !== 0 || J !== 0 ? X + J : cn(u.left, u.right)) : G = b - 2 * (I !== 0 || te !== 0 ? I + te : cn(u.top, u.bottom));
      }
      await l({
        ...t,
        availableWidth: Q,
        availableHeight: G
      });
      const Z = await i.getDimensions(s.floating);
      return x !== Z.width || b !== Z.height ? {
        reset: {
          rects: !0
        }
      } : {};
    }
  };
};
function JX(e) {
  const t = Do(e);
  let r = parseFloat(t.width) || 0, n = parseFloat(t.height) || 0;
  const o = Ia(e), a = o ? e.offsetWidth : r, i = o ? e.offsetHeight : n, s = Fh(r) !== a || Fh(n) !== i;
  return s && (r = a, n = i), {
    width: r,
    height: n,
    $: s
  };
}
function s6(e) {
  return un(e) ? e : e.contextElement;
}
function ed(e) {
  const t = s6(e);
  if (!Ia(t))
    return _a(1);
  const r = t.getBoundingClientRect(), {
    width: n,
    height: o,
    $: a
  } = JX(t);
  let i = (a ? Fh(r.width) : r.width) / n, s = (a ? Fh(r.height) : r.height) / o;
  return (!i || !Number.isFinite(i)) && (i = 1), (!s || !Number.isFinite(s)) && (s = 1), {
    x: i,
    y: s
  };
}
const Kje = /* @__PURE__ */ _a(0);
function QX(e) {
  const t = Bn(e);
  return !i6() || !t.visualViewport ? Kje : {
    x: t.visualViewport.offsetLeft,
    y: t.visualViewport.offsetTop
  };
}
function Jje(e, t, r) {
  return t === void 0 && (t = !1), !r || t && r !== Bn(e) ? !1 : t;
}
function Pu(e, t, r, n) {
  t === void 0 && (t = !1), r === void 0 && (r = !1);
  const o = e.getBoundingClientRect(), a = s6(e);
  let i = _a(1);
  t && (n ? un(n) && (i = ed(n)) : i = ed(e));
  const s = Jje(a, r, n) ? QX(a) : _a(0);
  let l = (o.left + s.x) / i.x, c = (o.top + s.y) / i.y, u = o.width / i.x, f = o.height / i.y;
  if (a) {
    const p = Bn(a), v = n && un(n) ? Bn(n) : n;
    let x = p, b = I4(x);
    for (; b && n && v !== x; ) {
      const m = ed(b), w = b.getBoundingClientRect(), $ = Do(b), E = w.left + (b.clientLeft + parseFloat($.paddingLeft)) * m.x, S = w.top + (b.clientTop + parseFloat($.paddingTop)) * m.y;
      l *= m.x, c *= m.y, u *= m.x, f *= m.y, l += E, c += S, x = Bn(b), b = I4(x);
    }
  }
  return x1({
    width: u,
    height: f,
    x: l,
    y: c
  });
}
function l6(e, t) {
  const r = ix(e).scrollLeft;
  return t ? t.left + r : Pu(Ra(e)).left + r;
}
function ZX(e, t, r) {
  r === void 0 && (r = !1);
  const n = e.getBoundingClientRect(), o = n.left + t.scrollLeft - (r ? 0 : (
    // RTL <body> scrollbar.
    l6(e, n)
  )), a = n.top + t.scrollTop;
  return {
    x: o,
    y: a
  };
}
function Qje(e) {
  let {
    elements: t,
    rect: r,
    offsetParent: n,
    strategy: o
  } = e;
  const a = o === "fixed", i = Ra(n), s = t ? ax(t.floating) : !1;
  if (n === i || s && a)
    return r;
  let l = {
    scrollLeft: 0,
    scrollTop: 0
  }, c = _a(1);
  const u = _a(0), f = Ia(n);
  if ((f || !f && !a) && ((Zd(n) !== "body" || vb(i)) && (l = ix(n)), Ia(n))) {
    const v = Pu(n);
    c = ed(n), u.x = v.x + n.clientLeft, u.y = v.y + n.clientTop;
  }
  const p = i && !f && !a ? ZX(i, l, !0) : _a(0);
  return {
    width: r.width * c.x,
    height: r.height * c.y,
    x: r.x * c.x - l.scrollLeft * c.x + u.x + p.x,
    y: r.y * c.y - l.scrollTop * c.y + u.y + p.y
  };
}
function Zje(e) {
  return Array.from(e.getClientRects());
}
function eIe(e) {
  const t = Ra(e), r = ix(e), n = e.ownerDocument.body, o = cn(t.scrollWidth, t.clientWidth, n.scrollWidth, n.clientWidth), a = cn(t.scrollHeight, t.clientHeight, n.scrollHeight, n.clientHeight);
  let i = -r.scrollLeft + l6(e);
  const s = -r.scrollTop;
  return Do(n).direction === "rtl" && (i += cn(t.clientWidth, n.clientWidth) - o), {
    width: o,
    height: a,
    x: i,
    y: s
  };
}
function tIe(e, t) {
  const r = Bn(e), n = Ra(e), o = r.visualViewport;
  let a = n.clientWidth, i = n.clientHeight, s = 0, l = 0;
  if (o) {
    a = o.width, i = o.height;
    const c = i6();
    (!c || c && t === "fixed") && (s = o.offsetLeft, l = o.offsetTop);
  }
  return {
    width: a,
    height: i,
    x: s,
    y: l
  };
}
function rIe(e, t) {
  const r = Pu(e, !0, t === "fixed"), n = r.top + e.clientTop, o = r.left + e.clientLeft, a = Ia(e) ? ed(e) : _a(1), i = e.clientWidth * a.x, s = e.clientHeight * a.y, l = o * a.x, c = n * a.y;
  return {
    width: i,
    height: s,
    x: l,
    y: c
  };
}
function SR(e, t, r) {
  let n;
  if (t === "viewport")
    n = tIe(e, r);
  else if (t === "document")
    n = eIe(Ra(e));
  else if (un(t))
    n = rIe(t, r);
  else {
    const o = QX(e);
    n = {
      x: t.x - o.x,
      y: t.y - o.y,
      width: t.width,
      height: t.height
    };
  }
  return x1(n);
}
function eK(e, t) {
  const r = mc(e);
  return r === t || !un(r) || $d(r) ? !1 : Do(r).position === "fixed" || eK(r, t);
}
function nIe(e, t) {
  const r = t.get(e);
  if (r)
    return r;
  let n = zh(e, [], !1).filter((s) => un(s) && Zd(s) !== "body"), o = null;
  const a = Do(e).position === "fixed";
  let i = a ? mc(e) : e;
  for (; un(i) && !$d(i); ) {
    const s = Do(i), l = a6(i);
    !l && s.position === "fixed" && (o = null), (a ? !l && !o : !l && s.position === "static" && o && ["absolute", "fixed"].includes(o.position) || vb(i) && !l && eK(e, i)) ? n = n.filter((c) => c !== i) : o = s, i = mc(i);
  }
  return t.set(e, n), n;
}
function oIe(e) {
  let {
    element: t,
    boundary: r,
    rootBoundary: n,
    strategy: o
  } = e;
  const a = [...r === "clippingAncestors" ? ax(t) ? [] : nIe(t, this._c) : [].concat(r), n], i = a[0], s = a.reduce((l, c) => {
    const u = SR(t, c, o);
    return l.top = cn(u.top, l.top), l.right = Eu(u.right, l.right), l.bottom = Eu(u.bottom, l.bottom), l.left = cn(u.left, l.left), l;
  }, SR(t, i, o));
  return {
    width: s.right - s.left,
    height: s.bottom - s.top,
    x: s.left,
    y: s.top
  };
}
function aIe(e) {
  const {
    width: t,
    height: r
  } = JX(e);
  return {
    width: t,
    height: r
  };
}
function iIe(e, t, r) {
  const n = Ia(t), o = Ra(t), a = r === "fixed", i = Pu(e, !0, a, t);
  let s = {
    scrollLeft: 0,
    scrollTop: 0
  };
  const l = _a(0);
  if (n || !n && !a)
    if ((Zd(t) !== "body" || vb(o)) && (s = ix(t)), n) {
      const p = Pu(t, !0, a, t);
      l.x = p.x + t.clientLeft, l.y = p.y + t.clientTop;
    } else o && (l.x = l6(o));
  const c = o && !n && !a ? ZX(o, s) : _a(0), u = i.left + s.scrollLeft - l.x - c.x, f = i.top + s.scrollTop - l.y - c.y;
  return {
    x: u,
    y: f,
    width: i.width,
    height: i.height
  };
}
function Dk(e) {
  return Do(e).position === "static";
}
function PR(e, t) {
  if (!Ia(e) || Do(e).position === "fixed")
    return null;
  if (t)
    return t(e);
  let r = e.offsetParent;
  return Ra(e) === r && (r = r.ownerDocument.body), r;
}
function tK(e, t) {
  const r = Bn(e);
  if (ax(e))
    return r;
  if (!Ia(e)) {
    let o = mc(e);
    for (; o && !$d(o); ) {
      if (un(o) && !Dk(o))
        return o;
      o = mc(o);
    }
    return r;
  }
  let n = PR(e, t);
  for (; n && Ije(n) && Dk(n); )
    n = PR(n, t);
  return n && $d(n) && Dk(n) && !a6(n) ? r : n || Tje(e) || r;
}
const sIe = async function(e) {
  const t = this.getOffsetParent || tK, r = this.getDimensions, n = await r(e.floating);
  return {
    reference: iIe(e.reference, await t(e.floating), e.strategy),
    floating: {
      x: 0,
      y: 0,
      width: n.width,
      height: n.height
    }
  };
};
function lIe(e) {
  return Do(e).direction === "rtl";
}
const cIe = {
  convertOffsetParentRelativeRectToViewportRelativeRect: Qje,
  getDocumentElement: Ra,
  getClippingRect: oIe,
  getOffsetParent: tK,
  getElementRects: sIe,
  getClientRects: Zje,
  getDimensions: aIe,
  getScale: ed,
  isElement: un,
  isRTL: lIe
};
function rK(e, t) {
  return e.x === t.x && e.y === t.y && e.width === t.width && e.height === t.height;
}
function uIe(e, t) {
  let r = null, n;
  const o = Ra(e);
  function a() {
    var s;
    clearTimeout(n), (s = r) == null || s.disconnect(), r = null;
  }
  function i(s, l) {
    s === void 0 && (s = !1), l === void 0 && (l = 1), a();
    const c = e.getBoundingClientRect(), {
      left: u,
      top: f,
      width: p,
      height: v
    } = c;
    if (s || t(), !p || !v)
      return;
    const x = Sy(f), b = Sy(o.clientWidth - (u + p)), m = Sy(o.clientHeight - (f + v)), w = Sy(u), $ = {
      rootMargin: -x + "px " + -b + "px " + -m + "px " + -w + "px",
      threshold: cn(0, Eu(1, l)) || 1
    };
    let E = !0;
    function S(h) {
      const U = h[0].intersectionRatio;
      if (U !== l) {
        if (!E)
          return i();
        U ? i(!1, U) : n = setTimeout(() => {
          i(!1, 1e-7);
        }, 1e3);
      }
      U === 1 && !rK(c, e.getBoundingClientRect()) && i(), E = !1;
    }
    try {
      r = new IntersectionObserver(S, {
        ...$,
        // Handle <iframe>s
        root: o.ownerDocument
      });
    } catch {
      r = new IntersectionObserver(S, $);
    }
    r.observe(e);
  }
  return i(!0), a;
}
function fIe(e, t, r, n) {
  n === void 0 && (n = {});
  const {
    ancestorScroll: o = !0,
    ancestorResize: a = !0,
    elementResize: i = typeof ResizeObserver == "function",
    layoutShift: s = typeof IntersectionObserver == "function",
    animationFrame: l = !1
  } = n, c = s6(e), u = o || a ? [...c ? zh(c) : [], ...zh(t)] : [];
  u.forEach((w) => {
    o && w.addEventListener("scroll", r, {
      passive: !0
    }), a && w.addEventListener("resize", r);
  });
  const f = c && s ? uIe(c, r) : null;
  let p = -1, v = null;
  i && (v = new ResizeObserver((w) => {
    let [$] = w;
    $ && $.target === c && v && (v.unobserve(t), cancelAnimationFrame(p), p = requestAnimationFrame(() => {
      var E;
      (E = v) == null || E.observe(t);
    })), r();
  }), c && !l && v.observe(c), v.observe(t));
  let x, b = l ? Pu(e) : null;
  l && m();
  function m() {
    const w = Pu(e);
    b && !rK(b, w) && r(), b = w, x = requestAnimationFrame(m);
  }
  return r(), () => {
    var w;
    u.forEach(($) => {
      o && $.removeEventListener("scroll", r), a && $.removeEventListener("resize", r);
    }), f == null || f(), (w = v) == null || w.disconnect(), v = null, l && cancelAnimationFrame(x);
  };
}
const Lk = sx, dIe = qje, pIe = Bje, mIe = Hje, gIe = Xje, hIe = (e, t, r) => {
  const n = /* @__PURE__ */ new Map(), o = {
    platform: cIe,
    ...r
  }, a = {
    ...o.platform,
    _c: n
  };
  return Yje(e, t, {
    ...o,
    platform: a
  });
};
var bv = typeof document < "u" ? Ri : Ne;
function w1(e, t) {
  if (e === t)
    return !0;
  if (typeof e != typeof t)
    return !1;
  if (typeof e == "function" && e.toString() === t.toString())
    return !0;
  let r, n, o;
  if (e && t && typeof e == "object") {
    if (Array.isArray(e)) {
      if (r = e.length, r !== t.length) return !1;
      for (n = r; n-- !== 0; )
        if (!w1(e[n], t[n]))
          return !1;
      return !0;
    }
    if (o = Object.keys(e), r = o.length, r !== Object.keys(t).length)
      return !1;
    for (n = r; n-- !== 0; )
      if (!{}.hasOwnProperty.call(t, o[n]))
        return !1;
    for (n = r; n-- !== 0; ) {
      const a = o[n];
      if (!(a === "_owner" && e.$$typeof) && !w1(e[a], t[a]))
        return !1;
    }
    return !0;
  }
  return e !== e && t !== t;
}
function nK(e) {
  return typeof window > "u" ? 1 : (e.ownerDocument.defaultView || window).devicePixelRatio || 1;
}
function CR(e, t) {
  const r = nK(e);
  return Math.round(t * r) / r;
}
function Vk(e) {
  const t = Y.useRef(e);
  return bv(() => {
    t.current = e;
  }), t;
}
function bIe(e) {
  e === void 0 && (e = {});
  const {
    placement: t = "bottom",
    strategy: r = "absolute",
    middleware: n = [],
    platform: o,
    elements: {
      reference: a,
      floating: i
    } = {},
    transform: s = !0,
    whileElementsMounted: l,
    open: c
  } = e, [u, f] = Y.useState({
    x: 0,
    y: 0,
    strategy: r,
    placement: t,
    middlewareData: {},
    isPositioned: !1
  }), [p, v] = Y.useState(n);
  w1(p, n) || v(n);
  const [x, b] = Y.useState(null), [m, w] = Y.useState(null), $ = Y.useCallback((H) => {
    H !== U.current && (U.current = H, b(H));
  }, []), E = Y.useCallback((H) => {
    H !== G.current && (G.current = H, w(H));
  }, []), S = a || x, h = i || m, U = Y.useRef(null), G = Y.useRef(null), Q = Y.useRef(u), Z = l != null, X = Vk(l), J = Vk(o), I = Vk(c), te = Y.useCallback(() => {
    if (!U.current || !G.current)
      return;
    const H = {
      placement: t,
      strategy: r,
      middleware: p
    };
    J.current && (H.platform = J.current), hIe(U.current, G.current, H).then((B) => {
      const g = {
        ...B,
        // The floating element's position may be recomputed while it's closed
        // but still mounted (such as when transitioning out). To ensure
        // `isPositioned` will be `false` initially on the next open, avoid
        // setting it to `true` when `open === false` (must be specified).
        isPositioned: I.current !== !1
      };
      V.current && !w1(Q.current, g) && (Q.current = g, ld.flushSync(() => {
        f(g);
      }));
    });
  }, [p, t, r, J, I]);
  bv(() => {
    c === !1 && Q.current.isPositioned && (Q.current.isPositioned = !1, f((H) => ({
      ...H,
      isPositioned: !1
    })));
  }, [c]);
  const V = Y.useRef(!1);
  bv(() => (V.current = !0, () => {
    V.current = !1;
  }), []), bv(() => {
    if (S && (U.current = S), h && (G.current = h), S && h) {
      if (X.current)
        return X.current(S, h, te);
      te();
    }
  }, [S, h, te, X, Z]);
  const D = Y.useMemo(() => ({
    reference: U,
    floating: G,
    setReference: $,
    setFloating: E
  }), [$, E]), F = Y.useMemo(() => ({
    reference: S,
    floating: h
  }), [S, h]), R = Y.useMemo(() => {
    const H = {
      position: r,
      left: 0,
      top: 0
    };
    if (!F.floating)
      return H;
    const B = CR(F.floating, u.x), g = CR(F.floating, u.y);
    return s ? {
      ...H,
      transform: "translate(" + B + "px, " + g + "px)",
      ...nK(F.floating) >= 1.5 && {
        willChange: "transform"
      }
    } : {
      position: r,
      left: B,
      top: g
    };
  }, [r, s, F.floating, u.x, u.y]);
  return Y.useMemo(() => ({
    ...u,
    update: te,
    refs: D,
    elements: F,
    floatingStyles: R
  }), [u, te, D, F, R]);
}
const oK = (e, t) => ({
  ...dIe(e),
  options: [e, t]
}), yIe = (e, t) => ({
  ...pIe(e),
  options: [e, t]
}), vIe = (e, t) => ({
  ...mIe(e),
  options: [e, t]
}), xIe = (e, t) => ({
  ...gIe(e),
  options: [e, t]
}), aK = {
  ...Y
}, wIe = aK.useInsertionEffect, kIe = wIe || ((e) => e());
function iK(e) {
  const t = Y.useRef(() => {
    if (process.env.NODE_ENV !== "production")
      throw new Error("Cannot call an event handler while rendering.");
  });
  return kIe(() => {
    t.current = e;
  }), Y.useCallback(function() {
    for (var r = arguments.length, n = new Array(r), o = 0; o < r; o++)
      n[o] = arguments[o];
    return t.current == null ? void 0 : t.current(...n);
  }, []);
}
var M4 = typeof document < "u" ? Ri : Ne;
let AR = !1, $Ie = 0;
const _R = () => (
  // Ensure the id is unique with multiple independent versions of Floating UI
  // on <React 18
  "floating-ui-" + Math.random().toString(36).slice(2, 6) + $Ie++
);
function OIe() {
  const [e, t] = Y.useState(() => AR ? _R() : void 0);
  return M4(() => {
    e == null && t(_R());
  }, []), Y.useEffect(() => {
    AR = !0;
  }, []), e;
}
const EIe = aK.useId, SIe = EIe || OIe;
let Dh;
process.env.NODE_ENV !== "production" && (Dh = /* @__PURE__ */ new Set());
function PIe() {
  for (var e, t = arguments.length, r = new Array(t), n = 0; n < t; n++)
    r[n] = arguments[n];
  const o = "Floating UI: " + r.join(" ");
  if (!((e = Dh) != null && e.has(o))) {
    var a;
    (a = Dh) == null || a.add(o), console.warn(o);
  }
}
function CIe() {
  for (var e, t = arguments.length, r = new Array(t), n = 0; n < t; n++)
    r[n] = arguments[n];
  const o = "Floating UI: " + r.join(" ");
  if (!((e = Dh) != null && e.has(o))) {
    var a;
    (a = Dh) == null || a.add(o), console.error(o);
  }
}
function AIe() {
  const e = /* @__PURE__ */ new Map();
  return {
    emit(t, r) {
      var n;
      (n = e.get(t)) == null || n.forEach((o) => o(r));
    },
    on(t, r) {
      e.set(t, [...e.get(t) || [], r]);
    },
    off(t, r) {
      var n;
      e.set(t, ((n = e.get(t)) == null ? void 0 : n.filter((o) => o !== r)) || []);
    }
  };
}
const _Ie = /* @__PURE__ */ Y.createContext(null), NIe = /* @__PURE__ */ Y.createContext(null), jIe = () => {
  var e;
  return ((e = Y.useContext(_Ie)) == null ? void 0 : e.id) || null;
}, IIe = () => Y.useContext(NIe), TIe = "data-floating-ui-focusable";
function MIe(e) {
  const {
    open: t = !1,
    onOpenChange: r,
    elements: n
  } = e, o = SIe(), a = Y.useRef({}), [i] = Y.useState(() => AIe()), s = jIe() != null;
  if (process.env.NODE_ENV !== "production") {
    const v = n.reference;
    v && !un(v) && CIe("Cannot pass a virtual element to the `elements.reference` option,", "as it must be a real DOM element. Use `refs.setPositionReference()`", "instead.");
  }
  const [l, c] = Y.useState(n.reference), u = iK((v, x, b) => {
    a.current.openEvent = v ? x : void 0, i.emit("openchange", {
      open: v,
      event: x,
      reason: b,
      nested: s
    }), r == null || r(v, x, b);
  }), f = Y.useMemo(() => ({
    setPositionReference: c
  }), []), p = Y.useMemo(() => ({
    reference: l || n.reference || null,
    floating: n.floating || null,
    domReference: n.reference
  }), [l, n.reference, n.floating]);
  return Y.useMemo(() => ({
    dataRef: a,
    open: t,
    onOpenChange: u,
    elements: p,
    events: i,
    floatingId: o,
    refs: f
  }), [t, u, p, i, o, f]);
}
function RIe(e) {
  e === void 0 && (e = {});
  const {
    nodeId: t
  } = e, r = MIe({
    ...e,
    elements: {
      reference: null,
      floating: null,
      ...e.elements
    }
  }), n = e.rootContext || r, o = n.elements, [a, i] = Y.useState(null), [s, l] = Y.useState(null), c = (o == null ? void 0 : o.domReference) || a, u = Y.useRef(null), f = IIe();
  M4(() => {
    c && (u.current = c);
  }, [c]);
  const p = bIe({
    ...e,
    elements: {
      ...o,
      ...s && {
        reference: s
      }
    }
  }), v = Y.useCallback(($) => {
    const E = un($) ? {
      getBoundingClientRect: () => $.getBoundingClientRect(),
      contextElement: $
    } : $;
    l(E), p.refs.setReference(E);
  }, [p.refs]), x = Y.useCallback(($) => {
    (un($) || $ === null) && (u.current = $, i($)), (un(p.refs.reference.current) || p.refs.reference.current === null || // Don't allow setting virtual elements using the old technique back to
    // `null` to support `positionReference` + an unstable `reference`
    // callback ref.
    $ !== null && !un($)) && p.refs.setReference($);
  }, [p.refs]), b = Y.useMemo(() => ({
    ...p.refs,
    setReference: x,
    setPositionReference: v,
    domReference: u
  }), [p.refs, x, v]), m = Y.useMemo(() => ({
    ...p.elements,
    domReference: c
  }), [p.elements, c]), w = Y.useMemo(() => ({
    ...p,
    ...n,
    refs: b,
    elements: m,
    nodeId: t
  }), [p, b, m, t, n]);
  return M4(() => {
    n.dataRef.current.floatingContext = w;
    const $ = f == null ? void 0 : f.nodesRef.current.find((E) => E.id === t);
    $ && ($.context = w);
  }), Y.useMemo(() => ({
    ...p,
    context: w,
    refs: b,
    elements: m
  }), [p, b, m, w]);
}
const NR = "active", jR = "selected";
function Wk(e, t, r) {
  const n = /* @__PURE__ */ new Map(), o = r === "item";
  let a = e;
  if (o && e) {
    const {
      [NR]: i,
      [jR]: s,
      ...l
    } = e;
    a = l;
  }
  return {
    ...r === "floating" && {
      tabIndex: -1,
      [TIe]: ""
    },
    ...a,
    ...t.map((i) => {
      const s = i ? i[r] : null;
      return typeof s == "function" ? e ? s(e) : null : s;
    }).concat(e).reduce((i, s) => (s && Object.entries(s).forEach((l) => {
      let [c, u] = l;
      if (!(o && [NR, jR].includes(c)))
        if (c.indexOf("on") === 0) {
          if (n.has(c) || n.set(c, []), typeof u == "function") {
            var f;
            (f = n.get(c)) == null || f.push(u), i[c] = function() {
              for (var p, v = arguments.length, x = new Array(v), b = 0; b < v; b++)
                x[b] = arguments[b];
              return (p = n.get(c)) == null ? void 0 : p.map((m) => m(...x)).find((m) => m !== void 0);
            };
          }
        } else
          i[c] = u;
    }), i), {})
  };
}
function zIe(e) {
  e === void 0 && (e = []);
  const t = e.map((s) => s == null ? void 0 : s.reference), r = e.map((s) => s == null ? void 0 : s.floating), n = e.map((s) => s == null ? void 0 : s.item), o = Y.useCallback(
    (s) => Wk(s, e, "reference"),
    // eslint-disable-next-line react-hooks/exhaustive-deps
    t
  ), a = Y.useCallback(
    (s) => Wk(s, e, "floating"),
    // eslint-disable-next-line react-hooks/exhaustive-deps
    r
  ), i = Y.useCallback(
    (s) => Wk(s, e, "item"),
    // eslint-disable-next-line react-hooks/exhaustive-deps
    n
  );
  return Y.useMemo(() => ({
    getReferenceProps: o,
    getFloatingProps: a,
    getItemProps: i
  }), [o, a, i]);
}
function IR(e, t) {
  return {
    ...e,
    rects: {
      ...e.rects,
      floating: {
        ...e.rects.floating,
        height: t
      }
    }
  };
}
const FIe = (e) => ({
  name: "inner",
  options: e,
  async fn(t) {
    const {
      listRef: r,
      overflowRef: n,
      onFallbackChange: o,
      offset: a = 0,
      index: i = 0,
      minItemsVisible: s = 4,
      referenceOverflowThreshold: l = 0,
      scrollRef: c,
      ...u
    } = ep(e, t), {
      rects: f,
      elements: {
        floating: p
      }
    } = t, v = r.current[i], x = (c == null ? void 0 : c.current) || p, b = p.clientTop || x.clientTop, m = p.clientTop !== 0, w = x.clientTop !== 0, $ = p === x;
    if (process.env.NODE_ENV !== "production" && (t.placement.startsWith("bottom") || PIe('`placement` side must be "bottom" when using the `inner`', "middleware.")), !v)
      return {};
    const E = {
      ...t,
      ...await oK(-v.offsetTop - p.clientTop - f.reference.height / 2 - v.offsetHeight / 2 - a).fn(t)
    }, S = await Lk(IR(E, x.scrollHeight + b + p.clientTop), u), h = await Lk(E, {
      ...u,
      elementContext: "reference"
    }), U = cn(0, S.top), G = E.y + U, Q = (x.scrollHeight > x.clientHeight ? (Z) => Z : Fh)(cn(0, x.scrollHeight + (m && $ || w ? b * 2 : 0) - U - cn(0, S.bottom)));
    if (x.style.maxHeight = Q + "px", x.scrollTop = U, o) {
      const Z = x.offsetHeight < v.offsetHeight * Eu(s, r.current.length) - 1 || h.top >= -l || h.bottom >= -l;
      ld.flushSync(() => o(Z));
    }
    return n && (n.current = await Lk(IR({
      ...E,
      y: G
    }, x.offsetHeight + b + p.clientTop), u)), {
      y: G
    };
  }
});
function DIe(e, t) {
  const {
    open: r,
    elements: n
  } = e, {
    enabled: o = !0,
    overflowRef: a,
    scrollRef: i,
    onChange: s
  } = t, l = iK(s), c = Y.useRef(!1), u = Y.useRef(null), f = Y.useRef(null);
  Y.useEffect(() => {
    if (!o) return;
    function v(b) {
      if (b.ctrlKey || !x || a.current == null)
        return;
      const m = b.deltaY, w = a.current.top >= -0.5, $ = a.current.bottom >= -0.5, E = x.scrollHeight - x.clientHeight, S = m < 0 ? -1 : 1, h = m < 0 ? "max" : "min";
      x.scrollHeight <= x.clientHeight || (!w && m > 0 || !$ && m < 0 ? (b.preventDefault(), ld.flushSync(() => {
        l((U) => U + Math[h](m, E * S));
      })) : /firefox/i.test(Mje()) && (x.scrollTop += m));
    }
    const x = (i == null ? void 0 : i.current) || n.floating;
    if (r && x)
      return x.addEventListener("wheel", v), requestAnimationFrame(() => {
        u.current = x.scrollTop, a.current != null && (f.current = {
          ...a.current
        });
      }), () => {
        u.current = null, f.current = null, x.removeEventListener("wheel", v);
      };
  }, [o, r, n.floating, a, i, l]);
  const p = Y.useMemo(() => ({
    onKeyDown() {
      c.current = !0;
    },
    onWheel() {
      c.current = !1;
    },
    onPointerMove() {
      c.current = !1;
    },
    onScroll() {
      const v = (i == null ? void 0 : i.current) || n.floating;
      if (!(!a.current || !v || !c.current)) {
        if (u.current !== null) {
          const x = v.scrollTop - u.current;
          (a.current.bottom < -0.5 && x < -1 || a.current.top < -0.5 && x > 1) && ld.flushSync(() => l((b) => b + x));
        }
        requestAnimationFrame(() => {
          u.current = v.scrollTop;
        });
      }
    }
  }), [n.floating, l, a, i]);
  return Y.useMemo(() => o ? {
    floating: p
  } : {}, [o, p]);
}
let wb = Br({ styles: void 0, setReference: () => {
}, setFloating: () => {
}, getReferenceProps: () => ({}), getFloatingProps: () => ({}), slot: {} });
wb.displayName = "FloatingContext";
let c6 = Br(null);
c6.displayName = "PlacementContext";
function LIe(e) {
  return Yt(() => e ? typeof e == "string" ? { to: e } : e : null, [e]);
}
function VIe() {
  return Ut(wb).setReference;
}
function WIe() {
  let { getFloatingProps: e, slot: t } = Ut(wb);
  return et((...r) => Object.assign({}, e(...r), { "data-anchor": t.anchor }), [e, t]);
}
function UIe(e = null) {
  e === !1 && (e = null), typeof e == "string" && (e = { to: e });
  let t = Ut(c6), r = Yt(() => e, [JSON.stringify(e, (o, a) => {
    var i;
    return (i = a == null ? void 0 : a.outerHTML) != null ? i : a;
  })]);
  nn(() => {
    t == null || t(r ?? null);
  }, [t, r]);
  let n = Ut(wb);
  return Yt(() => [n.setFloating, e ? n.styles : {}], [n.setFloating, e, n.styles]);
}
let TR = 4;
function YIe({ children: e, enabled: t = !0 }) {
  let [r, n] = _e(null), [o, a] = _e(0), i = ie(null), [s, l] = _e(null);
  HIe(s);
  let c = t && r !== null && s !== null, { to: u = "bottom", gap: f = 0, offset: p = 0, padding: v = 0, inner: x } = GIe(r, s), [b, m = "center"] = u.split(" ");
  nn(() => {
    c && a(0);
  }, [c]);
  let { refs: w, floatingStyles: $, context: E } = RIe({ open: c, placement: b === "selection" ? m === "center" ? "bottom" : `bottom-${m}` : m === "center" ? `${b}` : `${b}-${m}`, strategy: "absolute", transform: !1, middleware: [oK({ mainAxis: b === "selection" ? 0 : f, crossAxis: p }), yIe({ padding: v }), b !== "selection" && vIe({ padding: v }), b === "selection" && x ? FIe({ ...x, padding: v, overflowRef: i, offset: o, minItemsVisible: TR, referenceOverflowThreshold: v, onFallbackChange(J) {
    var I, te;
    if (!J) return;
    let V = E.elements.floating;
    if (!V) return;
    let D = parseFloat(getComputedStyle(V).scrollPaddingBottom) || 0, F = Math.min(TR, V.childElementCount), R = 0, H = 0;
    for (let B of (te = (I = E.elements.floating) == null ? void 0 : I.childNodes) != null ? te : []) if (B instanceof HTMLElement) {
      let g = B.offsetTop, d = g + B.clientHeight + D, O = V.scrollTop, C = O + V.clientHeight;
      if (g >= O && d <= C) F--;
      else {
        H = Math.max(0, Math.min(d, C) - Math.max(g, O)), R = B.clientHeight;
        break;
      }
    }
    F >= 1 && a((B) => {
      let g = R * F - H + D;
      return B >= g ? B : g;
    });
  } }) : null, xIe({ padding: v, apply({ availableWidth: J, availableHeight: I, elements: te }) {
    Object.assign(te.floating.style, { overflow: "auto", maxWidth: `${J}px`, maxHeight: `min(var(--anchor-max-height, 100vh), ${I}px)` });
  } })].filter(Boolean), whileElementsMounted: fIe }), [S = b, h = m] = E.placement.split("-");
  b === "selection" && (S = "selection");
  let U = Yt(() => ({ anchor: [S, h].filter(Boolean).join(" ") }), [S, h]), G = DIe(E, { overflowRef: i, onChange: a }), { getReferenceProps: Q, getFloatingProps: Z } = zIe([G]), X = Wt((J) => {
    l(J), w.setFloating(J);
  });
  return Y.createElement(c6.Provider, { value: n }, Y.createElement(wb.Provider, { value: { setFloating: X, setReference: w.setReference, styles: $, getReferenceProps: Q, getFloatingProps: Z, slot: U } }, e));
}
function HIe(e) {
  nn(() => {
    if (!e) return;
    let t = new MutationObserver(() => {
      let r = window.getComputedStyle(e).maxHeight, n = parseFloat(r);
      if (isNaN(n)) return;
      let o = parseInt(r);
      isNaN(o) || n !== o && (e.style.maxHeight = `${Math.ceil(n)}px`);
    });
    return t.observe(e, { attributes: !0, attributeFilter: ["style"] }), () => {
      t.disconnect();
    };
  }, [e]);
}
function GIe(e, t) {
  var r, n, o;
  let a = Uk((r = e == null ? void 0 : e.gap) != null ? r : "var(--anchor-gap, 0)", t), i = Uk((n = e == null ? void 0 : e.offset) != null ? n : "var(--anchor-offset, 0)", t), s = Uk((o = e == null ? void 0 : e.padding) != null ? o : "var(--anchor-padding, 0)", t);
  return { ...e, gap: a, offset: i, padding: s };
}
function Uk(e, t, r = void 0) {
  let n = rx(), o = Wt((l, c) => {
    if (l == null) return [r, null];
    if (typeof l == "number") return [l, null];
    if (typeof l == "string") {
      if (!c) return [r, null];
      let u = MR(l, c);
      return [u, (f) => {
        let p = sK(l);
        {
          let v = p.map((x) => window.getComputedStyle(c).getPropertyValue(x));
          n.requestAnimationFrame(function x() {
            n.nextFrame(x);
            let b = !1;
            for (let [w, $] of p.entries()) {
              let E = window.getComputedStyle(c).getPropertyValue($);
              if (v[w] !== E) {
                v[w] = E, b = !0;
                break;
              }
            }
            if (!b) return;
            let m = MR(l, c);
            u !== m && (f(m), u = m);
          });
        }
        return n.dispose;
      }];
    }
    return [r, null];
  }), a = Yt(() => o(e, t)[0], [e, t]), [i = a, s] = _e();
  return nn(() => {
    let [l, c] = o(e, t);
    if (s(l), !!c) return c(s);
  }, [e, t]), i;
}
function sK(e) {
  let t = /var\((.*)\)/.exec(e);
  if (t) {
    let r = t[1].indexOf(",");
    if (r === -1) return [t[1]];
    let n = t[1].slice(0, r).trim(), o = t[1].slice(r + 1).trim();
    return o ? [n, ...sK(o)] : [n];
  }
  return [];
}
function MR(e, t) {
  let r = document.createElement("div");
  t.appendChild(r), r.style.setProperty("margin-top", "0px", "important"), r.style.setProperty("margin-top", e, "important");
  let n = parseFloat(window.getComputedStyle(r).marginTop) || 0;
  return t.removeChild(r), n;
}
let lx = Br(null);
lx.displayName = "OpenClosedContext";
var qn = ((e) => (e[e.Open = 1] = "Open", e[e.Closed = 2] = "Closed", e[e.Closing = 4] = "Closing", e[e.Opening = 8] = "Opening", e))(qn || {});
function cx() {
  return Ut(lx);
}
function lK({ value: e, children: t }) {
  return ce.createElement(lx.Provider, { value: e }, t);
}
function qIe({ children: e }) {
  return ce.createElement(lx.Provider, { value: null }, e);
}
function BIe(e) {
  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e;
}
function XIe(e) {
  let t = Wt(e), r = ie(!1);
  Ne(() => (r.current = !1, () => {
    r.current = !0, TX(() => {
      r.current && t();
    });
  }), [t]);
}
function KIe() {
  let e = typeof document > "u";
  return "useSyncExternalStore" in Y ? ((t) => t.useSyncExternalStore)(Y)(() => () => {
  }, () => !1, () => !e) : !1;
}
function u6() {
  let e = KIe(), [t, r] = Y.useState(tu.isHandoffComplete);
  return t && tu.isHandoffComplete === !1 && r(!1), Y.useEffect(() => {
    t !== !0 && r(!0);
  }, [t]), Y.useEffect(() => tu.handoff(), []), e ? !1 : t;
}
let JIe = Br(!1);
function QIe() {
  return Ut(JIe);
}
function ZIe(e) {
  let t = QIe(), r = Ut(uK), [n, o] = _e(() => {
    var a;
    if (!t && r !== null) return (a = r.current) != null ? a : null;
    if (tu.isServer) return null;
    let i = e == null ? void 0 : e.getElementById("headlessui-portal-root");
    if (i) return i;
    if (e === null) return null;
    let s = e.createElement("div");
    return s.setAttribute("id", "headlessui-portal-root"), e.body.appendChild(s);
  });
  return Ne(() => {
    n !== null && (e != null && e.body.contains(n) || e == null || e.body.appendChild(n));
  }, [n, e]), Ne(() => {
    t || r !== null && o(r.current);
  }, [r, o, t]), n;
}
let cK = ar, e9e = oo(function(e, t) {
  let { ownerDocument: r = null, ...n } = e, o = ie(null), a = Fo(DX((v) => {
    o.current = v;
  }), t), i = kd(o), s = r ?? i, l = ZIe(s), [c] = _e(() => {
    var v;
    return tu.isServer ? null : (v = s == null ? void 0 : s.createElement("div")) != null ? v : null;
  }), u = Ut(R4), f = u6();
  nn(() => {
    !l || !c || l.contains(c) || (c.setAttribute("data-headlessui-portal", ""), l.appendChild(c));
  }, [l, c]), nn(() => {
    if (c && u) return u.register(c);
  }, [u, c]), XIe(() => {
    var v;
    !l || !c || (c instanceof Node && l.contains(c) && l.removeChild(c), l.childNodes.length <= 0 && ((v = l.parentElement) == null || v.removeChild(l)));
  });
  let p = Wo();
  return f ? !l || !c ? null : mZ(p({ ourProps: { ref: a }, theirProps: n, slot: {}, defaultTag: cK, name: "Portal" }), c) : null;
});
function t9e(e, t) {
  let r = Fo(t), { enabled: n = !0, ownerDocument: o, ...a } = e, i = Wo();
  return n ? ce.createElement(e9e, { ...a, ownerDocument: o, ref: r }) : i({ ourProps: { ref: r }, theirProps: a, slot: {}, defaultTag: cK, name: "Portal" });
}
let r9e = ar, uK = Br(null);
function n9e(e, t) {
  let { target: r, ...n } = e, o = { ref: Fo(t) }, a = Wo();
  return ce.createElement(uK.Provider, { value: r }, a({ ourProps: o, theirProps: n, defaultTag: r9e, name: "Popover.Group" }));
}
let R4 = Br(null);
function o9e() {
  let e = Ut(R4), t = ie([]), r = Wt((a) => (t.current.push(a), e && e.register(a), () => n(a))), n = Wt((a) => {
    let i = t.current.indexOf(a);
    i !== -1 && t.current.splice(i, 1), e && e.unregister(a);
  }), o = Yt(() => ({ register: r, unregister: n, portals: t }), [r, n, t]);
  return [t, Yt(() => function({ children: a }) {
    return ce.createElement(R4.Provider, { value: o }, a);
  }, [o])];
}
let a9e = oo(t9e), i9e = oo(n9e), s9e = Object.assign(a9e, { Group: i9e });
function l9e({ defaultContainers: e = [], portals: t, mainTreeNode: r } = {}) {
  let n = kd(r), o = Wt(() => {
    var a, i;
    let s = [];
    for (let l of e) l !== null && (l instanceof HTMLElement ? s.push(l) : "current" in l && l.current instanceof HTMLElement && s.push(l.current));
    if (t != null && t.current) for (let l of t.current) s.push(l);
    for (let l of (a = n == null ? void 0 : n.querySelectorAll("html > *, body > *")) != null ? a : []) l !== document.body && l !== document.head && l instanceof HTMLElement && l.id !== "headlessui-portal-root" && (r && (l.contains(r) || l.contains((i = r == null ? void 0 : r.getRootNode()) == null ? void 0 : i.host)) || s.some((c) => l.contains(c)) || s.push(l));
    return s;
  });
  return { resolveContainers: o, contains: Wt((a) => o().some((i) => i.contains(a))) };
}
let fK = Br(null);
function dK({ children: e, node: t }) {
  let [r, n] = _e(null), o = pK(t ?? r);
  return ce.createElement(fK.Provider, { value: o }, e, o === null && ce.createElement(b1, { features: Rh.Hidden, ref: (a) => {
    var i, s;
    if (a) {
      for (let l of (s = (i = yb(a)) == null ? void 0 : i.querySelectorAll("html > *, body > *")) != null ? s : []) if (l !== document.body && l !== document.head && l instanceof HTMLElement && l != null && l.contains(a)) {
        n(l);
        break;
      }
    }
  } }));
}
function pK(e = null) {
  var t;
  return (t = Ut(fK)) != null ? t : e;
}
function c9e() {
  let e = ie(!1);
  return nn(() => (e.current = !0, () => {
    e.current = !1;
  }), []), e;
}
var li = ((e) => (e[e.Forwards = 0] = "Forwards", e[e.Backwards = 1] = "Backwards", e))(li || {});
function mK() {
  let e = ie(0);
  return HX(!0, "keydown", (t) => {
    t.key === "Tab" && (e.current = t.shiftKey ? 1 : 0);
  }, !0), e;
}
function gK(e) {
  var t;
  return !!(e.enter || e.enterFrom || e.enterTo || e.leave || e.leaveFrom || e.leaveTo) || ((t = e.as) != null ? t : bK) !== ar || ce.Children.count(e.children) === 1;
}
let ux = Br(null);
ux.displayName = "TransitionContext";
var u9e = ((e) => (e.Visible = "visible", e.Hidden = "hidden", e))(u9e || {});
function f9e() {
  let e = Ut(ux);
  if (e === null) throw new Error("A <Transition.Child /> is used but it is missing a parent <Transition /> or <Transition.Root />.");
  return e;
}
function d9e() {
  let e = Ut(fx);
  if (e === null) throw new Error("A <Transition.Child /> is used but it is missing a parent <Transition /> or <Transition.Root />.");
  return e;
}
let fx = Br(null);
fx.displayName = "NestingContext";
function dx(e) {
  return "children" in e ? dx(e.children) : e.current.filter(({ el: t }) => t.current !== null).filter(({ state: t }) => t === "visible").length > 0;
}
function hK(e, t) {
  let r = Ai(e), n = ie([]), o = c9e(), a = rx(), i = Wt((v, x = _l.Hidden) => {
    let b = n.current.findIndex(({ el: m }) => m === v);
    b !== -1 && (vo(x, { [_l.Unmount]() {
      n.current.splice(b, 1);
    }, [_l.Hidden]() {
      n.current[b].state = "hidden";
    } }), a.microTask(() => {
      var m;
      !dx(n) && o.current && ((m = r.current) == null || m.call(r));
    }));
  }), s = Wt((v) => {
    let x = n.current.find(({ el: b }) => b === v);
    return x ? x.state !== "visible" && (x.state = "visible") : n.current.push({ el: v, state: "visible" }), () => i(v, _l.Unmount);
  }), l = ie([]), c = ie(Promise.resolve()), u = ie({ enter: [], leave: [] }), f = Wt((v, x, b) => {
    l.current.splice(0), t && (t.chains.current[x] = t.chains.current[x].filter(([m]) => m !== v)), t == null || t.chains.current[x].push([v, new Promise((m) => {
      l.current.push(m);
    })]), t == null || t.chains.current[x].push([v, new Promise((m) => {
      Promise.all(u.current[x].map(([w, $]) => $)).then(() => m());
    })]), x === "enter" ? c.current = c.current.then(() => t == null ? void 0 : t.wait.current).then(() => b(x)) : b(x);
  }), p = Wt((v, x, b) => {
    Promise.all(u.current[x].splice(0).map(([m, w]) => w)).then(() => {
      var m;
      (m = l.current.shift()) == null || m();
    }).then(() => b(x));
  });
  return Yt(() => ({ children: n, register: s, unregister: i, onStart: f, onStop: p, wait: c, chains: u }), [s, i, n, f, p, u, c]);
}
let bK = ar, yK = wd.RenderStrategy;
function p9e(e, t) {
  var r, n;
  let { transition: o = !0, beforeEnter: a, afterEnter: i, beforeLeave: s, afterLeave: l, enter: c, enterFrom: u, enterTo: f, entered: p, leave: v, leaveFrom: x, leaveTo: b, ...m } = e, [w, $] = _e(null), E = ie(null), S = gK(e), h = Fo(...S ? [E, t, $] : t === null ? [] : [t]), U = (r = m.unmount) == null || r ? _l.Unmount : _l.Hidden, { show: G, appear: Q, initial: Z } = f9e(), [X, J] = _e(G ? "visible" : "hidden"), I = d9e(), { register: te, unregister: V } = I;
  nn(() => te(E), [te, E]), nn(() => {
    if (U === _l.Hidden && E.current) {
      if (G && X !== "visible") {
        J("visible");
        return;
      }
      return vo(X, { hidden: () => V(E), visible: () => te(E) });
    }
  }, [X, E, te, V, G, U]);
  let D = u6();
  nn(() => {
    if (S && D && X === "visible" && E.current === null) throw new Error("Did you forget to passthrough the `ref` to the actual DOM node?");
  }, [E, X, D, S]);
  let F = Z && !Q, R = Q && G && Z, H = ie(!1), B = hK(() => {
    H.current || (J("hidden"), V(E));
  }, I), g = Wt((_) => {
    H.current = !0;
    let T = _ ? "enter" : "leave";
    B.onStart(E, T, (M) => {
      M === "enter" ? a == null || a() : M === "leave" && (s == null || s());
    });
  }), d = Wt((_) => {
    let T = _ ? "enter" : "leave";
    H.current = !1, B.onStop(E, T, (M) => {
      M === "enter" ? i == null || i() : M === "leave" && (l == null || l());
    }), T === "leave" && !dx(B) && (J("hidden"), V(E));
  });
  Ne(() => {
    S && o || (g(G), d(G));
  }, [G, S, o]);
  let O = !(!o || !S || !D || F), [, C] = o6(O, w, G, { start: g, end: d }), A = jc({ ref: h, className: ((n = N4(m.className, R && c, R && u, C.enter && c, C.enter && C.closed && u, C.enter && !C.closed && f, C.leave && v, C.leave && !C.closed && x, C.leave && C.closed && b, !C.transition && G && p)) == null ? void 0 : n.trim()) || void 0, ...n6(C) }), N = 0;
  X === "visible" && (N |= qn.Open), X === "hidden" && (N |= qn.Closed), G && X === "hidden" && (N |= qn.Opening), !G && X === "visible" && (N |= qn.Closing);
  let j = Wo();
  return ce.createElement(fx.Provider, { value: B }, ce.createElement(lK, { value: N }, j({ ourProps: A, theirProps: m, defaultTag: bK, features: yK, visible: X === "visible", name: "Transition.Child" })));
}
function m9e(e, t) {
  let { show: r, appear: n = !1, unmount: o = !0, ...a } = e, i = ie(null), s = gK(e), l = Fo(...s ? [i, t] : t === null ? [] : [t]);
  u6();
  let c = cx();
  if (r === void 0 && c !== null && (r = (c & qn.Open) === qn.Open), r === void 0) throw new Error("A <Transition /> is used but it is missing a `show={true | false}` prop.");
  let [u, f] = _e(r ? "visible" : "hidden"), p = hK(() => {
    r || f("hidden");
  }), [v, x] = _e(!0), b = ie([r]);
  nn(() => {
    v !== !1 && b.current[b.current.length - 1] !== r && (b.current.push(r), x(!1));
  }, [b, r]);
  let m = Yt(() => ({ show: r, appear: n, initial: v }), [r, n, v]);
  nn(() => {
    r ? f("visible") : !dx(p) && i.current !== null && f("hidden");
  }, [r, p]);
  let w = { unmount: o }, $ = Wt(() => {
    var h;
    v && x(!1), (h = e.beforeEnter) == null || h.call(e);
  }), E = Wt(() => {
    var h;
    v && x(!1), (h = e.beforeLeave) == null || h.call(e);
  }), S = Wo();
  return ce.createElement(fx.Provider, { value: p }, ce.createElement(ux.Provider, { value: m }, S({ ourProps: { ...w, as: ar, children: ce.createElement(vK, { ref: l, ...w, ...a, beforeEnter: $, beforeLeave: E }) }, theirProps: {}, defaultTag: ar, features: yK, visible: u === "visible", name: "Transition" })));
}
function g9e(e, t) {
  let r = Ut(ux) !== null, n = cx() !== null;
  return ce.createElement(ce.Fragment, null, !r && n ? ce.createElement(z4, { ref: t, ...e }) : ce.createElement(vK, { ref: t, ...e }));
}
let z4 = oo(m9e), vK = oo(p9e), h9e = oo(g9e), b9e = Object.assign(z4, { Child: h9e, Root: z4 });
var y9e = ((e) => (e[e.Open = 0] = "Open", e[e.Closed = 1] = "Closed", e))(y9e || {}), v9e = ((e) => (e[e.TogglePopover = 0] = "TogglePopover", e[e.ClosePopover = 1] = "ClosePopover", e[e.SetButton = 2] = "SetButton", e[e.SetButtonId = 3] = "SetButtonId", e[e.SetPanel = 4] = "SetPanel", e[e.SetPanelId = 5] = "SetPanelId", e))(v9e || {});
let x9e = { 0: (e) => ({ ...e, popoverState: vo(e.popoverState, { 0: 1, 1: 0 }), __demoMode: !1 }), 1(e) {
  return e.popoverState === 1 ? e : { ...e, popoverState: 1, __demoMode: !1 };
}, 2(e, t) {
  return e.button === t.button ? e : { ...e, button: t.button };
}, 3(e, t) {
  return e.buttonId === t.buttonId ? e : { ...e, buttonId: t.buttonId };
}, 4(e, t) {
  return e.panel === t.panel ? e : { ...e, panel: t.panel };
}, 5(e, t) {
  return e.panelId === t.panelId ? e : { ...e, panelId: t.panelId };
} }, f6 = Br(null);
f6.displayName = "PopoverContext";
function px(e) {
  let t = Ut(f6);
  if (t === null) {
    let r = new Error(`<${e} /> is missing a parent <Popover /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(r, px), r;
  }
  return t;
}
let mx = Br(null);
mx.displayName = "PopoverAPIContext";
function d6(e) {
  let t = Ut(mx);
  if (t === null) {
    let r = new Error(`<${e} /> is missing a parent <Popover /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(r, d6), r;
  }
  return t;
}
let p6 = Br(null);
p6.displayName = "PopoverGroupContext";
function xK() {
  return Ut(p6);
}
let gx = Br(null);
gx.displayName = "PopoverPanelContext";
function w9e() {
  return Ut(gx);
}
function k9e(e, t) {
  return vo(t.type, x9e, e, t);
}
let $9e = "div";
function O9e(e, t) {
  var r;
  let { __demoMode: n = !1, ...o } = e, a = ie(null), i = Fo(t, DX((B) => {
    a.current = B;
  })), s = ie([]), l = uF(k9e, { __demoMode: n, popoverState: n ? 0 : 1, buttons: s, button: null, buttonId: null, panel: null, panelId: null, beforePanelSentinel: Rx(), afterPanelSentinel: Rx(), afterButtonSentinel: Rx() }), [{ popoverState: c, button: u, buttonId: f, panel: p, panelId: v, beforePanelSentinel: x, afterPanelSentinel: b, afterButtonSentinel: m }, w] = l, $ = kd((r = a.current) != null ? r : u), E = Yt(() => {
    if (!u || !p) return !1;
    for (let N of document.querySelectorAll("body > *")) if (Number(N == null ? void 0 : N.contains(u)) ^ Number(N == null ? void 0 : N.contains(p))) return !0;
    let B = nx(), g = B.indexOf(u), d = (g + B.length - 1) % B.length, O = (g + 1) % B.length, C = B[d], A = B[O];
    return !p.contains(C) && !p.contains(A);
  }, [u, p]), S = Ai(f), h = Ai(v), U = Yt(() => ({ buttonId: S, panelId: h, close: () => w({ type: 1 }) }), [S, h, w]), G = xK(), Q = G == null ? void 0 : G.registerPopover, Z = Wt(() => {
    var B;
    return (B = G == null ? void 0 : G.isFocusWithinPopoverGroup()) != null ? B : ($ == null ? void 0 : $.activeElement) && ((u == null ? void 0 : u.contains($.activeElement)) || (p == null ? void 0 : p.contains($.activeElement)));
  });
  Ne(() => Q == null ? void 0 : Q(U), [Q, U]);
  let [X, J] = o9e(), I = pK(u), te = l9e({ mainTreeNode: I, portals: X, defaultContainers: [u, p] });
  xje($ == null ? void 0 : $.defaultView, "focus", (B) => {
    var g, d, O, C, A, N;
    B.target !== window && B.target instanceof HTMLElement && c === 0 && (Z() || u && p && (te.contains(B.target) || (d = (g = x.current) == null ? void 0 : g.contains) != null && d.call(g, B.target) || (C = (O = b.current) == null ? void 0 : O.contains) != null && C.call(O, B.target) || (N = (A = m.current) == null ? void 0 : A.contains) != null && N.call(A, B.target) || w({ type: 1 })));
  }, !0), vje(c === 0, te.resolveContainers, (B, g) => {
    w({ type: 1 }), UX(g, r6.Loose) || (B.preventDefault(), u == null || u.focus());
  });
  let V = Wt((B) => {
    w({ type: 1 });
    let g = B ? B instanceof HTMLElement ? B : "current" in B && B.current instanceof HTMLElement ? B.current : u : u;
    g == null || g.focus();
  }), D = Yt(() => ({ close: V, isPortalled: E }), [V, E]), F = Yt(() => ({ open: c === 0, close: V }), [c, V]), R = { ref: i }, H = Wo();
  return ce.createElement(dK, { node: I }, ce.createElement(YIe, null, ce.createElement(gx.Provider, { value: null }, ce.createElement(f6.Provider, { value: l }, ce.createElement(mx.Provider, { value: D }, ce.createElement(oje, { value: V }, ce.createElement(lK, { value: vo(c, { 0: qn.Open, 1: qn.Closed }) }, ce.createElement(J, null, H({ ourProps: R, theirProps: o, slot: F, defaultTag: $9e, name: "Popover" })))))))));
}
let E9e = "button";
function S9e(e, t) {
  let r = Bg(), { id: n = `headlessui-popover-button-${r}`, disabled: o = !1, autoFocus: a = !1, ...i } = e, [s, l] = px("Popover.Button"), { isPortalled: c } = d6("Popover.Button"), u = ie(null), f = `headlessui-focus-sentinel-${Bg()}`, p = xK(), v = p == null ? void 0 : p.closeOthers, x = w9e() !== null;
  Ne(() => {
    if (!x) return l({ type: 3, buttonId: n }), () => {
      l({ type: 3, buttonId: null });
    };
  }, [x, n, l]);
  let [b] = _e(() => Symbol()), m = Fo(u, t, VIe(), Wt((g) => {
    if (!x) {
      if (g) s.buttons.current.push(b);
      else {
        let d = s.buttons.current.indexOf(b);
        d !== -1 && s.buttons.current.splice(d, 1);
      }
      s.buttons.current.length > 1 && console.warn("You are already using a <Popover.Button /> but only 1 <Popover.Button /> is supported."), g && l({ type: 2, button: g });
    }
  })), w = Fo(u, t), $ = kd(u), E = Wt((g) => {
    var d, O, C;
    if (x) {
      if (s.popoverState === 1) return;
      switch (g.key) {
        case wl.Space:
        case wl.Enter:
          g.preventDefault(), (O = (d = g.target).click) == null || O.call(d), l({ type: 1 }), (C = s.button) == null || C.focus();
          break;
      }
    } else switch (g.key) {
      case wl.Space:
      case wl.Enter:
        g.preventDefault(), g.stopPropagation(), s.popoverState === 1 && (v == null || v(s.buttonId)), l({ type: 0 });
        break;
      case wl.Escape:
        if (s.popoverState !== 0) return v == null ? void 0 : v(s.buttonId);
        if (!u.current || $ != null && $.activeElement && !u.current.contains($.activeElement)) return;
        g.preventDefault(), g.stopPropagation(), l({ type: 1 });
        break;
    }
  }), S = Wt((g) => {
    x || g.key === wl.Space && g.preventDefault();
  }), h = Wt((g) => {
    var d, O;
    zX(g.currentTarget) || o || (x ? (l({ type: 1 }), (d = s.button) == null || d.focus()) : (g.preventDefault(), g.stopPropagation(), s.popoverState === 1 && (v == null || v(s.buttonId)), l({ type: 0 }), (O = s.button) == null || O.focus()));
  }), U = Wt((g) => {
    g.preventDefault(), g.stopPropagation();
  }), { isFocusVisible: G, focusProps: Q } = UNe({ autoFocus: a }), { isHovered: Z, hoverProps: X } = WNe({ isDisabled: o }), { pressed: J, pressProps: I } = XNe({ disabled: o }), te = s.popoverState === 0, V = Yt(() => ({ open: te, active: J || te, disabled: o, hover: Z, focus: G, autofocus: a }), [te, Z, G, J, o, a]), D = wje(e, s.button), F = RX(x ? { ref: w, type: D, onKeyDown: E, onClick: h, disabled: o || void 0, autoFocus: a } : { ref: m, id: s.buttonId, type: D, "aria-expanded": s.popoverState === 0, "aria-controls": s.panel ? s.panelId : void 0, disabled: o || void 0, autoFocus: a, onKeyDown: E, onKeyUp: S, onClick: h, onMouseDown: U }, Q, X, I), R = mK(), H = Wt(() => {
    let g = s.panel;
    if (!g) return;
    function d() {
      vo(R.current, { [li.Forwards]: () => Bc(g, si.First), [li.Backwards]: () => Bc(g, si.Last) }) === y1.Error && Bc(nx().filter((O) => O.dataset.headlessuiFocusGuard !== "true"), vo(R.current, { [li.Forwards]: si.Next, [li.Backwards]: si.Previous }), { relativeTo: s.button });
    }
    d();
  }), B = Wo();
  return ce.createElement(ce.Fragment, null, B({ ourProps: F, theirProps: i, slot: V, defaultTag: E9e, name: "Popover.Button" }), te && !x && c && ce.createElement(b1, { id: f, ref: s.afterButtonSentinel, features: Rh.Focusable, "data-headlessui-focus-guard": !0, as: "button", type: "button", onFocus: H }));
}
let P9e = "div", C9e = wd.RenderStrategy | wd.Static;
function wK(e, t) {
  let r = Bg(), { id: n = `headlessui-popover-backdrop-${r}`, transition: o = !1, ...a } = e, [{ popoverState: i }, s] = px("Popover.Backdrop"), [l, c] = _e(null), u = Fo(t, c), f = cx(), [p, v] = o6(o, l, f !== null ? (f & qn.Open) === qn.Open : i === 0), x = Wt((w) => {
    if (zX(w.currentTarget)) return w.preventDefault();
    s({ type: 1 });
  }), b = Yt(() => ({ open: i === 0 }), [i]), m = { ref: u, id: n, "aria-hidden": !0, onClick: x, ...n6(v) };
  return Wo()({ ourProps: m, theirProps: a, slot: b, defaultTag: P9e, features: C9e, visible: p, name: "Popover.Backdrop" });
}
let A9e = "div", _9e = wd.RenderStrategy | wd.Static;
function N9e(e, t) {
  let r = Bg(), { id: n = `headlessui-popover-panel-${r}`, focus: o = !1, anchor: a, portal: i = !1, modal: s = !1, transition: l = !1, ...c } = e, [u, f] = px("Popover.Panel"), { close: p, isPortalled: v } = d6("Popover.Panel"), x = `headlessui-focus-sentinel-before-${r}`, b = `headlessui-focus-sentinel-after-${r}`, m = ie(null), w = LIe(a), [$, E] = UIe(w), S = WIe();
  w && (i = !0);
  let [h, U] = _e(null), G = Fo(m, t, w ? $ : null, Wt((d) => f({ type: 4, panel: d })), U), Q = kd(u.button), Z = kd(m);
  nn(() => (f({ type: 5, panelId: n }), () => {
    f({ type: 5, panelId: null });
  }), [n, f]);
  let X = cx(), [J, I] = o6(l, h, X !== null ? (X & qn.Open) === qn.Open : u.popoverState === 0);
  cje(J, u.button, () => {
    f({ type: 1 });
  });
  let te = u.__demoMode ? !1 : s && J;
  Pje(te, Z);
  let V = Wt((d) => {
    var O;
    switch (d.key) {
      case wl.Escape:
        if (u.popoverState !== 0 || !m.current || Z != null && Z.activeElement && !m.current.contains(Z.activeElement)) return;
        d.preventDefault(), d.stopPropagation(), f({ type: 1 }), (O = u.button) == null || O.focus();
        break;
    }
  });
  Ne(() => {
    var d;
    e.static || u.popoverState === 1 && ((d = e.unmount) == null || d) && f({ type: 4, panel: null });
  }, [u.popoverState, e.unmount, e.static, f]), Ne(() => {
    if (u.__demoMode || !o || u.popoverState !== 0 || !m.current) return;
    let d = Z == null ? void 0 : Z.activeElement;
    m.current.contains(d) || Bc(m.current, si.First);
  }, [u.__demoMode, o, m.current, u.popoverState]);
  let D = Yt(() => ({ open: u.popoverState === 0, close: p }), [u.popoverState, p]), F = RX(w ? S() : {}, { ref: G, id: n, onKeyDown: V, onBlur: o && u.popoverState === 0 ? (d) => {
    var O, C, A, N, j;
    let _ = d.relatedTarget;
    _ && m.current && ((O = m.current) != null && O.contains(_) || (f({ type: 1 }), ((A = (C = u.beforePanelSentinel.current) == null ? void 0 : C.contains) != null && A.call(C, _) || (j = (N = u.afterPanelSentinel.current) == null ? void 0 : N.contains) != null && j.call(N, _)) && _.focus({ preventScroll: !0 })));
  } : void 0, tabIndex: -1, style: { ...c.style, ...E, "--button-width": ije(u.button, !0).width }, ...n6(I) }), R = mK(), H = Wt(() => {
    let d = m.current;
    if (!d) return;
    function O() {
      vo(R.current, { [li.Forwards]: () => {
        var C;
        Bc(d, si.First) === y1.Error && ((C = u.afterPanelSentinel.current) == null || C.focus());
      }, [li.Backwards]: () => {
        var C;
        (C = u.button) == null || C.focus({ preventScroll: !0 });
      } });
    }
    O();
  }), B = Wt(() => {
    let d = m.current;
    if (!d) return;
    function O() {
      vo(R.current, { [li.Forwards]: () => {
        if (!u.button) return;
        let C = nx(), A = C.indexOf(u.button), N = C.slice(0, A + 1), j = [...C.slice(A + 1), ...N];
        for (let _ of j.slice()) if (_.dataset.headlessuiFocusGuard === "true" || h != null && h.contains(_)) {
          let T = j.indexOf(_);
          T !== -1 && j.splice(T, 1);
        }
        Bc(j, si.First, { sorted: !1 });
      }, [li.Backwards]: () => {
        var C;
        Bc(d, si.Previous) === y1.Error && ((C = u.button) == null || C.focus());
      } });
    }
    O();
  }), g = Wo();
  return ce.createElement(qIe, null, ce.createElement(gx.Provider, { value: n }, ce.createElement(mx.Provider, { value: { close: p, isPortalled: v } }, ce.createElement(s9e, { enabled: i ? e.static || J : !1, ownerDocument: Q }, J && v && ce.createElement(b1, { id: x, ref: u.beforePanelSentinel, features: Rh.Focusable, "data-headlessui-focus-guard": !0, as: "button", type: "button", onFocus: H }), g({ ourProps: F, theirProps: c, slot: D, defaultTag: A9e, features: _9e, visible: J, name: "Popover.Panel" }), J && v && ce.createElement(b1, { id: b, ref: u.afterPanelSentinel, features: Rh.Focusable, "data-headlessui-focus-guard": !0, as: "button", type: "button", onFocus: B })))));
}
let j9e = "div";
function I9e(e, t) {
  let r = ie(null), n = Fo(r, t), [o, a] = _e([]), i = Wt((b) => {
    a((m) => {
      let w = m.indexOf(b);
      if (w !== -1) {
        let $ = m.slice();
        return $.splice(w, 1), $;
      }
      return m;
    });
  }), s = Wt((b) => (a((m) => [...m, b]), () => i(b))), l = Wt(() => {
    var b;
    let m = yb(r);
    if (!m) return !1;
    let w = m.activeElement;
    return (b = r.current) != null && b.contains(w) ? !0 : o.some(($) => {
      var E, S;
      return ((E = m.getElementById($.buttonId.current)) == null ? void 0 : E.contains(w)) || ((S = m.getElementById($.panelId.current)) == null ? void 0 : S.contains(w));
    });
  }), c = Wt((b) => {
    for (let m of o) m.buttonId.current !== b && m.close();
  }), u = Yt(() => ({ registerPopover: s, unregisterPopover: i, isFocusWithinPopoverGroup: l, closeOthers: c }), [s, i, l, c]), f = Yt(() => ({}), []), p = e, v = { ref: n }, x = Wo();
  return ce.createElement(dK, null, ce.createElement(p6.Provider, { value: u }, x({ ourProps: v, theirProps: p, slot: f, defaultTag: j9e, name: "Popover.Group" })));
}
let T9e = oo(O9e), kK = oo(S9e), M9e = oo(wK), R9e = oo(wK), $K = oo(N9e), z9e = oo(I9e), F9e = Object.assign(T9e, { Button: kK, Backdrop: R9e, Overlay: M9e, Panel: $K, Group: z9e });
const m6 = "-", D9e = (e) => {
  const t = V9e(e), {
    conflictingClassGroups: r,
    conflictingClassGroupModifiers: n
  } = e;
  return {
    getClassGroupId: (o) => {
      const a = o.split(m6);
      return a[0] === "" && a.length !== 1 && a.shift(), OK(a, t) || L9e(o);
    },
    getConflictingClassGroupIds: (o, a) => {
      const i = r[o] || [];
      return a && n[o] ? [...i, ...n[o]] : i;
    }
  };
}, OK = (e, t) => {
  var r;
  if (e.length === 0)
    return t.classGroupId;
  const n = e[0], o = t.nextPart.get(n), a = o ? OK(e.slice(1), o) : void 0;
  if (a)
    return a;
  if (t.validators.length === 0)
    return;
  const i = e.join(m6);
  return (r = t.validators.find(({
    validator: s
  }) => s(i))) == null ? void 0 : r.classGroupId;
}, RR = /^\[(.+)\]$/, L9e = (e) => {
  if (RR.test(e)) {
    const t = RR.exec(e)[1], r = t == null ? void 0 : t.substring(0, t.indexOf(":"));
    if (r)
      return "arbitrary.." + r;
  }
}, V9e = (e) => {
  const {
    theme: t,
    prefix: r
  } = e, n = {
    nextPart: /* @__PURE__ */ new Map(),
    validators: []
  };
  return U9e(Object.entries(e.classGroups), r).forEach(([o, a]) => {
    F4(a, n, o, t);
  }), n;
}, F4 = (e, t, r, n) => {
  e.forEach((o) => {
    if (typeof o == "string") {
      const a = o === "" ? t : zR(t, o);
      a.classGroupId = r;
      return;
    }
    if (typeof o == "function") {
      if (W9e(o)) {
        F4(o(n), t, r, n);
        return;
      }
      t.validators.push({
        validator: o,
        classGroupId: r
      });
      return;
    }
    Object.entries(o).forEach(([a, i]) => {
      F4(i, zR(t, a), r, n);
    });
  });
}, zR = (e, t) => {
  let r = e;
  return t.split(m6).forEach((n) => {
    r.nextPart.has(n) || r.nextPart.set(n, {
      nextPart: /* @__PURE__ */ new Map(),
      validators: []
    }), r = r.nextPart.get(n);
  }), r;
}, W9e = (e) => e.isThemeGetter, U9e = (e, t) => t ? e.map(([r, n]) => {
  const o = n.map((a) => typeof a == "string" ? t + a : typeof a == "object" ? Object.fromEntries(Object.entries(a).map(([i, s]) => [t + i, s])) : a);
  return [r, o];
}) : e, Y9e = (e) => {
  if (e < 1)
    return {
      get: () => {
      },
      set: () => {
      }
    };
  let t = 0, r = /* @__PURE__ */ new Map(), n = /* @__PURE__ */ new Map();
  const o = (a, i) => {
    r.set(a, i), t++, t > e && (t = 0, n = r, r = /* @__PURE__ */ new Map());
  };
  return {
    get(a) {
      let i = r.get(a);
      if (i !== void 0)
        return i;
      if ((i = n.get(a)) !== void 0)
        return o(a, i), i;
    },
    set(a, i) {
      r.has(a) ? r.set(a, i) : o(a, i);
    }
  };
}, EK = "!", H9e = (e) => {
  const {
    separator: t,
    experimentalParseClassName: r
  } = e, n = t.length === 1, o = t[0], a = t.length, i = (s) => {
    const l = [];
    let c = 0, u = 0, f;
    for (let m = 0; m < s.length; m++) {
      let w = s[m];
      if (c === 0) {
        if (w === o && (n || s.slice(m, m + a) === t)) {
          l.push(s.slice(u, m)), u = m + a;
          continue;
        }
        if (w === "/") {
          f = m;
          continue;
        }
      }
      w === "[" ? c++ : w === "]" && c--;
    }
    const p = l.length === 0 ? s : s.substring(u), v = p.startsWith(EK), x = v ? p.substring(1) : p, b = f && f > u ? f - u : void 0;
    return {
      modifiers: l,
      hasImportantModifier: v,
      baseClassName: x,
      maybePostfixModifierPosition: b
    };
  };
  return r ? (s) => r({
    className: s,
    parseClassName: i
  }) : i;
}, G9e = (e) => {
  if (e.length <= 1)
    return e;
  const t = [];
  let r = [];
  return e.forEach((n) => {
    n[0] === "[" ? (t.push(...r.sort(), n), r = []) : r.push(n);
  }), t.push(...r.sort()), t;
}, q9e = (e) => ({
  cache: Y9e(e.cacheSize),
  parseClassName: H9e(e),
  ...D9e(e)
}), B9e = /\s+/, X9e = (e, t) => {
  const {
    parseClassName: r,
    getClassGroupId: n,
    getConflictingClassGroupIds: o
  } = t, a = [], i = e.trim().split(B9e);
  let s = "";
  for (let l = i.length - 1; l >= 0; l -= 1) {
    const c = i[l], {
      modifiers: u,
      hasImportantModifier: f,
      baseClassName: p,
      maybePostfixModifierPosition: v
    } = r(c);
    let x = !!v, b = n(x ? p.substring(0, v) : p);
    if (!b) {
      if (!x) {
        s = c + (s.length > 0 ? " " + s : s);
        continue;
      }
      if (b = n(p), !b) {
        s = c + (s.length > 0 ? " " + s : s);
        continue;
      }
      x = !1;
    }
    const m = G9e(u).join(":"), w = f ? m + EK : m, $ = w + b;
    if (a.includes($))
      continue;
    a.push($);
    const E = o(b, x);
    for (let S = 0; S < E.length; ++S) {
      const h = E[S];
      a.push(w + h);
    }
    s = c + (s.length > 0 ? " " + s : s);
  }
  return s;
};
function K9e() {
  let e = 0, t, r, n = "";
  for (; e < arguments.length; )
    (t = arguments[e++]) && (r = SK(t)) && (n && (n += " "), n += r);
  return n;
}
const SK = (e) => {
  if (typeof e == "string")
    return e;
  let t, r = "";
  for (let n = 0; n < e.length; n++)
    e[n] && (t = SK(e[n])) && (r && (r += " "), r += t);
  return r;
};
function J9e(e, ...t) {
  let r, n, o, a = i;
  function i(l) {
    const c = t.reduce((u, f) => f(u), e());
    return r = q9e(c), n = r.cache.get, o = r.cache.set, a = s, s(l);
  }
  function s(l) {
    const c = n(l);
    if (c)
      return c;
    const u = X9e(l, r);
    return o(l, u), u;
  }
  return function() {
    return a(K9e.apply(null, arguments));
  };
}
const jr = (e) => {
  const t = (r) => r[e] || [];
  return t.isThemeGetter = !0, t;
}, PK = /^\[(?:([a-z-]+):)?(.+)\]$/i, Q9e = /^\d+\/\d+$/, Z9e = /* @__PURE__ */ new Set(["px", "full", "screen"]), e7e = /^(\d+(\.\d+)?)?(xs|sm|md|lg|xl)$/, t7e = /\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\b(calc|min|max|clamp)\(.+\)|^0$/, r7e = /^(rgba?|hsla?|hwb|(ok)?(lab|lch))\(.+\)$/, n7e = /^(inset_)?-?((\d+)?\.?(\d+)[a-z]+|0)_-?((\d+)?\.?(\d+)[a-z]+|0)/, o7e = /^(url|image|image-set|cross-fade|element|(repeating-)?(linear|radial|conic)-gradient)\(.+\)$/, Qa = (e) => td(e) || Z9e.has(e) || Q9e.test(e), ll = (e) => tp(e, "length", d7e), td = (e) => !!e && !Number.isNaN(Number(e)), Yk = (e) => tp(e, "number", td), Vm = (e) => !!e && Number.isInteger(Number(e)), a7e = (e) => e.endsWith("%") && td(e.slice(0, -1)), yt = (e) => PK.test(e), cl = (e) => e7e.test(e), i7e = /* @__PURE__ */ new Set(["length", "size", "percentage"]), s7e = (e) => tp(e, i7e, CK), l7e = (e) => tp(e, "position", CK), c7e = /* @__PURE__ */ new Set(["image", "url"]), u7e = (e) => tp(e, c7e, m7e), f7e = (e) => tp(e, "", p7e), Wm = () => !0, tp = (e, t, r) => {
  const n = PK.exec(e);
  return n ? n[1] ? typeof t == "string" ? n[1] === t : t.has(n[1]) : r(n[2]) : !1;
}, d7e = (e) => (
  // `colorFunctionRegex` check is necessary because color functions can have percentages in them which which would be incorrectly classified as lengths.
  // For example, `hsl(0 0% 0%)` would be classified as a length without this check.
  // I could also use lookbehind assertion in `lengthUnitRegex` but that isn't supported widely enough.
  t7e.test(e) && !r7e.test(e)
), CK = () => !1, p7e = (e) => n7e.test(e), m7e = (e) => o7e.test(e), g7e = () => {
  const e = jr("colors"), t = jr("spacing"), r = jr("blur"), n = jr("brightness"), o = jr("borderColor"), a = jr("borderRadius"), i = jr("borderSpacing"), s = jr("borderWidth"), l = jr("contrast"), c = jr("grayscale"), u = jr("hueRotate"), f = jr("invert"), p = jr("gap"), v = jr("gradientColorStops"), x = jr("gradientColorStopPositions"), b = jr("inset"), m = jr("margin"), w = jr("opacity"), $ = jr("padding"), E = jr("saturate"), S = jr("scale"), h = jr("sepia"), U = jr("skew"), G = jr("space"), Q = jr("translate"), Z = () => ["auto", "contain", "none"], X = () => ["auto", "hidden", "clip", "visible", "scroll"], J = () => ["auto", yt, t], I = () => [yt, t], te = () => ["", Qa, ll], V = () => ["auto", td, yt], D = () => ["bottom", "center", "left", "left-bottom", "left-top", "right", "right-bottom", "right-top", "top"], F = () => ["solid", "dashed", "dotted", "double", "none"], R = () => ["normal", "multiply", "screen", "overlay", "darken", "lighten", "color-dodge", "color-burn", "hard-light", "soft-light", "difference", "exclusion", "hue", "saturation", "color", "luminosity"], H = () => ["start", "end", "center", "between", "around", "evenly", "stretch"], B = () => ["", "0", yt], g = () => ["auto", "avoid", "all", "avoid-page", "page", "left", "right", "column"], d = () => [td, yt];
  return {
    cacheSize: 500,
    separator: ":",
    theme: {
      colors: [Wm],
      spacing: [Qa, ll],
      blur: ["none", "", cl, yt],
      brightness: d(),
      borderColor: [e],
      borderRadius: ["none", "", "full", cl, yt],
      borderSpacing: I(),
      borderWidth: te(),
      contrast: d(),
      grayscale: B(),
      hueRotate: d(),
      invert: B(),
      gap: I(),
      gradientColorStops: [e],
      gradientColorStopPositions: [a7e, ll],
      inset: J(),
      margin: J(),
      opacity: d(),
      padding: I(),
      saturate: d(),
      scale: d(),
      sepia: B(),
      skew: d(),
      space: I(),
      translate: I()
    },
    classGroups: {
      // Layout
      /**
       * Aspect Ratio
       * @see https://tailwindcss.com/docs/aspect-ratio
       */
      aspect: [{
        aspect: ["auto", "square", "video", yt]
      }],
      /**
       * Container
       * @see https://tailwindcss.com/docs/container
       */
      container: ["container"],
      /**
       * Columns
       * @see https://tailwindcss.com/docs/columns
       */
      columns: [{
        columns: [cl]
      }],
      /**
       * Break After
       * @see https://tailwindcss.com/docs/break-after
       */
      "break-after": [{
        "break-after": g()
      }],
      /**
       * Break Before
       * @see https://tailwindcss.com/docs/break-before
       */
      "break-before": [{
        "break-before": g()
      }],
      /**
       * Break Inside
       * @see https://tailwindcss.com/docs/break-inside
       */
      "break-inside": [{
        "break-inside": ["auto", "avoid", "avoid-page", "avoid-column"]
      }],
      /**
       * Box Decoration Break
       * @see https://tailwindcss.com/docs/box-decoration-break
       */
      "box-decoration": [{
        "box-decoration": ["slice", "clone"]
      }],
      /**
       * Box Sizing
       * @see https://tailwindcss.com/docs/box-sizing
       */
      box: [{
        box: ["border", "content"]
      }],
      /**
       * Display
       * @see https://tailwindcss.com/docs/display
       */
      display: ["block", "inline-block", "inline", "flex", "inline-flex", "table", "inline-table", "table-caption", "table-cell", "table-column", "table-column-group", "table-footer-group", "table-header-group", "table-row-group", "table-row", "flow-root", "grid", "inline-grid", "contents", "list-item", "hidden"],
      /**
       * Floats
       * @see https://tailwindcss.com/docs/float
       */
      float: [{
        float: ["right", "left", "none", "start", "end"]
      }],
      /**
       * Clear
       * @see https://tailwindcss.com/docs/clear
       */
      clear: [{
        clear: ["left", "right", "both", "none", "start", "end"]
      }],
      /**
       * Isolation
       * @see https://tailwindcss.com/docs/isolation
       */
      isolation: ["isolate", "isolation-auto"],
      /**
       * Object Fit
       * @see https://tailwindcss.com/docs/object-fit
       */
      "object-fit": [{
        object: ["contain", "cover", "fill", "none", "scale-down"]
      }],
      /**
       * Object Position
       * @see https://tailwindcss.com/docs/object-position
       */
      "object-position": [{
        object: [...D(), yt]
      }],
      /**
       * Overflow
       * @see https://tailwindcss.com/docs/overflow
       */
      overflow: [{
        overflow: X()
      }],
      /**
       * Overflow X
       * @see https://tailwindcss.com/docs/overflow
       */
      "overflow-x": [{
        "overflow-x": X()
      }],
      /**
       * Overflow Y
       * @see https://tailwindcss.com/docs/overflow
       */
      "overflow-y": [{
        "overflow-y": X()
      }],
      /**
       * Overscroll Behavior
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      overscroll: [{
        overscroll: Z()
      }],
      /**
       * Overscroll Behavior X
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      "overscroll-x": [{
        "overscroll-x": Z()
      }],
      /**
       * Overscroll Behavior Y
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      "overscroll-y": [{
        "overscroll-y": Z()
      }],
      /**
       * Position
       * @see https://tailwindcss.com/docs/position
       */
      position: ["static", "fixed", "absolute", "relative", "sticky"],
      /**
       * Top / Right / Bottom / Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      inset: [{
        inset: [b]
      }],
      /**
       * Right / Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      "inset-x": [{
        "inset-x": [b]
      }],
      /**
       * Top / Bottom
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      "inset-y": [{
        "inset-y": [b]
      }],
      /**
       * Start
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      start: [{
        start: [b]
      }],
      /**
       * End
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      end: [{
        end: [b]
      }],
      /**
       * Top
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      top: [{
        top: [b]
      }],
      /**
       * Right
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      right: [{
        right: [b]
      }],
      /**
       * Bottom
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      bottom: [{
        bottom: [b]
      }],
      /**
       * Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      left: [{
        left: [b]
      }],
      /**
       * Visibility
       * @see https://tailwindcss.com/docs/visibility
       */
      visibility: ["visible", "invisible", "collapse"],
      /**
       * Z-Index
       * @see https://tailwindcss.com/docs/z-index
       */
      z: [{
        z: ["auto", Vm, yt]
      }],
      // Flexbox and Grid
      /**
       * Flex Basis
       * @see https://tailwindcss.com/docs/flex-basis
       */
      basis: [{
        basis: J()
      }],
      /**
       * Flex Direction
       * @see https://tailwindcss.com/docs/flex-direction
       */
      "flex-direction": [{
        flex: ["row", "row-reverse", "col", "col-reverse"]
      }],
      /**
       * Flex Wrap
       * @see https://tailwindcss.com/docs/flex-wrap
       */
      "flex-wrap": [{
        flex: ["wrap", "wrap-reverse", "nowrap"]
      }],
      /**
       * Flex
       * @see https://tailwindcss.com/docs/flex
       */
      flex: [{
        flex: ["1", "auto", "initial", "none", yt]
      }],
      /**
       * Flex Grow
       * @see https://tailwindcss.com/docs/flex-grow
       */
      grow: [{
        grow: B()
      }],
      /**
       * Flex Shrink
       * @see https://tailwindcss.com/docs/flex-shrink
       */
      shrink: [{
        shrink: B()
      }],
      /**
       * Order
       * @see https://tailwindcss.com/docs/order
       */
      order: [{
        order: ["first", "last", "none", Vm, yt]
      }],
      /**
       * Grid Template Columns
       * @see https://tailwindcss.com/docs/grid-template-columns
       */
      "grid-cols": [{
        "grid-cols": [Wm]
      }],
      /**
       * Grid Column Start / End
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-start-end": [{
        col: ["auto", {
          span: ["full", Vm, yt]
        }, yt]
      }],
      /**
       * Grid Column Start
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-start": [{
        "col-start": V()
      }],
      /**
       * Grid Column End
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-end": [{
        "col-end": V()
      }],
      /**
       * Grid Template Rows
       * @see https://tailwindcss.com/docs/grid-template-rows
       */
      "grid-rows": [{
        "grid-rows": [Wm]
      }],
      /**
       * Grid Row Start / End
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-start-end": [{
        row: ["auto", {
          span: [Vm, yt]
        }, yt]
      }],
      /**
       * Grid Row Start
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-start": [{
        "row-start": V()
      }],
      /**
       * Grid Row End
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-end": [{
        "row-end": V()
      }],
      /**
       * Grid Auto Flow
       * @see https://tailwindcss.com/docs/grid-auto-flow
       */
      "grid-flow": [{
        "grid-flow": ["row", "col", "dense", "row-dense", "col-dense"]
      }],
      /**
       * Grid Auto Columns
       * @see https://tailwindcss.com/docs/grid-auto-columns
       */
      "auto-cols": [{
        "auto-cols": ["auto", "min", "max", "fr", yt]
      }],
      /**
       * Grid Auto Rows
       * @see https://tailwindcss.com/docs/grid-auto-rows
       */
      "auto-rows": [{
        "auto-rows": ["auto", "min", "max", "fr", yt]
      }],
      /**
       * Gap
       * @see https://tailwindcss.com/docs/gap
       */
      gap: [{
        gap: [p]
      }],
      /**
       * Gap X
       * @see https://tailwindcss.com/docs/gap
       */
      "gap-x": [{
        "gap-x": [p]
      }],
      /**
       * Gap Y
       * @see https://tailwindcss.com/docs/gap
       */
      "gap-y": [{
        "gap-y": [p]
      }],
      /**
       * Justify Content
       * @see https://tailwindcss.com/docs/justify-content
       */
      "justify-content": [{
        justify: ["normal", ...H()]
      }],
      /**
       * Justify Items
       * @see https://tailwindcss.com/docs/justify-items
       */
      "justify-items": [{
        "justify-items": ["start", "end", "center", "stretch"]
      }],
      /**
       * Justify Self
       * @see https://tailwindcss.com/docs/justify-self
       */
      "justify-self": [{
        "justify-self": ["auto", "start", "end", "center", "stretch"]
      }],
      /**
       * Align Content
       * @see https://tailwindcss.com/docs/align-content
       */
      "align-content": [{
        content: ["normal", ...H(), "baseline"]
      }],
      /**
       * Align Items
       * @see https://tailwindcss.com/docs/align-items
       */
      "align-items": [{
        items: ["start", "end", "center", "baseline", "stretch"]
      }],
      /**
       * Align Self
       * @see https://tailwindcss.com/docs/align-self
       */
      "align-self": [{
        self: ["auto", "start", "end", "center", "stretch", "baseline"]
      }],
      /**
       * Place Content
       * @see https://tailwindcss.com/docs/place-content
       */
      "place-content": [{
        "place-content": [...H(), "baseline"]
      }],
      /**
       * Place Items
       * @see https://tailwindcss.com/docs/place-items
       */
      "place-items": [{
        "place-items": ["start", "end", "center", "baseline", "stretch"]
      }],
      /**
       * Place Self
       * @see https://tailwindcss.com/docs/place-self
       */
      "place-self": [{
        "place-self": ["auto", "start", "end", "center", "stretch"]
      }],
      // Spacing
      /**
       * Padding
       * @see https://tailwindcss.com/docs/padding
       */
      p: [{
        p: [$]
      }],
      /**
       * Padding X
       * @see https://tailwindcss.com/docs/padding
       */
      px: [{
        px: [$]
      }],
      /**
       * Padding Y
       * @see https://tailwindcss.com/docs/padding
       */
      py: [{
        py: [$]
      }],
      /**
       * Padding Start
       * @see https://tailwindcss.com/docs/padding
       */
      ps: [{
        ps: [$]
      }],
      /**
       * Padding End
       * @see https://tailwindcss.com/docs/padding
       */
      pe: [{
        pe: [$]
      }],
      /**
       * Padding Top
       * @see https://tailwindcss.com/docs/padding
       */
      pt: [{
        pt: [$]
      }],
      /**
       * Padding Right
       * @see https://tailwindcss.com/docs/padding
       */
      pr: [{
        pr: [$]
      }],
      /**
       * Padding Bottom
       * @see https://tailwindcss.com/docs/padding
       */
      pb: [{
        pb: [$]
      }],
      /**
       * Padding Left
       * @see https://tailwindcss.com/docs/padding
       */
      pl: [{
        pl: [$]
      }],
      /**
       * Margin
       * @see https://tailwindcss.com/docs/margin
       */
      m: [{
        m: [m]
      }],
      /**
       * Margin X
       * @see https://tailwindcss.com/docs/margin
       */
      mx: [{
        mx: [m]
      }],
      /**
       * Margin Y
       * @see https://tailwindcss.com/docs/margin
       */
      my: [{
        my: [m]
      }],
      /**
       * Margin Start
       * @see https://tailwindcss.com/docs/margin
       */
      ms: [{
        ms: [m]
      }],
      /**
       * Margin End
       * @see https://tailwindcss.com/docs/margin
       */
      me: [{
        me: [m]
      }],
      /**
       * Margin Top
       * @see https://tailwindcss.com/docs/margin
       */
      mt: [{
        mt: [m]
      }],
      /**
       * Margin Right
       * @see https://tailwindcss.com/docs/margin
       */
      mr: [{
        mr: [m]
      }],
      /**
       * Margin Bottom
       * @see https://tailwindcss.com/docs/margin
       */
      mb: [{
        mb: [m]
      }],
      /**
       * Margin Left
       * @see https://tailwindcss.com/docs/margin
       */
      ml: [{
        ml: [m]
      }],
      /**
       * Space Between X
       * @see https://tailwindcss.com/docs/space
       */
      "space-x": [{
        "space-x": [G]
      }],
      /**
       * Space Between X Reverse
       * @see https://tailwindcss.com/docs/space
       */
      "space-x-reverse": ["space-x-reverse"],
      /**
       * Space Between Y
       * @see https://tailwindcss.com/docs/space
       */
      "space-y": [{
        "space-y": [G]
      }],
      /**
       * Space Between Y Reverse
       * @see https://tailwindcss.com/docs/space
       */
      "space-y-reverse": ["space-y-reverse"],
      // Sizing
      /**
       * Width
       * @see https://tailwindcss.com/docs/width
       */
      w: [{
        w: ["auto", "min", "max", "fit", "svw", "lvw", "dvw", yt, t]
      }],
      /**
       * Min-Width
       * @see https://tailwindcss.com/docs/min-width
       */
      "min-w": [{
        "min-w": [yt, t, "min", "max", "fit"]
      }],
      /**
       * Max-Width
       * @see https://tailwindcss.com/docs/max-width
       */
      "max-w": [{
        "max-w": [yt, t, "none", "full", "min", "max", "fit", "prose", {
          screen: [cl]
        }, cl]
      }],
      /**
       * Height
       * @see https://tailwindcss.com/docs/height
       */
      h: [{
        h: [yt, t, "auto", "min", "max", "fit", "svh", "lvh", "dvh"]
      }],
      /**
       * Min-Height
       * @see https://tailwindcss.com/docs/min-height
       */
      "min-h": [{
        "min-h": [yt, t, "min", "max", "fit", "svh", "lvh", "dvh"]
      }],
      /**
       * Max-Height
       * @see https://tailwindcss.com/docs/max-height
       */
      "max-h": [{
        "max-h": [yt, t, "min", "max", "fit", "svh", "lvh", "dvh"]
      }],
      /**
       * Size
       * @see https://tailwindcss.com/docs/size
       */
      size: [{
        size: [yt, t, "auto", "min", "max", "fit"]
      }],
      // Typography
      /**
       * Font Size
       * @see https://tailwindcss.com/docs/font-size
       */
      "font-size": [{
        text: ["base", cl, ll]
      }],
      /**
       * Font Smoothing
       * @see https://tailwindcss.com/docs/font-smoothing
       */
      "font-smoothing": ["antialiased", "subpixel-antialiased"],
      /**
       * Font Style
       * @see https://tailwindcss.com/docs/font-style
       */
      "font-style": ["italic", "not-italic"],
      /**
       * Font Weight
       * @see https://tailwindcss.com/docs/font-weight
       */
      "font-weight": [{
        font: ["thin", "extralight", "light", "normal", "medium", "semibold", "bold", "extrabold", "black", Yk]
      }],
      /**
       * Font Family
       * @see https://tailwindcss.com/docs/font-family
       */
      "font-family": [{
        font: [Wm]
      }],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-normal": ["normal-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-ordinal": ["ordinal"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-slashed-zero": ["slashed-zero"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-figure": ["lining-nums", "oldstyle-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-spacing": ["proportional-nums", "tabular-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-fraction": ["diagonal-fractions", "stacked-fractions"],
      /**
       * Letter Spacing
       * @see https://tailwindcss.com/docs/letter-spacing
       */
      tracking: [{
        tracking: ["tighter", "tight", "normal", "wide", "wider", "widest", yt]
      }],
      /**
       * Line Clamp
       * @see https://tailwindcss.com/docs/line-clamp
       */
      "line-clamp": [{
        "line-clamp": ["none", td, Yk]
      }],
      /**
       * Line Height
       * @see https://tailwindcss.com/docs/line-height
       */
      leading: [{
        leading: ["none", "tight", "snug", "normal", "relaxed", "loose", Qa, yt]
      }],
      /**
       * List Style Image
       * @see https://tailwindcss.com/docs/list-style-image
       */
      "list-image": [{
        "list-image": ["none", yt]
      }],
      /**
       * List Style Type
       * @see https://tailwindcss.com/docs/list-style-type
       */
      "list-style-type": [{
        list: ["none", "disc", "decimal", yt]
      }],
      /**
       * List Style Position
       * @see https://tailwindcss.com/docs/list-style-position
       */
      "list-style-position": [{
        list: ["inside", "outside"]
      }],
      /**
       * Placeholder Color
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/placeholder-color
       */
      "placeholder-color": [{
        placeholder: [e]
      }],
      /**
       * Placeholder Opacity
       * @see https://tailwindcss.com/docs/placeholder-opacity
       */
      "placeholder-opacity": [{
        "placeholder-opacity": [w]
      }],
      /**
       * Text Alignment
       * @see https://tailwindcss.com/docs/text-align
       */
      "text-alignment": [{
        text: ["left", "center", "right", "justify", "start", "end"]
      }],
      /**
       * Text Color
       * @see https://tailwindcss.com/docs/text-color
       */
      "text-color": [{
        text: [e]
      }],
      /**
       * Text Opacity
       * @see https://tailwindcss.com/docs/text-opacity
       */
      "text-opacity": [{
        "text-opacity": [w]
      }],
      /**
       * Text Decoration
       * @see https://tailwindcss.com/docs/text-decoration
       */
      "text-decoration": ["underline", "overline", "line-through", "no-underline"],
      /**
       * Text Decoration Style
       * @see https://tailwindcss.com/docs/text-decoration-style
       */
      "text-decoration-style": [{
        decoration: [...F(), "wavy"]
      }],
      /**
       * Text Decoration Thickness
       * @see https://tailwindcss.com/docs/text-decoration-thickness
       */
      "text-decoration-thickness": [{
        decoration: ["auto", "from-font", Qa, ll]
      }],
      /**
       * Text Underline Offset
       * @see https://tailwindcss.com/docs/text-underline-offset
       */
      "underline-offset": [{
        "underline-offset": ["auto", Qa, yt]
      }],
      /**
       * Text Decoration Color
       * @see https://tailwindcss.com/docs/text-decoration-color
       */
      "text-decoration-color": [{
        decoration: [e]
      }],
      /**
       * Text Transform
       * @see https://tailwindcss.com/docs/text-transform
       */
      "text-transform": ["uppercase", "lowercase", "capitalize", "normal-case"],
      /**
       * Text Overflow
       * @see https://tailwindcss.com/docs/text-overflow
       */
      "text-overflow": ["truncate", "text-ellipsis", "text-clip"],
      /**
       * Text Wrap
       * @see https://tailwindcss.com/docs/text-wrap
       */
      "text-wrap": [{
        text: ["wrap", "nowrap", "balance", "pretty"]
      }],
      /**
       * Text Indent
       * @see https://tailwindcss.com/docs/text-indent
       */
      indent: [{
        indent: I()
      }],
      /**
       * Vertical Alignment
       * @see https://tailwindcss.com/docs/vertical-align
       */
      "vertical-align": [{
        align: ["baseline", "top", "middle", "bottom", "text-top", "text-bottom", "sub", "super", yt]
      }],
      /**
       * Whitespace
       * @see https://tailwindcss.com/docs/whitespace
       */
      whitespace: [{
        whitespace: ["normal", "nowrap", "pre", "pre-line", "pre-wrap", "break-spaces"]
      }],
      /**
       * Word Break
       * @see https://tailwindcss.com/docs/word-break
       */
      break: [{
        break: ["normal", "words", "all", "keep"]
      }],
      /**
       * Hyphens
       * @see https://tailwindcss.com/docs/hyphens
       */
      hyphens: [{
        hyphens: ["none", "manual", "auto"]
      }],
      /**
       * Content
       * @see https://tailwindcss.com/docs/content
       */
      content: [{
        content: ["none", yt]
      }],
      // Backgrounds
      /**
       * Background Attachment
       * @see https://tailwindcss.com/docs/background-attachment
       */
      "bg-attachment": [{
        bg: ["fixed", "local", "scroll"]
      }],
      /**
       * Background Clip
       * @see https://tailwindcss.com/docs/background-clip
       */
      "bg-clip": [{
        "bg-clip": ["border", "padding", "content", "text"]
      }],
      /**
       * Background Opacity
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/background-opacity
       */
      "bg-opacity": [{
        "bg-opacity": [w]
      }],
      /**
       * Background Origin
       * @see https://tailwindcss.com/docs/background-origin
       */
      "bg-origin": [{
        "bg-origin": ["border", "padding", "content"]
      }],
      /**
       * Background Position
       * @see https://tailwindcss.com/docs/background-position
       */
      "bg-position": [{
        bg: [...D(), l7e]
      }],
      /**
       * Background Repeat
       * @see https://tailwindcss.com/docs/background-repeat
       */
      "bg-repeat": [{
        bg: ["no-repeat", {
          repeat: ["", "x", "y", "round", "space"]
        }]
      }],
      /**
       * Background Size
       * @see https://tailwindcss.com/docs/background-size
       */
      "bg-size": [{
        bg: ["auto", "cover", "contain", s7e]
      }],
      /**
       * Background Image
       * @see https://tailwindcss.com/docs/background-image
       */
      "bg-image": [{
        bg: ["none", {
          "gradient-to": ["t", "tr", "r", "br", "b", "bl", "l", "tl"]
        }, u7e]
      }],
      /**
       * Background Color
       * @see https://tailwindcss.com/docs/background-color
       */
      "bg-color": [{
        bg: [e]
      }],
      /**
       * Gradient Color Stops From Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-from-pos": [{
        from: [x]
      }],
      /**
       * Gradient Color Stops Via Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-via-pos": [{
        via: [x]
      }],
      /**
       * Gradient Color Stops To Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-to-pos": [{
        to: [x]
      }],
      /**
       * Gradient Color Stops From
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-from": [{
        from: [v]
      }],
      /**
       * Gradient Color Stops Via
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-via": [{
        via: [v]
      }],
      /**
       * Gradient Color Stops To
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-to": [{
        to: [v]
      }],
      // Borders
      /**
       * Border Radius
       * @see https://tailwindcss.com/docs/border-radius
       */
      rounded: [{
        rounded: [a]
      }],
      /**
       * Border Radius Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-s": [{
        "rounded-s": [a]
      }],
      /**
       * Border Radius End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-e": [{
        "rounded-e": [a]
      }],
      /**
       * Border Radius Top
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-t": [{
        "rounded-t": [a]
      }],
      /**
       * Border Radius Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-r": [{
        "rounded-r": [a]
      }],
      /**
       * Border Radius Bottom
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-b": [{
        "rounded-b": [a]
      }],
      /**
       * Border Radius Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-l": [{
        "rounded-l": [a]
      }],
      /**
       * Border Radius Start Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-ss": [{
        "rounded-ss": [a]
      }],
      /**
       * Border Radius Start End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-se": [{
        "rounded-se": [a]
      }],
      /**
       * Border Radius End End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-ee": [{
        "rounded-ee": [a]
      }],
      /**
       * Border Radius End Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-es": [{
        "rounded-es": [a]
      }],
      /**
       * Border Radius Top Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-tl": [{
        "rounded-tl": [a]
      }],
      /**
       * Border Radius Top Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-tr": [{
        "rounded-tr": [a]
      }],
      /**
       * Border Radius Bottom Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-br": [{
        "rounded-br": [a]
      }],
      /**
       * Border Radius Bottom Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-bl": [{
        "rounded-bl": [a]
      }],
      /**
       * Border Width
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w": [{
        border: [s]
      }],
      /**
       * Border Width X
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-x": [{
        "border-x": [s]
      }],
      /**
       * Border Width Y
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-y": [{
        "border-y": [s]
      }],
      /**
       * Border Width Start
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-s": [{
        "border-s": [s]
      }],
      /**
       * Border Width End
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-e": [{
        "border-e": [s]
      }],
      /**
       * Border Width Top
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-t": [{
        "border-t": [s]
      }],
      /**
       * Border Width Right
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-r": [{
        "border-r": [s]
      }],
      /**
       * Border Width Bottom
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-b": [{
        "border-b": [s]
      }],
      /**
       * Border Width Left
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-l": [{
        "border-l": [s]
      }],
      /**
       * Border Opacity
       * @see https://tailwindcss.com/docs/border-opacity
       */
      "border-opacity": [{
        "border-opacity": [w]
      }],
      /**
       * Border Style
       * @see https://tailwindcss.com/docs/border-style
       */
      "border-style": [{
        border: [...F(), "hidden"]
      }],
      /**
       * Divide Width X
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-x": [{
        "divide-x": [s]
      }],
      /**
       * Divide Width X Reverse
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-x-reverse": ["divide-x-reverse"],
      /**
       * Divide Width Y
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-y": [{
        "divide-y": [s]
      }],
      /**
       * Divide Width Y Reverse
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-y-reverse": ["divide-y-reverse"],
      /**
       * Divide Opacity
       * @see https://tailwindcss.com/docs/divide-opacity
       */
      "divide-opacity": [{
        "divide-opacity": [w]
      }],
      /**
       * Divide Style
       * @see https://tailwindcss.com/docs/divide-style
       */
      "divide-style": [{
        divide: F()
      }],
      /**
       * Border Color
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color": [{
        border: [o]
      }],
      /**
       * Border Color X
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-x": [{
        "border-x": [o]
      }],
      /**
       * Border Color Y
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-y": [{
        "border-y": [o]
      }],
      /**
       * Border Color S
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-s": [{
        "border-s": [o]
      }],
      /**
       * Border Color E
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-e": [{
        "border-e": [o]
      }],
      /**
       * Border Color Top
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-t": [{
        "border-t": [o]
      }],
      /**
       * Border Color Right
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-r": [{
        "border-r": [o]
      }],
      /**
       * Border Color Bottom
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-b": [{
        "border-b": [o]
      }],
      /**
       * Border Color Left
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-l": [{
        "border-l": [o]
      }],
      /**
       * Divide Color
       * @see https://tailwindcss.com/docs/divide-color
       */
      "divide-color": [{
        divide: [o]
      }],
      /**
       * Outline Style
       * @see https://tailwindcss.com/docs/outline-style
       */
      "outline-style": [{
        outline: ["", ...F()]
      }],
      /**
       * Outline Offset
       * @see https://tailwindcss.com/docs/outline-offset
       */
      "outline-offset": [{
        "outline-offset": [Qa, yt]
      }],
      /**
       * Outline Width
       * @see https://tailwindcss.com/docs/outline-width
       */
      "outline-w": [{
        outline: [Qa, ll]
      }],
      /**
       * Outline Color
       * @see https://tailwindcss.com/docs/outline-color
       */
      "outline-color": [{
        outline: [e]
      }],
      /**
       * Ring Width
       * @see https://tailwindcss.com/docs/ring-width
       */
      "ring-w": [{
        ring: te()
      }],
      /**
       * Ring Width Inset
       * @see https://tailwindcss.com/docs/ring-width
       */
      "ring-w-inset": ["ring-inset"],
      /**
       * Ring Color
       * @see https://tailwindcss.com/docs/ring-color
       */
      "ring-color": [{
        ring: [e]
      }],
      /**
       * Ring Opacity
       * @see https://tailwindcss.com/docs/ring-opacity
       */
      "ring-opacity": [{
        "ring-opacity": [w]
      }],
      /**
       * Ring Offset Width
       * @see https://tailwindcss.com/docs/ring-offset-width
       */
      "ring-offset-w": [{
        "ring-offset": [Qa, ll]
      }],
      /**
       * Ring Offset Color
       * @see https://tailwindcss.com/docs/ring-offset-color
       */
      "ring-offset-color": [{
        "ring-offset": [e]
      }],
      // Effects
      /**
       * Box Shadow
       * @see https://tailwindcss.com/docs/box-shadow
       */
      shadow: [{
        shadow: ["", "inner", "none", cl, f7e]
      }],
      /**
       * Box Shadow Color
       * @see https://tailwindcss.com/docs/box-shadow-color
       */
      "shadow-color": [{
        shadow: [Wm]
      }],
      /**
       * Opacity
       * @see https://tailwindcss.com/docs/opacity
       */
      opacity: [{
        opacity: [w]
      }],
      /**
       * Mix Blend Mode
       * @see https://tailwindcss.com/docs/mix-blend-mode
       */
      "mix-blend": [{
        "mix-blend": [...R(), "plus-lighter", "plus-darker"]
      }],
      /**
       * Background Blend Mode
       * @see https://tailwindcss.com/docs/background-blend-mode
       */
      "bg-blend": [{
        "bg-blend": R()
      }],
      // Filters
      /**
       * Filter
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/filter
       */
      filter: [{
        filter: ["", "none"]
      }],
      /**
       * Blur
       * @see https://tailwindcss.com/docs/blur
       */
      blur: [{
        blur: [r]
      }],
      /**
       * Brightness
       * @see https://tailwindcss.com/docs/brightness
       */
      brightness: [{
        brightness: [n]
      }],
      /**
       * Contrast
       * @see https://tailwindcss.com/docs/contrast
       */
      contrast: [{
        contrast: [l]
      }],
      /**
       * Drop Shadow
       * @see https://tailwindcss.com/docs/drop-shadow
       */
      "drop-shadow": [{
        "drop-shadow": ["", "none", cl, yt]
      }],
      /**
       * Grayscale
       * @see https://tailwindcss.com/docs/grayscale
       */
      grayscale: [{
        grayscale: [c]
      }],
      /**
       * Hue Rotate
       * @see https://tailwindcss.com/docs/hue-rotate
       */
      "hue-rotate": [{
        "hue-rotate": [u]
      }],
      /**
       * Invert
       * @see https://tailwindcss.com/docs/invert
       */
      invert: [{
        invert: [f]
      }],
      /**
       * Saturate
       * @see https://tailwindcss.com/docs/saturate
       */
      saturate: [{
        saturate: [E]
      }],
      /**
       * Sepia
       * @see https://tailwindcss.com/docs/sepia
       */
      sepia: [{
        sepia: [h]
      }],
      /**
       * Backdrop Filter
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/backdrop-filter
       */
      "backdrop-filter": [{
        "backdrop-filter": ["", "none"]
      }],
      /**
       * Backdrop Blur
       * @see https://tailwindcss.com/docs/backdrop-blur
       */
      "backdrop-blur": [{
        "backdrop-blur": [r]
      }],
      /**
       * Backdrop Brightness
       * @see https://tailwindcss.com/docs/backdrop-brightness
       */
      "backdrop-brightness": [{
        "backdrop-brightness": [n]
      }],
      /**
       * Backdrop Contrast
       * @see https://tailwindcss.com/docs/backdrop-contrast
       */
      "backdrop-contrast": [{
        "backdrop-contrast": [l]
      }],
      /**
       * Backdrop Grayscale
       * @see https://tailwindcss.com/docs/backdrop-grayscale
       */
      "backdrop-grayscale": [{
        "backdrop-grayscale": [c]
      }],
      /**
       * Backdrop Hue Rotate
       * @see https://tailwindcss.com/docs/backdrop-hue-rotate
       */
      "backdrop-hue-rotate": [{
        "backdrop-hue-rotate": [u]
      }],
      /**
       * Backdrop Invert
       * @see https://tailwindcss.com/docs/backdrop-invert
       */
      "backdrop-invert": [{
        "backdrop-invert": [f]
      }],
      /**
       * Backdrop Opacity
       * @see https://tailwindcss.com/docs/backdrop-opacity
       */
      "backdrop-opacity": [{
        "backdrop-opacity": [w]
      }],
      /**
       * Backdrop Saturate
       * @see https://tailwindcss.com/docs/backdrop-saturate
       */
      "backdrop-saturate": [{
        "backdrop-saturate": [E]
      }],
      /**
       * Backdrop Sepia
       * @see https://tailwindcss.com/docs/backdrop-sepia
       */
      "backdrop-sepia": [{
        "backdrop-sepia": [h]
      }],
      // Tables
      /**
       * Border Collapse
       * @see https://tailwindcss.com/docs/border-collapse
       */
      "border-collapse": [{
        border: ["collapse", "separate"]
      }],
      /**
       * Border Spacing
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing": [{
        "border-spacing": [i]
      }],
      /**
       * Border Spacing X
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing-x": [{
        "border-spacing-x": [i]
      }],
      /**
       * Border Spacing Y
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing-y": [{
        "border-spacing-y": [i]
      }],
      /**
       * Table Layout
       * @see https://tailwindcss.com/docs/table-layout
       */
      "table-layout": [{
        table: ["auto", "fixed"]
      }],
      /**
       * Caption Side
       * @see https://tailwindcss.com/docs/caption-side
       */
      caption: [{
        caption: ["top", "bottom"]
      }],
      // Transitions and Animation
      /**
       * Tranisition Property
       * @see https://tailwindcss.com/docs/transition-property
       */
      transition: [{
        transition: ["none", "all", "", "colors", "opacity", "shadow", "transform", yt]
      }],
      /**
       * Transition Duration
       * @see https://tailwindcss.com/docs/transition-duration
       */
      duration: [{
        duration: d()
      }],
      /**
       * Transition Timing Function
       * @see https://tailwindcss.com/docs/transition-timing-function
       */
      ease: [{
        ease: ["linear", "in", "out", "in-out", yt]
      }],
      /**
       * Transition Delay
       * @see https://tailwindcss.com/docs/transition-delay
       */
      delay: [{
        delay: d()
      }],
      /**
       * Animation
       * @see https://tailwindcss.com/docs/animation
       */
      animate: [{
        animate: ["none", "spin", "ping", "pulse", "bounce", yt]
      }],
      // Transforms
      /**
       * Transform
       * @see https://tailwindcss.com/docs/transform
       */
      transform: [{
        transform: ["", "gpu", "none"]
      }],
      /**
       * Scale
       * @see https://tailwindcss.com/docs/scale
       */
      scale: [{
        scale: [S]
      }],
      /**
       * Scale X
       * @see https://tailwindcss.com/docs/scale
       */
      "scale-x": [{
        "scale-x": [S]
      }],
      /**
       * Scale Y
       * @see https://tailwindcss.com/docs/scale
       */
      "scale-y": [{
        "scale-y": [S]
      }],
      /**
       * Rotate
       * @see https://tailwindcss.com/docs/rotate
       */
      rotate: [{
        rotate: [Vm, yt]
      }],
      /**
       * Translate X
       * @see https://tailwindcss.com/docs/translate
       */
      "translate-x": [{
        "translate-x": [Q]
      }],
      /**
       * Translate Y
       * @see https://tailwindcss.com/docs/translate
       */
      "translate-y": [{
        "translate-y": [Q]
      }],
      /**
       * Skew X
       * @see https://tailwindcss.com/docs/skew
       */
      "skew-x": [{
        "skew-x": [U]
      }],
      /**
       * Skew Y
       * @see https://tailwindcss.com/docs/skew
       */
      "skew-y": [{
        "skew-y": [U]
      }],
      /**
       * Transform Origin
       * @see https://tailwindcss.com/docs/transform-origin
       */
      "transform-origin": [{
        origin: ["center", "top", "top-right", "right", "bottom-right", "bottom", "bottom-left", "left", "top-left", yt]
      }],
      // Interactivity
      /**
       * Accent Color
       * @see https://tailwindcss.com/docs/accent-color
       */
      accent: [{
        accent: ["auto", e]
      }],
      /**
       * Appearance
       * @see https://tailwindcss.com/docs/appearance
       */
      appearance: [{
        appearance: ["none", "auto"]
      }],
      /**
       * Cursor
       * @see https://tailwindcss.com/docs/cursor
       */
      cursor: [{
        cursor: ["auto", "default", "pointer", "wait", "text", "move", "help", "not-allowed", "none", "context-menu", "progress", "cell", "crosshair", "vertical-text", "alias", "copy", "no-drop", "grab", "grabbing", "all-scroll", "col-resize", "row-resize", "n-resize", "e-resize", "s-resize", "w-resize", "ne-resize", "nw-resize", "se-resize", "sw-resize", "ew-resize", "ns-resize", "nesw-resize", "nwse-resize", "zoom-in", "zoom-out", yt]
      }],
      /**
       * Caret Color
       * @see https://tailwindcss.com/docs/just-in-time-mode#caret-color-utilities
       */
      "caret-color": [{
        caret: [e]
      }],
      /**
       * Pointer Events
       * @see https://tailwindcss.com/docs/pointer-events
       */
      "pointer-events": [{
        "pointer-events": ["none", "auto"]
      }],
      /**
       * Resize
       * @see https://tailwindcss.com/docs/resize
       */
      resize: [{
        resize: ["none", "y", "x", ""]
      }],
      /**
       * Scroll Behavior
       * @see https://tailwindcss.com/docs/scroll-behavior
       */
      "scroll-behavior": [{
        scroll: ["auto", "smooth"]
      }],
      /**
       * Scroll Margin
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-m": [{
        "scroll-m": I()
      }],
      /**
       * Scroll Margin X
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mx": [{
        "scroll-mx": I()
      }],
      /**
       * Scroll Margin Y
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-my": [{
        "scroll-my": I()
      }],
      /**
       * Scroll Margin Start
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-ms": [{
        "scroll-ms": I()
      }],
      /**
       * Scroll Margin End
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-me": [{
        "scroll-me": I()
      }],
      /**
       * Scroll Margin Top
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mt": [{
        "scroll-mt": I()
      }],
      /**
       * Scroll Margin Right
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mr": [{
        "scroll-mr": I()
      }],
      /**
       * Scroll Margin Bottom
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mb": [{
        "scroll-mb": I()
      }],
      /**
       * Scroll Margin Left
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-ml": [{
        "scroll-ml": I()
      }],
      /**
       * Scroll Padding
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-p": [{
        "scroll-p": I()
      }],
      /**
       * Scroll Padding X
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-px": [{
        "scroll-px": I()
      }],
      /**
       * Scroll Padding Y
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-py": [{
        "scroll-py": I()
      }],
      /**
       * Scroll Padding Start
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-ps": [{
        "scroll-ps": I()
      }],
      /**
       * Scroll Padding End
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pe": [{
        "scroll-pe": I()
      }],
      /**
       * Scroll Padding Top
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pt": [{
        "scroll-pt": I()
      }],
      /**
       * Scroll Padding Right
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pr": [{
        "scroll-pr": I()
      }],
      /**
       * Scroll Padding Bottom
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pb": [{
        "scroll-pb": I()
      }],
      /**
       * Scroll Padding Left
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pl": [{
        "scroll-pl": I()
      }],
      /**
       * Scroll Snap Align
       * @see https://tailwindcss.com/docs/scroll-snap-align
       */
      "snap-align": [{
        snap: ["start", "end", "center", "align-none"]
      }],
      /**
       * Scroll Snap Stop
       * @see https://tailwindcss.com/docs/scroll-snap-stop
       */
      "snap-stop": [{
        snap: ["normal", "always"]
      }],
      /**
       * Scroll Snap Type
       * @see https://tailwindcss.com/docs/scroll-snap-type
       */
      "snap-type": [{
        snap: ["none", "x", "y", "both"]
      }],
      /**
       * Scroll Snap Type Strictness
       * @see https://tailwindcss.com/docs/scroll-snap-type
       */
      "snap-strictness": [{
        snap: ["mandatory", "proximity"]
      }],
      /**
       * Touch Action
       * @see https://tailwindcss.com/docs/touch-action
       */
      touch: [{
        touch: ["auto", "none", "manipulation"]
      }],
      /**
       * Touch Action X
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-x": [{
        "touch-pan": ["x", "left", "right"]
      }],
      /**
       * Touch Action Y
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-y": [{
        "touch-pan": ["y", "up", "down"]
      }],
      /**
       * Touch Action Pinch Zoom
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-pz": ["touch-pinch-zoom"],
      /**
       * User Select
       * @see https://tailwindcss.com/docs/user-select
       */
      select: [{
        select: ["none", "text", "all", "auto"]
      }],
      /**
       * Will Change
       * @see https://tailwindcss.com/docs/will-change
       */
      "will-change": [{
        "will-change": ["auto", "scroll", "contents", "transform", yt]
      }],
      // SVG
      /**
       * Fill
       * @see https://tailwindcss.com/docs/fill
       */
      fill: [{
        fill: [e, "none"]
      }],
      /**
       * Stroke Width
       * @see https://tailwindcss.com/docs/stroke-width
       */
      "stroke-w": [{
        stroke: [Qa, ll, Yk]
      }],
      /**
       * Stroke
       * @see https://tailwindcss.com/docs/stroke
       */
      stroke: [{
        stroke: [e, "none"]
      }],
      // Accessibility
      /**
       * Screen Readers
       * @see https://tailwindcss.com/docs/screen-readers
       */
      sr: ["sr-only", "not-sr-only"],
      /**
       * Forced Color Adjust
       * @see https://tailwindcss.com/docs/forced-color-adjust
       */
      "forced-color-adjust": [{
        "forced-color-adjust": ["auto", "none"]
      }]
    },
    conflictingClassGroups: {
      overflow: ["overflow-x", "overflow-y"],
      overscroll: ["overscroll-x", "overscroll-y"],
      inset: ["inset-x", "inset-y", "start", "end", "top", "right", "bottom", "left"],
      "inset-x": ["right", "left"],
      "inset-y": ["top", "bottom"],
      flex: ["basis", "grow", "shrink"],
      gap: ["gap-x", "gap-y"],
      p: ["px", "py", "ps", "pe", "pt", "pr", "pb", "pl"],
      px: ["pr", "pl"],
      py: ["pt", "pb"],
      m: ["mx", "my", "ms", "me", "mt", "mr", "mb", "ml"],
      mx: ["mr", "ml"],
      my: ["mt", "mb"],
      size: ["w", "h"],
      "font-size": ["leading"],
      "fvn-normal": ["fvn-ordinal", "fvn-slashed-zero", "fvn-figure", "fvn-spacing", "fvn-fraction"],
      "fvn-ordinal": ["fvn-normal"],
      "fvn-slashed-zero": ["fvn-normal"],
      "fvn-figure": ["fvn-normal"],
      "fvn-spacing": ["fvn-normal"],
      "fvn-fraction": ["fvn-normal"],
      "line-clamp": ["display", "overflow"],
      rounded: ["rounded-s", "rounded-e", "rounded-t", "rounded-r", "rounded-b", "rounded-l", "rounded-ss", "rounded-se", "rounded-ee", "rounded-es", "rounded-tl", "rounded-tr", "rounded-br", "rounded-bl"],
      "rounded-s": ["rounded-ss", "rounded-es"],
      "rounded-e": ["rounded-se", "rounded-ee"],
      "rounded-t": ["rounded-tl", "rounded-tr"],
      "rounded-r": ["rounded-tr", "rounded-br"],
      "rounded-b": ["rounded-br", "rounded-bl"],
      "rounded-l": ["rounded-tl", "rounded-bl"],
      "border-spacing": ["border-spacing-x", "border-spacing-y"],
      "border-w": ["border-w-s", "border-w-e", "border-w-t", "border-w-r", "border-w-b", "border-w-l"],
      "border-w-x": ["border-w-r", "border-w-l"],
      "border-w-y": ["border-w-t", "border-w-b"],
      "border-color": ["border-color-s", "border-color-e", "border-color-t", "border-color-r", "border-color-b", "border-color-l"],
      "border-color-x": ["border-color-r", "border-color-l"],
      "border-color-y": ["border-color-t", "border-color-b"],
      "scroll-m": ["scroll-mx", "scroll-my", "scroll-ms", "scroll-me", "scroll-mt", "scroll-mr", "scroll-mb", "scroll-ml"],
      "scroll-mx": ["scroll-mr", "scroll-ml"],
      "scroll-my": ["scroll-mt", "scroll-mb"],
      "scroll-p": ["scroll-px", "scroll-py", "scroll-ps", "scroll-pe", "scroll-pt", "scroll-pr", "scroll-pb", "scroll-pl"],
      "scroll-px": ["scroll-pr", "scroll-pl"],
      "scroll-py": ["scroll-pt", "scroll-pb"],
      touch: ["touch-x", "touch-y", "touch-pz"],
      "touch-x": ["touch"],
      "touch-y": ["touch"],
      "touch-pz": ["touch"]
    },
    conflictingClassGroupModifiers: {
      "font-size": ["leading"]
    }
  };
}, Za = /* @__PURE__ */ J9e(g7e);
/*!
 * Font Awesome Free 6.7.2 by @fontawesome - https://fontawesome.com
 * License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License)
 * Copyright 2024 Fonticons, Inc.
 */
function h7e(e, t, r) {
  return (t = y7e(t)) in e ? Object.defineProperty(e, t, {
    value: r,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : e[t] = r, e;
}
function FR(e, t) {
  var r = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var n = Object.getOwnPropertySymbols(e);
    t && (n = n.filter(function(o) {
      return Object.getOwnPropertyDescriptor(e, o).enumerable;
    })), r.push.apply(r, n);
  }
  return r;
}
function ke(e) {
  for (var t = 1; t < arguments.length; t++) {
    var r = arguments[t] != null ? arguments[t] : {};
    t % 2 ? FR(Object(r), !0).forEach(function(n) {
      h7e(e, n, r[n]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : FR(Object(r)).forEach(function(n) {
      Object.defineProperty(e, n, Object.getOwnPropertyDescriptor(r, n));
    });
  }
  return e;
}
function b7e(e, t) {
  if (typeof e != "object" || !e) return e;
  var r = e[Symbol.toPrimitive];
  if (r !== void 0) {
    var n = r.call(e, t);
    if (typeof n != "object") return n;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (t === "string" ? String : Number)(e);
}
function y7e(e) {
  var t = b7e(e, "string");
  return typeof t == "symbol" ? t : t + "";
}
const DR = () => {
};
let g6 = {}, AK = {}, _K = null, NK = {
  mark: DR,
  measure: DR
};
try {
  typeof window < "u" && (g6 = window), typeof document < "u" && (AK = document), typeof MutationObserver < "u" && (_K = MutationObserver), typeof performance < "u" && (NK = performance);
} catch {
}
const {
  userAgent: LR = ""
} = g6.navigator || {}, hc = g6, Hr = AK, VR = _K, Py = NK;
hc.document;
const Gi = !!Hr.documentElement && !!Hr.head && typeof Hr.addEventListener == "function" && typeof Hr.createElement == "function", jK = ~LR.indexOf("MSIE") || ~LR.indexOf("Trident/");
var v7e = /fa(s|r|l|t|d|dr|dl|dt|b|k|kd|ss|sr|sl|st|sds|sdr|sdl|sdt)?[\-\ ]/, x7e = /Font ?Awesome ?([56 ]*)(Solid|Regular|Light|Thin|Duotone|Brands|Free|Pro|Sharp Duotone|Sharp|Kit)?.*/i, IK = {
  classic: {
    fa: "solid",
    fas: "solid",
    "fa-solid": "solid",
    far: "regular",
    "fa-regular": "regular",
    fal: "light",
    "fa-light": "light",
    fat: "thin",
    "fa-thin": "thin",
    fab: "brands",
    "fa-brands": "brands"
  },
  duotone: {
    fa: "solid",
    fad: "solid",
    "fa-solid": "solid",
    "fa-duotone": "solid",
    fadr: "regular",
    "fa-regular": "regular",
    fadl: "light",
    "fa-light": "light",
    fadt: "thin",
    "fa-thin": "thin"
  },
  sharp: {
    fa: "solid",
    fass: "solid",
    "fa-solid": "solid",
    fasr: "regular",
    "fa-regular": "regular",
    fasl: "light",
    "fa-light": "light",
    fast: "thin",
    "fa-thin": "thin"
  },
  "sharp-duotone": {
    fa: "solid",
    fasds: "solid",
    "fa-solid": "solid",
    fasdr: "regular",
    "fa-regular": "regular",
    fasdl: "light",
    "fa-light": "light",
    fasdt: "thin",
    "fa-thin": "thin"
  }
}, w7e = {
  GROUP: "duotone-group",
  PRIMARY: "primary",
  SECONDARY: "secondary"
}, TK = ["fa-classic", "fa-duotone", "fa-sharp", "fa-sharp-duotone"], xn = "classic", hx = "duotone", k7e = "sharp", $7e = "sharp-duotone", MK = [xn, hx, k7e, $7e], O7e = {
  classic: {
    900: "fas",
    400: "far",
    normal: "far",
    300: "fal",
    100: "fat"
  },
  duotone: {
    900: "fad",
    400: "fadr",
    300: "fadl",
    100: "fadt"
  },
  sharp: {
    900: "fass",
    400: "fasr",
    300: "fasl",
    100: "fast"
  },
  "sharp-duotone": {
    900: "fasds",
    400: "fasdr",
    300: "fasdl",
    100: "fasdt"
  }
}, E7e = {
  "Font Awesome 6 Free": {
    900: "fas",
    400: "far"
  },
  "Font Awesome 6 Pro": {
    900: "fas",
    400: "far",
    normal: "far",
    300: "fal",
    100: "fat"
  },
  "Font Awesome 6 Brands": {
    400: "fab",
    normal: "fab"
  },
  "Font Awesome 6 Duotone": {
    900: "fad",
    400: "fadr",
    normal: "fadr",
    300: "fadl",
    100: "fadt"
  },
  "Font Awesome 6 Sharp": {
    900: "fass",
    400: "fasr",
    normal: "fasr",
    300: "fasl",
    100: "fast"
  },
  "Font Awesome 6 Sharp Duotone": {
    900: "fasds",
    400: "fasdr",
    normal: "fasdr",
    300: "fasdl",
    100: "fasdt"
  }
}, S7e = /* @__PURE__ */ new Map([["classic", {
  defaultShortPrefixId: "fas",
  defaultStyleId: "solid",
  styleIds: ["solid", "regular", "light", "thin", "brands"],
  futureStyleIds: [],
  defaultFontWeight: 900
}], ["sharp", {
  defaultShortPrefixId: "fass",
  defaultStyleId: "solid",
  styleIds: ["solid", "regular", "light", "thin"],
  futureStyleIds: [],
  defaultFontWeight: 900
}], ["duotone", {
  defaultShortPrefixId: "fad",
  defaultStyleId: "solid",
  styleIds: ["solid", "regular", "light", "thin"],
  futureStyleIds: [],
  defaultFontWeight: 900
}], ["sharp-duotone", {
  defaultShortPrefixId: "fasds",
  defaultStyleId: "solid",
  styleIds: ["solid", "regular", "light", "thin"],
  futureStyleIds: [],
  defaultFontWeight: 900
}]]), P7e = {
  classic: {
    solid: "fas",
    regular: "far",
    light: "fal",
    thin: "fat",
    brands: "fab"
  },
  duotone: {
    solid: "fad",
    regular: "fadr",
    light: "fadl",
    thin: "fadt"
  },
  sharp: {
    solid: "fass",
    regular: "fasr",
    light: "fasl",
    thin: "fast"
  },
  "sharp-duotone": {
    solid: "fasds",
    regular: "fasdr",
    light: "fasdl",
    thin: "fasdt"
  }
}, C7e = ["fak", "fa-kit", "fakd", "fa-kit-duotone"], WR = {
  kit: {
    fak: "kit",
    "fa-kit": "kit"
  },
  "kit-duotone": {
    fakd: "kit-duotone",
    "fa-kit-duotone": "kit-duotone"
  }
}, A7e = ["kit"], _7e = {
  kit: {
    "fa-kit": "fak"
  }
}, N7e = ["fak", "fakd"], j7e = {
  kit: {
    fak: "fa-kit"
  }
}, UR = {
  kit: {
    kit: "fak"
  },
  "kit-duotone": {
    "kit-duotone": "fakd"
  }
}, Cy = {
  GROUP: "duotone-group",
  SWAP_OPACITY: "swap-opacity",
  PRIMARY: "primary",
  SECONDARY: "secondary"
}, I7e = ["fa-classic", "fa-duotone", "fa-sharp", "fa-sharp-duotone"], T7e = ["fak", "fa-kit", "fakd", "fa-kit-duotone"], M7e = {
  "Font Awesome Kit": {
    400: "fak",
    normal: "fak"
  },
  "Font Awesome Kit Duotone": {
    400: "fakd",
    normal: "fakd"
  }
}, R7e = {
  classic: {
    "fa-brands": "fab",
    "fa-duotone": "fad",
    "fa-light": "fal",
    "fa-regular": "far",
    "fa-solid": "fas",
    "fa-thin": "fat"
  },
  duotone: {
    "fa-regular": "fadr",
    "fa-light": "fadl",
    "fa-thin": "fadt"
  },
  sharp: {
    "fa-solid": "fass",
    "fa-regular": "fasr",
    "fa-light": "fasl",
    "fa-thin": "fast"
  },
  "sharp-duotone": {
    "fa-solid": "fasds",
    "fa-regular": "fasdr",
    "fa-light": "fasdl",
    "fa-thin": "fasdt"
  }
}, z7e = {
  classic: ["fas", "far", "fal", "fat", "fad"],
  duotone: ["fadr", "fadl", "fadt"],
  sharp: ["fass", "fasr", "fasl", "fast"],
  "sharp-duotone": ["fasds", "fasdr", "fasdl", "fasdt"]
}, D4 = {
  classic: {
    fab: "fa-brands",
    fad: "fa-duotone",
    fal: "fa-light",
    far: "fa-regular",
    fas: "fa-solid",
    fat: "fa-thin"
  },
  duotone: {
    fadr: "fa-regular",
    fadl: "fa-light",
    fadt: "fa-thin"
  },
  sharp: {
    fass: "fa-solid",
    fasr: "fa-regular",
    fasl: "fa-light",
    fast: "fa-thin"
  },
  "sharp-duotone": {
    fasds: "fa-solid",
    fasdr: "fa-regular",
    fasdl: "fa-light",
    fasdt: "fa-thin"
  }
}, F7e = ["fa-solid", "fa-regular", "fa-light", "fa-thin", "fa-duotone", "fa-brands"], L4 = ["fa", "fas", "far", "fal", "fat", "fad", "fadr", "fadl", "fadt", "fab", "fass", "fasr", "fasl", "fast", "fasds", "fasdr", "fasdl", "fasdt", ...I7e, ...F7e], D7e = ["solid", "regular", "light", "thin", "duotone", "brands"], RK = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], L7e = RK.concat([11, 12, 13, 14, 15, 16, 17, 18, 19, 20]), V7e = [...Object.keys(z7e), ...D7e, "2xs", "xs", "sm", "lg", "xl", "2xl", "beat", "border", "fade", "beat-fade", "bounce", "flip-both", "flip-horizontal", "flip-vertical", "flip", "fw", "inverse", "layers-counter", "layers-text", "layers", "li", "pull-left", "pull-right", "pulse", "rotate-180", "rotate-270", "rotate-90", "rotate-by", "shake", "spin-pulse", "spin-reverse", "spin", "stack-1x", "stack-2x", "stack", "ul", Cy.GROUP, Cy.SWAP_OPACITY, Cy.PRIMARY, Cy.SECONDARY].concat(RK.map((e) => "".concat(e, "x"))).concat(L7e.map((e) => "w-".concat(e))), W7e = {
  "Font Awesome 5 Free": {
    900: "fas",
    400: "far"
  },
  "Font Awesome 5 Pro": {
    900: "fas",
    400: "far",
    normal: "far",
    300: "fal"
  },
  "Font Awesome 5 Brands": {
    400: "fab",
    normal: "fab"
  },
  "Font Awesome 5 Duotone": {
    900: "fad"
  }
};
const _i = "___FONT_AWESOME___", V4 = 16, zK = "fa", FK = "svg-inline--fa", Cu = "data-fa-i2svg", W4 = "data-fa-pseudo-element", U7e = "data-fa-pseudo-element-pending", h6 = "data-prefix", b6 = "data-icon", YR = "fontawesome-i2svg", Y7e = "async", H7e = ["HTML", "HEAD", "STYLE", "SCRIPT"], DK = (() => {
  try {
    return process.env.NODE_ENV === "production";
  } catch {
    return !1;
  }
})();
function kb(e) {
  return new Proxy(e, {
    get(t, r) {
      return r in t ? t[r] : t[xn];
    }
  });
}
const LK = ke({}, IK);
LK[xn] = ke(ke(ke(ke({}, {
  "fa-duotone": "duotone"
}), IK[xn]), WR.kit), WR["kit-duotone"]);
const G7e = kb(LK), U4 = ke({}, P7e);
U4[xn] = ke(ke(ke(ke({}, {
  duotone: "fad"
}), U4[xn]), UR.kit), UR["kit-duotone"]);
const HR = kb(U4), Y4 = ke({}, D4);
Y4[xn] = ke(ke({}, Y4[xn]), j7e.kit);
const y6 = kb(Y4), H4 = ke({}, R7e);
H4[xn] = ke(ke({}, H4[xn]), _7e.kit);
kb(H4);
const q7e = v7e, VK = "fa-layers-text", B7e = x7e, X7e = ke({}, O7e);
kb(X7e);
const K7e = ["class", "data-prefix", "data-icon", "data-fa-transform", "data-fa-mask"], Hk = w7e, J7e = [...A7e, ...V7e], Vg = hc.FontAwesomeConfig || {};
function Q7e(e) {
  var t = Hr.querySelector("script[" + e + "]");
  if (t)
    return t.getAttribute(e);
}
function Z7e(e) {
  return e === "" ? !0 : e === "false" ? !1 : e === "true" ? !0 : e;
}
Hr && typeof Hr.querySelector == "function" && [["data-family-prefix", "familyPrefix"], ["data-css-prefix", "cssPrefix"], ["data-family-default", "familyDefault"], ["data-style-default", "styleDefault"], ["data-replacement-class", "replacementClass"], ["data-auto-replace-svg", "autoReplaceSvg"], ["data-auto-add-css", "autoAddCss"], ["data-auto-a11y", "autoA11y"], ["data-search-pseudo-elements", "searchPseudoElements"], ["data-observe-mutations", "observeMutations"], ["data-mutate-approach", "mutateApproach"], ["data-keep-original-source", "keepOriginalSource"], ["data-measure-performance", "measurePerformance"], ["data-show-missing-icons", "showMissingIcons"]].forEach((e) => {
  let [t, r] = e;
  const n = Z7e(Q7e(t));
  n != null && (Vg[r] = n);
});
const WK = {
  styleDefault: "solid",
  familyDefault: xn,
  cssPrefix: zK,
  replacementClass: FK,
  autoReplaceSvg: !0,
  autoAddCss: !0,
  autoA11y: !0,
  searchPseudoElements: !1,
  observeMutations: !0,
  mutateApproach: "async",
  keepOriginalSource: !0,
  measurePerformance: !1,
  showMissingIcons: !0
};
Vg.familyPrefix && (Vg.cssPrefix = Vg.familyPrefix);
const Od = ke(ke({}, WK), Vg);
Od.autoReplaceSvg || (Od.observeMutations = !1);
const Be = {};
Object.keys(WK).forEach((e) => {
  Object.defineProperty(Be, e, {
    enumerable: !0,
    set: function(t) {
      Od[e] = t, Wg.forEach((r) => r(Be));
    },
    get: function() {
      return Od[e];
    }
  });
});
Object.defineProperty(Be, "familyPrefix", {
  enumerable: !0,
  set: function(e) {
    Od.cssPrefix = e, Wg.forEach((t) => t(Be));
  },
  get: function() {
    return Od.cssPrefix;
  }
});
hc.FontAwesomeConfig = Be;
const Wg = [];
function eTe(e) {
  return Wg.push(e), () => {
    Wg.splice(Wg.indexOf(e), 1);
  };
}
const ul = V4, Oa = {
  size: 16,
  x: 0,
  y: 0,
  rotate: 0,
  flipX: !1,
  flipY: !1
};
function tTe(e) {
  if (!e || !Gi)
    return;
  const t = Hr.createElement("style");
  t.setAttribute("type", "text/css"), t.innerHTML = e;
  const r = Hr.head.childNodes;
  let n = null;
  for (let o = r.length - 1; o > -1; o--) {
    const a = r[o], i = (a.tagName || "").toUpperCase();
    ["STYLE", "LINK"].indexOf(i) > -1 && (n = a);
  }
  return Hr.head.insertBefore(t, n), e;
}
const rTe = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
function Lh() {
  let e = 12, t = "";
  for (; e-- > 0; )
    t += rTe[Math.random() * 62 | 0];
  return t;
}
function rp(e) {
  const t = [];
  for (let r = (e || []).length >>> 0; r--; )
    t[r] = e[r];
  return t;
}
function v6(e) {
  return e.classList ? rp(e.classList) : (e.getAttribute("class") || "").split(" ").filter((t) => t);
}
function UK(e) {
  return "".concat(e).replace(/&/g, "&amp;").replace(/"/g, "&quot;").replace(/'/g, "&#39;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
}
function nTe(e) {
  return Object.keys(e || {}).reduce((t, r) => t + "".concat(r, '="').concat(UK(e[r]), '" '), "").trim();
}
function bx(e) {
  return Object.keys(e || {}).reduce((t, r) => t + "".concat(r, ": ").concat(e[r].trim(), ";"), "");
}
function x6(e) {
  return e.size !== Oa.size || e.x !== Oa.x || e.y !== Oa.y || e.rotate !== Oa.rotate || e.flipX || e.flipY;
}
function oTe(e) {
  let {
    transform: t,
    containerWidth: r,
    iconWidth: n
  } = e;
  const o = {
    transform: "translate(".concat(r / 2, " 256)")
  }, a = "translate(".concat(t.x * 32, ", ").concat(t.y * 32, ") "), i = "scale(".concat(t.size / 16 * (t.flipX ? -1 : 1), ", ").concat(t.size / 16 * (t.flipY ? -1 : 1), ") "), s = "rotate(".concat(t.rotate, " 0 0)"), l = {
    transform: "".concat(a, " ").concat(i, " ").concat(s)
  }, c = {
    transform: "translate(".concat(n / 2 * -1, " -256)")
  };
  return {
    outer: o,
    inner: l,
    path: c
  };
}
function aTe(e) {
  let {
    transform: t,
    width: r = V4,
    height: n = V4,
    startCentered: o = !1
  } = e, a = "";
  return o && jK ? a += "translate(".concat(t.x / ul - r / 2, "em, ").concat(t.y / ul - n / 2, "em) ") : o ? a += "translate(calc(-50% + ".concat(t.x / ul, "em), calc(-50% + ").concat(t.y / ul, "em)) ") : a += "translate(".concat(t.x / ul, "em, ").concat(t.y / ul, "em) "), a += "scale(".concat(t.size / ul * (t.flipX ? -1 : 1), ", ").concat(t.size / ul * (t.flipY ? -1 : 1), ") "), a += "rotate(".concat(t.rotate, "deg) "), a;
}
var iTe = `:root, :host {
  --fa-font-solid: normal 900 1em/1 "Font Awesome 6 Free";
  --fa-font-regular: normal 400 1em/1 "Font Awesome 6 Free";
  --fa-font-light: normal 300 1em/1 "Font Awesome 6 Pro";
  --fa-font-thin: normal 100 1em/1 "Font Awesome 6 Pro";
  --fa-font-duotone: normal 900 1em/1 "Font Awesome 6 Duotone";
  --fa-font-duotone-regular: normal 400 1em/1 "Font Awesome 6 Duotone";
  --fa-font-duotone-light: normal 300 1em/1 "Font Awesome 6 Duotone";
  --fa-font-duotone-thin: normal 100 1em/1 "Font Awesome 6 Duotone";
  --fa-font-brands: normal 400 1em/1 "Font Awesome 6 Brands";
  --fa-font-sharp-solid: normal 900 1em/1 "Font Awesome 6 Sharp";
  --fa-font-sharp-regular: normal 400 1em/1 "Font Awesome 6 Sharp";
  --fa-font-sharp-light: normal 300 1em/1 "Font Awesome 6 Sharp";
  --fa-font-sharp-thin: normal 100 1em/1 "Font Awesome 6 Sharp";
  --fa-font-sharp-duotone-solid: normal 900 1em/1 "Font Awesome 6 Sharp Duotone";
  --fa-font-sharp-duotone-regular: normal 400 1em/1 "Font Awesome 6 Sharp Duotone";
  --fa-font-sharp-duotone-light: normal 300 1em/1 "Font Awesome 6 Sharp Duotone";
  --fa-font-sharp-duotone-thin: normal 100 1em/1 "Font Awesome 6 Sharp Duotone";
}

svg:not(:root).svg-inline--fa, svg:not(:host).svg-inline--fa {
  overflow: visible;
  box-sizing: content-box;
}

.svg-inline--fa {
  display: var(--fa-display, inline-block);
  height: 1em;
  overflow: visible;
  vertical-align: -0.125em;
}
.svg-inline--fa.fa-2xs {
  vertical-align: 0.1em;
}
.svg-inline--fa.fa-xs {
  vertical-align: 0em;
}
.svg-inline--fa.fa-sm {
  vertical-align: -0.0714285705em;
}
.svg-inline--fa.fa-lg {
  vertical-align: -0.2em;
}
.svg-inline--fa.fa-xl {
  vertical-align: -0.25em;
}
.svg-inline--fa.fa-2xl {
  vertical-align: -0.3125em;
}
.svg-inline--fa.fa-pull-left {
  margin-right: var(--fa-pull-margin, 0.3em);
  width: auto;
}
.svg-inline--fa.fa-pull-right {
  margin-left: var(--fa-pull-margin, 0.3em);
  width: auto;
}
.svg-inline--fa.fa-li {
  width: var(--fa-li-width, 2em);
  top: 0.25em;
}
.svg-inline--fa.fa-fw {
  width: var(--fa-fw-width, 1.25em);
}

.fa-layers svg.svg-inline--fa {
  bottom: 0;
  left: 0;
  margin: auto;
  position: absolute;
  right: 0;
  top: 0;
}

.fa-layers-counter, .fa-layers-text {
  display: inline-block;
  position: absolute;
  text-align: center;
}

.fa-layers {
  display: inline-block;
  height: 1em;
  position: relative;
  text-align: center;
  vertical-align: -0.125em;
  width: 1em;
}
.fa-layers svg.svg-inline--fa {
  transform-origin: center center;
}

.fa-layers-text {
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  transform-origin: center center;
}

.fa-layers-counter {
  background-color: var(--fa-counter-background-color, #ff253a);
  border-radius: var(--fa-counter-border-radius, 1em);
  box-sizing: border-box;
  color: var(--fa-inverse, #fff);
  line-height: var(--fa-counter-line-height, 1);
  max-width: var(--fa-counter-max-width, 5em);
  min-width: var(--fa-counter-min-width, 1.5em);
  overflow: hidden;
  padding: var(--fa-counter-padding, 0.25em 0.5em);
  right: var(--fa-right, 0);
  text-overflow: ellipsis;
  top: var(--fa-top, 0);
  transform: scale(var(--fa-counter-scale, 0.25));
  transform-origin: top right;
}

.fa-layers-bottom-right {
  bottom: var(--fa-bottom, 0);
  right: var(--fa-right, 0);
  top: auto;
  transform: scale(var(--fa-layers-scale, 0.25));
  transform-origin: bottom right;
}

.fa-layers-bottom-left {
  bottom: var(--fa-bottom, 0);
  left: var(--fa-left, 0);
  right: auto;
  top: auto;
  transform: scale(var(--fa-layers-scale, 0.25));
  transform-origin: bottom left;
}

.fa-layers-top-right {
  top: var(--fa-top, 0);
  right: var(--fa-right, 0);
  transform: scale(var(--fa-layers-scale, 0.25));
  transform-origin: top right;
}

.fa-layers-top-left {
  left: var(--fa-left, 0);
  right: auto;
  top: var(--fa-top, 0);
  transform: scale(var(--fa-layers-scale, 0.25));
  transform-origin: top left;
}

.fa-1x {
  font-size: 1em;
}

.fa-2x {
  font-size: 2em;
}

.fa-3x {
  font-size: 3em;
}

.fa-4x {
  font-size: 4em;
}

.fa-5x {
  font-size: 5em;
}

.fa-6x {
  font-size: 6em;
}

.fa-7x {
  font-size: 7em;
}

.fa-8x {
  font-size: 8em;
}

.fa-9x {
  font-size: 9em;
}

.fa-10x {
  font-size: 10em;
}

.fa-2xs {
  font-size: 0.625em;
  line-height: 0.1em;
  vertical-align: 0.225em;
}

.fa-xs {
  font-size: 0.75em;
  line-height: 0.0833333337em;
  vertical-align: 0.125em;
}

.fa-sm {
  font-size: 0.875em;
  line-height: 0.0714285718em;
  vertical-align: 0.0535714295em;
}

.fa-lg {
  font-size: 1.25em;
  line-height: 0.05em;
  vertical-align: -0.075em;
}

.fa-xl {
  font-size: 1.5em;
  line-height: 0.0416666682em;
  vertical-align: -0.125em;
}

.fa-2xl {
  font-size: 2em;
  line-height: 0.03125em;
  vertical-align: -0.1875em;
}

.fa-fw {
  text-align: center;
  width: 1.25em;
}

.fa-ul {
  list-style-type: none;
  margin-left: var(--fa-li-margin, 2.5em);
  padding-left: 0;
}
.fa-ul > li {
  position: relative;
}

.fa-li {
  left: calc(-1 * var(--fa-li-width, 2em));
  position: absolute;
  text-align: center;
  width: var(--fa-li-width, 2em);
  line-height: inherit;
}

.fa-border {
  border-color: var(--fa-border-color, #eee);
  border-radius: var(--fa-border-radius, 0.1em);
  border-style: var(--fa-border-style, solid);
  border-width: var(--fa-border-width, 0.08em);
  padding: var(--fa-border-padding, 0.2em 0.25em 0.15em);
}

.fa-pull-left {
  float: left;
  margin-right: var(--fa-pull-margin, 0.3em);
}

.fa-pull-right {
  float: right;
  margin-left: var(--fa-pull-margin, 0.3em);
}

.fa-beat {
  animation-name: fa-beat;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, ease-in-out);
}

.fa-bounce {
  animation-name: fa-bounce;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.28, 0.84, 0.42, 1));
}

.fa-fade {
  animation-name: fa-fade;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));
}

.fa-beat-fade {
  animation-name: fa-beat-fade;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));
}

.fa-flip {
  animation-name: fa-flip;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, ease-in-out);
}

.fa-shake {
  animation-name: fa-shake;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, linear);
}

.fa-spin {
  animation-name: fa-spin;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 2s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, linear);
}

.fa-spin-reverse {
  --fa-animation-direction: reverse;
}

.fa-pulse,
.fa-spin-pulse {
  animation-name: fa-spin;
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, steps(8));
}

@media (prefers-reduced-motion: reduce) {
  .fa-beat,
.fa-bounce,
.fa-fade,
.fa-beat-fade,
.fa-flip,
.fa-pulse,
.fa-shake,
.fa-spin,
.fa-spin-pulse {
    animation-delay: -1ms;
    animation-duration: 1ms;
    animation-iteration-count: 1;
    transition-delay: 0s;
    transition-duration: 0s;
  }
}
@keyframes fa-beat {
  0%, 90% {
    transform: scale(1);
  }
  45% {
    transform: scale(var(--fa-beat-scale, 1.25));
  }
}
@keyframes fa-bounce {
  0% {
    transform: scale(1, 1) translateY(0);
  }
  10% {
    transform: scale(var(--fa-bounce-start-scale-x, 1.1), var(--fa-bounce-start-scale-y, 0.9)) translateY(0);
  }
  30% {
    transform: scale(var(--fa-bounce-jump-scale-x, 0.9), var(--fa-bounce-jump-scale-y, 1.1)) translateY(var(--fa-bounce-height, -0.5em));
  }
  50% {
    transform: scale(var(--fa-bounce-land-scale-x, 1.05), var(--fa-bounce-land-scale-y, 0.95)) translateY(0);
  }
  57% {
    transform: scale(1, 1) translateY(var(--fa-bounce-rebound, -0.125em));
  }
  64% {
    transform: scale(1, 1) translateY(0);
  }
  100% {
    transform: scale(1, 1) translateY(0);
  }
}
@keyframes fa-fade {
  50% {
    opacity: var(--fa-fade-opacity, 0.4);
  }
}
@keyframes fa-beat-fade {
  0%, 100% {
    opacity: var(--fa-beat-fade-opacity, 0.4);
    transform: scale(1);
  }
  50% {
    opacity: 1;
    transform: scale(var(--fa-beat-fade-scale, 1.125));
  }
}
@keyframes fa-flip {
  50% {
    transform: rotate3d(var(--fa-flip-x, 0), var(--fa-flip-y, 1), var(--fa-flip-z, 0), var(--fa-flip-angle, -180deg));
  }
}
@keyframes fa-shake {
  0% {
    transform: rotate(-15deg);
  }
  4% {
    transform: rotate(15deg);
  }
  8%, 24% {
    transform: rotate(-18deg);
  }
  12%, 28% {
    transform: rotate(18deg);
  }
  16% {
    transform: rotate(-22deg);
  }
  20% {
    transform: rotate(22deg);
  }
  32% {
    transform: rotate(-12deg);
  }
  36% {
    transform: rotate(12deg);
  }
  40%, 100% {
    transform: rotate(0deg);
  }
}
@keyframes fa-spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
.fa-rotate-90 {
  transform: rotate(90deg);
}

.fa-rotate-180 {
  transform: rotate(180deg);
}

.fa-rotate-270 {
  transform: rotate(270deg);
}

.fa-flip-horizontal {
  transform: scale(-1, 1);
}

.fa-flip-vertical {
  transform: scale(1, -1);
}

.fa-flip-both,
.fa-flip-horizontal.fa-flip-vertical {
  transform: scale(-1, -1);
}

.fa-rotate-by {
  transform: rotate(var(--fa-rotate-angle, 0));
}

.fa-stack {
  display: inline-block;
  vertical-align: middle;
  height: 2em;
  position: relative;
  width: 2.5em;
}

.fa-stack-1x,
.fa-stack-2x {
  bottom: 0;
  left: 0;
  margin: auto;
  position: absolute;
  right: 0;
  top: 0;
  z-index: var(--fa-stack-z-index, auto);
}

.svg-inline--fa.fa-stack-1x {
  height: 1em;
  width: 1.25em;
}
.svg-inline--fa.fa-stack-2x {
  height: 2em;
  width: 2.5em;
}

.fa-inverse {
  color: var(--fa-inverse, #fff);
}

.sr-only,
.fa-sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.sr-only-focusable:not(:focus),
.fa-sr-only-focusable:not(:focus) {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.svg-inline--fa .fa-primary {
  fill: var(--fa-primary-color, currentColor);
  opacity: var(--fa-primary-opacity, 1);
}

.svg-inline--fa .fa-secondary {
  fill: var(--fa-secondary-color, currentColor);
  opacity: var(--fa-secondary-opacity, 0.4);
}

.svg-inline--fa.fa-swap-opacity .fa-primary {
  opacity: var(--fa-secondary-opacity, 0.4);
}

.svg-inline--fa.fa-swap-opacity .fa-secondary {
  opacity: var(--fa-primary-opacity, 1);
}

.svg-inline--fa mask .fa-primary,
.svg-inline--fa mask .fa-secondary {
  fill: black;
}`;
function YK() {
  const e = zK, t = FK, r = Be.cssPrefix, n = Be.replacementClass;
  let o = iTe;
  if (r !== e || n !== t) {
    const a = new RegExp("\\.".concat(e, "\\-"), "g"), i = new RegExp("\\--".concat(e, "\\-"), "g"), s = new RegExp("\\.".concat(t), "g");
    o = o.replace(a, ".".concat(r, "-")).replace(i, "--".concat(r, "-")).replace(s, ".".concat(n));
  }
  return o;
}
let GR = !1;
function Gk() {
  Be.autoAddCss && !GR && (tTe(YK()), GR = !0);
}
var sTe = {
  mixout() {
    return {
      dom: {
        css: YK,
        insertCss: Gk
      }
    };
  },
  hooks() {
    return {
      beforeDOMElementCreation() {
        Gk();
      },
      beforeI2svg() {
        Gk();
      }
    };
  }
};
const Ni = hc || {};
Ni[_i] || (Ni[_i] = {});
Ni[_i].styles || (Ni[_i].styles = {});
Ni[_i].hooks || (Ni[_i].hooks = {});
Ni[_i].shims || (Ni[_i].shims = []);
var Ea = Ni[_i];
const HK = [], GK = function() {
  Hr.removeEventListener("DOMContentLoaded", GK), k1 = 1, HK.map((e) => e());
};
let k1 = !1;
Gi && (k1 = (Hr.documentElement.doScroll ? /^loaded|^c/ : /^loaded|^i|^c/).test(Hr.readyState), k1 || Hr.addEventListener("DOMContentLoaded", GK));
function lTe(e) {
  Gi && (k1 ? setTimeout(e, 0) : HK.push(e));
}
function $b(e) {
  const {
    tag: t,
    attributes: r = {},
    children: n = []
  } = e;
  return typeof e == "string" ? UK(e) : "<".concat(t, " ").concat(nTe(r), ">").concat(n.map($b).join(""), "</").concat(t, ">");
}
function qR(e, t, r) {
  if (e && e[t] && e[t][r])
    return {
      prefix: t,
      iconName: r,
      icon: e[t][r]
    };
}
var qk = function(e, t, r, n) {
  var o = Object.keys(e), a = o.length, i = t, s, l, c;
  for (r === void 0 ? (s = 1, c = e[o[0]]) : (s = 0, c = r); s < a; s++)
    l = o[s], c = i(c, e[l], l, e);
  return c;
};
function cTe(e) {
  const t = [];
  let r = 0;
  const n = e.length;
  for (; r < n; ) {
    const o = e.charCodeAt(r++);
    if (o >= 55296 && o <= 56319 && r < n) {
      const a = e.charCodeAt(r++);
      (a & 64512) == 56320 ? t.push(((o & 1023) << 10) + (a & 1023) + 65536) : (t.push(o), r--);
    } else
      t.push(o);
  }
  return t;
}
function qK(e) {
  const t = cTe(e);
  return t.length === 1 ? t[0].toString(16) : null;
}
function uTe(e, t) {
  const r = e.length;
  let n = e.charCodeAt(t), o;
  return n >= 55296 && n <= 56319 && r > t + 1 && (o = e.charCodeAt(t + 1), o >= 56320 && o <= 57343) ? (n - 55296) * 1024 + o - 56320 + 65536 : n;
}
function BR(e) {
  return Object.keys(e).reduce((t, r) => {
    const n = e[r];
    return n.icon ? t[n.iconName] = n.icon : t[r] = n, t;
  }, {});
}
function G4(e, t) {
  let r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
  const {
    skipHooks: n = !1
  } = r, o = BR(t);
  typeof Ea.hooks.addPack == "function" && !n ? Ea.hooks.addPack(e, BR(t)) : Ea.styles[e] = ke(ke({}, Ea.styles[e] || {}), o), e === "fas" && G4("fa", t);
}
const {
  styles: Vh,
  shims: fTe
} = Ea, BK = Object.keys(y6), dTe = BK.reduce((e, t) => (e[t] = Object.keys(y6[t]), e), {});
let w6 = null, XK = {}, KK = {}, JK = {}, QK = {}, ZK = {};
function pTe(e) {
  return ~J7e.indexOf(e);
}
function mTe(e, t) {
  const r = t.split("-"), n = r[0], o = r.slice(1).join("-");
  return n === e && o !== "" && !pTe(o) ? o : null;
}
const eJ = () => {
  const e = (n) => qk(Vh, (o, a, i) => (o[i] = qk(a, n, {}), o), {});
  XK = e((n, o, a) => (o[3] && (n[o[3]] = a), o[2] && o[2].filter((i) => typeof i == "number").forEach((i) => {
    n[i.toString(16)] = a;
  }), n)), KK = e((n, o, a) => (n[a] = a, o[2] && o[2].filter((i) => typeof i == "string").forEach((i) => {
    n[i] = a;
  }), n)), ZK = e((n, o, a) => {
    const i = o[2];
    return n[a] = a, i.forEach((s) => {
      n[s] = a;
    }), n;
  });
  const t = "far" in Vh || Be.autoFetchSvg, r = qk(fTe, (n, o) => {
    const a = o[0];
    let i = o[1];
    const s = o[2];
    return i === "far" && !t && (i = "fas"), typeof a == "string" && (n.names[a] = {
      prefix: i,
      iconName: s
    }), typeof a == "number" && (n.unicodes[a.toString(16)] = {
      prefix: i,
      iconName: s
    }), n;
  }, {
    names: {},
    unicodes: {}
  });
  JK = r.names, QK = r.unicodes, w6 = yx(Be.styleDefault, {
    family: Be.familyDefault
  });
};
eTe((e) => {
  w6 = yx(e.styleDefault, {
    family: Be.familyDefault
  });
});
eJ();
function k6(e, t) {
  return (XK[e] || {})[t];
}
function gTe(e, t) {
  return (KK[e] || {})[t];
}
function Kc(e, t) {
  return (ZK[e] || {})[t];
}
function tJ(e) {
  return JK[e] || {
    prefix: null,
    iconName: null
  };
}
function hTe(e) {
  const t = QK[e], r = k6("fas", e);
  return t || (r ? {
    prefix: "fas",
    iconName: r
  } : null) || {
    prefix: null,
    iconName: null
  };
}
function bc() {
  return w6;
}
const rJ = () => ({
  prefix: null,
  iconName: null,
  rest: []
});
function bTe(e) {
  let t = xn;
  const r = BK.reduce((n, o) => (n[o] = "".concat(Be.cssPrefix, "-").concat(o), n), {});
  return MK.forEach((n) => {
    (e.includes(r[n]) || e.some((o) => dTe[n].includes(o))) && (t = n);
  }), t;
}
function yx(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  const {
    family: r = xn
  } = t, n = G7e[r][e];
  if (r === hx && !e)
    return "fad";
  const o = HR[r][e] || HR[r][n], a = e in Ea.styles ? e : null;
  return o || a || null;
}
function yTe(e) {
  let t = [], r = null;
  return e.forEach((n) => {
    const o = mTe(Be.cssPrefix, n);
    o ? r = o : n && t.push(n);
  }), {
    iconName: r,
    rest: t
  };
}
function XR(e) {
  return e.sort().filter((t, r, n) => n.indexOf(t) === r);
}
function vx(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  const {
    skipLookups: r = !1
  } = t;
  let n = null;
  const o = L4.concat(T7e), a = XR(e.filter((f) => o.includes(f))), i = XR(e.filter((f) => !L4.includes(f))), s = a.filter((f) => (n = f, !TK.includes(f))), [l = null] = s, c = bTe(a), u = ke(ke({}, yTe(i)), {}, {
    prefix: yx(l, {
      family: c
    })
  });
  return ke(ke(ke({}, u), kTe({
    values: e,
    family: c,
    styles: Vh,
    config: Be,
    canonical: u,
    givenPrefix: n
  })), vTe(r, n, u));
}
function vTe(e, t, r) {
  let {
    prefix: n,
    iconName: o
  } = r;
  if (e || !n || !o)
    return {
      prefix: n,
      iconName: o
    };
  const a = t === "fa" ? tJ(o) : {}, i = Kc(n, o);
  return o = a.iconName || i || o, n = a.prefix || n, n === "far" && !Vh.far && Vh.fas && !Be.autoFetchSvg && (n = "fas"), {
    prefix: n,
    iconName: o
  };
}
const xTe = MK.filter((e) => e !== xn || e !== hx), wTe = Object.keys(D4).filter((e) => e !== xn).map((e) => Object.keys(D4[e])).flat();
function kTe(e) {
  const {
    values: t,
    family: r,
    canonical: n,
    givenPrefix: o = "",
    styles: a = {},
    config: i = {}
  } = e, s = r === hx, l = t.includes("fa-duotone") || t.includes("fad"), c = i.familyDefault === "duotone", u = n.prefix === "fad" || n.prefix === "fa-duotone";
  if (!s && (l || c || u) && (n.prefix = "fad"), (t.includes("fa-brands") || t.includes("fab")) && (n.prefix = "fab"), !n.prefix && xTe.includes(r) && (Object.keys(a).find((f) => wTe.includes(f)) || i.autoFetchSvg)) {
    const f = S7e.get(r).defaultShortPrefixId;
    n.prefix = f, n.iconName = Kc(n.prefix, n.iconName) || n.iconName;
  }
  return (n.prefix === "fa" || o === "fa") && (n.prefix = bc() || "fas"), n;
}
class $Te {
  constructor() {
    this.definitions = {};
  }
  add() {
    for (var t = arguments.length, r = new Array(t), n = 0; n < t; n++)
      r[n] = arguments[n];
    const o = r.reduce(this._pullDefinitions, {});
    Object.keys(o).forEach((a) => {
      this.definitions[a] = ke(ke({}, this.definitions[a] || {}), o[a]), G4(a, o[a]);
      const i = y6[xn][a];
      i && G4(i, o[a]), eJ();
    });
  }
  reset() {
    this.definitions = {};
  }
  _pullDefinitions(t, r) {
    const n = r.prefix && r.iconName && r.icon ? {
      0: r
    } : r;
    return Object.keys(n).map((o) => {
      const {
        prefix: a,
        iconName: i,
        icon: s
      } = n[o], l = s[2];
      t[a] || (t[a] = {}), l.length > 0 && l.forEach((c) => {
        typeof c == "string" && (t[a][c] = s);
      }), t[a][i] = s;
    }), t;
  }
}
let KR = [], vf = {};
const rd = {}, OTe = Object.keys(rd);
function ETe(e, t) {
  let {
    mixoutsTo: r
  } = t;
  return KR = e, vf = {}, Object.keys(rd).forEach((n) => {
    OTe.indexOf(n) === -1 && delete rd[n];
  }), KR.forEach((n) => {
    const o = n.mixout ? n.mixout() : {};
    if (Object.keys(o).forEach((a) => {
      typeof o[a] == "function" && (r[a] = o[a]), typeof o[a] == "object" && Object.keys(o[a]).forEach((i) => {
        r[a] || (r[a] = {}), r[a][i] = o[a][i];
      });
    }), n.hooks) {
      const a = n.hooks();
      Object.keys(a).forEach((i) => {
        vf[i] || (vf[i] = []), vf[i].push(a[i]);
      });
    }
    n.provides && n.provides(rd);
  }), r;
}
function q4(e, t) {
  for (var r = arguments.length, n = new Array(r > 2 ? r - 2 : 0), o = 2; o < r; o++)
    n[o - 2] = arguments[o];
  return (vf[e] || []).forEach((a) => {
    t = a.apply(null, [t, ...n]);
  }), t;
}
function Au(e) {
  for (var t = arguments.length, r = new Array(t > 1 ? t - 1 : 0), n = 1; n < t; n++)
    r[n - 1] = arguments[n];
  (vf[e] || []).forEach((o) => {
    o.apply(null, r);
  });
}
function yc() {
  const e = arguments[0], t = Array.prototype.slice.call(arguments, 1);
  return rd[e] ? rd[e].apply(null, t) : void 0;
}
function B4(e) {
  e.prefix === "fa" && (e.prefix = "fas");
  let {
    iconName: t
  } = e;
  const r = e.prefix || bc();
  if (t)
    return t = Kc(r, t) || t, qR(nJ.definitions, r, t) || qR(Ea.styles, r, t);
}
const nJ = new $Te(), STe = () => {
  Be.autoReplaceSvg = !1, Be.observeMutations = !1, Au("noAuto");
}, PTe = {
  i2svg: function() {
    let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    return Gi ? (Au("beforeI2svg", e), yc("pseudoElements2svg", e), yc("i2svg", e)) : Promise.reject(new Error("Operation requires a DOM of some kind."));
  },
  watch: function() {
    let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    const {
      autoReplaceSvgRoot: t
    } = e;
    Be.autoReplaceSvg === !1 && (Be.autoReplaceSvg = !0), Be.observeMutations = !0, lTe(() => {
      ATe({
        autoReplaceSvgRoot: t
      }), Au("watch", e);
    });
  }
}, CTe = {
  icon: (e) => {
    if (e === null)
      return null;
    if (typeof e == "object" && e.prefix && e.iconName)
      return {
        prefix: e.prefix,
        iconName: Kc(e.prefix, e.iconName) || e.iconName
      };
    if (Array.isArray(e) && e.length === 2) {
      const t = e[1].indexOf("fa-") === 0 ? e[1].slice(3) : e[1], r = yx(e[0]);
      return {
        prefix: r,
        iconName: Kc(r, t) || t
      };
    }
    if (typeof e == "string" && (e.indexOf("".concat(Be.cssPrefix, "-")) > -1 || e.match(q7e))) {
      const t = vx(e.split(" "), {
        skipLookups: !0
      });
      return {
        prefix: t.prefix || bc(),
        iconName: Kc(t.prefix, t.iconName) || t.iconName
      };
    }
    if (typeof e == "string") {
      const t = bc();
      return {
        prefix: t,
        iconName: Kc(t, e) || e
      };
    }
  }
}, ao = {
  noAuto: STe,
  config: Be,
  dom: PTe,
  parse: CTe,
  library: nJ,
  findIconDefinition: B4,
  toHtml: $b
}, ATe = function() {
  let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  const {
    autoReplaceSvgRoot: t = Hr
  } = e;
  (Object.keys(Ea.styles).length > 0 || Be.autoFetchSvg) && Gi && Be.autoReplaceSvg && ao.dom.i2svg({
    node: t
  });
};
function xx(e, t) {
  return Object.defineProperty(e, "abstract", {
    get: t
  }), Object.defineProperty(e, "html", {
    get: function() {
      return e.abstract.map((r) => $b(r));
    }
  }), Object.defineProperty(e, "node", {
    get: function() {
      if (!Gi) return;
      const r = Hr.createElement("div");
      return r.innerHTML = e.html, r.children;
    }
  }), e;
}
function _Te(e) {
  let {
    children: t,
    main: r,
    mask: n,
    attributes: o,
    styles: a,
    transform: i
  } = e;
  if (x6(i) && r.found && !n.found) {
    const {
      width: s,
      height: l
    } = r, c = {
      x: s / l / 2,
      y: 0.5
    };
    o.style = bx(ke(ke({}, a), {}, {
      "transform-origin": "".concat(c.x + i.x / 16, "em ").concat(c.y + i.y / 16, "em")
    }));
  }
  return [{
    tag: "svg",
    attributes: o,
    children: t
  }];
}
function NTe(e) {
  let {
    prefix: t,
    iconName: r,
    children: n,
    attributes: o,
    symbol: a
  } = e;
  const i = a === !0 ? "".concat(t, "-").concat(Be.cssPrefix, "-").concat(r) : a;
  return [{
    tag: "svg",
    attributes: {
      style: "display: none;"
    },
    children: [{
      tag: "symbol",
      attributes: ke(ke({}, o), {}, {
        id: i
      }),
      children: n
    }]
  }];
}
function $6(e) {
  const {
    icons: {
      main: t,
      mask: r
    },
    prefix: n,
    iconName: o,
    transform: a,
    symbol: i,
    title: s,
    maskId: l,
    titleId: c,
    extra: u,
    watchable: f = !1
  } = e, {
    width: p,
    height: v
  } = r.found ? r : t, x = N7e.includes(n), b = [Be.replacementClass, o ? "".concat(Be.cssPrefix, "-").concat(o) : ""].filter((h) => u.classes.indexOf(h) === -1).filter((h) => h !== "" || !!h).concat(u.classes).join(" ");
  let m = {
    children: [],
    attributes: ke(ke({}, u.attributes), {}, {
      "data-prefix": n,
      "data-icon": o,
      class: b,
      role: u.attributes.role || "img",
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 ".concat(p, " ").concat(v)
    })
  };
  const w = x && !~u.classes.indexOf("fa-fw") ? {
    width: "".concat(p / v * 16 * 0.0625, "em")
  } : {};
  f && (m.attributes[Cu] = ""), s && (m.children.push({
    tag: "title",
    attributes: {
      id: m.attributes["aria-labelledby"] || "title-".concat(c || Lh())
    },
    children: [s]
  }), delete m.attributes.title);
  const $ = ke(ke({}, m), {}, {
    prefix: n,
    iconName: o,
    main: t,
    mask: r,
    maskId: l,
    transform: a,
    symbol: i,
    styles: ke(ke({}, w), u.styles)
  }), {
    children: E,
    attributes: S
  } = r.found && t.found ? yc("generateAbstractMask", $) || {
    children: [],
    attributes: {}
  } : yc("generateAbstractIcon", $) || {
    children: [],
    attributes: {}
  };
  return $.children = E, $.attributes = S, i ? NTe($) : _Te($);
}
function JR(e) {
  const {
    content: t,
    width: r,
    height: n,
    transform: o,
    title: a,
    extra: i,
    watchable: s = !1
  } = e, l = ke(ke(ke({}, i.attributes), a ? {
    title: a
  } : {}), {}, {
    class: i.classes.join(" ")
  });
  s && (l[Cu] = "");
  const c = ke({}, i.styles);
  x6(o) && (c.transform = aTe({
    transform: o,
    startCentered: !0,
    width: r,
    height: n
  }), c["-webkit-transform"] = c.transform);
  const u = bx(c);
  u.length > 0 && (l.style = u);
  const f = [];
  return f.push({
    tag: "span",
    attributes: l,
    children: [t]
  }), a && f.push({
    tag: "span",
    attributes: {
      class: "sr-only"
    },
    children: [a]
  }), f;
}
function jTe(e) {
  const {
    content: t,
    title: r,
    extra: n
  } = e, o = ke(ke(ke({}, n.attributes), r ? {
    title: r
  } : {}), {}, {
    class: n.classes.join(" ")
  }), a = bx(n.styles);
  a.length > 0 && (o.style = a);
  const i = [];
  return i.push({
    tag: "span",
    attributes: o,
    children: [t]
  }), r && i.push({
    tag: "span",
    attributes: {
      class: "sr-only"
    },
    children: [r]
  }), i;
}
const {
  styles: Bk
} = Ea;
function X4(e) {
  const t = e[0], r = e[1], [n] = e.slice(4);
  let o = null;
  return Array.isArray(n) ? o = {
    tag: "g",
    attributes: {
      class: "".concat(Be.cssPrefix, "-").concat(Hk.GROUP)
    },
    children: [{
      tag: "path",
      attributes: {
        class: "".concat(Be.cssPrefix, "-").concat(Hk.SECONDARY),
        fill: "currentColor",
        d: n[0]
      }
    }, {
      tag: "path",
      attributes: {
        class: "".concat(Be.cssPrefix, "-").concat(Hk.PRIMARY),
        fill: "currentColor",
        d: n[1]
      }
    }]
  } : o = {
    tag: "path",
    attributes: {
      fill: "currentColor",
      d: n
    }
  }, {
    found: !0,
    width: t,
    height: r,
    icon: o
  };
}
const ITe = {
  found: !1,
  width: 512,
  height: 512
};
function TTe(e, t) {
  !DK && !Be.showMissingIcons && e && console.error('Icon with name "'.concat(e, '" and prefix "').concat(t, '" is missing.'));
}
function K4(e, t) {
  let r = t;
  return t === "fa" && Be.styleDefault !== null && (t = bc()), new Promise((n, o) => {
    if (r === "fa") {
      const a = tJ(e) || {};
      e = a.iconName || e, t = a.prefix || t;
    }
    if (e && t && Bk[t] && Bk[t][e]) {
      const a = Bk[t][e];
      return n(X4(a));
    }
    TTe(e, t), n(ke(ke({}, ITe), {}, {
      icon: Be.showMissingIcons && e ? yc("missingIconAbstract") || {} : {}
    }));
  });
}
const QR = () => {
}, J4 = Be.measurePerformance && Py && Py.mark && Py.measure ? Py : {
  mark: QR,
  measure: QR
}, lg = 'FA "6.7.2"', MTe = (e) => (J4.mark("".concat(lg, " ").concat(e, " begins")), () => oJ(e)), oJ = (e) => {
  J4.mark("".concat(lg, " ").concat(e, " ends")), J4.measure("".concat(lg, " ").concat(e), "".concat(lg, " ").concat(e, " begins"), "".concat(lg, " ").concat(e, " ends"));
};
var O6 = {
  begin: MTe,
  end: oJ
};
const yv = () => {
};
function ZR(e) {
  return typeof (e.getAttribute ? e.getAttribute(Cu) : null) == "string";
}
function RTe(e) {
  const t = e.getAttribute ? e.getAttribute(h6) : null, r = e.getAttribute ? e.getAttribute(b6) : null;
  return t && r;
}
function zTe(e) {
  return e && e.classList && e.classList.contains && e.classList.contains(Be.replacementClass);
}
function FTe() {
  return Be.autoReplaceSvg === !0 ? vv.replace : vv[Be.autoReplaceSvg] || vv.replace;
}
function DTe(e) {
  return Hr.createElementNS("http://www.w3.org/2000/svg", e);
}
function LTe(e) {
  return Hr.createElement(e);
}
function aJ(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  const {
    ceFn: r = e.tag === "svg" ? DTe : LTe
  } = t;
  if (typeof e == "string")
    return Hr.createTextNode(e);
  const n = r(e.tag);
  return Object.keys(e.attributes || []).forEach(function(o) {
    n.setAttribute(o, e.attributes[o]);
  }), (e.children || []).forEach(function(o) {
    n.appendChild(aJ(o, {
      ceFn: r
    }));
  }), n;
}
function VTe(e) {
  let t = " ".concat(e.outerHTML, " ");
  return t = "".concat(t, "Font Awesome fontawesome.com "), t;
}
const vv = {
  replace: function(e) {
    const t = e[0];
    if (t.parentNode)
      if (e[1].forEach((r) => {
        t.parentNode.insertBefore(aJ(r), t);
      }), t.getAttribute(Cu) === null && Be.keepOriginalSource) {
        let r = Hr.createComment(VTe(t));
        t.parentNode.replaceChild(r, t);
      } else
        t.remove();
  },
  nest: function(e) {
    const t = e[0], r = e[1];
    if (~v6(t).indexOf(Be.replacementClass))
      return vv.replace(e);
    const n = new RegExp("".concat(Be.cssPrefix, "-.*"));
    if (delete r[0].attributes.id, r[0].attributes.class) {
      const a = r[0].attributes.class.split(" ").reduce((i, s) => (s === Be.replacementClass || s.match(n) ? i.toSvg.push(s) : i.toNode.push(s), i), {
        toNode: [],
        toSvg: []
      });
      r[0].attributes.class = a.toSvg.join(" "), a.toNode.length === 0 ? t.removeAttribute("class") : t.setAttribute("class", a.toNode.join(" "));
    }
    const o = r.map((a) => $b(a)).join(`
`);
    t.setAttribute(Cu, ""), t.innerHTML = o;
  }
};
function ez(e) {
  e();
}
function iJ(e, t) {
  const r = typeof t == "function" ? t : yv;
  if (e.length === 0)
    r();
  else {
    let n = ez;
    Be.mutateApproach === Y7e && (n = hc.requestAnimationFrame || ez), n(() => {
      const o = FTe(), a = O6.begin("mutate");
      e.map(o), a(), r();
    });
  }
}
let E6 = !1;
function sJ() {
  E6 = !0;
}
function Q4() {
  E6 = !1;
}
let $1 = null;
function tz(e) {
  if (!VR || !Be.observeMutations)
    return;
  const {
    treeCallback: t = yv,
    nodeCallback: r = yv,
    pseudoElementsCallback: n = yv,
    observeMutationsRoot: o = Hr
  } = e;
  $1 = new VR((a) => {
    if (E6) return;
    const i = bc();
    rp(a).forEach((s) => {
      if (s.type === "childList" && s.addedNodes.length > 0 && !ZR(s.addedNodes[0]) && (Be.searchPseudoElements && n(s.target), t(s.target)), s.type === "attributes" && s.target.parentNode && Be.searchPseudoElements && n(s.target.parentNode), s.type === "attributes" && ZR(s.target) && ~K7e.indexOf(s.attributeName))
        if (s.attributeName === "class" && RTe(s.target)) {
          const {
            prefix: l,
            iconName: c
          } = vx(v6(s.target));
          s.target.setAttribute(h6, l || i), c && s.target.setAttribute(b6, c);
        } else zTe(s.target) && r(s.target);
    });
  }), Gi && $1.observe(o, {
    childList: !0,
    attributes: !0,
    characterData: !0,
    subtree: !0
  });
}
function WTe() {
  $1 && $1.disconnect();
}
function UTe(e) {
  const t = e.getAttribute("style");
  let r = [];
  return t && (r = t.split(";").reduce((n, o) => {
    const a = o.split(":"), i = a[0], s = a.slice(1);
    return i && s.length > 0 && (n[i] = s.join(":").trim()), n;
  }, {})), r;
}
function YTe(e) {
  const t = e.getAttribute("data-prefix"), r = e.getAttribute("data-icon"), n = e.innerText !== void 0 ? e.innerText.trim() : "";
  let o = vx(v6(e));
  return o.prefix || (o.prefix = bc()), t && r && (o.prefix = t, o.iconName = r), o.iconName && o.prefix || (o.prefix && n.length > 0 && (o.iconName = gTe(o.prefix, e.innerText) || k6(o.prefix, qK(e.innerText))), !o.iconName && Be.autoFetchSvg && e.firstChild && e.firstChild.nodeType === Node.TEXT_NODE && (o.iconName = e.firstChild.data)), o;
}
function HTe(e) {
  const t = rp(e.attributes).reduce((o, a) => (o.name !== "class" && o.name !== "style" && (o[a.name] = a.value), o), {}), r = e.getAttribute("title"), n = e.getAttribute("data-fa-title-id");
  return Be.autoA11y && (r ? t["aria-labelledby"] = "".concat(Be.replacementClass, "-title-").concat(n || Lh()) : (t["aria-hidden"] = "true", t.focusable = "false")), t;
}
function GTe() {
  return {
    iconName: null,
    title: null,
    titleId: null,
    prefix: null,
    transform: Oa,
    symbol: !1,
    mask: {
      iconName: null,
      prefix: null,
      rest: []
    },
    maskId: null,
    extra: {
      classes: [],
      styles: {},
      attributes: {}
    }
  };
}
function rz(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {
    styleParser: !0
  };
  const {
    iconName: r,
    prefix: n,
    rest: o
  } = YTe(e), a = HTe(e), i = q4("parseNodeAttributes", {}, e);
  let s = t.styleParser ? UTe(e) : [];
  return ke({
    iconName: r,
    title: e.getAttribute("title"),
    titleId: e.getAttribute("data-fa-title-id"),
    prefix: n,
    transform: Oa,
    mask: {
      iconName: null,
      prefix: null,
      rest: []
    },
    maskId: null,
    symbol: !1,
    extra: {
      classes: o,
      styles: s,
      attributes: a
    }
  }, i);
}
const {
  styles: qTe
} = Ea;
function lJ(e) {
  const t = Be.autoReplaceSvg === "nest" ? rz(e, {
    styleParser: !1
  }) : rz(e);
  return ~t.extra.classes.indexOf(VK) ? yc("generateLayersText", e, t) : yc("generateSvgReplacementMutation", e, t);
}
function BTe() {
  return [...C7e, ...L4];
}
function nz(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
  if (!Gi) return Promise.resolve();
  const r = Hr.documentElement.classList, n = (u) => r.add("".concat(YR, "-").concat(u)), o = (u) => r.remove("".concat(YR, "-").concat(u)), a = Be.autoFetchSvg ? BTe() : TK.concat(Object.keys(qTe));
  a.includes("fa") || a.push("fa");
  const i = [".".concat(VK, ":not([").concat(Cu, "])")].concat(a.map((u) => ".".concat(u, ":not([").concat(Cu, "])"))).join(", ");
  if (i.length === 0)
    return Promise.resolve();
  let s = [];
  try {
    s = rp(e.querySelectorAll(i));
  } catch {
  }
  if (s.length > 0)
    n("pending"), o("complete");
  else
    return Promise.resolve();
  const l = O6.begin("onTree"), c = s.reduce((u, f) => {
    try {
      const p = lJ(f);
      p && u.push(p);
    } catch (p) {
      DK || p.name === "MissingIcon" && console.error(p);
    }
    return u;
  }, []);
  return new Promise((u, f) => {
    Promise.all(c).then((p) => {
      iJ(p, () => {
        n("active"), n("complete"), o("pending"), typeof t == "function" && t(), l(), u();
      });
    }).catch((p) => {
      l(), f(p);
    });
  });
}
function XTe(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
  lJ(e).then((r) => {
    r && iJ([r], t);
  });
}
function KTe(e) {
  return function(t) {
    let r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    const n = (t || {}).icon ? t : B4(t || {});
    let {
      mask: o
    } = r;
    return o && (o = (o || {}).icon ? o : B4(o || {})), e(n, ke(ke({}, r), {}, {
      mask: o
    }));
  };
}
const JTe = function(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  const {
    transform: r = Oa,
    symbol: n = !1,
    mask: o = null,
    maskId: a = null,
    title: i = null,
    titleId: s = null,
    classes: l = [],
    attributes: c = {},
    styles: u = {}
  } = t;
  if (!e) return;
  const {
    prefix: f,
    iconName: p,
    icon: v
  } = e;
  return xx(ke({
    type: "icon"
  }, e), () => (Au("beforeDOMElementCreation", {
    iconDefinition: e,
    params: t
  }), Be.autoA11y && (i ? c["aria-labelledby"] = "".concat(Be.replacementClass, "-title-").concat(s || Lh()) : (c["aria-hidden"] = "true", c.focusable = "false")), $6({
    icons: {
      main: X4(v),
      mask: o ? X4(o.icon) : {
        found: !1,
        width: null,
        height: null,
        icon: {}
      }
    },
    prefix: f,
    iconName: p,
    transform: ke(ke({}, Oa), r),
    symbol: n,
    title: i,
    maskId: a,
    titleId: s,
    extra: {
      attributes: c,
      styles: u,
      classes: l
    }
  })));
};
var QTe = {
  mixout() {
    return {
      icon: KTe(JTe)
    };
  },
  hooks() {
    return {
      mutationObserverCallbacks(e) {
        return e.treeCallback = nz, e.nodeCallback = XTe, e;
      }
    };
  },
  provides(e) {
    e.i2svg = function(t) {
      const {
        node: r = Hr,
        callback: n = () => {
        }
      } = t;
      return nz(r, n);
    }, e.generateSvgReplacementMutation = function(t, r) {
      const {
        iconName: n,
        title: o,
        titleId: a,
        prefix: i,
        transform: s,
        symbol: l,
        mask: c,
        maskId: u,
        extra: f
      } = r;
      return new Promise((p, v) => {
        Promise.all([K4(n, i), c.iconName ? K4(c.iconName, c.prefix) : Promise.resolve({
          found: !1,
          width: 512,
          height: 512,
          icon: {}
        })]).then((x) => {
          let [b, m] = x;
          p([t, $6({
            icons: {
              main: b,
              mask: m
            },
            prefix: i,
            iconName: n,
            transform: s,
            symbol: l,
            maskId: u,
            title: o,
            titleId: a,
            extra: f,
            watchable: !0
          })]);
        }).catch(v);
      });
    }, e.generateAbstractIcon = function(t) {
      let {
        children: r,
        attributes: n,
        main: o,
        transform: a,
        styles: i
      } = t;
      const s = bx(i);
      s.length > 0 && (n.style = s);
      let l;
      return x6(a) && (l = yc("generateAbstractTransformGrouping", {
        main: o,
        transform: a,
        containerWidth: o.width,
        iconWidth: o.width
      })), r.push(l || o.icon), {
        children: r,
        attributes: n
      };
    };
  }
}, ZTe = {
  mixout() {
    return {
      layer(e) {
        let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        const {
          classes: r = []
        } = t;
        return xx({
          type: "layer"
        }, () => {
          Au("beforeDOMElementCreation", {
            assembler: e,
            params: t
          });
          let n = [];
          return e((o) => {
            Array.isArray(o) ? o.map((a) => {
              n = n.concat(a.abstract);
            }) : n = n.concat(o.abstract);
          }), [{
            tag: "span",
            attributes: {
              class: ["".concat(Be.cssPrefix, "-layers"), ...r].join(" ")
            },
            children: n
          }];
        });
      }
    };
  }
}, eMe = {
  mixout() {
    return {
      counter(e) {
        let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        const {
          title: r = null,
          classes: n = [],
          attributes: o = {},
          styles: a = {}
        } = t;
        return xx({
          type: "counter",
          content: e
        }, () => (Au("beforeDOMElementCreation", {
          content: e,
          params: t
        }), jTe({
          content: e.toString(),
          title: r,
          extra: {
            attributes: o,
            styles: a,
            classes: ["".concat(Be.cssPrefix, "-layers-counter"), ...n]
          }
        })));
      }
    };
  }
}, tMe = {
  mixout() {
    return {
      text(e) {
        let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        const {
          transform: r = Oa,
          title: n = null,
          classes: o = [],
          attributes: a = {},
          styles: i = {}
        } = t;
        return xx({
          type: "text",
          content: e
        }, () => (Au("beforeDOMElementCreation", {
          content: e,
          params: t
        }), JR({
          content: e,
          transform: ke(ke({}, Oa), r),
          title: n,
          extra: {
            attributes: a,
            styles: i,
            classes: ["".concat(Be.cssPrefix, "-layers-text"), ...o]
          }
        })));
      }
    };
  },
  provides(e) {
    e.generateLayersText = function(t, r) {
      const {
        title: n,
        transform: o,
        extra: a
      } = r;
      let i = null, s = null;
      if (jK) {
        const l = parseInt(getComputedStyle(t).fontSize, 10), c = t.getBoundingClientRect();
        i = c.width / l, s = c.height / l;
      }
      return Be.autoA11y && !n && (a.attributes["aria-hidden"] = "true"), Promise.resolve([t, JR({
        content: t.innerHTML,
        width: i,
        height: s,
        transform: o,
        title: n,
        extra: a,
        watchable: !0
      })]);
    };
  }
};
const rMe = new RegExp('"', "ug"), oz = [1105920, 1112319], az = ke(ke(ke(ke({}, {
  FontAwesome: {
    normal: "fas",
    400: "fas"
  }
}), E7e), W7e), M7e), Z4 = Object.keys(az).reduce((e, t) => (e[t.toLowerCase()] = az[t], e), {}), nMe = Object.keys(Z4).reduce((e, t) => {
  const r = Z4[t];
  return e[t] = r[900] || [...Object.entries(r)][0][1], e;
}, {});
function oMe(e) {
  const t = e.replace(rMe, ""), r = uTe(t, 0), n = r >= oz[0] && r <= oz[1], o = t.length === 2 ? t[0] === t[1] : !1;
  return {
    value: qK(o ? t[0] : t),
    isSecondary: n || o
  };
}
function aMe(e, t) {
  const r = e.replace(/^['"]|['"]$/g, "").toLowerCase(), n = parseInt(t), o = isNaN(n) ? "normal" : n;
  return (Z4[r] || {})[o] || nMe[r];
}
function iz(e, t) {
  const r = "".concat(U7e).concat(t.replace(":", "-"));
  return new Promise((n, o) => {
    if (e.getAttribute(r) !== null)
      return n();
    const a = rp(e.children).filter((f) => f.getAttribute(W4) === t)[0], i = hc.getComputedStyle(e, t), s = i.getPropertyValue("font-family"), l = s.match(B7e), c = i.getPropertyValue("font-weight"), u = i.getPropertyValue("content");
    if (a && !l)
      return e.removeChild(a), n();
    if (l && u !== "none" && u !== "") {
      const f = i.getPropertyValue("content");
      let p = aMe(s, c);
      const {
        value: v,
        isSecondary: x
      } = oMe(f), b = l[0].startsWith("FontAwesome");
      let m = k6(p, v), w = m;
      if (b) {
        const $ = hTe(v);
        $.iconName && $.prefix && (m = $.iconName, p = $.prefix);
      }
      if (m && !x && (!a || a.getAttribute(h6) !== p || a.getAttribute(b6) !== w)) {
        e.setAttribute(r, w), a && e.removeChild(a);
        const $ = GTe(), {
          extra: E
        } = $;
        E.attributes[W4] = t, K4(m, p).then((S) => {
          const h = $6(ke(ke({}, $), {}, {
            icons: {
              main: S,
              mask: rJ()
            },
            prefix: p,
            iconName: w,
            extra: E,
            watchable: !0
          })), U = Hr.createElementNS("http://www.w3.org/2000/svg", "svg");
          t === "::before" ? e.insertBefore(U, e.firstChild) : e.appendChild(U), U.outerHTML = h.map((G) => $b(G)).join(`
`), e.removeAttribute(r), n();
        }).catch(o);
      } else
        n();
    } else
      n();
  });
}
function iMe(e) {
  return Promise.all([iz(e, "::before"), iz(e, "::after")]);
}
function sMe(e) {
  return e.parentNode !== document.head && !~H7e.indexOf(e.tagName.toUpperCase()) && !e.getAttribute(W4) && (!e.parentNode || e.parentNode.tagName !== "svg");
}
function sz(e) {
  if (Gi)
    return new Promise((t, r) => {
      const n = rp(e.querySelectorAll("*")).filter(sMe).map(iMe), o = O6.begin("searchPseudoElements");
      sJ(), Promise.all(n).then(() => {
        o(), Q4(), t();
      }).catch(() => {
        o(), Q4(), r();
      });
    });
}
var lMe = {
  hooks() {
    return {
      mutationObserverCallbacks(e) {
        return e.pseudoElementsCallback = sz, e;
      }
    };
  },
  provides(e) {
    e.pseudoElements2svg = function(t) {
      const {
        node: r = Hr
      } = t;
      Be.searchPseudoElements && sz(r);
    };
  }
};
let lz = !1;
var cMe = {
  mixout() {
    return {
      dom: {
        unwatch() {
          sJ(), lz = !0;
        }
      }
    };
  },
  hooks() {
    return {
      bootstrap() {
        tz(q4("mutationObserverCallbacks", {}));
      },
      noAuto() {
        WTe();
      },
      watch(e) {
        const {
          observeMutationsRoot: t
        } = e;
        lz ? Q4() : tz(q4("mutationObserverCallbacks", {
          observeMutationsRoot: t
        }));
      }
    };
  }
};
const cz = (e) => {
  let t = {
    size: 16,
    x: 0,
    y: 0,
    flipX: !1,
    flipY: !1,
    rotate: 0
  };
  return e.toLowerCase().split(" ").reduce((r, n) => {
    const o = n.toLowerCase().split("-"), a = o[0];
    let i = o.slice(1).join("-");
    if (a && i === "h")
      return r.flipX = !0, r;
    if (a && i === "v")
      return r.flipY = !0, r;
    if (i = parseFloat(i), isNaN(i))
      return r;
    switch (a) {
      case "grow":
        r.size = r.size + i;
        break;
      case "shrink":
        r.size = r.size - i;
        break;
      case "left":
        r.x = r.x - i;
        break;
      case "right":
        r.x = r.x + i;
        break;
      case "up":
        r.y = r.y - i;
        break;
      case "down":
        r.y = r.y + i;
        break;
      case "rotate":
        r.rotate = r.rotate + i;
        break;
    }
    return r;
  }, t);
};
var uMe = {
  mixout() {
    return {
      parse: {
        transform: (e) => cz(e)
      }
    };
  },
  hooks() {
    return {
      parseNodeAttributes(e, t) {
        const r = t.getAttribute("data-fa-transform");
        return r && (e.transform = cz(r)), e;
      }
    };
  },
  provides(e) {
    e.generateAbstractTransformGrouping = function(t) {
      let {
        main: r,
        transform: n,
        containerWidth: o,
        iconWidth: a
      } = t;
      const i = {
        transform: "translate(".concat(o / 2, " 256)")
      }, s = "translate(".concat(n.x * 32, ", ").concat(n.y * 32, ") "), l = "scale(".concat(n.size / 16 * (n.flipX ? -1 : 1), ", ").concat(n.size / 16 * (n.flipY ? -1 : 1), ") "), c = "rotate(".concat(n.rotate, " 0 0)"), u = {
        transform: "".concat(s, " ").concat(l, " ").concat(c)
      }, f = {
        transform: "translate(".concat(a / 2 * -1, " -256)")
      }, p = {
        outer: i,
        inner: u,
        path: f
      };
      return {
        tag: "g",
        attributes: ke({}, p.outer),
        children: [{
          tag: "g",
          attributes: ke({}, p.inner),
          children: [{
            tag: r.icon.tag,
            children: r.icon.children,
            attributes: ke(ke({}, r.icon.attributes), p.path)
          }]
        }]
      };
    };
  }
};
const Xk = {
  x: 0,
  y: 0,
  width: "100%",
  height: "100%"
};
function uz(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0;
  return e.attributes && (e.attributes.fill || t) && (e.attributes.fill = "black"), e;
}
function fMe(e) {
  return e.tag === "g" ? e.children : [e];
}
var dMe = {
  hooks() {
    return {
      parseNodeAttributes(e, t) {
        const r = t.getAttribute("data-fa-mask"), n = r ? vx(r.split(" ").map((o) => o.trim())) : rJ();
        return n.prefix || (n.prefix = bc()), e.mask = n, e.maskId = t.getAttribute("data-fa-mask-id"), e;
      }
    };
  },
  provides(e) {
    e.generateAbstractMask = function(t) {
      let {
        children: r,
        attributes: n,
        main: o,
        mask: a,
        maskId: i,
        transform: s
      } = t;
      const {
        width: l,
        icon: c
      } = o, {
        width: u,
        icon: f
      } = a, p = oTe({
        transform: s,
        containerWidth: u,
        iconWidth: l
      }), v = {
        tag: "rect",
        attributes: ke(ke({}, Xk), {}, {
          fill: "white"
        })
      }, x = c.children ? {
        children: c.children.map(uz)
      } : {}, b = {
        tag: "g",
        attributes: ke({}, p.inner),
        children: [uz(ke({
          tag: c.tag,
          attributes: ke(ke({}, c.attributes), p.path)
        }, x))]
      }, m = {
        tag: "g",
        attributes: ke({}, p.outer),
        children: [b]
      }, w = "mask-".concat(i || Lh()), $ = "clip-".concat(i || Lh()), E = {
        tag: "mask",
        attributes: ke(ke({}, Xk), {}, {
          id: w,
          maskUnits: "userSpaceOnUse",
          maskContentUnits: "userSpaceOnUse"
        }),
        children: [v, m]
      }, S = {
        tag: "defs",
        children: [{
          tag: "clipPath",
          attributes: {
            id: $
          },
          children: fMe(f)
        }, E]
      };
      return r.push(S, {
        tag: "rect",
        attributes: ke({
          fill: "currentColor",
          "clip-path": "url(#".concat($, ")"),
          mask: "url(#".concat(w, ")")
        }, Xk)
      }), {
        children: r,
        attributes: n
      };
    };
  }
}, pMe = {
  provides(e) {
    let t = !1;
    hc.matchMedia && (t = hc.matchMedia("(prefers-reduced-motion: reduce)").matches), e.missingIconAbstract = function() {
      const r = [], n = {
        fill: "currentColor"
      }, o = {
        attributeType: "XML",
        repeatCount: "indefinite",
        dur: "2s"
      };
      r.push({
        tag: "path",
        attributes: ke(ke({}, n), {}, {
          d: "M156.5,447.7l-12.6,29.5c-18.7-9.5-35.9-21.2-51.5-34.9l22.7-22.7C127.6,430.5,141.5,440,156.5,447.7z M40.6,272H8.5 c1.4,21.2,5.4,41.7,11.7,61.1L50,321.2C45.1,305.5,41.8,289,40.6,272z M40.6,240c1.4-18.8,5.2-37,11.1-54.1l-29.5-12.6 C14.7,194.3,10,216.7,8.5,240H40.6z M64.3,156.5c7.8-14.9,17.2-28.8,28.1-41.5L69.7,92.3c-13.7,15.6-25.5,32.8-34.9,51.5 L64.3,156.5z M397,419.6c-13.9,12-29.4,22.3-46.1,30.4l11.9,29.8c20.7-9.9,39.8-22.6,56.9-37.6L397,419.6z M115,92.4 c13.9-12,29.4-22.3,46.1-30.4l-11.9-29.8c-20.7,9.9-39.8,22.6-56.8,37.6L115,92.4z M447.7,355.5c-7.8,14.9-17.2,28.8-28.1,41.5 l22.7,22.7c13.7-15.6,25.5-32.9,34.9-51.5L447.7,355.5z M471.4,272c-1.4,18.8-5.2,37-11.1,54.1l29.5,12.6 c7.5-21.1,12.2-43.5,13.6-66.8H471.4z M321.2,462c-15.7,5-32.2,8.2-49.2,9.4v32.1c21.2-1.4,41.7-5.4,61.1-11.7L321.2,462z M240,471.4c-18.8-1.4-37-5.2-54.1-11.1l-12.6,29.5c21.1,7.5,43.5,12.2,66.8,13.6V471.4z M462,190.8c5,15.7,8.2,32.2,9.4,49.2h32.1 c-1.4-21.2-5.4-41.7-11.7-61.1L462,190.8z M92.4,397c-12-13.9-22.3-29.4-30.4-46.1l-29.8,11.9c9.9,20.7,22.6,39.8,37.6,56.9 L92.4,397z M272,40.6c18.8,1.4,36.9,5.2,54.1,11.1l12.6-29.5C317.7,14.7,295.3,10,272,8.5V40.6z M190.8,50 c15.7-5,32.2-8.2,49.2-9.4V8.5c-21.2,1.4-41.7,5.4-61.1,11.7L190.8,50z M442.3,92.3L419.6,115c12,13.9,22.3,29.4,30.5,46.1 l29.8-11.9C470,128.5,457.3,109.4,442.3,92.3z M397,92.4l22.7-22.7c-15.6-13.7-32.8-25.5-51.5-34.9l-12.6,29.5 C370.4,72.1,384.4,81.5,397,92.4z"
        })
      });
      const a = ke(ke({}, o), {}, {
        attributeName: "opacity"
      }), i = {
        tag: "circle",
        attributes: ke(ke({}, n), {}, {
          cx: "256",
          cy: "364",
          r: "28"
        }),
        children: []
      };
      return t || i.children.push({
        tag: "animate",
        attributes: ke(ke({}, o), {}, {
          attributeName: "r",
          values: "28;14;28;28;14;28;"
        })
      }, {
        tag: "animate",
        attributes: ke(ke({}, a), {}, {
          values: "1;0;1;1;0;1;"
        })
      }), r.push(i), r.push({
        tag: "path",
        attributes: ke(ke({}, n), {}, {
          opacity: "1",
          d: "M263.7,312h-16c-6.6,0-12-5.4-12-12c0-71,77.4-63.9,77.4-107.8c0-20-17.8-40.2-57.4-40.2c-29.1,0-44.3,9.6-59.2,28.7 c-3.9,5-11.1,6-16.2,2.4l-13.1-9.2c-5.6-3.9-6.9-11.8-2.6-17.2c21.2-27.2,46.4-44.7,91.2-44.7c52.3,0,97.4,29.8,97.4,80.2 c0,67.6-77.4,63.5-77.4,107.8C275.7,306.6,270.3,312,263.7,312z"
        }),
        children: t ? [] : [{
          tag: "animate",
          attributes: ke(ke({}, a), {}, {
            values: "1;0;0;0;0;1;"
          })
        }]
      }), t || r.push({
        tag: "path",
        attributes: ke(ke({}, n), {}, {
          opacity: "0",
          d: "M232.5,134.5l7,168c0.3,6.4,5.6,11.5,12,11.5h9c6.4,0,11.7-5.1,12-11.5l7-168c0.3-6.8-5.2-12.5-12-12.5h-23 C237.7,122,232.2,127.7,232.5,134.5z"
        }),
        children: [{
          tag: "animate",
          attributes: ke(ke({}, a), {}, {
            values: "0;0;1;1;0;0;"
          })
        }]
      }), {
        tag: "g",
        attributes: {
          class: "missing"
        },
        children: r
      };
    };
  }
}, mMe = {
  hooks() {
    return {
      parseNodeAttributes(e, t) {
        const r = t.getAttribute("data-fa-symbol"), n = r === null ? !1 : r === "" ? !0 : r;
        return e.symbol = n, e;
      }
    };
  }
}, gMe = [sTe, QTe, ZTe, eMe, tMe, lMe, cMe, uMe, dMe, pMe, mMe];
ETe(gMe, {
  mixoutsTo: ao
});
ao.noAuto;
ao.config;
ao.library;
ao.dom;
const eE = ao.parse;
ao.findIconDefinition;
ao.toHtml;
const hMe = ao.icon;
ao.layer;
ao.text;
ao.counter;
function bMe(e) {
  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e;
}
var Ay = { exports: {} }, Kk = { exports: {} }, rr = {};
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var fz;
function yMe() {
  if (fz) return rr;
  fz = 1;
  var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, r = e ? Symbol.for("react.portal") : 60106, n = e ? Symbol.for("react.fragment") : 60107, o = e ? Symbol.for("react.strict_mode") : 60108, a = e ? Symbol.for("react.profiler") : 60114, i = e ? Symbol.for("react.provider") : 60109, s = e ? Symbol.for("react.context") : 60110, l = e ? Symbol.for("react.async_mode") : 60111, c = e ? Symbol.for("react.concurrent_mode") : 60111, u = e ? Symbol.for("react.forward_ref") : 60112, f = e ? Symbol.for("react.suspense") : 60113, p = e ? Symbol.for("react.suspense_list") : 60120, v = e ? Symbol.for("react.memo") : 60115, x = e ? Symbol.for("react.lazy") : 60116, b = e ? Symbol.for("react.block") : 60121, m = e ? Symbol.for("react.fundamental") : 60117, w = e ? Symbol.for("react.responder") : 60118, $ = e ? Symbol.for("react.scope") : 60119;
  function E(h) {
    if (typeof h == "object" && h !== null) {
      var U = h.$$typeof;
      switch (U) {
        case t:
          switch (h = h.type, h) {
            case l:
            case c:
            case n:
            case a:
            case o:
            case f:
              return h;
            default:
              switch (h = h && h.$$typeof, h) {
                case s:
                case u:
                case x:
                case v:
                case i:
                  return h;
                default:
                  return U;
              }
          }
        case r:
          return U;
      }
    }
  }
  function S(h) {
    return E(h) === c;
  }
  return rr.AsyncMode = l, rr.ConcurrentMode = c, rr.ContextConsumer = s, rr.ContextProvider = i, rr.Element = t, rr.ForwardRef = u, rr.Fragment = n, rr.Lazy = x, rr.Memo = v, rr.Portal = r, rr.Profiler = a, rr.StrictMode = o, rr.Suspense = f, rr.isAsyncMode = function(h) {
    return S(h) || E(h) === l;
  }, rr.isConcurrentMode = S, rr.isContextConsumer = function(h) {
    return E(h) === s;
  }, rr.isContextProvider = function(h) {
    return E(h) === i;
  }, rr.isElement = function(h) {
    return typeof h == "object" && h !== null && h.$$typeof === t;
  }, rr.isForwardRef = function(h) {
    return E(h) === u;
  }, rr.isFragment = function(h) {
    return E(h) === n;
  }, rr.isLazy = function(h) {
    return E(h) === x;
  }, rr.isMemo = function(h) {
    return E(h) === v;
  }, rr.isPortal = function(h) {
    return E(h) === r;
  }, rr.isProfiler = function(h) {
    return E(h) === a;
  }, rr.isStrictMode = function(h) {
    return E(h) === o;
  }, rr.isSuspense = function(h) {
    return E(h) === f;
  }, rr.isValidElementType = function(h) {
    return typeof h == "string" || typeof h == "function" || h === n || h === c || h === a || h === o || h === f || h === p || typeof h == "object" && h !== null && (h.$$typeof === x || h.$$typeof === v || h.$$typeof === i || h.$$typeof === s || h.$$typeof === u || h.$$typeof === m || h.$$typeof === w || h.$$typeof === $ || h.$$typeof === b);
  }, rr.typeOf = E, rr;
}
var mr = {};
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var dz;
function vMe() {
  return dz || (dz = 1, process.env.NODE_ENV !== "production" && function() {
    var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, r = e ? Symbol.for("react.portal") : 60106, n = e ? Symbol.for("react.fragment") : 60107, o = e ? Symbol.for("react.strict_mode") : 60108, a = e ? Symbol.for("react.profiler") : 60114, i = e ? Symbol.for("react.provider") : 60109, s = e ? Symbol.for("react.context") : 60110, l = e ? Symbol.for("react.async_mode") : 60111, c = e ? Symbol.for("react.concurrent_mode") : 60111, u = e ? Symbol.for("react.forward_ref") : 60112, f = e ? Symbol.for("react.suspense") : 60113, p = e ? Symbol.for("react.suspense_list") : 60120, v = e ? Symbol.for("react.memo") : 60115, x = e ? Symbol.for("react.lazy") : 60116, b = e ? Symbol.for("react.block") : 60121, m = e ? Symbol.for("react.fundamental") : 60117, w = e ? Symbol.for("react.responder") : 60118, $ = e ? Symbol.for("react.scope") : 60119;
    function E(k) {
      return typeof k == "string" || typeof k == "function" || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
      k === n || k === c || k === a || k === o || k === f || k === p || typeof k == "object" && k !== null && (k.$$typeof === x || k.$$typeof === v || k.$$typeof === i || k.$$typeof === s || k.$$typeof === u || k.$$typeof === m || k.$$typeof === w || k.$$typeof === $ || k.$$typeof === b);
    }
    function S(k) {
      if (typeof k == "object" && k !== null) {
        var oe = k.$$typeof;
        switch (oe) {
          case t:
            var Ce = k.type;
            switch (Ce) {
              case l:
              case c:
              case n:
              case a:
              case o:
              case f:
                return Ce;
              default:
                var Ze = Ce && Ce.$$typeof;
                switch (Ze) {
                  case s:
                  case u:
                  case x:
                  case v:
                  case i:
                    return Ze;
                  default:
                    return oe;
                }
            }
          case r:
            return oe;
        }
      }
    }
    var h = l, U = c, G = s, Q = i, Z = t, X = u, J = n, I = x, te = v, V = r, D = a, F = o, R = f, H = !1;
    function B(k) {
      return H || (H = !0, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.")), g(k) || S(k) === l;
    }
    function g(k) {
      return S(k) === c;
    }
    function d(k) {
      return S(k) === s;
    }
    function O(k) {
      return S(k) === i;
    }
    function C(k) {
      return typeof k == "object" && k !== null && k.$$typeof === t;
    }
    function A(k) {
      return S(k) === u;
    }
    function N(k) {
      return S(k) === n;
    }
    function j(k) {
      return S(k) === x;
    }
    function _(k) {
      return S(k) === v;
    }
    function T(k) {
      return S(k) === r;
    }
    function M(k) {
      return S(k) === a;
    }
    function z(k) {
      return S(k) === o;
    }
    function ee(k) {
      return S(k) === f;
    }
    mr.AsyncMode = h, mr.ConcurrentMode = U, mr.ContextConsumer = G, mr.ContextProvider = Q, mr.Element = Z, mr.ForwardRef = X, mr.Fragment = J, mr.Lazy = I, mr.Memo = te, mr.Portal = V, mr.Profiler = D, mr.StrictMode = F, mr.Suspense = R, mr.isAsyncMode = B, mr.isConcurrentMode = g, mr.isContextConsumer = d, mr.isContextProvider = O, mr.isElement = C, mr.isForwardRef = A, mr.isFragment = N, mr.isLazy = j, mr.isMemo = _, mr.isPortal = T, mr.isProfiler = M, mr.isStrictMode = z, mr.isSuspense = ee, mr.isValidElementType = E, mr.typeOf = S;
  }()), mr;
}
var pz;
function cJ() {
  return pz || (pz = 1, process.env.NODE_ENV === "production" ? Kk.exports = yMe() : Kk.exports = vMe()), Kk.exports;
}
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
var Jk, mz;
function xMe() {
  if (mz) return Jk;
  mz = 1;
  var e = Object.getOwnPropertySymbols, t = Object.prototype.hasOwnProperty, r = Object.prototype.propertyIsEnumerable;
  function n(a) {
    if (a == null)
      throw new TypeError("Object.assign cannot be called with null or undefined");
    return Object(a);
  }
  function o() {
    try {
      if (!Object.assign)
        return !1;
      var a = new String("abc");
      if (a[5] = "de", Object.getOwnPropertyNames(a)[0] === "5")
        return !1;
      for (var i = {}, s = 0; s < 10; s++)
        i["_" + String.fromCharCode(s)] = s;
      var l = Object.getOwnPropertyNames(i).map(function(u) {
        return i[u];
      });
      if (l.join("") !== "0123456789")
        return !1;
      var c = {};
      return "abcdefghijklmnopqrst".split("").forEach(function(u) {
        c[u] = u;
      }), Object.keys(Object.assign({}, c)).join("") === "abcdefghijklmnopqrst";
    } catch {
      return !1;
    }
  }
  return Jk = o() ? Object.assign : function(a, i) {
    for (var s, l = n(a), c, u = 1; u < arguments.length; u++) {
      s = Object(arguments[u]);
      for (var f in s)
        t.call(s, f) && (l[f] = s[f]);
      if (e) {
        c = e(s);
        for (var p = 0; p < c.length; p++)
          r.call(s, c[p]) && (l[c[p]] = s[c[p]]);
      }
    }
    return l;
  }, Jk;
}
var Qk, gz;
function S6() {
  if (gz) return Qk;
  gz = 1;
  var e = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
  return Qk = e, Qk;
}
var hz, bz;
function uJ() {
  return bz || (bz = 1, hz = Function.call.bind(Object.prototype.hasOwnProperty)), hz;
}
var Zk, yz;
function wMe() {
  if (yz) return Zk;
  yz = 1;
  var e = function() {
  };
  if (process.env.NODE_ENV !== "production") {
    var t = /* @__PURE__ */ S6(), r = {}, n = /* @__PURE__ */ uJ();
    e = function(a) {
      var i = "Warning: " + a;
      typeof console < "u" && console.error(i);
      try {
        throw new Error(i);
      } catch {
      }
    };
  }
  function o(a, i, s, l, c) {
    if (process.env.NODE_ENV !== "production") {
      for (var u in a)
        if (n(a, u)) {
          var f;
          try {
            if (typeof a[u] != "function") {
              var p = Error(
                (l || "React class") + ": " + s + " type `" + u + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof a[u] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`."
              );
              throw p.name = "Invariant Violation", p;
            }
            f = a[u](i, u, l, s, null, t);
          } catch (x) {
            f = x;
          }
          if (f && !(f instanceof Error) && e(
            (l || "React class") + ": type specification of " + s + " `" + u + "` is invalid; the type checker function must return `null` or an `Error` but returned a " + typeof f + ". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument)."
          ), f instanceof Error && !(f.message in r)) {
            r[f.message] = !0;
            var v = c ? c() : "";
            e(
              "Failed " + s + " type: " + f.message + (v ?? "")
            );
          }
        }
    }
  }
  return o.resetWarningCache = function() {
    process.env.NODE_ENV !== "production" && (r = {});
  }, Zk = o, Zk;
}
var e$, vz;
function kMe() {
  if (vz) return e$;
  vz = 1;
  var e = cJ(), t = xMe(), r = /* @__PURE__ */ S6(), n = /* @__PURE__ */ uJ(), o = /* @__PURE__ */ wMe(), a = function() {
  };
  process.env.NODE_ENV !== "production" && (a = function(s) {
    var l = "Warning: " + s;
    typeof console < "u" && console.error(l);
    try {
      throw new Error(l);
    } catch {
    }
  });
  function i() {
    return null;
  }
  return e$ = function(s, l) {
    var c = typeof Symbol == "function" && Symbol.iterator, u = "@@iterator";
    function f(g) {
      var d = g && (c && g[c] || g[u]);
      if (typeof d == "function")
        return d;
    }
    var p = "<<anonymous>>", v = {
      array: w("array"),
      bigint: w("bigint"),
      bool: w("boolean"),
      func: w("function"),
      number: w("number"),
      object: w("object"),
      string: w("string"),
      symbol: w("symbol"),
      any: $(),
      arrayOf: E,
      element: S(),
      elementType: h(),
      instanceOf: U,
      node: X(),
      objectOf: Q,
      oneOf: G,
      oneOfType: Z,
      shape: I,
      exact: te
    };
    function x(g, d) {
      return g === d ? g !== 0 || 1 / g === 1 / d : g !== g && d !== d;
    }
    function b(g, d) {
      this.message = g, this.data = d && typeof d == "object" ? d : {}, this.stack = "";
    }
    b.prototype = Error.prototype;
    function m(g) {
      if (process.env.NODE_ENV !== "production")
        var d = {}, O = 0;
      function C(N, j, _, T, M, z, ee) {
        if (T = T || p, z = z || _, ee !== r) {
          if (l) {
            var k = new Error(
              "Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types"
            );
            throw k.name = "Invariant Violation", k;
          } else if (process.env.NODE_ENV !== "production" && typeof console < "u") {
            var oe = T + ":" + _;
            !d[oe] && // Avoid spamming the console because they are often not actionable except for lib authors
            O < 3 && (a(
              "You are manually calling a React.PropTypes validation function for the `" + z + "` prop on `" + T + "`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details."
            ), d[oe] = !0, O++);
          }
        }
        return j[_] == null ? N ? j[_] === null ? new b("The " + M + " `" + z + "` is marked as required " + ("in `" + T + "`, but its value is `null`.")) : new b("The " + M + " `" + z + "` is marked as required in " + ("`" + T + "`, but its value is `undefined`.")) : null : g(j, _, T, M, z);
      }
      var A = C.bind(null, !1);
      return A.isRequired = C.bind(null, !0), A;
    }
    function w(g) {
      function d(O, C, A, N, j, _) {
        var T = O[C], M = F(T);
        if (M !== g) {
          var z = R(T);
          return new b(
            "Invalid " + N + " `" + j + "` of type " + ("`" + z + "` supplied to `" + A + "`, expected ") + ("`" + g + "`."),
            { expectedType: g }
          );
        }
        return null;
      }
      return m(d);
    }
    function $() {
      return m(i);
    }
    function E(g) {
      function d(O, C, A, N, j) {
        if (typeof g != "function")
          return new b("Property `" + j + "` of component `" + A + "` has invalid PropType notation inside arrayOf.");
        var _ = O[C];
        if (!Array.isArray(_)) {
          var T = F(_);
          return new b("Invalid " + N + " `" + j + "` of type " + ("`" + T + "` supplied to `" + A + "`, expected an array."));
        }
        for (var M = 0; M < _.length; M++) {
          var z = g(_, M, A, N, j + "[" + M + "]", r);
          if (z instanceof Error)
            return z;
        }
        return null;
      }
      return m(d);
    }
    function S() {
      function g(d, O, C, A, N) {
        var j = d[O];
        if (!s(j)) {
          var _ = F(j);
          return new b("Invalid " + A + " `" + N + "` of type " + ("`" + _ + "` supplied to `" + C + "`, expected a single ReactElement."));
        }
        return null;
      }
      return m(g);
    }
    function h() {
      function g(d, O, C, A, N) {
        var j = d[O];
        if (!e.isValidElementType(j)) {
          var _ = F(j);
          return new b("Invalid " + A + " `" + N + "` of type " + ("`" + _ + "` supplied to `" + C + "`, expected a single ReactElement type."));
        }
        return null;
      }
      return m(g);
    }
    function U(g) {
      function d(O, C, A, N, j) {
        if (!(O[C] instanceof g)) {
          var _ = g.name || p, T = B(O[C]);
          return new b("Invalid " + N + " `" + j + "` of type " + ("`" + T + "` supplied to `" + A + "`, expected ") + ("instance of `" + _ + "`."));
        }
        return null;
      }
      return m(d);
    }
    function G(g) {
      if (!Array.isArray(g))
        return process.env.NODE_ENV !== "production" && (arguments.length > 1 ? a(
          "Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z])."
        ) : a("Invalid argument supplied to oneOf, expected an array.")), i;
      function d(O, C, A, N, j) {
        for (var _ = O[C], T = 0; T < g.length; T++)
          if (x(_, g[T]))
            return null;
        var M = JSON.stringify(g, function(z, ee) {
          var k = R(ee);
          return k === "symbol" ? String(ee) : ee;
        });
        return new b("Invalid " + N + " `" + j + "` of value `" + String(_) + "` " + ("supplied to `" + A + "`, expected one of " + M + "."));
      }
      return m(d);
    }
    function Q(g) {
      function d(O, C, A, N, j) {
        if (typeof g != "function")
          return new b("Property `" + j + "` of component `" + A + "` has invalid PropType notation inside objectOf.");
        var _ = O[C], T = F(_);
        if (T !== "object")
          return new b("Invalid " + N + " `" + j + "` of type " + ("`" + T + "` supplied to `" + A + "`, expected an object."));
        for (var M in _)
          if (n(_, M)) {
            var z = g(_, M, A, N, j + "." + M, r);
            if (z instanceof Error)
              return z;
          }
        return null;
      }
      return m(d);
    }
    function Z(g) {
      if (!Array.isArray(g))
        return process.env.NODE_ENV !== "production" && a("Invalid argument supplied to oneOfType, expected an instance of array."), i;
      for (var d = 0; d < g.length; d++) {
        var O = g[d];
        if (typeof O != "function")
          return a(
            "Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + H(O) + " at index " + d + "."
          ), i;
      }
      function C(A, N, j, _, T) {
        for (var M = [], z = 0; z < g.length; z++) {
          var ee = g[z], k = ee(A, N, j, _, T, r);
          if (k == null)
            return null;
          k.data && n(k.data, "expectedType") && M.push(k.data.expectedType);
        }
        var oe = M.length > 0 ? ", expected one of type [" + M.join(", ") + "]" : "";
        return new b("Invalid " + _ + " `" + T + "` supplied to " + ("`" + j + "`" + oe + "."));
      }
      return m(C);
    }
    function X() {
      function g(d, O, C, A, N) {
        return V(d[O]) ? null : new b("Invalid " + A + " `" + N + "` supplied to " + ("`" + C + "`, expected a ReactNode."));
      }
      return m(g);
    }
    function J(g, d, O, C, A) {
      return new b(
        (g || "React class") + ": " + d + " type `" + O + "." + C + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + A + "`."
      );
    }
    function I(g) {
      function d(O, C, A, N, j) {
        var _ = O[C], T = F(_);
        if (T !== "object")
          return new b("Invalid " + N + " `" + j + "` of type `" + T + "` " + ("supplied to `" + A + "`, expected `object`."));
        for (var M in g) {
          var z = g[M];
          if (typeof z != "function")
            return J(A, N, j, M, R(z));
          var ee = z(_, M, A, N, j + "." + M, r);
          if (ee)
            return ee;
        }
        return null;
      }
      return m(d);
    }
    function te(g) {
      function d(O, C, A, N, j) {
        var _ = O[C], T = F(_);
        if (T !== "object")
          return new b("Invalid " + N + " `" + j + "` of type `" + T + "` " + ("supplied to `" + A + "`, expected `object`."));
        var M = t({}, O[C], g);
        for (var z in M) {
          var ee = g[z];
          if (n(g, z) && typeof ee != "function")
            return J(A, N, j, z, R(ee));
          if (!ee)
            return new b(
              "Invalid " + N + " `" + j + "` key `" + z + "` supplied to `" + A + "`.\nBad object: " + JSON.stringify(O[C], null, "  ") + `
Valid keys: ` + JSON.stringify(Object.keys(g), null, "  ")
            );
          var k = ee(_, z, A, N, j + "." + z, r);
          if (k)
            return k;
        }
        return null;
      }
      return m(d);
    }
    function V(g) {
      switch (typeof g) {
        case "number":
        case "string":
        case "undefined":
          return !0;
        case "boolean":
          return !g;
        case "object":
          if (Array.isArray(g))
            return g.every(V);
          if (g === null || s(g))
            return !0;
          var d = f(g);
          if (d) {
            var O = d.call(g), C;
            if (d !== g.entries) {
              for (; !(C = O.next()).done; )
                if (!V(C.value))
                  return !1;
            } else
              for (; !(C = O.next()).done; ) {
                var A = C.value;
                if (A && !V(A[1]))
                  return !1;
              }
          } else
            return !1;
          return !0;
        default:
          return !1;
      }
    }
    function D(g, d) {
      return g === "symbol" ? !0 : d ? d["@@toStringTag"] === "Symbol" || typeof Symbol == "function" && d instanceof Symbol : !1;
    }
    function F(g) {
      var d = typeof g;
      return Array.isArray(g) ? "array" : g instanceof RegExp ? "object" : D(d, g) ? "symbol" : d;
    }
    function R(g) {
      if (typeof g > "u" || g === null)
        return "" + g;
      var d = F(g);
      if (d === "object") {
        if (g instanceof Date)
          return "date";
        if (g instanceof RegExp)
          return "regexp";
      }
      return d;
    }
    function H(g) {
      var d = R(g);
      switch (d) {
        case "array":
        case "object":
          return "an " + d;
        case "boolean":
        case "date":
        case "regexp":
          return "a " + d;
        default:
          return d;
      }
    }
    function B(g) {
      return !g.constructor || !g.constructor.name ? p : g.constructor.name;
    }
    return v.checkPropTypes = o, v.resetWarningCache = o.resetWarningCache, v.PropTypes = v, v;
  }, e$;
}
var t$, xz;
function $Me() {
  if (xz) return t$;
  xz = 1;
  var e = /* @__PURE__ */ S6();
  function t() {
  }
  function r() {
  }
  return r.resetWarningCache = t, t$ = function() {
    function n(i, s, l, c, u, f) {
      if (f !== e) {
        var p = new Error(
          "Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types"
        );
        throw p.name = "Invariant Violation", p;
      }
    }
    n.isRequired = n;
    function o() {
      return n;
    }
    var a = {
      array: n,
      bigint: n,
      bool: n,
      func: n,
      number: n,
      object: n,
      string: n,
      symbol: n,
      any: n,
      arrayOf: o,
      element: n,
      elementType: n,
      instanceOf: o,
      node: n,
      objectOf: o,
      oneOf: o,
      oneOfType: o,
      shape: o,
      exact: o,
      checkPropTypes: r,
      resetWarningCache: t
    };
    return a.PropTypes = a, a;
  }, t$;
}
var wz;
function OMe() {
  if (wz) return Ay.exports;
  if (wz = 1, process.env.NODE_ENV !== "production") {
    var e = cJ(), t = !0;
    Ay.exports = /* @__PURE__ */ kMe()(e.isElement, t);
  } else
    Ay.exports = /* @__PURE__ */ $Me()();
  return Ay.exports;
}
var EMe = /* @__PURE__ */ OMe();
const Ft = /* @__PURE__ */ bMe(EMe);
function kz(e, t) {
  var r = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var n = Object.getOwnPropertySymbols(e);
    t && (n = n.filter(function(o) {
      return Object.getOwnPropertyDescriptor(e, o).enumerable;
    })), r.push.apply(r, n);
  }
  return r;
}
function ta(e) {
  for (var t = 1; t < arguments.length; t++) {
    var r = arguments[t] != null ? arguments[t] : {};
    t % 2 ? kz(Object(r), !0).forEach(function(n) {
      xf(e, n, r[n]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : kz(Object(r)).forEach(function(n) {
      Object.defineProperty(e, n, Object.getOwnPropertyDescriptor(r, n));
    });
  }
  return e;
}
function O1(e) {
  "@babel/helpers - typeof";
  return O1 = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t) {
    return typeof t;
  } : function(t) {
    return t && typeof Symbol == "function" && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
  }, O1(e);
}
function xf(e, t, r) {
  return t in e ? Object.defineProperty(e, t, {
    value: r,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : e[t] = r, e;
}
function SMe(e, t) {
  if (e == null) return {};
  var r = {}, n = Object.keys(e), o, a;
  for (a = 0; a < n.length; a++)
    o = n[a], !(t.indexOf(o) >= 0) && (r[o] = e[o]);
  return r;
}
function PMe(e, t) {
  if (e == null) return {};
  var r = SMe(e, t), n, o;
  if (Object.getOwnPropertySymbols) {
    var a = Object.getOwnPropertySymbols(e);
    for (o = 0; o < a.length; o++)
      n = a[o], !(t.indexOf(n) >= 0) && Object.prototype.propertyIsEnumerable.call(e, n) && (r[n] = e[n]);
  }
  return r;
}
function tE(e) {
  return CMe(e) || AMe(e) || _Me(e) || NMe();
}
function CMe(e) {
  if (Array.isArray(e)) return rE(e);
}
function AMe(e) {
  if (typeof Symbol < "u" && e[Symbol.iterator] != null || e["@@iterator"] != null) return Array.from(e);
}
function _Me(e, t) {
  if (e) {
    if (typeof e == "string") return rE(e, t);
    var r = Object.prototype.toString.call(e).slice(8, -1);
    if (r === "Object" && e.constructor && (r = e.constructor.name), r === "Map" || r === "Set") return Array.from(e);
    if (r === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return rE(e, t);
  }
}
function rE(e, t) {
  (t == null || t > e.length) && (t = e.length);
  for (var r = 0, n = new Array(t); r < t; r++) n[r] = e[r];
  return n;
}
function NMe() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function jMe(e) {
  var t, r = e.beat, n = e.fade, o = e.beatFade, a = e.bounce, i = e.shake, s = e.flash, l = e.spin, c = e.spinPulse, u = e.spinReverse, f = e.pulse, p = e.fixedWidth, v = e.inverse, x = e.border, b = e.listItem, m = e.flip, w = e.size, $ = e.rotation, E = e.pull, S = (t = {
    "fa-beat": r,
    "fa-fade": n,
    "fa-beat-fade": o,
    "fa-bounce": a,
    "fa-shake": i,
    "fa-flash": s,
    "fa-spin": l,
    "fa-spin-reverse": u,
    "fa-spin-pulse": c,
    "fa-pulse": f,
    "fa-fw": p,
    "fa-inverse": v,
    "fa-border": x,
    "fa-li": b,
    "fa-flip": m === !0,
    "fa-flip-horizontal": m === "horizontal" || m === "both",
    "fa-flip-vertical": m === "vertical" || m === "both"
  }, xf(t, "fa-".concat(w), typeof w < "u" && w !== null), xf(t, "fa-rotate-".concat($), typeof $ < "u" && $ !== null && $ !== 0), xf(t, "fa-pull-".concat(E), typeof E < "u" && E !== null), xf(t, "fa-swap-opacity", e.swapOpacity), t);
  return Object.keys(S).map(function(h) {
    return S[h] ? h : null;
  }).filter(function(h) {
    return h;
  });
}
function IMe(e) {
  return e = e - 0, e === e;
}
function fJ(e) {
  return IMe(e) ? e : (e = e.replace(/[\-_\s]+(.)?/g, function(t, r) {
    return r ? r.toUpperCase() : "";
  }), e.substr(0, 1).toLowerCase() + e.substr(1));
}
var TMe = ["style"];
function MMe(e) {
  return e.charAt(0).toUpperCase() + e.slice(1);
}
function RMe(e) {
  return e.split(";").map(function(t) {
    return t.trim();
  }).filter(function(t) {
    return t;
  }).reduce(function(t, r) {
    var n = r.indexOf(":"), o = fJ(r.slice(0, n)), a = r.slice(n + 1).trim();
    return o.startsWith("webkit") ? t[MMe(o)] = a : t[o] = a, t;
  }, {});
}
function dJ(e, t) {
  var r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
  if (typeof t == "string")
    return t;
  var n = (t.children || []).map(function(l) {
    return dJ(e, l);
  }), o = Object.keys(t.attributes || {}).reduce(function(l, c) {
    var u = t.attributes[c];
    switch (c) {
      case "class":
        l.attrs.className = u, delete t.attributes.class;
        break;
      case "style":
        l.attrs.style = RMe(u);
        break;
      default:
        c.indexOf("aria-") === 0 || c.indexOf("data-") === 0 ? l.attrs[c.toLowerCase()] = u : l.attrs[fJ(c)] = u;
    }
    return l;
  }, {
    attrs: {}
  }), a = r.style, i = a === void 0 ? {} : a, s = PMe(r, TMe);
  return o.attrs.style = ta(ta({}, o.attrs.style), i), e.apply(void 0, [t.tag, ta(ta({}, o.attrs), s)].concat(tE(n)));
}
var pJ = !1;
try {
  pJ = process.env.NODE_ENV === "production";
} catch {
}
function zMe() {
  if (!pJ && console && typeof console.error == "function") {
    var e;
    (e = console).error.apply(e, arguments);
  }
}
function $z(e) {
  if (e && O1(e) === "object" && e.prefix && e.iconName && e.icon)
    return e;
  if (eE.icon)
    return eE.icon(e);
  if (e === null)
    return null;
  if (e && O1(e) === "object" && e.prefix && e.iconName)
    return e;
  if (Array.isArray(e) && e.length === 2)
    return {
      prefix: e[0],
      iconName: e[1]
    };
  if (typeof e == "string")
    return {
      prefix: "fas",
      iconName: e
    };
}
function r$(e, t) {
  return Array.isArray(t) && t.length > 0 || !Array.isArray(t) && t ? xf({}, e, t) : {};
}
var Oz = {
  border: !1,
  className: "",
  mask: null,
  maskId: null,
  fixedWidth: !1,
  inverse: !1,
  flip: !1,
  icon: null,
  listItem: !1,
  pull: null,
  pulse: !1,
  rotation: null,
  size: null,
  spin: !1,
  spinPulse: !1,
  spinReverse: !1,
  beat: !1,
  fade: !1,
  beatFade: !1,
  bounce: !1,
  shake: !1,
  symbol: !1,
  title: "",
  titleId: null,
  transform: null,
  swapOpacity: !1
}, Dn = /* @__PURE__ */ ce.forwardRef(function(e, t) {
  var r = ta(ta({}, Oz), e), n = r.icon, o = r.mask, a = r.symbol, i = r.className, s = r.title, l = r.titleId, c = r.maskId, u = $z(n), f = r$("classes", [].concat(tE(jMe(r)), tE((i || "").split(" ")))), p = r$("transform", typeof r.transform == "string" ? eE.transform(r.transform) : r.transform), v = r$("mask", $z(o)), x = hMe(u, ta(ta(ta(ta({}, f), p), v), {}, {
    symbol: a,
    title: s,
    titleId: l,
    maskId: c
  }));
  if (!x)
    return zMe("Could not find icon", u), null;
  var b = x.abstract, m = {
    ref: t
  };
  return Object.keys(r).forEach(function(w) {
    Oz.hasOwnProperty(w) || (m[w] = r[w]);
  }), FMe(b[0], m);
});
Dn.displayName = "FontAwesomeIcon";
Dn.propTypes = {
  beat: Ft.bool,
  border: Ft.bool,
  beatFade: Ft.bool,
  bounce: Ft.bool,
  className: Ft.string,
  fade: Ft.bool,
  flash: Ft.bool,
  mask: Ft.oneOfType([Ft.object, Ft.array, Ft.string]),
  maskId: Ft.string,
  fixedWidth: Ft.bool,
  inverse: Ft.bool,
  flip: Ft.oneOf([!0, !1, "horizontal", "vertical", "both"]),
  icon: Ft.oneOfType([Ft.object, Ft.array, Ft.string]),
  listItem: Ft.bool,
  pull: Ft.oneOf(["right", "left"]),
  pulse: Ft.bool,
  rotation: Ft.oneOf([0, 90, 180, 270]),
  shake: Ft.bool,
  size: Ft.oneOf(["2xs", "xs", "sm", "lg", "xl", "2xl", "1x", "2x", "3x", "4x", "5x", "6x", "7x", "8x", "9x", "10x"]),
  spin: Ft.bool,
  spinPulse: Ft.bool,
  spinReverse: Ft.bool,
  symbol: Ft.oneOfType([Ft.bool, Ft.string]),
  title: Ft.string,
  titleId: Ft.string,
  transform: Ft.oneOfType([Ft.string, Ft.object]),
  swapOpacity: Ft.bool
};
var FMe = dJ.bind(null, ce.createElement);
const P6 = "-", DMe = (e) => {
  const t = VMe(e), {
    conflictingClassGroups: r,
    conflictingClassGroupModifiers: n
  } = e;
  return {
    getClassGroupId: (o) => {
      const a = o.split(P6);
      return a[0] === "" && a.length !== 1 && a.shift(), mJ(a, t) || LMe(o);
    },
    getConflictingClassGroupIds: (o, a) => {
      const i = r[o] || [];
      return a && n[o] ? [...i, ...n[o]] : i;
    }
  };
}, mJ = (e, t) => {
  var r;
  if (e.length === 0)
    return t.classGroupId;
  const n = e[0], o = t.nextPart.get(n), a = o ? mJ(e.slice(1), o) : void 0;
  if (a)
    return a;
  if (t.validators.length === 0)
    return;
  const i = e.join(P6);
  return (r = t.validators.find(({
    validator: s
  }) => s(i))) == null ? void 0 : r.classGroupId;
}, Ez = /^\[(.+)\]$/, LMe = (e) => {
  if (Ez.test(e)) {
    const t = Ez.exec(e)[1], r = t == null ? void 0 : t.substring(0, t.indexOf(":"));
    if (r)
      return "arbitrary.." + r;
  }
}, VMe = (e) => {
  const {
    theme: t,
    prefix: r
  } = e, n = {
    nextPart: /* @__PURE__ */ new Map(),
    validators: []
  };
  return UMe(Object.entries(e.classGroups), r).forEach(([o, a]) => {
    nE(a, n, o, t);
  }), n;
}, nE = (e, t, r, n) => {
  e.forEach((o) => {
    if (typeof o == "string") {
      const a = o === "" ? t : Sz(t, o);
      a.classGroupId = r;
      return;
    }
    if (typeof o == "function") {
      if (WMe(o)) {
        nE(o(n), t, r, n);
        return;
      }
      t.validators.push({
        validator: o,
        classGroupId: r
      });
      return;
    }
    Object.entries(o).forEach(([a, i]) => {
      nE(i, Sz(t, a), r, n);
    });
  });
}, Sz = (e, t) => {
  let r = e;
  return t.split(P6).forEach((n) => {
    r.nextPart.has(n) || r.nextPart.set(n, {
      nextPart: /* @__PURE__ */ new Map(),
      validators: []
    }), r = r.nextPart.get(n);
  }), r;
}, WMe = (e) => e.isThemeGetter, UMe = (e, t) => t ? e.map(([r, n]) => {
  const o = n.map((a) => typeof a == "string" ? t + a : typeof a == "object" ? Object.fromEntries(Object.entries(a).map(([i, s]) => [t + i, s])) : a);
  return [r, o];
}) : e, YMe = (e) => {
  if (e < 1)
    return {
      get: () => {
      },
      set: () => {
      }
    };
  let t = 0, r = /* @__PURE__ */ new Map(), n = /* @__PURE__ */ new Map();
  const o = (a, i) => {
    r.set(a, i), t++, t > e && (t = 0, n = r, r = /* @__PURE__ */ new Map());
  };
  return {
    get(a) {
      let i = r.get(a);
      if (i !== void 0)
        return i;
      if ((i = n.get(a)) !== void 0)
        return o(a, i), i;
    },
    set(a, i) {
      r.has(a) ? r.set(a, i) : o(a, i);
    }
  };
}, gJ = "!", HMe = (e) => {
  const {
    separator: t,
    experimentalParseClassName: r
  } = e, n = t.length === 1, o = t[0], a = t.length, i = (s) => {
    const l = [];
    let c = 0, u = 0, f;
    for (let m = 0; m < s.length; m++) {
      let w = s[m];
      if (c === 0) {
        if (w === o && (n || s.slice(m, m + a) === t)) {
          l.push(s.slice(u, m)), u = m + a;
          continue;
        }
        if (w === "/") {
          f = m;
          continue;
        }
      }
      w === "[" ? c++ : w === "]" && c--;
    }
    const p = l.length === 0 ? s : s.substring(u), v = p.startsWith(gJ), x = v ? p.substring(1) : p, b = f && f > u ? f - u : void 0;
    return {
      modifiers: l,
      hasImportantModifier: v,
      baseClassName: x,
      maybePostfixModifierPosition: b
    };
  };
  return r ? (s) => r({
    className: s,
    parseClassName: i
  }) : i;
}, GMe = (e) => {
  if (e.length <= 1)
    return e;
  const t = [];
  let r = [];
  return e.forEach((n) => {
    n[0] === "[" ? (t.push(...r.sort(), n), r = []) : r.push(n);
  }), t.push(...r.sort()), t;
}, qMe = (e) => ({
  cache: YMe(e.cacheSize),
  parseClassName: HMe(e),
  ...DMe(e)
}), BMe = /\s+/, XMe = (e, t) => {
  const {
    parseClassName: r,
    getClassGroupId: n,
    getConflictingClassGroupIds: o
  } = t, a = [], i = e.trim().split(BMe);
  let s = "";
  for (let l = i.length - 1; l >= 0; l -= 1) {
    const c = i[l], {
      modifiers: u,
      hasImportantModifier: f,
      baseClassName: p,
      maybePostfixModifierPosition: v
    } = r(c);
    let x = !!v, b = n(x ? p.substring(0, v) : p);
    if (!b) {
      if (!x) {
        s = c + (s.length > 0 ? " " + s : s);
        continue;
      }
      if (b = n(p), !b) {
        s = c + (s.length > 0 ? " " + s : s);
        continue;
      }
      x = !1;
    }
    const m = GMe(u).join(":"), w = f ? m + gJ : m, $ = w + b;
    if (a.includes($))
      continue;
    a.push($);
    const E = o(b, x);
    for (let S = 0; S < E.length; ++S) {
      const h = E[S];
      a.push(w + h);
    }
    s = c + (s.length > 0 ? " " + s : s);
  }
  return s;
};
function KMe() {
  let e = 0, t, r, n = "";
  for (; e < arguments.length; )
    (t = arguments[e++]) && (r = hJ(t)) && (n && (n += " "), n += r);
  return n;
}
const hJ = (e) => {
  if (typeof e == "string")
    return e;
  let t, r = "";
  for (let n = 0; n < e.length; n++)
    e[n] && (t = hJ(e[n])) && (r && (r += " "), r += t);
  return r;
};
function JMe(e, ...t) {
  let r, n, o, a = i;
  function i(l) {
    const c = t.reduce((u, f) => f(u), e());
    return r = qMe(c), n = r.cache.get, o = r.cache.set, a = s, s(l);
  }
  function s(l) {
    const c = n(l);
    if (c)
      return c;
    const u = XMe(l, r);
    return o(l, u), u;
  }
  return function() {
    return a(KMe.apply(null, arguments));
  };
}
const Ir = (e) => {
  const t = (r) => r[e] || [];
  return t.isThemeGetter = !0, t;
}, bJ = /^\[(?:([a-z-]+):)?(.+)\]$/i, QMe = /^\d+\/\d+$/, ZMe = /* @__PURE__ */ new Set(["px", "full", "screen"]), eRe = /^(\d+(\.\d+)?)?(xs|sm|md|lg|xl)$/, tRe = /\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\b(calc|min|max|clamp)\(.+\)|^0$/, rRe = /^(rgba?|hsla?|hwb|(ok)?(lab|lch))\(.+\)$/, nRe = /^(inset_)?-?((\d+)?\.?(\d+)[a-z]+|0)_-?((\d+)?\.?(\d+)[a-z]+|0)/, oRe = /^(url|image|image-set|cross-fade|element|(repeating-)?(linear|radial|conic)-gradient)\(.+\)$/, ei = (e) => nd(e) || ZMe.has(e) || QMe.test(e), fl = (e) => np(e, "length", dRe), nd = (e) => !!e && !Number.isNaN(Number(e)), n$ = (e) => np(e, "number", nd), Um = (e) => !!e && Number.isInteger(Number(e)), aRe = (e) => e.endsWith("%") && nd(e.slice(0, -1)), vt = (e) => bJ.test(e), dl = (e) => eRe.test(e), iRe = /* @__PURE__ */ new Set(["length", "size", "percentage"]), sRe = (e) => np(e, iRe, yJ), lRe = (e) => np(e, "position", yJ), cRe = /* @__PURE__ */ new Set(["image", "url"]), uRe = (e) => np(e, cRe, mRe), fRe = (e) => np(e, "", pRe), Ym = () => !0, np = (e, t, r) => {
  const n = bJ.exec(e);
  return n ? n[1] ? typeof t == "string" ? n[1] === t : t.has(n[1]) : r(n[2]) : !1;
}, dRe = (e) => (
  // `colorFunctionRegex` check is necessary because color functions can have percentages in them which which would be incorrectly classified as lengths.
  // For example, `hsl(0 0% 0%)` would be classified as a length without this check.
  // I could also use lookbehind assertion in `lengthUnitRegex` but that isn't supported widely enough.
  tRe.test(e) && !rRe.test(e)
), yJ = () => !1, pRe = (e) => nRe.test(e), mRe = (e) => oRe.test(e), gRe = () => {
  const e = Ir("colors"), t = Ir("spacing"), r = Ir("blur"), n = Ir("brightness"), o = Ir("borderColor"), a = Ir("borderRadius"), i = Ir("borderSpacing"), s = Ir("borderWidth"), l = Ir("contrast"), c = Ir("grayscale"), u = Ir("hueRotate"), f = Ir("invert"), p = Ir("gap"), v = Ir("gradientColorStops"), x = Ir("gradientColorStopPositions"), b = Ir("inset"), m = Ir("margin"), w = Ir("opacity"), $ = Ir("padding"), E = Ir("saturate"), S = Ir("scale"), h = Ir("sepia"), U = Ir("skew"), G = Ir("space"), Q = Ir("translate"), Z = () => ["auto", "contain", "none"], X = () => ["auto", "hidden", "clip", "visible", "scroll"], J = () => ["auto", vt, t], I = () => [vt, t], te = () => ["", ei, fl], V = () => ["auto", nd, vt], D = () => ["bottom", "center", "left", "left-bottom", "left-top", "right", "right-bottom", "right-top", "top"], F = () => ["solid", "dashed", "dotted", "double", "none"], R = () => ["normal", "multiply", "screen", "overlay", "darken", "lighten", "color-dodge", "color-burn", "hard-light", "soft-light", "difference", "exclusion", "hue", "saturation", "color", "luminosity"], H = () => ["start", "end", "center", "between", "around", "evenly", "stretch"], B = () => ["", "0", vt], g = () => ["auto", "avoid", "all", "avoid-page", "page", "left", "right", "column"], d = () => [nd, vt];
  return {
    cacheSize: 500,
    separator: ":",
    theme: {
      colors: [Ym],
      spacing: [ei, fl],
      blur: ["none", "", dl, vt],
      brightness: d(),
      borderColor: [e],
      borderRadius: ["none", "", "full", dl, vt],
      borderSpacing: I(),
      borderWidth: te(),
      contrast: d(),
      grayscale: B(),
      hueRotate: d(),
      invert: B(),
      gap: I(),
      gradientColorStops: [e],
      gradientColorStopPositions: [aRe, fl],
      inset: J(),
      margin: J(),
      opacity: d(),
      padding: I(),
      saturate: d(),
      scale: d(),
      sepia: B(),
      skew: d(),
      space: I(),
      translate: I()
    },
    classGroups: {
      // Layout
      /**
       * Aspect Ratio
       * @see https://tailwindcss.com/docs/aspect-ratio
       */
      aspect: [{
        aspect: ["auto", "square", "video", vt]
      }],
      /**
       * Container
       * @see https://tailwindcss.com/docs/container
       */
      container: ["container"],
      /**
       * Columns
       * @see https://tailwindcss.com/docs/columns
       */
      columns: [{
        columns: [dl]
      }],
      /**
       * Break After
       * @see https://tailwindcss.com/docs/break-after
       */
      "break-after": [{
        "break-after": g()
      }],
      /**
       * Break Before
       * @see https://tailwindcss.com/docs/break-before
       */
      "break-before": [{
        "break-before": g()
      }],
      /**
       * Break Inside
       * @see https://tailwindcss.com/docs/break-inside
       */
      "break-inside": [{
        "break-inside": ["auto", "avoid", "avoid-page", "avoid-column"]
      }],
      /**
       * Box Decoration Break
       * @see https://tailwindcss.com/docs/box-decoration-break
       */
      "box-decoration": [{
        "box-decoration": ["slice", "clone"]
      }],
      /**
       * Box Sizing
       * @see https://tailwindcss.com/docs/box-sizing
       */
      box: [{
        box: ["border", "content"]
      }],
      /**
       * Display
       * @see https://tailwindcss.com/docs/display
       */
      display: ["block", "inline-block", "inline", "flex", "inline-flex", "table", "inline-table", "table-caption", "table-cell", "table-column", "table-column-group", "table-footer-group", "table-header-group", "table-row-group", "table-row", "flow-root", "grid", "inline-grid", "contents", "list-item", "hidden"],
      /**
       * Floats
       * @see https://tailwindcss.com/docs/float
       */
      float: [{
        float: ["right", "left", "none", "start", "end"]
      }],
      /**
       * Clear
       * @see https://tailwindcss.com/docs/clear
       */
      clear: [{
        clear: ["left", "right", "both", "none", "start", "end"]
      }],
      /**
       * Isolation
       * @see https://tailwindcss.com/docs/isolation
       */
      isolation: ["isolate", "isolation-auto"],
      /**
       * Object Fit
       * @see https://tailwindcss.com/docs/object-fit
       */
      "object-fit": [{
        object: ["contain", "cover", "fill", "none", "scale-down"]
      }],
      /**
       * Object Position
       * @see https://tailwindcss.com/docs/object-position
       */
      "object-position": [{
        object: [...D(), vt]
      }],
      /**
       * Overflow
       * @see https://tailwindcss.com/docs/overflow
       */
      overflow: [{
        overflow: X()
      }],
      /**
       * Overflow X
       * @see https://tailwindcss.com/docs/overflow
       */
      "overflow-x": [{
        "overflow-x": X()
      }],
      /**
       * Overflow Y
       * @see https://tailwindcss.com/docs/overflow
       */
      "overflow-y": [{
        "overflow-y": X()
      }],
      /**
       * Overscroll Behavior
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      overscroll: [{
        overscroll: Z()
      }],
      /**
       * Overscroll Behavior X
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      "overscroll-x": [{
        "overscroll-x": Z()
      }],
      /**
       * Overscroll Behavior Y
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      "overscroll-y": [{
        "overscroll-y": Z()
      }],
      /**
       * Position
       * @see https://tailwindcss.com/docs/position
       */
      position: ["static", "fixed", "absolute", "relative", "sticky"],
      /**
       * Top / Right / Bottom / Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      inset: [{
        inset: [b]
      }],
      /**
       * Right / Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      "inset-x": [{
        "inset-x": [b]
      }],
      /**
       * Top / Bottom
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      "inset-y": [{
        "inset-y": [b]
      }],
      /**
       * Start
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      start: [{
        start: [b]
      }],
      /**
       * End
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      end: [{
        end: [b]
      }],
      /**
       * Top
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      top: [{
        top: [b]
      }],
      /**
       * Right
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      right: [{
        right: [b]
      }],
      /**
       * Bottom
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      bottom: [{
        bottom: [b]
      }],
      /**
       * Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      left: [{
        left: [b]
      }],
      /**
       * Visibility
       * @see https://tailwindcss.com/docs/visibility
       */
      visibility: ["visible", "invisible", "collapse"],
      /**
       * Z-Index
       * @see https://tailwindcss.com/docs/z-index
       */
      z: [{
        z: ["auto", Um, vt]
      }],
      // Flexbox and Grid
      /**
       * Flex Basis
       * @see https://tailwindcss.com/docs/flex-basis
       */
      basis: [{
        basis: J()
      }],
      /**
       * Flex Direction
       * @see https://tailwindcss.com/docs/flex-direction
       */
      "flex-direction": [{
        flex: ["row", "row-reverse", "col", "col-reverse"]
      }],
      /**
       * Flex Wrap
       * @see https://tailwindcss.com/docs/flex-wrap
       */
      "flex-wrap": [{
        flex: ["wrap", "wrap-reverse", "nowrap"]
      }],
      /**
       * Flex
       * @see https://tailwindcss.com/docs/flex
       */
      flex: [{
        flex: ["1", "auto", "initial", "none", vt]
      }],
      /**
       * Flex Grow
       * @see https://tailwindcss.com/docs/flex-grow
       */
      grow: [{
        grow: B()
      }],
      /**
       * Flex Shrink
       * @see https://tailwindcss.com/docs/flex-shrink
       */
      shrink: [{
        shrink: B()
      }],
      /**
       * Order
       * @see https://tailwindcss.com/docs/order
       */
      order: [{
        order: ["first", "last", "none", Um, vt]
      }],
      /**
       * Grid Template Columns
       * @see https://tailwindcss.com/docs/grid-template-columns
       */
      "grid-cols": [{
        "grid-cols": [Ym]
      }],
      /**
       * Grid Column Start / End
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-start-end": [{
        col: ["auto", {
          span: ["full", Um, vt]
        }, vt]
      }],
      /**
       * Grid Column Start
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-start": [{
        "col-start": V()
      }],
      /**
       * Grid Column End
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-end": [{
        "col-end": V()
      }],
      /**
       * Grid Template Rows
       * @see https://tailwindcss.com/docs/grid-template-rows
       */
      "grid-rows": [{
        "grid-rows": [Ym]
      }],
      /**
       * Grid Row Start / End
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-start-end": [{
        row: ["auto", {
          span: [Um, vt]
        }, vt]
      }],
      /**
       * Grid Row Start
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-start": [{
        "row-start": V()
      }],
      /**
       * Grid Row End
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-end": [{
        "row-end": V()
      }],
      /**
       * Grid Auto Flow
       * @see https://tailwindcss.com/docs/grid-auto-flow
       */
      "grid-flow": [{
        "grid-flow": ["row", "col", "dense", "row-dense", "col-dense"]
      }],
      /**
       * Grid Auto Columns
       * @see https://tailwindcss.com/docs/grid-auto-columns
       */
      "auto-cols": [{
        "auto-cols": ["auto", "min", "max", "fr", vt]
      }],
      /**
       * Grid Auto Rows
       * @see https://tailwindcss.com/docs/grid-auto-rows
       */
      "auto-rows": [{
        "auto-rows": ["auto", "min", "max", "fr", vt]
      }],
      /**
       * Gap
       * @see https://tailwindcss.com/docs/gap
       */
      gap: [{
        gap: [p]
      }],
      /**
       * Gap X
       * @see https://tailwindcss.com/docs/gap
       */
      "gap-x": [{
        "gap-x": [p]
      }],
      /**
       * Gap Y
       * @see https://tailwindcss.com/docs/gap
       */
      "gap-y": [{
        "gap-y": [p]
      }],
      /**
       * Justify Content
       * @see https://tailwindcss.com/docs/justify-content
       */
      "justify-content": [{
        justify: ["normal", ...H()]
      }],
      /**
       * Justify Items
       * @see https://tailwindcss.com/docs/justify-items
       */
      "justify-items": [{
        "justify-items": ["start", "end", "center", "stretch"]
      }],
      /**
       * Justify Self
       * @see https://tailwindcss.com/docs/justify-self
       */
      "justify-self": [{
        "justify-self": ["auto", "start", "end", "center", "stretch"]
      }],
      /**
       * Align Content
       * @see https://tailwindcss.com/docs/align-content
       */
      "align-content": [{
        content: ["normal", ...H(), "baseline"]
      }],
      /**
       * Align Items
       * @see https://tailwindcss.com/docs/align-items
       */
      "align-items": [{
        items: ["start", "end", "center", "baseline", "stretch"]
      }],
      /**
       * Align Self
       * @see https://tailwindcss.com/docs/align-self
       */
      "align-self": [{
        self: ["auto", "start", "end", "center", "stretch", "baseline"]
      }],
      /**
       * Place Content
       * @see https://tailwindcss.com/docs/place-content
       */
      "place-content": [{
        "place-content": [...H(), "baseline"]
      }],
      /**
       * Place Items
       * @see https://tailwindcss.com/docs/place-items
       */
      "place-items": [{
        "place-items": ["start", "end", "center", "baseline", "stretch"]
      }],
      /**
       * Place Self
       * @see https://tailwindcss.com/docs/place-self
       */
      "place-self": [{
        "place-self": ["auto", "start", "end", "center", "stretch"]
      }],
      // Spacing
      /**
       * Padding
       * @see https://tailwindcss.com/docs/padding
       */
      p: [{
        p: [$]
      }],
      /**
       * Padding X
       * @see https://tailwindcss.com/docs/padding
       */
      px: [{
        px: [$]
      }],
      /**
       * Padding Y
       * @see https://tailwindcss.com/docs/padding
       */
      py: [{
        py: [$]
      }],
      /**
       * Padding Start
       * @see https://tailwindcss.com/docs/padding
       */
      ps: [{
        ps: [$]
      }],
      /**
       * Padding End
       * @see https://tailwindcss.com/docs/padding
       */
      pe: [{
        pe: [$]
      }],
      /**
       * Padding Top
       * @see https://tailwindcss.com/docs/padding
       */
      pt: [{
        pt: [$]
      }],
      /**
       * Padding Right
       * @see https://tailwindcss.com/docs/padding
       */
      pr: [{
        pr: [$]
      }],
      /**
       * Padding Bottom
       * @see https://tailwindcss.com/docs/padding
       */
      pb: [{
        pb: [$]
      }],
      /**
       * Padding Left
       * @see https://tailwindcss.com/docs/padding
       */
      pl: [{
        pl: [$]
      }],
      /**
       * Margin
       * @see https://tailwindcss.com/docs/margin
       */
      m: [{
        m: [m]
      }],
      /**
       * Margin X
       * @see https://tailwindcss.com/docs/margin
       */
      mx: [{
        mx: [m]
      }],
      /**
       * Margin Y
       * @see https://tailwindcss.com/docs/margin
       */
      my: [{
        my: [m]
      }],
      /**
       * Margin Start
       * @see https://tailwindcss.com/docs/margin
       */
      ms: [{
        ms: [m]
      }],
      /**
       * Margin End
       * @see https://tailwindcss.com/docs/margin
       */
      me: [{
        me: [m]
      }],
      /**
       * Margin Top
       * @see https://tailwindcss.com/docs/margin
       */
      mt: [{
        mt: [m]
      }],
      /**
       * Margin Right
       * @see https://tailwindcss.com/docs/margin
       */
      mr: [{
        mr: [m]
      }],
      /**
       * Margin Bottom
       * @see https://tailwindcss.com/docs/margin
       */
      mb: [{
        mb: [m]
      }],
      /**
       * Margin Left
       * @see https://tailwindcss.com/docs/margin
       */
      ml: [{
        ml: [m]
      }],
      /**
       * Space Between X
       * @see https://tailwindcss.com/docs/space
       */
      "space-x": [{
        "space-x": [G]
      }],
      /**
       * Space Between X Reverse
       * @see https://tailwindcss.com/docs/space
       */
      "space-x-reverse": ["space-x-reverse"],
      /**
       * Space Between Y
       * @see https://tailwindcss.com/docs/space
       */
      "space-y": [{
        "space-y": [G]
      }],
      /**
       * Space Between Y Reverse
       * @see https://tailwindcss.com/docs/space
       */
      "space-y-reverse": ["space-y-reverse"],
      // Sizing
      /**
       * Width
       * @see https://tailwindcss.com/docs/width
       */
      w: [{
        w: ["auto", "min", "max", "fit", "svw", "lvw", "dvw", vt, t]
      }],
      /**
       * Min-Width
       * @see https://tailwindcss.com/docs/min-width
       */
      "min-w": [{
        "min-w": [vt, t, "min", "max", "fit"]
      }],
      /**
       * Max-Width
       * @see https://tailwindcss.com/docs/max-width
       */
      "max-w": [{
        "max-w": [vt, t, "none", "full", "min", "max", "fit", "prose", {
          screen: [dl]
        }, dl]
      }],
      /**
       * Height
       * @see https://tailwindcss.com/docs/height
       */
      h: [{
        h: [vt, t, "auto", "min", "max", "fit", "svh", "lvh", "dvh"]
      }],
      /**
       * Min-Height
       * @see https://tailwindcss.com/docs/min-height
       */
      "min-h": [{
        "min-h": [vt, t, "min", "max", "fit", "svh", "lvh", "dvh"]
      }],
      /**
       * Max-Height
       * @see https://tailwindcss.com/docs/max-height
       */
      "max-h": [{
        "max-h": [vt, t, "min", "max", "fit", "svh", "lvh", "dvh"]
      }],
      /**
       * Size
       * @see https://tailwindcss.com/docs/size
       */
      size: [{
        size: [vt, t, "auto", "min", "max", "fit"]
      }],
      // Typography
      /**
       * Font Size
       * @see https://tailwindcss.com/docs/font-size
       */
      "font-size": [{
        text: ["base", dl, fl]
      }],
      /**
       * Font Smoothing
       * @see https://tailwindcss.com/docs/font-smoothing
       */
      "font-smoothing": ["antialiased", "subpixel-antialiased"],
      /**
       * Font Style
       * @see https://tailwindcss.com/docs/font-style
       */
      "font-style": ["italic", "not-italic"],
      /**
       * Font Weight
       * @see https://tailwindcss.com/docs/font-weight
       */
      "font-weight": [{
        font: ["thin", "extralight", "light", "normal", "medium", "semibold", "bold", "extrabold", "black", n$]
      }],
      /**
       * Font Family
       * @see https://tailwindcss.com/docs/font-family
       */
      "font-family": [{
        font: [Ym]
      }],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-normal": ["normal-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-ordinal": ["ordinal"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-slashed-zero": ["slashed-zero"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-figure": ["lining-nums", "oldstyle-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-spacing": ["proportional-nums", "tabular-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-fraction": ["diagonal-fractions", "stacked-fractions"],
      /**
       * Letter Spacing
       * @see https://tailwindcss.com/docs/letter-spacing
       */
      tracking: [{
        tracking: ["tighter", "tight", "normal", "wide", "wider", "widest", vt]
      }],
      /**
       * Line Clamp
       * @see https://tailwindcss.com/docs/line-clamp
       */
      "line-clamp": [{
        "line-clamp": ["none", nd, n$]
      }],
      /**
       * Line Height
       * @see https://tailwindcss.com/docs/line-height
       */
      leading: [{
        leading: ["none", "tight", "snug", "normal", "relaxed", "loose", ei, vt]
      }],
      /**
       * List Style Image
       * @see https://tailwindcss.com/docs/list-style-image
       */
      "list-image": [{
        "list-image": ["none", vt]
      }],
      /**
       * List Style Type
       * @see https://tailwindcss.com/docs/list-style-type
       */
      "list-style-type": [{
        list: ["none", "disc", "decimal", vt]
      }],
      /**
       * List Style Position
       * @see https://tailwindcss.com/docs/list-style-position
       */
      "list-style-position": [{
        list: ["inside", "outside"]
      }],
      /**
       * Placeholder Color
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/placeholder-color
       */
      "placeholder-color": [{
        placeholder: [e]
      }],
      /**
       * Placeholder Opacity
       * @see https://tailwindcss.com/docs/placeholder-opacity
       */
      "placeholder-opacity": [{
        "placeholder-opacity": [w]
      }],
      /**
       * Text Alignment
       * @see https://tailwindcss.com/docs/text-align
       */
      "text-alignment": [{
        text: ["left", "center", "right", "justify", "start", "end"]
      }],
      /**
       * Text Color
       * @see https://tailwindcss.com/docs/text-color
       */
      "text-color": [{
        text: [e]
      }],
      /**
       * Text Opacity
       * @see https://tailwindcss.com/docs/text-opacity
       */
      "text-opacity": [{
        "text-opacity": [w]
      }],
      /**
       * Text Decoration
       * @see https://tailwindcss.com/docs/text-decoration
       */
      "text-decoration": ["underline", "overline", "line-through", "no-underline"],
      /**
       * Text Decoration Style
       * @see https://tailwindcss.com/docs/text-decoration-style
       */
      "text-decoration-style": [{
        decoration: [...F(), "wavy"]
      }],
      /**
       * Text Decoration Thickness
       * @see https://tailwindcss.com/docs/text-decoration-thickness
       */
      "text-decoration-thickness": [{
        decoration: ["auto", "from-font", ei, fl]
      }],
      /**
       * Text Underline Offset
       * @see https://tailwindcss.com/docs/text-underline-offset
       */
      "underline-offset": [{
        "underline-offset": ["auto", ei, vt]
      }],
      /**
       * Text Decoration Color
       * @see https://tailwindcss.com/docs/text-decoration-color
       */
      "text-decoration-color": [{
        decoration: [e]
      }],
      /**
       * Text Transform
       * @see https://tailwindcss.com/docs/text-transform
       */
      "text-transform": ["uppercase", "lowercase", "capitalize", "normal-case"],
      /**
       * Text Overflow
       * @see https://tailwindcss.com/docs/text-overflow
       */
      "text-overflow": ["truncate", "text-ellipsis", "text-clip"],
      /**
       * Text Wrap
       * @see https://tailwindcss.com/docs/text-wrap
       */
      "text-wrap": [{
        text: ["wrap", "nowrap", "balance", "pretty"]
      }],
      /**
       * Text Indent
       * @see https://tailwindcss.com/docs/text-indent
       */
      indent: [{
        indent: I()
      }],
      /**
       * Vertical Alignment
       * @see https://tailwindcss.com/docs/vertical-align
       */
      "vertical-align": [{
        align: ["baseline", "top", "middle", "bottom", "text-top", "text-bottom", "sub", "super", vt]
      }],
      /**
       * Whitespace
       * @see https://tailwindcss.com/docs/whitespace
       */
      whitespace: [{
        whitespace: ["normal", "nowrap", "pre", "pre-line", "pre-wrap", "break-spaces"]
      }],
      /**
       * Word Break
       * @see https://tailwindcss.com/docs/word-break
       */
      break: [{
        break: ["normal", "words", "all", "keep"]
      }],
      /**
       * Hyphens
       * @see https://tailwindcss.com/docs/hyphens
       */
      hyphens: [{
        hyphens: ["none", "manual", "auto"]
      }],
      /**
       * Content
       * @see https://tailwindcss.com/docs/content
       */
      content: [{
        content: ["none", vt]
      }],
      // Backgrounds
      /**
       * Background Attachment
       * @see https://tailwindcss.com/docs/background-attachment
       */
      "bg-attachment": [{
        bg: ["fixed", "local", "scroll"]
      }],
      /**
       * Background Clip
       * @see https://tailwindcss.com/docs/background-clip
       */
      "bg-clip": [{
        "bg-clip": ["border", "padding", "content", "text"]
      }],
      /**
       * Background Opacity
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/background-opacity
       */
      "bg-opacity": [{
        "bg-opacity": [w]
      }],
      /**
       * Background Origin
       * @see https://tailwindcss.com/docs/background-origin
       */
      "bg-origin": [{
        "bg-origin": ["border", "padding", "content"]
      }],
      /**
       * Background Position
       * @see https://tailwindcss.com/docs/background-position
       */
      "bg-position": [{
        bg: [...D(), lRe]
      }],
      /**
       * Background Repeat
       * @see https://tailwindcss.com/docs/background-repeat
       */
      "bg-repeat": [{
        bg: ["no-repeat", {
          repeat: ["", "x", "y", "round", "space"]
        }]
      }],
      /**
       * Background Size
       * @see https://tailwindcss.com/docs/background-size
       */
      "bg-size": [{
        bg: ["auto", "cover", "contain", sRe]
      }],
      /**
       * Background Image
       * @see https://tailwindcss.com/docs/background-image
       */
      "bg-image": [{
        bg: ["none", {
          "gradient-to": ["t", "tr", "r", "br", "b", "bl", "l", "tl"]
        }, uRe]
      }],
      /**
       * Background Color
       * @see https://tailwindcss.com/docs/background-color
       */
      "bg-color": [{
        bg: [e]
      }],
      /**
       * Gradient Color Stops From Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-from-pos": [{
        from: [x]
      }],
      /**
       * Gradient Color Stops Via Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-via-pos": [{
        via: [x]
      }],
      /**
       * Gradient Color Stops To Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-to-pos": [{
        to: [x]
      }],
      /**
       * Gradient Color Stops From
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-from": [{
        from: [v]
      }],
      /**
       * Gradient Color Stops Via
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-via": [{
        via: [v]
      }],
      /**
       * Gradient Color Stops To
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-to": [{
        to: [v]
      }],
      // Borders
      /**
       * Border Radius
       * @see https://tailwindcss.com/docs/border-radius
       */
      rounded: [{
        rounded: [a]
      }],
      /**
       * Border Radius Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-s": [{
        "rounded-s": [a]
      }],
      /**
       * Border Radius End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-e": [{
        "rounded-e": [a]
      }],
      /**
       * Border Radius Top
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-t": [{
        "rounded-t": [a]
      }],
      /**
       * Border Radius Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-r": [{
        "rounded-r": [a]
      }],
      /**
       * Border Radius Bottom
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-b": [{
        "rounded-b": [a]
      }],
      /**
       * Border Radius Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-l": [{
        "rounded-l": [a]
      }],
      /**
       * Border Radius Start Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-ss": [{
        "rounded-ss": [a]
      }],
      /**
       * Border Radius Start End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-se": [{
        "rounded-se": [a]
      }],
      /**
       * Border Radius End End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-ee": [{
        "rounded-ee": [a]
      }],
      /**
       * Border Radius End Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-es": [{
        "rounded-es": [a]
      }],
      /**
       * Border Radius Top Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-tl": [{
        "rounded-tl": [a]
      }],
      /**
       * Border Radius Top Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-tr": [{
        "rounded-tr": [a]
      }],
      /**
       * Border Radius Bottom Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-br": [{
        "rounded-br": [a]
      }],
      /**
       * Border Radius Bottom Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-bl": [{
        "rounded-bl": [a]
      }],
      /**
       * Border Width
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w": [{
        border: [s]
      }],
      /**
       * Border Width X
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-x": [{
        "border-x": [s]
      }],
      /**
       * Border Width Y
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-y": [{
        "border-y": [s]
      }],
      /**
       * Border Width Start
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-s": [{
        "border-s": [s]
      }],
      /**
       * Border Width End
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-e": [{
        "border-e": [s]
      }],
      /**
       * Border Width Top
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-t": [{
        "border-t": [s]
      }],
      /**
       * Border Width Right
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-r": [{
        "border-r": [s]
      }],
      /**
       * Border Width Bottom
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-b": [{
        "border-b": [s]
      }],
      /**
       * Border Width Left
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-l": [{
        "border-l": [s]
      }],
      /**
       * Border Opacity
       * @see https://tailwindcss.com/docs/border-opacity
       */
      "border-opacity": [{
        "border-opacity": [w]
      }],
      /**
       * Border Style
       * @see https://tailwindcss.com/docs/border-style
       */
      "border-style": [{
        border: [...F(), "hidden"]
      }],
      /**
       * Divide Width X
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-x": [{
        "divide-x": [s]
      }],
      /**
       * Divide Width X Reverse
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-x-reverse": ["divide-x-reverse"],
      /**
       * Divide Width Y
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-y": [{
        "divide-y": [s]
      }],
      /**
       * Divide Width Y Reverse
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-y-reverse": ["divide-y-reverse"],
      /**
       * Divide Opacity
       * @see https://tailwindcss.com/docs/divide-opacity
       */
      "divide-opacity": [{
        "divide-opacity": [w]
      }],
      /**
       * Divide Style
       * @see https://tailwindcss.com/docs/divide-style
       */
      "divide-style": [{
        divide: F()
      }],
      /**
       * Border Color
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color": [{
        border: [o]
      }],
      /**
       * Border Color X
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-x": [{
        "border-x": [o]
      }],
      /**
       * Border Color Y
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-y": [{
        "border-y": [o]
      }],
      /**
       * Border Color S
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-s": [{
        "border-s": [o]
      }],
      /**
       * Border Color E
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-e": [{
        "border-e": [o]
      }],
      /**
       * Border Color Top
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-t": [{
        "border-t": [o]
      }],
      /**
       * Border Color Right
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-r": [{
        "border-r": [o]
      }],
      /**
       * Border Color Bottom
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-b": [{
        "border-b": [o]
      }],
      /**
       * Border Color Left
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-l": [{
        "border-l": [o]
      }],
      /**
       * Divide Color
       * @see https://tailwindcss.com/docs/divide-color
       */
      "divide-color": [{
        divide: [o]
      }],
      /**
       * Outline Style
       * @see https://tailwindcss.com/docs/outline-style
       */
      "outline-style": [{
        outline: ["", ...F()]
      }],
      /**
       * Outline Offset
       * @see https://tailwindcss.com/docs/outline-offset
       */
      "outline-offset": [{
        "outline-offset": [ei, vt]
      }],
      /**
       * Outline Width
       * @see https://tailwindcss.com/docs/outline-width
       */
      "outline-w": [{
        outline: [ei, fl]
      }],
      /**
       * Outline Color
       * @see https://tailwindcss.com/docs/outline-color
       */
      "outline-color": [{
        outline: [e]
      }],
      /**
       * Ring Width
       * @see https://tailwindcss.com/docs/ring-width
       */
      "ring-w": [{
        ring: te()
      }],
      /**
       * Ring Width Inset
       * @see https://tailwindcss.com/docs/ring-width
       */
      "ring-w-inset": ["ring-inset"],
      /**
       * Ring Color
       * @see https://tailwindcss.com/docs/ring-color
       */
      "ring-color": [{
        ring: [e]
      }],
      /**
       * Ring Opacity
       * @see https://tailwindcss.com/docs/ring-opacity
       */
      "ring-opacity": [{
        "ring-opacity": [w]
      }],
      /**
       * Ring Offset Width
       * @see https://tailwindcss.com/docs/ring-offset-width
       */
      "ring-offset-w": [{
        "ring-offset": [ei, fl]
      }],
      /**
       * Ring Offset Color
       * @see https://tailwindcss.com/docs/ring-offset-color
       */
      "ring-offset-color": [{
        "ring-offset": [e]
      }],
      // Effects
      /**
       * Box Shadow
       * @see https://tailwindcss.com/docs/box-shadow
       */
      shadow: [{
        shadow: ["", "inner", "none", dl, fRe]
      }],
      /**
       * Box Shadow Color
       * @see https://tailwindcss.com/docs/box-shadow-color
       */
      "shadow-color": [{
        shadow: [Ym]
      }],
      /**
       * Opacity
       * @see https://tailwindcss.com/docs/opacity
       */
      opacity: [{
        opacity: [w]
      }],
      /**
       * Mix Blend Mode
       * @see https://tailwindcss.com/docs/mix-blend-mode
       */
      "mix-blend": [{
        "mix-blend": [...R(), "plus-lighter", "plus-darker"]
      }],
      /**
       * Background Blend Mode
       * @see https://tailwindcss.com/docs/background-blend-mode
       */
      "bg-blend": [{
        "bg-blend": R()
      }],
      // Filters
      /**
       * Filter
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/filter
       */
      filter: [{
        filter: ["", "none"]
      }],
      /**
       * Blur
       * @see https://tailwindcss.com/docs/blur
       */
      blur: [{
        blur: [r]
      }],
      /**
       * Brightness
       * @see https://tailwindcss.com/docs/brightness
       */
      brightness: [{
        brightness: [n]
      }],
      /**
       * Contrast
       * @see https://tailwindcss.com/docs/contrast
       */
      contrast: [{
        contrast: [l]
      }],
      /**
       * Drop Shadow
       * @see https://tailwindcss.com/docs/drop-shadow
       */
      "drop-shadow": [{
        "drop-shadow": ["", "none", dl, vt]
      }],
      /**
       * Grayscale
       * @see https://tailwindcss.com/docs/grayscale
       */
      grayscale: [{
        grayscale: [c]
      }],
      /**
       * Hue Rotate
       * @see https://tailwindcss.com/docs/hue-rotate
       */
      "hue-rotate": [{
        "hue-rotate": [u]
      }],
      /**
       * Invert
       * @see https://tailwindcss.com/docs/invert
       */
      invert: [{
        invert: [f]
      }],
      /**
       * Saturate
       * @see https://tailwindcss.com/docs/saturate
       */
      saturate: [{
        saturate: [E]
      }],
      /**
       * Sepia
       * @see https://tailwindcss.com/docs/sepia
       */
      sepia: [{
        sepia: [h]
      }],
      /**
       * Backdrop Filter
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/backdrop-filter
       */
      "backdrop-filter": [{
        "backdrop-filter": ["", "none"]
      }],
      /**
       * Backdrop Blur
       * @see https://tailwindcss.com/docs/backdrop-blur
       */
      "backdrop-blur": [{
        "backdrop-blur": [r]
      }],
      /**
       * Backdrop Brightness
       * @see https://tailwindcss.com/docs/backdrop-brightness
       */
      "backdrop-brightness": [{
        "backdrop-brightness": [n]
      }],
      /**
       * Backdrop Contrast
       * @see https://tailwindcss.com/docs/backdrop-contrast
       */
      "backdrop-contrast": [{
        "backdrop-contrast": [l]
      }],
      /**
       * Backdrop Grayscale
       * @see https://tailwindcss.com/docs/backdrop-grayscale
       */
      "backdrop-grayscale": [{
        "backdrop-grayscale": [c]
      }],
      /**
       * Backdrop Hue Rotate
       * @see https://tailwindcss.com/docs/backdrop-hue-rotate
       */
      "backdrop-hue-rotate": [{
        "backdrop-hue-rotate": [u]
      }],
      /**
       * Backdrop Invert
       * @see https://tailwindcss.com/docs/backdrop-invert
       */
      "backdrop-invert": [{
        "backdrop-invert": [f]
      }],
      /**
       * Backdrop Opacity
       * @see https://tailwindcss.com/docs/backdrop-opacity
       */
      "backdrop-opacity": [{
        "backdrop-opacity": [w]
      }],
      /**
       * Backdrop Saturate
       * @see https://tailwindcss.com/docs/backdrop-saturate
       */
      "backdrop-saturate": [{
        "backdrop-saturate": [E]
      }],
      /**
       * Backdrop Sepia
       * @see https://tailwindcss.com/docs/backdrop-sepia
       */
      "backdrop-sepia": [{
        "backdrop-sepia": [h]
      }],
      // Tables
      /**
       * Border Collapse
       * @see https://tailwindcss.com/docs/border-collapse
       */
      "border-collapse": [{
        border: ["collapse", "separate"]
      }],
      /**
       * Border Spacing
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing": [{
        "border-spacing": [i]
      }],
      /**
       * Border Spacing X
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing-x": [{
        "border-spacing-x": [i]
      }],
      /**
       * Border Spacing Y
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing-y": [{
        "border-spacing-y": [i]
      }],
      /**
       * Table Layout
       * @see https://tailwindcss.com/docs/table-layout
       */
      "table-layout": [{
        table: ["auto", "fixed"]
      }],
      /**
       * Caption Side
       * @see https://tailwindcss.com/docs/caption-side
       */
      caption: [{
        caption: ["top", "bottom"]
      }],
      // Transitions and Animation
      /**
       * Tranisition Property
       * @see https://tailwindcss.com/docs/transition-property
       */
      transition: [{
        transition: ["none", "all", "", "colors", "opacity", "shadow", "transform", vt]
      }],
      /**
       * Transition Duration
       * @see https://tailwindcss.com/docs/transition-duration
       */
      duration: [{
        duration: d()
      }],
      /**
       * Transition Timing Function
       * @see https://tailwindcss.com/docs/transition-timing-function
       */
      ease: [{
        ease: ["linear", "in", "out", "in-out", vt]
      }],
      /**
       * Transition Delay
       * @see https://tailwindcss.com/docs/transition-delay
       */
      delay: [{
        delay: d()
      }],
      /**
       * Animation
       * @see https://tailwindcss.com/docs/animation
       */
      animate: [{
        animate: ["none", "spin", "ping", "pulse", "bounce", vt]
      }],
      // Transforms
      /**
       * Transform
       * @see https://tailwindcss.com/docs/transform
       */
      transform: [{
        transform: ["", "gpu", "none"]
      }],
      /**
       * Scale
       * @see https://tailwindcss.com/docs/scale
       */
      scale: [{
        scale: [S]
      }],
      /**
       * Scale X
       * @see https://tailwindcss.com/docs/scale
       */
      "scale-x": [{
        "scale-x": [S]
      }],
      /**
       * Scale Y
       * @see https://tailwindcss.com/docs/scale
       */
      "scale-y": [{
        "scale-y": [S]
      }],
      /**
       * Rotate
       * @see https://tailwindcss.com/docs/rotate
       */
      rotate: [{
        rotate: [Um, vt]
      }],
      /**
       * Translate X
       * @see https://tailwindcss.com/docs/translate
       */
      "translate-x": [{
        "translate-x": [Q]
      }],
      /**
       * Translate Y
       * @see https://tailwindcss.com/docs/translate
       */
      "translate-y": [{
        "translate-y": [Q]
      }],
      /**
       * Skew X
       * @see https://tailwindcss.com/docs/skew
       */
      "skew-x": [{
        "skew-x": [U]
      }],
      /**
       * Skew Y
       * @see https://tailwindcss.com/docs/skew
       */
      "skew-y": [{
        "skew-y": [U]
      }],
      /**
       * Transform Origin
       * @see https://tailwindcss.com/docs/transform-origin
       */
      "transform-origin": [{
        origin: ["center", "top", "top-right", "right", "bottom-right", "bottom", "bottom-left", "left", "top-left", vt]
      }],
      // Interactivity
      /**
       * Accent Color
       * @see https://tailwindcss.com/docs/accent-color
       */
      accent: [{
        accent: ["auto", e]
      }],
      /**
       * Appearance
       * @see https://tailwindcss.com/docs/appearance
       */
      appearance: [{
        appearance: ["none", "auto"]
      }],
      /**
       * Cursor
       * @see https://tailwindcss.com/docs/cursor
       */
      cursor: [{
        cursor: ["auto", "default", "pointer", "wait", "text", "move", "help", "not-allowed", "none", "context-menu", "progress", "cell", "crosshair", "vertical-text", "alias", "copy", "no-drop", "grab", "grabbing", "all-scroll", "col-resize", "row-resize", "n-resize", "e-resize", "s-resize", "w-resize", "ne-resize", "nw-resize", "se-resize", "sw-resize", "ew-resize", "ns-resize", "nesw-resize", "nwse-resize", "zoom-in", "zoom-out", vt]
      }],
      /**
       * Caret Color
       * @see https://tailwindcss.com/docs/just-in-time-mode#caret-color-utilities
       */
      "caret-color": [{
        caret: [e]
      }],
      /**
       * Pointer Events
       * @see https://tailwindcss.com/docs/pointer-events
       */
      "pointer-events": [{
        "pointer-events": ["none", "auto"]
      }],
      /**
       * Resize
       * @see https://tailwindcss.com/docs/resize
       */
      resize: [{
        resize: ["none", "y", "x", ""]
      }],
      /**
       * Scroll Behavior
       * @see https://tailwindcss.com/docs/scroll-behavior
       */
      "scroll-behavior": [{
        scroll: ["auto", "smooth"]
      }],
      /**
       * Scroll Margin
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-m": [{
        "scroll-m": I()
      }],
      /**
       * Scroll Margin X
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mx": [{
        "scroll-mx": I()
      }],
      /**
       * Scroll Margin Y
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-my": [{
        "scroll-my": I()
      }],
      /**
       * Scroll Margin Start
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-ms": [{
        "scroll-ms": I()
      }],
      /**
       * Scroll Margin End
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-me": [{
        "scroll-me": I()
      }],
      /**
       * Scroll Margin Top
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mt": [{
        "scroll-mt": I()
      }],
      /**
       * Scroll Margin Right
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mr": [{
        "scroll-mr": I()
      }],
      /**
       * Scroll Margin Bottom
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mb": [{
        "scroll-mb": I()
      }],
      /**
       * Scroll Margin Left
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-ml": [{
        "scroll-ml": I()
      }],
      /**
       * Scroll Padding
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-p": [{
        "scroll-p": I()
      }],
      /**
       * Scroll Padding X
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-px": [{
        "scroll-px": I()
      }],
      /**
       * Scroll Padding Y
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-py": [{
        "scroll-py": I()
      }],
      /**
       * Scroll Padding Start
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-ps": [{
        "scroll-ps": I()
      }],
      /**
       * Scroll Padding End
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pe": [{
        "scroll-pe": I()
      }],
      /**
       * Scroll Padding Top
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pt": [{
        "scroll-pt": I()
      }],
      /**
       * Scroll Padding Right
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pr": [{
        "scroll-pr": I()
      }],
      /**
       * Scroll Padding Bottom
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pb": [{
        "scroll-pb": I()
      }],
      /**
       * Scroll Padding Left
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pl": [{
        "scroll-pl": I()
      }],
      /**
       * Scroll Snap Align
       * @see https://tailwindcss.com/docs/scroll-snap-align
       */
      "snap-align": [{
        snap: ["start", "end", "center", "align-none"]
      }],
      /**
       * Scroll Snap Stop
       * @see https://tailwindcss.com/docs/scroll-snap-stop
       */
      "snap-stop": [{
        snap: ["normal", "always"]
      }],
      /**
       * Scroll Snap Type
       * @see https://tailwindcss.com/docs/scroll-snap-type
       */
      "snap-type": [{
        snap: ["none", "x", "y", "both"]
      }],
      /**
       * Scroll Snap Type Strictness
       * @see https://tailwindcss.com/docs/scroll-snap-type
       */
      "snap-strictness": [{
        snap: ["mandatory", "proximity"]
      }],
      /**
       * Touch Action
       * @see https://tailwindcss.com/docs/touch-action
       */
      touch: [{
        touch: ["auto", "none", "manipulation"]
      }],
      /**
       * Touch Action X
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-x": [{
        "touch-pan": ["x", "left", "right"]
      }],
      /**
       * Touch Action Y
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-y": [{
        "touch-pan": ["y", "up", "down"]
      }],
      /**
       * Touch Action Pinch Zoom
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-pz": ["touch-pinch-zoom"],
      /**
       * User Select
       * @see https://tailwindcss.com/docs/user-select
       */
      select: [{
        select: ["none", "text", "all", "auto"]
      }],
      /**
       * Will Change
       * @see https://tailwindcss.com/docs/will-change
       */
      "will-change": [{
        "will-change": ["auto", "scroll", "contents", "transform", vt]
      }],
      // SVG
      /**
       * Fill
       * @see https://tailwindcss.com/docs/fill
       */
      fill: [{
        fill: [e, "none"]
      }],
      /**
       * Stroke Width
       * @see https://tailwindcss.com/docs/stroke-width
       */
      "stroke-w": [{
        stroke: [ei, fl, n$]
      }],
      /**
       * Stroke
       * @see https://tailwindcss.com/docs/stroke
       */
      stroke: [{
        stroke: [e, "none"]
      }],
      // Accessibility
      /**
       * Screen Readers
       * @see https://tailwindcss.com/docs/screen-readers
       */
      sr: ["sr-only", "not-sr-only"],
      /**
       * Forced Color Adjust
       * @see https://tailwindcss.com/docs/forced-color-adjust
       */
      "forced-color-adjust": [{
        "forced-color-adjust": ["auto", "none"]
      }]
    },
    conflictingClassGroups: {
      overflow: ["overflow-x", "overflow-y"],
      overscroll: ["overscroll-x", "overscroll-y"],
      inset: ["inset-x", "inset-y", "start", "end", "top", "right", "bottom", "left"],
      "inset-x": ["right", "left"],
      "inset-y": ["top", "bottom"],
      flex: ["basis", "grow", "shrink"],
      gap: ["gap-x", "gap-y"],
      p: ["px", "py", "ps", "pe", "pt", "pr", "pb", "pl"],
      px: ["pr", "pl"],
      py: ["pt", "pb"],
      m: ["mx", "my", "ms", "me", "mt", "mr", "mb", "ml"],
      mx: ["mr", "ml"],
      my: ["mt", "mb"],
      size: ["w", "h"],
      "font-size": ["leading"],
      "fvn-normal": ["fvn-ordinal", "fvn-slashed-zero", "fvn-figure", "fvn-spacing", "fvn-fraction"],
      "fvn-ordinal": ["fvn-normal"],
      "fvn-slashed-zero": ["fvn-normal"],
      "fvn-figure": ["fvn-normal"],
      "fvn-spacing": ["fvn-normal"],
      "fvn-fraction": ["fvn-normal"],
      "line-clamp": ["display", "overflow"],
      rounded: ["rounded-s", "rounded-e", "rounded-t", "rounded-r", "rounded-b", "rounded-l", "rounded-ss", "rounded-se", "rounded-ee", "rounded-es", "rounded-tl", "rounded-tr", "rounded-br", "rounded-bl"],
      "rounded-s": ["rounded-ss", "rounded-es"],
      "rounded-e": ["rounded-se", "rounded-ee"],
      "rounded-t": ["rounded-tl", "rounded-tr"],
      "rounded-r": ["rounded-tr", "rounded-br"],
      "rounded-b": ["rounded-br", "rounded-bl"],
      "rounded-l": ["rounded-tl", "rounded-bl"],
      "border-spacing": ["border-spacing-x", "border-spacing-y"],
      "border-w": ["border-w-s", "border-w-e", "border-w-t", "border-w-r", "border-w-b", "border-w-l"],
      "border-w-x": ["border-w-r", "border-w-l"],
      "border-w-y": ["border-w-t", "border-w-b"],
      "border-color": ["border-color-s", "border-color-e", "border-color-t", "border-color-r", "border-color-b", "border-color-l"],
      "border-color-x": ["border-color-r", "border-color-l"],
      "border-color-y": ["border-color-t", "border-color-b"],
      "scroll-m": ["scroll-mx", "scroll-my", "scroll-ms", "scroll-me", "scroll-mt", "scroll-mr", "scroll-mb", "scroll-ml"],
      "scroll-mx": ["scroll-mr", "scroll-ml"],
      "scroll-my": ["scroll-mt", "scroll-mb"],
      "scroll-p": ["scroll-px", "scroll-py", "scroll-ps", "scroll-pe", "scroll-pt", "scroll-pr", "scroll-pb", "scroll-pl"],
      "scroll-px": ["scroll-pr", "scroll-pl"],
      "scroll-py": ["scroll-pt", "scroll-pb"],
      touch: ["touch-x", "touch-y", "touch-pz"],
      "touch-x": ["touch"],
      "touch-y": ["touch"],
      "touch-pz": ["touch"]
    },
    conflictingClassGroupModifiers: {
      "font-size": ["leading"]
    }
  };
}, Pz = /* @__PURE__ */ JMe(gRe);
/*!
 * Font Awesome Pro 6.7.2 by @fontawesome - https://fontawesome.com
 * License - https://fontawesome.com/license (Commercial License)
 * Copyright 2024 Fonticons, Inc.
 */
const Xu = {
  prefix: "fas",
  iconName: "spinner-third",
  icon: [512, 512, [], "f3f4", "M224 32c0-17.7 14.3-32 32-32C397.4 0 512 114.6 512 256c0 46.6-12.5 90.4-34.3 128c-8.8 15.3-28.4 20.5-43.7 11.7s-20.5-28.4-11.7-43.7c16.3-28.2 25.7-61 25.7-96c0-106-86-192-192-192c-17.7 0-32-14.3-32-32z"]
}, o$ = ({
  icon: e,
  iconClassName: t,
  children: r,
  className: n,
  htmlFor: o,
  variant: a = "primary",
  disabled: i,
  iconFlip: s = !1,
  loading: l,
  as: c = "button",
  href: u,
  target: f,
  ...p
}) => {
  function v(m) {
    switch (m) {
      case "secondary":
        return "i-am-a-unique-string bg-ui-controls text-base-fg border border-ui-controls-border hover:bg-ui-controls/80 focus-visible:outline-secondary";
      case "action":
        return "bg-ui-controls text-base-fg border border-ui-controls-border hover:bg-ui-controls/80 focus-visible:outline-action";
      case "destructive":
        return "bg-red hover:bg-red/90 text-white focus-visible:outline-red";
      case "ghost":
        return "bg-transparent text-base-fg border border-ui-controls-border/70 hover:bg-ui-controls/30 focus-visible:outline-primary-600";
      case "primary":
      default:
        return "bg-primary hover:bg-primary-400 text-white focus-visible:outline-primary-600";
    }
  }
  const x = Pz(
    i || l ? "opacity-50 pointer-events-none" : ""
  ), b = Pz(
    "w-fit text-sm font-medium rounded-lg px-3 py-2 border border-transparent shadow-sm focus-visible:outline focus-visible:outline-0 focus-visible:outline-offset-0 transition-all duration-150 flex gap-2 items-center justify-center active:scale-95 transform",
    v(a),
    n,
    x
  );
  return o ? /* @__PURE__ */ Pe("label", { className: b, htmlFor: o, style: p.style, children: [
    l && !s ? /* @__PURE__ */ q(Dn, { icon: Xu, className: "animate-spin" }) : /* @__PURE__ */ q(Vt, { children: e && !s ? /* @__PURE__ */ q(Dn, { icon: e, className: t }) : null }),
    r,
    l && s ? /* @__PURE__ */ q(Dn, { icon: Xu, className: "animate-spin" }) : /* @__PURE__ */ q(Vt, { children: e && s ? /* @__PURE__ */ q(Dn, { icon: e, className: t }) : null })
  ] }) : c === "link" && u ? /* @__PURE__ */ Pe(
    "a",
    {
      href: u,
      className: b,
      style: p.style,
      ...p,
      target: f,
      children: [
        l && !s ? /* @__PURE__ */ q(Dn, { icon: Xu, className: "animate-spin" }) : /* @__PURE__ */ q(Vt, { children: e && !s ? /* @__PURE__ */ q(Dn, { icon: e, className: t }) : null }),
        r,
        l && s ? /* @__PURE__ */ q(Dn, { icon: Xu, className: "animate-spin" }) : /* @__PURE__ */ q(Vt, { children: e && s ? /* @__PURE__ */ q(Dn, { icon: e, className: t }) : null })
      ]
    }
  ) : /* @__PURE__ */ Pe(
    "button",
    {
      className: b,
      disabled: i || l,
      ...p,
      htmlFor: o,
      children: [
        l && !s ? /* @__PURE__ */ q(Dn, { icon: Xu, className: "animate-spin" }) : /* @__PURE__ */ q(Vt, { children: e && !s ? /* @__PURE__ */ q(Dn, { icon: e, className: t }) : null }),
        r,
        l && s ? /* @__PURE__ */ q(Dn, { icon: Xu, className: "animate-spin" }) : /* @__PURE__ */ q(Vt, { children: e && s ? /* @__PURE__ */ q(Dn, { icon: e, className: t }) : null })
      ]
    }
  );
};
var xv = /* @__PURE__ */ ((e) => (e[e.ALL = 0] = "ALL", e[e.FEATURED = 1] = "FEATURED", e[e.MINE = 2] = "MINE", e[e.BOOKMARKED = 3] = "BOOKMARKED", e))(xv || {});
xv.FEATURED, xv.MINE, xv.BOOKMARKED;
/*!
 * Font Awesome Free 6.7.2 by @fontawesome - https://fontawesome.com
 * License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License)
 * Copyright 2024 Fonticons, Inc.
 */
function hRe(e, t, r) {
  return (t = yRe(t)) in e ? Object.defineProperty(e, t, {
    value: r,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : e[t] = r, e;
}
function Cz(e, t) {
  var r = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var n = Object.getOwnPropertySymbols(e);
    t && (n = n.filter(function(o) {
      return Object.getOwnPropertyDescriptor(e, o).enumerable;
    })), r.push.apply(r, n);
  }
  return r;
}
function $e(e) {
  for (var t = 1; t < arguments.length; t++) {
    var r = arguments[t] != null ? arguments[t] : {};
    t % 2 ? Cz(Object(r), !0).forEach(function(n) {
      hRe(e, n, r[n]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : Cz(Object(r)).forEach(function(n) {
      Object.defineProperty(e, n, Object.getOwnPropertyDescriptor(r, n));
    });
  }
  return e;
}
function bRe(e, t) {
  if (typeof e != "object" || !e) return e;
  var r = e[Symbol.toPrimitive];
  if (r !== void 0) {
    var n = r.call(e, t);
    if (typeof n != "object") return n;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (t === "string" ? String : Number)(e);
}
function yRe(e) {
  var t = bRe(e, "string");
  return typeof t == "symbol" ? t : t + "";
}
const Az = () => {
};
let C6 = {}, vJ = {}, xJ = null, wJ = {
  mark: Az,
  measure: Az
};
try {
  typeof window < "u" && (C6 = window), typeof document < "u" && (vJ = document), typeof MutationObserver < "u" && (xJ = MutationObserver), typeof performance < "u" && (wJ = performance);
} catch {
}
const {
  userAgent: _z = ""
} = C6.navigator || {}, vc = C6, Gr = vJ, Nz = xJ, _y = wJ;
vc.document;
const qi = !!Gr.documentElement && !!Gr.head && typeof Gr.addEventListener == "function" && typeof Gr.createElement == "function", kJ = ~_z.indexOf("MSIE") || ~_z.indexOf("Trident/");
var vRe = /fa(s|r|l|t|d|dr|dl|dt|b|k|kd|ss|sr|sl|st|sds|sdr|sdl|sdt)?[\-\ ]/, xRe = /Font ?Awesome ?([56 ]*)(Solid|Regular|Light|Thin|Duotone|Brands|Free|Pro|Sharp Duotone|Sharp|Kit)?.*/i, $J = {
  classic: {
    fa: "solid",
    fas: "solid",
    "fa-solid": "solid",
    far: "regular",
    "fa-regular": "regular",
    fal: "light",
    "fa-light": "light",
    fat: "thin",
    "fa-thin": "thin",
    fab: "brands",
    "fa-brands": "brands"
  },
  duotone: {
    fa: "solid",
    fad: "solid",
    "fa-solid": "solid",
    "fa-duotone": "solid",
    fadr: "regular",
    "fa-regular": "regular",
    fadl: "light",
    "fa-light": "light",
    fadt: "thin",
    "fa-thin": "thin"
  },
  sharp: {
    fa: "solid",
    fass: "solid",
    "fa-solid": "solid",
    fasr: "regular",
    "fa-regular": "regular",
    fasl: "light",
    "fa-light": "light",
    fast: "thin",
    "fa-thin": "thin"
  },
  "sharp-duotone": {
    fa: "solid",
    fasds: "solid",
    "fa-solid": "solid",
    fasdr: "regular",
    "fa-regular": "regular",
    fasdl: "light",
    "fa-light": "light",
    fasdt: "thin",
    "fa-thin": "thin"
  }
}, wRe = {
  GROUP: "duotone-group",
  PRIMARY: "primary",
  SECONDARY: "secondary"
}, OJ = ["fa-classic", "fa-duotone", "fa-sharp", "fa-sharp-duotone"], wn = "classic", wx = "duotone", kRe = "sharp", $Re = "sharp-duotone", EJ = [wn, wx, kRe, $Re], ORe = {
  classic: {
    900: "fas",
    400: "far",
    normal: "far",
    300: "fal",
    100: "fat"
  },
  duotone: {
    900: "fad",
    400: "fadr",
    300: "fadl",
    100: "fadt"
  },
  sharp: {
    900: "fass",
    400: "fasr",
    300: "fasl",
    100: "fast"
  },
  "sharp-duotone": {
    900: "fasds",
    400: "fasdr",
    300: "fasdl",
    100: "fasdt"
  }
}, ERe = {
  "Font Awesome 6 Free": {
    900: "fas",
    400: "far"
  },
  "Font Awesome 6 Pro": {
    900: "fas",
    400: "far",
    normal: "far",
    300: "fal",
    100: "fat"
  },
  "Font Awesome 6 Brands": {
    400: "fab",
    normal: "fab"
  },
  "Font Awesome 6 Duotone": {
    900: "fad",
    400: "fadr",
    normal: "fadr",
    300: "fadl",
    100: "fadt"
  },
  "Font Awesome 6 Sharp": {
    900: "fass",
    400: "fasr",
    normal: "fasr",
    300: "fasl",
    100: "fast"
  },
  "Font Awesome 6 Sharp Duotone": {
    900: "fasds",
    400: "fasdr",
    normal: "fasdr",
    300: "fasdl",
    100: "fasdt"
  }
}, SRe = /* @__PURE__ */ new Map([["classic", {
  defaultShortPrefixId: "fas",
  defaultStyleId: "solid",
  styleIds: ["solid", "regular", "light", "thin", "brands"],
  futureStyleIds: [],
  defaultFontWeight: 900
}], ["sharp", {
  defaultShortPrefixId: "fass",
  defaultStyleId: "solid",
  styleIds: ["solid", "regular", "light", "thin"],
  futureStyleIds: [],
  defaultFontWeight: 900
}], ["duotone", {
  defaultShortPrefixId: "fad",
  defaultStyleId: "solid",
  styleIds: ["solid", "regular", "light", "thin"],
  futureStyleIds: [],
  defaultFontWeight: 900
}], ["sharp-duotone", {
  defaultShortPrefixId: "fasds",
  defaultStyleId: "solid",
  styleIds: ["solid", "regular", "light", "thin"],
  futureStyleIds: [],
  defaultFontWeight: 900
}]]), PRe = {
  classic: {
    solid: "fas",
    regular: "far",
    light: "fal",
    thin: "fat",
    brands: "fab"
  },
  duotone: {
    solid: "fad",
    regular: "fadr",
    light: "fadl",
    thin: "fadt"
  },
  sharp: {
    solid: "fass",
    regular: "fasr",
    light: "fasl",
    thin: "fast"
  },
  "sharp-duotone": {
    solid: "fasds",
    regular: "fasdr",
    light: "fasdl",
    thin: "fasdt"
  }
}, CRe = ["fak", "fa-kit", "fakd", "fa-kit-duotone"], jz = {
  kit: {
    fak: "kit",
    "fa-kit": "kit"
  },
  "kit-duotone": {
    fakd: "kit-duotone",
    "fa-kit-duotone": "kit-duotone"
  }
}, ARe = ["kit"], _Re = {
  kit: {
    "fa-kit": "fak"
  }
}, NRe = ["fak", "fakd"], jRe = {
  kit: {
    fak: "fa-kit"
  }
}, Iz = {
  kit: {
    kit: "fak"
  },
  "kit-duotone": {
    "kit-duotone": "fakd"
  }
}, Ny = {
  GROUP: "duotone-group",
  SWAP_OPACITY: "swap-opacity",
  PRIMARY: "primary",
  SECONDARY: "secondary"
}, IRe = ["fa-classic", "fa-duotone", "fa-sharp", "fa-sharp-duotone"], TRe = ["fak", "fa-kit", "fakd", "fa-kit-duotone"], MRe = {
  "Font Awesome Kit": {
    400: "fak",
    normal: "fak"
  },
  "Font Awesome Kit Duotone": {
    400: "fakd",
    normal: "fakd"
  }
}, RRe = {
  classic: {
    "fa-brands": "fab",
    "fa-duotone": "fad",
    "fa-light": "fal",
    "fa-regular": "far",
    "fa-solid": "fas",
    "fa-thin": "fat"
  },
  duotone: {
    "fa-regular": "fadr",
    "fa-light": "fadl",
    "fa-thin": "fadt"
  },
  sharp: {
    "fa-solid": "fass",
    "fa-regular": "fasr",
    "fa-light": "fasl",
    "fa-thin": "fast"
  },
  "sharp-duotone": {
    "fa-solid": "fasds",
    "fa-regular": "fasdr",
    "fa-light": "fasdl",
    "fa-thin": "fasdt"
  }
}, zRe = {
  classic: ["fas", "far", "fal", "fat", "fad"],
  duotone: ["fadr", "fadl", "fadt"],
  sharp: ["fass", "fasr", "fasl", "fast"],
  "sharp-duotone": ["fasds", "fasdr", "fasdl", "fasdt"]
}, oE = {
  classic: {
    fab: "fa-brands",
    fad: "fa-duotone",
    fal: "fa-light",
    far: "fa-regular",
    fas: "fa-solid",
    fat: "fa-thin"
  },
  duotone: {
    fadr: "fa-regular",
    fadl: "fa-light",
    fadt: "fa-thin"
  },
  sharp: {
    fass: "fa-solid",
    fasr: "fa-regular",
    fasl: "fa-light",
    fast: "fa-thin"
  },
  "sharp-duotone": {
    fasds: "fa-solid",
    fasdr: "fa-regular",
    fasdl: "fa-light",
    fasdt: "fa-thin"
  }
}, FRe = ["fa-solid", "fa-regular", "fa-light", "fa-thin", "fa-duotone", "fa-brands"], aE = ["fa", "fas", "far", "fal", "fat", "fad", "fadr", "fadl", "fadt", "fab", "fass", "fasr", "fasl", "fast", "fasds", "fasdr", "fasdl", "fasdt", ...IRe, ...FRe], DRe = ["solid", "regular", "light", "thin", "duotone", "brands"], SJ = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], LRe = SJ.concat([11, 12, 13, 14, 15, 16, 17, 18, 19, 20]), VRe = [...Object.keys(zRe), ...DRe, "2xs", "xs", "sm", "lg", "xl", "2xl", "beat", "border", "fade", "beat-fade", "bounce", "flip-both", "flip-horizontal", "flip-vertical", "flip", "fw", "inverse", "layers-counter", "layers-text", "layers", "li", "pull-left", "pull-right", "pulse", "rotate-180", "rotate-270", "rotate-90", "rotate-by", "shake", "spin-pulse", "spin-reverse", "spin", "stack-1x", "stack-2x", "stack", "ul", Ny.GROUP, Ny.SWAP_OPACITY, Ny.PRIMARY, Ny.SECONDARY].concat(SJ.map((e) => "".concat(e, "x"))).concat(LRe.map((e) => "w-".concat(e))), WRe = {
  "Font Awesome 5 Free": {
    900: "fas",
    400: "far"
  },
  "Font Awesome 5 Pro": {
    900: "fas",
    400: "far",
    normal: "far",
    300: "fal"
  },
  "Font Awesome 5 Brands": {
    400: "fab",
    normal: "fab"
  },
  "Font Awesome 5 Duotone": {
    900: "fad"
  }
};
const ji = "___FONT_AWESOME___", iE = 16, PJ = "fa", CJ = "svg-inline--fa", _u = "data-fa-i2svg", sE = "data-fa-pseudo-element", URe = "data-fa-pseudo-element-pending", A6 = "data-prefix", _6 = "data-icon", Tz = "fontawesome-i2svg", YRe = "async", HRe = ["HTML", "HEAD", "STYLE", "SCRIPT"], AJ = (() => {
  try {
    return process.env.NODE_ENV === "production";
  } catch {
    return !1;
  }
})();
function Ob(e) {
  return new Proxy(e, {
    get(t, r) {
      return r in t ? t[r] : t[wn];
    }
  });
}
const _J = $e({}, $J);
_J[wn] = $e($e($e($e({}, {
  "fa-duotone": "duotone"
}), $J[wn]), jz.kit), jz["kit-duotone"]);
const GRe = Ob(_J), lE = $e({}, PRe);
lE[wn] = $e($e($e($e({}, {
  duotone: "fad"
}), lE[wn]), Iz.kit), Iz["kit-duotone"]);
const Mz = Ob(lE), cE = $e({}, oE);
cE[wn] = $e($e({}, cE[wn]), jRe.kit);
const N6 = Ob(cE), uE = $e({}, RRe);
uE[wn] = $e($e({}, uE[wn]), _Re.kit);
Ob(uE);
const qRe = vRe, NJ = "fa-layers-text", BRe = xRe, XRe = $e({}, ORe);
Ob(XRe);
const KRe = ["class", "data-prefix", "data-icon", "data-fa-transform", "data-fa-mask"], a$ = wRe, JRe = [...ARe, ...VRe], Ug = vc.FontAwesomeConfig || {};
function QRe(e) {
  var t = Gr.querySelector("script[" + e + "]");
  if (t)
    return t.getAttribute(e);
}
function ZRe(e) {
  return e === "" ? !0 : e === "false" ? !1 : e === "true" ? !0 : e;
}
Gr && typeof Gr.querySelector == "function" && [["data-family-prefix", "familyPrefix"], ["data-css-prefix", "cssPrefix"], ["data-family-default", "familyDefault"], ["data-style-default", "styleDefault"], ["data-replacement-class", "replacementClass"], ["data-auto-replace-svg", "autoReplaceSvg"], ["data-auto-add-css", "autoAddCss"], ["data-auto-a11y", "autoA11y"], ["data-search-pseudo-elements", "searchPseudoElements"], ["data-observe-mutations", "observeMutations"], ["data-mutate-approach", "mutateApproach"], ["data-keep-original-source", "keepOriginalSource"], ["data-measure-performance", "measurePerformance"], ["data-show-missing-icons", "showMissingIcons"]].forEach((e) => {
  let [t, r] = e;
  const n = ZRe(QRe(t));
  n != null && (Ug[r] = n);
});
const jJ = {
  styleDefault: "solid",
  familyDefault: wn,
  cssPrefix: PJ,
  replacementClass: CJ,
  autoReplaceSvg: !0,
  autoAddCss: !0,
  autoA11y: !0,
  searchPseudoElements: !1,
  observeMutations: !0,
  mutateApproach: "async",
  keepOriginalSource: !0,
  measurePerformance: !1,
  showMissingIcons: !0
};
Ug.familyPrefix && (Ug.cssPrefix = Ug.familyPrefix);
const Ed = $e($e({}, jJ), Ug);
Ed.autoReplaceSvg || (Ed.observeMutations = !1);
const Xe = {};
Object.keys(jJ).forEach((e) => {
  Object.defineProperty(Xe, e, {
    enumerable: !0,
    set: function(t) {
      Ed[e] = t, Yg.forEach((r) => r(Xe));
    },
    get: function() {
      return Ed[e];
    }
  });
});
Object.defineProperty(Xe, "familyPrefix", {
  enumerable: !0,
  set: function(e) {
    Ed.cssPrefix = e, Yg.forEach((t) => t(Xe));
  },
  get: function() {
    return Ed.cssPrefix;
  }
});
vc.FontAwesomeConfig = Xe;
const Yg = [];
function eze(e) {
  return Yg.push(e), () => {
    Yg.splice(Yg.indexOf(e), 1);
  };
}
const pl = iE, Sa = {
  size: 16,
  x: 0,
  y: 0,
  rotate: 0,
  flipX: !1,
  flipY: !1
};
function tze(e) {
  if (!e || !qi)
    return;
  const t = Gr.createElement("style");
  t.setAttribute("type", "text/css"), t.innerHTML = e;
  const r = Gr.head.childNodes;
  let n = null;
  for (let o = r.length - 1; o > -1; o--) {
    const a = r[o], i = (a.tagName || "").toUpperCase();
    ["STYLE", "LINK"].indexOf(i) > -1 && (n = a);
  }
  return Gr.head.insertBefore(t, n), e;
}
const rze = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
function Wh() {
  let e = 12, t = "";
  for (; e-- > 0; )
    t += rze[Math.random() * 62 | 0];
  return t;
}
function op(e) {
  const t = [];
  for (let r = (e || []).length >>> 0; r--; )
    t[r] = e[r];
  return t;
}
function j6(e) {
  return e.classList ? op(e.classList) : (e.getAttribute("class") || "").split(" ").filter((t) => t);
}
function IJ(e) {
  return "".concat(e).replace(/&/g, "&amp;").replace(/"/g, "&quot;").replace(/'/g, "&#39;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
}
function nze(e) {
  return Object.keys(e || {}).reduce((t, r) => t + "".concat(r, '="').concat(IJ(e[r]), '" '), "").trim();
}
function kx(e) {
  return Object.keys(e || {}).reduce((t, r) => t + "".concat(r, ": ").concat(e[r].trim(), ";"), "");
}
function I6(e) {
  return e.size !== Sa.size || e.x !== Sa.x || e.y !== Sa.y || e.rotate !== Sa.rotate || e.flipX || e.flipY;
}
function oze(e) {
  let {
    transform: t,
    containerWidth: r,
    iconWidth: n
  } = e;
  const o = {
    transform: "translate(".concat(r / 2, " 256)")
  }, a = "translate(".concat(t.x * 32, ", ").concat(t.y * 32, ") "), i = "scale(".concat(t.size / 16 * (t.flipX ? -1 : 1), ", ").concat(t.size / 16 * (t.flipY ? -1 : 1), ") "), s = "rotate(".concat(t.rotate, " 0 0)"), l = {
    transform: "".concat(a, " ").concat(i, " ").concat(s)
  }, c = {
    transform: "translate(".concat(n / 2 * -1, " -256)")
  };
  return {
    outer: o,
    inner: l,
    path: c
  };
}
function aze(e) {
  let {
    transform: t,
    width: r = iE,
    height: n = iE,
    startCentered: o = !1
  } = e, a = "";
  return o && kJ ? a += "translate(".concat(t.x / pl - r / 2, "em, ").concat(t.y / pl - n / 2, "em) ") : o ? a += "translate(calc(-50% + ".concat(t.x / pl, "em), calc(-50% + ").concat(t.y / pl, "em)) ") : a += "translate(".concat(t.x / pl, "em, ").concat(t.y / pl, "em) "), a += "scale(".concat(t.size / pl * (t.flipX ? -1 : 1), ", ").concat(t.size / pl * (t.flipY ? -1 : 1), ") "), a += "rotate(".concat(t.rotate, "deg) "), a;
}
var ize = `:root, :host {
  --fa-font-solid: normal 900 1em/1 "Font Awesome 6 Free";
  --fa-font-regular: normal 400 1em/1 "Font Awesome 6 Free";
  --fa-font-light: normal 300 1em/1 "Font Awesome 6 Pro";
  --fa-font-thin: normal 100 1em/1 "Font Awesome 6 Pro";
  --fa-font-duotone: normal 900 1em/1 "Font Awesome 6 Duotone";
  --fa-font-duotone-regular: normal 400 1em/1 "Font Awesome 6 Duotone";
  --fa-font-duotone-light: normal 300 1em/1 "Font Awesome 6 Duotone";
  --fa-font-duotone-thin: normal 100 1em/1 "Font Awesome 6 Duotone";
  --fa-font-brands: normal 400 1em/1 "Font Awesome 6 Brands";
  --fa-font-sharp-solid: normal 900 1em/1 "Font Awesome 6 Sharp";
  --fa-font-sharp-regular: normal 400 1em/1 "Font Awesome 6 Sharp";
  --fa-font-sharp-light: normal 300 1em/1 "Font Awesome 6 Sharp";
  --fa-font-sharp-thin: normal 100 1em/1 "Font Awesome 6 Sharp";
  --fa-font-sharp-duotone-solid: normal 900 1em/1 "Font Awesome 6 Sharp Duotone";
  --fa-font-sharp-duotone-regular: normal 400 1em/1 "Font Awesome 6 Sharp Duotone";
  --fa-font-sharp-duotone-light: normal 300 1em/1 "Font Awesome 6 Sharp Duotone";
  --fa-font-sharp-duotone-thin: normal 100 1em/1 "Font Awesome 6 Sharp Duotone";
}

svg:not(:root).svg-inline--fa, svg:not(:host).svg-inline--fa {
  overflow: visible;
  box-sizing: content-box;
}

.svg-inline--fa {
  display: var(--fa-display, inline-block);
  height: 1em;
  overflow: visible;
  vertical-align: -0.125em;
}
.svg-inline--fa.fa-2xs {
  vertical-align: 0.1em;
}
.svg-inline--fa.fa-xs {
  vertical-align: 0em;
}
.svg-inline--fa.fa-sm {
  vertical-align: -0.0714285705em;
}
.svg-inline--fa.fa-lg {
  vertical-align: -0.2em;
}
.svg-inline--fa.fa-xl {
  vertical-align: -0.25em;
}
.svg-inline--fa.fa-2xl {
  vertical-align: -0.3125em;
}
.svg-inline--fa.fa-pull-left {
  margin-right: var(--fa-pull-margin, 0.3em);
  width: auto;
}
.svg-inline--fa.fa-pull-right {
  margin-left: var(--fa-pull-margin, 0.3em);
  width: auto;
}
.svg-inline--fa.fa-li {
  width: var(--fa-li-width, 2em);
  top: 0.25em;
}
.svg-inline--fa.fa-fw {
  width: var(--fa-fw-width, 1.25em);
}

.fa-layers svg.svg-inline--fa {
  bottom: 0;
  left: 0;
  margin: auto;
  position: absolute;
  right: 0;
  top: 0;
}

.fa-layers-counter, .fa-layers-text {
  display: inline-block;
  position: absolute;
  text-align: center;
}

.fa-layers {
  display: inline-block;
  height: 1em;
  position: relative;
  text-align: center;
  vertical-align: -0.125em;
  width: 1em;
}
.fa-layers svg.svg-inline--fa {
  transform-origin: center center;
}

.fa-layers-text {
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  transform-origin: center center;
}

.fa-layers-counter {
  background-color: var(--fa-counter-background-color, #ff253a);
  border-radius: var(--fa-counter-border-radius, 1em);
  box-sizing: border-box;
  color: var(--fa-inverse, #fff);
  line-height: var(--fa-counter-line-height, 1);
  max-width: var(--fa-counter-max-width, 5em);
  min-width: var(--fa-counter-min-width, 1.5em);
  overflow: hidden;
  padding: var(--fa-counter-padding, 0.25em 0.5em);
  right: var(--fa-right, 0);
  text-overflow: ellipsis;
  top: var(--fa-top, 0);
  transform: scale(var(--fa-counter-scale, 0.25));
  transform-origin: top right;
}

.fa-layers-bottom-right {
  bottom: var(--fa-bottom, 0);
  right: var(--fa-right, 0);
  top: auto;
  transform: scale(var(--fa-layers-scale, 0.25));
  transform-origin: bottom right;
}

.fa-layers-bottom-left {
  bottom: var(--fa-bottom, 0);
  left: var(--fa-left, 0);
  right: auto;
  top: auto;
  transform: scale(var(--fa-layers-scale, 0.25));
  transform-origin: bottom left;
}

.fa-layers-top-right {
  top: var(--fa-top, 0);
  right: var(--fa-right, 0);
  transform: scale(var(--fa-layers-scale, 0.25));
  transform-origin: top right;
}

.fa-layers-top-left {
  left: var(--fa-left, 0);
  right: auto;
  top: var(--fa-top, 0);
  transform: scale(var(--fa-layers-scale, 0.25));
  transform-origin: top left;
}

.fa-1x {
  font-size: 1em;
}

.fa-2x {
  font-size: 2em;
}

.fa-3x {
  font-size: 3em;
}

.fa-4x {
  font-size: 4em;
}

.fa-5x {
  font-size: 5em;
}

.fa-6x {
  font-size: 6em;
}

.fa-7x {
  font-size: 7em;
}

.fa-8x {
  font-size: 8em;
}

.fa-9x {
  font-size: 9em;
}

.fa-10x {
  font-size: 10em;
}

.fa-2xs {
  font-size: 0.625em;
  line-height: 0.1em;
  vertical-align: 0.225em;
}

.fa-xs {
  font-size: 0.75em;
  line-height: 0.0833333337em;
  vertical-align: 0.125em;
}

.fa-sm {
  font-size: 0.875em;
  line-height: 0.0714285718em;
  vertical-align: 0.0535714295em;
}

.fa-lg {
  font-size: 1.25em;
  line-height: 0.05em;
  vertical-align: -0.075em;
}

.fa-xl {
  font-size: 1.5em;
  line-height: 0.0416666682em;
  vertical-align: -0.125em;
}

.fa-2xl {
  font-size: 2em;
  line-height: 0.03125em;
  vertical-align: -0.1875em;
}

.fa-fw {
  text-align: center;
  width: 1.25em;
}

.fa-ul {
  list-style-type: none;
  margin-left: var(--fa-li-margin, 2.5em);
  padding-left: 0;
}
.fa-ul > li {
  position: relative;
}

.fa-li {
  left: calc(-1 * var(--fa-li-width, 2em));
  position: absolute;
  text-align: center;
  width: var(--fa-li-width, 2em);
  line-height: inherit;
}

.fa-border {
  border-color: var(--fa-border-color, #eee);
  border-radius: var(--fa-border-radius, 0.1em);
  border-style: var(--fa-border-style, solid);
  border-width: var(--fa-border-width, 0.08em);
  padding: var(--fa-border-padding, 0.2em 0.25em 0.15em);
}

.fa-pull-left {
  float: left;
  margin-right: var(--fa-pull-margin, 0.3em);
}

.fa-pull-right {
  float: right;
  margin-left: var(--fa-pull-margin, 0.3em);
}

.fa-beat {
  animation-name: fa-beat;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, ease-in-out);
}

.fa-bounce {
  animation-name: fa-bounce;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.28, 0.84, 0.42, 1));
}

.fa-fade {
  animation-name: fa-fade;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));
}

.fa-beat-fade {
  animation-name: fa-beat-fade;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));
}

.fa-flip {
  animation-name: fa-flip;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, ease-in-out);
}

.fa-shake {
  animation-name: fa-shake;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, linear);
}

.fa-spin {
  animation-name: fa-spin;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 2s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, linear);
}

.fa-spin-reverse {
  --fa-animation-direction: reverse;
}

.fa-pulse,
.fa-spin-pulse {
  animation-name: fa-spin;
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, steps(8));
}

@media (prefers-reduced-motion: reduce) {
  .fa-beat,
.fa-bounce,
.fa-fade,
.fa-beat-fade,
.fa-flip,
.fa-pulse,
.fa-shake,
.fa-spin,
.fa-spin-pulse {
    animation-delay: -1ms;
    animation-duration: 1ms;
    animation-iteration-count: 1;
    transition-delay: 0s;
    transition-duration: 0s;
  }
}
@keyframes fa-beat {
  0%, 90% {
    transform: scale(1);
  }
  45% {
    transform: scale(var(--fa-beat-scale, 1.25));
  }
}
@keyframes fa-bounce {
  0% {
    transform: scale(1, 1) translateY(0);
  }
  10% {
    transform: scale(var(--fa-bounce-start-scale-x, 1.1), var(--fa-bounce-start-scale-y, 0.9)) translateY(0);
  }
  30% {
    transform: scale(var(--fa-bounce-jump-scale-x, 0.9), var(--fa-bounce-jump-scale-y, 1.1)) translateY(var(--fa-bounce-height, -0.5em));
  }
  50% {
    transform: scale(var(--fa-bounce-land-scale-x, 1.05), var(--fa-bounce-land-scale-y, 0.95)) translateY(0);
  }
  57% {
    transform: scale(1, 1) translateY(var(--fa-bounce-rebound, -0.125em));
  }
  64% {
    transform: scale(1, 1) translateY(0);
  }
  100% {
    transform: scale(1, 1) translateY(0);
  }
}
@keyframes fa-fade {
  50% {
    opacity: var(--fa-fade-opacity, 0.4);
  }
}
@keyframes fa-beat-fade {
  0%, 100% {
    opacity: var(--fa-beat-fade-opacity, 0.4);
    transform: scale(1);
  }
  50% {
    opacity: 1;
    transform: scale(var(--fa-beat-fade-scale, 1.125));
  }
}
@keyframes fa-flip {
  50% {
    transform: rotate3d(var(--fa-flip-x, 0), var(--fa-flip-y, 1), var(--fa-flip-z, 0), var(--fa-flip-angle, -180deg));
  }
}
@keyframes fa-shake {
  0% {
    transform: rotate(-15deg);
  }
  4% {
    transform: rotate(15deg);
  }
  8%, 24% {
    transform: rotate(-18deg);
  }
  12%, 28% {
    transform: rotate(18deg);
  }
  16% {
    transform: rotate(-22deg);
  }
  20% {
    transform: rotate(22deg);
  }
  32% {
    transform: rotate(-12deg);
  }
  36% {
    transform: rotate(12deg);
  }
  40%, 100% {
    transform: rotate(0deg);
  }
}
@keyframes fa-spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
.fa-rotate-90 {
  transform: rotate(90deg);
}

.fa-rotate-180 {
  transform: rotate(180deg);
}

.fa-rotate-270 {
  transform: rotate(270deg);
}

.fa-flip-horizontal {
  transform: scale(-1, 1);
}

.fa-flip-vertical {
  transform: scale(1, -1);
}

.fa-flip-both,
.fa-flip-horizontal.fa-flip-vertical {
  transform: scale(-1, -1);
}

.fa-rotate-by {
  transform: rotate(var(--fa-rotate-angle, 0));
}

.fa-stack {
  display: inline-block;
  vertical-align: middle;
  height: 2em;
  position: relative;
  width: 2.5em;
}

.fa-stack-1x,
.fa-stack-2x {
  bottom: 0;
  left: 0;
  margin: auto;
  position: absolute;
  right: 0;
  top: 0;
  z-index: var(--fa-stack-z-index, auto);
}

.svg-inline--fa.fa-stack-1x {
  height: 1em;
  width: 1.25em;
}
.svg-inline--fa.fa-stack-2x {
  height: 2em;
  width: 2.5em;
}

.fa-inverse {
  color: var(--fa-inverse, #fff);
}

.sr-only,
.fa-sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.sr-only-focusable:not(:focus),
.fa-sr-only-focusable:not(:focus) {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.svg-inline--fa .fa-primary {
  fill: var(--fa-primary-color, currentColor);
  opacity: var(--fa-primary-opacity, 1);
}

.svg-inline--fa .fa-secondary {
  fill: var(--fa-secondary-color, currentColor);
  opacity: var(--fa-secondary-opacity, 0.4);
}

.svg-inline--fa.fa-swap-opacity .fa-primary {
  opacity: var(--fa-secondary-opacity, 0.4);
}

.svg-inline--fa.fa-swap-opacity .fa-secondary {
  opacity: var(--fa-primary-opacity, 1);
}

.svg-inline--fa mask .fa-primary,
.svg-inline--fa mask .fa-secondary {
  fill: black;
}`;
function TJ() {
  const e = PJ, t = CJ, r = Xe.cssPrefix, n = Xe.replacementClass;
  let o = ize;
  if (r !== e || n !== t) {
    const a = new RegExp("\\.".concat(e, "\\-"), "g"), i = new RegExp("\\--".concat(e, "\\-"), "g"), s = new RegExp("\\.".concat(t), "g");
    o = o.replace(a, ".".concat(r, "-")).replace(i, "--".concat(r, "-")).replace(s, ".".concat(n));
  }
  return o;
}
let Rz = !1;
function i$() {
  Xe.autoAddCss && !Rz && (tze(TJ()), Rz = !0);
}
var sze = {
  mixout() {
    return {
      dom: {
        css: TJ,
        insertCss: i$
      }
    };
  },
  hooks() {
    return {
      beforeDOMElementCreation() {
        i$();
      },
      beforeI2svg() {
        i$();
      }
    };
  }
};
const Ii = vc || {};
Ii[ji] || (Ii[ji] = {});
Ii[ji].styles || (Ii[ji].styles = {});
Ii[ji].hooks || (Ii[ji].hooks = {});
Ii[ji].shims || (Ii[ji].shims = []);
var Pa = Ii[ji];
const MJ = [], RJ = function() {
  Gr.removeEventListener("DOMContentLoaded", RJ), E1 = 1, MJ.map((e) => e());
};
let E1 = !1;
qi && (E1 = (Gr.documentElement.doScroll ? /^loaded|^c/ : /^loaded|^i|^c/).test(Gr.readyState), E1 || Gr.addEventListener("DOMContentLoaded", RJ));
function lze(e) {
  qi && (E1 ? setTimeout(e, 0) : MJ.push(e));
}
function Eb(e) {
  const {
    tag: t,
    attributes: r = {},
    children: n = []
  } = e;
  return typeof e == "string" ? IJ(e) : "<".concat(t, " ").concat(nze(r), ">").concat(n.map(Eb).join(""), "</").concat(t, ">");
}
function zz(e, t, r) {
  if (e && e[t] && e[t][r])
    return {
      prefix: t,
      iconName: r,
      icon: e[t][r]
    };
}
var s$ = function(e, t, r, n) {
  var o = Object.keys(e), a = o.length, i = t, s, l, c;
  for (r === void 0 ? (s = 1, c = e[o[0]]) : (s = 0, c = r); s < a; s++)
    l = o[s], c = i(c, e[l], l, e);
  return c;
};
function cze(e) {
  const t = [];
  let r = 0;
  const n = e.length;
  for (; r < n; ) {
    const o = e.charCodeAt(r++);
    if (o >= 55296 && o <= 56319 && r < n) {
      const a = e.charCodeAt(r++);
      (a & 64512) == 56320 ? t.push(((o & 1023) << 10) + (a & 1023) + 65536) : (t.push(o), r--);
    } else
      t.push(o);
  }
  return t;
}
function zJ(e) {
  const t = cze(e);
  return t.length === 1 ? t[0].toString(16) : null;
}
function uze(e, t) {
  const r = e.length;
  let n = e.charCodeAt(t), o;
  return n >= 55296 && n <= 56319 && r > t + 1 && (o = e.charCodeAt(t + 1), o >= 56320 && o <= 57343) ? (n - 55296) * 1024 + o - 56320 + 65536 : n;
}
function Fz(e) {
  return Object.keys(e).reduce((t, r) => {
    const n = e[r];
    return n.icon ? t[n.iconName] = n.icon : t[r] = n, t;
  }, {});
}
function fE(e, t) {
  let r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
  const {
    skipHooks: n = !1
  } = r, o = Fz(t);
  typeof Pa.hooks.addPack == "function" && !n ? Pa.hooks.addPack(e, Fz(t)) : Pa.styles[e] = $e($e({}, Pa.styles[e] || {}), o), e === "fas" && fE("fa", t);
}
const {
  styles: Uh,
  shims: fze
} = Pa, FJ = Object.keys(N6), dze = FJ.reduce((e, t) => (e[t] = Object.keys(N6[t]), e), {});
let T6 = null, DJ = {}, LJ = {}, VJ = {}, WJ = {}, UJ = {};
function pze(e) {
  return ~JRe.indexOf(e);
}
function mze(e, t) {
  const r = t.split("-"), n = r[0], o = r.slice(1).join("-");
  return n === e && o !== "" && !pze(o) ? o : null;
}
const YJ = () => {
  const e = (n) => s$(Uh, (o, a, i) => (o[i] = s$(a, n, {}), o), {});
  DJ = e((n, o, a) => (o[3] && (n[o[3]] = a), o[2] && o[2].filter((i) => typeof i == "number").forEach((i) => {
    n[i.toString(16)] = a;
  }), n)), LJ = e((n, o, a) => (n[a] = a, o[2] && o[2].filter((i) => typeof i == "string").forEach((i) => {
    n[i] = a;
  }), n)), UJ = e((n, o, a) => {
    const i = o[2];
    return n[a] = a, i.forEach((s) => {
      n[s] = a;
    }), n;
  });
  const t = "far" in Uh || Xe.autoFetchSvg, r = s$(fze, (n, o) => {
    const a = o[0];
    let i = o[1];
    const s = o[2];
    return i === "far" && !t && (i = "fas"), typeof a == "string" && (n.names[a] = {
      prefix: i,
      iconName: s
    }), typeof a == "number" && (n.unicodes[a.toString(16)] = {
      prefix: i,
      iconName: s
    }), n;
  }, {
    names: {},
    unicodes: {}
  });
  VJ = r.names, WJ = r.unicodes, T6 = $x(Xe.styleDefault, {
    family: Xe.familyDefault
  });
};
eze((e) => {
  T6 = $x(e.styleDefault, {
    family: Xe.familyDefault
  });
});
YJ();
function M6(e, t) {
  return (DJ[e] || {})[t];
}
function gze(e, t) {
  return (LJ[e] || {})[t];
}
function Jc(e, t) {
  return (UJ[e] || {})[t];
}
function HJ(e) {
  return VJ[e] || {
    prefix: null,
    iconName: null
  };
}
function hze(e) {
  const t = WJ[e], r = M6("fas", e);
  return t || (r ? {
    prefix: "fas",
    iconName: r
  } : null) || {
    prefix: null,
    iconName: null
  };
}
function xc() {
  return T6;
}
const GJ = () => ({
  prefix: null,
  iconName: null,
  rest: []
});
function bze(e) {
  let t = wn;
  const r = FJ.reduce((n, o) => (n[o] = "".concat(Xe.cssPrefix, "-").concat(o), n), {});
  return EJ.forEach((n) => {
    (e.includes(r[n]) || e.some((o) => dze[n].includes(o))) && (t = n);
  }), t;
}
function $x(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  const {
    family: r = wn
  } = t, n = GRe[r][e];
  if (r === wx && !e)
    return "fad";
  const o = Mz[r][e] || Mz[r][n], a = e in Pa.styles ? e : null;
  return o || a || null;
}
function yze(e) {
  let t = [], r = null;
  return e.forEach((n) => {
    const o = mze(Xe.cssPrefix, n);
    o ? r = o : n && t.push(n);
  }), {
    iconName: r,
    rest: t
  };
}
function Dz(e) {
  return e.sort().filter((t, r, n) => n.indexOf(t) === r);
}
function Ox(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  const {
    skipLookups: r = !1
  } = t;
  let n = null;
  const o = aE.concat(TRe), a = Dz(e.filter((f) => o.includes(f))), i = Dz(e.filter((f) => !aE.includes(f))), s = a.filter((f) => (n = f, !OJ.includes(f))), [l = null] = s, c = bze(a), u = $e($e({}, yze(i)), {}, {
    prefix: $x(l, {
      family: c
    })
  });
  return $e($e($e({}, u), kze({
    values: e,
    family: c,
    styles: Uh,
    config: Xe,
    canonical: u,
    givenPrefix: n
  })), vze(r, n, u));
}
function vze(e, t, r) {
  let {
    prefix: n,
    iconName: o
  } = r;
  if (e || !n || !o)
    return {
      prefix: n,
      iconName: o
    };
  const a = t === "fa" ? HJ(o) : {}, i = Jc(n, o);
  return o = a.iconName || i || o, n = a.prefix || n, n === "far" && !Uh.far && Uh.fas && !Xe.autoFetchSvg && (n = "fas"), {
    prefix: n,
    iconName: o
  };
}
const xze = EJ.filter((e) => e !== wn || e !== wx), wze = Object.keys(oE).filter((e) => e !== wn).map((e) => Object.keys(oE[e])).flat();
function kze(e) {
  const {
    values: t,
    family: r,
    canonical: n,
    givenPrefix: o = "",
    styles: a = {},
    config: i = {}
  } = e, s = r === wx, l = t.includes("fa-duotone") || t.includes("fad"), c = i.familyDefault === "duotone", u = n.prefix === "fad" || n.prefix === "fa-duotone";
  if (!s && (l || c || u) && (n.prefix = "fad"), (t.includes("fa-brands") || t.includes("fab")) && (n.prefix = "fab"), !n.prefix && xze.includes(r) && (Object.keys(a).find((f) => wze.includes(f)) || i.autoFetchSvg)) {
    const f = SRe.get(r).defaultShortPrefixId;
    n.prefix = f, n.iconName = Jc(n.prefix, n.iconName) || n.iconName;
  }
  return (n.prefix === "fa" || o === "fa") && (n.prefix = xc() || "fas"), n;
}
class $ze {
  constructor() {
    this.definitions = {};
  }
  add() {
    for (var t = arguments.length, r = new Array(t), n = 0; n < t; n++)
      r[n] = arguments[n];
    const o = r.reduce(this._pullDefinitions, {});
    Object.keys(o).forEach((a) => {
      this.definitions[a] = $e($e({}, this.definitions[a] || {}), o[a]), fE(a, o[a]);
      const i = N6[wn][a];
      i && fE(i, o[a]), YJ();
    });
  }
  reset() {
    this.definitions = {};
  }
  _pullDefinitions(t, r) {
    const n = r.prefix && r.iconName && r.icon ? {
      0: r
    } : r;
    return Object.keys(n).map((o) => {
      const {
        prefix: a,
        iconName: i,
        icon: s
      } = n[o], l = s[2];
      t[a] || (t[a] = {}), l.length > 0 && l.forEach((c) => {
        typeof c == "string" && (t[a][c] = s);
      }), t[a][i] = s;
    }), t;
  }
}
let Lz = [], wf = {};
const od = {}, Oze = Object.keys(od);
function Eze(e, t) {
  let {
    mixoutsTo: r
  } = t;
  return Lz = e, wf = {}, Object.keys(od).forEach((n) => {
    Oze.indexOf(n) === -1 && delete od[n];
  }), Lz.forEach((n) => {
    const o = n.mixout ? n.mixout() : {};
    if (Object.keys(o).forEach((a) => {
      typeof o[a] == "function" && (r[a] = o[a]), typeof o[a] == "object" && Object.keys(o[a]).forEach((i) => {
        r[a] || (r[a] = {}), r[a][i] = o[a][i];
      });
    }), n.hooks) {
      const a = n.hooks();
      Object.keys(a).forEach((i) => {
        wf[i] || (wf[i] = []), wf[i].push(a[i]);
      });
    }
    n.provides && n.provides(od);
  }), r;
}
function dE(e, t) {
  for (var r = arguments.length, n = new Array(r > 2 ? r - 2 : 0), o = 2; o < r; o++)
    n[o - 2] = arguments[o];
  return (wf[e] || []).forEach((a) => {
    t = a.apply(null, [t, ...n]);
  }), t;
}
function Nu(e) {
  for (var t = arguments.length, r = new Array(t > 1 ? t - 1 : 0), n = 1; n < t; n++)
    r[n - 1] = arguments[n];
  (wf[e] || []).forEach((o) => {
    o.apply(null, r);
  });
}
function wc() {
  const e = arguments[0], t = Array.prototype.slice.call(arguments, 1);
  return od[e] ? od[e].apply(null, t) : void 0;
}
function pE(e) {
  e.prefix === "fa" && (e.prefix = "fas");
  let {
    iconName: t
  } = e;
  const r = e.prefix || xc();
  if (t)
    return t = Jc(r, t) || t, zz(qJ.definitions, r, t) || zz(Pa.styles, r, t);
}
const qJ = new $ze(), Sze = () => {
  Xe.autoReplaceSvg = !1, Xe.observeMutations = !1, Nu("noAuto");
}, Pze = {
  i2svg: function() {
    let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    return qi ? (Nu("beforeI2svg", e), wc("pseudoElements2svg", e), wc("i2svg", e)) : Promise.reject(new Error("Operation requires a DOM of some kind."));
  },
  watch: function() {
    let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    const {
      autoReplaceSvgRoot: t
    } = e;
    Xe.autoReplaceSvg === !1 && (Xe.autoReplaceSvg = !0), Xe.observeMutations = !0, lze(() => {
      Aze({
        autoReplaceSvgRoot: t
      }), Nu("watch", e);
    });
  }
}, Cze = {
  icon: (e) => {
    if (e === null)
      return null;
    if (typeof e == "object" && e.prefix && e.iconName)
      return {
        prefix: e.prefix,
        iconName: Jc(e.prefix, e.iconName) || e.iconName
      };
    if (Array.isArray(e) && e.length === 2) {
      const t = e[1].indexOf("fa-") === 0 ? e[1].slice(3) : e[1], r = $x(e[0]);
      return {
        prefix: r,
        iconName: Jc(r, t) || t
      };
    }
    if (typeof e == "string" && (e.indexOf("".concat(Xe.cssPrefix, "-")) > -1 || e.match(qRe))) {
      const t = Ox(e.split(" "), {
        skipLookups: !0
      });
      return {
        prefix: t.prefix || xc(),
        iconName: Jc(t.prefix, t.iconName) || t.iconName
      };
    }
    if (typeof e == "string") {
      const t = xc();
      return {
        prefix: t,
        iconName: Jc(t, e) || e
      };
    }
  }
}, io = {
  noAuto: Sze,
  config: Xe,
  dom: Pze,
  parse: Cze,
  library: qJ,
  findIconDefinition: pE,
  toHtml: Eb
}, Aze = function() {
  let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  const {
    autoReplaceSvgRoot: t = Gr
  } = e;
  (Object.keys(Pa.styles).length > 0 || Xe.autoFetchSvg) && qi && Xe.autoReplaceSvg && io.dom.i2svg({
    node: t
  });
};
function Ex(e, t) {
  return Object.defineProperty(e, "abstract", {
    get: t
  }), Object.defineProperty(e, "html", {
    get: function() {
      return e.abstract.map((r) => Eb(r));
    }
  }), Object.defineProperty(e, "node", {
    get: function() {
      if (!qi) return;
      const r = Gr.createElement("div");
      return r.innerHTML = e.html, r.children;
    }
  }), e;
}
function _ze(e) {
  let {
    children: t,
    main: r,
    mask: n,
    attributes: o,
    styles: a,
    transform: i
  } = e;
  if (I6(i) && r.found && !n.found) {
    const {
      width: s,
      height: l
    } = r, c = {
      x: s / l / 2,
      y: 0.5
    };
    o.style = kx($e($e({}, a), {}, {
      "transform-origin": "".concat(c.x + i.x / 16, "em ").concat(c.y + i.y / 16, "em")
    }));
  }
  return [{
    tag: "svg",
    attributes: o,
    children: t
  }];
}
function Nze(e) {
  let {
    prefix: t,
    iconName: r,
    children: n,
    attributes: o,
    symbol: a
  } = e;
  const i = a === !0 ? "".concat(t, "-").concat(Xe.cssPrefix, "-").concat(r) : a;
  return [{
    tag: "svg",
    attributes: {
      style: "display: none;"
    },
    children: [{
      tag: "symbol",
      attributes: $e($e({}, o), {}, {
        id: i
      }),
      children: n
    }]
  }];
}
function R6(e) {
  const {
    icons: {
      main: t,
      mask: r
    },
    prefix: n,
    iconName: o,
    transform: a,
    symbol: i,
    title: s,
    maskId: l,
    titleId: c,
    extra: u,
    watchable: f = !1
  } = e, {
    width: p,
    height: v
  } = r.found ? r : t, x = NRe.includes(n), b = [Xe.replacementClass, o ? "".concat(Xe.cssPrefix, "-").concat(o) : ""].filter((h) => u.classes.indexOf(h) === -1).filter((h) => h !== "" || !!h).concat(u.classes).join(" ");
  let m = {
    children: [],
    attributes: $e($e({}, u.attributes), {}, {
      "data-prefix": n,
      "data-icon": o,
      class: b,
      role: u.attributes.role || "img",
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 ".concat(p, " ").concat(v)
    })
  };
  const w = x && !~u.classes.indexOf("fa-fw") ? {
    width: "".concat(p / v * 16 * 0.0625, "em")
  } : {};
  f && (m.attributes[_u] = ""), s && (m.children.push({
    tag: "title",
    attributes: {
      id: m.attributes["aria-labelledby"] || "title-".concat(c || Wh())
    },
    children: [s]
  }), delete m.attributes.title);
  const $ = $e($e({}, m), {}, {
    prefix: n,
    iconName: o,
    main: t,
    mask: r,
    maskId: l,
    transform: a,
    symbol: i,
    styles: $e($e({}, w), u.styles)
  }), {
    children: E,
    attributes: S
  } = r.found && t.found ? wc("generateAbstractMask", $) || {
    children: [],
    attributes: {}
  } : wc("generateAbstractIcon", $) || {
    children: [],
    attributes: {}
  };
  return $.children = E, $.attributes = S, i ? Nze($) : _ze($);
}
function Vz(e) {
  const {
    content: t,
    width: r,
    height: n,
    transform: o,
    title: a,
    extra: i,
    watchable: s = !1
  } = e, l = $e($e($e({}, i.attributes), a ? {
    title: a
  } : {}), {}, {
    class: i.classes.join(" ")
  });
  s && (l[_u] = "");
  const c = $e({}, i.styles);
  I6(o) && (c.transform = aze({
    transform: o,
    startCentered: !0,
    width: r,
    height: n
  }), c["-webkit-transform"] = c.transform);
  const u = kx(c);
  u.length > 0 && (l.style = u);
  const f = [];
  return f.push({
    tag: "span",
    attributes: l,
    children: [t]
  }), a && f.push({
    tag: "span",
    attributes: {
      class: "sr-only"
    },
    children: [a]
  }), f;
}
function jze(e) {
  const {
    content: t,
    title: r,
    extra: n
  } = e, o = $e($e($e({}, n.attributes), r ? {
    title: r
  } : {}), {}, {
    class: n.classes.join(" ")
  }), a = kx(n.styles);
  a.length > 0 && (o.style = a);
  const i = [];
  return i.push({
    tag: "span",
    attributes: o,
    children: [t]
  }), r && i.push({
    tag: "span",
    attributes: {
      class: "sr-only"
    },
    children: [r]
  }), i;
}
const {
  styles: l$
} = Pa;
function mE(e) {
  const t = e[0], r = e[1], [n] = e.slice(4);
  let o = null;
  return Array.isArray(n) ? o = {
    tag: "g",
    attributes: {
      class: "".concat(Xe.cssPrefix, "-").concat(a$.GROUP)
    },
    children: [{
      tag: "path",
      attributes: {
        class: "".concat(Xe.cssPrefix, "-").concat(a$.SECONDARY),
        fill: "currentColor",
        d: n[0]
      }
    }, {
      tag: "path",
      attributes: {
        class: "".concat(Xe.cssPrefix, "-").concat(a$.PRIMARY),
        fill: "currentColor",
        d: n[1]
      }
    }]
  } : o = {
    tag: "path",
    attributes: {
      fill: "currentColor",
      d: n
    }
  }, {
    found: !0,
    width: t,
    height: r,
    icon: o
  };
}
const Ize = {
  found: !1,
  width: 512,
  height: 512
};
function Tze(e, t) {
  !AJ && !Xe.showMissingIcons && e && console.error('Icon with name "'.concat(e, '" and prefix "').concat(t, '" is missing.'));
}
function gE(e, t) {
  let r = t;
  return t === "fa" && Xe.styleDefault !== null && (t = xc()), new Promise((n, o) => {
    if (r === "fa") {
      const a = HJ(e) || {};
      e = a.iconName || e, t = a.prefix || t;
    }
    if (e && t && l$[t] && l$[t][e]) {
      const a = l$[t][e];
      return n(mE(a));
    }
    Tze(e, t), n($e($e({}, Ize), {}, {
      icon: Xe.showMissingIcons && e ? wc("missingIconAbstract") || {} : {}
    }));
  });
}
const Wz = () => {
}, hE = Xe.measurePerformance && _y && _y.mark && _y.measure ? _y : {
  mark: Wz,
  measure: Wz
}, cg = 'FA "6.7.2"', Mze = (e) => (hE.mark("".concat(cg, " ").concat(e, " begins")), () => BJ(e)), BJ = (e) => {
  hE.mark("".concat(cg, " ").concat(e, " ends")), hE.measure("".concat(cg, " ").concat(e), "".concat(cg, " ").concat(e, " begins"), "".concat(cg, " ").concat(e, " ends"));
};
var z6 = {
  begin: Mze,
  end: BJ
};
const wv = () => {
};
function Uz(e) {
  return typeof (e.getAttribute ? e.getAttribute(_u) : null) == "string";
}
function Rze(e) {
  const t = e.getAttribute ? e.getAttribute(A6) : null, r = e.getAttribute ? e.getAttribute(_6) : null;
  return t && r;
}
function zze(e) {
  return e && e.classList && e.classList.contains && e.classList.contains(Xe.replacementClass);
}
function Fze() {
  return Xe.autoReplaceSvg === !0 ? kv.replace : kv[Xe.autoReplaceSvg] || kv.replace;
}
function Dze(e) {
  return Gr.createElementNS("http://www.w3.org/2000/svg", e);
}
function Lze(e) {
  return Gr.createElement(e);
}
function XJ(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  const {
    ceFn: r = e.tag === "svg" ? Dze : Lze
  } = t;
  if (typeof e == "string")
    return Gr.createTextNode(e);
  const n = r(e.tag);
  return Object.keys(e.attributes || []).forEach(function(o) {
    n.setAttribute(o, e.attributes[o]);
  }), (e.children || []).forEach(function(o) {
    n.appendChild(XJ(o, {
      ceFn: r
    }));
  }), n;
}
function Vze(e) {
  let t = " ".concat(e.outerHTML, " ");
  return t = "".concat(t, "Font Awesome fontawesome.com "), t;
}
const kv = {
  replace: function(e) {
    const t = e[0];
    if (t.parentNode)
      if (e[1].forEach((r) => {
        t.parentNode.insertBefore(XJ(r), t);
      }), t.getAttribute(_u) === null && Xe.keepOriginalSource) {
        let r = Gr.createComment(Vze(t));
        t.parentNode.replaceChild(r, t);
      } else
        t.remove();
  },
  nest: function(e) {
    const t = e[0], r = e[1];
    if (~j6(t).indexOf(Xe.replacementClass))
      return kv.replace(e);
    const n = new RegExp("".concat(Xe.cssPrefix, "-.*"));
    if (delete r[0].attributes.id, r[0].attributes.class) {
      const a = r[0].attributes.class.split(" ").reduce((i, s) => (s === Xe.replacementClass || s.match(n) ? i.toSvg.push(s) : i.toNode.push(s), i), {
        toNode: [],
        toSvg: []
      });
      r[0].attributes.class = a.toSvg.join(" "), a.toNode.length === 0 ? t.removeAttribute("class") : t.setAttribute("class", a.toNode.join(" "));
    }
    const o = r.map((a) => Eb(a)).join(`
`);
    t.setAttribute(_u, ""), t.innerHTML = o;
  }
};
function Yz(e) {
  e();
}
function KJ(e, t) {
  const r = typeof t == "function" ? t : wv;
  if (e.length === 0)
    r();
  else {
    let n = Yz;
    Xe.mutateApproach === YRe && (n = vc.requestAnimationFrame || Yz), n(() => {
      const o = Fze(), a = z6.begin("mutate");
      e.map(o), a(), r();
    });
  }
}
let F6 = !1;
function JJ() {
  F6 = !0;
}
function bE() {
  F6 = !1;
}
let S1 = null;
function Hz(e) {
  if (!Nz || !Xe.observeMutations)
    return;
  const {
    treeCallback: t = wv,
    nodeCallback: r = wv,
    pseudoElementsCallback: n = wv,
    observeMutationsRoot: o = Gr
  } = e;
  S1 = new Nz((a) => {
    if (F6) return;
    const i = xc();
    op(a).forEach((s) => {
      if (s.type === "childList" && s.addedNodes.length > 0 && !Uz(s.addedNodes[0]) && (Xe.searchPseudoElements && n(s.target), t(s.target)), s.type === "attributes" && s.target.parentNode && Xe.searchPseudoElements && n(s.target.parentNode), s.type === "attributes" && Uz(s.target) && ~KRe.indexOf(s.attributeName))
        if (s.attributeName === "class" && Rze(s.target)) {
          const {
            prefix: l,
            iconName: c
          } = Ox(j6(s.target));
          s.target.setAttribute(A6, l || i), c && s.target.setAttribute(_6, c);
        } else zze(s.target) && r(s.target);
    });
  }), qi && S1.observe(o, {
    childList: !0,
    attributes: !0,
    characterData: !0,
    subtree: !0
  });
}
function Wze() {
  S1 && S1.disconnect();
}
function Uze(e) {
  const t = e.getAttribute("style");
  let r = [];
  return t && (r = t.split(";").reduce((n, o) => {
    const a = o.split(":"), i = a[0], s = a.slice(1);
    return i && s.length > 0 && (n[i] = s.join(":").trim()), n;
  }, {})), r;
}
function Yze(e) {
  const t = e.getAttribute("data-prefix"), r = e.getAttribute("data-icon"), n = e.innerText !== void 0 ? e.innerText.trim() : "";
  let o = Ox(j6(e));
  return o.prefix || (o.prefix = xc()), t && r && (o.prefix = t, o.iconName = r), o.iconName && o.prefix || (o.prefix && n.length > 0 && (o.iconName = gze(o.prefix, e.innerText) || M6(o.prefix, zJ(e.innerText))), !o.iconName && Xe.autoFetchSvg && e.firstChild && e.firstChild.nodeType === Node.TEXT_NODE && (o.iconName = e.firstChild.data)), o;
}
function Hze(e) {
  const t = op(e.attributes).reduce((o, a) => (o.name !== "class" && o.name !== "style" && (o[a.name] = a.value), o), {}), r = e.getAttribute("title"), n = e.getAttribute("data-fa-title-id");
  return Xe.autoA11y && (r ? t["aria-labelledby"] = "".concat(Xe.replacementClass, "-title-").concat(n || Wh()) : (t["aria-hidden"] = "true", t.focusable = "false")), t;
}
function Gze() {
  return {
    iconName: null,
    title: null,
    titleId: null,
    prefix: null,
    transform: Sa,
    symbol: !1,
    mask: {
      iconName: null,
      prefix: null,
      rest: []
    },
    maskId: null,
    extra: {
      classes: [],
      styles: {},
      attributes: {}
    }
  };
}
function Gz(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {
    styleParser: !0
  };
  const {
    iconName: r,
    prefix: n,
    rest: o
  } = Yze(e), a = Hze(e), i = dE("parseNodeAttributes", {}, e);
  let s = t.styleParser ? Uze(e) : [];
  return $e({
    iconName: r,
    title: e.getAttribute("title"),
    titleId: e.getAttribute("data-fa-title-id"),
    prefix: n,
    transform: Sa,
    mask: {
      iconName: null,
      prefix: null,
      rest: []
    },
    maskId: null,
    symbol: !1,
    extra: {
      classes: o,
      styles: s,
      attributes: a
    }
  }, i);
}
const {
  styles: qze
} = Pa;
function QJ(e) {
  const t = Xe.autoReplaceSvg === "nest" ? Gz(e, {
    styleParser: !1
  }) : Gz(e);
  return ~t.extra.classes.indexOf(NJ) ? wc("generateLayersText", e, t) : wc("generateSvgReplacementMutation", e, t);
}
function Bze() {
  return [...CRe, ...aE];
}
function qz(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
  if (!qi) return Promise.resolve();
  const r = Gr.documentElement.classList, n = (u) => r.add("".concat(Tz, "-").concat(u)), o = (u) => r.remove("".concat(Tz, "-").concat(u)), a = Xe.autoFetchSvg ? Bze() : OJ.concat(Object.keys(qze));
  a.includes("fa") || a.push("fa");
  const i = [".".concat(NJ, ":not([").concat(_u, "])")].concat(a.map((u) => ".".concat(u, ":not([").concat(_u, "])"))).join(", ");
  if (i.length === 0)
    return Promise.resolve();
  let s = [];
  try {
    s = op(e.querySelectorAll(i));
  } catch {
  }
  if (s.length > 0)
    n("pending"), o("complete");
  else
    return Promise.resolve();
  const l = z6.begin("onTree"), c = s.reduce((u, f) => {
    try {
      const p = QJ(f);
      p && u.push(p);
    } catch (p) {
      AJ || p.name === "MissingIcon" && console.error(p);
    }
    return u;
  }, []);
  return new Promise((u, f) => {
    Promise.all(c).then((p) => {
      KJ(p, () => {
        n("active"), n("complete"), o("pending"), typeof t == "function" && t(), l(), u();
      });
    }).catch((p) => {
      l(), f(p);
    });
  });
}
function Xze(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
  QJ(e).then((r) => {
    r && KJ([r], t);
  });
}
function Kze(e) {
  return function(t) {
    let r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    const n = (t || {}).icon ? t : pE(t || {});
    let {
      mask: o
    } = r;
    return o && (o = (o || {}).icon ? o : pE(o || {})), e(n, $e($e({}, r), {}, {
      mask: o
    }));
  };
}
const Jze = function(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  const {
    transform: r = Sa,
    symbol: n = !1,
    mask: o = null,
    maskId: a = null,
    title: i = null,
    titleId: s = null,
    classes: l = [],
    attributes: c = {},
    styles: u = {}
  } = t;
  if (!e) return;
  const {
    prefix: f,
    iconName: p,
    icon: v
  } = e;
  return Ex($e({
    type: "icon"
  }, e), () => (Nu("beforeDOMElementCreation", {
    iconDefinition: e,
    params: t
  }), Xe.autoA11y && (i ? c["aria-labelledby"] = "".concat(Xe.replacementClass, "-title-").concat(s || Wh()) : (c["aria-hidden"] = "true", c.focusable = "false")), R6({
    icons: {
      main: mE(v),
      mask: o ? mE(o.icon) : {
        found: !1,
        width: null,
        height: null,
        icon: {}
      }
    },
    prefix: f,
    iconName: p,
    transform: $e($e({}, Sa), r),
    symbol: n,
    title: i,
    maskId: a,
    titleId: s,
    extra: {
      attributes: c,
      styles: u,
      classes: l
    }
  })));
};
var Qze = {
  mixout() {
    return {
      icon: Kze(Jze)
    };
  },
  hooks() {
    return {
      mutationObserverCallbacks(e) {
        return e.treeCallback = qz, e.nodeCallback = Xze, e;
      }
    };
  },
  provides(e) {
    e.i2svg = function(t) {
      const {
        node: r = Gr,
        callback: n = () => {
        }
      } = t;
      return qz(r, n);
    }, e.generateSvgReplacementMutation = function(t, r) {
      const {
        iconName: n,
        title: o,
        titleId: a,
        prefix: i,
        transform: s,
        symbol: l,
        mask: c,
        maskId: u,
        extra: f
      } = r;
      return new Promise((p, v) => {
        Promise.all([gE(n, i), c.iconName ? gE(c.iconName, c.prefix) : Promise.resolve({
          found: !1,
          width: 512,
          height: 512,
          icon: {}
        })]).then((x) => {
          let [b, m] = x;
          p([t, R6({
            icons: {
              main: b,
              mask: m
            },
            prefix: i,
            iconName: n,
            transform: s,
            symbol: l,
            maskId: u,
            title: o,
            titleId: a,
            extra: f,
            watchable: !0
          })]);
        }).catch(v);
      });
    }, e.generateAbstractIcon = function(t) {
      let {
        children: r,
        attributes: n,
        main: o,
        transform: a,
        styles: i
      } = t;
      const s = kx(i);
      s.length > 0 && (n.style = s);
      let l;
      return I6(a) && (l = wc("generateAbstractTransformGrouping", {
        main: o,
        transform: a,
        containerWidth: o.width,
        iconWidth: o.width
      })), r.push(l || o.icon), {
        children: r,
        attributes: n
      };
    };
  }
}, Zze = {
  mixout() {
    return {
      layer(e) {
        let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        const {
          classes: r = []
        } = t;
        return Ex({
          type: "layer"
        }, () => {
          Nu("beforeDOMElementCreation", {
            assembler: e,
            params: t
          });
          let n = [];
          return e((o) => {
            Array.isArray(o) ? o.map((a) => {
              n = n.concat(a.abstract);
            }) : n = n.concat(o.abstract);
          }), [{
            tag: "span",
            attributes: {
              class: ["".concat(Xe.cssPrefix, "-layers"), ...r].join(" ")
            },
            children: n
          }];
        });
      }
    };
  }
}, e8e = {
  mixout() {
    return {
      counter(e) {
        let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        const {
          title: r = null,
          classes: n = [],
          attributes: o = {},
          styles: a = {}
        } = t;
        return Ex({
          type: "counter",
          content: e
        }, () => (Nu("beforeDOMElementCreation", {
          content: e,
          params: t
        }), jze({
          content: e.toString(),
          title: r,
          extra: {
            attributes: o,
            styles: a,
            classes: ["".concat(Xe.cssPrefix, "-layers-counter"), ...n]
          }
        })));
      }
    };
  }
}, t8e = {
  mixout() {
    return {
      text(e) {
        let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        const {
          transform: r = Sa,
          title: n = null,
          classes: o = [],
          attributes: a = {},
          styles: i = {}
        } = t;
        return Ex({
          type: "text",
          content: e
        }, () => (Nu("beforeDOMElementCreation", {
          content: e,
          params: t
        }), Vz({
          content: e,
          transform: $e($e({}, Sa), r),
          title: n,
          extra: {
            attributes: a,
            styles: i,
            classes: ["".concat(Xe.cssPrefix, "-layers-text"), ...o]
          }
        })));
      }
    };
  },
  provides(e) {
    e.generateLayersText = function(t, r) {
      const {
        title: n,
        transform: o,
        extra: a
      } = r;
      let i = null, s = null;
      if (kJ) {
        const l = parseInt(getComputedStyle(t).fontSize, 10), c = t.getBoundingClientRect();
        i = c.width / l, s = c.height / l;
      }
      return Xe.autoA11y && !n && (a.attributes["aria-hidden"] = "true"), Promise.resolve([t, Vz({
        content: t.innerHTML,
        width: i,
        height: s,
        transform: o,
        title: n,
        extra: a,
        watchable: !0
      })]);
    };
  }
};
const r8e = new RegExp('"', "ug"), Bz = [1105920, 1112319], Xz = $e($e($e($e({}, {
  FontAwesome: {
    normal: "fas",
    400: "fas"
  }
}), ERe), WRe), MRe), yE = Object.keys(Xz).reduce((e, t) => (e[t.toLowerCase()] = Xz[t], e), {}), n8e = Object.keys(yE).reduce((e, t) => {
  const r = yE[t];
  return e[t] = r[900] || [...Object.entries(r)][0][1], e;
}, {});
function o8e(e) {
  const t = e.replace(r8e, ""), r = uze(t, 0), n = r >= Bz[0] && r <= Bz[1], o = t.length === 2 ? t[0] === t[1] : !1;
  return {
    value: zJ(o ? t[0] : t),
    isSecondary: n || o
  };
}
function a8e(e, t) {
  const r = e.replace(/^['"]|['"]$/g, "").toLowerCase(), n = parseInt(t), o = isNaN(n) ? "normal" : n;
  return (yE[r] || {})[o] || n8e[r];
}
function Kz(e, t) {
  const r = "".concat(URe).concat(t.replace(":", "-"));
  return new Promise((n, o) => {
    if (e.getAttribute(r) !== null)
      return n();
    const a = op(e.children).filter((f) => f.getAttribute(sE) === t)[0], i = vc.getComputedStyle(e, t), s = i.getPropertyValue("font-family"), l = s.match(BRe), c = i.getPropertyValue("font-weight"), u = i.getPropertyValue("content");
    if (a && !l)
      return e.removeChild(a), n();
    if (l && u !== "none" && u !== "") {
      const f = i.getPropertyValue("content");
      let p = a8e(s, c);
      const {
        value: v,
        isSecondary: x
      } = o8e(f), b = l[0].startsWith("FontAwesome");
      let m = M6(p, v), w = m;
      if (b) {
        const $ = hze(v);
        $.iconName && $.prefix && (m = $.iconName, p = $.prefix);
      }
      if (m && !x && (!a || a.getAttribute(A6) !== p || a.getAttribute(_6) !== w)) {
        e.setAttribute(r, w), a && e.removeChild(a);
        const $ = Gze(), {
          extra: E
        } = $;
        E.attributes[sE] = t, gE(m, p).then((S) => {
          const h = R6($e($e({}, $), {}, {
            icons: {
              main: S,
              mask: GJ()
            },
            prefix: p,
            iconName: w,
            extra: E,
            watchable: !0
          })), U = Gr.createElementNS("http://www.w3.org/2000/svg", "svg");
          t === "::before" ? e.insertBefore(U, e.firstChild) : e.appendChild(U), U.outerHTML = h.map((G) => Eb(G)).join(`
`), e.removeAttribute(r), n();
        }).catch(o);
      } else
        n();
    } else
      n();
  });
}
function i8e(e) {
  return Promise.all([Kz(e, "::before"), Kz(e, "::after")]);
}
function s8e(e) {
  return e.parentNode !== document.head && !~HRe.indexOf(e.tagName.toUpperCase()) && !e.getAttribute(sE) && (!e.parentNode || e.parentNode.tagName !== "svg");
}
function Jz(e) {
  if (qi)
    return new Promise((t, r) => {
      const n = op(e.querySelectorAll("*")).filter(s8e).map(i8e), o = z6.begin("searchPseudoElements");
      JJ(), Promise.all(n).then(() => {
        o(), bE(), t();
      }).catch(() => {
        o(), bE(), r();
      });
    });
}
var l8e = {
  hooks() {
    return {
      mutationObserverCallbacks(e) {
        return e.pseudoElementsCallback = Jz, e;
      }
    };
  },
  provides(e) {
    e.pseudoElements2svg = function(t) {
      const {
        node: r = Gr
      } = t;
      Xe.searchPseudoElements && Jz(r);
    };
  }
};
let Qz = !1;
var c8e = {
  mixout() {
    return {
      dom: {
        unwatch() {
          JJ(), Qz = !0;
        }
      }
    };
  },
  hooks() {
    return {
      bootstrap() {
        Hz(dE("mutationObserverCallbacks", {}));
      },
      noAuto() {
        Wze();
      },
      watch(e) {
        const {
          observeMutationsRoot: t
        } = e;
        Qz ? bE() : Hz(dE("mutationObserverCallbacks", {
          observeMutationsRoot: t
        }));
      }
    };
  }
};
const Zz = (e) => {
  let t = {
    size: 16,
    x: 0,
    y: 0,
    flipX: !1,
    flipY: !1,
    rotate: 0
  };
  return e.toLowerCase().split(" ").reduce((r, n) => {
    const o = n.toLowerCase().split("-"), a = o[0];
    let i = o.slice(1).join("-");
    if (a && i === "h")
      return r.flipX = !0, r;
    if (a && i === "v")
      return r.flipY = !0, r;
    if (i = parseFloat(i), isNaN(i))
      return r;
    switch (a) {
      case "grow":
        r.size = r.size + i;
        break;
      case "shrink":
        r.size = r.size - i;
        break;
      case "left":
        r.x = r.x - i;
        break;
      case "right":
        r.x = r.x + i;
        break;
      case "up":
        r.y = r.y - i;
        break;
      case "down":
        r.y = r.y + i;
        break;
      case "rotate":
        r.rotate = r.rotate + i;
        break;
    }
    return r;
  }, t);
};
var u8e = {
  mixout() {
    return {
      parse: {
        transform: (e) => Zz(e)
      }
    };
  },
  hooks() {
    return {
      parseNodeAttributes(e, t) {
        const r = t.getAttribute("data-fa-transform");
        return r && (e.transform = Zz(r)), e;
      }
    };
  },
  provides(e) {
    e.generateAbstractTransformGrouping = function(t) {
      let {
        main: r,
        transform: n,
        containerWidth: o,
        iconWidth: a
      } = t;
      const i = {
        transform: "translate(".concat(o / 2, " 256)")
      }, s = "translate(".concat(n.x * 32, ", ").concat(n.y * 32, ") "), l = "scale(".concat(n.size / 16 * (n.flipX ? -1 : 1), ", ").concat(n.size / 16 * (n.flipY ? -1 : 1), ") "), c = "rotate(".concat(n.rotate, " 0 0)"), u = {
        transform: "".concat(s, " ").concat(l, " ").concat(c)
      }, f = {
        transform: "translate(".concat(a / 2 * -1, " -256)")
      }, p = {
        outer: i,
        inner: u,
        path: f
      };
      return {
        tag: "g",
        attributes: $e({}, p.outer),
        children: [{
          tag: "g",
          attributes: $e({}, p.inner),
          children: [{
            tag: r.icon.tag,
            children: r.icon.children,
            attributes: $e($e({}, r.icon.attributes), p.path)
          }]
        }]
      };
    };
  }
};
const c$ = {
  x: 0,
  y: 0,
  width: "100%",
  height: "100%"
};
function e8(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0;
  return e.attributes && (e.attributes.fill || t) && (e.attributes.fill = "black"), e;
}
function f8e(e) {
  return e.tag === "g" ? e.children : [e];
}
var d8e = {
  hooks() {
    return {
      parseNodeAttributes(e, t) {
        const r = t.getAttribute("data-fa-mask"), n = r ? Ox(r.split(" ").map((o) => o.trim())) : GJ();
        return n.prefix || (n.prefix = xc()), e.mask = n, e.maskId = t.getAttribute("data-fa-mask-id"), e;
      }
    };
  },
  provides(e) {
    e.generateAbstractMask = function(t) {
      let {
        children: r,
        attributes: n,
        main: o,
        mask: a,
        maskId: i,
        transform: s
      } = t;
      const {
        width: l,
        icon: c
      } = o, {
        width: u,
        icon: f
      } = a, p = oze({
        transform: s,
        containerWidth: u,
        iconWidth: l
      }), v = {
        tag: "rect",
        attributes: $e($e({}, c$), {}, {
          fill: "white"
        })
      }, x = c.children ? {
        children: c.children.map(e8)
      } : {}, b = {
        tag: "g",
        attributes: $e({}, p.inner),
        children: [e8($e({
          tag: c.tag,
          attributes: $e($e({}, c.attributes), p.path)
        }, x))]
      }, m = {
        tag: "g",
        attributes: $e({}, p.outer),
        children: [b]
      }, w = "mask-".concat(i || Wh()), $ = "clip-".concat(i || Wh()), E = {
        tag: "mask",
        attributes: $e($e({}, c$), {}, {
          id: w,
          maskUnits: "userSpaceOnUse",
          maskContentUnits: "userSpaceOnUse"
        }),
        children: [v, m]
      }, S = {
        tag: "defs",
        children: [{
          tag: "clipPath",
          attributes: {
            id: $
          },
          children: f8e(f)
        }, E]
      };
      return r.push(S, {
        tag: "rect",
        attributes: $e({
          fill: "currentColor",
          "clip-path": "url(#".concat($, ")"),
          mask: "url(#".concat(w, ")")
        }, c$)
      }), {
        children: r,
        attributes: n
      };
    };
  }
}, p8e = {
  provides(e) {
    let t = !1;
    vc.matchMedia && (t = vc.matchMedia("(prefers-reduced-motion: reduce)").matches), e.missingIconAbstract = function() {
      const r = [], n = {
        fill: "currentColor"
      }, o = {
        attributeType: "XML",
        repeatCount: "indefinite",
        dur: "2s"
      };
      r.push({
        tag: "path",
        attributes: $e($e({}, n), {}, {
          d: "M156.5,447.7l-12.6,29.5c-18.7-9.5-35.9-21.2-51.5-34.9l22.7-22.7C127.6,430.5,141.5,440,156.5,447.7z M40.6,272H8.5 c1.4,21.2,5.4,41.7,11.7,61.1L50,321.2C45.1,305.5,41.8,289,40.6,272z M40.6,240c1.4-18.8,5.2-37,11.1-54.1l-29.5-12.6 C14.7,194.3,10,216.7,8.5,240H40.6z M64.3,156.5c7.8-14.9,17.2-28.8,28.1-41.5L69.7,92.3c-13.7,15.6-25.5,32.8-34.9,51.5 L64.3,156.5z M397,419.6c-13.9,12-29.4,22.3-46.1,30.4l11.9,29.8c20.7-9.9,39.8-22.6,56.9-37.6L397,419.6z M115,92.4 c13.9-12,29.4-22.3,46.1-30.4l-11.9-29.8c-20.7,9.9-39.8,22.6-56.8,37.6L115,92.4z M447.7,355.5c-7.8,14.9-17.2,28.8-28.1,41.5 l22.7,22.7c13.7-15.6,25.5-32.9,34.9-51.5L447.7,355.5z M471.4,272c-1.4,18.8-5.2,37-11.1,54.1l29.5,12.6 c7.5-21.1,12.2-43.5,13.6-66.8H471.4z M321.2,462c-15.7,5-32.2,8.2-49.2,9.4v32.1c21.2-1.4,41.7-5.4,61.1-11.7L321.2,462z M240,471.4c-18.8-1.4-37-5.2-54.1-11.1l-12.6,29.5c21.1,7.5,43.5,12.2,66.8,13.6V471.4z M462,190.8c5,15.7,8.2,32.2,9.4,49.2h32.1 c-1.4-21.2-5.4-41.7-11.7-61.1L462,190.8z M92.4,397c-12-13.9-22.3-29.4-30.4-46.1l-29.8,11.9c9.9,20.7,22.6,39.8,37.6,56.9 L92.4,397z M272,40.6c18.8,1.4,36.9,5.2,54.1,11.1l12.6-29.5C317.7,14.7,295.3,10,272,8.5V40.6z M190.8,50 c15.7-5,32.2-8.2,49.2-9.4V8.5c-21.2,1.4-41.7,5.4-61.1,11.7L190.8,50z M442.3,92.3L419.6,115c12,13.9,22.3,29.4,30.5,46.1 l29.8-11.9C470,128.5,457.3,109.4,442.3,92.3z M397,92.4l22.7-22.7c-15.6-13.7-32.8-25.5-51.5-34.9l-12.6,29.5 C370.4,72.1,384.4,81.5,397,92.4z"
        })
      });
      const a = $e($e({}, o), {}, {
        attributeName: "opacity"
      }), i = {
        tag: "circle",
        attributes: $e($e({}, n), {}, {
          cx: "256",
          cy: "364",
          r: "28"
        }),
        children: []
      };
      return t || i.children.push({
        tag: "animate",
        attributes: $e($e({}, o), {}, {
          attributeName: "r",
          values: "28;14;28;28;14;28;"
        })
      }, {
        tag: "animate",
        attributes: $e($e({}, a), {}, {
          values: "1;0;1;1;0;1;"
        })
      }), r.push(i), r.push({
        tag: "path",
        attributes: $e($e({}, n), {}, {
          opacity: "1",
          d: "M263.7,312h-16c-6.6,0-12-5.4-12-12c0-71,77.4-63.9,77.4-107.8c0-20-17.8-40.2-57.4-40.2c-29.1,0-44.3,9.6-59.2,28.7 c-3.9,5-11.1,6-16.2,2.4l-13.1-9.2c-5.6-3.9-6.9-11.8-2.6-17.2c21.2-27.2,46.4-44.7,91.2-44.7c52.3,0,97.4,29.8,97.4,80.2 c0,67.6-77.4,63.5-77.4,107.8C275.7,306.6,270.3,312,263.7,312z"
        }),
        children: t ? [] : [{
          tag: "animate",
          attributes: $e($e({}, a), {}, {
            values: "1;0;0;0;0;1;"
          })
        }]
      }), t || r.push({
        tag: "path",
        attributes: $e($e({}, n), {}, {
          opacity: "0",
          d: "M232.5,134.5l7,168c0.3,6.4,5.6,11.5,12,11.5h9c6.4,0,11.7-5.1,12-11.5l7-168c0.3-6.8-5.2-12.5-12-12.5h-23 C237.7,122,232.2,127.7,232.5,134.5z"
        }),
        children: [{
          tag: "animate",
          attributes: $e($e({}, a), {}, {
            values: "0;0;1;1;0;0;"
          })
        }]
      }), {
        tag: "g",
        attributes: {
          class: "missing"
        },
        children: r
      };
    };
  }
}, m8e = {
  hooks() {
    return {
      parseNodeAttributes(e, t) {
        const r = t.getAttribute("data-fa-symbol"), n = r === null ? !1 : r === "" ? !0 : r;
        return e.symbol = n, e;
      }
    };
  }
}, g8e = [sze, Qze, Zze, e8e, t8e, l8e, c8e, u8e, d8e, p8e, m8e];
Eze(g8e, {
  mixoutsTo: io
});
io.noAuto;
io.config;
io.library;
io.dom;
const vE = io.parse;
io.findIconDefinition;
io.toHtml;
const h8e = io.icon;
io.layer;
io.text;
io.counter;
var jy = { exports: {} }, u$ = { exports: {} }, nr = {};
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var t8;
function b8e() {
  if (t8) return nr;
  t8 = 1;
  var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, r = e ? Symbol.for("react.portal") : 60106, n = e ? Symbol.for("react.fragment") : 60107, o = e ? Symbol.for("react.strict_mode") : 60108, a = e ? Symbol.for("react.profiler") : 60114, i = e ? Symbol.for("react.provider") : 60109, s = e ? Symbol.for("react.context") : 60110, l = e ? Symbol.for("react.async_mode") : 60111, c = e ? Symbol.for("react.concurrent_mode") : 60111, u = e ? Symbol.for("react.forward_ref") : 60112, f = e ? Symbol.for("react.suspense") : 60113, p = e ? Symbol.for("react.suspense_list") : 60120, v = e ? Symbol.for("react.memo") : 60115, x = e ? Symbol.for("react.lazy") : 60116, b = e ? Symbol.for("react.block") : 60121, m = e ? Symbol.for("react.fundamental") : 60117, w = e ? Symbol.for("react.responder") : 60118, $ = e ? Symbol.for("react.scope") : 60119;
  function E(h) {
    if (typeof h == "object" && h !== null) {
      var U = h.$$typeof;
      switch (U) {
        case t:
          switch (h = h.type, h) {
            case l:
            case c:
            case n:
            case a:
            case o:
            case f:
              return h;
            default:
              switch (h = h && h.$$typeof, h) {
                case s:
                case u:
                case x:
                case v:
                case i:
                  return h;
                default:
                  return U;
              }
          }
        case r:
          return U;
      }
    }
  }
  function S(h) {
    return E(h) === c;
  }
  return nr.AsyncMode = l, nr.ConcurrentMode = c, nr.ContextConsumer = s, nr.ContextProvider = i, nr.Element = t, nr.ForwardRef = u, nr.Fragment = n, nr.Lazy = x, nr.Memo = v, nr.Portal = r, nr.Profiler = a, nr.StrictMode = o, nr.Suspense = f, nr.isAsyncMode = function(h) {
    return S(h) || E(h) === l;
  }, nr.isConcurrentMode = S, nr.isContextConsumer = function(h) {
    return E(h) === s;
  }, nr.isContextProvider = function(h) {
    return E(h) === i;
  }, nr.isElement = function(h) {
    return typeof h == "object" && h !== null && h.$$typeof === t;
  }, nr.isForwardRef = function(h) {
    return E(h) === u;
  }, nr.isFragment = function(h) {
    return E(h) === n;
  }, nr.isLazy = function(h) {
    return E(h) === x;
  }, nr.isMemo = function(h) {
    return E(h) === v;
  }, nr.isPortal = function(h) {
    return E(h) === r;
  }, nr.isProfiler = function(h) {
    return E(h) === a;
  }, nr.isStrictMode = function(h) {
    return E(h) === o;
  }, nr.isSuspense = function(h) {
    return E(h) === f;
  }, nr.isValidElementType = function(h) {
    return typeof h == "string" || typeof h == "function" || h === n || h === c || h === a || h === o || h === f || h === p || typeof h == "object" && h !== null && (h.$$typeof === x || h.$$typeof === v || h.$$typeof === i || h.$$typeof === s || h.$$typeof === u || h.$$typeof === m || h.$$typeof === w || h.$$typeof === $ || h.$$typeof === b);
  }, nr.typeOf = E, nr;
}
var gr = {};
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var r8;
function y8e() {
  return r8 || (r8 = 1, process.env.NODE_ENV !== "production" && function() {
    var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, r = e ? Symbol.for("react.portal") : 60106, n = e ? Symbol.for("react.fragment") : 60107, o = e ? Symbol.for("react.strict_mode") : 60108, a = e ? Symbol.for("react.profiler") : 60114, i = e ? Symbol.for("react.provider") : 60109, s = e ? Symbol.for("react.context") : 60110, l = e ? Symbol.for("react.async_mode") : 60111, c = e ? Symbol.for("react.concurrent_mode") : 60111, u = e ? Symbol.for("react.forward_ref") : 60112, f = e ? Symbol.for("react.suspense") : 60113, p = e ? Symbol.for("react.suspense_list") : 60120, v = e ? Symbol.for("react.memo") : 60115, x = e ? Symbol.for("react.lazy") : 60116, b = e ? Symbol.for("react.block") : 60121, m = e ? Symbol.for("react.fundamental") : 60117, w = e ? Symbol.for("react.responder") : 60118, $ = e ? Symbol.for("react.scope") : 60119;
    function E(k) {
      return typeof k == "string" || typeof k == "function" || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
      k === n || k === c || k === a || k === o || k === f || k === p || typeof k == "object" && k !== null && (k.$$typeof === x || k.$$typeof === v || k.$$typeof === i || k.$$typeof === s || k.$$typeof === u || k.$$typeof === m || k.$$typeof === w || k.$$typeof === $ || k.$$typeof === b);
    }
    function S(k) {
      if (typeof k == "object" && k !== null) {
        var oe = k.$$typeof;
        switch (oe) {
          case t:
            var Ce = k.type;
            switch (Ce) {
              case l:
              case c:
              case n:
              case a:
              case o:
              case f:
                return Ce;
              default:
                var Ze = Ce && Ce.$$typeof;
                switch (Ze) {
                  case s:
                  case u:
                  case x:
                  case v:
                  case i:
                    return Ze;
                  default:
                    return oe;
                }
            }
          case r:
            return oe;
        }
      }
    }
    var h = l, U = c, G = s, Q = i, Z = t, X = u, J = n, I = x, te = v, V = r, D = a, F = o, R = f, H = !1;
    function B(k) {
      return H || (H = !0, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.")), g(k) || S(k) === l;
    }
    function g(k) {
      return S(k) === c;
    }
    function d(k) {
      return S(k) === s;
    }
    function O(k) {
      return S(k) === i;
    }
    function C(k) {
      return typeof k == "object" && k !== null && k.$$typeof === t;
    }
    function A(k) {
      return S(k) === u;
    }
    function N(k) {
      return S(k) === n;
    }
    function j(k) {
      return S(k) === x;
    }
    function _(k) {
      return S(k) === v;
    }
    function T(k) {
      return S(k) === r;
    }
    function M(k) {
      return S(k) === a;
    }
    function z(k) {
      return S(k) === o;
    }
    function ee(k) {
      return S(k) === f;
    }
    gr.AsyncMode = h, gr.ConcurrentMode = U, gr.ContextConsumer = G, gr.ContextProvider = Q, gr.Element = Z, gr.ForwardRef = X, gr.Fragment = J, gr.Lazy = I, gr.Memo = te, gr.Portal = V, gr.Profiler = D, gr.StrictMode = F, gr.Suspense = R, gr.isAsyncMode = B, gr.isConcurrentMode = g, gr.isContextConsumer = d, gr.isContextProvider = O, gr.isElement = C, gr.isForwardRef = A, gr.isFragment = N, gr.isLazy = j, gr.isMemo = _, gr.isPortal = T, gr.isProfiler = M, gr.isStrictMode = z, gr.isSuspense = ee, gr.isValidElementType = E, gr.typeOf = S;
  }()), gr;
}
var n8;
function ZJ() {
  return n8 || (n8 = 1, process.env.NODE_ENV === "production" ? u$.exports = b8e() : u$.exports = y8e()), u$.exports;
}
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
var f$, o8;
function v8e() {
  if (o8) return f$;
  o8 = 1;
  var e = Object.getOwnPropertySymbols, t = Object.prototype.hasOwnProperty, r = Object.prototype.propertyIsEnumerable;
  function n(a) {
    if (a == null)
      throw new TypeError("Object.assign cannot be called with null or undefined");
    return Object(a);
  }
  function o() {
    try {
      if (!Object.assign)
        return !1;
      var a = new String("abc");
      if (a[5] = "de", Object.getOwnPropertyNames(a)[0] === "5")
        return !1;
      for (var i = {}, s = 0; s < 10; s++)
        i["_" + String.fromCharCode(s)] = s;
      var l = Object.getOwnPropertyNames(i).map(function(u) {
        return i[u];
      });
      if (l.join("") !== "0123456789")
        return !1;
      var c = {};
      return "abcdefghijklmnopqrst".split("").forEach(function(u) {
        c[u] = u;
      }), Object.keys(Object.assign({}, c)).join("") === "abcdefghijklmnopqrst";
    } catch {
      return !1;
    }
  }
  return f$ = o() ? Object.assign : function(a, i) {
    for (var s, l = n(a), c, u = 1; u < arguments.length; u++) {
      s = Object(arguments[u]);
      for (var f in s)
        t.call(s, f) && (l[f] = s[f]);
      if (e) {
        c = e(s);
        for (var p = 0; p < c.length; p++)
          r.call(s, c[p]) && (l[c[p]] = s[c[p]]);
      }
    }
    return l;
  }, f$;
}
var d$, a8;
function D6() {
  if (a8) return d$;
  a8 = 1;
  var e = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
  return d$ = e, d$;
}
var i8, s8;
function eQ() {
  return s8 || (s8 = 1, i8 = Function.call.bind(Object.prototype.hasOwnProperty)), i8;
}
var p$, l8;
function x8e() {
  if (l8) return p$;
  l8 = 1;
  var e = function() {
  };
  if (process.env.NODE_ENV !== "production") {
    var t = /* @__PURE__ */ D6(), r = {}, n = /* @__PURE__ */ eQ();
    e = function(a) {
      var i = "Warning: " + a;
      typeof console < "u" && console.error(i);
      try {
        throw new Error(i);
      } catch {
      }
    };
  }
  function o(a, i, s, l, c) {
    if (process.env.NODE_ENV !== "production") {
      for (var u in a)
        if (n(a, u)) {
          var f;
          try {
            if (typeof a[u] != "function") {
              var p = Error(
                (l || "React class") + ": " + s + " type `" + u + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof a[u] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`."
              );
              throw p.name = "Invariant Violation", p;
            }
            f = a[u](i, u, l, s, null, t);
          } catch (x) {
            f = x;
          }
          if (f && !(f instanceof Error) && e(
            (l || "React class") + ": type specification of " + s + " `" + u + "` is invalid; the type checker function must return `null` or an `Error` but returned a " + typeof f + ". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument)."
          ), f instanceof Error && !(f.message in r)) {
            r[f.message] = !0;
            var v = c ? c() : "";
            e(
              "Failed " + s + " type: " + f.message + (v ?? "")
            );
          }
        }
    }
  }
  return o.resetWarningCache = function() {
    process.env.NODE_ENV !== "production" && (r = {});
  }, p$ = o, p$;
}
var m$, c8;
function w8e() {
  if (c8) return m$;
  c8 = 1;
  var e = ZJ(), t = v8e(), r = /* @__PURE__ */ D6(), n = /* @__PURE__ */ eQ(), o = /* @__PURE__ */ x8e(), a = function() {
  };
  process.env.NODE_ENV !== "production" && (a = function(s) {
    var l = "Warning: " + s;
    typeof console < "u" && console.error(l);
    try {
      throw new Error(l);
    } catch {
    }
  });
  function i() {
    return null;
  }
  return m$ = function(s, l) {
    var c = typeof Symbol == "function" && Symbol.iterator, u = "@@iterator";
    function f(g) {
      var d = g && (c && g[c] || g[u]);
      if (typeof d == "function")
        return d;
    }
    var p = "<<anonymous>>", v = {
      array: w("array"),
      bigint: w("bigint"),
      bool: w("boolean"),
      func: w("function"),
      number: w("number"),
      object: w("object"),
      string: w("string"),
      symbol: w("symbol"),
      any: $(),
      arrayOf: E,
      element: S(),
      elementType: h(),
      instanceOf: U,
      node: X(),
      objectOf: Q,
      oneOf: G,
      oneOfType: Z,
      shape: I,
      exact: te
    };
    function x(g, d) {
      return g === d ? g !== 0 || 1 / g === 1 / d : g !== g && d !== d;
    }
    function b(g, d) {
      this.message = g, this.data = d && typeof d == "object" ? d : {}, this.stack = "";
    }
    b.prototype = Error.prototype;
    function m(g) {
      if (process.env.NODE_ENV !== "production")
        var d = {}, O = 0;
      function C(N, j, _, T, M, z, ee) {
        if (T = T || p, z = z || _, ee !== r) {
          if (l) {
            var k = new Error(
              "Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types"
            );
            throw k.name = "Invariant Violation", k;
          } else if (process.env.NODE_ENV !== "production" && typeof console < "u") {
            var oe = T + ":" + _;
            !d[oe] && // Avoid spamming the console because they are often not actionable except for lib authors
            O < 3 && (a(
              "You are manually calling a React.PropTypes validation function for the `" + z + "` prop on `" + T + "`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details."
            ), d[oe] = !0, O++);
          }
        }
        return j[_] == null ? N ? j[_] === null ? new b("The " + M + " `" + z + "` is marked as required " + ("in `" + T + "`, but its value is `null`.")) : new b("The " + M + " `" + z + "` is marked as required in " + ("`" + T + "`, but its value is `undefined`.")) : null : g(j, _, T, M, z);
      }
      var A = C.bind(null, !1);
      return A.isRequired = C.bind(null, !0), A;
    }
    function w(g) {
      function d(O, C, A, N, j, _) {
        var T = O[C], M = F(T);
        if (M !== g) {
          var z = R(T);
          return new b(
            "Invalid " + N + " `" + j + "` of type " + ("`" + z + "` supplied to `" + A + "`, expected ") + ("`" + g + "`."),
            { expectedType: g }
          );
        }
        return null;
      }
      return m(d);
    }
    function $() {
      return m(i);
    }
    function E(g) {
      function d(O, C, A, N, j) {
        if (typeof g != "function")
          return new b("Property `" + j + "` of component `" + A + "` has invalid PropType notation inside arrayOf.");
        var _ = O[C];
        if (!Array.isArray(_)) {
          var T = F(_);
          return new b("Invalid " + N + " `" + j + "` of type " + ("`" + T + "` supplied to `" + A + "`, expected an array."));
        }
        for (var M = 0; M < _.length; M++) {
          var z = g(_, M, A, N, j + "[" + M + "]", r);
          if (z instanceof Error)
            return z;
        }
        return null;
      }
      return m(d);
    }
    function S() {
      function g(d, O, C, A, N) {
        var j = d[O];
        if (!s(j)) {
          var _ = F(j);
          return new b("Invalid " + A + " `" + N + "` of type " + ("`" + _ + "` supplied to `" + C + "`, expected a single ReactElement."));
        }
        return null;
      }
      return m(g);
    }
    function h() {
      function g(d, O, C, A, N) {
        var j = d[O];
        if (!e.isValidElementType(j)) {
          var _ = F(j);
          return new b("Invalid " + A + " `" + N + "` of type " + ("`" + _ + "` supplied to `" + C + "`, expected a single ReactElement type."));
        }
        return null;
      }
      return m(g);
    }
    function U(g) {
      function d(O, C, A, N, j) {
        if (!(O[C] instanceof g)) {
          var _ = g.name || p, T = B(O[C]);
          return new b("Invalid " + N + " `" + j + "` of type " + ("`" + T + "` supplied to `" + A + "`, expected ") + ("instance of `" + _ + "`."));
        }
        return null;
      }
      return m(d);
    }
    function G(g) {
      if (!Array.isArray(g))
        return process.env.NODE_ENV !== "production" && (arguments.length > 1 ? a(
          "Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z])."
        ) : a("Invalid argument supplied to oneOf, expected an array.")), i;
      function d(O, C, A, N, j) {
        for (var _ = O[C], T = 0; T < g.length; T++)
          if (x(_, g[T]))
            return null;
        var M = JSON.stringify(g, function(z, ee) {
          var k = R(ee);
          return k === "symbol" ? String(ee) : ee;
        });
        return new b("Invalid " + N + " `" + j + "` of value `" + String(_) + "` " + ("supplied to `" + A + "`, expected one of " + M + "."));
      }
      return m(d);
    }
    function Q(g) {
      function d(O, C, A, N, j) {
        if (typeof g != "function")
          return new b("Property `" + j + "` of component `" + A + "` has invalid PropType notation inside objectOf.");
        var _ = O[C], T = F(_);
        if (T !== "object")
          return new b("Invalid " + N + " `" + j + "` of type " + ("`" + T + "` supplied to `" + A + "`, expected an object."));
        for (var M in _)
          if (n(_, M)) {
            var z = g(_, M, A, N, j + "." + M, r);
            if (z instanceof Error)
              return z;
          }
        return null;
      }
      return m(d);
    }
    function Z(g) {
      if (!Array.isArray(g))
        return process.env.NODE_ENV !== "production" && a("Invalid argument supplied to oneOfType, expected an instance of array."), i;
      for (var d = 0; d < g.length; d++) {
        var O = g[d];
        if (typeof O != "function")
          return a(
            "Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + H(O) + " at index " + d + "."
          ), i;
      }
      function C(A, N, j, _, T) {
        for (var M = [], z = 0; z < g.length; z++) {
          var ee = g[z], k = ee(A, N, j, _, T, r);
          if (k == null)
            return null;
          k.data && n(k.data, "expectedType") && M.push(k.data.expectedType);
        }
        var oe = M.length > 0 ? ", expected one of type [" + M.join(", ") + "]" : "";
        return new b("Invalid " + _ + " `" + T + "` supplied to " + ("`" + j + "`" + oe + "."));
      }
      return m(C);
    }
    function X() {
      function g(d, O, C, A, N) {
        return V(d[O]) ? null : new b("Invalid " + A + " `" + N + "` supplied to " + ("`" + C + "`, expected a ReactNode."));
      }
      return m(g);
    }
    function J(g, d, O, C, A) {
      return new b(
        (g || "React class") + ": " + d + " type `" + O + "." + C + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + A + "`."
      );
    }
    function I(g) {
      function d(O, C, A, N, j) {
        var _ = O[C], T = F(_);
        if (T !== "object")
          return new b("Invalid " + N + " `" + j + "` of type `" + T + "` " + ("supplied to `" + A + "`, expected `object`."));
        for (var M in g) {
          var z = g[M];
          if (typeof z != "function")
            return J(A, N, j, M, R(z));
          var ee = z(_, M, A, N, j + "." + M, r);
          if (ee)
            return ee;
        }
        return null;
      }
      return m(d);
    }
    function te(g) {
      function d(O, C, A, N, j) {
        var _ = O[C], T = F(_);
        if (T !== "object")
          return new b("Invalid " + N + " `" + j + "` of type `" + T + "` " + ("supplied to `" + A + "`, expected `object`."));
        var M = t({}, O[C], g);
        for (var z in M) {
          var ee = g[z];
          if (n(g, z) && typeof ee != "function")
            return J(A, N, j, z, R(ee));
          if (!ee)
            return new b(
              "Invalid " + N + " `" + j + "` key `" + z + "` supplied to `" + A + "`.\nBad object: " + JSON.stringify(O[C], null, "  ") + `
Valid keys: ` + JSON.stringify(Object.keys(g), null, "  ")
            );
          var k = ee(_, z, A, N, j + "." + z, r);
          if (k)
            return k;
        }
        return null;
      }
      return m(d);
    }
    function V(g) {
      switch (typeof g) {
        case "number":
        case "string":
        case "undefined":
          return !0;
        case "boolean":
          return !g;
        case "object":
          if (Array.isArray(g))
            return g.every(V);
          if (g === null || s(g))
            return !0;
          var d = f(g);
          if (d) {
            var O = d.call(g), C;
            if (d !== g.entries) {
              for (; !(C = O.next()).done; )
                if (!V(C.value))
                  return !1;
            } else
              for (; !(C = O.next()).done; ) {
                var A = C.value;
                if (A && !V(A[1]))
                  return !1;
              }
          } else
            return !1;
          return !0;
        default:
          return !1;
      }
    }
    function D(g, d) {
      return g === "symbol" ? !0 : d ? d["@@toStringTag"] === "Symbol" || typeof Symbol == "function" && d instanceof Symbol : !1;
    }
    function F(g) {
      var d = typeof g;
      return Array.isArray(g) ? "array" : g instanceof RegExp ? "object" : D(d, g) ? "symbol" : d;
    }
    function R(g) {
      if (typeof g > "u" || g === null)
        return "" + g;
      var d = F(g);
      if (d === "object") {
        if (g instanceof Date)
          return "date";
        if (g instanceof RegExp)
          return "regexp";
      }
      return d;
    }
    function H(g) {
      var d = R(g);
      switch (d) {
        case "array":
        case "object":
          return "an " + d;
        case "boolean":
        case "date":
        case "regexp":
          return "a " + d;
        default:
          return d;
      }
    }
    function B(g) {
      return !g.constructor || !g.constructor.name ? p : g.constructor.name;
    }
    return v.checkPropTypes = o, v.resetWarningCache = o.resetWarningCache, v.PropTypes = v, v;
  }, m$;
}
var g$, u8;
function k8e() {
  if (u8) return g$;
  u8 = 1;
  var e = /* @__PURE__ */ D6();
  function t() {
  }
  function r() {
  }
  return r.resetWarningCache = t, g$ = function() {
    function n(i, s, l, c, u, f) {
      if (f !== e) {
        var p = new Error(
          "Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types"
        );
        throw p.name = "Invariant Violation", p;
      }
    }
    n.isRequired = n;
    function o() {
      return n;
    }
    var a = {
      array: n,
      bigint: n,
      bool: n,
      func: n,
      number: n,
      object: n,
      string: n,
      symbol: n,
      any: n,
      arrayOf: o,
      element: n,
      elementType: n,
      instanceOf: o,
      node: n,
      objectOf: o,
      oneOf: o,
      oneOfType: o,
      shape: o,
      exact: o,
      checkPropTypes: r,
      resetWarningCache: t
    };
    return a.PropTypes = a, a;
  }, g$;
}
var f8;
function $8e() {
  if (f8) return jy.exports;
  if (f8 = 1, process.env.NODE_ENV !== "production") {
    var e = ZJ(), t = !0;
    jy.exports = /* @__PURE__ */ w8e()(e.isElement, t);
  } else
    jy.exports = /* @__PURE__ */ k8e()();
  return jy.exports;
}
var O8e = /* @__PURE__ */ $8e();
const Dt = /* @__PURE__ */ BIe(O8e);
function d8(e, t) {
  var r = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var n = Object.getOwnPropertySymbols(e);
    t && (n = n.filter(function(o) {
      return Object.getOwnPropertyDescriptor(e, o).enumerable;
    })), r.push.apply(r, n);
  }
  return r;
}
function ra(e) {
  for (var t = 1; t < arguments.length; t++) {
    var r = arguments[t] != null ? arguments[t] : {};
    t % 2 ? d8(Object(r), !0).forEach(function(n) {
      kf(e, n, r[n]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : d8(Object(r)).forEach(function(n) {
      Object.defineProperty(e, n, Object.getOwnPropertyDescriptor(r, n));
    });
  }
  return e;
}
function P1(e) {
  "@babel/helpers - typeof";
  return P1 = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t) {
    return typeof t;
  } : function(t) {
    return t && typeof Symbol == "function" && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
  }, P1(e);
}
function kf(e, t, r) {
  return t in e ? Object.defineProperty(e, t, {
    value: r,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : e[t] = r, e;
}
function E8e(e, t) {
  if (e == null) return {};
  var r = {}, n = Object.keys(e), o, a;
  for (a = 0; a < n.length; a++)
    o = n[a], !(t.indexOf(o) >= 0) && (r[o] = e[o]);
  return r;
}
function S8e(e, t) {
  if (e == null) return {};
  var r = E8e(e, t), n, o;
  if (Object.getOwnPropertySymbols) {
    var a = Object.getOwnPropertySymbols(e);
    for (o = 0; o < a.length; o++)
      n = a[o], !(t.indexOf(n) >= 0) && Object.prototype.propertyIsEnumerable.call(e, n) && (r[n] = e[n]);
  }
  return r;
}
function xE(e) {
  return P8e(e) || C8e(e) || A8e(e) || _8e();
}
function P8e(e) {
  if (Array.isArray(e)) return wE(e);
}
function C8e(e) {
  if (typeof Symbol < "u" && e[Symbol.iterator] != null || e["@@iterator"] != null) return Array.from(e);
}
function A8e(e, t) {
  if (e) {
    if (typeof e == "string") return wE(e, t);
    var r = Object.prototype.toString.call(e).slice(8, -1);
    if (r === "Object" && e.constructor && (r = e.constructor.name), r === "Map" || r === "Set") return Array.from(e);
    if (r === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return wE(e, t);
  }
}
function wE(e, t) {
  (t == null || t > e.length) && (t = e.length);
  for (var r = 0, n = new Array(t); r < t; r++) n[r] = e[r];
  return n;
}
function _8e() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function N8e(e) {
  var t, r = e.beat, n = e.fade, o = e.beatFade, a = e.bounce, i = e.shake, s = e.flash, l = e.spin, c = e.spinPulse, u = e.spinReverse, f = e.pulse, p = e.fixedWidth, v = e.inverse, x = e.border, b = e.listItem, m = e.flip, w = e.size, $ = e.rotation, E = e.pull, S = (t = {
    "fa-beat": r,
    "fa-fade": n,
    "fa-beat-fade": o,
    "fa-bounce": a,
    "fa-shake": i,
    "fa-flash": s,
    "fa-spin": l,
    "fa-spin-reverse": u,
    "fa-spin-pulse": c,
    "fa-pulse": f,
    "fa-fw": p,
    "fa-inverse": v,
    "fa-border": x,
    "fa-li": b,
    "fa-flip": m === !0,
    "fa-flip-horizontal": m === "horizontal" || m === "both",
    "fa-flip-vertical": m === "vertical" || m === "both"
  }, kf(t, "fa-".concat(w), typeof w < "u" && w !== null), kf(t, "fa-rotate-".concat($), typeof $ < "u" && $ !== null && $ !== 0), kf(t, "fa-pull-".concat(E), typeof E < "u" && E !== null), kf(t, "fa-swap-opacity", e.swapOpacity), t);
  return Object.keys(S).map(function(h) {
    return S[h] ? h : null;
  }).filter(function(h) {
    return h;
  });
}
function j8e(e) {
  return e = e - 0, e === e;
}
function tQ(e) {
  return j8e(e) ? e : (e = e.replace(/[\-_\s]+(.)?/g, function(t, r) {
    return r ? r.toUpperCase() : "";
  }), e.substr(0, 1).toLowerCase() + e.substr(1));
}
var I8e = ["style"];
function T8e(e) {
  return e.charAt(0).toUpperCase() + e.slice(1);
}
function M8e(e) {
  return e.split(";").map(function(t) {
    return t.trim();
  }).filter(function(t) {
    return t;
  }).reduce(function(t, r) {
    var n = r.indexOf(":"), o = tQ(r.slice(0, n)), a = r.slice(n + 1).trim();
    return o.startsWith("webkit") ? t[T8e(o)] = a : t[o] = a, t;
  }, {});
}
function rQ(e, t) {
  var r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
  if (typeof t == "string")
    return t;
  var n = (t.children || []).map(function(l) {
    return rQ(e, l);
  }), o = Object.keys(t.attributes || {}).reduce(function(l, c) {
    var u = t.attributes[c];
    switch (c) {
      case "class":
        l.attrs.className = u, delete t.attributes.class;
        break;
      case "style":
        l.attrs.style = M8e(u);
        break;
      default:
        c.indexOf("aria-") === 0 || c.indexOf("data-") === 0 ? l.attrs[c.toLowerCase()] = u : l.attrs[tQ(c)] = u;
    }
    return l;
  }, {
    attrs: {}
  }), a = r.style, i = a === void 0 ? {} : a, s = S8e(r, I8e);
  return o.attrs.style = ra(ra({}, o.attrs.style), i), e.apply(void 0, [t.tag, ra(ra({}, o.attrs), s)].concat(xE(n)));
}
var nQ = !1;
try {
  nQ = process.env.NODE_ENV === "production";
} catch {
}
function R8e() {
  if (!nQ && console && typeof console.error == "function") {
    var e;
    (e = console).error.apply(e, arguments);
  }
}
function p8(e) {
  if (e && P1(e) === "object" && e.prefix && e.iconName && e.icon)
    return e;
  if (vE.icon)
    return vE.icon(e);
  if (e === null)
    return null;
  if (e && P1(e) === "object" && e.prefix && e.iconName)
    return e;
  if (Array.isArray(e) && e.length === 2)
    return {
      prefix: e[0],
      iconName: e[1]
    };
  if (typeof e == "string")
    return {
      prefix: "fas",
      iconName: e
    };
}
function h$(e, t) {
  return Array.isArray(t) && t.length > 0 || !Array.isArray(t) && t ? kf({}, e, t) : {};
}
var m8 = {
  border: !1,
  className: "",
  mask: null,
  maskId: null,
  fixedWidth: !1,
  inverse: !1,
  flip: !1,
  icon: null,
  listItem: !1,
  pull: null,
  pulse: !1,
  rotation: null,
  size: null,
  spin: !1,
  spinPulse: !1,
  spinReverse: !1,
  beat: !1,
  fade: !1,
  beatFade: !1,
  bounce: !1,
  shake: !1,
  symbol: !1,
  title: "",
  titleId: null,
  transform: null,
  swapOpacity: !1
}, Hg = /* @__PURE__ */ ce.forwardRef(function(e, t) {
  var r = ra(ra({}, m8), e), n = r.icon, o = r.mask, a = r.symbol, i = r.className, s = r.title, l = r.titleId, c = r.maskId, u = p8(n), f = h$("classes", [].concat(xE(N8e(r)), xE((i || "").split(" ")))), p = h$("transform", typeof r.transform == "string" ? vE.transform(r.transform) : r.transform), v = h$("mask", p8(o)), x = h8e(u, ra(ra(ra(ra({}, f), p), v), {}, {
    symbol: a,
    title: s,
    titleId: l,
    maskId: c
  }));
  if (!x)
    return R8e("Could not find icon", u), null;
  var b = x.abstract, m = {
    ref: t
  };
  return Object.keys(r).forEach(function(w) {
    m8.hasOwnProperty(w) || (m[w] = r[w]);
  }), z8e(b[0], m);
});
Hg.displayName = "FontAwesomeIcon";
Hg.propTypes = {
  beat: Dt.bool,
  border: Dt.bool,
  beatFade: Dt.bool,
  bounce: Dt.bool,
  className: Dt.string,
  fade: Dt.bool,
  flash: Dt.bool,
  mask: Dt.oneOfType([Dt.object, Dt.array, Dt.string]),
  maskId: Dt.string,
  fixedWidth: Dt.bool,
  inverse: Dt.bool,
  flip: Dt.oneOf([!0, !1, "horizontal", "vertical", "both"]),
  icon: Dt.oneOfType([Dt.object, Dt.array, Dt.string]),
  listItem: Dt.bool,
  pull: Dt.oneOf(["right", "left"]),
  pulse: Dt.bool,
  rotation: Dt.oneOf([0, 90, 180, 270]),
  shake: Dt.bool,
  size: Dt.oneOf(["2xs", "xs", "sm", "lg", "xl", "2xl", "1x", "2x", "3x", "4x", "5x", "6x", "7x", "8x", "9x", "10x"]),
  spin: Dt.bool,
  spinPulse: Dt.bool,
  spinReverse: Dt.bool,
  symbol: Dt.oneOfType([Dt.bool, Dt.string]),
  title: Dt.string,
  titleId: Dt.string,
  transform: Dt.oneOfType([Dt.string, Dt.object]),
  swapOpacity: Dt.bool
};
var z8e = rQ.bind(null, ce.createElement);
/*!
 * Font Awesome Pro 6.7.2 by @fontawesome - https://fontawesome.com
 * License - https://fontawesome.com/license (Commercial License)
 * Copyright 2024 Fonticons, Inc.
 */
const F8e = {
  prefix: "fas",
  iconName: "chevron-up",
  icon: [512, 512, [], "f077", "M233.4 105.4c12.5-12.5 32.8-12.5 45.3 0l192 192c12.5 12.5 12.5 32.8 0 45.3s-32.8 12.5-45.3 0L256 173.3 86.6 342.6c-12.5 12.5-32.8 12.5-45.3 0s-12.5-32.8 0-45.3l192-192z"]
}, D8e = {
  prefix: "fas",
  iconName: "circle-check",
  icon: [512, 512, [61533, "check-circle"], "f058", "M256 512A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM369 209L241 337c-9.4 9.4-24.6 9.4-33.9 0l-64-64c-9.4-9.4-9.4-24.6 0-33.9s24.6-9.4 33.9 0l47 47L335 175c9.4-9.4 24.6-9.4 33.9 0s9.4 24.6 0 33.9z"]
}, L8e = {
  prefix: "fas",
  iconName: "check",
  icon: [448, 512, [10003, 10004], "f00c", "M438.6 105.4c12.5 12.5 12.5 32.8 0 45.3l-256 256c-12.5 12.5-32.8 12.5-45.3 0l-128-128c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0L160 338.7 393.4 105.4c12.5-12.5 32.8-12.5 45.3 0z"]
}, V8e = ({
  items: e = [],
  onSelect: t,
  onAdd: r,
  triggerIcon: n,
  showAddButton: o = !1,
  disableAddButton: a = !1,
  showIconsInList: i = !1,
  mode: s = "default",
  triggerLabel: l,
  children: c,
  buttonClassName: u,
  panelClassName: f,
  onPanelAction: p,
  panelTitle: v,
  position: x = "top",
  align: b = "start",
  panelActionLabel: m,
  onOpenChange: w
}) => {
  const $ = e.find((D) => D.selected), E = (D, F) => {
    s === "button" && D.action && p ? (p(D.action), F()) : (t == null || t(D), F());
  }, S = Za(
    "text-sm font-medium rounded-lg px-3 py-2 shadow-sm",
    "flex gap-2 items-center justify-center outline-none",
    "transition-all duration-150",
    "bg-ui-controls/60 px-3 text-base-fg hover:bg-ui-controls/90 border border-ui-controls-border",
    "active:scale-95 transform",
    u
  ), h = {
    top: "bottom-full",
    bottom: "top-full"
  }, U = {
    start: "left-0",
    center: "left-1/2 -translate-x-1/2",
    end: "right-0"
  }, [G, Q] = _e(!1), Z = ie(null), X = ie(null);
  Ne(() => () => {
    Z.current && clearTimeout(Z.current);
  }, []);
  const J = (D, F) => {
    s === "hoverSelect" && (Q(!0), Z.current && (clearTimeout(Z.current), Z.current = null), D || (Z.current = setTimeout(() => {
      F();
    }, 100)));
  }, I = (D) => {
    s === "hoverSelect" && (Q(!1), Z.current && clearTimeout(Z.current), Z.current = setTimeout(() => {
      G || D();
    }, 300));
  }, te = () => {
    s === "hoverSelect" && (Q(!0), Z.current && (clearTimeout(Z.current), Z.current = null));
  }, V = (D) => {
    s === "hoverSelect" && (Q(!1), Z.current && clearTimeout(Z.current), Z.current = setTimeout(() => {
      D();
    }, 300));
  };
  return /* @__PURE__ */ q("div", { className: "relative inline-block", children: /* @__PURE__ */ q(F9e, { children: ({ open: D, close: F }) => /* @__PURE__ */ Pe(Vt, { children: [
    (Ne(() => {
      w == null || w(D);
    }, [D]), null),
    /* @__PURE__ */ Pe(
      kK,
      {
        className: S,
        onMouseEnter: () => J(D, () => {
          X.current && !D && X.current.click();
        }),
        onMouseLeave: () => I(F),
        onClick: (R) => {
          s === "hoverSelect" && D && (R.preventDefault(), R.stopPropagation());
        },
        ref: X,
        children: [
          n,
          s === "toggle" && $ ? /* @__PURE__ */ q("span", { className: "truncate", children: $.label }) : null,
          s === "default" && l ? /* @__PURE__ */ q("span", { className: "truncate", children: l }) : null,
          s === "hoverSelect" && $ ? /* @__PURE__ */ Pe("div", { className: "flex items-center gap-1.5", children: [
            /* @__PURE__ */ q("span", { className: "opacity-70", children: l }),
            /* @__PURE__ */ Pe("div", { className: "flex items-center gap-2", children: [
              /* @__PURE__ */ q("span", { className: "truncate", children: $.label }),
              /* @__PURE__ */ q(Hg, { icon: F8e, className: "text-sm" })
            ] })
          ] }) : null
        ]
      }
    ),
    /* @__PURE__ */ q(
      b9e,
      {
        show: D,
        enter: "transition duration-100 ease-out",
        enterFrom: x === "bottom" ? "translate-y-2 opacity-0" : "-translate-y-2 opacity-0",
        enterTo: "translate-y-0 opacity-100",
        leave: "transition duration-100 ease-in",
        leaveFrom: "translate-y-0 opacity-100",
        leaveTo: x === "bottom" ? "translate-y-2 opacity-0" : "-translate-y-2 opacity-0",
        children: /* @__PURE__ */ q(
          $K,
          {
            static: !0,
            className: Za(
              "absolute transform-gpu z-10",
              h[x],
              U[b],
              x === "bottom" ? "origin-top" : "origin-bottom"
            ),
            children: /* @__PURE__ */ Pe(
              "div",
              {
                className: Za(
                  "z-10 min-w-48 mt-2 rounded-lg bg-ui-panel p-1.5 shadow-lg border border-ui-panel-border",
                  x === "top" ? "mb-2" : "mt-2",
                  f
                ),
                onMouseEnter: te,
                onMouseLeave: () => V(F),
                children: [
                  v && /* @__PURE__ */ Pe("div", { className: "mb-2 mt-0.5 flex justify-between px-1.5 text-sm font-normal text-base-fg opacity-70", children: [
                    v,
                    m && /* @__PURE__ */ q(
                      "button",
                      {
                        onClick: () => {
                          p == null || p(m), F();
                        },
                        className: "text-end text-sm text-base-fg/85 hover:underline",
                        children: m
                      }
                    )
                  ] }),
                  s === "default" && c ? /* @__PURE__ */ q("div", { className: "text-sm text-base-fg", children: typeof c == "function" ? c(F) : c }) : s === "hoverSelect" ? /* @__PURE__ */ Pe("div", { className: "flex flex-col gap-0 text-sm text-base-fg", children: [
                    e.map((R, H) => /* @__PURE__ */ Pe("div", { children: [
                      /* @__PURE__ */ q(
                        "div",
                        {
                          onClick: () => {
                            R.disabled || E(R, F);
                          },
                          className: Za(
                            "group flex cursor-pointer items-start gap-2 rounded-lg px-2 py-2 transition-all",
                            R.selected ? "bg-black/40 border-l-4 border-primary" : "hover:bg-black/20",
                            R.disabled ? "!cursor-not-allowed opacity-50" : ""
                          ),
                          style: { minHeight: 48 },
                          children: /* @__PURE__ */ Pe("div", { className: "flex items-center gap-2 w-full", children: [
                            /* @__PURE__ */ Pe("div", { className: "flex items-start gap-2 grow", children: [
                              i && /* @__PURE__ */ q("span", { className: "mt-1 flex h-5 w-5 items-center justify-center text-lg text-base-fg/80", children: R.icon }),
                              /* @__PURE__ */ Pe("div", { className: "flex flex-1 flex-col min-w-0", children: [
                                /* @__PURE__ */ q("div", { className: "flex items-center gap-2 min-w-0", children: /* @__PURE__ */ q("span", { className: "truncate font-semibold text-base-fg text-base", children: R.label }) }),
                                R.description && /* @__PURE__ */ q("div", { className: "truncate text-xs text-base-fg/60 mt-0.5", children: R.description }),
                                /* @__PURE__ */ q("div", { className: "flex flex-row gap-1 flex-wrap mt-1.5", children: R.badges && Array.isArray(R.badges) && R.badges.map((B, g) => /* @__PURE__ */ q(
                                  "div",
                                  {
                                    className: "flex items-center gap-1 min-w-0",
                                    children: /* @__PURE__ */ Pe("span", { className: "inline-flex items-center rounded bg-black/40 px-1.5 py-0.5 text-xs font-medium text-base-fg gap-1", children: [
                                      (B == null ? void 0 : B.icon) && /* @__PURE__ */ q("span", { children: B.icon }),
                                      (B == null ? void 0 : B.label) || ""
                                    ] })
                                  },
                                  g
                                )) })
                              ] })
                            ] }),
                            R.selected && /* @__PURE__ */ q("span", { className: "text-primary text-xl font-bold bg-white rounded-full p-0 h-4 w-4 flex items-center justify-center mr-1", children: /* @__PURE__ */ q(Hg, { icon: D8e }) })
                          ] })
                        }
                      ),
                      R.divider && /* @__PURE__ */ q("div", { className: "my-1 border-t border-white/10" })
                    ] }, H)),
                    o && r && /* @__PURE__ */ q(
                      o$,
                      {
                        variant: "secondary",
                        className: Za(
                          "w-full mb-0.5 mt-2 border-none py-1",
                          a ? "cursor-not-allowed bg-[#7B7B84]/50 opacity-50" : "bg-[#7B7B84] hover:bg-[#8c8c96]"
                        ),
                        onClick: r,
                        disabled: a,
                        children: "+ Add"
                      }
                    )
                  ] }) : /* @__PURE__ */ Pe("div", { className: "flex flex-col gap-0 text-sm text-base-fg", children: [
                    e.map((R, H) => /* @__PURE__ */ Pe("div", { children: [
                      /* @__PURE__ */ Pe(
                        o$,
                        {
                          className: Za(
                            "flex w-full items-center shadow-none justify-between px-1.5",
                            "bg-transparent hover:bg-ui-controls/60",
                            s === "toggle" && R.selected ? "hover:bg-ui-controls/80" : "",
                            R.disabled ? "!cursor-not-allowed opacity-50" : "",
                            "border-0"
                          ),
                          onClick: () => !R.disabled && E(R, F),
                          variant: "secondary",
                          disabled: R.disabled,
                          children: [
                            /* @__PURE__ */ Pe("div", { className: "flex items-center gap-2 truncate", children: [
                              i && R.icon,
                              s === "toggle" ? /* @__PURE__ */ q(
                                "span",
                                {
                                  className: Za(
                                    "truncate",
                                    R.selected ? "text-base-fg" : "text-base-fg/70"
                                  ),
                                  children: R.label
                                }
                              ) : /* @__PURE__ */ q("span", { className: "truncate", children: R.label })
                            ] }),
                            s === "toggle" && /* @__PURE__ */ q(
                              "span",
                              {
                                className: Za(
                                  "ml-2 h-5 w-5 rounded-full border flex items-center justify-center transition-colors",
                                  R.selected ? "border-primary bg-primary" : "border-transparent bg-transparent"
                                ),
                                children: R.selected && /* @__PURE__ */ q(
                                  Hg,
                                  {
                                    icon: L8e,
                                    className: "text-base-fg text-xs font-bold"
                                  }
                                )
                              }
                            )
                          ]
                        }
                      ),
                      R.divider && /* @__PURE__ */ q("div", { className: "my-1 border-t border-white/10" })
                    ] }, H)),
                    o && r && /* @__PURE__ */ q(
                      o$,
                      {
                        variant: "secondary",
                        className: Za(
                          "w-full mb-0.5 mt-2 py-1 border-0",
                          a ? "cursor-not-allowed opacity-50" : ""
                        ),
                        onClick: r,
                        disabled: a,
                        children: "+ Add"
                      }
                    )
                  ] })
                ]
              }
            )
          }
        )
      }
    )
  ] }) }) });
};
var W8e = Object.defineProperty, U8e = (e, t, r) => t in e ? W8e(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r }) : e[t] = r, b$ = (e, t, r) => (U8e(e, typeof t != "symbol" ? t + "" : t, r), r);
let Y8e = class {
  constructor() {
    b$(this, "current", this.detect()), b$(this, "handoffState", "pending"), b$(this, "currentId", 0);
  }
  set(e) {
    this.current !== e && (this.handoffState = "pending", this.currentId = 0, this.current = e);
  }
  reset() {
    this.set(this.detect());
  }
  nextId() {
    return ++this.currentId;
  }
  get isServer() {
    return this.current === "server";
  }
  get isClient() {
    return this.current === "client";
  }
  detect() {
    return typeof window > "u" || typeof document > "u" ? "server" : "client";
  }
  handoff() {
    this.handoffState === "pending" && (this.handoffState = "complete");
  }
  get isHandoffComplete() {
    return this.handoffState === "complete";
  }
}, $v = new Y8e();
function H8e(e) {
  typeof queueMicrotask == "function" ? queueMicrotask(e) : Promise.resolve().then(e).catch((t) => setTimeout(() => {
    throw t;
  }));
}
function Sx() {
  let e = [], t = { addEventListener(r, n, o, a) {
    return r.addEventListener(n, o, a), t.add(() => r.removeEventListener(n, o, a));
  }, requestAnimationFrame(...r) {
    let n = requestAnimationFrame(...r);
    return t.add(() => cancelAnimationFrame(n));
  }, nextFrame(...r) {
    return t.requestAnimationFrame(() => t.requestAnimationFrame(...r));
  }, setTimeout(...r) {
    let n = setTimeout(...r);
    return t.add(() => clearTimeout(n));
  }, microTask(...r) {
    let n = { current: !0 };
    return H8e(() => {
      n.current && r[0]();
    }), t.add(() => {
      n.current = !1;
    });
  }, style(r, n, o) {
    let a = r.style.getPropertyValue(n);
    return Object.assign(r.style, { [n]: o }), this.add(() => {
      Object.assign(r.style, { [n]: a });
    });
  }, group(r) {
    let n = Sx();
    return r(n), this.add(() => n.dispose());
  }, add(r) {
    return e.includes(r) || e.push(r), () => {
      let n = e.indexOf(r);
      if (n >= 0) for (let o of e.splice(n, 1)) o();
    };
  }, dispose() {
    for (let r of e.splice(0)) r();
  } };
  return t;
}
function oQ() {
  let [e] = _e(Sx);
  return Ne(() => () => e.dispose(), [e]), e;
}
let Fl = (e, t) => {
  $v.isServer ? Ne(e, t) : Ri(e, t);
};
function aQ(e) {
  let t = ie(e);
  return Fl(() => {
    t.current = e;
  }, [e]), t;
}
let ci = function(e) {
  let t = aQ(e);
  return ce.useCallback((...r) => t.current(...r), [t]);
};
function kE(...e) {
  return Array.from(new Set(e.flatMap((t) => typeof t == "string" ? t.split(" ") : []))).filter(Boolean).join(" ");
}
function Px(e, t, ...r) {
  if (e in t) {
    let o = t[e];
    return typeof o == "function" ? o(...r) : o;
  }
  let n = new Error(`Tried to handle "${e}" but there is no handler defined. Only defined handlers are: ${Object.keys(t).map((o) => `"${o}"`).join(", ")}.`);
  throw Error.captureStackTrace && Error.captureStackTrace(n, Px), n;
}
var iQ = ((e) => (e[e.None = 0] = "None", e[e.RenderStrategy = 1] = "RenderStrategy", e[e.Static = 2] = "Static", e))(iQ || {}), Nl = ((e) => (e[e.Unmount = 0] = "Unmount", e[e.Hidden = 1] = "Hidden", e))(Nl || {});
function sQ() {
  let e = q8e();
  return et((t) => G8e({ mergeRefs: e, ...t }), [e]);
}
function G8e({ ourProps: e, theirProps: t, slot: r, defaultTag: n, features: o, visible: a = !0, name: i, mergeRefs: s }) {
  s = s ?? B8e;
  let l = lQ(t, e);
  if (a) return Iy(l, r, n, i, s);
  let c = o ?? 0;
  if (c & 2) {
    let { static: u = !1, ...f } = l;
    if (u) return Iy(f, r, n, i, s);
  }
  if (c & 1) {
    let { unmount: u = !0, ...f } = l;
    return Px(u ? 0 : 1, { 0() {
      return null;
    }, 1() {
      return Iy({ ...f, hidden: !0, style: { display: "none" } }, r, n, i, s);
    } });
  }
  return Iy(l, r, n, i, s);
}
function Iy(e, t = {}, r, n, o) {
  let { as: a = r, children: i, refName: s = "ref", ...l } = y$(e, ["unmount", "static"]), c = e.ref !== void 0 ? { [s]: e.ref } : {}, u = typeof i == "function" ? i(t) : i;
  "className" in l && l.className && typeof l.className == "function" && (l.className = l.className(t)), l["aria-labelledby"] && l["aria-labelledby"] === l.id && (l["aria-labelledby"] = void 0);
  let f = {};
  if (t) {
    let p = !1, v = [];
    for (let [x, b] of Object.entries(t)) typeof b == "boolean" && (p = !0), b === !0 && v.push(x.replace(/([A-Z])/g, (m) => `-${m.toLowerCase()}`));
    if (p) {
      f["data-headlessui-state"] = v.join(" ");
      for (let x of v) f[`data-${x}`] = "";
    }
  }
  if (a === ar && (Object.keys(Ic(l)).length > 0 || Object.keys(Ic(f)).length > 0)) if (!Dl(u) || Array.isArray(u) && u.length > 1) {
    if (Object.keys(Ic(l)).length > 0) throw new Error(['Passing props on "Fragment"!', "", `The current component <${n} /> is rendering a "Fragment".`, "However we need to passthrough the following props:", Object.keys(Ic(l)).concat(Object.keys(Ic(f))).map((p) => `  - ${p}`).join(`
`), "", "You can apply a few solutions:", ['Add an `as="..."` prop, to ensure that we render an actual element instead of a "Fragment".', "Render a single element as the child so that we can forward the props onto that element."].map((p) => `  - ${p}`).join(`
`)].join(`
`));
  } else {
    let p = u.props, v = p == null ? void 0 : p.className, x = typeof v == "function" ? (...w) => kE(v(...w), l.className) : kE(v, l.className), b = x ? { className: x } : {}, m = lQ(u.props, Ic(y$(l, ["ref"])));
    for (let w in f) w in m && delete f[w];
    return Ll(u, Object.assign({}, m, f, c, { ref: o(X8e(u), c.ref) }, b));
  }
  return N1(a, Object.assign({}, y$(l, ["ref"]), a !== ar && c, a !== ar && f), u);
}
function q8e() {
  let e = ie([]), t = et((r) => {
    for (let n of e.current) n != null && (typeof n == "function" ? n(r) : n.current = r);
  }, []);
  return (...r) => {
    if (!r.every((n) => n == null)) return e.current = r, t;
  };
}
function B8e(...e) {
  return e.every((t) => t == null) ? void 0 : (t) => {
    for (let r of e) r != null && (typeof r == "function" ? r(t) : r.current = t);
  };
}
function lQ(...e) {
  if (e.length === 0) return {};
  if (e.length === 1) return e[0];
  let t = {}, r = {};
  for (let n of e) for (let o in n) o.startsWith("on") && typeof n[o] == "function" ? (r[o] != null || (r[o] = []), r[o].push(n[o])) : t[o] = n[o];
  if (t.disabled || t["aria-disabled"]) for (let n in r) /^(on(?:Click|Pointer|Mouse|Key)(?:Down|Up|Press)?)$/.test(n) && (r[n] = [(o) => {
    var a;
    return (a = o == null ? void 0 : o.preventDefault) == null ? void 0 : a.call(o);
  }]);
  for (let n in r) Object.assign(t, { [n](o, ...a) {
    let i = r[n];
    for (let s of i) {
      if ((o instanceof Event || (o == null ? void 0 : o.nativeEvent) instanceof Event) && o.defaultPrevented) return;
      s(o, ...a);
    }
  } });
  return t;
}
function L6(e) {
  var t;
  return Object.assign(Pd(e), { displayName: (t = e.displayName) != null ? t : e.name });
}
function Ic(e) {
  let t = Object.assign({}, e);
  for (let r in t) t[r] === void 0 && delete t[r];
  return t;
}
function y$(e, t = []) {
  let r = Object.assign({}, e);
  for (let n of t) n in r && delete r[n];
  return r;
}
function X8e(e) {
  return ce.version.split(".")[0] >= "19" ? e.props.ref : e.ref;
}
let K8e = Symbol();
function cQ(...e) {
  let t = ie(e);
  Ne(() => {
    t.current = e;
  }, [e]);
  let r = ci((n) => {
    for (let o of t.current) o != null && (typeof o == "function" ? o(n) : o.current = n);
  });
  return e.every((n) => n == null || (n == null ? void 0 : n[K8e])) ? void 0 : r;
}
function J8e(e = 0) {
  let [t, r] = _e(e), n = et((l) => r(l), [t]), o = et((l) => r((c) => c | l), [t]), a = et((l) => (t & l) === l, [t]), i = et((l) => r((c) => c & ~l), [r]), s = et((l) => r((c) => c ^ l), [r]);
  return { flags: t, setFlag: n, addFlag: o, hasFlag: a, removeFlag: i, toggleFlag: s };
}
var g8, h8;
typeof process < "u" && typeof globalThis < "u" && typeof Element < "u" && ((g8 = process == null ? void 0 : process.env) == null ? void 0 : g8.NODE_ENV) === "test" && typeof ((h8 = Element == null ? void 0 : Element.prototype) == null ? void 0 : h8.getAnimations) > "u" && (Element.prototype.getAnimations = function() {
  return console.warn(["Headless UI has polyfilled `Element.prototype.getAnimations` for your tests.", "Please install a proper polyfill e.g. `jsdom-testing-mocks`, to silence these warnings.", "", "Example usage:", "```js", "import { mockAnimationsApi } from 'jsdom-testing-mocks'", "mockAnimationsApi()", "```"].join(`
`)), [];
});
var Q8e = ((e) => (e[e.None = 0] = "None", e[e.Closed = 1] = "Closed", e[e.Enter = 2] = "Enter", e[e.Leave = 4] = "Leave", e))(Q8e || {});
function Z8e(e) {
  let t = {};
  for (let r in e) e[r] === !0 && (t[`data-${r}`] = "");
  return t;
}
function eFe(e, t, r, n) {
  let [o, a] = _e(r), { hasFlag: i, addFlag: s, removeFlag: l } = J8e(e && o ? 3 : 0), c = ie(!1), u = ie(!1), f = oQ();
  return Fl(() => {
    var p;
    if (e) {
      if (r && a(!0), !t) {
        r && s(3);
        return;
      }
      return (p = n == null ? void 0 : n.start) == null || p.call(n, r), tFe(t, { inFlight: c, prepare() {
        u.current ? u.current = !1 : u.current = c.current, c.current = !0, !u.current && (r ? (s(3), l(4)) : (s(4), l(2)));
      }, run() {
        u.current ? r ? (l(3), s(4)) : (l(4), s(3)) : r ? l(1) : s(1);
      }, done() {
        var v;
        u.current && typeof t.getAnimations == "function" && t.getAnimations().length > 0 || (c.current = !1, l(7), r || a(!1), (v = n == null ? void 0 : n.end) == null || v.call(n, r));
      } });
    }
  }, [e, r, t, f]), e ? [o, { closed: i(1), enter: i(2), leave: i(4), transition: i(2) || i(4) }] : [r, { closed: void 0, enter: void 0, leave: void 0, transition: void 0 }];
}
function tFe(e, { prepare: t, run: r, done: n, inFlight: o }) {
  let a = Sx();
  return nFe(e, { prepare: t, inFlight: o }), a.nextFrame(() => {
    r(), a.requestAnimationFrame(() => {
      a.add(rFe(e, n));
    });
  }), a.dispose;
}
function rFe(e, t) {
  var r, n;
  let o = Sx();
  if (!e) return o.dispose;
  let a = !1;
  o.add(() => {
    a = !0;
  });
  let i = (n = (r = e.getAnimations) == null ? void 0 : r.call(e).filter((s) => s instanceof CSSTransition)) != null ? n : [];
  return i.length === 0 ? (t(), o.dispose) : (Promise.allSettled(i.map((s) => s.finished)).then(() => {
    a || t();
  }), o.dispose);
}
function nFe(e, { inFlight: t, prepare: r }) {
  if (t != null && t.current) {
    r();
    return;
  }
  let n = e.style.transition;
  e.style.transition = "none", r(), e.offsetHeight, e.style.transition = n;
}
let V6 = Br(null);
V6.displayName = "OpenClosedContext";
var Qc = ((e) => (e[e.Open = 1] = "Open", e[e.Closed = 2] = "Closed", e[e.Closing = 4] = "Closing", e[e.Opening = 8] = "Opening", e))(Qc || {});
function uQ() {
  return Ut(V6);
}
function oFe({ value: e, children: t }) {
  return ce.createElement(V6.Provider, { value: e }, t);
}
function aFe() {
  let e = typeof document > "u";
  return "useSyncExternalStore" in Y ? ((t) => t.useSyncExternalStore)(Y)(() => () => {
  }, () => !1, () => !e) : !1;
}
function fQ() {
  let e = aFe(), [t, r] = Y.useState($v.isHandoffComplete);
  return t && $v.isHandoffComplete === !1 && r(!1), Y.useEffect(() => {
    t !== !0 && r(!0);
  }, [t]), Y.useEffect(() => $v.handoff(), []), e ? !1 : t;
}
function iFe() {
  let e = ie(!1);
  return Fl(() => (e.current = !0, () => {
    e.current = !1;
  }), []), e;
}
function dQ(e) {
  var t;
  return !!(e.enter || e.enterFrom || e.enterTo || e.leave || e.leaveFrom || e.leaveTo) || ((t = e.as) != null ? t : mQ) !== ar || ce.Children.count(e.children) === 1;
}
let Cx = Br(null);
Cx.displayName = "TransitionContext";
var sFe = ((e) => (e.Visible = "visible", e.Hidden = "hidden", e))(sFe || {});
function lFe() {
  let e = Ut(Cx);
  if (e === null) throw new Error("A <Transition.Child /> is used but it is missing a parent <Transition /> or <Transition.Root />.");
  return e;
}
function cFe() {
  let e = Ut(Ax);
  if (e === null) throw new Error("A <Transition.Child /> is used but it is missing a parent <Transition /> or <Transition.Root />.");
  return e;
}
let Ax = Br(null);
Ax.displayName = "NestingContext";
function _x(e) {
  return "children" in e ? _x(e.children) : e.current.filter(({ el: t }) => t.current !== null).filter(({ state: t }) => t === "visible").length > 0;
}
function pQ(e, t) {
  let r = aQ(e), n = ie([]), o = iFe(), a = oQ(), i = ci((v, x = Nl.Hidden) => {
    let b = n.current.findIndex(({ el: m }) => m === v);
    b !== -1 && (Px(x, { [Nl.Unmount]() {
      n.current.splice(b, 1);
    }, [Nl.Hidden]() {
      n.current[b].state = "hidden";
    } }), a.microTask(() => {
      var m;
      !_x(n) && o.current && ((m = r.current) == null || m.call(r));
    }));
  }), s = ci((v) => {
    let x = n.current.find(({ el: b }) => b === v);
    return x ? x.state !== "visible" && (x.state = "visible") : n.current.push({ el: v, state: "visible" }), () => i(v, Nl.Unmount);
  }), l = ie([]), c = ie(Promise.resolve()), u = ie({ enter: [], leave: [] }), f = ci((v, x, b) => {
    l.current.splice(0), t && (t.chains.current[x] = t.chains.current[x].filter(([m]) => m !== v)), t == null || t.chains.current[x].push([v, new Promise((m) => {
      l.current.push(m);
    })]), t == null || t.chains.current[x].push([v, new Promise((m) => {
      Promise.all(u.current[x].map(([w, $]) => $)).then(() => m());
    })]), x === "enter" ? c.current = c.current.then(() => t == null ? void 0 : t.wait.current).then(() => b(x)) : b(x);
  }), p = ci((v, x, b) => {
    Promise.all(u.current[x].splice(0).map(([m, w]) => w)).then(() => {
      var m;
      (m = l.current.shift()) == null || m();
    }).then(() => b(x));
  });
  return Yt(() => ({ children: n, register: s, unregister: i, onStart: f, onStop: p, wait: c, chains: u }), [s, i, n, f, p, u, c]);
}
let mQ = ar, gQ = iQ.RenderStrategy;
function uFe(e, t) {
  var r, n;
  let { transition: o = !0, beforeEnter: a, afterEnter: i, beforeLeave: s, afterLeave: l, enter: c, enterFrom: u, enterTo: f, entered: p, leave: v, leaveFrom: x, leaveTo: b, ...m } = e, [w, $] = _e(null), E = ie(null), S = dQ(e), h = cQ(...S ? [E, t, $] : t === null ? [] : [t]), U = (r = m.unmount) == null || r ? Nl.Unmount : Nl.Hidden, { show: G, appear: Q, initial: Z } = lFe(), [X, J] = _e(G ? "visible" : "hidden"), I = cFe(), { register: te, unregister: V } = I;
  Fl(() => te(E), [te, E]), Fl(() => {
    if (U === Nl.Hidden && E.current) {
      if (G && X !== "visible") {
        J("visible");
        return;
      }
      return Px(X, { hidden: () => V(E), visible: () => te(E) });
    }
  }, [X, E, te, V, G, U]);
  let D = fQ();
  Fl(() => {
    if (S && D && X === "visible" && E.current === null) throw new Error("Did you forget to passthrough the `ref` to the actual DOM node?");
  }, [E, X, D, S]);
  let F = Z && !Q, R = Q && G && Z, H = ie(!1), B = pQ(() => {
    H.current || (J("hidden"), V(E));
  }, I), g = ci((_) => {
    H.current = !0;
    let T = _ ? "enter" : "leave";
    B.onStart(E, T, (M) => {
      M === "enter" ? a == null || a() : M === "leave" && (s == null || s());
    });
  }), d = ci((_) => {
    let T = _ ? "enter" : "leave";
    H.current = !1, B.onStop(E, T, (M) => {
      M === "enter" ? i == null || i() : M === "leave" && (l == null || l());
    }), T === "leave" && !_x(B) && (J("hidden"), V(E));
  });
  Ne(() => {
    S && o || (g(G), d(G));
  }, [G, S, o]);
  let O = !(!o || !S || !D || F), [, C] = eFe(O, w, G, { start: g, end: d }), A = Ic({ ref: h, className: ((n = kE(m.className, R && c, R && u, C.enter && c, C.enter && C.closed && u, C.enter && !C.closed && f, C.leave && v, C.leave && !C.closed && x, C.leave && C.closed && b, !C.transition && G && p)) == null ? void 0 : n.trim()) || void 0, ...Z8e(C) }), N = 0;
  X === "visible" && (N |= Qc.Open), X === "hidden" && (N |= Qc.Closed), G && X === "hidden" && (N |= Qc.Opening), !G && X === "visible" && (N |= Qc.Closing);
  let j = sQ();
  return ce.createElement(Ax.Provider, { value: B }, ce.createElement(oFe, { value: N }, j({ ourProps: A, theirProps: m, defaultTag: mQ, features: gQ, visible: X === "visible", name: "Transition.Child" })));
}
function fFe(e, t) {
  let { show: r, appear: n = !1, unmount: o = !0, ...a } = e, i = ie(null), s = dQ(e), l = cQ(...s ? [i, t] : t === null ? [] : [t]);
  fQ();
  let c = uQ();
  if (r === void 0 && c !== null && (r = (c & Qc.Open) === Qc.Open), r === void 0) throw new Error("A <Transition /> is used but it is missing a `show={true | false}` prop.");
  let [u, f] = _e(r ? "visible" : "hidden"), p = pQ(() => {
    r || f("hidden");
  }), [v, x] = _e(!0), b = ie([r]);
  Fl(() => {
    v !== !1 && b.current[b.current.length - 1] !== r && (b.current.push(r), x(!1));
  }, [b, r]);
  let m = Yt(() => ({ show: r, appear: n, initial: v }), [r, n, v]);
  Fl(() => {
    r ? f("visible") : !_x(p) && i.current !== null && f("hidden");
  }, [r, p]);
  let w = { unmount: o }, $ = ci(() => {
    var h;
    v && x(!1), (h = e.beforeEnter) == null || h.call(e);
  }), E = ci(() => {
    var h;
    v && x(!1), (h = e.beforeLeave) == null || h.call(e);
  }), S = sQ();
  return ce.createElement(Ax.Provider, { value: p }, ce.createElement(Cx.Provider, { value: m }, S({ ourProps: { ...w, as: ar, children: ce.createElement(hQ, { ref: l, ...w, ...a, beforeEnter: $, beforeLeave: E }) }, theirProps: {}, defaultTag: ar, features: gQ, visible: u === "visible", name: "Transition" })));
}
function dFe(e, t) {
  let r = Ut(Cx) !== null, n = uQ() !== null;
  return ce.createElement(ce.Fragment, null, !r && n ? ce.createElement($E, { ref: t, ...e }) : ce.createElement(hQ, { ref: t, ...e }));
}
let $E = L6(fFe), hQ = L6(uFe), pFe = L6(dFe), mFe = Object.assign($E, { Child: pFe, Root: $E });
const W6 = "-", gFe = (e) => {
  const t = bFe(e), {
    conflictingClassGroups: r,
    conflictingClassGroupModifiers: n
  } = e;
  return {
    getClassGroupId: (o) => {
      const a = o.split(W6);
      return a[0] === "" && a.length !== 1 && a.shift(), bQ(a, t) || hFe(o);
    },
    getConflictingClassGroupIds: (o, a) => {
      const i = r[o] || [];
      return a && n[o] ? [...i, ...n[o]] : i;
    }
  };
}, bQ = (e, t) => {
  var r;
  if (e.length === 0)
    return t.classGroupId;
  const n = e[0], o = t.nextPart.get(n), a = o ? bQ(e.slice(1), o) : void 0;
  if (a)
    return a;
  if (t.validators.length === 0)
    return;
  const i = e.join(W6);
  return (r = t.validators.find(({
    validator: s
  }) => s(i))) == null ? void 0 : r.classGroupId;
}, b8 = /^\[(.+)\]$/, hFe = (e) => {
  if (b8.test(e)) {
    const t = b8.exec(e)[1], r = t == null ? void 0 : t.substring(0, t.indexOf(":"));
    if (r)
      return "arbitrary.." + r;
  }
}, bFe = (e) => {
  const {
    theme: t,
    prefix: r
  } = e, n = {
    nextPart: /* @__PURE__ */ new Map(),
    validators: []
  };
  return vFe(Object.entries(e.classGroups), r).forEach(([o, a]) => {
    OE(a, n, o, t);
  }), n;
}, OE = (e, t, r, n) => {
  e.forEach((o) => {
    if (typeof o == "string") {
      const a = o === "" ? t : y8(t, o);
      a.classGroupId = r;
      return;
    }
    if (typeof o == "function") {
      if (yFe(o)) {
        OE(o(n), t, r, n);
        return;
      }
      t.validators.push({
        validator: o,
        classGroupId: r
      });
      return;
    }
    Object.entries(o).forEach(([a, i]) => {
      OE(i, y8(t, a), r, n);
    });
  });
}, y8 = (e, t) => {
  let r = e;
  return t.split(W6).forEach((n) => {
    r.nextPart.has(n) || r.nextPart.set(n, {
      nextPart: /* @__PURE__ */ new Map(),
      validators: []
    }), r = r.nextPart.get(n);
  }), r;
}, yFe = (e) => e.isThemeGetter, vFe = (e, t) => t ? e.map(([r, n]) => {
  const o = n.map((a) => typeof a == "string" ? t + a : typeof a == "object" ? Object.fromEntries(Object.entries(a).map(([i, s]) => [t + i, s])) : a);
  return [r, o];
}) : e, xFe = (e) => {
  if (e < 1)
    return {
      get: () => {
      },
      set: () => {
      }
    };
  let t = 0, r = /* @__PURE__ */ new Map(), n = /* @__PURE__ */ new Map();
  const o = (a, i) => {
    r.set(a, i), t++, t > e && (t = 0, n = r, r = /* @__PURE__ */ new Map());
  };
  return {
    get(a) {
      let i = r.get(a);
      if (i !== void 0)
        return i;
      if ((i = n.get(a)) !== void 0)
        return o(a, i), i;
    },
    set(a, i) {
      r.has(a) ? r.set(a, i) : o(a, i);
    }
  };
}, yQ = "!", wFe = (e) => {
  const {
    separator: t,
    experimentalParseClassName: r
  } = e, n = t.length === 1, o = t[0], a = t.length, i = (s) => {
    const l = [];
    let c = 0, u = 0, f;
    for (let m = 0; m < s.length; m++) {
      let w = s[m];
      if (c === 0) {
        if (w === o && (n || s.slice(m, m + a) === t)) {
          l.push(s.slice(u, m)), u = m + a;
          continue;
        }
        if (w === "/") {
          f = m;
          continue;
        }
      }
      w === "[" ? c++ : w === "]" && c--;
    }
    const p = l.length === 0 ? s : s.substring(u), v = p.startsWith(yQ), x = v ? p.substring(1) : p, b = f && f > u ? f - u : void 0;
    return {
      modifiers: l,
      hasImportantModifier: v,
      baseClassName: x,
      maybePostfixModifierPosition: b
    };
  };
  return r ? (s) => r({
    className: s,
    parseClassName: i
  }) : i;
}, kFe = (e) => {
  if (e.length <= 1)
    return e;
  const t = [];
  let r = [];
  return e.forEach((n) => {
    n[0] === "[" ? (t.push(...r.sort(), n), r = []) : r.push(n);
  }), t.push(...r.sort()), t;
}, $Fe = (e) => ({
  cache: xFe(e.cacheSize),
  parseClassName: wFe(e),
  ...gFe(e)
}), OFe = /\s+/, EFe = (e, t) => {
  const {
    parseClassName: r,
    getClassGroupId: n,
    getConflictingClassGroupIds: o
  } = t, a = [], i = e.trim().split(OFe);
  let s = "";
  for (let l = i.length - 1; l >= 0; l -= 1) {
    const c = i[l], {
      modifiers: u,
      hasImportantModifier: f,
      baseClassName: p,
      maybePostfixModifierPosition: v
    } = r(c);
    let x = !!v, b = n(x ? p.substring(0, v) : p);
    if (!b) {
      if (!x) {
        s = c + (s.length > 0 ? " " + s : s);
        continue;
      }
      if (b = n(p), !b) {
        s = c + (s.length > 0 ? " " + s : s);
        continue;
      }
      x = !1;
    }
    const m = kFe(u).join(":"), w = f ? m + yQ : m, $ = w + b;
    if (a.includes($))
      continue;
    a.push($);
    const E = o(b, x);
    for (let S = 0; S < E.length; ++S) {
      const h = E[S];
      a.push(w + h);
    }
    s = c + (s.length > 0 ? " " + s : s);
  }
  return s;
};
function SFe() {
  let e = 0, t, r, n = "";
  for (; e < arguments.length; )
    (t = arguments[e++]) && (r = vQ(t)) && (n && (n += " "), n += r);
  return n;
}
const vQ = (e) => {
  if (typeof e == "string")
    return e;
  let t, r = "";
  for (let n = 0; n < e.length; n++)
    e[n] && (t = vQ(e[n])) && (r && (r += " "), r += t);
  return r;
};
function PFe(e, ...t) {
  let r, n, o, a = i;
  function i(l) {
    const c = t.reduce((u, f) => f(u), e());
    return r = $Fe(c), n = r.cache.get, o = r.cache.set, a = s, s(l);
  }
  function s(l) {
    const c = n(l);
    if (c)
      return c;
    const u = EFe(l, r);
    return o(l, u), u;
  }
  return function() {
    return a(SFe.apply(null, arguments));
  };
}
const Tr = (e) => {
  const t = (r) => r[e] || [];
  return t.isThemeGetter = !0, t;
}, xQ = /^\[(?:([a-z-]+):)?(.+)\]$/i, CFe = /^\d+\/\d+$/, AFe = /* @__PURE__ */ new Set(["px", "full", "screen"]), _Fe = /^(\d+(\.\d+)?)?(xs|sm|md|lg|xl)$/, NFe = /\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\b(calc|min|max|clamp)\(.+\)|^0$/, jFe = /^(rgba?|hsla?|hwb|(ok)?(lab|lch))\(.+\)$/, IFe = /^(inset_)?-?((\d+)?\.?(\d+)[a-z]+|0)_-?((\d+)?\.?(\d+)[a-z]+|0)/, TFe = /^(url|image|image-set|cross-fade|element|(repeating-)?(linear|radial|conic)-gradient)\(.+\)$/, ti = (e) => ad(e) || AFe.has(e) || CFe.test(e), ml = (e) => ap(e, "length", WFe), ad = (e) => !!e && !Number.isNaN(Number(e)), v$ = (e) => ap(e, "number", ad), Hm = (e) => !!e && Number.isInteger(Number(e)), MFe = (e) => e.endsWith("%") && ad(e.slice(0, -1)), xt = (e) => xQ.test(e), gl = (e) => _Fe.test(e), RFe = /* @__PURE__ */ new Set(["length", "size", "percentage"]), zFe = (e) => ap(e, RFe, wQ), FFe = (e) => ap(e, "position", wQ), DFe = /* @__PURE__ */ new Set(["image", "url"]), LFe = (e) => ap(e, DFe, YFe), VFe = (e) => ap(e, "", UFe), Gm = () => !0, ap = (e, t, r) => {
  const n = xQ.exec(e);
  return n ? n[1] ? typeof t == "string" ? n[1] === t : t.has(n[1]) : r(n[2]) : !1;
}, WFe = (e) => (
  // `colorFunctionRegex` check is necessary because color functions can have percentages in them which which would be incorrectly classified as lengths.
  // For example, `hsl(0 0% 0%)` would be classified as a length without this check.
  // I could also use lookbehind assertion in `lengthUnitRegex` but that isn't supported widely enough.
  NFe.test(e) && !jFe.test(e)
), wQ = () => !1, UFe = (e) => IFe.test(e), YFe = (e) => TFe.test(e), HFe = () => {
  const e = Tr("colors"), t = Tr("spacing"), r = Tr("blur"), n = Tr("brightness"), o = Tr("borderColor"), a = Tr("borderRadius"), i = Tr("borderSpacing"), s = Tr("borderWidth"), l = Tr("contrast"), c = Tr("grayscale"), u = Tr("hueRotate"), f = Tr("invert"), p = Tr("gap"), v = Tr("gradientColorStops"), x = Tr("gradientColorStopPositions"), b = Tr("inset"), m = Tr("margin"), w = Tr("opacity"), $ = Tr("padding"), E = Tr("saturate"), S = Tr("scale"), h = Tr("sepia"), U = Tr("skew"), G = Tr("space"), Q = Tr("translate"), Z = () => ["auto", "contain", "none"], X = () => ["auto", "hidden", "clip", "visible", "scroll"], J = () => ["auto", xt, t], I = () => [xt, t], te = () => ["", ti, ml], V = () => ["auto", ad, xt], D = () => ["bottom", "center", "left", "left-bottom", "left-top", "right", "right-bottom", "right-top", "top"], F = () => ["solid", "dashed", "dotted", "double", "none"], R = () => ["normal", "multiply", "screen", "overlay", "darken", "lighten", "color-dodge", "color-burn", "hard-light", "soft-light", "difference", "exclusion", "hue", "saturation", "color", "luminosity"], H = () => ["start", "end", "center", "between", "around", "evenly", "stretch"], B = () => ["", "0", xt], g = () => ["auto", "avoid", "all", "avoid-page", "page", "left", "right", "column"], d = () => [ad, xt];
  return {
    cacheSize: 500,
    separator: ":",
    theme: {
      colors: [Gm],
      spacing: [ti, ml],
      blur: ["none", "", gl, xt],
      brightness: d(),
      borderColor: [e],
      borderRadius: ["none", "", "full", gl, xt],
      borderSpacing: I(),
      borderWidth: te(),
      contrast: d(),
      grayscale: B(),
      hueRotate: d(),
      invert: B(),
      gap: I(),
      gradientColorStops: [e],
      gradientColorStopPositions: [MFe, ml],
      inset: J(),
      margin: J(),
      opacity: d(),
      padding: I(),
      saturate: d(),
      scale: d(),
      sepia: B(),
      skew: d(),
      space: I(),
      translate: I()
    },
    classGroups: {
      // Layout
      /**
       * Aspect Ratio
       * @see https://tailwindcss.com/docs/aspect-ratio
       */
      aspect: [{
        aspect: ["auto", "square", "video", xt]
      }],
      /**
       * Container
       * @see https://tailwindcss.com/docs/container
       */
      container: ["container"],
      /**
       * Columns
       * @see https://tailwindcss.com/docs/columns
       */
      columns: [{
        columns: [gl]
      }],
      /**
       * Break After
       * @see https://tailwindcss.com/docs/break-after
       */
      "break-after": [{
        "break-after": g()
      }],
      /**
       * Break Before
       * @see https://tailwindcss.com/docs/break-before
       */
      "break-before": [{
        "break-before": g()
      }],
      /**
       * Break Inside
       * @see https://tailwindcss.com/docs/break-inside
       */
      "break-inside": [{
        "break-inside": ["auto", "avoid", "avoid-page", "avoid-column"]
      }],
      /**
       * Box Decoration Break
       * @see https://tailwindcss.com/docs/box-decoration-break
       */
      "box-decoration": [{
        "box-decoration": ["slice", "clone"]
      }],
      /**
       * Box Sizing
       * @see https://tailwindcss.com/docs/box-sizing
       */
      box: [{
        box: ["border", "content"]
      }],
      /**
       * Display
       * @see https://tailwindcss.com/docs/display
       */
      display: ["block", "inline-block", "inline", "flex", "inline-flex", "table", "inline-table", "table-caption", "table-cell", "table-column", "table-column-group", "table-footer-group", "table-header-group", "table-row-group", "table-row", "flow-root", "grid", "inline-grid", "contents", "list-item", "hidden"],
      /**
       * Floats
       * @see https://tailwindcss.com/docs/float
       */
      float: [{
        float: ["right", "left", "none", "start", "end"]
      }],
      /**
       * Clear
       * @see https://tailwindcss.com/docs/clear
       */
      clear: [{
        clear: ["left", "right", "both", "none", "start", "end"]
      }],
      /**
       * Isolation
       * @see https://tailwindcss.com/docs/isolation
       */
      isolation: ["isolate", "isolation-auto"],
      /**
       * Object Fit
       * @see https://tailwindcss.com/docs/object-fit
       */
      "object-fit": [{
        object: ["contain", "cover", "fill", "none", "scale-down"]
      }],
      /**
       * Object Position
       * @see https://tailwindcss.com/docs/object-position
       */
      "object-position": [{
        object: [...D(), xt]
      }],
      /**
       * Overflow
       * @see https://tailwindcss.com/docs/overflow
       */
      overflow: [{
        overflow: X()
      }],
      /**
       * Overflow X
       * @see https://tailwindcss.com/docs/overflow
       */
      "overflow-x": [{
        "overflow-x": X()
      }],
      /**
       * Overflow Y
       * @see https://tailwindcss.com/docs/overflow
       */
      "overflow-y": [{
        "overflow-y": X()
      }],
      /**
       * Overscroll Behavior
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      overscroll: [{
        overscroll: Z()
      }],
      /**
       * Overscroll Behavior X
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      "overscroll-x": [{
        "overscroll-x": Z()
      }],
      /**
       * Overscroll Behavior Y
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      "overscroll-y": [{
        "overscroll-y": Z()
      }],
      /**
       * Position
       * @see https://tailwindcss.com/docs/position
       */
      position: ["static", "fixed", "absolute", "relative", "sticky"],
      /**
       * Top / Right / Bottom / Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      inset: [{
        inset: [b]
      }],
      /**
       * Right / Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      "inset-x": [{
        "inset-x": [b]
      }],
      /**
       * Top / Bottom
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      "inset-y": [{
        "inset-y": [b]
      }],
      /**
       * Start
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      start: [{
        start: [b]
      }],
      /**
       * End
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      end: [{
        end: [b]
      }],
      /**
       * Top
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      top: [{
        top: [b]
      }],
      /**
       * Right
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      right: [{
        right: [b]
      }],
      /**
       * Bottom
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      bottom: [{
        bottom: [b]
      }],
      /**
       * Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      left: [{
        left: [b]
      }],
      /**
       * Visibility
       * @see https://tailwindcss.com/docs/visibility
       */
      visibility: ["visible", "invisible", "collapse"],
      /**
       * Z-Index
       * @see https://tailwindcss.com/docs/z-index
       */
      z: [{
        z: ["auto", Hm, xt]
      }],
      // Flexbox and Grid
      /**
       * Flex Basis
       * @see https://tailwindcss.com/docs/flex-basis
       */
      basis: [{
        basis: J()
      }],
      /**
       * Flex Direction
       * @see https://tailwindcss.com/docs/flex-direction
       */
      "flex-direction": [{
        flex: ["row", "row-reverse", "col", "col-reverse"]
      }],
      /**
       * Flex Wrap
       * @see https://tailwindcss.com/docs/flex-wrap
       */
      "flex-wrap": [{
        flex: ["wrap", "wrap-reverse", "nowrap"]
      }],
      /**
       * Flex
       * @see https://tailwindcss.com/docs/flex
       */
      flex: [{
        flex: ["1", "auto", "initial", "none", xt]
      }],
      /**
       * Flex Grow
       * @see https://tailwindcss.com/docs/flex-grow
       */
      grow: [{
        grow: B()
      }],
      /**
       * Flex Shrink
       * @see https://tailwindcss.com/docs/flex-shrink
       */
      shrink: [{
        shrink: B()
      }],
      /**
       * Order
       * @see https://tailwindcss.com/docs/order
       */
      order: [{
        order: ["first", "last", "none", Hm, xt]
      }],
      /**
       * Grid Template Columns
       * @see https://tailwindcss.com/docs/grid-template-columns
       */
      "grid-cols": [{
        "grid-cols": [Gm]
      }],
      /**
       * Grid Column Start / End
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-start-end": [{
        col: ["auto", {
          span: ["full", Hm, xt]
        }, xt]
      }],
      /**
       * Grid Column Start
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-start": [{
        "col-start": V()
      }],
      /**
       * Grid Column End
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-end": [{
        "col-end": V()
      }],
      /**
       * Grid Template Rows
       * @see https://tailwindcss.com/docs/grid-template-rows
       */
      "grid-rows": [{
        "grid-rows": [Gm]
      }],
      /**
       * Grid Row Start / End
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-start-end": [{
        row: ["auto", {
          span: [Hm, xt]
        }, xt]
      }],
      /**
       * Grid Row Start
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-start": [{
        "row-start": V()
      }],
      /**
       * Grid Row End
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-end": [{
        "row-end": V()
      }],
      /**
       * Grid Auto Flow
       * @see https://tailwindcss.com/docs/grid-auto-flow
       */
      "grid-flow": [{
        "grid-flow": ["row", "col", "dense", "row-dense", "col-dense"]
      }],
      /**
       * Grid Auto Columns
       * @see https://tailwindcss.com/docs/grid-auto-columns
       */
      "auto-cols": [{
        "auto-cols": ["auto", "min", "max", "fr", xt]
      }],
      /**
       * Grid Auto Rows
       * @see https://tailwindcss.com/docs/grid-auto-rows
       */
      "auto-rows": [{
        "auto-rows": ["auto", "min", "max", "fr", xt]
      }],
      /**
       * Gap
       * @see https://tailwindcss.com/docs/gap
       */
      gap: [{
        gap: [p]
      }],
      /**
       * Gap X
       * @see https://tailwindcss.com/docs/gap
       */
      "gap-x": [{
        "gap-x": [p]
      }],
      /**
       * Gap Y
       * @see https://tailwindcss.com/docs/gap
       */
      "gap-y": [{
        "gap-y": [p]
      }],
      /**
       * Justify Content
       * @see https://tailwindcss.com/docs/justify-content
       */
      "justify-content": [{
        justify: ["normal", ...H()]
      }],
      /**
       * Justify Items
       * @see https://tailwindcss.com/docs/justify-items
       */
      "justify-items": [{
        "justify-items": ["start", "end", "center", "stretch"]
      }],
      /**
       * Justify Self
       * @see https://tailwindcss.com/docs/justify-self
       */
      "justify-self": [{
        "justify-self": ["auto", "start", "end", "center", "stretch"]
      }],
      /**
       * Align Content
       * @see https://tailwindcss.com/docs/align-content
       */
      "align-content": [{
        content: ["normal", ...H(), "baseline"]
      }],
      /**
       * Align Items
       * @see https://tailwindcss.com/docs/align-items
       */
      "align-items": [{
        items: ["start", "end", "center", "baseline", "stretch"]
      }],
      /**
       * Align Self
       * @see https://tailwindcss.com/docs/align-self
       */
      "align-self": [{
        self: ["auto", "start", "end", "center", "stretch", "baseline"]
      }],
      /**
       * Place Content
       * @see https://tailwindcss.com/docs/place-content
       */
      "place-content": [{
        "place-content": [...H(), "baseline"]
      }],
      /**
       * Place Items
       * @see https://tailwindcss.com/docs/place-items
       */
      "place-items": [{
        "place-items": ["start", "end", "center", "baseline", "stretch"]
      }],
      /**
       * Place Self
       * @see https://tailwindcss.com/docs/place-self
       */
      "place-self": [{
        "place-self": ["auto", "start", "end", "center", "stretch"]
      }],
      // Spacing
      /**
       * Padding
       * @see https://tailwindcss.com/docs/padding
       */
      p: [{
        p: [$]
      }],
      /**
       * Padding X
       * @see https://tailwindcss.com/docs/padding
       */
      px: [{
        px: [$]
      }],
      /**
       * Padding Y
       * @see https://tailwindcss.com/docs/padding
       */
      py: [{
        py: [$]
      }],
      /**
       * Padding Start
       * @see https://tailwindcss.com/docs/padding
       */
      ps: [{
        ps: [$]
      }],
      /**
       * Padding End
       * @see https://tailwindcss.com/docs/padding
       */
      pe: [{
        pe: [$]
      }],
      /**
       * Padding Top
       * @see https://tailwindcss.com/docs/padding
       */
      pt: [{
        pt: [$]
      }],
      /**
       * Padding Right
       * @see https://tailwindcss.com/docs/padding
       */
      pr: [{
        pr: [$]
      }],
      /**
       * Padding Bottom
       * @see https://tailwindcss.com/docs/padding
       */
      pb: [{
        pb: [$]
      }],
      /**
       * Padding Left
       * @see https://tailwindcss.com/docs/padding
       */
      pl: [{
        pl: [$]
      }],
      /**
       * Margin
       * @see https://tailwindcss.com/docs/margin
       */
      m: [{
        m: [m]
      }],
      /**
       * Margin X
       * @see https://tailwindcss.com/docs/margin
       */
      mx: [{
        mx: [m]
      }],
      /**
       * Margin Y
       * @see https://tailwindcss.com/docs/margin
       */
      my: [{
        my: [m]
      }],
      /**
       * Margin Start
       * @see https://tailwindcss.com/docs/margin
       */
      ms: [{
        ms: [m]
      }],
      /**
       * Margin End
       * @see https://tailwindcss.com/docs/margin
       */
      me: [{
        me: [m]
      }],
      /**
       * Margin Top
       * @see https://tailwindcss.com/docs/margin
       */
      mt: [{
        mt: [m]
      }],
      /**
       * Margin Right
       * @see https://tailwindcss.com/docs/margin
       */
      mr: [{
        mr: [m]
      }],
      /**
       * Margin Bottom
       * @see https://tailwindcss.com/docs/margin
       */
      mb: [{
        mb: [m]
      }],
      /**
       * Margin Left
       * @see https://tailwindcss.com/docs/margin
       */
      ml: [{
        ml: [m]
      }],
      /**
       * Space Between X
       * @see https://tailwindcss.com/docs/space
       */
      "space-x": [{
        "space-x": [G]
      }],
      /**
       * Space Between X Reverse
       * @see https://tailwindcss.com/docs/space
       */
      "space-x-reverse": ["space-x-reverse"],
      /**
       * Space Between Y
       * @see https://tailwindcss.com/docs/space
       */
      "space-y": [{
        "space-y": [G]
      }],
      /**
       * Space Between Y Reverse
       * @see https://tailwindcss.com/docs/space
       */
      "space-y-reverse": ["space-y-reverse"],
      // Sizing
      /**
       * Width
       * @see https://tailwindcss.com/docs/width
       */
      w: [{
        w: ["auto", "min", "max", "fit", "svw", "lvw", "dvw", xt, t]
      }],
      /**
       * Min-Width
       * @see https://tailwindcss.com/docs/min-width
       */
      "min-w": [{
        "min-w": [xt, t, "min", "max", "fit"]
      }],
      /**
       * Max-Width
       * @see https://tailwindcss.com/docs/max-width
       */
      "max-w": [{
        "max-w": [xt, t, "none", "full", "min", "max", "fit", "prose", {
          screen: [gl]
        }, gl]
      }],
      /**
       * Height
       * @see https://tailwindcss.com/docs/height
       */
      h: [{
        h: [xt, t, "auto", "min", "max", "fit", "svh", "lvh", "dvh"]
      }],
      /**
       * Min-Height
       * @see https://tailwindcss.com/docs/min-height
       */
      "min-h": [{
        "min-h": [xt, t, "min", "max", "fit", "svh", "lvh", "dvh"]
      }],
      /**
       * Max-Height
       * @see https://tailwindcss.com/docs/max-height
       */
      "max-h": [{
        "max-h": [xt, t, "min", "max", "fit", "svh", "lvh", "dvh"]
      }],
      /**
       * Size
       * @see https://tailwindcss.com/docs/size
       */
      size: [{
        size: [xt, t, "auto", "min", "max", "fit"]
      }],
      // Typography
      /**
       * Font Size
       * @see https://tailwindcss.com/docs/font-size
       */
      "font-size": [{
        text: ["base", gl, ml]
      }],
      /**
       * Font Smoothing
       * @see https://tailwindcss.com/docs/font-smoothing
       */
      "font-smoothing": ["antialiased", "subpixel-antialiased"],
      /**
       * Font Style
       * @see https://tailwindcss.com/docs/font-style
       */
      "font-style": ["italic", "not-italic"],
      /**
       * Font Weight
       * @see https://tailwindcss.com/docs/font-weight
       */
      "font-weight": [{
        font: ["thin", "extralight", "light", "normal", "medium", "semibold", "bold", "extrabold", "black", v$]
      }],
      /**
       * Font Family
       * @see https://tailwindcss.com/docs/font-family
       */
      "font-family": [{
        font: [Gm]
      }],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-normal": ["normal-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-ordinal": ["ordinal"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-slashed-zero": ["slashed-zero"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-figure": ["lining-nums", "oldstyle-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-spacing": ["proportional-nums", "tabular-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-fraction": ["diagonal-fractions", "stacked-fractions"],
      /**
       * Letter Spacing
       * @see https://tailwindcss.com/docs/letter-spacing
       */
      tracking: [{
        tracking: ["tighter", "tight", "normal", "wide", "wider", "widest", xt]
      }],
      /**
       * Line Clamp
       * @see https://tailwindcss.com/docs/line-clamp
       */
      "line-clamp": [{
        "line-clamp": ["none", ad, v$]
      }],
      /**
       * Line Height
       * @see https://tailwindcss.com/docs/line-height
       */
      leading: [{
        leading: ["none", "tight", "snug", "normal", "relaxed", "loose", ti, xt]
      }],
      /**
       * List Style Image
       * @see https://tailwindcss.com/docs/list-style-image
       */
      "list-image": [{
        "list-image": ["none", xt]
      }],
      /**
       * List Style Type
       * @see https://tailwindcss.com/docs/list-style-type
       */
      "list-style-type": [{
        list: ["none", "disc", "decimal", xt]
      }],
      /**
       * List Style Position
       * @see https://tailwindcss.com/docs/list-style-position
       */
      "list-style-position": [{
        list: ["inside", "outside"]
      }],
      /**
       * Placeholder Color
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/placeholder-color
       */
      "placeholder-color": [{
        placeholder: [e]
      }],
      /**
       * Placeholder Opacity
       * @see https://tailwindcss.com/docs/placeholder-opacity
       */
      "placeholder-opacity": [{
        "placeholder-opacity": [w]
      }],
      /**
       * Text Alignment
       * @see https://tailwindcss.com/docs/text-align
       */
      "text-alignment": [{
        text: ["left", "center", "right", "justify", "start", "end"]
      }],
      /**
       * Text Color
       * @see https://tailwindcss.com/docs/text-color
       */
      "text-color": [{
        text: [e]
      }],
      /**
       * Text Opacity
       * @see https://tailwindcss.com/docs/text-opacity
       */
      "text-opacity": [{
        "text-opacity": [w]
      }],
      /**
       * Text Decoration
       * @see https://tailwindcss.com/docs/text-decoration
       */
      "text-decoration": ["underline", "overline", "line-through", "no-underline"],
      /**
       * Text Decoration Style
       * @see https://tailwindcss.com/docs/text-decoration-style
       */
      "text-decoration-style": [{
        decoration: [...F(), "wavy"]
      }],
      /**
       * Text Decoration Thickness
       * @see https://tailwindcss.com/docs/text-decoration-thickness
       */
      "text-decoration-thickness": [{
        decoration: ["auto", "from-font", ti, ml]
      }],
      /**
       * Text Underline Offset
       * @see https://tailwindcss.com/docs/text-underline-offset
       */
      "underline-offset": [{
        "underline-offset": ["auto", ti, xt]
      }],
      /**
       * Text Decoration Color
       * @see https://tailwindcss.com/docs/text-decoration-color
       */
      "text-decoration-color": [{
        decoration: [e]
      }],
      /**
       * Text Transform
       * @see https://tailwindcss.com/docs/text-transform
       */
      "text-transform": ["uppercase", "lowercase", "capitalize", "normal-case"],
      /**
       * Text Overflow
       * @see https://tailwindcss.com/docs/text-overflow
       */
      "text-overflow": ["truncate", "text-ellipsis", "text-clip"],
      /**
       * Text Wrap
       * @see https://tailwindcss.com/docs/text-wrap
       */
      "text-wrap": [{
        text: ["wrap", "nowrap", "balance", "pretty"]
      }],
      /**
       * Text Indent
       * @see https://tailwindcss.com/docs/text-indent
       */
      indent: [{
        indent: I()
      }],
      /**
       * Vertical Alignment
       * @see https://tailwindcss.com/docs/vertical-align
       */
      "vertical-align": [{
        align: ["baseline", "top", "middle", "bottom", "text-top", "text-bottom", "sub", "super", xt]
      }],
      /**
       * Whitespace
       * @see https://tailwindcss.com/docs/whitespace
       */
      whitespace: [{
        whitespace: ["normal", "nowrap", "pre", "pre-line", "pre-wrap", "break-spaces"]
      }],
      /**
       * Word Break
       * @see https://tailwindcss.com/docs/word-break
       */
      break: [{
        break: ["normal", "words", "all", "keep"]
      }],
      /**
       * Hyphens
       * @see https://tailwindcss.com/docs/hyphens
       */
      hyphens: [{
        hyphens: ["none", "manual", "auto"]
      }],
      /**
       * Content
       * @see https://tailwindcss.com/docs/content
       */
      content: [{
        content: ["none", xt]
      }],
      // Backgrounds
      /**
       * Background Attachment
       * @see https://tailwindcss.com/docs/background-attachment
       */
      "bg-attachment": [{
        bg: ["fixed", "local", "scroll"]
      }],
      /**
       * Background Clip
       * @see https://tailwindcss.com/docs/background-clip
       */
      "bg-clip": [{
        "bg-clip": ["border", "padding", "content", "text"]
      }],
      /**
       * Background Opacity
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/background-opacity
       */
      "bg-opacity": [{
        "bg-opacity": [w]
      }],
      /**
       * Background Origin
       * @see https://tailwindcss.com/docs/background-origin
       */
      "bg-origin": [{
        "bg-origin": ["border", "padding", "content"]
      }],
      /**
       * Background Position
       * @see https://tailwindcss.com/docs/background-position
       */
      "bg-position": [{
        bg: [...D(), FFe]
      }],
      /**
       * Background Repeat
       * @see https://tailwindcss.com/docs/background-repeat
       */
      "bg-repeat": [{
        bg: ["no-repeat", {
          repeat: ["", "x", "y", "round", "space"]
        }]
      }],
      /**
       * Background Size
       * @see https://tailwindcss.com/docs/background-size
       */
      "bg-size": [{
        bg: ["auto", "cover", "contain", zFe]
      }],
      /**
       * Background Image
       * @see https://tailwindcss.com/docs/background-image
       */
      "bg-image": [{
        bg: ["none", {
          "gradient-to": ["t", "tr", "r", "br", "b", "bl", "l", "tl"]
        }, LFe]
      }],
      /**
       * Background Color
       * @see https://tailwindcss.com/docs/background-color
       */
      "bg-color": [{
        bg: [e]
      }],
      /**
       * Gradient Color Stops From Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-from-pos": [{
        from: [x]
      }],
      /**
       * Gradient Color Stops Via Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-via-pos": [{
        via: [x]
      }],
      /**
       * Gradient Color Stops To Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-to-pos": [{
        to: [x]
      }],
      /**
       * Gradient Color Stops From
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-from": [{
        from: [v]
      }],
      /**
       * Gradient Color Stops Via
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-via": [{
        via: [v]
      }],
      /**
       * Gradient Color Stops To
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-to": [{
        to: [v]
      }],
      // Borders
      /**
       * Border Radius
       * @see https://tailwindcss.com/docs/border-radius
       */
      rounded: [{
        rounded: [a]
      }],
      /**
       * Border Radius Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-s": [{
        "rounded-s": [a]
      }],
      /**
       * Border Radius End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-e": [{
        "rounded-e": [a]
      }],
      /**
       * Border Radius Top
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-t": [{
        "rounded-t": [a]
      }],
      /**
       * Border Radius Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-r": [{
        "rounded-r": [a]
      }],
      /**
       * Border Radius Bottom
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-b": [{
        "rounded-b": [a]
      }],
      /**
       * Border Radius Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-l": [{
        "rounded-l": [a]
      }],
      /**
       * Border Radius Start Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-ss": [{
        "rounded-ss": [a]
      }],
      /**
       * Border Radius Start End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-se": [{
        "rounded-se": [a]
      }],
      /**
       * Border Radius End End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-ee": [{
        "rounded-ee": [a]
      }],
      /**
       * Border Radius End Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-es": [{
        "rounded-es": [a]
      }],
      /**
       * Border Radius Top Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-tl": [{
        "rounded-tl": [a]
      }],
      /**
       * Border Radius Top Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-tr": [{
        "rounded-tr": [a]
      }],
      /**
       * Border Radius Bottom Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-br": [{
        "rounded-br": [a]
      }],
      /**
       * Border Radius Bottom Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-bl": [{
        "rounded-bl": [a]
      }],
      /**
       * Border Width
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w": [{
        border: [s]
      }],
      /**
       * Border Width X
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-x": [{
        "border-x": [s]
      }],
      /**
       * Border Width Y
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-y": [{
        "border-y": [s]
      }],
      /**
       * Border Width Start
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-s": [{
        "border-s": [s]
      }],
      /**
       * Border Width End
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-e": [{
        "border-e": [s]
      }],
      /**
       * Border Width Top
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-t": [{
        "border-t": [s]
      }],
      /**
       * Border Width Right
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-r": [{
        "border-r": [s]
      }],
      /**
       * Border Width Bottom
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-b": [{
        "border-b": [s]
      }],
      /**
       * Border Width Left
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-l": [{
        "border-l": [s]
      }],
      /**
       * Border Opacity
       * @see https://tailwindcss.com/docs/border-opacity
       */
      "border-opacity": [{
        "border-opacity": [w]
      }],
      /**
       * Border Style
       * @see https://tailwindcss.com/docs/border-style
       */
      "border-style": [{
        border: [...F(), "hidden"]
      }],
      /**
       * Divide Width X
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-x": [{
        "divide-x": [s]
      }],
      /**
       * Divide Width X Reverse
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-x-reverse": ["divide-x-reverse"],
      /**
       * Divide Width Y
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-y": [{
        "divide-y": [s]
      }],
      /**
       * Divide Width Y Reverse
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-y-reverse": ["divide-y-reverse"],
      /**
       * Divide Opacity
       * @see https://tailwindcss.com/docs/divide-opacity
       */
      "divide-opacity": [{
        "divide-opacity": [w]
      }],
      /**
       * Divide Style
       * @see https://tailwindcss.com/docs/divide-style
       */
      "divide-style": [{
        divide: F()
      }],
      /**
       * Border Color
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color": [{
        border: [o]
      }],
      /**
       * Border Color X
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-x": [{
        "border-x": [o]
      }],
      /**
       * Border Color Y
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-y": [{
        "border-y": [o]
      }],
      /**
       * Border Color S
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-s": [{
        "border-s": [o]
      }],
      /**
       * Border Color E
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-e": [{
        "border-e": [o]
      }],
      /**
       * Border Color Top
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-t": [{
        "border-t": [o]
      }],
      /**
       * Border Color Right
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-r": [{
        "border-r": [o]
      }],
      /**
       * Border Color Bottom
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-b": [{
        "border-b": [o]
      }],
      /**
       * Border Color Left
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-l": [{
        "border-l": [o]
      }],
      /**
       * Divide Color
       * @see https://tailwindcss.com/docs/divide-color
       */
      "divide-color": [{
        divide: [o]
      }],
      /**
       * Outline Style
       * @see https://tailwindcss.com/docs/outline-style
       */
      "outline-style": [{
        outline: ["", ...F()]
      }],
      /**
       * Outline Offset
       * @see https://tailwindcss.com/docs/outline-offset
       */
      "outline-offset": [{
        "outline-offset": [ti, xt]
      }],
      /**
       * Outline Width
       * @see https://tailwindcss.com/docs/outline-width
       */
      "outline-w": [{
        outline: [ti, ml]
      }],
      /**
       * Outline Color
       * @see https://tailwindcss.com/docs/outline-color
       */
      "outline-color": [{
        outline: [e]
      }],
      /**
       * Ring Width
       * @see https://tailwindcss.com/docs/ring-width
       */
      "ring-w": [{
        ring: te()
      }],
      /**
       * Ring Width Inset
       * @see https://tailwindcss.com/docs/ring-width
       */
      "ring-w-inset": ["ring-inset"],
      /**
       * Ring Color
       * @see https://tailwindcss.com/docs/ring-color
       */
      "ring-color": [{
        ring: [e]
      }],
      /**
       * Ring Opacity
       * @see https://tailwindcss.com/docs/ring-opacity
       */
      "ring-opacity": [{
        "ring-opacity": [w]
      }],
      /**
       * Ring Offset Width
       * @see https://tailwindcss.com/docs/ring-offset-width
       */
      "ring-offset-w": [{
        "ring-offset": [ti, ml]
      }],
      /**
       * Ring Offset Color
       * @see https://tailwindcss.com/docs/ring-offset-color
       */
      "ring-offset-color": [{
        "ring-offset": [e]
      }],
      // Effects
      /**
       * Box Shadow
       * @see https://tailwindcss.com/docs/box-shadow
       */
      shadow: [{
        shadow: ["", "inner", "none", gl, VFe]
      }],
      /**
       * Box Shadow Color
       * @see https://tailwindcss.com/docs/box-shadow-color
       */
      "shadow-color": [{
        shadow: [Gm]
      }],
      /**
       * Opacity
       * @see https://tailwindcss.com/docs/opacity
       */
      opacity: [{
        opacity: [w]
      }],
      /**
       * Mix Blend Mode
       * @see https://tailwindcss.com/docs/mix-blend-mode
       */
      "mix-blend": [{
        "mix-blend": [...R(), "plus-lighter", "plus-darker"]
      }],
      /**
       * Background Blend Mode
       * @see https://tailwindcss.com/docs/background-blend-mode
       */
      "bg-blend": [{
        "bg-blend": R()
      }],
      // Filters
      /**
       * Filter
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/filter
       */
      filter: [{
        filter: ["", "none"]
      }],
      /**
       * Blur
       * @see https://tailwindcss.com/docs/blur
       */
      blur: [{
        blur: [r]
      }],
      /**
       * Brightness
       * @see https://tailwindcss.com/docs/brightness
       */
      brightness: [{
        brightness: [n]
      }],
      /**
       * Contrast
       * @see https://tailwindcss.com/docs/contrast
       */
      contrast: [{
        contrast: [l]
      }],
      /**
       * Drop Shadow
       * @see https://tailwindcss.com/docs/drop-shadow
       */
      "drop-shadow": [{
        "drop-shadow": ["", "none", gl, xt]
      }],
      /**
       * Grayscale
       * @see https://tailwindcss.com/docs/grayscale
       */
      grayscale: [{
        grayscale: [c]
      }],
      /**
       * Hue Rotate
       * @see https://tailwindcss.com/docs/hue-rotate
       */
      "hue-rotate": [{
        "hue-rotate": [u]
      }],
      /**
       * Invert
       * @see https://tailwindcss.com/docs/invert
       */
      invert: [{
        invert: [f]
      }],
      /**
       * Saturate
       * @see https://tailwindcss.com/docs/saturate
       */
      saturate: [{
        saturate: [E]
      }],
      /**
       * Sepia
       * @see https://tailwindcss.com/docs/sepia
       */
      sepia: [{
        sepia: [h]
      }],
      /**
       * Backdrop Filter
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/backdrop-filter
       */
      "backdrop-filter": [{
        "backdrop-filter": ["", "none"]
      }],
      /**
       * Backdrop Blur
       * @see https://tailwindcss.com/docs/backdrop-blur
       */
      "backdrop-blur": [{
        "backdrop-blur": [r]
      }],
      /**
       * Backdrop Brightness
       * @see https://tailwindcss.com/docs/backdrop-brightness
       */
      "backdrop-brightness": [{
        "backdrop-brightness": [n]
      }],
      /**
       * Backdrop Contrast
       * @see https://tailwindcss.com/docs/backdrop-contrast
       */
      "backdrop-contrast": [{
        "backdrop-contrast": [l]
      }],
      /**
       * Backdrop Grayscale
       * @see https://tailwindcss.com/docs/backdrop-grayscale
       */
      "backdrop-grayscale": [{
        "backdrop-grayscale": [c]
      }],
      /**
       * Backdrop Hue Rotate
       * @see https://tailwindcss.com/docs/backdrop-hue-rotate
       */
      "backdrop-hue-rotate": [{
        "backdrop-hue-rotate": [u]
      }],
      /**
       * Backdrop Invert
       * @see https://tailwindcss.com/docs/backdrop-invert
       */
      "backdrop-invert": [{
        "backdrop-invert": [f]
      }],
      /**
       * Backdrop Opacity
       * @see https://tailwindcss.com/docs/backdrop-opacity
       */
      "backdrop-opacity": [{
        "backdrop-opacity": [w]
      }],
      /**
       * Backdrop Saturate
       * @see https://tailwindcss.com/docs/backdrop-saturate
       */
      "backdrop-saturate": [{
        "backdrop-saturate": [E]
      }],
      /**
       * Backdrop Sepia
       * @see https://tailwindcss.com/docs/backdrop-sepia
       */
      "backdrop-sepia": [{
        "backdrop-sepia": [h]
      }],
      // Tables
      /**
       * Border Collapse
       * @see https://tailwindcss.com/docs/border-collapse
       */
      "border-collapse": [{
        border: ["collapse", "separate"]
      }],
      /**
       * Border Spacing
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing": [{
        "border-spacing": [i]
      }],
      /**
       * Border Spacing X
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing-x": [{
        "border-spacing-x": [i]
      }],
      /**
       * Border Spacing Y
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing-y": [{
        "border-spacing-y": [i]
      }],
      /**
       * Table Layout
       * @see https://tailwindcss.com/docs/table-layout
       */
      "table-layout": [{
        table: ["auto", "fixed"]
      }],
      /**
       * Caption Side
       * @see https://tailwindcss.com/docs/caption-side
       */
      caption: [{
        caption: ["top", "bottom"]
      }],
      // Transitions and Animation
      /**
       * Tranisition Property
       * @see https://tailwindcss.com/docs/transition-property
       */
      transition: [{
        transition: ["none", "all", "", "colors", "opacity", "shadow", "transform", xt]
      }],
      /**
       * Transition Duration
       * @see https://tailwindcss.com/docs/transition-duration
       */
      duration: [{
        duration: d()
      }],
      /**
       * Transition Timing Function
       * @see https://tailwindcss.com/docs/transition-timing-function
       */
      ease: [{
        ease: ["linear", "in", "out", "in-out", xt]
      }],
      /**
       * Transition Delay
       * @see https://tailwindcss.com/docs/transition-delay
       */
      delay: [{
        delay: d()
      }],
      /**
       * Animation
       * @see https://tailwindcss.com/docs/animation
       */
      animate: [{
        animate: ["none", "spin", "ping", "pulse", "bounce", xt]
      }],
      // Transforms
      /**
       * Transform
       * @see https://tailwindcss.com/docs/transform
       */
      transform: [{
        transform: ["", "gpu", "none"]
      }],
      /**
       * Scale
       * @see https://tailwindcss.com/docs/scale
       */
      scale: [{
        scale: [S]
      }],
      /**
       * Scale X
       * @see https://tailwindcss.com/docs/scale
       */
      "scale-x": [{
        "scale-x": [S]
      }],
      /**
       * Scale Y
       * @see https://tailwindcss.com/docs/scale
       */
      "scale-y": [{
        "scale-y": [S]
      }],
      /**
       * Rotate
       * @see https://tailwindcss.com/docs/rotate
       */
      rotate: [{
        rotate: [Hm, xt]
      }],
      /**
       * Translate X
       * @see https://tailwindcss.com/docs/translate
       */
      "translate-x": [{
        "translate-x": [Q]
      }],
      /**
       * Translate Y
       * @see https://tailwindcss.com/docs/translate
       */
      "translate-y": [{
        "translate-y": [Q]
      }],
      /**
       * Skew X
       * @see https://tailwindcss.com/docs/skew
       */
      "skew-x": [{
        "skew-x": [U]
      }],
      /**
       * Skew Y
       * @see https://tailwindcss.com/docs/skew
       */
      "skew-y": [{
        "skew-y": [U]
      }],
      /**
       * Transform Origin
       * @see https://tailwindcss.com/docs/transform-origin
       */
      "transform-origin": [{
        origin: ["center", "top", "top-right", "right", "bottom-right", "bottom", "bottom-left", "left", "top-left", xt]
      }],
      // Interactivity
      /**
       * Accent Color
       * @see https://tailwindcss.com/docs/accent-color
       */
      accent: [{
        accent: ["auto", e]
      }],
      /**
       * Appearance
       * @see https://tailwindcss.com/docs/appearance
       */
      appearance: [{
        appearance: ["none", "auto"]
      }],
      /**
       * Cursor
       * @see https://tailwindcss.com/docs/cursor
       */
      cursor: [{
        cursor: ["auto", "default", "pointer", "wait", "text", "move", "help", "not-allowed", "none", "context-menu", "progress", "cell", "crosshair", "vertical-text", "alias", "copy", "no-drop", "grab", "grabbing", "all-scroll", "col-resize", "row-resize", "n-resize", "e-resize", "s-resize", "w-resize", "ne-resize", "nw-resize", "se-resize", "sw-resize", "ew-resize", "ns-resize", "nesw-resize", "nwse-resize", "zoom-in", "zoom-out", xt]
      }],
      /**
       * Caret Color
       * @see https://tailwindcss.com/docs/just-in-time-mode#caret-color-utilities
       */
      "caret-color": [{
        caret: [e]
      }],
      /**
       * Pointer Events
       * @see https://tailwindcss.com/docs/pointer-events
       */
      "pointer-events": [{
        "pointer-events": ["none", "auto"]
      }],
      /**
       * Resize
       * @see https://tailwindcss.com/docs/resize
       */
      resize: [{
        resize: ["none", "y", "x", ""]
      }],
      /**
       * Scroll Behavior
       * @see https://tailwindcss.com/docs/scroll-behavior
       */
      "scroll-behavior": [{
        scroll: ["auto", "smooth"]
      }],
      /**
       * Scroll Margin
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-m": [{
        "scroll-m": I()
      }],
      /**
       * Scroll Margin X
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mx": [{
        "scroll-mx": I()
      }],
      /**
       * Scroll Margin Y
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-my": [{
        "scroll-my": I()
      }],
      /**
       * Scroll Margin Start
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-ms": [{
        "scroll-ms": I()
      }],
      /**
       * Scroll Margin End
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-me": [{
        "scroll-me": I()
      }],
      /**
       * Scroll Margin Top
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mt": [{
        "scroll-mt": I()
      }],
      /**
       * Scroll Margin Right
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mr": [{
        "scroll-mr": I()
      }],
      /**
       * Scroll Margin Bottom
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mb": [{
        "scroll-mb": I()
      }],
      /**
       * Scroll Margin Left
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-ml": [{
        "scroll-ml": I()
      }],
      /**
       * Scroll Padding
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-p": [{
        "scroll-p": I()
      }],
      /**
       * Scroll Padding X
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-px": [{
        "scroll-px": I()
      }],
      /**
       * Scroll Padding Y
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-py": [{
        "scroll-py": I()
      }],
      /**
       * Scroll Padding Start
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-ps": [{
        "scroll-ps": I()
      }],
      /**
       * Scroll Padding End
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pe": [{
        "scroll-pe": I()
      }],
      /**
       * Scroll Padding Top
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pt": [{
        "scroll-pt": I()
      }],
      /**
       * Scroll Padding Right
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pr": [{
        "scroll-pr": I()
      }],
      /**
       * Scroll Padding Bottom
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pb": [{
        "scroll-pb": I()
      }],
      /**
       * Scroll Padding Left
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pl": [{
        "scroll-pl": I()
      }],
      /**
       * Scroll Snap Align
       * @see https://tailwindcss.com/docs/scroll-snap-align
       */
      "snap-align": [{
        snap: ["start", "end", "center", "align-none"]
      }],
      /**
       * Scroll Snap Stop
       * @see https://tailwindcss.com/docs/scroll-snap-stop
       */
      "snap-stop": [{
        snap: ["normal", "always"]
      }],
      /**
       * Scroll Snap Type
       * @see https://tailwindcss.com/docs/scroll-snap-type
       */
      "snap-type": [{
        snap: ["none", "x", "y", "both"]
      }],
      /**
       * Scroll Snap Type Strictness
       * @see https://tailwindcss.com/docs/scroll-snap-type
       */
      "snap-strictness": [{
        snap: ["mandatory", "proximity"]
      }],
      /**
       * Touch Action
       * @see https://tailwindcss.com/docs/touch-action
       */
      touch: [{
        touch: ["auto", "none", "manipulation"]
      }],
      /**
       * Touch Action X
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-x": [{
        "touch-pan": ["x", "left", "right"]
      }],
      /**
       * Touch Action Y
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-y": [{
        "touch-pan": ["y", "up", "down"]
      }],
      /**
       * Touch Action Pinch Zoom
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-pz": ["touch-pinch-zoom"],
      /**
       * User Select
       * @see https://tailwindcss.com/docs/user-select
       */
      select: [{
        select: ["none", "text", "all", "auto"]
      }],
      /**
       * Will Change
       * @see https://tailwindcss.com/docs/will-change
       */
      "will-change": [{
        "will-change": ["auto", "scroll", "contents", "transform", xt]
      }],
      // SVG
      /**
       * Fill
       * @see https://tailwindcss.com/docs/fill
       */
      fill: [{
        fill: [e, "none"]
      }],
      /**
       * Stroke Width
       * @see https://tailwindcss.com/docs/stroke-width
       */
      "stroke-w": [{
        stroke: [ti, ml, v$]
      }],
      /**
       * Stroke
       * @see https://tailwindcss.com/docs/stroke
       */
      stroke: [{
        stroke: [e, "none"]
      }],
      // Accessibility
      /**
       * Screen Readers
       * @see https://tailwindcss.com/docs/screen-readers
       */
      sr: ["sr-only", "not-sr-only"],
      /**
       * Forced Color Adjust
       * @see https://tailwindcss.com/docs/forced-color-adjust
       */
      "forced-color-adjust": [{
        "forced-color-adjust": ["auto", "none"]
      }]
    },
    conflictingClassGroups: {
      overflow: ["overflow-x", "overflow-y"],
      overscroll: ["overscroll-x", "overscroll-y"],
      inset: ["inset-x", "inset-y", "start", "end", "top", "right", "bottom", "left"],
      "inset-x": ["right", "left"],
      "inset-y": ["top", "bottom"],
      flex: ["basis", "grow", "shrink"],
      gap: ["gap-x", "gap-y"],
      p: ["px", "py", "ps", "pe", "pt", "pr", "pb", "pl"],
      px: ["pr", "pl"],
      py: ["pt", "pb"],
      m: ["mx", "my", "ms", "me", "mt", "mr", "mb", "ml"],
      mx: ["mr", "ml"],
      my: ["mt", "mb"],
      size: ["w", "h"],
      "font-size": ["leading"],
      "fvn-normal": ["fvn-ordinal", "fvn-slashed-zero", "fvn-figure", "fvn-spacing", "fvn-fraction"],
      "fvn-ordinal": ["fvn-normal"],
      "fvn-slashed-zero": ["fvn-normal"],
      "fvn-figure": ["fvn-normal"],
      "fvn-spacing": ["fvn-normal"],
      "fvn-fraction": ["fvn-normal"],
      "line-clamp": ["display", "overflow"],
      rounded: ["rounded-s", "rounded-e", "rounded-t", "rounded-r", "rounded-b", "rounded-l", "rounded-ss", "rounded-se", "rounded-ee", "rounded-es", "rounded-tl", "rounded-tr", "rounded-br", "rounded-bl"],
      "rounded-s": ["rounded-ss", "rounded-es"],
      "rounded-e": ["rounded-se", "rounded-ee"],
      "rounded-t": ["rounded-tl", "rounded-tr"],
      "rounded-r": ["rounded-tr", "rounded-br"],
      "rounded-b": ["rounded-br", "rounded-bl"],
      "rounded-l": ["rounded-tl", "rounded-bl"],
      "border-spacing": ["border-spacing-x", "border-spacing-y"],
      "border-w": ["border-w-s", "border-w-e", "border-w-t", "border-w-r", "border-w-b", "border-w-l"],
      "border-w-x": ["border-w-r", "border-w-l"],
      "border-w-y": ["border-w-t", "border-w-b"],
      "border-color": ["border-color-s", "border-color-e", "border-color-t", "border-color-r", "border-color-b", "border-color-l"],
      "border-color-x": ["border-color-r", "border-color-l"],
      "border-color-y": ["border-color-t", "border-color-b"],
      "scroll-m": ["scroll-mx", "scroll-my", "scroll-ms", "scroll-me", "scroll-mt", "scroll-mr", "scroll-mb", "scroll-ml"],
      "scroll-mx": ["scroll-mr", "scroll-ml"],
      "scroll-my": ["scroll-mt", "scroll-mb"],
      "scroll-p": ["scroll-px", "scroll-py", "scroll-ps", "scroll-pe", "scroll-pt", "scroll-pr", "scroll-pb", "scroll-pl"],
      "scroll-px": ["scroll-pr", "scroll-pl"],
      "scroll-py": ["scroll-pt", "scroll-pb"],
      touch: ["touch-x", "touch-y", "touch-pz"],
      "touch-x": ["touch"],
      "touch-y": ["touch"],
      "touch-pz": ["touch"]
    },
    conflictingClassGroupModifiers: {
      "font-size": ["leading"]
    }
  };
}, Ku = /* @__PURE__ */ PFe(HFe);
/*!
 * Font Awesome Free 6.7.2 by @fontawesome - https://fontawesome.com
 * License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License)
 * Copyright 2024 Fonticons, Inc.
 */
function GFe(e, t, r) {
  return (t = BFe(t)) in e ? Object.defineProperty(e, t, {
    value: r,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : e[t] = r, e;
}
function v8(e, t) {
  var r = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var n = Object.getOwnPropertySymbols(e);
    t && (n = n.filter(function(o) {
      return Object.getOwnPropertyDescriptor(e, o).enumerable;
    })), r.push.apply(r, n);
  }
  return r;
}
function Oe(e) {
  for (var t = 1; t < arguments.length; t++) {
    var r = arguments[t] != null ? arguments[t] : {};
    t % 2 ? v8(Object(r), !0).forEach(function(n) {
      GFe(e, n, r[n]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : v8(Object(r)).forEach(function(n) {
      Object.defineProperty(e, n, Object.getOwnPropertyDescriptor(r, n));
    });
  }
  return e;
}
function qFe(e, t) {
  if (typeof e != "object" || !e) return e;
  var r = e[Symbol.toPrimitive];
  if (r !== void 0) {
    var n = r.call(e, t);
    if (typeof n != "object") return n;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (t === "string" ? String : Number)(e);
}
function BFe(e) {
  var t = qFe(e, "string");
  return typeof t == "symbol" ? t : t + "";
}
const x8 = () => {
};
let U6 = {}, kQ = {}, $Q = null, OQ = {
  mark: x8,
  measure: x8
};
try {
  typeof window < "u" && (U6 = window), typeof document < "u" && (kQ = document), typeof MutationObserver < "u" && ($Q = MutationObserver), typeof performance < "u" && (OQ = performance);
} catch {
}
const {
  userAgent: w8 = ""
} = U6.navigator || {}, kc = U6, qr = kQ, k8 = $Q, Ty = OQ;
kc.document;
const Bi = !!qr.documentElement && !!qr.head && typeof qr.addEventListener == "function" && typeof qr.createElement == "function", EQ = ~w8.indexOf("MSIE") || ~w8.indexOf("Trident/");
var XFe = /fa(s|r|l|t|d|dr|dl|dt|b|k|kd|ss|sr|sl|st|sds|sdr|sdl|sdt)?[\-\ ]/, KFe = /Font ?Awesome ?([56 ]*)(Solid|Regular|Light|Thin|Duotone|Brands|Free|Pro|Sharp Duotone|Sharp|Kit)?.*/i, SQ = {
  classic: {
    fa: "solid",
    fas: "solid",
    "fa-solid": "solid",
    far: "regular",
    "fa-regular": "regular",
    fal: "light",
    "fa-light": "light",
    fat: "thin",
    "fa-thin": "thin",
    fab: "brands",
    "fa-brands": "brands"
  },
  duotone: {
    fa: "solid",
    fad: "solid",
    "fa-solid": "solid",
    "fa-duotone": "solid",
    fadr: "regular",
    "fa-regular": "regular",
    fadl: "light",
    "fa-light": "light",
    fadt: "thin",
    "fa-thin": "thin"
  },
  sharp: {
    fa: "solid",
    fass: "solid",
    "fa-solid": "solid",
    fasr: "regular",
    "fa-regular": "regular",
    fasl: "light",
    "fa-light": "light",
    fast: "thin",
    "fa-thin": "thin"
  },
  "sharp-duotone": {
    fa: "solid",
    fasds: "solid",
    "fa-solid": "solid",
    fasdr: "regular",
    "fa-regular": "regular",
    fasdl: "light",
    "fa-light": "light",
    fasdt: "thin",
    "fa-thin": "thin"
  }
}, JFe = {
  GROUP: "duotone-group",
  PRIMARY: "primary",
  SECONDARY: "secondary"
}, PQ = ["fa-classic", "fa-duotone", "fa-sharp", "fa-sharp-duotone"], kn = "classic", Nx = "duotone", QFe = "sharp", ZFe = "sharp-duotone", CQ = [kn, Nx, QFe, ZFe], eDe = {
  classic: {
    900: "fas",
    400: "far",
    normal: "far",
    300: "fal",
    100: "fat"
  },
  duotone: {
    900: "fad",
    400: "fadr",
    300: "fadl",
    100: "fadt"
  },
  sharp: {
    900: "fass",
    400: "fasr",
    300: "fasl",
    100: "fast"
  },
  "sharp-duotone": {
    900: "fasds",
    400: "fasdr",
    300: "fasdl",
    100: "fasdt"
  }
}, tDe = {
  "Font Awesome 6 Free": {
    900: "fas",
    400: "far"
  },
  "Font Awesome 6 Pro": {
    900: "fas",
    400: "far",
    normal: "far",
    300: "fal",
    100: "fat"
  },
  "Font Awesome 6 Brands": {
    400: "fab",
    normal: "fab"
  },
  "Font Awesome 6 Duotone": {
    900: "fad",
    400: "fadr",
    normal: "fadr",
    300: "fadl",
    100: "fadt"
  },
  "Font Awesome 6 Sharp": {
    900: "fass",
    400: "fasr",
    normal: "fasr",
    300: "fasl",
    100: "fast"
  },
  "Font Awesome 6 Sharp Duotone": {
    900: "fasds",
    400: "fasdr",
    normal: "fasdr",
    300: "fasdl",
    100: "fasdt"
  }
}, rDe = /* @__PURE__ */ new Map([["classic", {
  defaultShortPrefixId: "fas",
  defaultStyleId: "solid",
  styleIds: ["solid", "regular", "light", "thin", "brands"],
  futureStyleIds: [],
  defaultFontWeight: 900
}], ["sharp", {
  defaultShortPrefixId: "fass",
  defaultStyleId: "solid",
  styleIds: ["solid", "regular", "light", "thin"],
  futureStyleIds: [],
  defaultFontWeight: 900
}], ["duotone", {
  defaultShortPrefixId: "fad",
  defaultStyleId: "solid",
  styleIds: ["solid", "regular", "light", "thin"],
  futureStyleIds: [],
  defaultFontWeight: 900
}], ["sharp-duotone", {
  defaultShortPrefixId: "fasds",
  defaultStyleId: "solid",
  styleIds: ["solid", "regular", "light", "thin"],
  futureStyleIds: [],
  defaultFontWeight: 900
}]]), nDe = {
  classic: {
    solid: "fas",
    regular: "far",
    light: "fal",
    thin: "fat",
    brands: "fab"
  },
  duotone: {
    solid: "fad",
    regular: "fadr",
    light: "fadl",
    thin: "fadt"
  },
  sharp: {
    solid: "fass",
    regular: "fasr",
    light: "fasl",
    thin: "fast"
  },
  "sharp-duotone": {
    solid: "fasds",
    regular: "fasdr",
    light: "fasdl",
    thin: "fasdt"
  }
}, oDe = ["fak", "fa-kit", "fakd", "fa-kit-duotone"], $8 = {
  kit: {
    fak: "kit",
    "fa-kit": "kit"
  },
  "kit-duotone": {
    fakd: "kit-duotone",
    "fa-kit-duotone": "kit-duotone"
  }
}, aDe = ["kit"], iDe = {
  kit: {
    "fa-kit": "fak"
  }
}, sDe = ["fak", "fakd"], lDe = {
  kit: {
    fak: "fa-kit"
  }
}, O8 = {
  kit: {
    kit: "fak"
  },
  "kit-duotone": {
    "kit-duotone": "fakd"
  }
}, My = {
  GROUP: "duotone-group",
  SWAP_OPACITY: "swap-opacity",
  PRIMARY: "primary",
  SECONDARY: "secondary"
}, cDe = ["fa-classic", "fa-duotone", "fa-sharp", "fa-sharp-duotone"], uDe = ["fak", "fa-kit", "fakd", "fa-kit-duotone"], fDe = {
  "Font Awesome Kit": {
    400: "fak",
    normal: "fak"
  },
  "Font Awesome Kit Duotone": {
    400: "fakd",
    normal: "fakd"
  }
}, dDe = {
  classic: {
    "fa-brands": "fab",
    "fa-duotone": "fad",
    "fa-light": "fal",
    "fa-regular": "far",
    "fa-solid": "fas",
    "fa-thin": "fat"
  },
  duotone: {
    "fa-regular": "fadr",
    "fa-light": "fadl",
    "fa-thin": "fadt"
  },
  sharp: {
    "fa-solid": "fass",
    "fa-regular": "fasr",
    "fa-light": "fasl",
    "fa-thin": "fast"
  },
  "sharp-duotone": {
    "fa-solid": "fasds",
    "fa-regular": "fasdr",
    "fa-light": "fasdl",
    "fa-thin": "fasdt"
  }
}, pDe = {
  classic: ["fas", "far", "fal", "fat", "fad"],
  duotone: ["fadr", "fadl", "fadt"],
  sharp: ["fass", "fasr", "fasl", "fast"],
  "sharp-duotone": ["fasds", "fasdr", "fasdl", "fasdt"]
}, EE = {
  classic: {
    fab: "fa-brands",
    fad: "fa-duotone",
    fal: "fa-light",
    far: "fa-regular",
    fas: "fa-solid",
    fat: "fa-thin"
  },
  duotone: {
    fadr: "fa-regular",
    fadl: "fa-light",
    fadt: "fa-thin"
  },
  sharp: {
    fass: "fa-solid",
    fasr: "fa-regular",
    fasl: "fa-light",
    fast: "fa-thin"
  },
  "sharp-duotone": {
    fasds: "fa-solid",
    fasdr: "fa-regular",
    fasdl: "fa-light",
    fasdt: "fa-thin"
  }
}, mDe = ["fa-solid", "fa-regular", "fa-light", "fa-thin", "fa-duotone", "fa-brands"], SE = ["fa", "fas", "far", "fal", "fat", "fad", "fadr", "fadl", "fadt", "fab", "fass", "fasr", "fasl", "fast", "fasds", "fasdr", "fasdl", "fasdt", ...cDe, ...mDe], gDe = ["solid", "regular", "light", "thin", "duotone", "brands"], AQ = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], hDe = AQ.concat([11, 12, 13, 14, 15, 16, 17, 18, 19, 20]), bDe = [...Object.keys(pDe), ...gDe, "2xs", "xs", "sm", "lg", "xl", "2xl", "beat", "border", "fade", "beat-fade", "bounce", "flip-both", "flip-horizontal", "flip-vertical", "flip", "fw", "inverse", "layers-counter", "layers-text", "layers", "li", "pull-left", "pull-right", "pulse", "rotate-180", "rotate-270", "rotate-90", "rotate-by", "shake", "spin-pulse", "spin-reverse", "spin", "stack-1x", "stack-2x", "stack", "ul", My.GROUP, My.SWAP_OPACITY, My.PRIMARY, My.SECONDARY].concat(AQ.map((e) => "".concat(e, "x"))).concat(hDe.map((e) => "w-".concat(e))), yDe = {
  "Font Awesome 5 Free": {
    900: "fas",
    400: "far"
  },
  "Font Awesome 5 Pro": {
    900: "fas",
    400: "far",
    normal: "far",
    300: "fal"
  },
  "Font Awesome 5 Brands": {
    400: "fab",
    normal: "fab"
  },
  "Font Awesome 5 Duotone": {
    900: "fad"
  }
};
const Ti = "___FONT_AWESOME___", PE = 16, _Q = "fa", NQ = "svg-inline--fa", ju = "data-fa-i2svg", CE = "data-fa-pseudo-element", vDe = "data-fa-pseudo-element-pending", Y6 = "data-prefix", H6 = "data-icon", E8 = "fontawesome-i2svg", xDe = "async", wDe = ["HTML", "HEAD", "STYLE", "SCRIPT"], jQ = (() => {
  try {
    return process.env.NODE_ENV === "production";
  } catch {
    return !1;
  }
})();
function Sb(e) {
  return new Proxy(e, {
    get(t, r) {
      return r in t ? t[r] : t[kn];
    }
  });
}
const IQ = Oe({}, SQ);
IQ[kn] = Oe(Oe(Oe(Oe({}, {
  "fa-duotone": "duotone"
}), SQ[kn]), $8.kit), $8["kit-duotone"]);
const kDe = Sb(IQ), AE = Oe({}, nDe);
AE[kn] = Oe(Oe(Oe(Oe({}, {
  duotone: "fad"
}), AE[kn]), O8.kit), O8["kit-duotone"]);
const S8 = Sb(AE), _E = Oe({}, EE);
_E[kn] = Oe(Oe({}, _E[kn]), lDe.kit);
const G6 = Sb(_E), NE = Oe({}, dDe);
NE[kn] = Oe(Oe({}, NE[kn]), iDe.kit);
Sb(NE);
const $De = XFe, TQ = "fa-layers-text", ODe = KFe, EDe = Oe({}, eDe);
Sb(EDe);
const SDe = ["class", "data-prefix", "data-icon", "data-fa-transform", "data-fa-mask"], x$ = JFe, PDe = [...aDe, ...bDe], Gg = kc.FontAwesomeConfig || {};
function CDe(e) {
  var t = qr.querySelector("script[" + e + "]");
  if (t)
    return t.getAttribute(e);
}
function ADe(e) {
  return e === "" ? !0 : e === "false" ? !1 : e === "true" ? !0 : e;
}
qr && typeof qr.querySelector == "function" && [["data-family-prefix", "familyPrefix"], ["data-css-prefix", "cssPrefix"], ["data-family-default", "familyDefault"], ["data-style-default", "styleDefault"], ["data-replacement-class", "replacementClass"], ["data-auto-replace-svg", "autoReplaceSvg"], ["data-auto-add-css", "autoAddCss"], ["data-auto-a11y", "autoA11y"], ["data-search-pseudo-elements", "searchPseudoElements"], ["data-observe-mutations", "observeMutations"], ["data-mutate-approach", "mutateApproach"], ["data-keep-original-source", "keepOriginalSource"], ["data-measure-performance", "measurePerformance"], ["data-show-missing-icons", "showMissingIcons"]].forEach((e) => {
  let [t, r] = e;
  const n = ADe(CDe(t));
  n != null && (Gg[r] = n);
});
const MQ = {
  styleDefault: "solid",
  familyDefault: kn,
  cssPrefix: _Q,
  replacementClass: NQ,
  autoReplaceSvg: !0,
  autoAddCss: !0,
  autoA11y: !0,
  searchPseudoElements: !1,
  observeMutations: !0,
  mutateApproach: "async",
  keepOriginalSource: !0,
  measurePerformance: !1,
  showMissingIcons: !0
};
Gg.familyPrefix && (Gg.cssPrefix = Gg.familyPrefix);
const Sd = Oe(Oe({}, MQ), Gg);
Sd.autoReplaceSvg || (Sd.observeMutations = !1);
const Ke = {};
Object.keys(MQ).forEach((e) => {
  Object.defineProperty(Ke, e, {
    enumerable: !0,
    set: function(t) {
      Sd[e] = t, qg.forEach((r) => r(Ke));
    },
    get: function() {
      return Sd[e];
    }
  });
});
Object.defineProperty(Ke, "familyPrefix", {
  enumerable: !0,
  set: function(e) {
    Sd.cssPrefix = e, qg.forEach((t) => t(Ke));
  },
  get: function() {
    return Sd.cssPrefix;
  }
});
kc.FontAwesomeConfig = Ke;
const qg = [];
function _De(e) {
  return qg.push(e), () => {
    qg.splice(qg.indexOf(e), 1);
  };
}
const hl = PE, Ca = {
  size: 16,
  x: 0,
  y: 0,
  rotate: 0,
  flipX: !1,
  flipY: !1
};
function NDe(e) {
  if (!e || !Bi)
    return;
  const t = qr.createElement("style");
  t.setAttribute("type", "text/css"), t.innerHTML = e;
  const r = qr.head.childNodes;
  let n = null;
  for (let o = r.length - 1; o > -1; o--) {
    const a = r[o], i = (a.tagName || "").toUpperCase();
    ["STYLE", "LINK"].indexOf(i) > -1 && (n = a);
  }
  return qr.head.insertBefore(t, n), e;
}
const jDe = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
function Yh() {
  let e = 12, t = "";
  for (; e-- > 0; )
    t += jDe[Math.random() * 62 | 0];
  return t;
}
function ip(e) {
  const t = [];
  for (let r = (e || []).length >>> 0; r--; )
    t[r] = e[r];
  return t;
}
function q6(e) {
  return e.classList ? ip(e.classList) : (e.getAttribute("class") || "").split(" ").filter((t) => t);
}
function RQ(e) {
  return "".concat(e).replace(/&/g, "&amp;").replace(/"/g, "&quot;").replace(/'/g, "&#39;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
}
function IDe(e) {
  return Object.keys(e || {}).reduce((t, r) => t + "".concat(r, '="').concat(RQ(e[r]), '" '), "").trim();
}
function jx(e) {
  return Object.keys(e || {}).reduce((t, r) => t + "".concat(r, ": ").concat(e[r].trim(), ";"), "");
}
function B6(e) {
  return e.size !== Ca.size || e.x !== Ca.x || e.y !== Ca.y || e.rotate !== Ca.rotate || e.flipX || e.flipY;
}
function TDe(e) {
  let {
    transform: t,
    containerWidth: r,
    iconWidth: n
  } = e;
  const o = {
    transform: "translate(".concat(r / 2, " 256)")
  }, a = "translate(".concat(t.x * 32, ", ").concat(t.y * 32, ") "), i = "scale(".concat(t.size / 16 * (t.flipX ? -1 : 1), ", ").concat(t.size / 16 * (t.flipY ? -1 : 1), ") "), s = "rotate(".concat(t.rotate, " 0 0)"), l = {
    transform: "".concat(a, " ").concat(i, " ").concat(s)
  }, c = {
    transform: "translate(".concat(n / 2 * -1, " -256)")
  };
  return {
    outer: o,
    inner: l,
    path: c
  };
}
function MDe(e) {
  let {
    transform: t,
    width: r = PE,
    height: n = PE,
    startCentered: o = !1
  } = e, a = "";
  return o && EQ ? a += "translate(".concat(t.x / hl - r / 2, "em, ").concat(t.y / hl - n / 2, "em) ") : o ? a += "translate(calc(-50% + ".concat(t.x / hl, "em), calc(-50% + ").concat(t.y / hl, "em)) ") : a += "translate(".concat(t.x / hl, "em, ").concat(t.y / hl, "em) "), a += "scale(".concat(t.size / hl * (t.flipX ? -1 : 1), ", ").concat(t.size / hl * (t.flipY ? -1 : 1), ") "), a += "rotate(".concat(t.rotate, "deg) "), a;
}
var RDe = `:root, :host {
  --fa-font-solid: normal 900 1em/1 "Font Awesome 6 Free";
  --fa-font-regular: normal 400 1em/1 "Font Awesome 6 Free";
  --fa-font-light: normal 300 1em/1 "Font Awesome 6 Pro";
  --fa-font-thin: normal 100 1em/1 "Font Awesome 6 Pro";
  --fa-font-duotone: normal 900 1em/1 "Font Awesome 6 Duotone";
  --fa-font-duotone-regular: normal 400 1em/1 "Font Awesome 6 Duotone";
  --fa-font-duotone-light: normal 300 1em/1 "Font Awesome 6 Duotone";
  --fa-font-duotone-thin: normal 100 1em/1 "Font Awesome 6 Duotone";
  --fa-font-brands: normal 400 1em/1 "Font Awesome 6 Brands";
  --fa-font-sharp-solid: normal 900 1em/1 "Font Awesome 6 Sharp";
  --fa-font-sharp-regular: normal 400 1em/1 "Font Awesome 6 Sharp";
  --fa-font-sharp-light: normal 300 1em/1 "Font Awesome 6 Sharp";
  --fa-font-sharp-thin: normal 100 1em/1 "Font Awesome 6 Sharp";
  --fa-font-sharp-duotone-solid: normal 900 1em/1 "Font Awesome 6 Sharp Duotone";
  --fa-font-sharp-duotone-regular: normal 400 1em/1 "Font Awesome 6 Sharp Duotone";
  --fa-font-sharp-duotone-light: normal 300 1em/1 "Font Awesome 6 Sharp Duotone";
  --fa-font-sharp-duotone-thin: normal 100 1em/1 "Font Awesome 6 Sharp Duotone";
}

svg:not(:root).svg-inline--fa, svg:not(:host).svg-inline--fa {
  overflow: visible;
  box-sizing: content-box;
}

.svg-inline--fa {
  display: var(--fa-display, inline-block);
  height: 1em;
  overflow: visible;
  vertical-align: -0.125em;
}
.svg-inline--fa.fa-2xs {
  vertical-align: 0.1em;
}
.svg-inline--fa.fa-xs {
  vertical-align: 0em;
}
.svg-inline--fa.fa-sm {
  vertical-align: -0.0714285705em;
}
.svg-inline--fa.fa-lg {
  vertical-align: -0.2em;
}
.svg-inline--fa.fa-xl {
  vertical-align: -0.25em;
}
.svg-inline--fa.fa-2xl {
  vertical-align: -0.3125em;
}
.svg-inline--fa.fa-pull-left {
  margin-right: var(--fa-pull-margin, 0.3em);
  width: auto;
}
.svg-inline--fa.fa-pull-right {
  margin-left: var(--fa-pull-margin, 0.3em);
  width: auto;
}
.svg-inline--fa.fa-li {
  width: var(--fa-li-width, 2em);
  top: 0.25em;
}
.svg-inline--fa.fa-fw {
  width: var(--fa-fw-width, 1.25em);
}

.fa-layers svg.svg-inline--fa {
  bottom: 0;
  left: 0;
  margin: auto;
  position: absolute;
  right: 0;
  top: 0;
}

.fa-layers-counter, .fa-layers-text {
  display: inline-block;
  position: absolute;
  text-align: center;
}

.fa-layers {
  display: inline-block;
  height: 1em;
  position: relative;
  text-align: center;
  vertical-align: -0.125em;
  width: 1em;
}
.fa-layers svg.svg-inline--fa {
  transform-origin: center center;
}

.fa-layers-text {
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  transform-origin: center center;
}

.fa-layers-counter {
  background-color: var(--fa-counter-background-color, #ff253a);
  border-radius: var(--fa-counter-border-radius, 1em);
  box-sizing: border-box;
  color: var(--fa-inverse, #fff);
  line-height: var(--fa-counter-line-height, 1);
  max-width: var(--fa-counter-max-width, 5em);
  min-width: var(--fa-counter-min-width, 1.5em);
  overflow: hidden;
  padding: var(--fa-counter-padding, 0.25em 0.5em);
  right: var(--fa-right, 0);
  text-overflow: ellipsis;
  top: var(--fa-top, 0);
  transform: scale(var(--fa-counter-scale, 0.25));
  transform-origin: top right;
}

.fa-layers-bottom-right {
  bottom: var(--fa-bottom, 0);
  right: var(--fa-right, 0);
  top: auto;
  transform: scale(var(--fa-layers-scale, 0.25));
  transform-origin: bottom right;
}

.fa-layers-bottom-left {
  bottom: var(--fa-bottom, 0);
  left: var(--fa-left, 0);
  right: auto;
  top: auto;
  transform: scale(var(--fa-layers-scale, 0.25));
  transform-origin: bottom left;
}

.fa-layers-top-right {
  top: var(--fa-top, 0);
  right: var(--fa-right, 0);
  transform: scale(var(--fa-layers-scale, 0.25));
  transform-origin: top right;
}

.fa-layers-top-left {
  left: var(--fa-left, 0);
  right: auto;
  top: var(--fa-top, 0);
  transform: scale(var(--fa-layers-scale, 0.25));
  transform-origin: top left;
}

.fa-1x {
  font-size: 1em;
}

.fa-2x {
  font-size: 2em;
}

.fa-3x {
  font-size: 3em;
}

.fa-4x {
  font-size: 4em;
}

.fa-5x {
  font-size: 5em;
}

.fa-6x {
  font-size: 6em;
}

.fa-7x {
  font-size: 7em;
}

.fa-8x {
  font-size: 8em;
}

.fa-9x {
  font-size: 9em;
}

.fa-10x {
  font-size: 10em;
}

.fa-2xs {
  font-size: 0.625em;
  line-height: 0.1em;
  vertical-align: 0.225em;
}

.fa-xs {
  font-size: 0.75em;
  line-height: 0.0833333337em;
  vertical-align: 0.125em;
}

.fa-sm {
  font-size: 0.875em;
  line-height: 0.0714285718em;
  vertical-align: 0.0535714295em;
}

.fa-lg {
  font-size: 1.25em;
  line-height: 0.05em;
  vertical-align: -0.075em;
}

.fa-xl {
  font-size: 1.5em;
  line-height: 0.0416666682em;
  vertical-align: -0.125em;
}

.fa-2xl {
  font-size: 2em;
  line-height: 0.03125em;
  vertical-align: -0.1875em;
}

.fa-fw {
  text-align: center;
  width: 1.25em;
}

.fa-ul {
  list-style-type: none;
  margin-left: var(--fa-li-margin, 2.5em);
  padding-left: 0;
}
.fa-ul > li {
  position: relative;
}

.fa-li {
  left: calc(-1 * var(--fa-li-width, 2em));
  position: absolute;
  text-align: center;
  width: var(--fa-li-width, 2em);
  line-height: inherit;
}

.fa-border {
  border-color: var(--fa-border-color, #eee);
  border-radius: var(--fa-border-radius, 0.1em);
  border-style: var(--fa-border-style, solid);
  border-width: var(--fa-border-width, 0.08em);
  padding: var(--fa-border-padding, 0.2em 0.25em 0.15em);
}

.fa-pull-left {
  float: left;
  margin-right: var(--fa-pull-margin, 0.3em);
}

.fa-pull-right {
  float: right;
  margin-left: var(--fa-pull-margin, 0.3em);
}

.fa-beat {
  animation-name: fa-beat;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, ease-in-out);
}

.fa-bounce {
  animation-name: fa-bounce;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.28, 0.84, 0.42, 1));
}

.fa-fade {
  animation-name: fa-fade;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));
}

.fa-beat-fade {
  animation-name: fa-beat-fade;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));
}

.fa-flip {
  animation-name: fa-flip;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, ease-in-out);
}

.fa-shake {
  animation-name: fa-shake;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, linear);
}

.fa-spin {
  animation-name: fa-spin;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 2s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, linear);
}

.fa-spin-reverse {
  --fa-animation-direction: reverse;
}

.fa-pulse,
.fa-spin-pulse {
  animation-name: fa-spin;
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, steps(8));
}

@media (prefers-reduced-motion: reduce) {
  .fa-beat,
.fa-bounce,
.fa-fade,
.fa-beat-fade,
.fa-flip,
.fa-pulse,
.fa-shake,
.fa-spin,
.fa-spin-pulse {
    animation-delay: -1ms;
    animation-duration: 1ms;
    animation-iteration-count: 1;
    transition-delay: 0s;
    transition-duration: 0s;
  }
}
@keyframes fa-beat {
  0%, 90% {
    transform: scale(1);
  }
  45% {
    transform: scale(var(--fa-beat-scale, 1.25));
  }
}
@keyframes fa-bounce {
  0% {
    transform: scale(1, 1) translateY(0);
  }
  10% {
    transform: scale(var(--fa-bounce-start-scale-x, 1.1), var(--fa-bounce-start-scale-y, 0.9)) translateY(0);
  }
  30% {
    transform: scale(var(--fa-bounce-jump-scale-x, 0.9), var(--fa-bounce-jump-scale-y, 1.1)) translateY(var(--fa-bounce-height, -0.5em));
  }
  50% {
    transform: scale(var(--fa-bounce-land-scale-x, 1.05), var(--fa-bounce-land-scale-y, 0.95)) translateY(0);
  }
  57% {
    transform: scale(1, 1) translateY(var(--fa-bounce-rebound, -0.125em));
  }
  64% {
    transform: scale(1, 1) translateY(0);
  }
  100% {
    transform: scale(1, 1) translateY(0);
  }
}
@keyframes fa-fade {
  50% {
    opacity: var(--fa-fade-opacity, 0.4);
  }
}
@keyframes fa-beat-fade {
  0%, 100% {
    opacity: var(--fa-beat-fade-opacity, 0.4);
    transform: scale(1);
  }
  50% {
    opacity: 1;
    transform: scale(var(--fa-beat-fade-scale, 1.125));
  }
}
@keyframes fa-flip {
  50% {
    transform: rotate3d(var(--fa-flip-x, 0), var(--fa-flip-y, 1), var(--fa-flip-z, 0), var(--fa-flip-angle, -180deg));
  }
}
@keyframes fa-shake {
  0% {
    transform: rotate(-15deg);
  }
  4% {
    transform: rotate(15deg);
  }
  8%, 24% {
    transform: rotate(-18deg);
  }
  12%, 28% {
    transform: rotate(18deg);
  }
  16% {
    transform: rotate(-22deg);
  }
  20% {
    transform: rotate(22deg);
  }
  32% {
    transform: rotate(-12deg);
  }
  36% {
    transform: rotate(12deg);
  }
  40%, 100% {
    transform: rotate(0deg);
  }
}
@keyframes fa-spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
.fa-rotate-90 {
  transform: rotate(90deg);
}

.fa-rotate-180 {
  transform: rotate(180deg);
}

.fa-rotate-270 {
  transform: rotate(270deg);
}

.fa-flip-horizontal {
  transform: scale(-1, 1);
}

.fa-flip-vertical {
  transform: scale(1, -1);
}

.fa-flip-both,
.fa-flip-horizontal.fa-flip-vertical {
  transform: scale(-1, -1);
}

.fa-rotate-by {
  transform: rotate(var(--fa-rotate-angle, 0));
}

.fa-stack {
  display: inline-block;
  vertical-align: middle;
  height: 2em;
  position: relative;
  width: 2.5em;
}

.fa-stack-1x,
.fa-stack-2x {
  bottom: 0;
  left: 0;
  margin: auto;
  position: absolute;
  right: 0;
  top: 0;
  z-index: var(--fa-stack-z-index, auto);
}

.svg-inline--fa.fa-stack-1x {
  height: 1em;
  width: 1.25em;
}
.svg-inline--fa.fa-stack-2x {
  height: 2em;
  width: 2.5em;
}

.fa-inverse {
  color: var(--fa-inverse, #fff);
}

.sr-only,
.fa-sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.sr-only-focusable:not(:focus),
.fa-sr-only-focusable:not(:focus) {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.svg-inline--fa .fa-primary {
  fill: var(--fa-primary-color, currentColor);
  opacity: var(--fa-primary-opacity, 1);
}

.svg-inline--fa .fa-secondary {
  fill: var(--fa-secondary-color, currentColor);
  opacity: var(--fa-secondary-opacity, 0.4);
}

.svg-inline--fa.fa-swap-opacity .fa-primary {
  opacity: var(--fa-secondary-opacity, 0.4);
}

.svg-inline--fa.fa-swap-opacity .fa-secondary {
  opacity: var(--fa-primary-opacity, 1);
}

.svg-inline--fa mask .fa-primary,
.svg-inline--fa mask .fa-secondary {
  fill: black;
}`;
function zQ() {
  const e = _Q, t = NQ, r = Ke.cssPrefix, n = Ke.replacementClass;
  let o = RDe;
  if (r !== e || n !== t) {
    const a = new RegExp("\\.".concat(e, "\\-"), "g"), i = new RegExp("\\--".concat(e, "\\-"), "g"), s = new RegExp("\\.".concat(t), "g");
    o = o.replace(a, ".".concat(r, "-")).replace(i, "--".concat(r, "-")).replace(s, ".".concat(n));
  }
  return o;
}
let P8 = !1;
function w$() {
  Ke.autoAddCss && !P8 && (NDe(zQ()), P8 = !0);
}
var zDe = {
  mixout() {
    return {
      dom: {
        css: zQ,
        insertCss: w$
      }
    };
  },
  hooks() {
    return {
      beforeDOMElementCreation() {
        w$();
      },
      beforeI2svg() {
        w$();
      }
    };
  }
};
const Mi = kc || {};
Mi[Ti] || (Mi[Ti] = {});
Mi[Ti].styles || (Mi[Ti].styles = {});
Mi[Ti].hooks || (Mi[Ti].hooks = {});
Mi[Ti].shims || (Mi[Ti].shims = []);
var Aa = Mi[Ti];
const FQ = [], DQ = function() {
  qr.removeEventListener("DOMContentLoaded", DQ), C1 = 1, FQ.map((e) => e());
};
let C1 = !1;
Bi && (C1 = (qr.documentElement.doScroll ? /^loaded|^c/ : /^loaded|^i|^c/).test(qr.readyState), C1 || qr.addEventListener("DOMContentLoaded", DQ));
function FDe(e) {
  Bi && (C1 ? setTimeout(e, 0) : FQ.push(e));
}
function Pb(e) {
  const {
    tag: t,
    attributes: r = {},
    children: n = []
  } = e;
  return typeof e == "string" ? RQ(e) : "<".concat(t, " ").concat(IDe(r), ">").concat(n.map(Pb).join(""), "</").concat(t, ">");
}
function C8(e, t, r) {
  if (e && e[t] && e[t][r])
    return {
      prefix: t,
      iconName: r,
      icon: e[t][r]
    };
}
var k$ = function(e, t, r, n) {
  var o = Object.keys(e), a = o.length, i = t, s, l, c;
  for (r === void 0 ? (s = 1, c = e[o[0]]) : (s = 0, c = r); s < a; s++)
    l = o[s], c = i(c, e[l], l, e);
  return c;
};
function DDe(e) {
  const t = [];
  let r = 0;
  const n = e.length;
  for (; r < n; ) {
    const o = e.charCodeAt(r++);
    if (o >= 55296 && o <= 56319 && r < n) {
      const a = e.charCodeAt(r++);
      (a & 64512) == 56320 ? t.push(((o & 1023) << 10) + (a & 1023) + 65536) : (t.push(o), r--);
    } else
      t.push(o);
  }
  return t;
}
function LQ(e) {
  const t = DDe(e);
  return t.length === 1 ? t[0].toString(16) : null;
}
function LDe(e, t) {
  const r = e.length;
  let n = e.charCodeAt(t), o;
  return n >= 55296 && n <= 56319 && r > t + 1 && (o = e.charCodeAt(t + 1), o >= 56320 && o <= 57343) ? (n - 55296) * 1024 + o - 56320 + 65536 : n;
}
function A8(e) {
  return Object.keys(e).reduce((t, r) => {
    const n = e[r];
    return n.icon ? t[n.iconName] = n.icon : t[r] = n, t;
  }, {});
}
function jE(e, t) {
  let r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
  const {
    skipHooks: n = !1
  } = r, o = A8(t);
  typeof Aa.hooks.addPack == "function" && !n ? Aa.hooks.addPack(e, A8(t)) : Aa.styles[e] = Oe(Oe({}, Aa.styles[e] || {}), o), e === "fas" && jE("fa", t);
}
const {
  styles: Hh,
  shims: VDe
} = Aa, VQ = Object.keys(G6), WDe = VQ.reduce((e, t) => (e[t] = Object.keys(G6[t]), e), {});
let X6 = null, WQ = {}, UQ = {}, YQ = {}, HQ = {}, GQ = {};
function UDe(e) {
  return ~PDe.indexOf(e);
}
function YDe(e, t) {
  const r = t.split("-"), n = r[0], o = r.slice(1).join("-");
  return n === e && o !== "" && !UDe(o) ? o : null;
}
const qQ = () => {
  const e = (n) => k$(Hh, (o, a, i) => (o[i] = k$(a, n, {}), o), {});
  WQ = e((n, o, a) => (o[3] && (n[o[3]] = a), o[2] && o[2].filter((i) => typeof i == "number").forEach((i) => {
    n[i.toString(16)] = a;
  }), n)), UQ = e((n, o, a) => (n[a] = a, o[2] && o[2].filter((i) => typeof i == "string").forEach((i) => {
    n[i] = a;
  }), n)), GQ = e((n, o, a) => {
    const i = o[2];
    return n[a] = a, i.forEach((s) => {
      n[s] = a;
    }), n;
  });
  const t = "far" in Hh || Ke.autoFetchSvg, r = k$(VDe, (n, o) => {
    const a = o[0];
    let i = o[1];
    const s = o[2];
    return i === "far" && !t && (i = "fas"), typeof a == "string" && (n.names[a] = {
      prefix: i,
      iconName: s
    }), typeof a == "number" && (n.unicodes[a.toString(16)] = {
      prefix: i,
      iconName: s
    }), n;
  }, {
    names: {},
    unicodes: {}
  });
  YQ = r.names, HQ = r.unicodes, X6 = Ix(Ke.styleDefault, {
    family: Ke.familyDefault
  });
};
_De((e) => {
  X6 = Ix(e.styleDefault, {
    family: Ke.familyDefault
  });
});
qQ();
function K6(e, t) {
  return (WQ[e] || {})[t];
}
function HDe(e, t) {
  return (UQ[e] || {})[t];
}
function Zc(e, t) {
  return (GQ[e] || {})[t];
}
function BQ(e) {
  return YQ[e] || {
    prefix: null,
    iconName: null
  };
}
function GDe(e) {
  const t = HQ[e], r = K6("fas", e);
  return t || (r ? {
    prefix: "fas",
    iconName: r
  } : null) || {
    prefix: null,
    iconName: null
  };
}
function $c() {
  return X6;
}
const XQ = () => ({
  prefix: null,
  iconName: null,
  rest: []
});
function qDe(e) {
  let t = kn;
  const r = VQ.reduce((n, o) => (n[o] = "".concat(Ke.cssPrefix, "-").concat(o), n), {});
  return CQ.forEach((n) => {
    (e.includes(r[n]) || e.some((o) => WDe[n].includes(o))) && (t = n);
  }), t;
}
function Ix(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  const {
    family: r = kn
  } = t, n = kDe[r][e];
  if (r === Nx && !e)
    return "fad";
  const o = S8[r][e] || S8[r][n], a = e in Aa.styles ? e : null;
  return o || a || null;
}
function BDe(e) {
  let t = [], r = null;
  return e.forEach((n) => {
    const o = YDe(Ke.cssPrefix, n);
    o ? r = o : n && t.push(n);
  }), {
    iconName: r,
    rest: t
  };
}
function _8(e) {
  return e.sort().filter((t, r, n) => n.indexOf(t) === r);
}
function Tx(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  const {
    skipLookups: r = !1
  } = t;
  let n = null;
  const o = SE.concat(uDe), a = _8(e.filter((f) => o.includes(f))), i = _8(e.filter((f) => !SE.includes(f))), s = a.filter((f) => (n = f, !PQ.includes(f))), [l = null] = s, c = qDe(a), u = Oe(Oe({}, BDe(i)), {}, {
    prefix: Ix(l, {
      family: c
    })
  });
  return Oe(Oe(Oe({}, u), QDe({
    values: e,
    family: c,
    styles: Hh,
    config: Ke,
    canonical: u,
    givenPrefix: n
  })), XDe(r, n, u));
}
function XDe(e, t, r) {
  let {
    prefix: n,
    iconName: o
  } = r;
  if (e || !n || !o)
    return {
      prefix: n,
      iconName: o
    };
  const a = t === "fa" ? BQ(o) : {}, i = Zc(n, o);
  return o = a.iconName || i || o, n = a.prefix || n, n === "far" && !Hh.far && Hh.fas && !Ke.autoFetchSvg && (n = "fas"), {
    prefix: n,
    iconName: o
  };
}
const KDe = CQ.filter((e) => e !== kn || e !== Nx), JDe = Object.keys(EE).filter((e) => e !== kn).map((e) => Object.keys(EE[e])).flat();
function QDe(e) {
  const {
    values: t,
    family: r,
    canonical: n,
    givenPrefix: o = "",
    styles: a = {},
    config: i = {}
  } = e, s = r === Nx, l = t.includes("fa-duotone") || t.includes("fad"), c = i.familyDefault === "duotone", u = n.prefix === "fad" || n.prefix === "fa-duotone";
  if (!s && (l || c || u) && (n.prefix = "fad"), (t.includes("fa-brands") || t.includes("fab")) && (n.prefix = "fab"), !n.prefix && KDe.includes(r) && (Object.keys(a).find((f) => JDe.includes(f)) || i.autoFetchSvg)) {
    const f = rDe.get(r).defaultShortPrefixId;
    n.prefix = f, n.iconName = Zc(n.prefix, n.iconName) || n.iconName;
  }
  return (n.prefix === "fa" || o === "fa") && (n.prefix = $c() || "fas"), n;
}
class ZDe {
  constructor() {
    this.definitions = {};
  }
  add() {
    for (var t = arguments.length, r = new Array(t), n = 0; n < t; n++)
      r[n] = arguments[n];
    const o = r.reduce(this._pullDefinitions, {});
    Object.keys(o).forEach((a) => {
      this.definitions[a] = Oe(Oe({}, this.definitions[a] || {}), o[a]), jE(a, o[a]);
      const i = G6[kn][a];
      i && jE(i, o[a]), qQ();
    });
  }
  reset() {
    this.definitions = {};
  }
  _pullDefinitions(t, r) {
    const n = r.prefix && r.iconName && r.icon ? {
      0: r
    } : r;
    return Object.keys(n).map((o) => {
      const {
        prefix: a,
        iconName: i,
        icon: s
      } = n[o], l = s[2];
      t[a] || (t[a] = {}), l.length > 0 && l.forEach((c) => {
        typeof c == "string" && (t[a][c] = s);
      }), t[a][i] = s;
    }), t;
  }
}
let N8 = [], $f = {};
const id = {}, eLe = Object.keys(id);
function tLe(e, t) {
  let {
    mixoutsTo: r
  } = t;
  return N8 = e, $f = {}, Object.keys(id).forEach((n) => {
    eLe.indexOf(n) === -1 && delete id[n];
  }), N8.forEach((n) => {
    const o = n.mixout ? n.mixout() : {};
    if (Object.keys(o).forEach((a) => {
      typeof o[a] == "function" && (r[a] = o[a]), typeof o[a] == "object" && Object.keys(o[a]).forEach((i) => {
        r[a] || (r[a] = {}), r[a][i] = o[a][i];
      });
    }), n.hooks) {
      const a = n.hooks();
      Object.keys(a).forEach((i) => {
        $f[i] || ($f[i] = []), $f[i].push(a[i]);
      });
    }
    n.provides && n.provides(id);
  }), r;
}
function IE(e, t) {
  for (var r = arguments.length, n = new Array(r > 2 ? r - 2 : 0), o = 2; o < r; o++)
    n[o - 2] = arguments[o];
  return ($f[e] || []).forEach((a) => {
    t = a.apply(null, [t, ...n]);
  }), t;
}
function Iu(e) {
  for (var t = arguments.length, r = new Array(t > 1 ? t - 1 : 0), n = 1; n < t; n++)
    r[n - 1] = arguments[n];
  ($f[e] || []).forEach((o) => {
    o.apply(null, r);
  });
}
function Oc() {
  const e = arguments[0], t = Array.prototype.slice.call(arguments, 1);
  return id[e] ? id[e].apply(null, t) : void 0;
}
function TE(e) {
  e.prefix === "fa" && (e.prefix = "fas");
  let {
    iconName: t
  } = e;
  const r = e.prefix || $c();
  if (t)
    return t = Zc(r, t) || t, C8(KQ.definitions, r, t) || C8(Aa.styles, r, t);
}
const KQ = new ZDe(), rLe = () => {
  Ke.autoReplaceSvg = !1, Ke.observeMutations = !1, Iu("noAuto");
}, nLe = {
  i2svg: function() {
    let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    return Bi ? (Iu("beforeI2svg", e), Oc("pseudoElements2svg", e), Oc("i2svg", e)) : Promise.reject(new Error("Operation requires a DOM of some kind."));
  },
  watch: function() {
    let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    const {
      autoReplaceSvgRoot: t
    } = e;
    Ke.autoReplaceSvg === !1 && (Ke.autoReplaceSvg = !0), Ke.observeMutations = !0, FDe(() => {
      aLe({
        autoReplaceSvgRoot: t
      }), Iu("watch", e);
    });
  }
}, oLe = {
  icon: (e) => {
    if (e === null)
      return null;
    if (typeof e == "object" && e.prefix && e.iconName)
      return {
        prefix: e.prefix,
        iconName: Zc(e.prefix, e.iconName) || e.iconName
      };
    if (Array.isArray(e) && e.length === 2) {
      const t = e[1].indexOf("fa-") === 0 ? e[1].slice(3) : e[1], r = Ix(e[0]);
      return {
        prefix: r,
        iconName: Zc(r, t) || t
      };
    }
    if (typeof e == "string" && (e.indexOf("".concat(Ke.cssPrefix, "-")) > -1 || e.match($De))) {
      const t = Tx(e.split(" "), {
        skipLookups: !0
      });
      return {
        prefix: t.prefix || $c(),
        iconName: Zc(t.prefix, t.iconName) || t.iconName
      };
    }
    if (typeof e == "string") {
      const t = $c();
      return {
        prefix: t,
        iconName: Zc(t, e) || e
      };
    }
  }
}, so = {
  noAuto: rLe,
  config: Ke,
  dom: nLe,
  parse: oLe,
  library: KQ,
  findIconDefinition: TE,
  toHtml: Pb
}, aLe = function() {
  let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  const {
    autoReplaceSvgRoot: t = qr
  } = e;
  (Object.keys(Aa.styles).length > 0 || Ke.autoFetchSvg) && Bi && Ke.autoReplaceSvg && so.dom.i2svg({
    node: t
  });
};
function Mx(e, t) {
  return Object.defineProperty(e, "abstract", {
    get: t
  }), Object.defineProperty(e, "html", {
    get: function() {
      return e.abstract.map((r) => Pb(r));
    }
  }), Object.defineProperty(e, "node", {
    get: function() {
      if (!Bi) return;
      const r = qr.createElement("div");
      return r.innerHTML = e.html, r.children;
    }
  }), e;
}
function iLe(e) {
  let {
    children: t,
    main: r,
    mask: n,
    attributes: o,
    styles: a,
    transform: i
  } = e;
  if (B6(i) && r.found && !n.found) {
    const {
      width: s,
      height: l
    } = r, c = {
      x: s / l / 2,
      y: 0.5
    };
    o.style = jx(Oe(Oe({}, a), {}, {
      "transform-origin": "".concat(c.x + i.x / 16, "em ").concat(c.y + i.y / 16, "em")
    }));
  }
  return [{
    tag: "svg",
    attributes: o,
    children: t
  }];
}
function sLe(e) {
  let {
    prefix: t,
    iconName: r,
    children: n,
    attributes: o,
    symbol: a
  } = e;
  const i = a === !0 ? "".concat(t, "-").concat(Ke.cssPrefix, "-").concat(r) : a;
  return [{
    tag: "svg",
    attributes: {
      style: "display: none;"
    },
    children: [{
      tag: "symbol",
      attributes: Oe(Oe({}, o), {}, {
        id: i
      }),
      children: n
    }]
  }];
}
function J6(e) {
  const {
    icons: {
      main: t,
      mask: r
    },
    prefix: n,
    iconName: o,
    transform: a,
    symbol: i,
    title: s,
    maskId: l,
    titleId: c,
    extra: u,
    watchable: f = !1
  } = e, {
    width: p,
    height: v
  } = r.found ? r : t, x = sDe.includes(n), b = [Ke.replacementClass, o ? "".concat(Ke.cssPrefix, "-").concat(o) : ""].filter((h) => u.classes.indexOf(h) === -1).filter((h) => h !== "" || !!h).concat(u.classes).join(" ");
  let m = {
    children: [],
    attributes: Oe(Oe({}, u.attributes), {}, {
      "data-prefix": n,
      "data-icon": o,
      class: b,
      role: u.attributes.role || "img",
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 ".concat(p, " ").concat(v)
    })
  };
  const w = x && !~u.classes.indexOf("fa-fw") ? {
    width: "".concat(p / v * 16 * 0.0625, "em")
  } : {};
  f && (m.attributes[ju] = ""), s && (m.children.push({
    tag: "title",
    attributes: {
      id: m.attributes["aria-labelledby"] || "title-".concat(c || Yh())
    },
    children: [s]
  }), delete m.attributes.title);
  const $ = Oe(Oe({}, m), {}, {
    prefix: n,
    iconName: o,
    main: t,
    mask: r,
    maskId: l,
    transform: a,
    symbol: i,
    styles: Oe(Oe({}, w), u.styles)
  }), {
    children: E,
    attributes: S
  } = r.found && t.found ? Oc("generateAbstractMask", $) || {
    children: [],
    attributes: {}
  } : Oc("generateAbstractIcon", $) || {
    children: [],
    attributes: {}
  };
  return $.children = E, $.attributes = S, i ? sLe($) : iLe($);
}
function j8(e) {
  const {
    content: t,
    width: r,
    height: n,
    transform: o,
    title: a,
    extra: i,
    watchable: s = !1
  } = e, l = Oe(Oe(Oe({}, i.attributes), a ? {
    title: a
  } : {}), {}, {
    class: i.classes.join(" ")
  });
  s && (l[ju] = "");
  const c = Oe({}, i.styles);
  B6(o) && (c.transform = MDe({
    transform: o,
    startCentered: !0,
    width: r,
    height: n
  }), c["-webkit-transform"] = c.transform);
  const u = jx(c);
  u.length > 0 && (l.style = u);
  const f = [];
  return f.push({
    tag: "span",
    attributes: l,
    children: [t]
  }), a && f.push({
    tag: "span",
    attributes: {
      class: "sr-only"
    },
    children: [a]
  }), f;
}
function lLe(e) {
  const {
    content: t,
    title: r,
    extra: n
  } = e, o = Oe(Oe(Oe({}, n.attributes), r ? {
    title: r
  } : {}), {}, {
    class: n.classes.join(" ")
  }), a = jx(n.styles);
  a.length > 0 && (o.style = a);
  const i = [];
  return i.push({
    tag: "span",
    attributes: o,
    children: [t]
  }), r && i.push({
    tag: "span",
    attributes: {
      class: "sr-only"
    },
    children: [r]
  }), i;
}
const {
  styles: $$
} = Aa;
function ME(e) {
  const t = e[0], r = e[1], [n] = e.slice(4);
  let o = null;
  return Array.isArray(n) ? o = {
    tag: "g",
    attributes: {
      class: "".concat(Ke.cssPrefix, "-").concat(x$.GROUP)
    },
    children: [{
      tag: "path",
      attributes: {
        class: "".concat(Ke.cssPrefix, "-").concat(x$.SECONDARY),
        fill: "currentColor",
        d: n[0]
      }
    }, {
      tag: "path",
      attributes: {
        class: "".concat(Ke.cssPrefix, "-").concat(x$.PRIMARY),
        fill: "currentColor",
        d: n[1]
      }
    }]
  } : o = {
    tag: "path",
    attributes: {
      fill: "currentColor",
      d: n
    }
  }, {
    found: !0,
    width: t,
    height: r,
    icon: o
  };
}
const cLe = {
  found: !1,
  width: 512,
  height: 512
};
function uLe(e, t) {
  !jQ && !Ke.showMissingIcons && e && console.error('Icon with name "'.concat(e, '" and prefix "').concat(t, '" is missing.'));
}
function RE(e, t) {
  let r = t;
  return t === "fa" && Ke.styleDefault !== null && (t = $c()), new Promise((n, o) => {
    if (r === "fa") {
      const a = BQ(e) || {};
      e = a.iconName || e, t = a.prefix || t;
    }
    if (e && t && $$[t] && $$[t][e]) {
      const a = $$[t][e];
      return n(ME(a));
    }
    uLe(e, t), n(Oe(Oe({}, cLe), {}, {
      icon: Ke.showMissingIcons && e ? Oc("missingIconAbstract") || {} : {}
    }));
  });
}
const I8 = () => {
}, zE = Ke.measurePerformance && Ty && Ty.mark && Ty.measure ? Ty : {
  mark: I8,
  measure: I8
}, ug = 'FA "6.7.2"', fLe = (e) => (zE.mark("".concat(ug, " ").concat(e, " begins")), () => JQ(e)), JQ = (e) => {
  zE.mark("".concat(ug, " ").concat(e, " ends")), zE.measure("".concat(ug, " ").concat(e), "".concat(ug, " ").concat(e, " begins"), "".concat(ug, " ").concat(e, " ends"));
};
var Q6 = {
  begin: fLe,
  end: JQ
};
const Ov = () => {
};
function T8(e) {
  return typeof (e.getAttribute ? e.getAttribute(ju) : null) == "string";
}
function dLe(e) {
  const t = e.getAttribute ? e.getAttribute(Y6) : null, r = e.getAttribute ? e.getAttribute(H6) : null;
  return t && r;
}
function pLe(e) {
  return e && e.classList && e.classList.contains && e.classList.contains(Ke.replacementClass);
}
function mLe() {
  return Ke.autoReplaceSvg === !0 ? Ev.replace : Ev[Ke.autoReplaceSvg] || Ev.replace;
}
function gLe(e) {
  return qr.createElementNS("http://www.w3.org/2000/svg", e);
}
function hLe(e) {
  return qr.createElement(e);
}
function QQ(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  const {
    ceFn: r = e.tag === "svg" ? gLe : hLe
  } = t;
  if (typeof e == "string")
    return qr.createTextNode(e);
  const n = r(e.tag);
  return Object.keys(e.attributes || []).forEach(function(o) {
    n.setAttribute(o, e.attributes[o]);
  }), (e.children || []).forEach(function(o) {
    n.appendChild(QQ(o, {
      ceFn: r
    }));
  }), n;
}
function bLe(e) {
  let t = " ".concat(e.outerHTML, " ");
  return t = "".concat(t, "Font Awesome fontawesome.com "), t;
}
const Ev = {
  replace: function(e) {
    const t = e[0];
    if (t.parentNode)
      if (e[1].forEach((r) => {
        t.parentNode.insertBefore(QQ(r), t);
      }), t.getAttribute(ju) === null && Ke.keepOriginalSource) {
        let r = qr.createComment(bLe(t));
        t.parentNode.replaceChild(r, t);
      } else
        t.remove();
  },
  nest: function(e) {
    const t = e[0], r = e[1];
    if (~q6(t).indexOf(Ke.replacementClass))
      return Ev.replace(e);
    const n = new RegExp("".concat(Ke.cssPrefix, "-.*"));
    if (delete r[0].attributes.id, r[0].attributes.class) {
      const a = r[0].attributes.class.split(" ").reduce((i, s) => (s === Ke.replacementClass || s.match(n) ? i.toSvg.push(s) : i.toNode.push(s), i), {
        toNode: [],
        toSvg: []
      });
      r[0].attributes.class = a.toSvg.join(" "), a.toNode.length === 0 ? t.removeAttribute("class") : t.setAttribute("class", a.toNode.join(" "));
    }
    const o = r.map((a) => Pb(a)).join(`
`);
    t.setAttribute(ju, ""), t.innerHTML = o;
  }
};
function M8(e) {
  e();
}
function ZQ(e, t) {
  const r = typeof t == "function" ? t : Ov;
  if (e.length === 0)
    r();
  else {
    let n = M8;
    Ke.mutateApproach === xDe && (n = kc.requestAnimationFrame || M8), n(() => {
      const o = mLe(), a = Q6.begin("mutate");
      e.map(o), a(), r();
    });
  }
}
let Z6 = !1;
function eZ() {
  Z6 = !0;
}
function FE() {
  Z6 = !1;
}
let A1 = null;
function R8(e) {
  if (!k8 || !Ke.observeMutations)
    return;
  const {
    treeCallback: t = Ov,
    nodeCallback: r = Ov,
    pseudoElementsCallback: n = Ov,
    observeMutationsRoot: o = qr
  } = e;
  A1 = new k8((a) => {
    if (Z6) return;
    const i = $c();
    ip(a).forEach((s) => {
      if (s.type === "childList" && s.addedNodes.length > 0 && !T8(s.addedNodes[0]) && (Ke.searchPseudoElements && n(s.target), t(s.target)), s.type === "attributes" && s.target.parentNode && Ke.searchPseudoElements && n(s.target.parentNode), s.type === "attributes" && T8(s.target) && ~SDe.indexOf(s.attributeName))
        if (s.attributeName === "class" && dLe(s.target)) {
          const {
            prefix: l,
            iconName: c
          } = Tx(q6(s.target));
          s.target.setAttribute(Y6, l || i), c && s.target.setAttribute(H6, c);
        } else pLe(s.target) && r(s.target);
    });
  }), Bi && A1.observe(o, {
    childList: !0,
    attributes: !0,
    characterData: !0,
    subtree: !0
  });
}
function yLe() {
  A1 && A1.disconnect();
}
function vLe(e) {
  const t = e.getAttribute("style");
  let r = [];
  return t && (r = t.split(";").reduce((n, o) => {
    const a = o.split(":"), i = a[0], s = a.slice(1);
    return i && s.length > 0 && (n[i] = s.join(":").trim()), n;
  }, {})), r;
}
function xLe(e) {
  const t = e.getAttribute("data-prefix"), r = e.getAttribute("data-icon"), n = e.innerText !== void 0 ? e.innerText.trim() : "";
  let o = Tx(q6(e));
  return o.prefix || (o.prefix = $c()), t && r && (o.prefix = t, o.iconName = r), o.iconName && o.prefix || (o.prefix && n.length > 0 && (o.iconName = HDe(o.prefix, e.innerText) || K6(o.prefix, LQ(e.innerText))), !o.iconName && Ke.autoFetchSvg && e.firstChild && e.firstChild.nodeType === Node.TEXT_NODE && (o.iconName = e.firstChild.data)), o;
}
function wLe(e) {
  const t = ip(e.attributes).reduce((o, a) => (o.name !== "class" && o.name !== "style" && (o[a.name] = a.value), o), {}), r = e.getAttribute("title"), n = e.getAttribute("data-fa-title-id");
  return Ke.autoA11y && (r ? t["aria-labelledby"] = "".concat(Ke.replacementClass, "-title-").concat(n || Yh()) : (t["aria-hidden"] = "true", t.focusable = "false")), t;
}
function kLe() {
  return {
    iconName: null,
    title: null,
    titleId: null,
    prefix: null,
    transform: Ca,
    symbol: !1,
    mask: {
      iconName: null,
      prefix: null,
      rest: []
    },
    maskId: null,
    extra: {
      classes: [],
      styles: {},
      attributes: {}
    }
  };
}
function z8(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {
    styleParser: !0
  };
  const {
    iconName: r,
    prefix: n,
    rest: o
  } = xLe(e), a = wLe(e), i = IE("parseNodeAttributes", {}, e);
  let s = t.styleParser ? vLe(e) : [];
  return Oe({
    iconName: r,
    title: e.getAttribute("title"),
    titleId: e.getAttribute("data-fa-title-id"),
    prefix: n,
    transform: Ca,
    mask: {
      iconName: null,
      prefix: null,
      rest: []
    },
    maskId: null,
    symbol: !1,
    extra: {
      classes: o,
      styles: s,
      attributes: a
    }
  }, i);
}
const {
  styles: $Le
} = Aa;
function tZ(e) {
  const t = Ke.autoReplaceSvg === "nest" ? z8(e, {
    styleParser: !1
  }) : z8(e);
  return ~t.extra.classes.indexOf(TQ) ? Oc("generateLayersText", e, t) : Oc("generateSvgReplacementMutation", e, t);
}
function OLe() {
  return [...oDe, ...SE];
}
function F8(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
  if (!Bi) return Promise.resolve();
  const r = qr.documentElement.classList, n = (u) => r.add("".concat(E8, "-").concat(u)), o = (u) => r.remove("".concat(E8, "-").concat(u)), a = Ke.autoFetchSvg ? OLe() : PQ.concat(Object.keys($Le));
  a.includes("fa") || a.push("fa");
  const i = [".".concat(TQ, ":not([").concat(ju, "])")].concat(a.map((u) => ".".concat(u, ":not([").concat(ju, "])"))).join(", ");
  if (i.length === 0)
    return Promise.resolve();
  let s = [];
  try {
    s = ip(e.querySelectorAll(i));
  } catch {
  }
  if (s.length > 0)
    n("pending"), o("complete");
  else
    return Promise.resolve();
  const l = Q6.begin("onTree"), c = s.reduce((u, f) => {
    try {
      const p = tZ(f);
      p && u.push(p);
    } catch (p) {
      jQ || p.name === "MissingIcon" && console.error(p);
    }
    return u;
  }, []);
  return new Promise((u, f) => {
    Promise.all(c).then((p) => {
      ZQ(p, () => {
        n("active"), n("complete"), o("pending"), typeof t == "function" && t(), l(), u();
      });
    }).catch((p) => {
      l(), f(p);
    });
  });
}
function ELe(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
  tZ(e).then((r) => {
    r && ZQ([r], t);
  });
}
function SLe(e) {
  return function(t) {
    let r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    const n = (t || {}).icon ? t : TE(t || {});
    let {
      mask: o
    } = r;
    return o && (o = (o || {}).icon ? o : TE(o || {})), e(n, Oe(Oe({}, r), {}, {
      mask: o
    }));
  };
}
const PLe = function(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  const {
    transform: r = Ca,
    symbol: n = !1,
    mask: o = null,
    maskId: a = null,
    title: i = null,
    titleId: s = null,
    classes: l = [],
    attributes: c = {},
    styles: u = {}
  } = t;
  if (!e) return;
  const {
    prefix: f,
    iconName: p,
    icon: v
  } = e;
  return Mx(Oe({
    type: "icon"
  }, e), () => (Iu("beforeDOMElementCreation", {
    iconDefinition: e,
    params: t
  }), Ke.autoA11y && (i ? c["aria-labelledby"] = "".concat(Ke.replacementClass, "-title-").concat(s || Yh()) : (c["aria-hidden"] = "true", c.focusable = "false")), J6({
    icons: {
      main: ME(v),
      mask: o ? ME(o.icon) : {
        found: !1,
        width: null,
        height: null,
        icon: {}
      }
    },
    prefix: f,
    iconName: p,
    transform: Oe(Oe({}, Ca), r),
    symbol: n,
    title: i,
    maskId: a,
    titleId: s,
    extra: {
      attributes: c,
      styles: u,
      classes: l
    }
  })));
};
var CLe = {
  mixout() {
    return {
      icon: SLe(PLe)
    };
  },
  hooks() {
    return {
      mutationObserverCallbacks(e) {
        return e.treeCallback = F8, e.nodeCallback = ELe, e;
      }
    };
  },
  provides(e) {
    e.i2svg = function(t) {
      const {
        node: r = qr,
        callback: n = () => {
        }
      } = t;
      return F8(r, n);
    }, e.generateSvgReplacementMutation = function(t, r) {
      const {
        iconName: n,
        title: o,
        titleId: a,
        prefix: i,
        transform: s,
        symbol: l,
        mask: c,
        maskId: u,
        extra: f
      } = r;
      return new Promise((p, v) => {
        Promise.all([RE(n, i), c.iconName ? RE(c.iconName, c.prefix) : Promise.resolve({
          found: !1,
          width: 512,
          height: 512,
          icon: {}
        })]).then((x) => {
          let [b, m] = x;
          p([t, J6({
            icons: {
              main: b,
              mask: m
            },
            prefix: i,
            iconName: n,
            transform: s,
            symbol: l,
            maskId: u,
            title: o,
            titleId: a,
            extra: f,
            watchable: !0
          })]);
        }).catch(v);
      });
    }, e.generateAbstractIcon = function(t) {
      let {
        children: r,
        attributes: n,
        main: o,
        transform: a,
        styles: i
      } = t;
      const s = jx(i);
      s.length > 0 && (n.style = s);
      let l;
      return B6(a) && (l = Oc("generateAbstractTransformGrouping", {
        main: o,
        transform: a,
        containerWidth: o.width,
        iconWidth: o.width
      })), r.push(l || o.icon), {
        children: r,
        attributes: n
      };
    };
  }
}, ALe = {
  mixout() {
    return {
      layer(e) {
        let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        const {
          classes: r = []
        } = t;
        return Mx({
          type: "layer"
        }, () => {
          Iu("beforeDOMElementCreation", {
            assembler: e,
            params: t
          });
          let n = [];
          return e((o) => {
            Array.isArray(o) ? o.map((a) => {
              n = n.concat(a.abstract);
            }) : n = n.concat(o.abstract);
          }), [{
            tag: "span",
            attributes: {
              class: ["".concat(Ke.cssPrefix, "-layers"), ...r].join(" ")
            },
            children: n
          }];
        });
      }
    };
  }
}, _Le = {
  mixout() {
    return {
      counter(e) {
        let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        const {
          title: r = null,
          classes: n = [],
          attributes: o = {},
          styles: a = {}
        } = t;
        return Mx({
          type: "counter",
          content: e
        }, () => (Iu("beforeDOMElementCreation", {
          content: e,
          params: t
        }), lLe({
          content: e.toString(),
          title: r,
          extra: {
            attributes: o,
            styles: a,
            classes: ["".concat(Ke.cssPrefix, "-layers-counter"), ...n]
          }
        })));
      }
    };
  }
}, NLe = {
  mixout() {
    return {
      text(e) {
        let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        const {
          transform: r = Ca,
          title: n = null,
          classes: o = [],
          attributes: a = {},
          styles: i = {}
        } = t;
        return Mx({
          type: "text",
          content: e
        }, () => (Iu("beforeDOMElementCreation", {
          content: e,
          params: t
        }), j8({
          content: e,
          transform: Oe(Oe({}, Ca), r),
          title: n,
          extra: {
            attributes: a,
            styles: i,
            classes: ["".concat(Ke.cssPrefix, "-layers-text"), ...o]
          }
        })));
      }
    };
  },
  provides(e) {
    e.generateLayersText = function(t, r) {
      const {
        title: n,
        transform: o,
        extra: a
      } = r;
      let i = null, s = null;
      if (EQ) {
        const l = parseInt(getComputedStyle(t).fontSize, 10), c = t.getBoundingClientRect();
        i = c.width / l, s = c.height / l;
      }
      return Ke.autoA11y && !n && (a.attributes["aria-hidden"] = "true"), Promise.resolve([t, j8({
        content: t.innerHTML,
        width: i,
        height: s,
        transform: o,
        title: n,
        extra: a,
        watchable: !0
      })]);
    };
  }
};
const jLe = new RegExp('"', "ug"), D8 = [1105920, 1112319], L8 = Oe(Oe(Oe(Oe({}, {
  FontAwesome: {
    normal: "fas",
    400: "fas"
  }
}), tDe), yDe), fDe), DE = Object.keys(L8).reduce((e, t) => (e[t.toLowerCase()] = L8[t], e), {}), ILe = Object.keys(DE).reduce((e, t) => {
  const r = DE[t];
  return e[t] = r[900] || [...Object.entries(r)][0][1], e;
}, {});
function TLe(e) {
  const t = e.replace(jLe, ""), r = LDe(t, 0), n = r >= D8[0] && r <= D8[1], o = t.length === 2 ? t[0] === t[1] : !1;
  return {
    value: LQ(o ? t[0] : t),
    isSecondary: n || o
  };
}
function MLe(e, t) {
  const r = e.replace(/^['"]|['"]$/g, "").toLowerCase(), n = parseInt(t), o = isNaN(n) ? "normal" : n;
  return (DE[r] || {})[o] || ILe[r];
}
function V8(e, t) {
  const r = "".concat(vDe).concat(t.replace(":", "-"));
  return new Promise((n, o) => {
    if (e.getAttribute(r) !== null)
      return n();
    const a = ip(e.children).filter((f) => f.getAttribute(CE) === t)[0], i = kc.getComputedStyle(e, t), s = i.getPropertyValue("font-family"), l = s.match(ODe), c = i.getPropertyValue("font-weight"), u = i.getPropertyValue("content");
    if (a && !l)
      return e.removeChild(a), n();
    if (l && u !== "none" && u !== "") {
      const f = i.getPropertyValue("content");
      let p = MLe(s, c);
      const {
        value: v,
        isSecondary: x
      } = TLe(f), b = l[0].startsWith("FontAwesome");
      let m = K6(p, v), w = m;
      if (b) {
        const $ = GDe(v);
        $.iconName && $.prefix && (m = $.iconName, p = $.prefix);
      }
      if (m && !x && (!a || a.getAttribute(Y6) !== p || a.getAttribute(H6) !== w)) {
        e.setAttribute(r, w), a && e.removeChild(a);
        const $ = kLe(), {
          extra: E
        } = $;
        E.attributes[CE] = t, RE(m, p).then((S) => {
          const h = J6(Oe(Oe({}, $), {}, {
            icons: {
              main: S,
              mask: XQ()
            },
            prefix: p,
            iconName: w,
            extra: E,
            watchable: !0
          })), U = qr.createElementNS("http://www.w3.org/2000/svg", "svg");
          t === "::before" ? e.insertBefore(U, e.firstChild) : e.appendChild(U), U.outerHTML = h.map((G) => Pb(G)).join(`
`), e.removeAttribute(r), n();
        }).catch(o);
      } else
        n();
    } else
      n();
  });
}
function RLe(e) {
  return Promise.all([V8(e, "::before"), V8(e, "::after")]);
}
function zLe(e) {
  return e.parentNode !== document.head && !~wDe.indexOf(e.tagName.toUpperCase()) && !e.getAttribute(CE) && (!e.parentNode || e.parentNode.tagName !== "svg");
}
function W8(e) {
  if (Bi)
    return new Promise((t, r) => {
      const n = ip(e.querySelectorAll("*")).filter(zLe).map(RLe), o = Q6.begin("searchPseudoElements");
      eZ(), Promise.all(n).then(() => {
        o(), FE(), t();
      }).catch(() => {
        o(), FE(), r();
      });
    });
}
var FLe = {
  hooks() {
    return {
      mutationObserverCallbacks(e) {
        return e.pseudoElementsCallback = W8, e;
      }
    };
  },
  provides(e) {
    e.pseudoElements2svg = function(t) {
      const {
        node: r = qr
      } = t;
      Ke.searchPseudoElements && W8(r);
    };
  }
};
let U8 = !1;
var DLe = {
  mixout() {
    return {
      dom: {
        unwatch() {
          eZ(), U8 = !0;
        }
      }
    };
  },
  hooks() {
    return {
      bootstrap() {
        R8(IE("mutationObserverCallbacks", {}));
      },
      noAuto() {
        yLe();
      },
      watch(e) {
        const {
          observeMutationsRoot: t
        } = e;
        U8 ? FE() : R8(IE("mutationObserverCallbacks", {
          observeMutationsRoot: t
        }));
      }
    };
  }
};
const Y8 = (e) => {
  let t = {
    size: 16,
    x: 0,
    y: 0,
    flipX: !1,
    flipY: !1,
    rotate: 0
  };
  return e.toLowerCase().split(" ").reduce((r, n) => {
    const o = n.toLowerCase().split("-"), a = o[0];
    let i = o.slice(1).join("-");
    if (a && i === "h")
      return r.flipX = !0, r;
    if (a && i === "v")
      return r.flipY = !0, r;
    if (i = parseFloat(i), isNaN(i))
      return r;
    switch (a) {
      case "grow":
        r.size = r.size + i;
        break;
      case "shrink":
        r.size = r.size - i;
        break;
      case "left":
        r.x = r.x - i;
        break;
      case "right":
        r.x = r.x + i;
        break;
      case "up":
        r.y = r.y - i;
        break;
      case "down":
        r.y = r.y + i;
        break;
      case "rotate":
        r.rotate = r.rotate + i;
        break;
    }
    return r;
  }, t);
};
var LLe = {
  mixout() {
    return {
      parse: {
        transform: (e) => Y8(e)
      }
    };
  },
  hooks() {
    return {
      parseNodeAttributes(e, t) {
        const r = t.getAttribute("data-fa-transform");
        return r && (e.transform = Y8(r)), e;
      }
    };
  },
  provides(e) {
    e.generateAbstractTransformGrouping = function(t) {
      let {
        main: r,
        transform: n,
        containerWidth: o,
        iconWidth: a
      } = t;
      const i = {
        transform: "translate(".concat(o / 2, " 256)")
      }, s = "translate(".concat(n.x * 32, ", ").concat(n.y * 32, ") "), l = "scale(".concat(n.size / 16 * (n.flipX ? -1 : 1), ", ").concat(n.size / 16 * (n.flipY ? -1 : 1), ") "), c = "rotate(".concat(n.rotate, " 0 0)"), u = {
        transform: "".concat(s, " ").concat(l, " ").concat(c)
      }, f = {
        transform: "translate(".concat(a / 2 * -1, " -256)")
      }, p = {
        outer: i,
        inner: u,
        path: f
      };
      return {
        tag: "g",
        attributes: Oe({}, p.outer),
        children: [{
          tag: "g",
          attributes: Oe({}, p.inner),
          children: [{
            tag: r.icon.tag,
            children: r.icon.children,
            attributes: Oe(Oe({}, r.icon.attributes), p.path)
          }]
        }]
      };
    };
  }
};
const O$ = {
  x: 0,
  y: 0,
  width: "100%",
  height: "100%"
};
function H8(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0;
  return e.attributes && (e.attributes.fill || t) && (e.attributes.fill = "black"), e;
}
function VLe(e) {
  return e.tag === "g" ? e.children : [e];
}
var WLe = {
  hooks() {
    return {
      parseNodeAttributes(e, t) {
        const r = t.getAttribute("data-fa-mask"), n = r ? Tx(r.split(" ").map((o) => o.trim())) : XQ();
        return n.prefix || (n.prefix = $c()), e.mask = n, e.maskId = t.getAttribute("data-fa-mask-id"), e;
      }
    };
  },
  provides(e) {
    e.generateAbstractMask = function(t) {
      let {
        children: r,
        attributes: n,
        main: o,
        mask: a,
        maskId: i,
        transform: s
      } = t;
      const {
        width: l,
        icon: c
      } = o, {
        width: u,
        icon: f
      } = a, p = TDe({
        transform: s,
        containerWidth: u,
        iconWidth: l
      }), v = {
        tag: "rect",
        attributes: Oe(Oe({}, O$), {}, {
          fill: "white"
        })
      }, x = c.children ? {
        children: c.children.map(H8)
      } : {}, b = {
        tag: "g",
        attributes: Oe({}, p.inner),
        children: [H8(Oe({
          tag: c.tag,
          attributes: Oe(Oe({}, c.attributes), p.path)
        }, x))]
      }, m = {
        tag: "g",
        attributes: Oe({}, p.outer),
        children: [b]
      }, w = "mask-".concat(i || Yh()), $ = "clip-".concat(i || Yh()), E = {
        tag: "mask",
        attributes: Oe(Oe({}, O$), {}, {
          id: w,
          maskUnits: "userSpaceOnUse",
          maskContentUnits: "userSpaceOnUse"
        }),
        children: [v, m]
      }, S = {
        tag: "defs",
        children: [{
          tag: "clipPath",
          attributes: {
            id: $
          },
          children: VLe(f)
        }, E]
      };
      return r.push(S, {
        tag: "rect",
        attributes: Oe({
          fill: "currentColor",
          "clip-path": "url(#".concat($, ")"),
          mask: "url(#".concat(w, ")")
        }, O$)
      }), {
        children: r,
        attributes: n
      };
    };
  }
}, ULe = {
  provides(e) {
    let t = !1;
    kc.matchMedia && (t = kc.matchMedia("(prefers-reduced-motion: reduce)").matches), e.missingIconAbstract = function() {
      const r = [], n = {
        fill: "currentColor"
      }, o = {
        attributeType: "XML",
        repeatCount: "indefinite",
        dur: "2s"
      };
      r.push({
        tag: "path",
        attributes: Oe(Oe({}, n), {}, {
          d: "M156.5,447.7l-12.6,29.5c-18.7-9.5-35.9-21.2-51.5-34.9l22.7-22.7C127.6,430.5,141.5,440,156.5,447.7z M40.6,272H8.5 c1.4,21.2,5.4,41.7,11.7,61.1L50,321.2C45.1,305.5,41.8,289,40.6,272z M40.6,240c1.4-18.8,5.2-37,11.1-54.1l-29.5-12.6 C14.7,194.3,10,216.7,8.5,240H40.6z M64.3,156.5c7.8-14.9,17.2-28.8,28.1-41.5L69.7,92.3c-13.7,15.6-25.5,32.8-34.9,51.5 L64.3,156.5z M397,419.6c-13.9,12-29.4,22.3-46.1,30.4l11.9,29.8c20.7-9.9,39.8-22.6,56.9-37.6L397,419.6z M115,92.4 c13.9-12,29.4-22.3,46.1-30.4l-11.9-29.8c-20.7,9.9-39.8,22.6-56.8,37.6L115,92.4z M447.7,355.5c-7.8,14.9-17.2,28.8-28.1,41.5 l22.7,22.7c13.7-15.6,25.5-32.9,34.9-51.5L447.7,355.5z M471.4,272c-1.4,18.8-5.2,37-11.1,54.1l29.5,12.6 c7.5-21.1,12.2-43.5,13.6-66.8H471.4z M321.2,462c-15.7,5-32.2,8.2-49.2,9.4v32.1c21.2-1.4,41.7-5.4,61.1-11.7L321.2,462z M240,471.4c-18.8-1.4-37-5.2-54.1-11.1l-12.6,29.5c21.1,7.5,43.5,12.2,66.8,13.6V471.4z M462,190.8c5,15.7,8.2,32.2,9.4,49.2h32.1 c-1.4-21.2-5.4-41.7-11.7-61.1L462,190.8z M92.4,397c-12-13.9-22.3-29.4-30.4-46.1l-29.8,11.9c9.9,20.7,22.6,39.8,37.6,56.9 L92.4,397z M272,40.6c18.8,1.4,36.9,5.2,54.1,11.1l12.6-29.5C317.7,14.7,295.3,10,272,8.5V40.6z M190.8,50 c15.7-5,32.2-8.2,49.2-9.4V8.5c-21.2,1.4-41.7,5.4-61.1,11.7L190.8,50z M442.3,92.3L419.6,115c12,13.9,22.3,29.4,30.5,46.1 l29.8-11.9C470,128.5,457.3,109.4,442.3,92.3z M397,92.4l22.7-22.7c-15.6-13.7-32.8-25.5-51.5-34.9l-12.6,29.5 C370.4,72.1,384.4,81.5,397,92.4z"
        })
      });
      const a = Oe(Oe({}, o), {}, {
        attributeName: "opacity"
      }), i = {
        tag: "circle",
        attributes: Oe(Oe({}, n), {}, {
          cx: "256",
          cy: "364",
          r: "28"
        }),
        children: []
      };
      return t || i.children.push({
        tag: "animate",
        attributes: Oe(Oe({}, o), {}, {
          attributeName: "r",
          values: "28;14;28;28;14;28;"
        })
      }, {
        tag: "animate",
        attributes: Oe(Oe({}, a), {}, {
          values: "1;0;1;1;0;1;"
        })
      }), r.push(i), r.push({
        tag: "path",
        attributes: Oe(Oe({}, n), {}, {
          opacity: "1",
          d: "M263.7,312h-16c-6.6,0-12-5.4-12-12c0-71,77.4-63.9,77.4-107.8c0-20-17.8-40.2-57.4-40.2c-29.1,0-44.3,9.6-59.2,28.7 c-3.9,5-11.1,6-16.2,2.4l-13.1-9.2c-5.6-3.9-6.9-11.8-2.6-17.2c21.2-27.2,46.4-44.7,91.2-44.7c52.3,0,97.4,29.8,97.4,80.2 c0,67.6-77.4,63.5-77.4,107.8C275.7,306.6,270.3,312,263.7,312z"
        }),
        children: t ? [] : [{
          tag: "animate",
          attributes: Oe(Oe({}, a), {}, {
            values: "1;0;0;0;0;1;"
          })
        }]
      }), t || r.push({
        tag: "path",
        attributes: Oe(Oe({}, n), {}, {
          opacity: "0",
          d: "M232.5,134.5l7,168c0.3,6.4,5.6,11.5,12,11.5h9c6.4,0,11.7-5.1,12-11.5l7-168c0.3-6.8-5.2-12.5-12-12.5h-23 C237.7,122,232.2,127.7,232.5,134.5z"
        }),
        children: [{
          tag: "animate",
          attributes: Oe(Oe({}, a), {}, {
            values: "0;0;1;1;0;0;"
          })
        }]
      }), {
        tag: "g",
        attributes: {
          class: "missing"
        },
        children: r
      };
    };
  }
}, YLe = {
  hooks() {
    return {
      parseNodeAttributes(e, t) {
        const r = t.getAttribute("data-fa-symbol"), n = r === null ? !1 : r === "" ? !0 : r;
        return e.symbol = n, e;
      }
    };
  }
}, HLe = [zDe, CLe, ALe, _Le, NLe, FLe, DLe, LLe, WLe, ULe, YLe];
tLe(HLe, {
  mixoutsTo: so
});
so.noAuto;
so.config;
so.library;
so.dom;
const LE = so.parse;
so.findIconDefinition;
so.toHtml;
const GLe = so.icon;
so.layer;
so.text;
so.counter;
function qLe(e) {
  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e;
}
var Ry = { exports: {} }, E$ = { exports: {} }, or = {};
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var G8;
function BLe() {
  if (G8) return or;
  G8 = 1;
  var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, r = e ? Symbol.for("react.portal") : 60106, n = e ? Symbol.for("react.fragment") : 60107, o = e ? Symbol.for("react.strict_mode") : 60108, a = e ? Symbol.for("react.profiler") : 60114, i = e ? Symbol.for("react.provider") : 60109, s = e ? Symbol.for("react.context") : 60110, l = e ? Symbol.for("react.async_mode") : 60111, c = e ? Symbol.for("react.concurrent_mode") : 60111, u = e ? Symbol.for("react.forward_ref") : 60112, f = e ? Symbol.for("react.suspense") : 60113, p = e ? Symbol.for("react.suspense_list") : 60120, v = e ? Symbol.for("react.memo") : 60115, x = e ? Symbol.for("react.lazy") : 60116, b = e ? Symbol.for("react.block") : 60121, m = e ? Symbol.for("react.fundamental") : 60117, w = e ? Symbol.for("react.responder") : 60118, $ = e ? Symbol.for("react.scope") : 60119;
  function E(h) {
    if (typeof h == "object" && h !== null) {
      var U = h.$$typeof;
      switch (U) {
        case t:
          switch (h = h.type, h) {
            case l:
            case c:
            case n:
            case a:
            case o:
            case f:
              return h;
            default:
              switch (h = h && h.$$typeof, h) {
                case s:
                case u:
                case x:
                case v:
                case i:
                  return h;
                default:
                  return U;
              }
          }
        case r:
          return U;
      }
    }
  }
  function S(h) {
    return E(h) === c;
  }
  return or.AsyncMode = l, or.ConcurrentMode = c, or.ContextConsumer = s, or.ContextProvider = i, or.Element = t, or.ForwardRef = u, or.Fragment = n, or.Lazy = x, or.Memo = v, or.Portal = r, or.Profiler = a, or.StrictMode = o, or.Suspense = f, or.isAsyncMode = function(h) {
    return S(h) || E(h) === l;
  }, or.isConcurrentMode = S, or.isContextConsumer = function(h) {
    return E(h) === s;
  }, or.isContextProvider = function(h) {
    return E(h) === i;
  }, or.isElement = function(h) {
    return typeof h == "object" && h !== null && h.$$typeof === t;
  }, or.isForwardRef = function(h) {
    return E(h) === u;
  }, or.isFragment = function(h) {
    return E(h) === n;
  }, or.isLazy = function(h) {
    return E(h) === x;
  }, or.isMemo = function(h) {
    return E(h) === v;
  }, or.isPortal = function(h) {
    return E(h) === r;
  }, or.isProfiler = function(h) {
    return E(h) === a;
  }, or.isStrictMode = function(h) {
    return E(h) === o;
  }, or.isSuspense = function(h) {
    return E(h) === f;
  }, or.isValidElementType = function(h) {
    return typeof h == "string" || typeof h == "function" || h === n || h === c || h === a || h === o || h === f || h === p || typeof h == "object" && h !== null && (h.$$typeof === x || h.$$typeof === v || h.$$typeof === i || h.$$typeof === s || h.$$typeof === u || h.$$typeof === m || h.$$typeof === w || h.$$typeof === $ || h.$$typeof === b);
  }, or.typeOf = E, or;
}
var hr = {};
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var q8;
function XLe() {
  return q8 || (q8 = 1, process.env.NODE_ENV !== "production" && function() {
    var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, r = e ? Symbol.for("react.portal") : 60106, n = e ? Symbol.for("react.fragment") : 60107, o = e ? Symbol.for("react.strict_mode") : 60108, a = e ? Symbol.for("react.profiler") : 60114, i = e ? Symbol.for("react.provider") : 60109, s = e ? Symbol.for("react.context") : 60110, l = e ? Symbol.for("react.async_mode") : 60111, c = e ? Symbol.for("react.concurrent_mode") : 60111, u = e ? Symbol.for("react.forward_ref") : 60112, f = e ? Symbol.for("react.suspense") : 60113, p = e ? Symbol.for("react.suspense_list") : 60120, v = e ? Symbol.for("react.memo") : 60115, x = e ? Symbol.for("react.lazy") : 60116, b = e ? Symbol.for("react.block") : 60121, m = e ? Symbol.for("react.fundamental") : 60117, w = e ? Symbol.for("react.responder") : 60118, $ = e ? Symbol.for("react.scope") : 60119;
    function E(k) {
      return typeof k == "string" || typeof k == "function" || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
      k === n || k === c || k === a || k === o || k === f || k === p || typeof k == "object" && k !== null && (k.$$typeof === x || k.$$typeof === v || k.$$typeof === i || k.$$typeof === s || k.$$typeof === u || k.$$typeof === m || k.$$typeof === w || k.$$typeof === $ || k.$$typeof === b);
    }
    function S(k) {
      if (typeof k == "object" && k !== null) {
        var oe = k.$$typeof;
        switch (oe) {
          case t:
            var Ce = k.type;
            switch (Ce) {
              case l:
              case c:
              case n:
              case a:
              case o:
              case f:
                return Ce;
              default:
                var Ze = Ce && Ce.$$typeof;
                switch (Ze) {
                  case s:
                  case u:
                  case x:
                  case v:
                  case i:
                    return Ze;
                  default:
                    return oe;
                }
            }
          case r:
            return oe;
        }
      }
    }
    var h = l, U = c, G = s, Q = i, Z = t, X = u, J = n, I = x, te = v, V = r, D = a, F = o, R = f, H = !1;
    function B(k) {
      return H || (H = !0, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.")), g(k) || S(k) === l;
    }
    function g(k) {
      return S(k) === c;
    }
    function d(k) {
      return S(k) === s;
    }
    function O(k) {
      return S(k) === i;
    }
    function C(k) {
      return typeof k == "object" && k !== null && k.$$typeof === t;
    }
    function A(k) {
      return S(k) === u;
    }
    function N(k) {
      return S(k) === n;
    }
    function j(k) {
      return S(k) === x;
    }
    function _(k) {
      return S(k) === v;
    }
    function T(k) {
      return S(k) === r;
    }
    function M(k) {
      return S(k) === a;
    }
    function z(k) {
      return S(k) === o;
    }
    function ee(k) {
      return S(k) === f;
    }
    hr.AsyncMode = h, hr.ConcurrentMode = U, hr.ContextConsumer = G, hr.ContextProvider = Q, hr.Element = Z, hr.ForwardRef = X, hr.Fragment = J, hr.Lazy = I, hr.Memo = te, hr.Portal = V, hr.Profiler = D, hr.StrictMode = F, hr.Suspense = R, hr.isAsyncMode = B, hr.isConcurrentMode = g, hr.isContextConsumer = d, hr.isContextProvider = O, hr.isElement = C, hr.isForwardRef = A, hr.isFragment = N, hr.isLazy = j, hr.isMemo = _, hr.isPortal = T, hr.isProfiler = M, hr.isStrictMode = z, hr.isSuspense = ee, hr.isValidElementType = E, hr.typeOf = S;
  }()), hr;
}
var B8;
function rZ() {
  return B8 || (B8 = 1, process.env.NODE_ENV === "production" ? E$.exports = BLe() : E$.exports = XLe()), E$.exports;
}
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
var S$, X8;
function KLe() {
  if (X8) return S$;
  X8 = 1;
  var e = Object.getOwnPropertySymbols, t = Object.prototype.hasOwnProperty, r = Object.prototype.propertyIsEnumerable;
  function n(a) {
    if (a == null)
      throw new TypeError("Object.assign cannot be called with null or undefined");
    return Object(a);
  }
  function o() {
    try {
      if (!Object.assign)
        return !1;
      var a = new String("abc");
      if (a[5] = "de", Object.getOwnPropertyNames(a)[0] === "5")
        return !1;
      for (var i = {}, s = 0; s < 10; s++)
        i["_" + String.fromCharCode(s)] = s;
      var l = Object.getOwnPropertyNames(i).map(function(u) {
        return i[u];
      });
      if (l.join("") !== "0123456789")
        return !1;
      var c = {};
      return "abcdefghijklmnopqrst".split("").forEach(function(u) {
        c[u] = u;
      }), Object.keys(Object.assign({}, c)).join("") === "abcdefghijklmnopqrst";
    } catch {
      return !1;
    }
  }
  return S$ = o() ? Object.assign : function(a, i) {
    for (var s, l = n(a), c, u = 1; u < arguments.length; u++) {
      s = Object(arguments[u]);
      for (var f in s)
        t.call(s, f) && (l[f] = s[f]);
      if (e) {
        c = e(s);
        for (var p = 0; p < c.length; p++)
          r.call(s, c[p]) && (l[c[p]] = s[c[p]]);
      }
    }
    return l;
  }, S$;
}
var P$, K8;
function eA() {
  if (K8) return P$;
  K8 = 1;
  var e = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
  return P$ = e, P$;
}
var J8, Q8;
function nZ() {
  return Q8 || (Q8 = 1, J8 = Function.call.bind(Object.prototype.hasOwnProperty)), J8;
}
var C$, Z8;
function JLe() {
  if (Z8) return C$;
  Z8 = 1;
  var e = function() {
  };
  if (process.env.NODE_ENV !== "production") {
    var t = /* @__PURE__ */ eA(), r = {}, n = /* @__PURE__ */ nZ();
    e = function(a) {
      var i = "Warning: " + a;
      typeof console < "u" && console.error(i);
      try {
        throw new Error(i);
      } catch {
      }
    };
  }
  function o(a, i, s, l, c) {
    if (process.env.NODE_ENV !== "production") {
      for (var u in a)
        if (n(a, u)) {
          var f;
          try {
            if (typeof a[u] != "function") {
              var p = Error(
                (l || "React class") + ": " + s + " type `" + u + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof a[u] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`."
              );
              throw p.name = "Invariant Violation", p;
            }
            f = a[u](i, u, l, s, null, t);
          } catch (x) {
            f = x;
          }
          if (f && !(f instanceof Error) && e(
            (l || "React class") + ": type specification of " + s + " `" + u + "` is invalid; the type checker function must return `null` or an `Error` but returned a " + typeof f + ". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument)."
          ), f instanceof Error && !(f.message in r)) {
            r[f.message] = !0;
            var v = c ? c() : "";
            e(
              "Failed " + s + " type: " + f.message + (v ?? "")
            );
          }
        }
    }
  }
  return o.resetWarningCache = function() {
    process.env.NODE_ENV !== "production" && (r = {});
  }, C$ = o, C$;
}
var A$, eF;
function QLe() {
  if (eF) return A$;
  eF = 1;
  var e = rZ(), t = KLe(), r = /* @__PURE__ */ eA(), n = /* @__PURE__ */ nZ(), o = /* @__PURE__ */ JLe(), a = function() {
  };
  process.env.NODE_ENV !== "production" && (a = function(s) {
    var l = "Warning: " + s;
    typeof console < "u" && console.error(l);
    try {
      throw new Error(l);
    } catch {
    }
  });
  function i() {
    return null;
  }
  return A$ = function(s, l) {
    var c = typeof Symbol == "function" && Symbol.iterator, u = "@@iterator";
    function f(g) {
      var d = g && (c && g[c] || g[u]);
      if (typeof d == "function")
        return d;
    }
    var p = "<<anonymous>>", v = {
      array: w("array"),
      bigint: w("bigint"),
      bool: w("boolean"),
      func: w("function"),
      number: w("number"),
      object: w("object"),
      string: w("string"),
      symbol: w("symbol"),
      any: $(),
      arrayOf: E,
      element: S(),
      elementType: h(),
      instanceOf: U,
      node: X(),
      objectOf: Q,
      oneOf: G,
      oneOfType: Z,
      shape: I,
      exact: te
    };
    function x(g, d) {
      return g === d ? g !== 0 || 1 / g === 1 / d : g !== g && d !== d;
    }
    function b(g, d) {
      this.message = g, this.data = d && typeof d == "object" ? d : {}, this.stack = "";
    }
    b.prototype = Error.prototype;
    function m(g) {
      if (process.env.NODE_ENV !== "production")
        var d = {}, O = 0;
      function C(N, j, _, T, M, z, ee) {
        if (T = T || p, z = z || _, ee !== r) {
          if (l) {
            var k = new Error(
              "Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types"
            );
            throw k.name = "Invariant Violation", k;
          } else if (process.env.NODE_ENV !== "production" && typeof console < "u") {
            var oe = T + ":" + _;
            !d[oe] && // Avoid spamming the console because they are often not actionable except for lib authors
            O < 3 && (a(
              "You are manually calling a React.PropTypes validation function for the `" + z + "` prop on `" + T + "`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details."
            ), d[oe] = !0, O++);
          }
        }
        return j[_] == null ? N ? j[_] === null ? new b("The " + M + " `" + z + "` is marked as required " + ("in `" + T + "`, but its value is `null`.")) : new b("The " + M + " `" + z + "` is marked as required in " + ("`" + T + "`, but its value is `undefined`.")) : null : g(j, _, T, M, z);
      }
      var A = C.bind(null, !1);
      return A.isRequired = C.bind(null, !0), A;
    }
    function w(g) {
      function d(O, C, A, N, j, _) {
        var T = O[C], M = F(T);
        if (M !== g) {
          var z = R(T);
          return new b(
            "Invalid " + N + " `" + j + "` of type " + ("`" + z + "` supplied to `" + A + "`, expected ") + ("`" + g + "`."),
            { expectedType: g }
          );
        }
        return null;
      }
      return m(d);
    }
    function $() {
      return m(i);
    }
    function E(g) {
      function d(O, C, A, N, j) {
        if (typeof g != "function")
          return new b("Property `" + j + "` of component `" + A + "` has invalid PropType notation inside arrayOf.");
        var _ = O[C];
        if (!Array.isArray(_)) {
          var T = F(_);
          return new b("Invalid " + N + " `" + j + "` of type " + ("`" + T + "` supplied to `" + A + "`, expected an array."));
        }
        for (var M = 0; M < _.length; M++) {
          var z = g(_, M, A, N, j + "[" + M + "]", r);
          if (z instanceof Error)
            return z;
        }
        return null;
      }
      return m(d);
    }
    function S() {
      function g(d, O, C, A, N) {
        var j = d[O];
        if (!s(j)) {
          var _ = F(j);
          return new b("Invalid " + A + " `" + N + "` of type " + ("`" + _ + "` supplied to `" + C + "`, expected a single ReactElement."));
        }
        return null;
      }
      return m(g);
    }
    function h() {
      function g(d, O, C, A, N) {
        var j = d[O];
        if (!e.isValidElementType(j)) {
          var _ = F(j);
          return new b("Invalid " + A + " `" + N + "` of type " + ("`" + _ + "` supplied to `" + C + "`, expected a single ReactElement type."));
        }
        return null;
      }
      return m(g);
    }
    function U(g) {
      function d(O, C, A, N, j) {
        if (!(O[C] instanceof g)) {
          var _ = g.name || p, T = B(O[C]);
          return new b("Invalid " + N + " `" + j + "` of type " + ("`" + T + "` supplied to `" + A + "`, expected ") + ("instance of `" + _ + "`."));
        }
        return null;
      }
      return m(d);
    }
    function G(g) {
      if (!Array.isArray(g))
        return process.env.NODE_ENV !== "production" && (arguments.length > 1 ? a(
          "Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z])."
        ) : a("Invalid argument supplied to oneOf, expected an array.")), i;
      function d(O, C, A, N, j) {
        for (var _ = O[C], T = 0; T < g.length; T++)
          if (x(_, g[T]))
            return null;
        var M = JSON.stringify(g, function(z, ee) {
          var k = R(ee);
          return k === "symbol" ? String(ee) : ee;
        });
        return new b("Invalid " + N + " `" + j + "` of value `" + String(_) + "` " + ("supplied to `" + A + "`, expected one of " + M + "."));
      }
      return m(d);
    }
    function Q(g) {
      function d(O, C, A, N, j) {
        if (typeof g != "function")
          return new b("Property `" + j + "` of component `" + A + "` has invalid PropType notation inside objectOf.");
        var _ = O[C], T = F(_);
        if (T !== "object")
          return new b("Invalid " + N + " `" + j + "` of type " + ("`" + T + "` supplied to `" + A + "`, expected an object."));
        for (var M in _)
          if (n(_, M)) {
            var z = g(_, M, A, N, j + "." + M, r);
            if (z instanceof Error)
              return z;
          }
        return null;
      }
      return m(d);
    }
    function Z(g) {
      if (!Array.isArray(g))
        return process.env.NODE_ENV !== "production" && a("Invalid argument supplied to oneOfType, expected an instance of array."), i;
      for (var d = 0; d < g.length; d++) {
        var O = g[d];
        if (typeof O != "function")
          return a(
            "Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + H(O) + " at index " + d + "."
          ), i;
      }
      function C(A, N, j, _, T) {
        for (var M = [], z = 0; z < g.length; z++) {
          var ee = g[z], k = ee(A, N, j, _, T, r);
          if (k == null)
            return null;
          k.data && n(k.data, "expectedType") && M.push(k.data.expectedType);
        }
        var oe = M.length > 0 ? ", expected one of type [" + M.join(", ") + "]" : "";
        return new b("Invalid " + _ + " `" + T + "` supplied to " + ("`" + j + "`" + oe + "."));
      }
      return m(C);
    }
    function X() {
      function g(d, O, C, A, N) {
        return V(d[O]) ? null : new b("Invalid " + A + " `" + N + "` supplied to " + ("`" + C + "`, expected a ReactNode."));
      }
      return m(g);
    }
    function J(g, d, O, C, A) {
      return new b(
        (g || "React class") + ": " + d + " type `" + O + "." + C + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + A + "`."
      );
    }
    function I(g) {
      function d(O, C, A, N, j) {
        var _ = O[C], T = F(_);
        if (T !== "object")
          return new b("Invalid " + N + " `" + j + "` of type `" + T + "` " + ("supplied to `" + A + "`, expected `object`."));
        for (var M in g) {
          var z = g[M];
          if (typeof z != "function")
            return J(A, N, j, M, R(z));
          var ee = z(_, M, A, N, j + "." + M, r);
          if (ee)
            return ee;
        }
        return null;
      }
      return m(d);
    }
    function te(g) {
      function d(O, C, A, N, j) {
        var _ = O[C], T = F(_);
        if (T !== "object")
          return new b("Invalid " + N + " `" + j + "` of type `" + T + "` " + ("supplied to `" + A + "`, expected `object`."));
        var M = t({}, O[C], g);
        for (var z in M) {
          var ee = g[z];
          if (n(g, z) && typeof ee != "function")
            return J(A, N, j, z, R(ee));
          if (!ee)
            return new b(
              "Invalid " + N + " `" + j + "` key `" + z + "` supplied to `" + A + "`.\nBad object: " + JSON.stringify(O[C], null, "  ") + `
Valid keys: ` + JSON.stringify(Object.keys(g), null, "  ")
            );
          var k = ee(_, z, A, N, j + "." + z, r);
          if (k)
            return k;
        }
        return null;
      }
      return m(d);
    }
    function V(g) {
      switch (typeof g) {
        case "number":
        case "string":
        case "undefined":
          return !0;
        case "boolean":
          return !g;
        case "object":
          if (Array.isArray(g))
            return g.every(V);
          if (g === null || s(g))
            return !0;
          var d = f(g);
          if (d) {
            var O = d.call(g), C;
            if (d !== g.entries) {
              for (; !(C = O.next()).done; )
                if (!V(C.value))
                  return !1;
            } else
              for (; !(C = O.next()).done; ) {
                var A = C.value;
                if (A && !V(A[1]))
                  return !1;
              }
          } else
            return !1;
          return !0;
        default:
          return !1;
      }
    }
    function D(g, d) {
      return g === "symbol" ? !0 : d ? d["@@toStringTag"] === "Symbol" || typeof Symbol == "function" && d instanceof Symbol : !1;
    }
    function F(g) {
      var d = typeof g;
      return Array.isArray(g) ? "array" : g instanceof RegExp ? "object" : D(d, g) ? "symbol" : d;
    }
    function R(g) {
      if (typeof g > "u" || g === null)
        return "" + g;
      var d = F(g);
      if (d === "object") {
        if (g instanceof Date)
          return "date";
        if (g instanceof RegExp)
          return "regexp";
      }
      return d;
    }
    function H(g) {
      var d = R(g);
      switch (d) {
        case "array":
        case "object":
          return "an " + d;
        case "boolean":
        case "date":
        case "regexp":
          return "a " + d;
        default:
          return d;
      }
    }
    function B(g) {
      return !g.constructor || !g.constructor.name ? p : g.constructor.name;
    }
    return v.checkPropTypes = o, v.resetWarningCache = o.resetWarningCache, v.PropTypes = v, v;
  }, A$;
}
var _$, tF;
function ZLe() {
  if (tF) return _$;
  tF = 1;
  var e = /* @__PURE__ */ eA();
  function t() {
  }
  function r() {
  }
  return r.resetWarningCache = t, _$ = function() {
    function n(i, s, l, c, u, f) {
      if (f !== e) {
        var p = new Error(
          "Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types"
        );
        throw p.name = "Invariant Violation", p;
      }
    }
    n.isRequired = n;
    function o() {
      return n;
    }
    var a = {
      array: n,
      bigint: n,
      bool: n,
      func: n,
      number: n,
      object: n,
      string: n,
      symbol: n,
      any: n,
      arrayOf: o,
      element: n,
      elementType: n,
      instanceOf: o,
      node: n,
      objectOf: o,
      oneOf: o,
      oneOfType: o,
      shape: o,
      exact: o,
      checkPropTypes: r,
      resetWarningCache: t
    };
    return a.PropTypes = a, a;
  }, _$;
}
var rF;
function eVe() {
  if (rF) return Ry.exports;
  if (rF = 1, process.env.NODE_ENV !== "production") {
    var e = rZ(), t = !0;
    Ry.exports = /* @__PURE__ */ QLe()(e.isElement, t);
  } else
    Ry.exports = /* @__PURE__ */ ZLe()();
  return Ry.exports;
}
var tVe = /* @__PURE__ */ eVe();
const Lt = /* @__PURE__ */ qLe(tVe);
function nF(e, t) {
  var r = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var n = Object.getOwnPropertySymbols(e);
    t && (n = n.filter(function(o) {
      return Object.getOwnPropertyDescriptor(e, o).enumerable;
    })), r.push.apply(r, n);
  }
  return r;
}
function na(e) {
  for (var t = 1; t < arguments.length; t++) {
    var r = arguments[t] != null ? arguments[t] : {};
    t % 2 ? nF(Object(r), !0).forEach(function(n) {
      Of(e, n, r[n]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : nF(Object(r)).forEach(function(n) {
      Object.defineProperty(e, n, Object.getOwnPropertyDescriptor(r, n));
    });
  }
  return e;
}
function _1(e) {
  "@babel/helpers - typeof";
  return _1 = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t) {
    return typeof t;
  } : function(t) {
    return t && typeof Symbol == "function" && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
  }, _1(e);
}
function Of(e, t, r) {
  return t in e ? Object.defineProperty(e, t, {
    value: r,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : e[t] = r, e;
}
function rVe(e, t) {
  if (e == null) return {};
  var r = {}, n = Object.keys(e), o, a;
  for (a = 0; a < n.length; a++)
    o = n[a], !(t.indexOf(o) >= 0) && (r[o] = e[o]);
  return r;
}
function nVe(e, t) {
  if (e == null) return {};
  var r = rVe(e, t), n, o;
  if (Object.getOwnPropertySymbols) {
    var a = Object.getOwnPropertySymbols(e);
    for (o = 0; o < a.length; o++)
      n = a[o], !(t.indexOf(n) >= 0) && Object.prototype.propertyIsEnumerable.call(e, n) && (r[n] = e[n]);
  }
  return r;
}
function VE(e) {
  return oVe(e) || aVe(e) || iVe(e) || sVe();
}
function oVe(e) {
  if (Array.isArray(e)) return WE(e);
}
function aVe(e) {
  if (typeof Symbol < "u" && e[Symbol.iterator] != null || e["@@iterator"] != null) return Array.from(e);
}
function iVe(e, t) {
  if (e) {
    if (typeof e == "string") return WE(e, t);
    var r = Object.prototype.toString.call(e).slice(8, -1);
    if (r === "Object" && e.constructor && (r = e.constructor.name), r === "Map" || r === "Set") return Array.from(e);
    if (r === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return WE(e, t);
  }
}
function WE(e, t) {
  (t == null || t > e.length) && (t = e.length);
  for (var r = 0, n = new Array(t); r < t; r++) n[r] = e[r];
  return n;
}
function sVe() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function lVe(e) {
  var t, r = e.beat, n = e.fade, o = e.beatFade, a = e.bounce, i = e.shake, s = e.flash, l = e.spin, c = e.spinPulse, u = e.spinReverse, f = e.pulse, p = e.fixedWidth, v = e.inverse, x = e.border, b = e.listItem, m = e.flip, w = e.size, $ = e.rotation, E = e.pull, S = (t = {
    "fa-beat": r,
    "fa-fade": n,
    "fa-beat-fade": o,
    "fa-bounce": a,
    "fa-shake": i,
    "fa-flash": s,
    "fa-spin": l,
    "fa-spin-reverse": u,
    "fa-spin-pulse": c,
    "fa-pulse": f,
    "fa-fw": p,
    "fa-inverse": v,
    "fa-border": x,
    "fa-li": b,
    "fa-flip": m === !0,
    "fa-flip-horizontal": m === "horizontal" || m === "both",
    "fa-flip-vertical": m === "vertical" || m === "both"
  }, Of(t, "fa-".concat(w), typeof w < "u" && w !== null), Of(t, "fa-rotate-".concat($), typeof $ < "u" && $ !== null && $ !== 0), Of(t, "fa-pull-".concat(E), typeof E < "u" && E !== null), Of(t, "fa-swap-opacity", e.swapOpacity), t);
  return Object.keys(S).map(function(h) {
    return S[h] ? h : null;
  }).filter(function(h) {
    return h;
  });
}
function cVe(e) {
  return e = e - 0, e === e;
}
function oZ(e) {
  return cVe(e) ? e : (e = e.replace(/[\-_\s]+(.)?/g, function(t, r) {
    return r ? r.toUpperCase() : "";
  }), e.substr(0, 1).toLowerCase() + e.substr(1));
}
var uVe = ["style"];
function fVe(e) {
  return e.charAt(0).toUpperCase() + e.slice(1);
}
function dVe(e) {
  return e.split(";").map(function(t) {
    return t.trim();
  }).filter(function(t) {
    return t;
  }).reduce(function(t, r) {
    var n = r.indexOf(":"), o = oZ(r.slice(0, n)), a = r.slice(n + 1).trim();
    return o.startsWith("webkit") ? t[fVe(o)] = a : t[o] = a, t;
  }, {});
}
function aZ(e, t) {
  var r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
  if (typeof t == "string")
    return t;
  var n = (t.children || []).map(function(l) {
    return aZ(e, l);
  }), o = Object.keys(t.attributes || {}).reduce(function(l, c) {
    var u = t.attributes[c];
    switch (c) {
      case "class":
        l.attrs.className = u, delete t.attributes.class;
        break;
      case "style":
        l.attrs.style = dVe(u);
        break;
      default:
        c.indexOf("aria-") === 0 || c.indexOf("data-") === 0 ? l.attrs[c.toLowerCase()] = u : l.attrs[oZ(c)] = u;
    }
    return l;
  }, {
    attrs: {}
  }), a = r.style, i = a === void 0 ? {} : a, s = nVe(r, uVe);
  return o.attrs.style = na(na({}, o.attrs.style), i), e.apply(void 0, [t.tag, na(na({}, o.attrs), s)].concat(VE(n)));
}
var iZ = !1;
try {
  iZ = process.env.NODE_ENV === "production";
} catch {
}
function pVe() {
  if (!iZ && console && typeof console.error == "function") {
    var e;
    (e = console).error.apply(e, arguments);
  }
}
function oF(e) {
  if (e && _1(e) === "object" && e.prefix && e.iconName && e.icon)
    return e;
  if (LE.icon)
    return LE.icon(e);
  if (e === null)
    return null;
  if (e && _1(e) === "object" && e.prefix && e.iconName)
    return e;
  if (Array.isArray(e) && e.length === 2)
    return {
      prefix: e[0],
      iconName: e[1]
    };
  if (typeof e == "string")
    return {
      prefix: "fas",
      iconName: e
    };
}
function N$(e, t) {
  return Array.isArray(t) && t.length > 0 || !Array.isArray(t) && t ? Of({}, e, t) : {};
}
var aF = {
  border: !1,
  className: "",
  mask: null,
  maskId: null,
  fixedWidth: !1,
  inverse: !1,
  flip: !1,
  icon: null,
  listItem: !1,
  pull: null,
  pulse: !1,
  rotation: null,
  size: null,
  spin: !1,
  spinPulse: !1,
  spinReverse: !1,
  beat: !1,
  fade: !1,
  beatFade: !1,
  bounce: !1,
  shake: !1,
  symbol: !1,
  title: "",
  titleId: null,
  transform: null,
  swapOpacity: !1
}, Ln = /* @__PURE__ */ ce.forwardRef(function(e, t) {
  var r = na(na({}, aF), e), n = r.icon, o = r.mask, a = r.symbol, i = r.className, s = r.title, l = r.titleId, c = r.maskId, u = oF(n), f = N$("classes", [].concat(VE(lVe(r)), VE((i || "").split(" ")))), p = N$("transform", typeof r.transform == "string" ? LE.transform(r.transform) : r.transform), v = N$("mask", oF(o)), x = GLe(u, na(na(na(na({}, f), p), v), {}, {
    symbol: a,
    title: s,
    titleId: l,
    maskId: c
  }));
  if (!x)
    return pVe("Could not find icon", u), null;
  var b = x.abstract, m = {
    ref: t
  };
  return Object.keys(r).forEach(function(w) {
    aF.hasOwnProperty(w) || (m[w] = r[w]);
  }), mVe(b[0], m);
});
Ln.displayName = "FontAwesomeIcon";
Ln.propTypes = {
  beat: Lt.bool,
  border: Lt.bool,
  beatFade: Lt.bool,
  bounce: Lt.bool,
  className: Lt.string,
  fade: Lt.bool,
  flash: Lt.bool,
  mask: Lt.oneOfType([Lt.object, Lt.array, Lt.string]),
  maskId: Lt.string,
  fixedWidth: Lt.bool,
  inverse: Lt.bool,
  flip: Lt.oneOf([!0, !1, "horizontal", "vertical", "both"]),
  icon: Lt.oneOfType([Lt.object, Lt.array, Lt.string]),
  listItem: Lt.bool,
  pull: Lt.oneOf(["right", "left"]),
  pulse: Lt.bool,
  rotation: Lt.oneOf([0, 90, 180, 270]),
  shake: Lt.bool,
  size: Lt.oneOf(["2xs", "xs", "sm", "lg", "xl", "2xl", "1x", "2x", "3x", "4x", "5x", "6x", "7x", "8x", "9x", "10x"]),
  spin: Lt.bool,
  spinPulse: Lt.bool,
  spinReverse: Lt.bool,
  symbol: Lt.oneOfType([Lt.bool, Lt.string]),
  title: Lt.string,
  titleId: Lt.string,
  transform: Lt.oneOfType([Lt.string, Lt.object]),
  swapOpacity: Lt.bool
};
var mVe = aZ.bind(null, ce.createElement);
const tA = "-", gVe = (e) => {
  const t = bVe(e), {
    conflictingClassGroups: r,
    conflictingClassGroupModifiers: n
  } = e;
  return {
    getClassGroupId: (o) => {
      const a = o.split(tA);
      return a[0] === "" && a.length !== 1 && a.shift(), sZ(a, t) || hVe(o);
    },
    getConflictingClassGroupIds: (o, a) => {
      const i = r[o] || [];
      return a && n[o] ? [...i, ...n[o]] : i;
    }
  };
}, sZ = (e, t) => {
  var r;
  if (e.length === 0)
    return t.classGroupId;
  const n = e[0], o = t.nextPart.get(n), a = o ? sZ(e.slice(1), o) : void 0;
  if (a)
    return a;
  if (t.validators.length === 0)
    return;
  const i = e.join(tA);
  return (r = t.validators.find(({
    validator: s
  }) => s(i))) == null ? void 0 : r.classGroupId;
}, iF = /^\[(.+)\]$/, hVe = (e) => {
  if (iF.test(e)) {
    const t = iF.exec(e)[1], r = t == null ? void 0 : t.substring(0, t.indexOf(":"));
    if (r)
      return "arbitrary.." + r;
  }
}, bVe = (e) => {
  const {
    theme: t,
    prefix: r
  } = e, n = {
    nextPart: /* @__PURE__ */ new Map(),
    validators: []
  };
  return vVe(Object.entries(e.classGroups), r).forEach(([o, a]) => {
    UE(a, n, o, t);
  }), n;
}, UE = (e, t, r, n) => {
  e.forEach((o) => {
    if (typeof o == "string") {
      const a = o === "" ? t : sF(t, o);
      a.classGroupId = r;
      return;
    }
    if (typeof o == "function") {
      if (yVe(o)) {
        UE(o(n), t, r, n);
        return;
      }
      t.validators.push({
        validator: o,
        classGroupId: r
      });
      return;
    }
    Object.entries(o).forEach(([a, i]) => {
      UE(i, sF(t, a), r, n);
    });
  });
}, sF = (e, t) => {
  let r = e;
  return t.split(tA).forEach((n) => {
    r.nextPart.has(n) || r.nextPart.set(n, {
      nextPart: /* @__PURE__ */ new Map(),
      validators: []
    }), r = r.nextPart.get(n);
  }), r;
}, yVe = (e) => e.isThemeGetter, vVe = (e, t) => t ? e.map(([r, n]) => {
  const o = n.map((a) => typeof a == "string" ? t + a : typeof a == "object" ? Object.fromEntries(Object.entries(a).map(([i, s]) => [t + i, s])) : a);
  return [r, o];
}) : e, xVe = (e) => {
  if (e < 1)
    return {
      get: () => {
      },
      set: () => {
      }
    };
  let t = 0, r = /* @__PURE__ */ new Map(), n = /* @__PURE__ */ new Map();
  const o = (a, i) => {
    r.set(a, i), t++, t > e && (t = 0, n = r, r = /* @__PURE__ */ new Map());
  };
  return {
    get(a) {
      let i = r.get(a);
      if (i !== void 0)
        return i;
      if ((i = n.get(a)) !== void 0)
        return o(a, i), i;
    },
    set(a, i) {
      r.has(a) ? r.set(a, i) : o(a, i);
    }
  };
}, lZ = "!", wVe = (e) => {
  const {
    separator: t,
    experimentalParseClassName: r
  } = e, n = t.length === 1, o = t[0], a = t.length, i = (s) => {
    const l = [];
    let c = 0, u = 0, f;
    for (let m = 0; m < s.length; m++) {
      let w = s[m];
      if (c === 0) {
        if (w === o && (n || s.slice(m, m + a) === t)) {
          l.push(s.slice(u, m)), u = m + a;
          continue;
        }
        if (w === "/") {
          f = m;
          continue;
        }
      }
      w === "[" ? c++ : w === "]" && c--;
    }
    const p = l.length === 0 ? s : s.substring(u), v = p.startsWith(lZ), x = v ? p.substring(1) : p, b = f && f > u ? f - u : void 0;
    return {
      modifiers: l,
      hasImportantModifier: v,
      baseClassName: x,
      maybePostfixModifierPosition: b
    };
  };
  return r ? (s) => r({
    className: s,
    parseClassName: i
  }) : i;
}, kVe = (e) => {
  if (e.length <= 1)
    return e;
  const t = [];
  let r = [];
  return e.forEach((n) => {
    n[0] === "[" ? (t.push(...r.sort(), n), r = []) : r.push(n);
  }), t.push(...r.sort()), t;
}, $Ve = (e) => ({
  cache: xVe(e.cacheSize),
  parseClassName: wVe(e),
  ...gVe(e)
}), OVe = /\s+/, EVe = (e, t) => {
  const {
    parseClassName: r,
    getClassGroupId: n,
    getConflictingClassGroupIds: o
  } = t, a = [], i = e.trim().split(OVe);
  let s = "";
  for (let l = i.length - 1; l >= 0; l -= 1) {
    const c = i[l], {
      modifiers: u,
      hasImportantModifier: f,
      baseClassName: p,
      maybePostfixModifierPosition: v
    } = r(c);
    let x = !!v, b = n(x ? p.substring(0, v) : p);
    if (!b) {
      if (!x) {
        s = c + (s.length > 0 ? " " + s : s);
        continue;
      }
      if (b = n(p), !b) {
        s = c + (s.length > 0 ? " " + s : s);
        continue;
      }
      x = !1;
    }
    const m = kVe(u).join(":"), w = f ? m + lZ : m, $ = w + b;
    if (a.includes($))
      continue;
    a.push($);
    const E = o(b, x);
    for (let S = 0; S < E.length; ++S) {
      const h = E[S];
      a.push(w + h);
    }
    s = c + (s.length > 0 ? " " + s : s);
  }
  return s;
};
function SVe() {
  let e = 0, t, r, n = "";
  for (; e < arguments.length; )
    (t = arguments[e++]) && (r = cZ(t)) && (n && (n += " "), n += r);
  return n;
}
const cZ = (e) => {
  if (typeof e == "string")
    return e;
  let t, r = "";
  for (let n = 0; n < e.length; n++)
    e[n] && (t = cZ(e[n])) && (r && (r += " "), r += t);
  return r;
};
function PVe(e, ...t) {
  let r, n, o, a = i;
  function i(l) {
    const c = t.reduce((u, f) => f(u), e());
    return r = $Ve(c), n = r.cache.get, o = r.cache.set, a = s, s(l);
  }
  function s(l) {
    const c = n(l);
    if (c)
      return c;
    const u = EVe(l, r);
    return o(l, u), u;
  }
  return function() {
    return a(SVe.apply(null, arguments));
  };
}
const Mr = (e) => {
  const t = (r) => r[e] || [];
  return t.isThemeGetter = !0, t;
}, uZ = /^\[(?:([a-z-]+):)?(.+)\]$/i, CVe = /^\d+\/\d+$/, AVe = /* @__PURE__ */ new Set(["px", "full", "screen"]), _Ve = /^(\d+(\.\d+)?)?(xs|sm|md|lg|xl)$/, NVe = /\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\b(calc|min|max|clamp)\(.+\)|^0$/, jVe = /^(rgba?|hsla?|hwb|(ok)?(lab|lch))\(.+\)$/, IVe = /^(inset_)?-?((\d+)?\.?(\d+)[a-z]+|0)_-?((\d+)?\.?(\d+)[a-z]+|0)/, TVe = /^(url|image|image-set|cross-fade|element|(repeating-)?(linear|radial|conic)-gradient)\(.+\)$/, ri = (e) => sd(e) || AVe.has(e) || CVe.test(e), bl = (e) => sp(e, "length", WVe), sd = (e) => !!e && !Number.isNaN(Number(e)), j$ = (e) => sp(e, "number", sd), qm = (e) => !!e && Number.isInteger(Number(e)), MVe = (e) => e.endsWith("%") && sd(e.slice(0, -1)), wt = (e) => uZ.test(e), yl = (e) => _Ve.test(e), RVe = /* @__PURE__ */ new Set(["length", "size", "percentage"]), zVe = (e) => sp(e, RVe, fZ), FVe = (e) => sp(e, "position", fZ), DVe = /* @__PURE__ */ new Set(["image", "url"]), LVe = (e) => sp(e, DVe, YVe), VVe = (e) => sp(e, "", UVe), Bm = () => !0, sp = (e, t, r) => {
  const n = uZ.exec(e);
  return n ? n[1] ? typeof t == "string" ? n[1] === t : t.has(n[1]) : r(n[2]) : !1;
}, WVe = (e) => (
  // `colorFunctionRegex` check is necessary because color functions can have percentages in them which which would be incorrectly classified as lengths.
  // For example, `hsl(0 0% 0%)` would be classified as a length without this check.
  // I could also use lookbehind assertion in `lengthUnitRegex` but that isn't supported widely enough.
  NVe.test(e) && !jVe.test(e)
), fZ = () => !1, UVe = (e) => IVe.test(e), YVe = (e) => TVe.test(e), HVe = () => {
  const e = Mr("colors"), t = Mr("spacing"), r = Mr("blur"), n = Mr("brightness"), o = Mr("borderColor"), a = Mr("borderRadius"), i = Mr("borderSpacing"), s = Mr("borderWidth"), l = Mr("contrast"), c = Mr("grayscale"), u = Mr("hueRotate"), f = Mr("invert"), p = Mr("gap"), v = Mr("gradientColorStops"), x = Mr("gradientColorStopPositions"), b = Mr("inset"), m = Mr("margin"), w = Mr("opacity"), $ = Mr("padding"), E = Mr("saturate"), S = Mr("scale"), h = Mr("sepia"), U = Mr("skew"), G = Mr("space"), Q = Mr("translate"), Z = () => ["auto", "contain", "none"], X = () => ["auto", "hidden", "clip", "visible", "scroll"], J = () => ["auto", wt, t], I = () => [wt, t], te = () => ["", ri, bl], V = () => ["auto", sd, wt], D = () => ["bottom", "center", "left", "left-bottom", "left-top", "right", "right-bottom", "right-top", "top"], F = () => ["solid", "dashed", "dotted", "double", "none"], R = () => ["normal", "multiply", "screen", "overlay", "darken", "lighten", "color-dodge", "color-burn", "hard-light", "soft-light", "difference", "exclusion", "hue", "saturation", "color", "luminosity"], H = () => ["start", "end", "center", "between", "around", "evenly", "stretch"], B = () => ["", "0", wt], g = () => ["auto", "avoid", "all", "avoid-page", "page", "left", "right", "column"], d = () => [sd, wt];
  return {
    cacheSize: 500,
    separator: ":",
    theme: {
      colors: [Bm],
      spacing: [ri, bl],
      blur: ["none", "", yl, wt],
      brightness: d(),
      borderColor: [e],
      borderRadius: ["none", "", "full", yl, wt],
      borderSpacing: I(),
      borderWidth: te(),
      contrast: d(),
      grayscale: B(),
      hueRotate: d(),
      invert: B(),
      gap: I(),
      gradientColorStops: [e],
      gradientColorStopPositions: [MVe, bl],
      inset: J(),
      margin: J(),
      opacity: d(),
      padding: I(),
      saturate: d(),
      scale: d(),
      sepia: B(),
      skew: d(),
      space: I(),
      translate: I()
    },
    classGroups: {
      // Layout
      /**
       * Aspect Ratio
       * @see https://tailwindcss.com/docs/aspect-ratio
       */
      aspect: [{
        aspect: ["auto", "square", "video", wt]
      }],
      /**
       * Container
       * @see https://tailwindcss.com/docs/container
       */
      container: ["container"],
      /**
       * Columns
       * @see https://tailwindcss.com/docs/columns
       */
      columns: [{
        columns: [yl]
      }],
      /**
       * Break After
       * @see https://tailwindcss.com/docs/break-after
       */
      "break-after": [{
        "break-after": g()
      }],
      /**
       * Break Before
       * @see https://tailwindcss.com/docs/break-before
       */
      "break-before": [{
        "break-before": g()
      }],
      /**
       * Break Inside
       * @see https://tailwindcss.com/docs/break-inside
       */
      "break-inside": [{
        "break-inside": ["auto", "avoid", "avoid-page", "avoid-column"]
      }],
      /**
       * Box Decoration Break
       * @see https://tailwindcss.com/docs/box-decoration-break
       */
      "box-decoration": [{
        "box-decoration": ["slice", "clone"]
      }],
      /**
       * Box Sizing
       * @see https://tailwindcss.com/docs/box-sizing
       */
      box: [{
        box: ["border", "content"]
      }],
      /**
       * Display
       * @see https://tailwindcss.com/docs/display
       */
      display: ["block", "inline-block", "inline", "flex", "inline-flex", "table", "inline-table", "table-caption", "table-cell", "table-column", "table-column-group", "table-footer-group", "table-header-group", "table-row-group", "table-row", "flow-root", "grid", "inline-grid", "contents", "list-item", "hidden"],
      /**
       * Floats
       * @see https://tailwindcss.com/docs/float
       */
      float: [{
        float: ["right", "left", "none", "start", "end"]
      }],
      /**
       * Clear
       * @see https://tailwindcss.com/docs/clear
       */
      clear: [{
        clear: ["left", "right", "both", "none", "start", "end"]
      }],
      /**
       * Isolation
       * @see https://tailwindcss.com/docs/isolation
       */
      isolation: ["isolate", "isolation-auto"],
      /**
       * Object Fit
       * @see https://tailwindcss.com/docs/object-fit
       */
      "object-fit": [{
        object: ["contain", "cover", "fill", "none", "scale-down"]
      }],
      /**
       * Object Position
       * @see https://tailwindcss.com/docs/object-position
       */
      "object-position": [{
        object: [...D(), wt]
      }],
      /**
       * Overflow
       * @see https://tailwindcss.com/docs/overflow
       */
      overflow: [{
        overflow: X()
      }],
      /**
       * Overflow X
       * @see https://tailwindcss.com/docs/overflow
       */
      "overflow-x": [{
        "overflow-x": X()
      }],
      /**
       * Overflow Y
       * @see https://tailwindcss.com/docs/overflow
       */
      "overflow-y": [{
        "overflow-y": X()
      }],
      /**
       * Overscroll Behavior
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      overscroll: [{
        overscroll: Z()
      }],
      /**
       * Overscroll Behavior X
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      "overscroll-x": [{
        "overscroll-x": Z()
      }],
      /**
       * Overscroll Behavior Y
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      "overscroll-y": [{
        "overscroll-y": Z()
      }],
      /**
       * Position
       * @see https://tailwindcss.com/docs/position
       */
      position: ["static", "fixed", "absolute", "relative", "sticky"],
      /**
       * Top / Right / Bottom / Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      inset: [{
        inset: [b]
      }],
      /**
       * Right / Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      "inset-x": [{
        "inset-x": [b]
      }],
      /**
       * Top / Bottom
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      "inset-y": [{
        "inset-y": [b]
      }],
      /**
       * Start
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      start: [{
        start: [b]
      }],
      /**
       * End
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      end: [{
        end: [b]
      }],
      /**
       * Top
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      top: [{
        top: [b]
      }],
      /**
       * Right
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      right: [{
        right: [b]
      }],
      /**
       * Bottom
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      bottom: [{
        bottom: [b]
      }],
      /**
       * Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      left: [{
        left: [b]
      }],
      /**
       * Visibility
       * @see https://tailwindcss.com/docs/visibility
       */
      visibility: ["visible", "invisible", "collapse"],
      /**
       * Z-Index
       * @see https://tailwindcss.com/docs/z-index
       */
      z: [{
        z: ["auto", qm, wt]
      }],
      // Flexbox and Grid
      /**
       * Flex Basis
       * @see https://tailwindcss.com/docs/flex-basis
       */
      basis: [{
        basis: J()
      }],
      /**
       * Flex Direction
       * @see https://tailwindcss.com/docs/flex-direction
       */
      "flex-direction": [{
        flex: ["row", "row-reverse", "col", "col-reverse"]
      }],
      /**
       * Flex Wrap
       * @see https://tailwindcss.com/docs/flex-wrap
       */
      "flex-wrap": [{
        flex: ["wrap", "wrap-reverse", "nowrap"]
      }],
      /**
       * Flex
       * @see https://tailwindcss.com/docs/flex
       */
      flex: [{
        flex: ["1", "auto", "initial", "none", wt]
      }],
      /**
       * Flex Grow
       * @see https://tailwindcss.com/docs/flex-grow
       */
      grow: [{
        grow: B()
      }],
      /**
       * Flex Shrink
       * @see https://tailwindcss.com/docs/flex-shrink
       */
      shrink: [{
        shrink: B()
      }],
      /**
       * Order
       * @see https://tailwindcss.com/docs/order
       */
      order: [{
        order: ["first", "last", "none", qm, wt]
      }],
      /**
       * Grid Template Columns
       * @see https://tailwindcss.com/docs/grid-template-columns
       */
      "grid-cols": [{
        "grid-cols": [Bm]
      }],
      /**
       * Grid Column Start / End
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-start-end": [{
        col: ["auto", {
          span: ["full", qm, wt]
        }, wt]
      }],
      /**
       * Grid Column Start
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-start": [{
        "col-start": V()
      }],
      /**
       * Grid Column End
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-end": [{
        "col-end": V()
      }],
      /**
       * Grid Template Rows
       * @see https://tailwindcss.com/docs/grid-template-rows
       */
      "grid-rows": [{
        "grid-rows": [Bm]
      }],
      /**
       * Grid Row Start / End
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-start-end": [{
        row: ["auto", {
          span: [qm, wt]
        }, wt]
      }],
      /**
       * Grid Row Start
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-start": [{
        "row-start": V()
      }],
      /**
       * Grid Row End
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-end": [{
        "row-end": V()
      }],
      /**
       * Grid Auto Flow
       * @see https://tailwindcss.com/docs/grid-auto-flow
       */
      "grid-flow": [{
        "grid-flow": ["row", "col", "dense", "row-dense", "col-dense"]
      }],
      /**
       * Grid Auto Columns
       * @see https://tailwindcss.com/docs/grid-auto-columns
       */
      "auto-cols": [{
        "auto-cols": ["auto", "min", "max", "fr", wt]
      }],
      /**
       * Grid Auto Rows
       * @see https://tailwindcss.com/docs/grid-auto-rows
       */
      "auto-rows": [{
        "auto-rows": ["auto", "min", "max", "fr", wt]
      }],
      /**
       * Gap
       * @see https://tailwindcss.com/docs/gap
       */
      gap: [{
        gap: [p]
      }],
      /**
       * Gap X
       * @see https://tailwindcss.com/docs/gap
       */
      "gap-x": [{
        "gap-x": [p]
      }],
      /**
       * Gap Y
       * @see https://tailwindcss.com/docs/gap
       */
      "gap-y": [{
        "gap-y": [p]
      }],
      /**
       * Justify Content
       * @see https://tailwindcss.com/docs/justify-content
       */
      "justify-content": [{
        justify: ["normal", ...H()]
      }],
      /**
       * Justify Items
       * @see https://tailwindcss.com/docs/justify-items
       */
      "justify-items": [{
        "justify-items": ["start", "end", "center", "stretch"]
      }],
      /**
       * Justify Self
       * @see https://tailwindcss.com/docs/justify-self
       */
      "justify-self": [{
        "justify-self": ["auto", "start", "end", "center", "stretch"]
      }],
      /**
       * Align Content
       * @see https://tailwindcss.com/docs/align-content
       */
      "align-content": [{
        content: ["normal", ...H(), "baseline"]
      }],
      /**
       * Align Items
       * @see https://tailwindcss.com/docs/align-items
       */
      "align-items": [{
        items: ["start", "end", "center", "baseline", "stretch"]
      }],
      /**
       * Align Self
       * @see https://tailwindcss.com/docs/align-self
       */
      "align-self": [{
        self: ["auto", "start", "end", "center", "stretch", "baseline"]
      }],
      /**
       * Place Content
       * @see https://tailwindcss.com/docs/place-content
       */
      "place-content": [{
        "place-content": [...H(), "baseline"]
      }],
      /**
       * Place Items
       * @see https://tailwindcss.com/docs/place-items
       */
      "place-items": [{
        "place-items": ["start", "end", "center", "baseline", "stretch"]
      }],
      /**
       * Place Self
       * @see https://tailwindcss.com/docs/place-self
       */
      "place-self": [{
        "place-self": ["auto", "start", "end", "center", "stretch"]
      }],
      // Spacing
      /**
       * Padding
       * @see https://tailwindcss.com/docs/padding
       */
      p: [{
        p: [$]
      }],
      /**
       * Padding X
       * @see https://tailwindcss.com/docs/padding
       */
      px: [{
        px: [$]
      }],
      /**
       * Padding Y
       * @see https://tailwindcss.com/docs/padding
       */
      py: [{
        py: [$]
      }],
      /**
       * Padding Start
       * @see https://tailwindcss.com/docs/padding
       */
      ps: [{
        ps: [$]
      }],
      /**
       * Padding End
       * @see https://tailwindcss.com/docs/padding
       */
      pe: [{
        pe: [$]
      }],
      /**
       * Padding Top
       * @see https://tailwindcss.com/docs/padding
       */
      pt: [{
        pt: [$]
      }],
      /**
       * Padding Right
       * @see https://tailwindcss.com/docs/padding
       */
      pr: [{
        pr: [$]
      }],
      /**
       * Padding Bottom
       * @see https://tailwindcss.com/docs/padding
       */
      pb: [{
        pb: [$]
      }],
      /**
       * Padding Left
       * @see https://tailwindcss.com/docs/padding
       */
      pl: [{
        pl: [$]
      }],
      /**
       * Margin
       * @see https://tailwindcss.com/docs/margin
       */
      m: [{
        m: [m]
      }],
      /**
       * Margin X
       * @see https://tailwindcss.com/docs/margin
       */
      mx: [{
        mx: [m]
      }],
      /**
       * Margin Y
       * @see https://tailwindcss.com/docs/margin
       */
      my: [{
        my: [m]
      }],
      /**
       * Margin Start
       * @see https://tailwindcss.com/docs/margin
       */
      ms: [{
        ms: [m]
      }],
      /**
       * Margin End
       * @see https://tailwindcss.com/docs/margin
       */
      me: [{
        me: [m]
      }],
      /**
       * Margin Top
       * @see https://tailwindcss.com/docs/margin
       */
      mt: [{
        mt: [m]
      }],
      /**
       * Margin Right
       * @see https://tailwindcss.com/docs/margin
       */
      mr: [{
        mr: [m]
      }],
      /**
       * Margin Bottom
       * @see https://tailwindcss.com/docs/margin
       */
      mb: [{
        mb: [m]
      }],
      /**
       * Margin Left
       * @see https://tailwindcss.com/docs/margin
       */
      ml: [{
        ml: [m]
      }],
      /**
       * Space Between X
       * @see https://tailwindcss.com/docs/space
       */
      "space-x": [{
        "space-x": [G]
      }],
      /**
       * Space Between X Reverse
       * @see https://tailwindcss.com/docs/space
       */
      "space-x-reverse": ["space-x-reverse"],
      /**
       * Space Between Y
       * @see https://tailwindcss.com/docs/space
       */
      "space-y": [{
        "space-y": [G]
      }],
      /**
       * Space Between Y Reverse
       * @see https://tailwindcss.com/docs/space
       */
      "space-y-reverse": ["space-y-reverse"],
      // Sizing
      /**
       * Width
       * @see https://tailwindcss.com/docs/width
       */
      w: [{
        w: ["auto", "min", "max", "fit", "svw", "lvw", "dvw", wt, t]
      }],
      /**
       * Min-Width
       * @see https://tailwindcss.com/docs/min-width
       */
      "min-w": [{
        "min-w": [wt, t, "min", "max", "fit"]
      }],
      /**
       * Max-Width
       * @see https://tailwindcss.com/docs/max-width
       */
      "max-w": [{
        "max-w": [wt, t, "none", "full", "min", "max", "fit", "prose", {
          screen: [yl]
        }, yl]
      }],
      /**
       * Height
       * @see https://tailwindcss.com/docs/height
       */
      h: [{
        h: [wt, t, "auto", "min", "max", "fit", "svh", "lvh", "dvh"]
      }],
      /**
       * Min-Height
       * @see https://tailwindcss.com/docs/min-height
       */
      "min-h": [{
        "min-h": [wt, t, "min", "max", "fit", "svh", "lvh", "dvh"]
      }],
      /**
       * Max-Height
       * @see https://tailwindcss.com/docs/max-height
       */
      "max-h": [{
        "max-h": [wt, t, "min", "max", "fit", "svh", "lvh", "dvh"]
      }],
      /**
       * Size
       * @see https://tailwindcss.com/docs/size
       */
      size: [{
        size: [wt, t, "auto", "min", "max", "fit"]
      }],
      // Typography
      /**
       * Font Size
       * @see https://tailwindcss.com/docs/font-size
       */
      "font-size": [{
        text: ["base", yl, bl]
      }],
      /**
       * Font Smoothing
       * @see https://tailwindcss.com/docs/font-smoothing
       */
      "font-smoothing": ["antialiased", "subpixel-antialiased"],
      /**
       * Font Style
       * @see https://tailwindcss.com/docs/font-style
       */
      "font-style": ["italic", "not-italic"],
      /**
       * Font Weight
       * @see https://tailwindcss.com/docs/font-weight
       */
      "font-weight": [{
        font: ["thin", "extralight", "light", "normal", "medium", "semibold", "bold", "extrabold", "black", j$]
      }],
      /**
       * Font Family
       * @see https://tailwindcss.com/docs/font-family
       */
      "font-family": [{
        font: [Bm]
      }],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-normal": ["normal-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-ordinal": ["ordinal"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-slashed-zero": ["slashed-zero"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-figure": ["lining-nums", "oldstyle-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-spacing": ["proportional-nums", "tabular-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-fraction": ["diagonal-fractions", "stacked-fractions"],
      /**
       * Letter Spacing
       * @see https://tailwindcss.com/docs/letter-spacing
       */
      tracking: [{
        tracking: ["tighter", "tight", "normal", "wide", "wider", "widest", wt]
      }],
      /**
       * Line Clamp
       * @see https://tailwindcss.com/docs/line-clamp
       */
      "line-clamp": [{
        "line-clamp": ["none", sd, j$]
      }],
      /**
       * Line Height
       * @see https://tailwindcss.com/docs/line-height
       */
      leading: [{
        leading: ["none", "tight", "snug", "normal", "relaxed", "loose", ri, wt]
      }],
      /**
       * List Style Image
       * @see https://tailwindcss.com/docs/list-style-image
       */
      "list-image": [{
        "list-image": ["none", wt]
      }],
      /**
       * List Style Type
       * @see https://tailwindcss.com/docs/list-style-type
       */
      "list-style-type": [{
        list: ["none", "disc", "decimal", wt]
      }],
      /**
       * List Style Position
       * @see https://tailwindcss.com/docs/list-style-position
       */
      "list-style-position": [{
        list: ["inside", "outside"]
      }],
      /**
       * Placeholder Color
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/placeholder-color
       */
      "placeholder-color": [{
        placeholder: [e]
      }],
      /**
       * Placeholder Opacity
       * @see https://tailwindcss.com/docs/placeholder-opacity
       */
      "placeholder-opacity": [{
        "placeholder-opacity": [w]
      }],
      /**
       * Text Alignment
       * @see https://tailwindcss.com/docs/text-align
       */
      "text-alignment": [{
        text: ["left", "center", "right", "justify", "start", "end"]
      }],
      /**
       * Text Color
       * @see https://tailwindcss.com/docs/text-color
       */
      "text-color": [{
        text: [e]
      }],
      /**
       * Text Opacity
       * @see https://tailwindcss.com/docs/text-opacity
       */
      "text-opacity": [{
        "text-opacity": [w]
      }],
      /**
       * Text Decoration
       * @see https://tailwindcss.com/docs/text-decoration
       */
      "text-decoration": ["underline", "overline", "line-through", "no-underline"],
      /**
       * Text Decoration Style
       * @see https://tailwindcss.com/docs/text-decoration-style
       */
      "text-decoration-style": [{
        decoration: [...F(), "wavy"]
      }],
      /**
       * Text Decoration Thickness
       * @see https://tailwindcss.com/docs/text-decoration-thickness
       */
      "text-decoration-thickness": [{
        decoration: ["auto", "from-font", ri, bl]
      }],
      /**
       * Text Underline Offset
       * @see https://tailwindcss.com/docs/text-underline-offset
       */
      "underline-offset": [{
        "underline-offset": ["auto", ri, wt]
      }],
      /**
       * Text Decoration Color
       * @see https://tailwindcss.com/docs/text-decoration-color
       */
      "text-decoration-color": [{
        decoration: [e]
      }],
      /**
       * Text Transform
       * @see https://tailwindcss.com/docs/text-transform
       */
      "text-transform": ["uppercase", "lowercase", "capitalize", "normal-case"],
      /**
       * Text Overflow
       * @see https://tailwindcss.com/docs/text-overflow
       */
      "text-overflow": ["truncate", "text-ellipsis", "text-clip"],
      /**
       * Text Wrap
       * @see https://tailwindcss.com/docs/text-wrap
       */
      "text-wrap": [{
        text: ["wrap", "nowrap", "balance", "pretty"]
      }],
      /**
       * Text Indent
       * @see https://tailwindcss.com/docs/text-indent
       */
      indent: [{
        indent: I()
      }],
      /**
       * Vertical Alignment
       * @see https://tailwindcss.com/docs/vertical-align
       */
      "vertical-align": [{
        align: ["baseline", "top", "middle", "bottom", "text-top", "text-bottom", "sub", "super", wt]
      }],
      /**
       * Whitespace
       * @see https://tailwindcss.com/docs/whitespace
       */
      whitespace: [{
        whitespace: ["normal", "nowrap", "pre", "pre-line", "pre-wrap", "break-spaces"]
      }],
      /**
       * Word Break
       * @see https://tailwindcss.com/docs/word-break
       */
      break: [{
        break: ["normal", "words", "all", "keep"]
      }],
      /**
       * Hyphens
       * @see https://tailwindcss.com/docs/hyphens
       */
      hyphens: [{
        hyphens: ["none", "manual", "auto"]
      }],
      /**
       * Content
       * @see https://tailwindcss.com/docs/content
       */
      content: [{
        content: ["none", wt]
      }],
      // Backgrounds
      /**
       * Background Attachment
       * @see https://tailwindcss.com/docs/background-attachment
       */
      "bg-attachment": [{
        bg: ["fixed", "local", "scroll"]
      }],
      /**
       * Background Clip
       * @see https://tailwindcss.com/docs/background-clip
       */
      "bg-clip": [{
        "bg-clip": ["border", "padding", "content", "text"]
      }],
      /**
       * Background Opacity
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/background-opacity
       */
      "bg-opacity": [{
        "bg-opacity": [w]
      }],
      /**
       * Background Origin
       * @see https://tailwindcss.com/docs/background-origin
       */
      "bg-origin": [{
        "bg-origin": ["border", "padding", "content"]
      }],
      /**
       * Background Position
       * @see https://tailwindcss.com/docs/background-position
       */
      "bg-position": [{
        bg: [...D(), FVe]
      }],
      /**
       * Background Repeat
       * @see https://tailwindcss.com/docs/background-repeat
       */
      "bg-repeat": [{
        bg: ["no-repeat", {
          repeat: ["", "x", "y", "round", "space"]
        }]
      }],
      /**
       * Background Size
       * @see https://tailwindcss.com/docs/background-size
       */
      "bg-size": [{
        bg: ["auto", "cover", "contain", zVe]
      }],
      /**
       * Background Image
       * @see https://tailwindcss.com/docs/background-image
       */
      "bg-image": [{
        bg: ["none", {
          "gradient-to": ["t", "tr", "r", "br", "b", "bl", "l", "tl"]
        }, LVe]
      }],
      /**
       * Background Color
       * @see https://tailwindcss.com/docs/background-color
       */
      "bg-color": [{
        bg: [e]
      }],
      /**
       * Gradient Color Stops From Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-from-pos": [{
        from: [x]
      }],
      /**
       * Gradient Color Stops Via Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-via-pos": [{
        via: [x]
      }],
      /**
       * Gradient Color Stops To Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-to-pos": [{
        to: [x]
      }],
      /**
       * Gradient Color Stops From
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-from": [{
        from: [v]
      }],
      /**
       * Gradient Color Stops Via
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-via": [{
        via: [v]
      }],
      /**
       * Gradient Color Stops To
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-to": [{
        to: [v]
      }],
      // Borders
      /**
       * Border Radius
       * @see https://tailwindcss.com/docs/border-radius
       */
      rounded: [{
        rounded: [a]
      }],
      /**
       * Border Radius Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-s": [{
        "rounded-s": [a]
      }],
      /**
       * Border Radius End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-e": [{
        "rounded-e": [a]
      }],
      /**
       * Border Radius Top
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-t": [{
        "rounded-t": [a]
      }],
      /**
       * Border Radius Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-r": [{
        "rounded-r": [a]
      }],
      /**
       * Border Radius Bottom
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-b": [{
        "rounded-b": [a]
      }],
      /**
       * Border Radius Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-l": [{
        "rounded-l": [a]
      }],
      /**
       * Border Radius Start Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-ss": [{
        "rounded-ss": [a]
      }],
      /**
       * Border Radius Start End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-se": [{
        "rounded-se": [a]
      }],
      /**
       * Border Radius End End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-ee": [{
        "rounded-ee": [a]
      }],
      /**
       * Border Radius End Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-es": [{
        "rounded-es": [a]
      }],
      /**
       * Border Radius Top Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-tl": [{
        "rounded-tl": [a]
      }],
      /**
       * Border Radius Top Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-tr": [{
        "rounded-tr": [a]
      }],
      /**
       * Border Radius Bottom Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-br": [{
        "rounded-br": [a]
      }],
      /**
       * Border Radius Bottom Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-bl": [{
        "rounded-bl": [a]
      }],
      /**
       * Border Width
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w": [{
        border: [s]
      }],
      /**
       * Border Width X
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-x": [{
        "border-x": [s]
      }],
      /**
       * Border Width Y
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-y": [{
        "border-y": [s]
      }],
      /**
       * Border Width Start
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-s": [{
        "border-s": [s]
      }],
      /**
       * Border Width End
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-e": [{
        "border-e": [s]
      }],
      /**
       * Border Width Top
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-t": [{
        "border-t": [s]
      }],
      /**
       * Border Width Right
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-r": [{
        "border-r": [s]
      }],
      /**
       * Border Width Bottom
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-b": [{
        "border-b": [s]
      }],
      /**
       * Border Width Left
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-l": [{
        "border-l": [s]
      }],
      /**
       * Border Opacity
       * @see https://tailwindcss.com/docs/border-opacity
       */
      "border-opacity": [{
        "border-opacity": [w]
      }],
      /**
       * Border Style
       * @see https://tailwindcss.com/docs/border-style
       */
      "border-style": [{
        border: [...F(), "hidden"]
      }],
      /**
       * Divide Width X
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-x": [{
        "divide-x": [s]
      }],
      /**
       * Divide Width X Reverse
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-x-reverse": ["divide-x-reverse"],
      /**
       * Divide Width Y
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-y": [{
        "divide-y": [s]
      }],
      /**
       * Divide Width Y Reverse
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-y-reverse": ["divide-y-reverse"],
      /**
       * Divide Opacity
       * @see https://tailwindcss.com/docs/divide-opacity
       */
      "divide-opacity": [{
        "divide-opacity": [w]
      }],
      /**
       * Divide Style
       * @see https://tailwindcss.com/docs/divide-style
       */
      "divide-style": [{
        divide: F()
      }],
      /**
       * Border Color
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color": [{
        border: [o]
      }],
      /**
       * Border Color X
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-x": [{
        "border-x": [o]
      }],
      /**
       * Border Color Y
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-y": [{
        "border-y": [o]
      }],
      /**
       * Border Color S
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-s": [{
        "border-s": [o]
      }],
      /**
       * Border Color E
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-e": [{
        "border-e": [o]
      }],
      /**
       * Border Color Top
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-t": [{
        "border-t": [o]
      }],
      /**
       * Border Color Right
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-r": [{
        "border-r": [o]
      }],
      /**
       * Border Color Bottom
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-b": [{
        "border-b": [o]
      }],
      /**
       * Border Color Left
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-l": [{
        "border-l": [o]
      }],
      /**
       * Divide Color
       * @see https://tailwindcss.com/docs/divide-color
       */
      "divide-color": [{
        divide: [o]
      }],
      /**
       * Outline Style
       * @see https://tailwindcss.com/docs/outline-style
       */
      "outline-style": [{
        outline: ["", ...F()]
      }],
      /**
       * Outline Offset
       * @see https://tailwindcss.com/docs/outline-offset
       */
      "outline-offset": [{
        "outline-offset": [ri, wt]
      }],
      /**
       * Outline Width
       * @see https://tailwindcss.com/docs/outline-width
       */
      "outline-w": [{
        outline: [ri, bl]
      }],
      /**
       * Outline Color
       * @see https://tailwindcss.com/docs/outline-color
       */
      "outline-color": [{
        outline: [e]
      }],
      /**
       * Ring Width
       * @see https://tailwindcss.com/docs/ring-width
       */
      "ring-w": [{
        ring: te()
      }],
      /**
       * Ring Width Inset
       * @see https://tailwindcss.com/docs/ring-width
       */
      "ring-w-inset": ["ring-inset"],
      /**
       * Ring Color
       * @see https://tailwindcss.com/docs/ring-color
       */
      "ring-color": [{
        ring: [e]
      }],
      /**
       * Ring Opacity
       * @see https://tailwindcss.com/docs/ring-opacity
       */
      "ring-opacity": [{
        "ring-opacity": [w]
      }],
      /**
       * Ring Offset Width
       * @see https://tailwindcss.com/docs/ring-offset-width
       */
      "ring-offset-w": [{
        "ring-offset": [ri, bl]
      }],
      /**
       * Ring Offset Color
       * @see https://tailwindcss.com/docs/ring-offset-color
       */
      "ring-offset-color": [{
        "ring-offset": [e]
      }],
      // Effects
      /**
       * Box Shadow
       * @see https://tailwindcss.com/docs/box-shadow
       */
      shadow: [{
        shadow: ["", "inner", "none", yl, VVe]
      }],
      /**
       * Box Shadow Color
       * @see https://tailwindcss.com/docs/box-shadow-color
       */
      "shadow-color": [{
        shadow: [Bm]
      }],
      /**
       * Opacity
       * @see https://tailwindcss.com/docs/opacity
       */
      opacity: [{
        opacity: [w]
      }],
      /**
       * Mix Blend Mode
       * @see https://tailwindcss.com/docs/mix-blend-mode
       */
      "mix-blend": [{
        "mix-blend": [...R(), "plus-lighter", "plus-darker"]
      }],
      /**
       * Background Blend Mode
       * @see https://tailwindcss.com/docs/background-blend-mode
       */
      "bg-blend": [{
        "bg-blend": R()
      }],
      // Filters
      /**
       * Filter
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/filter
       */
      filter: [{
        filter: ["", "none"]
      }],
      /**
       * Blur
       * @see https://tailwindcss.com/docs/blur
       */
      blur: [{
        blur: [r]
      }],
      /**
       * Brightness
       * @see https://tailwindcss.com/docs/brightness
       */
      brightness: [{
        brightness: [n]
      }],
      /**
       * Contrast
       * @see https://tailwindcss.com/docs/contrast
       */
      contrast: [{
        contrast: [l]
      }],
      /**
       * Drop Shadow
       * @see https://tailwindcss.com/docs/drop-shadow
       */
      "drop-shadow": [{
        "drop-shadow": ["", "none", yl, wt]
      }],
      /**
       * Grayscale
       * @see https://tailwindcss.com/docs/grayscale
       */
      grayscale: [{
        grayscale: [c]
      }],
      /**
       * Hue Rotate
       * @see https://tailwindcss.com/docs/hue-rotate
       */
      "hue-rotate": [{
        "hue-rotate": [u]
      }],
      /**
       * Invert
       * @see https://tailwindcss.com/docs/invert
       */
      invert: [{
        invert: [f]
      }],
      /**
       * Saturate
       * @see https://tailwindcss.com/docs/saturate
       */
      saturate: [{
        saturate: [E]
      }],
      /**
       * Sepia
       * @see https://tailwindcss.com/docs/sepia
       */
      sepia: [{
        sepia: [h]
      }],
      /**
       * Backdrop Filter
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/backdrop-filter
       */
      "backdrop-filter": [{
        "backdrop-filter": ["", "none"]
      }],
      /**
       * Backdrop Blur
       * @see https://tailwindcss.com/docs/backdrop-blur
       */
      "backdrop-blur": [{
        "backdrop-blur": [r]
      }],
      /**
       * Backdrop Brightness
       * @see https://tailwindcss.com/docs/backdrop-brightness
       */
      "backdrop-brightness": [{
        "backdrop-brightness": [n]
      }],
      /**
       * Backdrop Contrast
       * @see https://tailwindcss.com/docs/backdrop-contrast
       */
      "backdrop-contrast": [{
        "backdrop-contrast": [l]
      }],
      /**
       * Backdrop Grayscale
       * @see https://tailwindcss.com/docs/backdrop-grayscale
       */
      "backdrop-grayscale": [{
        "backdrop-grayscale": [c]
      }],
      /**
       * Backdrop Hue Rotate
       * @see https://tailwindcss.com/docs/backdrop-hue-rotate
       */
      "backdrop-hue-rotate": [{
        "backdrop-hue-rotate": [u]
      }],
      /**
       * Backdrop Invert
       * @see https://tailwindcss.com/docs/backdrop-invert
       */
      "backdrop-invert": [{
        "backdrop-invert": [f]
      }],
      /**
       * Backdrop Opacity
       * @see https://tailwindcss.com/docs/backdrop-opacity
       */
      "backdrop-opacity": [{
        "backdrop-opacity": [w]
      }],
      /**
       * Backdrop Saturate
       * @see https://tailwindcss.com/docs/backdrop-saturate
       */
      "backdrop-saturate": [{
        "backdrop-saturate": [E]
      }],
      /**
       * Backdrop Sepia
       * @see https://tailwindcss.com/docs/backdrop-sepia
       */
      "backdrop-sepia": [{
        "backdrop-sepia": [h]
      }],
      // Tables
      /**
       * Border Collapse
       * @see https://tailwindcss.com/docs/border-collapse
       */
      "border-collapse": [{
        border: ["collapse", "separate"]
      }],
      /**
       * Border Spacing
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing": [{
        "border-spacing": [i]
      }],
      /**
       * Border Spacing X
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing-x": [{
        "border-spacing-x": [i]
      }],
      /**
       * Border Spacing Y
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing-y": [{
        "border-spacing-y": [i]
      }],
      /**
       * Table Layout
       * @see https://tailwindcss.com/docs/table-layout
       */
      "table-layout": [{
        table: ["auto", "fixed"]
      }],
      /**
       * Caption Side
       * @see https://tailwindcss.com/docs/caption-side
       */
      caption: [{
        caption: ["top", "bottom"]
      }],
      // Transitions and Animation
      /**
       * Tranisition Property
       * @see https://tailwindcss.com/docs/transition-property
       */
      transition: [{
        transition: ["none", "all", "", "colors", "opacity", "shadow", "transform", wt]
      }],
      /**
       * Transition Duration
       * @see https://tailwindcss.com/docs/transition-duration
       */
      duration: [{
        duration: d()
      }],
      /**
       * Transition Timing Function
       * @see https://tailwindcss.com/docs/transition-timing-function
       */
      ease: [{
        ease: ["linear", "in", "out", "in-out", wt]
      }],
      /**
       * Transition Delay
       * @see https://tailwindcss.com/docs/transition-delay
       */
      delay: [{
        delay: d()
      }],
      /**
       * Animation
       * @see https://tailwindcss.com/docs/animation
       */
      animate: [{
        animate: ["none", "spin", "ping", "pulse", "bounce", wt]
      }],
      // Transforms
      /**
       * Transform
       * @see https://tailwindcss.com/docs/transform
       */
      transform: [{
        transform: ["", "gpu", "none"]
      }],
      /**
       * Scale
       * @see https://tailwindcss.com/docs/scale
       */
      scale: [{
        scale: [S]
      }],
      /**
       * Scale X
       * @see https://tailwindcss.com/docs/scale
       */
      "scale-x": [{
        "scale-x": [S]
      }],
      /**
       * Scale Y
       * @see https://tailwindcss.com/docs/scale
       */
      "scale-y": [{
        "scale-y": [S]
      }],
      /**
       * Rotate
       * @see https://tailwindcss.com/docs/rotate
       */
      rotate: [{
        rotate: [qm, wt]
      }],
      /**
       * Translate X
       * @see https://tailwindcss.com/docs/translate
       */
      "translate-x": [{
        "translate-x": [Q]
      }],
      /**
       * Translate Y
       * @see https://tailwindcss.com/docs/translate
       */
      "translate-y": [{
        "translate-y": [Q]
      }],
      /**
       * Skew X
       * @see https://tailwindcss.com/docs/skew
       */
      "skew-x": [{
        "skew-x": [U]
      }],
      /**
       * Skew Y
       * @see https://tailwindcss.com/docs/skew
       */
      "skew-y": [{
        "skew-y": [U]
      }],
      /**
       * Transform Origin
       * @see https://tailwindcss.com/docs/transform-origin
       */
      "transform-origin": [{
        origin: ["center", "top", "top-right", "right", "bottom-right", "bottom", "bottom-left", "left", "top-left", wt]
      }],
      // Interactivity
      /**
       * Accent Color
       * @see https://tailwindcss.com/docs/accent-color
       */
      accent: [{
        accent: ["auto", e]
      }],
      /**
       * Appearance
       * @see https://tailwindcss.com/docs/appearance
       */
      appearance: [{
        appearance: ["none", "auto"]
      }],
      /**
       * Cursor
       * @see https://tailwindcss.com/docs/cursor
       */
      cursor: [{
        cursor: ["auto", "default", "pointer", "wait", "text", "move", "help", "not-allowed", "none", "context-menu", "progress", "cell", "crosshair", "vertical-text", "alias", "copy", "no-drop", "grab", "grabbing", "all-scroll", "col-resize", "row-resize", "n-resize", "e-resize", "s-resize", "w-resize", "ne-resize", "nw-resize", "se-resize", "sw-resize", "ew-resize", "ns-resize", "nesw-resize", "nwse-resize", "zoom-in", "zoom-out", wt]
      }],
      /**
       * Caret Color
       * @see https://tailwindcss.com/docs/just-in-time-mode#caret-color-utilities
       */
      "caret-color": [{
        caret: [e]
      }],
      /**
       * Pointer Events
       * @see https://tailwindcss.com/docs/pointer-events
       */
      "pointer-events": [{
        "pointer-events": ["none", "auto"]
      }],
      /**
       * Resize
       * @see https://tailwindcss.com/docs/resize
       */
      resize: [{
        resize: ["none", "y", "x", ""]
      }],
      /**
       * Scroll Behavior
       * @see https://tailwindcss.com/docs/scroll-behavior
       */
      "scroll-behavior": [{
        scroll: ["auto", "smooth"]
      }],
      /**
       * Scroll Margin
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-m": [{
        "scroll-m": I()
      }],
      /**
       * Scroll Margin X
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mx": [{
        "scroll-mx": I()
      }],
      /**
       * Scroll Margin Y
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-my": [{
        "scroll-my": I()
      }],
      /**
       * Scroll Margin Start
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-ms": [{
        "scroll-ms": I()
      }],
      /**
       * Scroll Margin End
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-me": [{
        "scroll-me": I()
      }],
      /**
       * Scroll Margin Top
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mt": [{
        "scroll-mt": I()
      }],
      /**
       * Scroll Margin Right
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mr": [{
        "scroll-mr": I()
      }],
      /**
       * Scroll Margin Bottom
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mb": [{
        "scroll-mb": I()
      }],
      /**
       * Scroll Margin Left
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-ml": [{
        "scroll-ml": I()
      }],
      /**
       * Scroll Padding
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-p": [{
        "scroll-p": I()
      }],
      /**
       * Scroll Padding X
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-px": [{
        "scroll-px": I()
      }],
      /**
       * Scroll Padding Y
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-py": [{
        "scroll-py": I()
      }],
      /**
       * Scroll Padding Start
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-ps": [{
        "scroll-ps": I()
      }],
      /**
       * Scroll Padding End
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pe": [{
        "scroll-pe": I()
      }],
      /**
       * Scroll Padding Top
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pt": [{
        "scroll-pt": I()
      }],
      /**
       * Scroll Padding Right
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pr": [{
        "scroll-pr": I()
      }],
      /**
       * Scroll Padding Bottom
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pb": [{
        "scroll-pb": I()
      }],
      /**
       * Scroll Padding Left
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pl": [{
        "scroll-pl": I()
      }],
      /**
       * Scroll Snap Align
       * @see https://tailwindcss.com/docs/scroll-snap-align
       */
      "snap-align": [{
        snap: ["start", "end", "center", "align-none"]
      }],
      /**
       * Scroll Snap Stop
       * @see https://tailwindcss.com/docs/scroll-snap-stop
       */
      "snap-stop": [{
        snap: ["normal", "always"]
      }],
      /**
       * Scroll Snap Type
       * @see https://tailwindcss.com/docs/scroll-snap-type
       */
      "snap-type": [{
        snap: ["none", "x", "y", "both"]
      }],
      /**
       * Scroll Snap Type Strictness
       * @see https://tailwindcss.com/docs/scroll-snap-type
       */
      "snap-strictness": [{
        snap: ["mandatory", "proximity"]
      }],
      /**
       * Touch Action
       * @see https://tailwindcss.com/docs/touch-action
       */
      touch: [{
        touch: ["auto", "none", "manipulation"]
      }],
      /**
       * Touch Action X
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-x": [{
        "touch-pan": ["x", "left", "right"]
      }],
      /**
       * Touch Action Y
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-y": [{
        "touch-pan": ["y", "up", "down"]
      }],
      /**
       * Touch Action Pinch Zoom
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-pz": ["touch-pinch-zoom"],
      /**
       * User Select
       * @see https://tailwindcss.com/docs/user-select
       */
      select: [{
        select: ["none", "text", "all", "auto"]
      }],
      /**
       * Will Change
       * @see https://tailwindcss.com/docs/will-change
       */
      "will-change": [{
        "will-change": ["auto", "scroll", "contents", "transform", wt]
      }],
      // SVG
      /**
       * Fill
       * @see https://tailwindcss.com/docs/fill
       */
      fill: [{
        fill: [e, "none"]
      }],
      /**
       * Stroke Width
       * @see https://tailwindcss.com/docs/stroke-width
       */
      "stroke-w": [{
        stroke: [ri, bl, j$]
      }],
      /**
       * Stroke
       * @see https://tailwindcss.com/docs/stroke
       */
      stroke: [{
        stroke: [e, "none"]
      }],
      // Accessibility
      /**
       * Screen Readers
       * @see https://tailwindcss.com/docs/screen-readers
       */
      sr: ["sr-only", "not-sr-only"],
      /**
       * Forced Color Adjust
       * @see https://tailwindcss.com/docs/forced-color-adjust
       */
      "forced-color-adjust": [{
        "forced-color-adjust": ["auto", "none"]
      }]
    },
    conflictingClassGroups: {
      overflow: ["overflow-x", "overflow-y"],
      overscroll: ["overscroll-x", "overscroll-y"],
      inset: ["inset-x", "inset-y", "start", "end", "top", "right", "bottom", "left"],
      "inset-x": ["right", "left"],
      "inset-y": ["top", "bottom"],
      flex: ["basis", "grow", "shrink"],
      gap: ["gap-x", "gap-y"],
      p: ["px", "py", "ps", "pe", "pt", "pr", "pb", "pl"],
      px: ["pr", "pl"],
      py: ["pt", "pb"],
      m: ["mx", "my", "ms", "me", "mt", "mr", "mb", "ml"],
      mx: ["mr", "ml"],
      my: ["mt", "mb"],
      size: ["w", "h"],
      "font-size": ["leading"],
      "fvn-normal": ["fvn-ordinal", "fvn-slashed-zero", "fvn-figure", "fvn-spacing", "fvn-fraction"],
      "fvn-ordinal": ["fvn-normal"],
      "fvn-slashed-zero": ["fvn-normal"],
      "fvn-figure": ["fvn-normal"],
      "fvn-spacing": ["fvn-normal"],
      "fvn-fraction": ["fvn-normal"],
      "line-clamp": ["display", "overflow"],
      rounded: ["rounded-s", "rounded-e", "rounded-t", "rounded-r", "rounded-b", "rounded-l", "rounded-ss", "rounded-se", "rounded-ee", "rounded-es", "rounded-tl", "rounded-tr", "rounded-br", "rounded-bl"],
      "rounded-s": ["rounded-ss", "rounded-es"],
      "rounded-e": ["rounded-se", "rounded-ee"],
      "rounded-t": ["rounded-tl", "rounded-tr"],
      "rounded-r": ["rounded-tr", "rounded-br"],
      "rounded-b": ["rounded-br", "rounded-bl"],
      "rounded-l": ["rounded-tl", "rounded-bl"],
      "border-spacing": ["border-spacing-x", "border-spacing-y"],
      "border-w": ["border-w-s", "border-w-e", "border-w-t", "border-w-r", "border-w-b", "border-w-l"],
      "border-w-x": ["border-w-r", "border-w-l"],
      "border-w-y": ["border-w-t", "border-w-b"],
      "border-color": ["border-color-s", "border-color-e", "border-color-t", "border-color-r", "border-color-b", "border-color-l"],
      "border-color-x": ["border-color-r", "border-color-l"],
      "border-color-y": ["border-color-t", "border-color-b"],
      "scroll-m": ["scroll-mx", "scroll-my", "scroll-ms", "scroll-me", "scroll-mt", "scroll-mr", "scroll-mb", "scroll-ml"],
      "scroll-mx": ["scroll-mr", "scroll-ml"],
      "scroll-my": ["scroll-mt", "scroll-mb"],
      "scroll-p": ["scroll-px", "scroll-py", "scroll-ps", "scroll-pe", "scroll-pt", "scroll-pr", "scroll-pb", "scroll-pl"],
      "scroll-px": ["scroll-pr", "scroll-pl"],
      "scroll-py": ["scroll-pt", "scroll-pb"],
      touch: ["touch-x", "touch-y", "touch-pz"],
      "touch-x": ["touch"],
      "touch-y": ["touch"],
      "touch-pz": ["touch"]
    },
    conflictingClassGroupModifiers: {
      "font-size": ["leading"]
    }
  };
}, lF = /* @__PURE__ */ PVe(HVe);
/*!
 * Font Awesome Pro 6.7.2 by @fontawesome - https://fontawesome.com
 * License - https://fontawesome.com/license (Commercial License)
 * Copyright 2024 Fonticons, Inc.
 */
const Ju = {
  prefix: "fas",
  iconName: "spinner-third",
  icon: [512, 512, [], "f3f4", "M224 32c0-17.7 14.3-32 32-32C397.4 0 512 114.6 512 256c0 46.6-12.5 90.4-34.3 128c-8.8 15.3-28.4 20.5-43.7 11.7s-20.5-28.4-11.7-43.7c16.3-28.2 25.7-61 25.7-96c0-106-86-192-192-192c-17.7 0-32-14.3-32-32z"]
}, cF = ({
  icon: e,
  iconClassName: t,
  children: r,
  className: n,
  htmlFor: o,
  variant: a = "primary",
  disabled: i,
  iconFlip: s = !1,
  loading: l,
  as: c = "button",
  href: u,
  target: f,
  ...p
}) => {
  function v(m) {
    switch (m) {
      case "secondary":
        return "i-am-a-unique-string bg-ui-controls text-base-fg border border-ui-controls-border hover:bg-ui-controls/80 focus-visible:outline-secondary";
      case "action":
        return "bg-ui-controls text-base-fg border border-ui-controls-border hover:bg-ui-controls/80 focus-visible:outline-action";
      case "destructive":
        return "bg-red hover:bg-red/90 text-white focus-visible:outline-red";
      case "ghost":
        return "bg-transparent text-base-fg border border-ui-controls-border/70 hover:bg-ui-controls/30 focus-visible:outline-primary-600";
      case "primary":
      default:
        return "bg-primary hover:bg-primary-400 text-white focus-visible:outline-primary-600";
    }
  }
  const x = lF(
    i || l ? "opacity-50 pointer-events-none" : ""
  ), b = lF(
    "w-fit text-sm font-medium rounded-lg px-3 py-2 border border-transparent shadow-sm focus-visible:outline focus-visible:outline-0 focus-visible:outline-offset-0 transition-all duration-150 flex gap-2 items-center justify-center active:scale-95 transform",
    v(a),
    n,
    x
  );
  return o ? /* @__PURE__ */ Pe("label", { className: b, htmlFor: o, style: p.style, children: [
    l && !s ? /* @__PURE__ */ q(Ln, { icon: Ju, className: "animate-spin" }) : /* @__PURE__ */ q(Vt, { children: e && !s ? /* @__PURE__ */ q(Ln, { icon: e, className: t }) : null }),
    r,
    l && s ? /* @__PURE__ */ q(Ln, { icon: Ju, className: "animate-spin" }) : /* @__PURE__ */ q(Vt, { children: e && s ? /* @__PURE__ */ q(Ln, { icon: e, className: t }) : null })
  ] }) : c === "link" && u ? /* @__PURE__ */ Pe(
    "a",
    {
      href: u,
      className: b,
      style: p.style,
      ...p,
      target: f,
      children: [
        l && !s ? /* @__PURE__ */ q(Ln, { icon: Ju, className: "animate-spin" }) : /* @__PURE__ */ q(Vt, { children: e && !s ? /* @__PURE__ */ q(Ln, { icon: e, className: t }) : null }),
        r,
        l && s ? /* @__PURE__ */ q(Ln, { icon: Ju, className: "animate-spin" }) : /* @__PURE__ */ q(Vt, { children: e && s ? /* @__PURE__ */ q(Ln, { icon: e, className: t }) : null })
      ]
    }
  ) : /* @__PURE__ */ Pe(
    "button",
    {
      className: b,
      disabled: i || l,
      ...p,
      htmlFor: o,
      children: [
        l && !s ? /* @__PURE__ */ q(Ln, { icon: Ju, className: "animate-spin" }) : /* @__PURE__ */ q(Vt, { children: e && !s ? /* @__PURE__ */ q(Ln, { icon: e, className: t }) : null }),
        r,
        l && s ? /* @__PURE__ */ q(Ln, { icon: Ju, className: "animate-spin" }) : /* @__PURE__ */ q(Vt, { children: e && s ? /* @__PURE__ */ q(Ln, { icon: e, className: t }) : null })
      ]
    }
  );
};
var Sv = /* @__PURE__ */ ((e) => (e[e.ALL = 0] = "ALL", e[e.FEATURED = 1] = "FEATURED", e[e.MINE = 2] = "MINE", e[e.BOOKMARKED = 3] = "BOOKMARKED", e))(Sv || {});
Sv.FEATURED, Sv.MINE, Sv.BOOKMARKED;
/*!
 * Font Awesome Pro 6.7.2 by @fontawesome - https://fontawesome.com
 * License - https://fontawesome.com/license (Commercial License)
 * Copyright 2024 Fonticons, Inc.
 */
const GVe = {
  prefix: "fas",
  iconName: "minus",
  icon: [448, 512, [8211, 8722, 10134, "subtract"], "f068", "M432 256c0 17.7-14.3 32-32 32L48 288c-17.7 0-32-14.3-32-32s14.3-32 32-32l352 0c17.7 0 32 14.3 32 32z"]
}, qVe = {
  prefix: "fas",
  iconName: "plus",
  icon: [448, 512, [10133, 61543, "add"], "2b", "M256 80c0-17.7-14.3-32-32-32s-32 14.3-32 32l0 144L48 224c-17.7 0-32 14.3-32 32s14.3 32 32 32l144 0 0 144c0 17.7 14.3 32 32 32s32-14.3 32-32l0-144 144 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-144 0 0-144z"]
}, BVe = ({
  min: e,
  max: t,
  value: r,
  onChange: n,
  step: o,
  className: a,
  showTooltip: i,
  tooltipContent: s,
  suffix: l,
  innerLabel: c,
  showDecrement: u,
  showIncrement: f,
  variant: p = "filled",
  showProgressBar: v = !0
}) => {
  var x;
  const [b, m] = _e(r), w = ie(null), [$, E] = _e(!1), [S, h] = _e(!1);
  Ne(() => {
    m(r);
  }, [r]);
  const U = (R) => {
    const H = Math.round(R / o) * o, B = Math.min(Math.max(H, e), t);
    m(B), n(B);
  }, G = (R) => {
    if (!w.current) return;
    const H = w.current.getBoundingClientRect(), B = (R - H.left) / H.width * (t - e) + e;
    U(B);
  }, Q = (R) => {
    R.preventDefault(), E(!0), h(!0), document.addEventListener("mousemove", Z), document.addEventListener("mouseup", X), G(R.clientX);
  }, Z = (R) => {
    R.preventDefault(), G(R.clientX);
  }, X = (R) => {
    R.preventDefault(), E(!1), h(!1), document.removeEventListener("mousemove", Z), document.removeEventListener("mouseup", X);
  }, J = () => {
    $ || h(!0);
  }, I = () => {
    $ || h(!1);
  }, te = () => {
    U(b - o);
  }, V = () => {
    U(b + o);
  }, D = (b - e) / (t - e) * 100, F = b.toFixed(((x = o.toString().split(".")[1]) == null ? void 0 : x.length) || 0) + (l || "");
  return /* @__PURE__ */ Pe("div", { className: "flex w-full", children: [
    u && /* @__PURE__ */ q(
      cF,
      {
        icon: GVe,
        className: "focus-visible:outline-primary my-auto mr-1 size-6 rounded-full bg-transparent text-white/80 hover:bg-white/10 active:bg-brand-primary/30",
        onClick: te
      }
    ),
    p === "filled" ? /* @__PURE__ */ q(
      "div",
      {
        ref: w,
        className: Ku(
          "glass border-ui-border group relative h-7 w-full cursor-pointer overflow-hidden rounded-lg border",
          $ && "!bg-ui-controls/90",
          a
        ),
        onMouseDown: Q,
        children: /* @__PURE__ */ Pe(
          "div",
          {
            className: Ku(
              "absolute h-full bg-brand-primary/30 transition-colors duration-300 group-hover:bg-brand-primary/50",
              $ && "!bg-brand-primary/50"
            ),
            style: { width: `${D}%` },
            children: [
              c && /* @__PURE__ */ q(
                "span",
                {
                  className: Ku(
                    "absolute top-1/2 ml-2.5 -translate-y-1/2 text-nowrap text-sm font-medium text-white/60 transition-colors duration-300 group-hover:text-white",
                    $ && "!text-white"
                  ),
                  children: c
                }
              ),
              /* @__PURE__ */ q(
                "div",
                {
                  className: Ku(
                    "absolute right-0 top-1/2 mr-1 h-4 w-0.5 -translate-y-1/2 rounded-full",
                    $ ? "bg-white" : "bg-white/50"
                  ),
                  onMouseDown: Q,
                  onMouseEnter: J,
                  onMouseLeave: I
                }
              )
            ]
          }
        )
      }
    ) : /* @__PURE__ */ Pe(
      "div",
      {
        ref: w,
        className: Ku(
          "relative h-4 w-full cursor-pointer flex items-center",
          a
        ),
        onMouseDown: Q,
        children: [
          /* @__PURE__ */ q("div", { className: "absolute left-0 right-0 h-2 bg-ui-border rounded-full bg-white/15" }),
          v && /* @__PURE__ */ q(
            "div",
            {
              className: "absolute left-0 h-2 bg-white rounded-full transition-all duration-200",
              style: { width: `${D}%` }
            }
          ),
          /* @__PURE__ */ q(
            "div",
            {
              className: Ku(
                "absolute top-1/2 z-10 size-4 -translate-y-1/2 rounded-full border-2 border-white bg-white shadow transition-colors duration-200 hover:ring-[4px] hover:ring-white/20",
                $ ? "ring-[4px] ring-white/20" : ""
              ),
              style: { left: `calc(${D}% - 10px)` },
              onMouseDown: Q,
              onMouseEnter: J,
              onMouseLeave: I
            }
          )
        ]
      }
    ),
    f && /* @__PURE__ */ q(
      cF,
      {
        icon: qVe,
        className: "focus-visible:outline-primary my-auto ml-1 size-6 rounded-full bg-transparent text-white/80 hover:bg-white/10 active:bg-brand-primary/30",
        onClick: V
      }
    ),
    i && /* @__PURE__ */ q(
      mFe,
      {
        as: "div",
        show: S,
        enter: "transition ease-out duration-200",
        enterFrom: "opacity-0",
        enterTo: "opacity-100",
        leave: "transition ease-in duration-150",
        leaveFrom: "opacity-100 scale-100",
        leaveTo: "opacity-0",
        children: /* @__PURE__ */ q(
          "div",
          {
            className: "absolute -top-8 z-10 rounded-md bg-ui-panel px-2 py-1 text-xs text-black shadow-lg",
            style: { left: `${D}%`, transform: "translateX(-50%)" },
            children: s || F
          }
        )
      }
    )
  ] });
}, XVe = ce.memo(
  ({
    onClose: e,
    mode: t = "view",
    selectedItemIds: r = [],
    onSelectItem: n,
    maxSelections: o = 4,
    onUseSelected: a,
    onDownloadClicked: i,
    onAddToSceneClicked: s,
    isOpen: l,
    forceFilter: c,
    onEditClicked: u
  }) => {
    var rn, Xr, le, se, de, rt, Ct;
    const [f, p] = _e(!1), v = b_e, x = h_e, [b] = _e(/* @__PURE__ */ new Set()), [m, w] = _e(""), $ = ie(c), [E, S] = _e(c || "all");
    Ne(() => {
      $.current && S($.current);
    }, [$]);
    const h = 3, U = 12, G = 5, [Q, Z] = _e(
      U - (G - h)
    ), X = U - (Q - h), [J, I] = _e("contain"), [te, V] = _e([]), [D, F] = _e(0), [R, H] = _e(!0), B = 1e3, g = ((rn = v.value) == null ? void 0 : rn.fullImage) || "", d = Yt(() => new GPe(), []), O = Yt(() => new nB(), []), C = et((ue) => new Date(ue).toLocaleDateString("en-US", {
      weekday: "short",
      month: "short",
      day: "numeric"
    }), []), A = et(
      (ue) => {
        const je = ue.reduce((Re, ze) => {
          const Ot = C(ze.createdAt);
          return Re[Ot] || (Re[Ot] = []), Re[Ot].push(ze), Re;
        }, {});
        return Object.fromEntries(
          Object.entries(je).sort(
            (Re, ze) => new Date(ze[1][0].createdAt).getTime() - new Date(Re[1][0].createdAt).getTime()
          )
        );
      },
      [C]
    ), N = et(
      (ue) => {
        console.error(`Failed to load gallery modal image: ${ue}`), b.add(ue);
      },
      [b]
    );
    Ne(() => {
      const ue = async () => {
        var Re;
        const je = await O.GetSession();
        je.success && ((Re = je.data) != null && Re.user) && w(je.data.user.username);
      };
      (l || t === "view" && al.value) && ue();
    }, [O, t, al.value, l]);
    const j = [
      { id: "all", label: "All", icon: /* @__PURE__ */ q(po, { icon: e_e }) },
      { id: "image", label: "Image", icon: /* @__PURE__ */ q(po, { icon: BAe }) },
      { id: "video", label: "Video", icon: /* @__PURE__ */ q(po, { icon: t_e }) },
      { id: "3d", label: "3D Object", icon: /* @__PURE__ */ q(po, { icon: JAe }) },
      {
        id: "uploaded",
        label: "Uploaded",
        icon: /* @__PURE__ */ q(po, { icon: QAe })
      }
    ], _ = (ue) => {
      switch (ue) {
        case "image":
          return [_c.IMAGE];
        case "video":
          return [_c.VIDEO];
        case "3d":
          return [_c.DIMENSIONAL];
        case "uploaded":
          return [
            _c.IMAGE,
            _c.VIDEO,
            _c.DIMENSIONAL
          ];
        default:
          return;
      }
    }, T = async (ue = !1) => {
      var je, Re;
      if (m) {
        p(!0);
        try {
          let ze = null;
          const Kr = {
            filter_media_classes: _(E),
            username: m,
            include_user_uploads: E === "uploaded" || E === "all" || E === "3d" || E === "image",
            user_uploads_only: E === "uploaded",
            page_index: ue ? 0 : D,
            page_size: B
          };
          if (ze = await d.listUserMediaFiles(Kr), ze.success && ze.data) {
            const Hn = ze.data.filter(
              (Ht) => Ht.media_type !== Zq.SCENE_JSON
            ).map((Ht) => {
              var lo, br;
              return {
                id: Ht.token,
                label: Ht.maybe_title || "Image Generation",
                thumbnail: Ht.media_class === "video" ? Ht.media_links.maybe_video_previews.animated : Ht.media_class === "dimensional" ? (lo = Ht.cover_image) == null ? void 0 : lo.maybe_cover_image_public_bucket_url : (br = Ht.media_links.maybe_thumbnail_template) == null ? void 0 : br.replace(
                  "{WIDTH}",
                  "250"
                ),
                fullImage: Ht.media_links.cdn_url,
                createdAt: Ht.created_at,
                mediaClass: Ht.media_class || (Ht.filter_media_classes ? Ht.filter_media_classes[0] : "image"),
                // assetType for 3D assets so drop handlers can decide between character vs object
                assetType: Ht.media_class === "dimensional" ? Ht.maybe_animation_type || Ht.origin_product_category === "character" || Ht.origin && Ht.origin.product_category === "character" ? "character" : "object" : void 0
              };
            });
            V((Ht) => ue ? Hn : [...Ht, ...Hn]);
            const Qr = ((je = ze.pagination) == null ? void 0 : je.current) ?? 0, wo = ((Re = ze.pagination) == null ? void 0 : Re.total_page_count) ?? 1;
            F(Qr + 1), H(Qr + 1 < wo);
          }
        } catch (ze) {
          console.error("Failed to fetch library items:", ze);
        }
        p(!1);
      }
    }, M = et(() => {
      V([]), F(0), H(!0), T(!0);
    }, [V, F, H, T]);
    Ne(() => {
      (t === "view" ? al.value : typeof l == "boolean" ? l : !0) && m && M();
    }, [
      t,
      l,
      al.value,
      m,
      E
    ]);
    const z = et(
      (ue) => {
        t === "select" && n ? n(ue.id) : (v.value = ue, x.value = !0, zm.value = ue.id);
      },
      [t, n]
    ), ee = et(() => {
      x.value = !1, v.value = null, zm.value = null;
    }, []), k = et(() => {
      r.forEach((ue) => n == null ? void 0 : n(ue));
    }, [r, n]), oe = et(() => {
      const ue = Object.values(A(te)).flat().filter((je) => r.includes(je.id));
      a == null || a(ue);
    }, [A, r, a]);
    g_e(), Ne(() => {
      if (zm.value && te.length > 0) {
        const ue = te.find(
          (je) => je.id === zm.value
        );
        ue && (v.value = ue);
      }
    }, [zm.value, te]);
    let Ce = "gap-0.5";
    X <= 4 ? Ce = "gap-1.5" : X <= 7 && (Ce = "gap-1");
    const Ze = (ue) => {
      const { scrollTop: je, scrollHeight: Re, clientHeight: ze } = ue.currentTarget;
      Re - je - ze < 100 && R && !f && T();
    };
    return /* @__PURE__ */ Pe(Vt, { children: [
      /* @__PURE__ */ Pe(
        eu,
        {
          resizable: t === "view",
          isOpen: t === "view" ? al.value && KC.value : typeof l == "boolean" ? l : !0,
          onClose: () => {
            t === "view" ? e != null && e() || (al.value = !1) : e == null || e();
          },
          className: Tc(
            "h-[620px] max-w-4xl rounded-xl",
            t === "view" && "h-[640px] min-h-[640px] min-w-[56rem] w-[56rem] max-w-none"
          ),
          childPadding: !1,
          showClose: !1,
          draggable: t === "view",
          allowBackgroundInteraction: t === "view",
          closeOnOutsideClick: t !== "view",
          children: [
            t === "view" && /* @__PURE__ */ q(eu.DragHandle, { children: /* @__PURE__ */ q("div", { className: "absolute left-0 top-0 z-[50] h-[60px] w-full cursor-move" }) }),
            /* @__PURE__ */ Pe("div", { className: "flex h-full flex-col", children: [
              /* @__PURE__ */ q("div", { className: "border-b border-ui-panel-border p-4 py-3 bg-ui-panel rounded-t-xl", children: /* @__PURE__ */ Pe("div", { className: "flex justify-between items-center", children: [
                /* @__PURE__ */ Pe("div", { className: "flex items-center gap-4", children: [
                  /* @__PURE__ */ q("h2", { className: "text-xl font-semibold", children: t === "select" ? "Select Images" : "My Library" }),
                  t === "view" && /* @__PURE__ */ Pe("div", { className: "flex items-center relative z-[51]", children: [
                    /* @__PURE__ */ q(
                      "input",
                      {
                        type: "checkbox",
                        id: "gallery-reopen-after-drag",
                        checked: k4.value,
                        onChange: (ue) => k4.value = ue.target.checked,
                        className: "h-4 w-4 cursor-pointer rounded-lg border-gray-300 bg-gray-700 text-primary focus:ring-primary"
                      }
                    ),
                    /* @__PURE__ */ q(
                      "label",
                      {
                        htmlFor: "gallery-reopen-after-drag",
                        className: "ml-2 cursor-pointer select-none text-sm text-base-fg/70",
                        children: "Reopen after adding"
                      }
                    )
                  ] })
                ] }),
                /* @__PURE__ */ Pe("div", { className: "flex justify-end gap-2 items-center", children: [
                  /* @__PURE__ */ q(
                    hv,
                    {
                      position: "top",
                      content: "Refresh list",
                      closeOnClick: !0,
                      children: /* @__PURE__ */ q(
                        tk,
                        {
                          variant: "action",
                          onClick: M,
                          className: "relative z-[51] h-9 w-9 bg-ui-controls/60 hover:bg-ui-controls/90",
                          disabled: f,
                          "aria-label": "Refresh list",
                          children: /* @__PURE__ */ q(
                            po,
                            {
                              icon: XAe,
                              className: "text-lg text-base-fg"
                            }
                          )
                        }
                      )
                    }
                  ),
                  /* @__PURE__ */ q(
                    hv,
                    {
                      position: "top",
                      content: "Toggle image fit",
                      closeOnClick: !0,
                      children: /* @__PURE__ */ q(
                        tk,
                        {
                          variant: "action",
                          onClick: () => I(
                            (ue) => ue === "cover" ? "contain" : "cover"
                          ),
                          className: "relative z-[51] h-9 w-9 bg-ui-controls/60 hover:bg-ui-controls/90",
                          children: /* @__PURE__ */ q(
                            po,
                            {
                              icon: J === "cover" ? ZAe : qAe,
                              className: "text-lg text-base-fg"
                            }
                          )
                        }
                      )
                    }
                  ),
                  /* @__PURE__ */ q("div", { className: "w-48 mx-3 relative z-[51] flex items-center gap-2", children: /* @__PURE__ */ q(
                    BVe,
                    {
                      min: h,
                      max: U,
                      value: Q,
                      onChange: Z,
                      step: 1,
                      variant: "classic",
                      showTooltip: !1,
                      className: "w-full",
                      showProgressBar: !1,
                      tooltipContent: `${U - (Q - h)} columns`
                    }
                  ) }),
                  /* @__PURE__ */ q(
                    hv,
                    {
                      position: "top",
                      content: $.current ? "Filter locked" : "Filter",
                      closeOnClick: !0,
                      children: /* @__PURE__ */ q(
                        V8e,
                        {
                          panelTitle: "Filter",
                          position: "bottom",
                          align: "end",
                          buttonClassName: `relative z-[51] mr-3 ${$.current ? "opacity-70 pointer-events-none" : ""}`,
                          panelClassName: "min-w-36",
                          items: j.map((ue) => ({
                            label: ue.label,
                            selected: E === ue.id,
                            icon: ue.icon,
                            // Use a custom property that will be passed through but not cause type errors
                            customProps: {
                              disabled: $.current !== void 0
                            }
                          })),
                          onSelect: (ue) => {
                            if (!$.current) {
                              const je = j.find(
                                (Re) => Re.label === ue.label
                              );
                              je && S(je.id);
                            }
                          },
                          triggerIcon: /* @__PURE__ */ q(po, { icon: KAe }),
                          triggerLabel: (Xr = j.find((ue) => ue.id === E)) == null ? void 0 : Xr.label,
                          mode: "toggle",
                          showIconsInList: !0
                        }
                      )
                    }
                  ),
                  t === "view" && /* @__PURE__ */ q(eu.ExpandButton, {}),
                  /* @__PURE__ */ q(
                    nPe,
                    {
                      onClick: () => {
                        t === "view" ? al.value = !1 : e == null || e();
                      },
                      className: "relative z-[51]"
                    }
                  )
                ] })
              ] }) }),
              /* @__PURE__ */ q(
                "div",
                {
                  className: "flex-1 overflow-y-auto bg-ui-panel",
                  onScroll: Ze,
                  children: f && te.length === 0 ? /* @__PURE__ */ q("div", { className: "flex h-full items-center justify-center", children: /* @__PURE__ */ q("div", { className: "text-base-fg/60", children: /* @__PURE__ */ q(dM, { className: "h-12 w-12" }) }) }) : /* @__PURE__ */ Pe("div", { className: "space-y-6 p-4", children: [
                    Object.entries(A(te)).map(
                      ([ue, je]) => {
                        const Re = je.filter((ze) => ze.mediaType === "scene_json" ? !1 : E === "3d" ? ze.mediaClass === "dimensional" : E === "image" ? ze.mediaClass === "image" : E === "video" ? ze.mediaClass === "video" : E === "all" ? ze.mediaClass !== "audio" && ze.mediaType !== "scene_json" : !0);
                        return Re.length === 0 ? null : /* @__PURE__ */ Pe("div", { children: [
                          /* @__PURE__ */ q("h3", { className: "text-md mb-2 font-medium text-base-fg/60", children: ue }),
                          /* @__PURE__ */ q(
                            "div",
                            {
                              className: Tc("grid", Ce),
                              style: {
                                gridTemplateColumns: `repeat(${X}, minmax(0, 1fr))`
                              },
                              children: Re.map((ze) => /* @__PURE__ */ q(
                                ENe,
                                {
                                  item: ze,
                                  mode: t,
                                  activeFilter: E,
                                  selected: r.includes(ze.id),
                                  onClick: () => z(ze),
                                  onImageError: () => N(ze.thumbnail),
                                  disableTooltipAndBadge: t === "select",
                                  imageFit: J
                                },
                                ze.id
                              ))
                            }
                          )
                        ] }, ue);
                      }
                    ),
                    f && te.length > 0 && /* @__PURE__ */ q("div", { className: "flex justify-center py-4", children: /* @__PURE__ */ q(dM, { className: "h-8 w-8" }) }),
                    !R && te.length > 0 && /* @__PURE__ */ q("div", { className: "flex justify-center py-4 text-base-fg/40 text-xs", children: "No more items" })
                  ] })
                }
              ),
              t === "select" && /* @__PURE__ */ Pe("div", { className: "flex items-center justify-between border-t border-ui-panel-border bg-ui-panel p-4 rounded-b-xl", children: [
                /* @__PURE__ */ Pe("div", { className: "flex items-center gap-3", children: [
                  /* @__PURE__ */ Pe("div", { className: "text-sm font-semibold text-base-fg/80", children: [
                    r.length,
                    "/",
                    o,
                    " selected"
                  ] }),
                  r.length > 0 && /* @__PURE__ */ q("span", { className: "text-base-fg/10", children: "|" }),
                  r.length > 0 && /* @__PURE__ */ q(
                    "button",
                    {
                      onClick: k,
                      className: "text-sm text-base-fg/60 hover:text-base-fg",
                      children: "Deselect All"
                    }
                  )
                ] }),
                /* @__PURE__ */ q(
                  tk,
                  {
                    onClick: oe,
                    disabled: r.length === 0,
                    children: "Use selected"
                  }
                )
              ] })
            ] })
          ]
        }
      ),
      t === "view" && /* @__PURE__ */ q(
        e5e,
        {
          isOpen: x.value,
          onClose: ee,
          onCloseGallery: () => al.value = !1,
          imageUrl: g,
          imageAlt: ((le = v.value) == null ? void 0 : le.label) || "",
          onImageError: () => g && N(g),
          title: (se = v.value) == null ? void 0 : se.label,
          createdAt: (de = v.value) == null ? void 0 : de.createdAt,
          downloadUrl: g,
          mediaId: (rt = v.value) == null ? void 0 : rt.id,
          onDownloadClicked: i,
          onAddToSceneClicked: s,
          mediaClass: (Ct = v.value) == null ? void 0 : Ct.mediaClass,
          onEditClicked: u
        }
      )
    ] });
  }
);
XVe.displayName = "GalleryModal";
const FWe = () => {
  const [e, t] = _e(m1.getDragState());
  if (Ne(() => {
    let s;
    function l() {
      t({ ...m1.getDragState() }), s = requestAnimationFrame(l);
    }
    return s = requestAnimationFrame(l), () => cancelAnimationFrame(s);
  }, []), !e.isDragging || !e.item) return null;
  const { currX: r, currY: n, item: o } = e, i = {
    left: r + 1,
    top: n - 120 / 2
  };
  return YE.createPortal(
    /* @__PURE__ */ q(
      "div",
      {
        style: i,
        className: "fixed z-[1000] w-[120px] h-[120px] pointer-events-none aspect-square flex flex-col bg-black/70 rounded-xl overflow-hidden shadow-lg cursor-grabbing",
        children: /* @__PURE__ */ q(
          "img",
          {
            src: o.thumbnail || o.fullImage || "",
            alt: o.label,
            className: "pointer-events-none select-none w-full h-full object-cover rounded-xl"
          }
        )
      }
    ),
    document.body
  );
};
export {
  FWe as GalleryDragComponent,
  XVe as GalleryModal,
  JC as IMAGE_DROP_EVENT,
  v_e as emitImageDrop,
  b_e as galleryModalLightboxImage,
  zm as galleryModalLightboxMediaId,
  h_e as galleryModalLightboxVisible,
  KC as galleryModalVisibleDuringDrag,
  al as galleryModalVisibleViewMode,
  k4 as galleryReopenAfterDragSignal,
  TWe as onImageDrop,
  MWe as removeImageDropListener
};
