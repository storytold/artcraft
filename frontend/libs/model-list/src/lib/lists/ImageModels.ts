import { ImageModel } from "../classes/ImageModel.js";
import { ModelCreator } from "../classes/metadata/ModelCreator.js";
import { ModelTag } from "../classes/metadata/ModelTag.js";

export const IMAGE_MODELS: ImageModel[] = [
  new ImageModel({
    id: "midjourney",
    tauriId: "midjourney",
    fullName: "Midjourney",
    category: "image",
    creator: ModelCreator.Midjourney,
    selectorName: "Midjourney",
    selectorDescription: "Incredible style and quality",
    selectorBadges: ["15 sec."],
    maxGenerationCount: 4,
    defaultGenerationCount: 4,
    canUseImagePrompt: false,
    maxImagePromptCount: 6,
  }),
  new ImageModel({
    id: "flux_pro_1_1_ultra",
    tauriId: "flux_pro_11_ultra",
    fullName: "Flux Pro 1.1 Ultra",
    category: "image",
    creator: ModelCreator.BlackForestLabs,
    selectorName: "Flux Pro 1.1 Ultra",
    selectorDescription: "High quality model",
    selectorBadges: ["15 sec."],
    maxGenerationCount: 4,
    defaultGenerationCount: 4,
    canUseImagePrompt: true,
    maxImagePromptCount: 6,
  }),
  new ImageModel({
    id: "flux_pro_1_1",
    tauriId: "flux_pro_11",
    fullName: "Flux Pro 1.1",
    category: "image",
    creator: ModelCreator.BlackForestLabs,
    selectorName: "Flux Pro 1.1",
    selectorDescription: "High quality model",
    selectorBadges: ["15 sec."],
    maxGenerationCount: 4,
    defaultGenerationCount: 4,
    canUseImagePrompt: true,
    maxImagePromptCount: 6,
  }),
  new ImageModel({
    id: "flux_1_dev",
    tauriId: "flux_1_dev",
    fullName: "Flux 1 Dev",
    category: "image",
    creator: ModelCreator.BlackForestLabs,
    selectorName: "Flux 1 Dev",
    selectorDescription: "High quality model",
    selectorBadges: ["15 sec."],
    maxGenerationCount: 4,
    defaultGenerationCount: 4,
    canUseImagePrompt: true,
    maxImagePromptCount: 6,
  }),
  new ImageModel({
    id: "flux_1_schnell",
    tauriId: "flux_1_schnell",
    fullName: "Flux 1 Schnell",
    category: "image",
    creator: ModelCreator.BlackForestLabs,
    selectorName: "Flux 1 Schnell",
    selectorDescription: "High quality model",
    selectorBadges: ["15 sec."],
    maxGenerationCount: 4,
    defaultGenerationCount: 4,
    canUseImagePrompt: true,
    maxImagePromptCount: 6,
  }),
  new ImageModel({
    id: "gemini_25_flash",
    tauriId: "gemini_25_flash",
    fullName: "Gemini 2.5 Flash",
    category: "image",
    creator: ModelCreator.Google,
    selectorName: "Gemini 2.5 Flash",
    selectorDescription: "Ultra instructive model",
    selectorBadges: ["35 sec."],
    maxGenerationCount: 4,
    defaultGenerationCount: 1,
    canEditImages: true,
    canUseImagePrompt: true,
    maxImagePromptCount: 6,
    tags: [ModelTag.InstructiveEdit],
  }),
  new ImageModel({
    id: "gpt_image_1",
    tauriId: "gpt_image_1",
    fullName: "GPT Image 1 (GPT-4o)",
    category: "image",
    creator: ModelCreator.OpenAi,
    selectorName: "GPT Image 1 (GPT-4o)",
    selectorDescription: "Slow, ultra instructive model",
    selectorBadges: ["45 sec."],
    maxGenerationCount: 1,
    defaultGenerationCount: 1,
    tags: [ModelTag.InstructiveEdit],
    canEditImages: true,
    canUseImagePrompt: true,
    maxImagePromptCount: 6,
  }),
  new ImageModel({
    id: "flux_pro_kontext_max",
    tauriId: "flux_pro_kontext_max",
    fullName: "Flux Pro Kontext Max",
    category: "image",
    creator: ModelCreator.BlackForestLabs,
    selectorName: "Flux Pro Kontext Max",
    selectorDescription: "Fast instructive editing",
    selectorBadges: ["20 sec."],
    maxGenerationCount: 4,
    defaultGenerationCount: 4,
    canEditImages: true,
    tags: [ModelTag.InstructiveEdit],
  }),
  new ImageModel({
    id: "flux_pro_inpaint",
    tauriId: "flux_pro_1",
    fullName: "Flux Pro Inpaint",
    category: "image",
    creator: ModelCreator.BlackForestLabs,
    selectorName: "Flux Pro",
    selectorDescription: "Fast inpainting",
    selectorBadges: ["30 sec."],
    maxGenerationCount: 1, // NB: Fal only allows one image for some reason!
    defaultGenerationCount: 1, // NB: Fal only allows one image for some reason!
    canEditImages: true,
    usesInpaintingMask: true,
  }),
  new ImageModel({
    id: "flux_dev_juggernaut_inpaint",
    tauriId: "flux_dev_juggernaut",
    fullName: "Flux Dev Juggernaut Inpaint",
    category: "image",
    creator: ModelCreator.BlackForestLabs,
    selectorName: "Flux Dev Juggernaut",
    selectorDescription: "Fast inpainting",
    selectorBadges: ["15 sec."],
    maxGenerationCount: 4,
    defaultGenerationCount: 4,
    canEditImages: true,
    usesInpaintingMask: true,
  }),
];

export const IMAGE_MODELS_BY_ID : Map<string, ImageModel> = new Map(
  IMAGE_MODELS.map((model) => [model.id, model])
);

if (IMAGE_MODELS_BY_ID.size !== IMAGE_MODELS.length) {
  throw new Error("All image models must have unique IDs");
}
